internal static class Octopus.Client.AppDomainScanner : object {
    public static Type[] ScanForAllTypes();
}
public class Octopus.Client.AutomationEnvironments.AutomationEnvironmentProvider : object {
    private static ILog Logger;
    internal static Dictionary`2<AutomationEnvironment, String[]> KnownEnvironmentVariables;
    internal static IEnvironmentVariableReader environmentVariableReader;
    private static AutomationEnvironmentProvider();
    private static bool EnvironmentVariableHasValue(string variableName);
    public sealed virtual AutomationEnvironment DetermineAutomationEnvironment();
    public sealed virtual string DetermineAutomationEnvironmentWithVersion();
}
internal class Octopus.Client.AutomationEnvironments.EnvironmentVariableReader : object {
    public sealed virtual string GetVariableValue(string name);
}
internal interface Octopus.Client.AutomationEnvironments.IAutomationEnvironmentProvider {
    public abstract virtual AutomationEnvironment DetermineAutomationEnvironment();
    public abstract virtual string DetermineAutomationEnvironmentWithVersion();
}
internal interface Octopus.Client.AutomationEnvironments.IEnvironmentVariableReader {
    public abstract virtual string GetVariableValue(string name);
}
public class Octopus.Client.DefaultLinkResolver : object {
    private string baseUri;
    private string rootUri;
    public bool IsUsingSecureConnection { get; }
    public DefaultLinkResolver(Uri root, string allUrisStartWith);
    public sealed virtual bool get_IsUsingSecureConnection();
    public sealed virtual Uri Resolve(string link);
    public virtual string ToString();
}
public class Octopus.Client.Editors.AccountEditor`2 : object {
    protected IAccountRepository Repository;
    [CompilerGeneratedAttribute]
private TAccountResource <Instance>k__BackingField;
    public TAccountResource Instance { get; private set; }
    public AccountEditor`2(IAccountRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TAccountResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TAccountResource value);
    public TAccountEditor CreateOrModify(string name);
    public TAccountEditor FindByName(string name);
    public virtual TAccountEditor Customize(Action`1<TAccountResource> customize);
    public virtual TAccountEditor Save();
    public AccountUsageResource Usages();
}
public class Octopus.Client.Editors.AmazonWebServicesAccountEditor : AccountEditor`2<AmazonWebServicesAccountResource, AmazonWebServicesAccountEditor> {
    public AmazonWebServicesAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.Async.AccountEditor`2 : object {
    protected IAccountRepository Repository;
    [CompilerGeneratedAttribute]
private TAccountResource <Instance>k__BackingField;
    public TAccountResource Instance { get; private set; }
    public AccountEditor`2(IAccountRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TAccountResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TAccountResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.AccountEditor`2/<CreateOrModify>d__6")]
public Task`1<TAccountEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.AccountEditor`2/<FindByName>d__7")]
public Task`1<TAccountEditor> FindByName(string name);
    public virtual TAccountEditor Customize(Action`1<TAccountResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.AccountEditor`2/<Save>d__9")]
public virtual Task`1<TAccountEditor> Save();
    public Task`1<AccountUsageResource> Usages();
}
public class Octopus.Client.Editors.Async.AmazonWebServicesAccountEditor : AccountEditor`2<AmazonWebServicesAccountResource, AmazonWebServicesAccountEditor> {
    public AmazonWebServicesAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.Async.AzureServicePrincipalAccountEditor : AccountEditor`2<AzureServicePrincipalAccountResource, AzureServicePrincipalAccountEditor> {
    public AzureServicePrincipalAccountEditor(IAccountRepository repository);
    public Task`1<List`1<ResourceGroup>> ResourceGroups();
    public Task`1<List`1<WebSite>> WebSites();
    public Task`1<List`1<WebSlot>> WebSlots(WebSite site);
    public Task`1<List`1<AzureStorageAccount>> StorageAccounts();
}
public class Octopus.Client.Editors.Async.AzureSubscriptionAccountEditor : AccountEditor`2<AzureSubscriptionAccountResource, AzureSubscriptionAccountEditor> {
    public AzureSubscriptionAccountEditor(IAccountRepository repository);
    public Task`1<List`1<AzureStorageAccount>> StorageAccounts(AzureSubscriptionAccountResource account);
    public Task`1<List`1<WebSite>> WebSites(AzureSubscriptionAccountResource account);
    public Task`1<List`1<WebSite>> WebSites();
    public Task`1<List`1<WebSlot>> WebSlots(AzureSubscriptionAccountResource account, WebSite site);
    public Task`1<List`1<WebSlot>> WebSlots(WebSite site);
}
public class Octopus.Client.Editors.Async.CertificateEditor : object {
    private ICertificateRepository repository;
    [CompilerGeneratedAttribute]
private CertificateResource <Instance>k__BackingField;
    public CertificateResource Instance { get; private set; }
    public CertificateEditor(ICertificateRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual CertificateResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(CertificateResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.CertificateEditor/<Create>d__6")]
public Task`1<CertificateEditor> Create(string name, string certificateData);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.CertificateEditor/<FindByName>d__7")]
public Task`1<CertificateEditor> FindByName(string name);
    public sealed virtual CertificateEditor Customize(Action`1<CertificateResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.CertificateEditor/<Save>d__9")]
public sealed virtual Task`1<CertificateEditor> Save();
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.CertificateEditor/<Usages>d__10")]
public Task`1<CertificateUsageResource> Usages();
}
public class Octopus.Client.Editors.Async.ChannelEditor : object {
    private IChannelRepository repository;
    [CompilerGeneratedAttribute]
private ChannelResource <Instance>k__BackingField;
    public ChannelResource Instance { get; private set; }
    public ChannelEditor(IChannelRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ChannelResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ChannelResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ChannelEditor/<CreateOrModify>d__6")]
public Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ChannelEditor/<CreateOrModify>d__7")]
public Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name, string description);
    public ChannelEditor SetAsDefaultChannel();
    public ChannelEditor UsingLifecycle(LifecycleResource lifecycle);
    public ChannelEditor ClearRules();
    public ChannelEditor AddRule(ChannelVersionRuleResource rule);
    public ChannelEditor AddCommonRuleForAllActions(string versionRange, string tagRegex, DeploymentProcessResource process);
    public ChannelEditor AddRule(string versionRange, string tagRegex, DeploymentActionResource[] actions);
    public ChannelEditor ClearTenantTags();
    public ChannelEditor AddOrUpdateTenantTags(TagResource[] tags);
    public sealed virtual ChannelEditor Customize(Action`1<ChannelResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ChannelEditor/<Save>d__17")]
public sealed virtual Task`1<ChannelEditor> Save();
}
public class Octopus.Client.Editors.Async.DeploymentProcessEditor : object {
    private IDeploymentProcessRepository repository;
    [CompilerGeneratedAttribute]
private DeploymentProcessResource <Instance>k__BackingField;
    public DeploymentProcessResource Instance { get; private set; }
    public DeploymentProcessEditor(IDeploymentProcessRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual DeploymentProcessResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(DeploymentProcessResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.DeploymentProcessEditor/<Load>d__6")]
public Task`1<DeploymentProcessEditor> Load(string id);
    public DeploymentStepResource FindStep(string name);
    public DeploymentStepResource AddOrUpdateStep(string name);
    public DeploymentProcessEditor RemoveStep(string name);
    public DeploymentProcessEditor ClearSteps();
    public sealed virtual DeploymentProcessEditor Customize(Action`1<DeploymentProcessResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.DeploymentProcessEditor/<Save>d__12")]
public sealed virtual Task`1<DeploymentProcessEditor> Save();
}
public class Octopus.Client.Editors.Async.EnvironmentEditor : object {
    private IEnvironmentRepository repository;
    [CompilerGeneratedAttribute]
private EnvironmentResource <Instance>k__BackingField;
    public EnvironmentResource Instance { get; private set; }
    public EnvironmentEditor(IEnvironmentRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual EnvironmentResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(EnvironmentResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.EnvironmentEditor/<CreateOrModify>d__6")]
public Task`1<EnvironmentEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.EnvironmentEditor/<CreateOrModify>d__7")]
public Task`1<EnvironmentEditor> CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.EnvironmentEditor/<CreateOrModify>d__8")]
public Task`1<EnvironmentEditor> CreateOrModify(string name, string description);
    public sealed virtual EnvironmentEditor Customize(Action`1<EnvironmentResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.EnvironmentEditor/<Save>d__10")]
public sealed virtual Task`1<EnvironmentEditor> Save();
}
public interface Octopus.Client.Editors.Async.IResourceBuilder {
}
public interface Octopus.Client.Editors.Async.IResourceEditor`2 {
    public TResource Instance { get; }
    public abstract virtual TResource get_Instance();
    public abstract virtual TResourceBuilder Customize(Action`1<TResource> customize);
    public abstract virtual Task`1<TResourceBuilder> Save();
}
public class Octopus.Client.Editors.Async.LibraryVariableSetEditor : object {
    private ILibraryVariableSetRepository repository;
    private Lazy`1<Task`1<VariableSetEditor>> variables;
    [CompilerGeneratedAttribute]
private LibraryVariableSetResource <Instance>k__BackingField;
    public LibraryVariableSetResource Instance { get; private set; }
    public Task`1<VariableSetEditor> Variables { get; }
    public IVariableTemplateContainerEditor`1<LibraryVariableSetResource> VariableTemplates { get; }
    public LibraryVariableSetEditor(ILibraryVariableSetRepository repository, IVariableSetRepository variableSetRepository);
    [CompilerGeneratedAttribute]
public sealed virtual LibraryVariableSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(LibraryVariableSetResource value);
    public Task`1<VariableSetEditor> get_Variables();
    public IVariableTemplateContainerEditor`1<LibraryVariableSetResource> get_VariableTemplates();
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LibraryVariableSetEditor/<CreateOrModify>d__11")]
public Task`1<LibraryVariableSetEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LibraryVariableSetEditor/<CreateOrModify>d__12")]
public Task`1<LibraryVariableSetEditor> CreateOrModify(string name, string description);
    public sealed virtual LibraryVariableSetEditor Customize(Action`1<LibraryVariableSetResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LibraryVariableSetEditor/<Save>d__14")]
public sealed virtual Task`1<LibraryVariableSetEditor> Save();
}
public class Octopus.Client.Editors.Async.LifecycleEditor : object {
    private ILifecyclesRepository repository;
    [CompilerGeneratedAttribute]
private LifecycleResource <Instance>k__BackingField;
    public LifecycleResource Instance { get; private set; }
    public LifecycleEditor(ILifecyclesRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual LifecycleResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(LifecycleResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LifecycleEditor/<CreateOrModify>d__6")]
public Task`1<LifecycleEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LifecycleEditor/<CreateOrModify>d__7")]
public Task`1<LifecycleEditor> CreateOrModify(string name, string description);
    public PhaseResource AddOrUpdatePhase(string name);
    public LifecycleEditor AsSimplePromotionLifecycle(IEnumerable`1<EnvironmentResource> environments);
    public LifecycleEditor Clear();
    public sealed virtual LifecycleEditor Customize(Action`1<LifecycleResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LifecycleEditor/<Save>d__12")]
public sealed virtual Task`1<LifecycleEditor> Save();
}
public class Octopus.Client.Editors.Async.MachineEditor : object {
    private IMachineRepository repository;
    [CompilerGeneratedAttribute]
private MachineResource <Instance>k__BackingField;
    public MachineResource Instance { get; private set; }
    public MachineEditor(IMachineRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual MachineResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(MachineResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.MachineEditor/<CreateOrModify>d__6")]
public Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.MachineEditor/<CreateOrModify>d__7")]
public Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public sealed virtual MachineEditor Customize(Action`1<MachineResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.MachineEditor/<Save>d__9")]
public sealed virtual Task`1<MachineEditor> Save();
}
public class Octopus.Client.Editors.Async.ProjectChannelsEditor : object {
    private IChannelRepository repository;
    private ProjectResource owner;
    private List`1<ChannelEditor> trackedChannelBuilders;
    public ProjectChannelsEditor(IChannelRepository repository, ProjectResource owner);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectChannelsEditor/<CreateOrModify>d__4")]
public Task`1<ChannelEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectChannelsEditor/<CreateOrModify>d__5")]
public Task`1<ChannelEditor> CreateOrModify(string name, string description);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectChannelsEditor/<Delete>d__6")]
public Task`1<ProjectChannelsEditor> Delete(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectChannelsEditor/<SaveAll>d__7")]
public Task`1<ProjectChannelsEditor> SaveAll();
}
public class Octopus.Client.Editors.Async.ProjectEditor : object {
    private IProjectRepository repository;
    private Lazy`1<ProjectChannelsEditor> channels;
    private Lazy`1<Task`1<DeploymentProcessEditor>> deploymentProcess;
    private Lazy`1<ProjectTriggersEditor> triggers;
    private Lazy`1<Task`1<VariableSetEditor>> variables;
    [CompilerGeneratedAttribute]
private ProjectResource <Instance>k__BackingField;
    public ProjectResource Instance { get; private set; }
    public ProjectChannelsEditor Channels { get; }
    public Task`1<DeploymentProcessEditor> DeploymentProcess { get; }
    public ProjectTriggersEditor Triggers { get; }
    public Task`1<VariableSetEditor> Variables { get; }
    public IVariableTemplateContainerEditor`1<ProjectResource> VariableTemplates { get; }
    public ProjectEditor(IProjectRepository repository, IChannelRepository channelRepository, IDeploymentProcessRepository deploymentProcessRepository, IProjectTriggerRepository projectTriggerRepository, IVariableSetRepository variableSetRepository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectResource value);
    public ProjectChannelsEditor get_Channels();
    public Task`1<DeploymentProcessEditor> get_DeploymentProcess();
    public ProjectTriggersEditor get_Triggers();
    public Task`1<VariableSetEditor> get_Variables();
    public IVariableTemplateContainerEditor`1<ProjectResource> get_VariableTemplates();
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectEditor/<CreateOrModify>d__20")]
public Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectEditor/<CreateOrModify>d__21")]
public Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectEditor/<SetLogo>d__22")]
public Task`1<ProjectEditor> SetLogo(string logoFilePath);
    public ProjectEditor IncludingLibraryVariableSets(LibraryVariableSetResource[] libraryVariableSets);
    public sealed virtual ProjectEditor Customize(Action`1<ProjectResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectEditor/<Save>d__25")]
public sealed virtual Task`1<ProjectEditor> Save();
}
public class Octopus.Client.Editors.Async.ProjectGroupEditor : object {
    private IProjectGroupRepository repository;
    [CompilerGeneratedAttribute]
private ProjectGroupResource <Instance>k__BackingField;
    public ProjectGroupResource Instance { get; private set; }
    public ProjectGroupEditor(IProjectGroupRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectGroupResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectGroupResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectGroupEditor/<CreateOrModify>d__6")]
public Task`1<ProjectGroupEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectGroupEditor/<CreateOrModify>d__7")]
public Task`1<ProjectGroupEditor> CreateOrModify(string name, string description);
    public sealed virtual ProjectGroupEditor Customize(Action`1<ProjectGroupResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectGroupEditor/<Save>d__9")]
public sealed virtual Task`1<ProjectGroupEditor> Save();
}
public class Octopus.Client.Editors.Async.ProjectTriggerEditor : object {
    private IProjectTriggerRepository repository;
    [CompilerGeneratedAttribute]
private ProjectTriggerResource <Instance>k__BackingField;
    public ProjectTriggerResource Instance { get; private set; }
    public ProjectTriggerEditor(IProjectTriggerRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectTriggerResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectTriggerResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectTriggerEditor/<CreateOrModify>d__6")]
public Task`1<ProjectTriggerEditor> CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    public sealed virtual ProjectTriggerEditor Customize(Action`1<ProjectTriggerResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectTriggerEditor/<Save>d__8")]
public sealed virtual Task`1<ProjectTriggerEditor> Save();
}
public class Octopus.Client.Editors.Async.ProjectTriggersEditor : object {
    private IProjectTriggerRepository repository;
    private ProjectResource owner;
    private List`1<ProjectTriggerEditor> trackedProjectTriggerBuilders;
    public ProjectTriggersEditor(IProjectTriggerRepository repository, ProjectResource owner);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectTriggersEditor/<CreateOrModify>d__4")]
public Task`1<ProjectTriggerEditor> CreateOrModify(string name, TriggerFilterResource filter, TriggerActionResource action);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectTriggersEditor/<Delete>d__5")]
public Task`1<ProjectTriggersEditor> Delete(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectTriggersEditor/<SaveAll>d__6")]
public Task`1<ProjectTriggersEditor> SaveAll();
}
public class Octopus.Client.Editors.Async.RunbookEditor : object {
    private IRunbookRepository repository;
    private Lazy`1<Task`1<RunbookProcessEditor>> runbookProcess;
    [CompilerGeneratedAttribute]
private RunbookResource <Instance>k__BackingField;
    public RunbookResource Instance { get; private set; }
    public Task`1<RunbookProcessEditor> RunbookProcess { get; }
    public RunbookEditor(IRunbookRepository repository, IRunbookProcessRepository runbookProcessRepository);
    [CompilerGeneratedAttribute]
public sealed virtual RunbookResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(RunbookResource value);
    public Task`1<RunbookProcessEditor> get_RunbookProcess();
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.RunbookEditor/<CreateOrModify>d__9")]
public Task`1<RunbookEditor> CreateOrModify(ProjectResource project, string name, string description);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.RunbookEditor/<Load>d__10")]
public Task`1<RunbookEditor> Load(string id);
    public sealed virtual RunbookEditor Customize(Action`1<RunbookResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.RunbookEditor/<Save>d__12")]
public sealed virtual Task`1<RunbookEditor> Save();
}
public class Octopus.Client.Editors.Async.RunbookProcessEditor : object {
    private IRunbookProcessRepository repository;
    [CompilerGeneratedAttribute]
private RunbookProcessResource <Instance>k__BackingField;
    public RunbookProcessResource Instance { get; private set; }
    public RunbookProcessEditor(IRunbookProcessRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual RunbookProcessResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(RunbookProcessResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.RunbookProcessEditor/<Load>d__6")]
public Task`1<RunbookProcessEditor> Load(string id);
    public DeploymentStepResource FindStep(string name);
    public DeploymentStepResource AddOrUpdateStep(string name);
    public RunbookProcessEditor RemoveStep(string name);
    public RunbookProcessEditor ClearSteps();
    public sealed virtual RunbookProcessEditor Customize(Action`1<RunbookProcessResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.RunbookProcessEditor/<Save>d__12")]
public sealed virtual Task`1<RunbookProcessEditor> Save();
}
public class Octopus.Client.Editors.Async.SshKeyPairAccountEditor : AccountEditor`2<SshKeyPairAccountResource, SshKeyPairAccountEditor> {
    public SshKeyPairAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.Async.SubscriptionEditor : object {
    private ISubscriptionRepository repository;
    [CompilerGeneratedAttribute]
private SubscriptionResource <Instance>k__BackingField;
    public SubscriptionResource Instance { get; private set; }
    public SubscriptionEditor(ISubscriptionRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual SubscriptionResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(SubscriptionResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.SubscriptionEditor/<CreateOrModify>d__6")]
public Task`1<SubscriptionEditor> CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
    public sealed virtual SubscriptionEditor Customize(Action`1<SubscriptionResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.SubscriptionEditor/<Save>d__8")]
public sealed virtual Task`1<SubscriptionEditor> Save();
}
public class Octopus.Client.Editors.Async.TagSetEditor : object {
    private ITagSetRepository repository;
    [CompilerGeneratedAttribute]
private TagSetResource <Instance>k__BackingField;
    public TagSetResource Instance { get; private set; }
    public TagSetEditor(ITagSetRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TagSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TagSetResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TagSetEditor/<CreateOrModify>d__6")]
public Task`1<TagSetEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TagSetEditor/<CreateOrModify>d__7")]
public Task`1<TagSetEditor> CreateOrModify(string name, string description);
    public TagSetEditor ClearTags();
    public TagSetEditor AddOrUpdateTag(string name, string description, string color);
    public TagSetEditor RemoveTag(string name);
    public sealed virtual TagSetEditor Customize(Action`1<TagSetResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TagSetEditor/<Save>d__12")]
public sealed virtual Task`1<TagSetEditor> Save();
}
public class Octopus.Client.Editors.Async.TenantEditor : object {
    private ITenantRepository repository;
    private Lazy`1<Task`1<TenantVariablesEditor>> variables;
    [CompilerGeneratedAttribute]
private TenantResource <Instance>k__BackingField;
    public TenantResource Instance { get; private set; }
    public Task`1<TenantVariablesEditor> Variables { get; }
    public TenantEditor(ITenantRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TenantResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TenantResource value);
    public Task`1<TenantVariablesEditor> get_Variables();
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantEditor/<CreateOrModify>d__9")]
public Task`1<TenantEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantEditor/<CreateOrModify>d__10")]
public Task`1<TenantEditor> CreateOrModify(string name, string description, string cloneId);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantEditor/<SetLogo>d__11")]
public Task`1<TenantEditor> SetLogo(string logoFilePath);
    public TenantEditor ClearTags();
    public TenantEditor WithTag(TagResource tag);
    public TenantEditor ClearProjects();
    public TenantEditor ConnectToProjectAndEnvironments(ProjectResource project, EnvironmentResource[] environments);
    public sealed virtual TenantEditor Customize(Action`1<TenantResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantEditor/<Save>d__17")]
public sealed virtual Task`1<TenantEditor> Save();
}
public class Octopus.Client.Editors.Async.TenantVariablesEditor : object {
    private ITenantRepository repository;
    private TenantResource tenant;
    [CompilerGeneratedAttribute]
private TenantVariableResource <Instance>k__BackingField;
    public TenantVariableResource Instance { get; private set; }
    public TenantVariablesEditor(ITenantRepository repository, TenantResource tenant);
    [CompilerGeneratedAttribute]
public sealed virtual TenantVariableResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TenantVariableResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantVariablesEditor/<Load>d__7")]
public Task`1<TenantVariablesEditor> Load();
    public sealed virtual TenantVariablesEditor Customize(Action`1<TenantVariableResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantVariablesEditor/<Save>d__9")]
public sealed virtual Task`1<TenantVariablesEditor> Save();
}
public class Octopus.Client.Editors.Async.UsernamePasswordAccountEditor : AccountEditor`2<UsernamePasswordAccountResource, UsernamePasswordAccountEditor> {
    public UsernamePasswordAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.Async.VariableSetEditor : object {
    private IVariableSetRepository repository;
    [CompilerGeneratedAttribute]
private VariableSetResource <Instance>k__BackingField;
    public VariableSetResource Instance { get; private set; }
    public VariableSetEditor(IVariableSetRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual VariableSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(VariableSetResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.VariableSetEditor/<Load>d__6")]
public Task`1<VariableSetEditor> Load(string id);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive, string description);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, string description);
    public sealed virtual VariableSetEditor Customize(Action`1<VariableSetResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.VariableSetEditor/<Save>d__13")]
public sealed virtual Task`1<VariableSetEditor> Save();
}
public class Octopus.Client.Editors.Async.VariableTemplateContainerEditor`1 : object {
    private IVariableTemplateContainerEditor`1<TContainer> container;
    public VariableTemplateContainerEditor`1(IVariableTemplateContainerEditor`1<TContainer> container);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSingleLineTextTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateMultiLineTextTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSensitiveTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
}
public class Octopus.Client.Editors.Async.WorkerEditor : object {
    private IWorkerRepository repository;
    [CompilerGeneratedAttribute]
private WorkerResource <Instance>k__BackingField;
    public WorkerResource Instance { get; private set; }
    public WorkerEditor(IWorkerRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual WorkerResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(WorkerResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.WorkerEditor/<CreateOrModify>d__6")]
public Task`1<WorkerEditor> CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] workerpools);
    public sealed virtual WorkerEditor Customize(Action`1<WorkerResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.WorkerEditor/<Save>d__8")]
public sealed virtual Task`1<WorkerEditor> Save();
}
public class Octopus.Client.Editors.Async.WorkerPoolEditor : object {
    private IWorkerPoolRepository repository;
    [CompilerGeneratedAttribute]
private WorkerPoolResource <Instance>k__BackingField;
    public WorkerPoolResource Instance { get; private set; }
    public WorkerPoolEditor(IWorkerPoolRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual WorkerPoolResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(WorkerPoolResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.WorkerPoolEditor/<CreateOrModify>d__6")]
public Task`1<WorkerPoolEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.WorkerPoolEditor/<CreateOrModify>d__7")]
public Task`1<WorkerPoolEditor> CreateOrModify(string name, string description);
    public sealed virtual WorkerPoolEditor Customize(Action`1<WorkerPoolResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.WorkerPoolEditor/<Save>d__9")]
public sealed virtual Task`1<WorkerPoolEditor> Save();
}
public class Octopus.Client.Editors.AzureServicePrincipalAccountEditor : AccountEditor`2<AzureServicePrincipalAccountResource, AzureServicePrincipalAccountEditor> {
    public AzureServicePrincipalAccountEditor(IAccountRepository repository);
    public List`1<ResourceGroup> ResourceGroups();
    public List`1<WebSite> WebSites();
    public List`1<WebSlot> WebSiteSlots(WebSite site);
    public List`1<AzureStorageAccount> StorageAccounts();
}
public class Octopus.Client.Editors.AzureSubscriptionAccountEditor : AccountEditor`2<AzureSubscriptionAccountResource, AzureSubscriptionAccountEditor> {
    public AzureSubscriptionAccountEditor(IAccountRepository repository);
    public List`1<AzureStorageAccount> StorageAccounts(AzureSubscriptionAccountResource account);
    public List`1<WebSite> WebSites(AzureSubscriptionAccountResource account);
    public List`1<WebSite> WebSites();
    public List`1<WebSlot> WebSiteSlots(AzureSubscriptionAccountResource account, WebSite site);
    public List`1<WebSlot> WebSiteSlots(WebSite site);
}
public class Octopus.Client.Editors.CertificateEditor : object {
    private ICertificateRepository repository;
    [CompilerGeneratedAttribute]
private CertificateResource <Instance>k__BackingField;
    public CertificateResource Instance { get; private set; }
    public CertificateEditor(ICertificateRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual CertificateResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(CertificateResource value);
    public CertificateEditor Create(string name, string certificateData);
    public CertificateEditor FindByName(string name);
    public sealed virtual CertificateEditor Customize(Action`1<CertificateResource> customize);
    public sealed virtual CertificateEditor Save();
    public CertificateUsageResource Usages();
}
public class Octopus.Client.Editors.ChannelEditor : object {
    private IChannelRepository repository;
    [CompilerGeneratedAttribute]
private ChannelResource <Instance>k__BackingField;
    public ChannelResource Instance { get; private set; }
    public ChannelEditor(IChannelRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ChannelResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ChannelResource value);
    public ChannelEditor CreateOrModify(ProjectResource project, string name);
    public ChannelEditor CreateOrModify(ProjectResource project, string name, string description);
    public ChannelEditor SetAsDefaultChannel();
    public ChannelEditor UsingLifecycle(LifecycleResource lifecycle);
    public ChannelEditor ClearRules();
    public ChannelEditor AddRule(ChannelVersionRuleResource rule);
    public ChannelEditor AddCommonRuleForAllActions(string versionRange, string tagRegex, DeploymentProcessResource process);
    public ChannelEditor AddRule(string versionRange, string tagRegex, DeploymentActionResource[] actions);
    public ChannelEditor ClearTenantTags();
    public ChannelEditor AddOrUpdateTenantTags(TagResource[] tags);
    public sealed virtual ChannelEditor Customize(Action`1<ChannelResource> customize);
    public sealed virtual ChannelEditor Save();
}
public class Octopus.Client.Editors.DeploymentProcessEditor : object {
    private IDeploymentProcessRepository repository;
    [CompilerGeneratedAttribute]
private DeploymentProcessResource <Instance>k__BackingField;
    public DeploymentProcessResource Instance { get; private set; }
    public DeploymentProcessEditor(IDeploymentProcessRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual DeploymentProcessResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(DeploymentProcessResource value);
    public DeploymentProcessEditor Load(string id);
    public DeploymentStepResource FindStep(string name);
    public DeploymentStepResource AddOrUpdateStep(string name);
    public DeploymentProcessEditor RemoveStep(string name);
    public DeploymentProcessEditor ClearSteps();
    public sealed virtual DeploymentProcessEditor Customize(Action`1<DeploymentProcessResource> customize);
    public sealed virtual DeploymentProcessEditor Save();
}
public class Octopus.Client.Editors.EnvironmentEditor : object {
    private IEnvironmentRepository repository;
    [CompilerGeneratedAttribute]
private EnvironmentResource <Instance>k__BackingField;
    public EnvironmentResource Instance { get; private set; }
    public EnvironmentEditor(IEnvironmentRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual EnvironmentResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(EnvironmentResource value);
    public EnvironmentEditor CreateOrModify(string name);
    public EnvironmentEditor CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
    public EnvironmentEditor CreateOrModify(string name, string description);
    public sealed virtual EnvironmentEditor Customize(Action`1<EnvironmentResource> customize);
    public sealed virtual EnvironmentEditor Save();
}
public interface Octopus.Client.Editors.IResourceBuilder {
}
public interface Octopus.Client.Editors.IResourceEditor`2 {
    public TResource Instance { get; }
    public abstract virtual TResource get_Instance();
    public abstract virtual TResourceBuilder Customize(Action`1<TResource> customize);
    public abstract virtual TResourceBuilder Save();
}
public class Octopus.Client.Editors.LibraryVariableSetEditor : object {
    private ILibraryVariableSetRepository repository;
    private Lazy`1<VariableSetEditor> variables;
    [CompilerGeneratedAttribute]
private LibraryVariableSetResource <Instance>k__BackingField;
    public LibraryVariableSetResource Instance { get; private set; }
    public VariableSetEditor Variables { get; }
    public IVariableTemplateContainerEditor`1<LibraryVariableSetResource> VariableTemplates { get; }
    public LibraryVariableSetEditor(ILibraryVariableSetRepository repository, IVariableSetRepository variableSetRepository);
    [CompilerGeneratedAttribute]
public sealed virtual LibraryVariableSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(LibraryVariableSetResource value);
    public VariableSetEditor get_Variables();
    public IVariableTemplateContainerEditor`1<LibraryVariableSetResource> get_VariableTemplates();
    public LibraryVariableSetEditor CreateOrModify(string name);
    public LibraryVariableSetEditor CreateOrModify(string name, string description);
    public LibraryVariableSetEditor Load(string id);
    public sealed virtual LibraryVariableSetEditor Customize(Action`1<LibraryVariableSetResource> customize);
    public sealed virtual LibraryVariableSetEditor Save();
    public LibraryVariableSetUsageResource Usages();
}
public class Octopus.Client.Editors.LifecycleEditor : object {
    private ILifecyclesRepository repository;
    [CompilerGeneratedAttribute]
private LifecycleResource <Instance>k__BackingField;
    public LifecycleResource Instance { get; private set; }
    public LifecycleEditor(ILifecyclesRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual LifecycleResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(LifecycleResource value);
    public LifecycleEditor CreateOrModify(string name);
    public LifecycleEditor CreateOrModify(string name, string description);
    public PhaseResource AddOrUpdatePhase(string name);
    public LifecycleEditor AsSimplePromotionLifecycle(IEnumerable`1<EnvironmentResource> environments);
    public LifecycleEditor Clear();
    public sealed virtual LifecycleEditor Customize(Action`1<LifecycleResource> customize);
    public sealed virtual LifecycleEditor Save();
}
public class Octopus.Client.Editors.MachineEditor : object {
    private IMachineRepository repository;
    [CompilerGeneratedAttribute]
private MachineResource <Instance>k__BackingField;
    public MachineResource Instance { get; private set; }
    public MachineEditor(IMachineRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual MachineResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(MachineResource value);
    public MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    public MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public sealed virtual MachineEditor Customize(Action`1<MachineResource> customize);
    public sealed virtual MachineEditor Save();
}
public class Octopus.Client.Editors.ProjectChannelsEditor : object {
    private IChannelRepository repository;
    private ProjectResource owner;
    private List`1<ChannelEditor> trackedChannelBuilders;
    public ProjectChannelsEditor(IChannelRepository repository, ProjectResource owner);
    public ChannelEditor CreateOrModify(string name);
    public ChannelEditor CreateOrModify(string name, string description);
    public ProjectChannelsEditor Delete(string name);
    public ProjectChannelsEditor SaveAll();
}
public class Octopus.Client.Editors.ProjectEditor : object {
    private IProjectRepository repository;
    private Lazy`1<ProjectChannelsEditor> channels;
    private Lazy`1<DeploymentProcessEditor> deploymentProcess;
    private Lazy`1<ProjectTriggersEditor> triggers;
    private Lazy`1<VariableSetEditor> variables;
    [CompilerGeneratedAttribute]
private ProjectResource <Instance>k__BackingField;
    public ProjectResource Instance { get; private set; }
    public ProjectChannelsEditor Channels { get; }
    public DeploymentProcessEditor DeploymentProcess { get; }
    public ProjectTriggersEditor Triggers { get; }
    public VariableSetEditor Variables { get; }
    public IVariableTemplateContainerEditor`1<ProjectResource> VariableTemplates { get; }
    public ProjectEditor(IProjectRepository repository, IChannelRepository channelRepository, IDeploymentProcessRepository deploymentProcessRepository, IProjectTriggerRepository projectTriggerRepository, IVariableSetRepository variableSetRepository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectResource value);
    public ProjectChannelsEditor get_Channels();
    public DeploymentProcessEditor get_DeploymentProcess();
    public ProjectTriggersEditor get_Triggers();
    public VariableSetEditor get_Variables();
    public IVariableTemplateContainerEditor`1<ProjectResource> get_VariableTemplates();
    public ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    public ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    public ProjectEditor SetLogo(string logoFilePath);
    public ProjectEditor IncludingLibraryVariableSets(LibraryVariableSetResource[] libraryVariableSets);
    public sealed virtual ProjectEditor Customize(Action`1<ProjectResource> customize);
    public sealed virtual ProjectEditor Save();
}
public class Octopus.Client.Editors.ProjectGroupEditor : object {
    private IProjectGroupRepository repository;
    [CompilerGeneratedAttribute]
private ProjectGroupResource <Instance>k__BackingField;
    public ProjectGroupResource Instance { get; private set; }
    public ProjectGroupEditor(IProjectGroupRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectGroupResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectGroupResource value);
    public ProjectGroupEditor CreateOrModify(string name);
    public ProjectGroupEditor CreateOrModify(string name, string description);
    public sealed virtual ProjectGroupEditor Customize(Action`1<ProjectGroupResource> customize);
    public sealed virtual ProjectGroupEditor Save();
}
public class Octopus.Client.Editors.ProjectTriggerEditor : object {
    private IProjectTriggerRepository repository;
    [CompilerGeneratedAttribute]
private ProjectTriggerResource <Instance>k__BackingField;
    public ProjectTriggerResource Instance { get; private set; }
    public ProjectTriggerEditor(IProjectTriggerRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectTriggerResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectTriggerResource value);
    public ProjectTriggerEditor CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    public sealed virtual ProjectTriggerEditor Customize(Action`1<ProjectTriggerResource> customize);
    public sealed virtual ProjectTriggerEditor Save();
}
public class Octopus.Client.Editors.ProjectTriggersEditor : object {
    private IProjectTriggerRepository repository;
    private ProjectResource owner;
    private List`1<ProjectTriggerEditor> trackedProjectTriggerBuilders;
    public ProjectTriggersEditor(IProjectTriggerRepository repository, ProjectResource owner);
    public ProjectTriggerEditor CreateOrModify(string name, TriggerFilterResource filter, TriggerActionResource action);
    public ProjectTriggersEditor Delete(string name);
    public ProjectTriggersEditor SaveAll();
}
public class Octopus.Client.Editors.RunbookEditor : object {
    private IRunbookRepository repository;
    private Lazy`1<RunbookProcessEditor> runbookProcess;
    [CompilerGeneratedAttribute]
private RunbookResource <Instance>k__BackingField;
    public RunbookResource Instance { get; private set; }
    public RunbookProcessEditor RunbookProcess { get; }
    public RunbookEditor(IRunbookRepository repository, IRunbookProcessRepository runbookProcessRepository);
    [CompilerGeneratedAttribute]
public sealed virtual RunbookResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(RunbookResource value);
    public RunbookProcessEditor get_RunbookProcess();
    public RunbookEditor CreateOrModify(ProjectResource project, string name, string description);
    public RunbookEditor Load(string id);
    public sealed virtual RunbookEditor Customize(Action`1<RunbookResource> customize);
    public sealed virtual RunbookEditor Save();
}
public class Octopus.Client.Editors.RunbookProcessEditor : object {
    private IRunbookProcessRepository repository;
    [CompilerGeneratedAttribute]
private RunbookProcessResource <Instance>k__BackingField;
    public RunbookProcessResource Instance { get; private set; }
    public RunbookProcessEditor(IRunbookProcessRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual RunbookProcessResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(RunbookProcessResource value);
    public RunbookProcessEditor Load(string id);
    public DeploymentStepResource FindStep(string name);
    public DeploymentStepResource AddOrUpdateStep(string name);
    public RunbookProcessEditor RemoveStep(string name);
    public RunbookProcessEditor ClearSteps();
    public sealed virtual RunbookProcessEditor Customize(Action`1<RunbookProcessResource> customize);
    public sealed virtual RunbookProcessEditor Save();
}
public class Octopus.Client.Editors.SshKeyPairAccountEditor : AccountEditor`2<SshKeyPairAccountResource, SshKeyPairAccountEditor> {
    public SshKeyPairAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.SubscriptionEditor : object {
    private ISubscriptionRepository repository;
    [CompilerGeneratedAttribute]
private SubscriptionResource <Instance>k__BackingField;
    public SubscriptionResource Instance { get; private set; }
    public SubscriptionEditor(ISubscriptionRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual SubscriptionResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(SubscriptionResource value);
    public SubscriptionEditor CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
    public sealed virtual SubscriptionEditor Customize(Action`1<SubscriptionResource> customize);
    public sealed virtual SubscriptionEditor Save();
}
public class Octopus.Client.Editors.TagSetEditor : object {
    private ITagSetRepository repository;
    [CompilerGeneratedAttribute]
private TagSetResource <Instance>k__BackingField;
    public TagSetResource Instance { get; private set; }
    public TagSetEditor(ITagSetRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TagSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TagSetResource value);
    public TagSetEditor CreateOrModify(string name);
    public TagSetEditor CreateOrModify(string name, string description);
    public TagSetEditor ClearTags();
    public TagSetEditor AddOrUpdateTag(string name, string description, string color);
    public TagSetEditor RemoveTag(string name);
    public sealed virtual TagSetEditor Customize(Action`1<TagSetResource> customize);
    public sealed virtual TagSetEditor Save();
}
public class Octopus.Client.Editors.TenantEditor : object {
    private ITenantRepository repository;
    private Lazy`1<TenantVariablesEditor> variables;
    [CompilerGeneratedAttribute]
private TenantResource <Instance>k__BackingField;
    public TenantResource Instance { get; private set; }
    public TenantVariablesEditor Variables { get; }
    public TenantEditor(ITenantRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TenantResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TenantResource value);
    public TenantVariablesEditor get_Variables();
    public TenantEditor CreateOrModify(string name);
    public TenantEditor CreateOrModify(string name, string description, string cloneId);
    public TenantEditor SetLogo(string logoFilePath);
    public TenantEditor ClearTags();
    public TenantEditor WithTag(TagResource tag);
    public TenantEditor ClearProjects();
    public TenantEditor ConnectToProjectAndEnvironments(ProjectResource project, EnvironmentResource[] environments);
    public sealed virtual TenantEditor Customize(Action`1<TenantResource> customize);
    public sealed virtual TenantEditor Save();
}
public class Octopus.Client.Editors.TenantVariablesEditor : object {
    private ITenantRepository repository;
    private TenantResource tenant;
    [CompilerGeneratedAttribute]
private TenantVariableResource <Instance>k__BackingField;
    public TenantVariableResource Instance { get; private set; }
    public TenantVariablesEditor(ITenantRepository repository, TenantResource tenant);
    [CompilerGeneratedAttribute]
public sealed virtual TenantVariableResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TenantVariableResource value);
    public TenantVariablesEditor Load();
    public sealed virtual TenantVariablesEditor Customize(Action`1<TenantVariableResource> customize);
    public sealed virtual TenantVariablesEditor Save();
}
public class Octopus.Client.Editors.UsernamePasswordAccountEditor : AccountEditor`2<UsernamePasswordAccountResource, UsernamePasswordAccountEditor> {
    public UsernamePasswordAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.VariableSetEditor : object {
    private IVariableSetRepository repository;
    [CompilerGeneratedAttribute]
private VariableSetResource <Instance>k__BackingField;
    public VariableSetResource Instance { get; private set; }
    public VariableSetEditor(IVariableSetRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual VariableSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(VariableSetResource value);
    public VariableSetEditor Load(string id);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive, string description);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, string description);
    public sealed virtual VariableSetEditor Customize(Action`1<VariableSetResource> customize);
    public sealed virtual VariableSetEditor Save();
}
public class Octopus.Client.Editors.VariableTemplateContainerEditor`1 : object {
    private IVariableTemplateContainerEditor`1<TContainer> container;
    public VariableTemplateContainerEditor`1(IVariableTemplateContainerEditor`1<TContainer> container);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSingleLineTextTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateMultiLineTextTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSensitiveTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
}
public class Octopus.Client.Editors.WorkerEditor : object {
    private IWorkerRepository repository;
    [CompilerGeneratedAttribute]
private WorkerResource <Instance>k__BackingField;
    public WorkerResource Instance { get; private set; }
    public WorkerEditor(IWorkerRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual WorkerResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(WorkerResource value);
    public WorkerEditor CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] pools);
    public sealed virtual WorkerEditor Customize(Action`1<WorkerResource> customize);
    public sealed virtual WorkerEditor Save();
}
public class Octopus.Client.Editors.WorkerPoolEditor : object {
    private IWorkerPoolRepository repository;
    [CompilerGeneratedAttribute]
private WorkerPoolResource <Instance>k__BackingField;
    public WorkerPoolResource Instance { get; private set; }
    public WorkerPoolEditor(IWorkerPoolRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual WorkerPoolResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(WorkerPoolResource value);
    public WorkerPoolEditor CreateOrModify(string name);
    public WorkerPoolEditor CreateOrModify(string name, string description);
    public sealed virtual WorkerPoolEditor Customize(Action`1<WorkerPoolResource> customize);
    public sealed virtual WorkerPoolEditor Save();
}
public class Octopus.Client.Exceptions.DefaultSpaceNotFoundException : Exception {
    public DefaultSpaceNotFoundException(IHaveSpaceResource spaceResource);
}
public class Octopus.Client.Exceptions.OctopusDeserializationException : OctopusException {
    public OctopusDeserializationException(int httpStatusCode, string message);
    public OctopusDeserializationException(int httpStatusCode, string message, Exception innerException);
}
public abstract class Octopus.Client.Exceptions.OctopusException : Exception {
    private int httpStatusCode;
    [CompilerGeneratedAttribute]
private string <HelpText>k__BackingField;
    public int HttpStatusCode { get; }
    public string HelpText { get; internal set; }
    protected OctopusException(int httpStatusCode, string message);
    protected OctopusException(int httpStatusCode, string message, Exception innerException);
    protected OctopusException(SerializationInfo info, StreamingContext context);
    public int get_HttpStatusCode();
    [CompilerGeneratedAttribute]
public string get_HelpText();
    [CompilerGeneratedAttribute]
internal void set_HelpText(string value);
}
public static class Octopus.Client.Exceptions.OctopusExceptionFactory : object {
    public static OctopusException CreateException(WebException webException, HttpWebResponse response);
    [AsyncStateMachineAttribute("Octopus.Client.Exceptions.OctopusExceptionFactory/<CreateException>d__1")]
public static Task`1<OctopusException> CreateException(HttpResponseMessage response);
    public static OctopusException CreateException(int statusCode, string body);
    private static string GetErrorMessage(string body);
}
public class Octopus.Client.Exceptions.OctopusMethodNotAllowedFoundException : OctopusException {
    public OctopusMethodNotAllowedFoundException(string message);
}
public class Octopus.Client.Exceptions.OctopusResourceNotFoundException : OctopusException {
    public OctopusResourceNotFoundException(string message);
}
public class Octopus.Client.Exceptions.OctopusSecurityException : OctopusException {
    public OctopusSecurityException(int httpStatusCode, string message);
}
public class Octopus.Client.Exceptions.OctopusServerException : OctopusException {
    public OctopusServerException(int httpStatusCode, string message);
}
public class Octopus.Client.Exceptions.OctopusValidationException : OctopusException {
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<string> <Errors>k__BackingField;
    [DynamicAttribute]
[CompilerGeneratedAttribute]
private object <Details>k__BackingField;
    public string ErrorMessage { get; private set; }
    public ReadOnlyCollection`1<string> Errors { get; private set; }
    [DynamicAttribute]
public object Details { get; private set; }
    public OctopusValidationException(string message, ICollection`1<string> errors);
    public OctopusValidationException(int httpStatusCode, string message, ICollection`1<string> errors);
    public OctopusValidationException(int httpStatusCode, string message, ICollection`1<string> errors, object details);
    public TDetails DetailsAs();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
private void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<string> get_Errors();
    [CompilerGeneratedAttribute]
private void set_Errors(ReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public object get_Details();
    [CompilerGeneratedAttribute]
private void set_Details(object value);
}
public class Octopus.Client.Exceptions.OperationNotSupportedByOctopusServerException : OctopusException {
    [CompilerGeneratedAttribute]
private string <RequiredOctopusVersion>k__BackingField;
    public string RequiredOctopusVersion { get; }
    public OperationNotSupportedByOctopusServerException(string message, string requiresVersion);
    [CompilerGeneratedAttribute]
public string get_RequiredOctopusVersion();
}
public class Octopus.Client.Exceptions.ResourceSpaceDoesNotMatchRepositorySpaceException : Exception {
    public ResourceSpaceDoesNotMatchRepositorySpaceException(IHaveSpaceResource spaceResource, SpaceResource repositorySpace);
}
public class Octopus.Client.Exceptions.UnsupportedApiVersionException : OctopusException {
    public UnsupportedApiVersionException(string message);
}
public abstract class Octopus.Client.Extensibility.Attributes.ApiPropertyAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Extensibility.Attributes.WriteableAttribute : ApiPropertyAttribute {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Extensibility.Attributes.WriteableOnCreateAttribute : ApiPropertyAttribute {
}
public abstract class Octopus.Client.Extensibility.Extensions.Infrastructure.Configuration.ExtensionConfigurationResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    [DisplayNameAttribute("Is Enabled")]
[DescriptionAttribute("Whether or not this extension is enabled")]
[RequiredAttribute]
[WriteableAttribute]
public bool IsEnabled { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Extensibility.Href : object {
    private string link;
    public Href(string link);
    public string AsString();
    public sealed virtual bool Equals(Href other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(Href left, Href right);
    public static bool op_Inequality(Href left, Href right);
    public static string op_Implicit(Href href);
    public static Href op_Implicit(string href);
}
public interface Octopus.Client.Extensibility.IHaveSpaceResource {
    public string SpaceId { get; public set; }
    public abstract virtual string get_SpaceId();
    public abstract virtual void set_SpaceId(string value);
}
public interface Octopus.Client.Extensibility.INamedResource {
    public string Name { get; }
    public abstract virtual string get_Name();
}
public interface Octopus.Client.Extensibility.IResource {
    public string Id { get; }
    public LinkCollection Links { get; public set; }
    public abstract virtual string get_Id();
    public abstract virtual LinkCollection get_Links();
    public abstract virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Extensibility.LinkCollection : Dictionary`2<string, Href> {
    public LinkCollection Add(string name, Href value);
    public static LinkCollection Self(Href self);
}
[ExtensionAttribute]
internal static class Octopus.Client.Extensions.AssemblyExtensions : object {
    [ExtensionAttribute]
public static string GetInformationalVersion(Type type);
    [ExtensionAttribute]
public static SemanticVersion GetSemanticVersion(Type type);
}
[ExtensionAttribute]
internal static class Octopus.Client.Extensions.EnumerableExtensions : object {
    [IteratorStateMachineAttribute("Octopus.Client.Extensions.EnumerableExtensions/<TakeWhile>d__0`1")]
[ExtensionAttribute]
public static IEnumerable`1<T> TakeWhile(IEnumerable`1<T> source, Func`2<T, bool> predicate, bool inclusive);
}
[ExtensionAttribute]
internal static class Octopus.Client.Extensions.LazyExtensions : object {
    [ExtensionAttribute]
public static T LoadValue(Lazy`1<T> lazy);
}
[ExtensionAttribute]
public static class Octopus.Client.Extensions.StringExtensions : object {
    [ExtensionAttribute]
public static string StringJoin(IEnumerable`1<string> items, string separator);
    [ExtensionAttribute]
public static string NewLineSeparate(IEnumerable`1<object> items);
    [ExtensionAttribute]
public static string CommaSeparate(IEnumerable`1<object> items);
    [ExtensionAttribute]
public static string ToCamelCase(string s);
}
[ExtensionAttribute]
public static class Octopus.Client.Extensions.TaskStateExtensions : object {
    [ExtensionAttribute]
public static bool IsCompleted(TaskState state);
}
[ExtensionAttribute]
public static class Octopus.Client.Extensions.TypeExtensions : object {
    [ExtensionAttribute]
public static object GetDefault(Type t);
    [ExtensionAttribute]
public static AccountType DetermineAccountType(Type type);
    [ExtensionAttribute]
internal static bool IsClosedTypeOfOpenGeneric(Type type, Type openGenericType);
    [ExtensionAttribute]
internal static IEnumerable`1<Type> CompleteTypeHierarchy(Type type);
    [IteratorStateMachineAttribute("Octopus.Client.Extensions.TypeExtensions/<DepthFirst>d__4`1")]
[ExtensionAttribute]
internal static IEnumerable`1<T> DepthFirst(IEnumerable`1<T> items, Func`2<T, IEnumerable`1<T>> childrenFunc);
}
public static class Octopus.Client.Extensions.UriExtensions : object {
    private static Char[] HexUpperChars;
    private static UriExtensions();
    public static string HexEscape(char character);
    private static void EscapeAsciiChar(char ch, Char[] to, Int32& pos);
}
internal class Octopus.Client.Features.DeltaCompression : object {
    private static ILog Logger;
    private static DeltaCompression();
    public static bool CreateDelta(Stream contents, PackageSignatureResource signatureResult, string deltaTempFile);
}
internal class Octopus.Client.HttpRouting.HttpRouteExtractor : object {
    private static Regex TokensRegex;
    private ConcurrentDictionary`2<Type, HttpMethod> httpMethodsByPayloadType;
    private ConcurrentDictionary`2<Type, Type> httpRouteTypesByPayloadType;
    private Func`1<Type[]> scanForHttpRouteTypes;
    public HttpRouteExtractor(Func`1<Type[]> scanForHttpRouteTypes);
    private static HttpRouteExtractor();
    public sealed virtual HttpMethod ExtractHttpMethod(ICommand`2<TCommand, TResponse> command);
    public sealed virtual HttpMethod ExtractHttpMethod(IRequest`2<TRequest, TResponse> request);
    public sealed virtual Uri ExtractHttpRoute(ICommand`2<TCommand, TResponse> command);
    public sealed virtual Uri ExtractHttpRoute(IRequest`2<TRequest, TResponse> request);
    private Uri ExtractHttpRouteInternal(HttpMethod httpMethod, T payload, Type routeType);
    private bool TryReplaceAllRouteTokens(HttpMethod httpMethod, string routeTemplate, String[] tokens, object payload, String& route);
    private static IDictionary`2<string, object> PayloadProperties(object payload);
    private Type FindRouteType(Type httpRouteTypeInterface);
    private static HttpMethod MapFromOctopusHttpMethodToSystemNetHttpMethod(HttpMethod httpMethod);
    [CompilerGeneratedAttribute]
private HttpMethod <ExtractHttpMethod>b__5_0(Type t);
    [CompilerGeneratedAttribute]
private HttpMethod <ExtractHttpMethod>b__6_0(Type t);
    [CompilerGeneratedAttribute]
private Type <FindRouteType>b__12_0(Type t);
}
public interface Octopus.Client.HttpRouting.IHttpRouteExtractor {
    public abstract virtual HttpMethod ExtractHttpMethod(ICommand`2<TCommand, TResponse> command);
    public abstract virtual HttpMethod ExtractHttpMethod(IRequest`2<TRequest, TResponse> request);
    public abstract virtual Uri ExtractHttpRoute(ICommand`2<TCommand, TResponse> command);
    public abstract virtual Uri ExtractHttpRoute(IRequest`2<TRequest, TResponse> request);
}
public class Octopus.Client.HttpRouting.PayloadRoutingException : OctopusException {
    public PayloadRoutingException(string message);
    public PayloadRoutingException(string message, Exception inner);
    protected PayloadRoutingException(SerializationInfo info, StreamingContext context);
}
internal static class Octopus.Client.IdValueConstant : object {
    public static string IdAll;
}
public interface Octopus.Client.IHttpOctopusClient {
    [CompilerGeneratedAttribute]
public abstract virtual void add_BeforeSendingHttpRequest(Action`1<WebRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_BeforeSendingHttpRequest(Action`1<WebRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_AfterReceivingHttpResponse(Action`1<WebResponse> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_AfterReceivingHttpResponse(Action`1<WebResponse> value);
}
public interface Octopus.Client.ILinkResolver {
    public bool IsUsingSecureConnection { get; }
    public abstract virtual bool get_IsUsingSecureConnection();
    public abstract virtual Uri Resolve(string link);
}
public interface Octopus.Client.IOctopusAsyncClient {
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute("This call is a blocking call. For a non-blocking call, access the root document through the IOctopusSystemAsyncRepository instead: client.Repository.LoadRootDocument()", "False")]
public RootResource RootDocument { get; }
    public IOctopusAsyncRepository Repository { get; }
    public bool IsUsingSecureConnection { get; }
    public abstract virtual RootResource get_RootDocument();
    [CompilerGeneratedAttribute]
public abstract virtual void add_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_BeforeSendingHttpRequest(Action`1<HttpRequestMessage> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_BeforeSendingHttpRequest(Action`1<HttpRequestMessage> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_AfterReceivedHttpResponse(Action`1<HttpResponseMessage> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_AfterReceivedHttpResponse(Action`1<HttpResponseMessage> value);
    public abstract virtual IOctopusAsyncRepository get_Repository();
    public abstract virtual bool get_IsUsingSecureConnection();
    public abstract virtual Task`1<ResourceCollection`1<TResource>> List(string path, object pathParameters);
    public abstract virtual Task`1<IReadOnlyList`1<TResource>> ListAll(string path, object pathParameters);
    public abstract virtual Task Paginate(string path, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public abstract virtual Task Paginate(string path, object pathParameters, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public abstract virtual Task`1<TResource> Get(string path, object pathParameters);
    public abstract virtual Task`1<TResource> Create(string path, TResource resource, object pathParameters);
    public abstract virtual Task Post(string path, TResource resource, object pathParameters);
    public abstract virtual Task`1<TResponse> Post(string path, TResource resource, object pathParameters);
    public abstract virtual Task Post(string path);
    public abstract virtual Task Put(string path, TResource resource);
    public abstract virtual Task Put(string path);
    public abstract virtual Task Put(string path, TResource resource, object pathParameters);
    public abstract virtual Task`1<TResource> Update(string path, TResource resource, object pathParameters);
    public abstract virtual Task Delete(string path, object pathParameters, object resource);
    public abstract virtual Task`1<Stream> GetContent(string path, object pathParameters);
    public abstract virtual Task PutContent(string path, Stream contentStream);
    public abstract virtual Uri QualifyUri(string path, object parameters);
    public abstract virtual Task SignIn(LoginCommand loginCommand);
    public abstract virtual Task SignOut();
    public abstract virtual IOctopusSpaceAsyncRepository ForSpace(SpaceResource space);
    public abstract virtual IOctopusSystemAsyncRepository ForSystem();
    public abstract virtual Task`1<TResponse> Do(ICommand`2<TCommand, TResponse> command, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResponse> Request(IRequest`2<TRequest, TResponse> request, CancellationToken cancellationToken);
}
public interface Octopus.Client.IOctopusAsyncRepository {
}
public interface Octopus.Client.IOctopusClient {
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Access the root document through the IOctopusSystemRepository instead: client.Repository.LoadRootDocument()", "False")]
public RootResource RootDocument { get; }
    public IOctopusRepository Repository { get; }
    public bool IsUsingSecureConnection { get; }
    public abstract virtual RootResource get_RootDocument();
    public abstract virtual IOctopusRepository get_Repository();
    public abstract virtual bool get_IsUsingSecureConnection();
    [CompilerGeneratedAttribute]
public abstract virtual void add_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    public abstract virtual ResourceCollection`1<TResource> List(string path, object pathParameters);
    public abstract virtual IReadOnlyList`1<TResource> ListAll(string path, object pathParameters);
    public abstract virtual void Paginate(string path, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public abstract virtual void Paginate(string path, object pathParameters, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public abstract virtual TResource Get(string path, object pathParameters);
    public abstract virtual TResource Create(string path, TResource resource, object pathParameters);
    public abstract virtual void Post(string path, TResource resource, object pathParameters);
    public abstract virtual TResponse Post(string path, TResource resource, object pathParameters);
    public abstract virtual void Post(string path);
    public abstract virtual void Put(string path, TResource resource);
    public abstract virtual void Put(string path);
    public abstract virtual void Put(string path, TResource resource, object pathParameters);
    public abstract virtual TResource Update(string path, TResource resource, object pathParameters);
    public abstract virtual void Delete(string path, object pathParameters, object resource);
    public abstract virtual Stream GetContent(string path, object pathParameters);
    public abstract virtual void PutContent(string path, Stream contentStream);
    public abstract virtual Uri QualifyUri(string path, object parameters);
    public abstract virtual void SignIn(LoginCommand loginCommand);
    public abstract virtual void SignOut();
    public abstract virtual IOctopusSpaceRepository ForSpace(SpaceResource space);
    public abstract virtual IOctopusSystemRepository ForSystem();
    public abstract virtual TResponse Do(ICommand`2<TCommand, TResponse> command, CancellationToken cancellationToken);
    public abstract virtual TResponse Request(IRequest`2<TRequest, TResponse> request, CancellationToken cancellationToken);
}
public interface Octopus.Client.IOctopusClientFactory {
    public abstract virtual IOctopusClient CreateClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
    public abstract virtual Task`1<IOctopusAsyncClient> CreateAsyncClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
}
public interface Octopus.Client.IOctopusCommonAsyncRepository {
    public IEventRepository Events { get; }
    public ITaskRepository Tasks { get; }
    public ITeamsRepository Teams { get; }
    public IScopedUserRoleRepository ScopedUserRoles { get; }
    public IUserPermissionsRepository UserPermissions { get; }
    public IUserTeamsRepository UserTeams { get; }
    public ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    public IUserInvitesRepository UserInvites { get; }
    public IOctopusAsyncClient Client { get; }
    public RepositoryScope Scope { get; }
    public abstract virtual IEventRepository get_Events();
    public abstract virtual ITaskRepository get_Tasks();
    public abstract virtual ITeamsRepository get_Teams();
    public abstract virtual IScopedUserRoleRepository get_ScopedUserRoles();
    public abstract virtual IUserPermissionsRepository get_UserPermissions();
    public abstract virtual IUserTeamsRepository get_UserTeams();
    public abstract virtual ICommunityActionTemplateRepository get_CommunityActionTemplates();
    public abstract virtual IUserInvitesRepository get_UserInvites();
    public abstract virtual IOctopusAsyncClient get_Client();
    public abstract virtual RepositoryScope get_Scope();
    public abstract virtual Task`1<bool> HasLink(string name);
    public abstract virtual Task`1<bool> HasLinkParameter(string linkName, string parameterName);
    public abstract virtual Task`1<string> Link(string name);
}
public interface Octopus.Client.IOctopusCommonRepository {
    public IEventRepository Events { get; }
    public ITaskRepository Tasks { get; }
    public ITeamsRepository Teams { get; }
    public IScopedUserRoleRepository ScopedUserRoles { get; }
    public IUserPermissionsRepository UserPermissions { get; }
    public IUserTeamsRepository UserTeams { get; }
    public IUserInvitesRepository UserInvites { get; }
    public IOctopusClient Client { get; }
    public RepositoryScope Scope { get; }
    public abstract virtual IEventRepository get_Events();
    public abstract virtual ITaskRepository get_Tasks();
    public abstract virtual ITeamsRepository get_Teams();
    public abstract virtual IScopedUserRoleRepository get_ScopedUserRoles();
    public abstract virtual IUserPermissionsRepository get_UserPermissions();
    public abstract virtual IUserTeamsRepository get_UserTeams();
    public abstract virtual IUserInvitesRepository get_UserInvites();
    public abstract virtual IOctopusClient get_Client();
    public abstract virtual RepositoryScope get_Scope();
    public abstract virtual bool HasLink(string name);
    public abstract virtual bool HasLinkParameter(string linkName, string parameterName);
    public abstract virtual string Link(string name);
}
public interface Octopus.Client.IOctopusRepository {
}
public interface Octopus.Client.IOctopusSpaceAsyncRepository {
    public IAccountRepository Accounts { get; }
    public IActionTemplateRepository ActionTemplates { get; }
    public IArtifactRepository Artifacts { get; }
    public IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    public IBuildInformationRepository BuildInformationRepository { get; }
    public ICertificateRepository Certificates { get; }
    public IChannelRepository Channels { get; }
    public IDashboardConfigurationRepository DashboardConfigurations { get; }
    public IDashboardRepository Dashboards { get; }
    public IDefectsRepository Defects { get; }
    public IDeploymentProcessRepository DeploymentProcesses { get; }
    public IDeploymentSettingsRepository DeploymentSettings { get; }
    public IDeploymentRepository Deployments { get; }
    public IEnvironmentRepository Environments { get; }
    public IFeedRepository Feeds { get; }
    public IGitCredentialRepository GitCredentials { get; }
    public IInterruptionRepository Interruptions { get; }
    public ILibraryVariableSetRepository LibraryVariableSets { get; }
    public ILifecyclesRepository Lifecycles { get; }
    public IMachinePolicyRepository MachinePolicies { get; }
    public IMachineRepository Machines { get; }
    public IMachineRoleRepository MachineRoles { get; }
    public IPackageMetadataRepository PackageMetadataRepository { get; }
    public IProjectGroupRepository ProjectGroups { get; }
    public IProjectRepository Projects { get; }
    public IRunbookRepository Runbooks { get; }
    public IRunbookProcessRepository RunbookProcesses { get; }
    public IRunbookSnapshotRepository RunbookSnapshots { get; }
    public IRunbookRunRepository RunbookRuns { get; }
    public IProjectTriggerRepository ProjectTriggers { get; }
    public IProxyRepository Proxies { get; }
    public IReleaseRepository Releases { get; }
    public IRetentionPolicyRepository RetentionPolicies { get; }
    public ISubscriptionRepository Subscriptions { get; }
    public ITagSetRepository TagSets { get; }
    public ITenantRepository Tenants { get; }
    public ITenantVariablesRepository TenantVariables { get; }
    public IVariableSetRepository VariableSets { get; }
    public IWorkerPoolRepository WorkerPools { get; }
    public IWorkerRepository Workers { get; }
    public abstract virtual IAccountRepository get_Accounts();
    public abstract virtual IActionTemplateRepository get_ActionTemplates();
    public abstract virtual IArtifactRepository get_Artifacts();
    public abstract virtual IBuiltInPackageRepositoryRepository get_BuiltInPackageRepository();
    public abstract virtual IBuildInformationRepository get_BuildInformationRepository();
    public abstract virtual ICertificateRepository get_Certificates();
    public abstract virtual IChannelRepository get_Channels();
    public abstract virtual IDashboardConfigurationRepository get_DashboardConfigurations();
    public abstract virtual IDashboardRepository get_Dashboards();
    public abstract virtual IDefectsRepository get_Defects();
    public abstract virtual IDeploymentProcessRepository get_DeploymentProcesses();
    public abstract virtual IDeploymentSettingsRepository get_DeploymentSettings();
    public abstract virtual IDeploymentRepository get_Deployments();
    public abstract virtual IEnvironmentRepository get_Environments();
    public abstract virtual IFeedRepository get_Feeds();
    public abstract virtual IGitCredentialRepository get_GitCredentials();
    public abstract virtual IInterruptionRepository get_Interruptions();
    public abstract virtual ILibraryVariableSetRepository get_LibraryVariableSets();
    public abstract virtual ILifecyclesRepository get_Lifecycles();
    public abstract virtual IMachinePolicyRepository get_MachinePolicies();
    public abstract virtual IMachineRepository get_Machines();
    public abstract virtual IMachineRoleRepository get_MachineRoles();
    public abstract virtual IPackageMetadataRepository get_PackageMetadataRepository();
    public abstract virtual IProjectGroupRepository get_ProjectGroups();
    public abstract virtual IProjectRepository get_Projects();
    public abstract virtual IRunbookRepository get_Runbooks();
    public abstract virtual IRunbookProcessRepository get_RunbookProcesses();
    public abstract virtual IRunbookSnapshotRepository get_RunbookSnapshots();
    public abstract virtual IRunbookRunRepository get_RunbookRuns();
    public abstract virtual IProjectTriggerRepository get_ProjectTriggers();
    public abstract virtual IProxyRepository get_Proxies();
    public abstract virtual IReleaseRepository get_Releases();
    public abstract virtual IRetentionPolicyRepository get_RetentionPolicies();
    public abstract virtual ISubscriptionRepository get_Subscriptions();
    public abstract virtual ITagSetRepository get_TagSets();
    public abstract virtual ITenantRepository get_Tenants();
    public abstract virtual ITenantVariablesRepository get_TenantVariables();
    public abstract virtual IVariableSetRepository get_VariableSets();
    public abstract virtual IWorkerPoolRepository get_WorkerPools();
    public abstract virtual IWorkerRepository get_Workers();
    public abstract virtual Task`1<SpaceRootResource> LoadSpaceRootDocument();
}
public interface Octopus.Client.IOctopusSpaceRepository {
    public IAccountRepository Accounts { get; }
    public IActionTemplateRepository ActionTemplates { get; }
    public IArtifactRepository Artifacts { get; }
    public IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    public IBuildInformationRepository BuildInformationRepository { get; }
    public ICertificateConfigurationRepository CertificateConfiguration { get; }
    public ICertificateRepository Certificates { get; }
    public IChannelRepository Channels { get; }
    public IDashboardConfigurationRepository DashboardConfigurations { get; }
    public IDashboardRepository Dashboards { get; }
    public IDefectsRepository Defects { get; }
    public IDeploymentProcessRepository DeploymentProcesses { get; }
    public IDeploymentSettingsRepository DeploymentSettings { get; }
    public IDeploymentRepository Deployments { get; }
    public IEnvironmentRepository Environments { get; }
    public IFeedRepository Feeds { get; }
    public IInterruptionRepository Interruptions { get; }
    public ILibraryVariableSetRepository LibraryVariableSets { get; }
    public ILifecyclesRepository Lifecycles { get; }
    public IMachinePolicyRepository MachinePolicies { get; }
    public IMachineRepository Machines { get; }
    public IMachineRoleRepository MachineRoles { get; }
    public IPackageMetadataRepository PackageMetadataRepository { get; }
    public IProjectGroupRepository ProjectGroups { get; }
    public IProjectRepository Projects { get; }
    public IRunbookRepository Runbooks { get; }
    public IRunbookProcessRepository RunbookProcesses { get; }
    public IRunbookSnapshotRepository RunbookSnapshots { get; }
    public IRunbookRunRepository RunbookRuns { get; }
    public IProjectTriggerRepository ProjectTriggers { get; }
    public IProxyRepository Proxies { get; }
    public IReleaseRepository Releases { get; }
    public IRetentionPolicyRepository RetentionPolicies { get; }
    public ISubscriptionRepository Subscriptions { get; }
    public ITagSetRepository TagSets { get; }
    public ITenantRepository Tenants { get; }
    public ITenantVariablesRepository TenantVariables { get; }
    public IVariableSetRepository VariableSets { get; }
    public IWorkerPoolRepository WorkerPools { get; }
    public IWorkerRepository Workers { get; }
    public abstract virtual IAccountRepository get_Accounts();
    public abstract virtual IActionTemplateRepository get_ActionTemplates();
    public abstract virtual IArtifactRepository get_Artifacts();
    public abstract virtual IBuiltInPackageRepositoryRepository get_BuiltInPackageRepository();
    public abstract virtual IBuildInformationRepository get_BuildInformationRepository();
    public abstract virtual ICertificateConfigurationRepository get_CertificateConfiguration();
    public abstract virtual ICertificateRepository get_Certificates();
    public abstract virtual IChannelRepository get_Channels();
    public abstract virtual IDashboardConfigurationRepository get_DashboardConfigurations();
    public abstract virtual IDashboardRepository get_Dashboards();
    public abstract virtual IDefectsRepository get_Defects();
    public abstract virtual IDeploymentProcessRepository get_DeploymentProcesses();
    public abstract virtual IDeploymentSettingsRepository get_DeploymentSettings();
    public abstract virtual IDeploymentRepository get_Deployments();
    public abstract virtual IEnvironmentRepository get_Environments();
    public abstract virtual IFeedRepository get_Feeds();
    public abstract virtual IInterruptionRepository get_Interruptions();
    public abstract virtual ILibraryVariableSetRepository get_LibraryVariableSets();
    public abstract virtual ILifecyclesRepository get_Lifecycles();
    public abstract virtual IMachinePolicyRepository get_MachinePolicies();
    public abstract virtual IMachineRepository get_Machines();
    public abstract virtual IMachineRoleRepository get_MachineRoles();
    public abstract virtual IPackageMetadataRepository get_PackageMetadataRepository();
    public abstract virtual IProjectGroupRepository get_ProjectGroups();
    public abstract virtual IProjectRepository get_Projects();
    public abstract virtual IRunbookRepository get_Runbooks();
    public abstract virtual IRunbookProcessRepository get_RunbookProcesses();
    public abstract virtual IRunbookSnapshotRepository get_RunbookSnapshots();
    public abstract virtual IRunbookRunRepository get_RunbookRuns();
    public abstract virtual IProjectTriggerRepository get_ProjectTriggers();
    public abstract virtual IProxyRepository get_Proxies();
    public abstract virtual IReleaseRepository get_Releases();
    public abstract virtual IRetentionPolicyRepository get_RetentionPolicies();
    public abstract virtual ISubscriptionRepository get_Subscriptions();
    public abstract virtual ITagSetRepository get_TagSets();
    public abstract virtual ITenantRepository get_Tenants();
    public abstract virtual ITenantVariablesRepository get_TenantVariables();
    public abstract virtual IVariableSetRepository get_VariableSets();
    public abstract virtual IWorkerPoolRepository get_WorkerPools();
    public abstract virtual IWorkerRepository get_Workers();
    public abstract virtual SpaceRootResource LoadSpaceRootDocument();
}
public interface Octopus.Client.IOctopusSystemAsyncRepository {
    public ISchedulerRepository Schedulers { get; }
    public IBackupRepository Backups { get; }
    public ICertificateConfigurationRepository CertificateConfiguration { get; }
    public IConfigurationRepository Configuration { get; }
    public IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    public IMigrationRepository Migrations { get; }
    public ILicensesRepository Licenses { get; }
    public IOctopusServerNodeRepository OctopusServerNodes { get; }
    public IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    public IServerStatusRepository ServerStatus { get; }
    public ISpaceRepository Spaces { get; }
    public IUserRepository Users { get; }
    public IUserRolesRepository UserRoles { get; }
    public IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    public ITelemetryConfigurationRepository TelemetryConfigurationRepository { get; }
    public abstract virtual ISchedulerRepository get_Schedulers();
    public abstract virtual IBackupRepository get_Backups();
    public abstract virtual ICertificateConfigurationRepository get_CertificateConfiguration();
    public abstract virtual IConfigurationRepository get_Configuration();
    public abstract virtual IFeaturesConfigurationRepository get_FeaturesConfiguration();
    public abstract virtual IMigrationRepository get_Migrations();
    public abstract virtual ILicensesRepository get_Licenses();
    public abstract virtual IOctopusServerNodeRepository get_OctopusServerNodes();
    public abstract virtual IPerformanceConfigurationRepository get_PerformanceConfiguration();
    public abstract virtual IServerStatusRepository get_ServerStatus();
    public abstract virtual ISpaceRepository get_Spaces();
    public abstract virtual IUserRepository get_Users();
    public abstract virtual IUserRolesRepository get_UserRoles();
    public abstract virtual IUpgradeConfigurationRepository get_UpgradeConfiguration();
    public abstract virtual ITelemetryConfigurationRepository get_TelemetryConfigurationRepository();
    public abstract virtual Task`1<RootResource> LoadRootDocument();
}
public interface Octopus.Client.IOctopusSystemRepository {
    public ISchedulerRepository Schedulers { get; }
    public IBackupRepository Backups { get; }
    public ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    public IConfigurationRepository Configuration { get; }
    public IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    public IMigrationRepository Migrations { get; }
    public ILicensesRepository Licenses { get; }
    public IOctopusServerNodeRepository OctopusServerNodes { get; }
    public IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    public IServerStatusRepository ServerStatus { get; }
    public ISpaceRepository Spaces { get; }
    public IUserRepository Users { get; }
    public IUserRolesRepository UserRoles { get; }
    public IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    public ITelemetryConfigurationRepository TelemetryConfigurationRepository { get; }
    public abstract virtual ISchedulerRepository get_Schedulers();
    public abstract virtual IBackupRepository get_Backups();
    public abstract virtual ICommunityActionTemplateRepository get_CommunityActionTemplates();
    public abstract virtual IConfigurationRepository get_Configuration();
    public abstract virtual IFeaturesConfigurationRepository get_FeaturesConfiguration();
    public abstract virtual IMigrationRepository get_Migrations();
    public abstract virtual ILicensesRepository get_Licenses();
    public abstract virtual IOctopusServerNodeRepository get_OctopusServerNodes();
    public abstract virtual IPerformanceConfigurationRepository get_PerformanceConfiguration();
    public abstract virtual IServerStatusRepository get_ServerStatus();
    public abstract virtual ISpaceRepository get_Spaces();
    public abstract virtual IUserRepository get_Users();
    public abstract virtual IUserRolesRepository get_UserRoles();
    public abstract virtual IUpgradeConfigurationRepository get_UpgradeConfiguration();
    public abstract virtual ITelemetryConfigurationRepository get_TelemetryConfigurationRepository();
    public abstract virtual RootResource LoadRootDocument();
}
internal interface Octopus.Client.Logging.ILog {
    public abstract virtual bool Log(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters);
}
public interface Octopus.Client.Logging.ILogProvider {
    public abstract virtual Logger GetLogger(string name);
    public abstract virtual IDisposable OpenNestedContext(string message);
    public abstract virtual IDisposable OpenMappedContext(string key, string value);
}
[ExtensionAttribute]
internal static class Octopus.Client.Logging.LogExtensions : object {
    [ExtensionAttribute]
public static bool IsDebugEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsErrorEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsFatalEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsInfoEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsTraceEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsWarnEnabled(ILog logger);
    [ExtensionAttribute]
public static void Debug(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Debug(ILog logger, string message);
    [ExtensionAttribute]
public static void DebugFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void DebugException(ILog logger, string message, Exception exception);
    [ExtensionAttribute]
public static void DebugException(ILog logger, string message, Exception exception, Object[] formatParams);
    [ExtensionAttribute]
public static void Error(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Error(ILog logger, string message);
    [ExtensionAttribute]
public static void ErrorFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void ErrorException(ILog logger, string message, Exception exception, Object[] formatParams);
    [ExtensionAttribute]
public static void Fatal(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Fatal(ILog logger, string message);
    [ExtensionAttribute]
public static void FatalFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void FatalException(ILog logger, string message, Exception exception, Object[] formatParams);
    [ExtensionAttribute]
public static void Info(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Info(ILog logger, string message);
    [ExtensionAttribute]
public static void InfoFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void InfoException(ILog logger, string message, Exception exception, Object[] formatParams);
    [ExtensionAttribute]
public static void Trace(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Trace(ILog logger, string message);
    [ExtensionAttribute]
public static void TraceFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void TraceException(ILog logger, string message, Exception exception, Object[] formatParams);
    [ExtensionAttribute]
public static void Warn(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Warn(ILog logger, string message);
    [ExtensionAttribute]
public static void WarnFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void WarnException(ILog logger, string message, Exception exception, Object[] formatParams);
    private static void GuardAgainstNullLogger(ILog logger);
    [ExtensionAttribute]
private static void LogFormat(ILog logger, LogLevel logLevel, string message, Object[] args);
    [ExtensionAttribute]
private static Func`1<T> AsFunc(T value);
    [ExtensionAttribute]
private static T Return(T value);
}
public class Octopus.Client.Logging.Logger : MulticastDelegate {
    public Logger(object object, IntPtr method);
    public virtual bool Invoke(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters);
    public virtual IAsyncResult BeginInvoke(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class Octopus.Client.Logging.LoggerExecutionWrapper : object {
    private Logger _logger;
    private Func`1<bool> _getIsDisabled;
    internal static string FailedToGenerateLogMessage;
    internal Logger WrappedLogger { get; }
    internal LoggerExecutionWrapper(Logger logger, Func`1<bool> getIsDisabled);
    internal Logger get_WrappedLogger();
    public sealed virtual bool Log(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters);
}
public enum Octopus.Client.Logging.LogLevel : Enum {
    public int value__;
    public static LogLevel Trace;
    public static LogLevel Debug;
    public static LogLevel Info;
    public static LogLevel Warn;
    public static LogLevel Error;
    public static LogLevel Fatal;
}
public static class Octopus.Client.Logging.LogProvider : object {
    public static string DisableLoggingEnvironmentVariable;
    private static string NullLogProvider;
    [DynamicAttribute]
private static object s_currentLogProvider;
    private static Action`1<ILogProvider> s_onCurrentLogProviderSet;
    [CompilerGeneratedAttribute]
private static bool <IsDisabled>k__BackingField;
    internal static List`1<Tuple`2<IsLoggerAvailable, CreateLogProvider>> LogProviderResolvers;
    public static bool IsDisabled { get; public set; }
    unknown static Action`1<ILogProvider> OnCurrentLogProviderSet {internal set; }
    internal static ILogProvider CurrentLogProvider { get; }
    private static LogProvider();
    public static void SetCurrentLogProvider(ILogProvider logProvider);
    [CompilerGeneratedAttribute]
public static bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public static void set_IsDisabled(bool value);
    internal static void set_OnCurrentLogProviderSet(Action`1<ILogProvider> value);
    internal static ILogProvider get_CurrentLogProvider();
    internal static ILog For();
    internal static ILog GetLogger(Type type);
    internal static ILog GetLogger(string name);
    internal static IDisposable OpenNestedContext(string message);
    internal static IDisposable OpenMappedContext(string key, string value);
    private static void RaiseOnCurrentLogProviderSet();
    internal static ILogProvider ResolveLogProvider();
}
internal class Octopus.Client.Logging.LogProviders.DisposableAction : object {
    private Action _onDispose;
    public DisposableAction(Action onDispose);
    public sealed virtual void Dispose();
}
internal class Octopus.Client.Logging.LogProviders.EntLibLogProvider : LogProviderBase {
    private static string TypeTemplate;
    private static bool s_providerIsAvailableOverride;
    private static Type LogEntryType;
    private static Type LoggerType;
    private static Type TraceEventTypeType;
    private static Action`3<string, string, int> WriteLogEntry;
    private static Func`3<string, int, bool> ShouldLogEntry;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static EntLibLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    internal static bool IsLoggerAvailable();
    private static Action`3<string, string, int> GetWriteLogEntry();
    private static Func`3<string, int, bool> GetShouldLogEntry();
    private static MemberInitExpression GetWriteLogExpression(Expression message, Expression severityParameter, ParameterExpression logNameParameter);
}
internal class Octopus.Client.Logging.LogProviders.Log4NetLogProvider : LogProviderBase {
    private Func`2<string, object> _getLoggerByNameDelegate;
    private static bool s_providerIsAvailableOverride;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static Log4NetLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    internal static bool IsLoggerAvailable();
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
    private static Type GetLogManagerType();
    private static Func`2<string, object> GetGetLoggerMethodCall();
}
internal static class Octopus.Client.Logging.LogProviders.LogMessageFormatter : object {
    private static Regex Pattern;
    private static LogMessageFormatter();
    public static Func`1<string> SimulateStructuredLogging(Func`1<string> messageBuilder, Object[] formatParameters);
    private static string ReplaceFirst(string text, string search, string replace);
}
internal abstract class Octopus.Client.Logging.LogProviders.LogProviderBase : object {
    private Lazy`1<OpenNdc> _lazyOpenNdcMethod;
    private Lazy`1<OpenMdc> _lazyOpenMdcMethod;
    private static IDisposable NoopDisposableInstance;
    private static LogProviderBase();
    public abstract virtual Logger GetLogger(string name);
    public sealed virtual IDisposable OpenNestedContext(string message);
    public sealed virtual IDisposable OpenMappedContext(string key, string value);
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
}
internal class Octopus.Client.Logging.LogProviders.LoupeLogProvider : LogProviderBase {
    private static bool s_providerIsAvailableOverride;
    private WriteDelegate _logWriteDelegate;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static LoupeLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    public static bool IsLoggerAvailable();
    private static Type GetLogManagerType();
    private static WriteDelegate GetLogWriteDelegate();
}
internal class Octopus.Client.Logging.LogProviders.NLogLogProvider : LogProviderBase {
    private Func`2<string, object> _getLoggerByNameDelegate;
    private static bool s_providerIsAvailableOverride;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static NLogLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    public static bool IsLoggerAvailable();
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
    private static Type GetLogManagerType();
    private static Func`2<string, object> GetGetLoggerMethodCall();
}
internal class Octopus.Client.Logging.LogProviders.SerilogLogProvider : LogProviderBase {
    private Func`2<string, object> _getLoggerByNameDelegate;
    private static bool s_providerIsAvailableOverride;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static SerilogLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    internal static bool IsLoggerAvailable();
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
    private static Func`3<string, string, IDisposable> GetPushProperty();
    private static Type GetLogManagerType();
    private static Func`2<string, object> GetForContextMethodCall();
}
internal static class Octopus.Client.Logging.LogProviders.TraceEventTypeValues : object {
    internal static Type Type;
    internal static int Verbose;
    internal static int Information;
    internal static int Warning;
    internal static int Error;
    internal static int Critical;
    private static TraceEventTypeValues();
}
[ExtensionAttribute]
internal static class Octopus.Client.Logging.LogProviders.TypeExtensions : object {
    [ExtensionAttribute]
internal static MethodInfo GetMethodPortable(Type type, string name);
    [ExtensionAttribute]
internal static MethodInfo GetMethodPortable(Type type, string name, Type[] types);
    [ExtensionAttribute]
internal static PropertyInfo GetPropertyPortable(Type type, string name);
    [ExtensionAttribute]
internal static IEnumerable`1<FieldInfo> GetFieldsPortable(Type type);
    [ExtensionAttribute]
internal static Type GetBaseTypePortable(Type type);
    [ExtensionAttribute]
internal static MethodInfo GetGetMethod(PropertyInfo propertyInfo);
    [ExtensionAttribute]
internal static MethodInfo GetSetMethod(PropertyInfo propertyInfo);
    [ExtensionAttribute]
internal static Assembly GetAssemblyPortable(Type type);
}
internal static class Octopus.Client.MixedScopeConstants : object {
    public static string QueryStringParameterSpaces;
    public static string QueryStringParameterIncludeSystem;
    public static string AllSpacesQueryStringParameterValue;
}
[DebuggerDisplayAttribute("Name = {Name}")]
public abstract class Octopus.Client.Model.Accounts.AccountResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    private Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public TenantedDeploymentMode TenantedDeploymentParticipation { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    [WriteableOnCreateAttribute]
public AccountType AccountType { get; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    public void set_TenantedDeploymentParticipation(TenantedDeploymentMode value);
    public TenantedDeploymentMode get_TenantedDeploymentParticipation();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
    public abstract virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public enum Octopus.Client.Model.Accounts.AccountType : Enum {
    public int value__;
    public static AccountType None;
    public static AccountType UsernamePassword;
    public static AccountType SshKeyPair;
    public static AccountType AzureSubscription;
    public static AccountType AzureServicePrincipal;
    public static AccountType AmazonWebServicesAccount;
    public static AccountType AmazonWebServicesRoleAccount;
    public static AccountType Token;
    public static AccountType GoogleCloudAccount;
}
public class Octopus.Client.Model.Accounts.AmazonWebServicesAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private string <AccessKey>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <SecretKey>k__BackingField;
    public AccountType AccountType { get; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public string AccessKey { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public SensitiveValue SecretKey { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public string get_AccessKey();
    [CompilerGeneratedAttribute]
public void set_AccessKey(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_SecretKey();
    [CompilerGeneratedAttribute]
public void set_SecretKey(SensitiveValue value);
}
public class Octopus.Client.Model.Accounts.AzureServicePrincipalAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private string <SubscriptionNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceManagementEndpointBaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActiveDirectoryEndpointBaseUri>k__BackingField;
    public AccountType AccountType { get; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public string SubscriptionNumber { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
[NotDocumentReferenceAttribute]
public string ClientId { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
[NotDocumentReferenceAttribute]
public string TenantId { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public SensitiveValue Password { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string AzureEnvironment { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ResourceManagementEndpointBaseUri { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ActiveDirectoryEndpointBaseUri { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public string get_SubscriptionNumber();
    [CompilerGeneratedAttribute]
public void set_SubscriptionNumber(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
    [CompilerGeneratedAttribute]
public string get_AzureEnvironment();
    [CompilerGeneratedAttribute]
public void set_AzureEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceManagementEndpointBaseUri();
    [CompilerGeneratedAttribute]
public void set_ResourceManagementEndpointBaseUri(string value);
    [CompilerGeneratedAttribute]
public string get_ActiveDirectoryEndpointBaseUri();
    [CompilerGeneratedAttribute]
public void set_ActiveDirectoryEndpointBaseUri(string value);
}
public class Octopus.Client.Model.Accounts.AzureStorageAccount : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    public string Name { get; public set; }
    public string Location { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
}
public class Octopus.Client.Model.Accounts.AzureSubscriptionAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private string <SubscriptionNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <CertificateBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateThumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceManagementEndpointBaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceManagementEndpointSuffix>k__BackingField;
    public AccountType AccountType { get; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public string SubscriptionNumber { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public SensitiveValue CertificateBytes { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string CertificateThumbprint { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string AzureEnvironment { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ServiceManagementEndpointBaseUri { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ServiceManagementEndpointSuffix { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public string get_SubscriptionNumber();
    [CompilerGeneratedAttribute]
public void set_SubscriptionNumber(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_CertificateBytes();
    [CompilerGeneratedAttribute]
public void set_CertificateBytes(SensitiveValue value);
    [CompilerGeneratedAttribute]
public string get_CertificateThumbprint();
    [CompilerGeneratedAttribute]
public void set_CertificateThumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_AzureEnvironment();
    [CompilerGeneratedAttribute]
public void set_AzureEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceManagementEndpointBaseUri();
    [CompilerGeneratedAttribute]
public void set_ServiceManagementEndpointBaseUri(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceManagementEndpointSuffix();
    [CompilerGeneratedAttribute]
public void set_ServiceManagementEndpointSuffix(string value);
}
public class Octopus.Client.Model.Accounts.GoogleCloudAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private SensitiveValue <JsonKey>k__BackingField;
    public AccountType AccountType { get; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public SensitiveValue JsonKey { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public SensitiveValue get_JsonKey();
    [CompilerGeneratedAttribute]
public void set_JsonKey(SensitiveValue value);
}
public class Octopus.Client.Model.Accounts.SshKeyPairAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <PrivateKeyFile>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <PrivateKeyPassphrase>k__BackingField;
    public AccountType AccountType { get; }
    [TrimAttribute]
[WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue PrivateKeyFile { get; public set; }
    [WriteableAttribute]
public SensitiveValue PrivateKeyPassphrase { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_PrivateKeyFile();
    [CompilerGeneratedAttribute]
public void set_PrivateKeyFile(SensitiveValue value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_PrivateKeyPassphrase();
    [CompilerGeneratedAttribute]
public void set_PrivateKeyPassphrase(SensitiveValue value);
}
[AttributeUsageAttribute("256")]
public class Octopus.Client.Model.Accounts.SupportedAccountTypesAttribute : Attribute {
    private AccountType[] accountTypes;
    public AccountType[] AccountTypes { get; }
    public SupportedAccountTypesAttribute(AccountType[] accountTypes);
    public AccountType[] get_AccountTypes();
}
public class Octopus.Client.Model.Accounts.TokenAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private SensitiveValue <Token>k__BackingField;
    public AccountType AccountType { get; }
    [WriteableAttribute]
[RequiredAttribute]
public SensitiveValue Token { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public SensitiveValue get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(SensitiveValue value);
}
public class Octopus.Client.Model.Accounts.Usages.AccountUsageResource : Resource {
    [CompilerGeneratedAttribute]
private ICollection`1<TargetUsageEntry> <Targets>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<StepUsage> <DeploymentProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ReleaseUsage> <Releases>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ProjectVariableSetUsage> <ProjectVariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<LibraryVariableSetUsageEntry> <LibraryVariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<RunbookStepUsage> <RunbookProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<RunbookSnapshotUsage> <RunbookSnapshots>k__BackingField;
    public ICollection`1<TargetUsageEntry> Targets { get; public set; }
    public ICollection`1<StepUsage> DeploymentProcesses { get; public set; }
    public ICollection`1<ReleaseUsage> Releases { get; public set; }
    public ICollection`1<ProjectVariableSetUsage> ProjectVariableSets { get; public set; }
    public ICollection`1<LibraryVariableSetUsageEntry> LibraryVariableSets { get; public set; }
    public ICollection`1<RunbookStepUsage> RunbookProcesses { get; public set; }
    public ICollection`1<RunbookSnapshotUsage> RunbookSnapshots { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<TargetUsageEntry> get_Targets();
    [CompilerGeneratedAttribute]
public void set_Targets(ICollection`1<TargetUsageEntry> value);
    [CompilerGeneratedAttribute]
public ICollection`1<StepUsage> get_DeploymentProcesses();
    [CompilerGeneratedAttribute]
public void set_DeploymentProcesses(ICollection`1<StepUsage> value);
    [CompilerGeneratedAttribute]
public ICollection`1<ReleaseUsage> get_Releases();
    [CompilerGeneratedAttribute]
public void set_Releases(ICollection`1<ReleaseUsage> value);
    [CompilerGeneratedAttribute]
public ICollection`1<ProjectVariableSetUsage> get_ProjectVariableSets();
    [CompilerGeneratedAttribute]
public void set_ProjectVariableSets(ICollection`1<ProjectVariableSetUsage> value);
    [CompilerGeneratedAttribute]
public ICollection`1<LibraryVariableSetUsageEntry> get_LibraryVariableSets();
    [CompilerGeneratedAttribute]
public void set_LibraryVariableSets(ICollection`1<LibraryVariableSetUsageEntry> value);
    [CompilerGeneratedAttribute]
public ICollection`1<RunbookStepUsage> get_RunbookProcesses();
    [CompilerGeneratedAttribute]
public void set_RunbookProcesses(ICollection`1<RunbookStepUsage> value);
    [CompilerGeneratedAttribute]
public ICollection`1<RunbookSnapshotUsage> get_RunbookSnapshots();
    [CompilerGeneratedAttribute]
public void set_RunbookSnapshots(ICollection`1<RunbookSnapshotUsage> value);
}
public class Octopus.Client.Model.Accounts.Usages.LibraryVariableSetUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <LibraryVariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LibraryVariableSetName>k__BackingField;
    public string LibraryVariableSetId { get; public set; }
    public string LibraryVariableSetName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LibraryVariableSetId();
    [CompilerGeneratedAttribute]
public void set_LibraryVariableSetId(string value);
    [CompilerGeneratedAttribute]
public string get_LibraryVariableSetName();
    [CompilerGeneratedAttribute]
public void set_LibraryVariableSetName(string value);
}
public class Octopus.Client.Model.Accounts.Usages.ProjectVariableSetUsage : object {
    [CompilerGeneratedAttribute]
private string <ProjectSlug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ReleaseUsageEntry> <Releases>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RunbookSnapshotUsageEntry> <RunbookSnapshots>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCurrentlyBeingUsedInProject>k__BackingField;
    public string ProjectSlug { get; public set; }
    public string ProjectName { get; public set; }
    public string ProjectId { get; public set; }
    public ICollection`1<ReleaseUsageEntry> Releases { get; public set; }
    public List`1<RunbookSnapshotUsageEntry> RunbookSnapshots { get; public set; }
    public bool IsCurrentlyBeingUsedInProject { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectSlug();
    [CompilerGeneratedAttribute]
public void set_ProjectSlug(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<ReleaseUsageEntry> get_Releases();
    [CompilerGeneratedAttribute]
public void set_Releases(ICollection`1<ReleaseUsageEntry> value);
    [CompilerGeneratedAttribute]
public List`1<RunbookSnapshotUsageEntry> get_RunbookSnapshots();
    [CompilerGeneratedAttribute]
public void set_RunbookSnapshots(List`1<RunbookSnapshotUsageEntry> value);
    [CompilerGeneratedAttribute]
public bool get_IsCurrentlyBeingUsedInProject();
    [CompilerGeneratedAttribute]
public void set_IsCurrentlyBeingUsedInProject(bool value);
}
public class Octopus.Client.Model.Accounts.Usages.ReleaseUsage : object {
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ReleaseUsageEntry> <Releases>k__BackingField;
    public string ProjectName { get; public set; }
    public string ProjectId { get; public set; }
    public ICollection`1<ReleaseUsageEntry> Releases { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<ReleaseUsageEntry> get_Releases();
    [CompilerGeneratedAttribute]
public void set_Releases(ICollection`1<ReleaseUsageEntry> value);
}
public class Octopus.Client.Model.Accounts.Usages.ReleaseUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <ReleaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseVersion>k__BackingField;
    public string ReleaseId { get; public set; }
    public string ReleaseVersion { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ReleaseId();
    [CompilerGeneratedAttribute]
public void set_ReleaseId(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseVersion();
    [CompilerGeneratedAttribute]
public void set_ReleaseVersion(string value);
}
public class Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsage : object {
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<RunbookSnapshotUsageEntry> <Snapshots>k__BackingField;
    public string RunbookId { get; public set; }
    public string RunbookName { get; public set; }
    public string ProjectName { get; public set; }
    public string ProjectId { get; public set; }
    public ICollection`1<RunbookSnapshotUsageEntry> Snapshots { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookName();
    [CompilerGeneratedAttribute]
public void set_RunbookName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<RunbookSnapshotUsageEntry> get_Snapshots();
    [CompilerGeneratedAttribute]
public void set_Snapshots(ICollection`1<RunbookSnapshotUsageEntry> value);
}
public class Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <SnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SnapshotName>k__BackingField;
    public string SnapshotId { get; public set; }
    public string SnapshotName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SnapshotId();
    [CompilerGeneratedAttribute]
public void set_SnapshotId(string value);
    [CompilerGeneratedAttribute]
public string get_SnapshotName();
    [CompilerGeneratedAttribute]
public void set_SnapshotName(string value);
}
public class Octopus.Client.Model.Accounts.Usages.RunbookStepUsage : StepUsageBase {
    [CompilerGeneratedAttribute]
private string <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookName>k__BackingField;
    public string ProcessId { get; public set; }
    public string RunbookId { get; public set; }
    public string RunbookName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookName();
    [CompilerGeneratedAttribute]
public void set_RunbookName(string value);
}
public class Octopus.Client.Model.Accounts.Usages.StepUsage : StepUsageBase {
}
public class Octopus.Client.Model.Accounts.Usages.StepUsageBase : object {
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectSlug>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<StepUsageEntry> <Steps>k__BackingField;
    public string ProjectName { get; public set; }
    public string ProjectId { get; public set; }
    public string ProjectSlug { get; public set; }
    public ICollection`1<StepUsageEntry> Steps { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectSlug();
    [CompilerGeneratedAttribute]
public void set_ProjectSlug(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<StepUsageEntry> get_Steps();
    [CompilerGeneratedAttribute]
public void set_Steps(ICollection`1<StepUsageEntry> value);
}
public class Octopus.Client.Model.Accounts.Usages.StepUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <StepName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepId>k__BackingField;
    public string StepName { get; public set; }
    public string StepId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_StepName();
    [CompilerGeneratedAttribute]
public void set_StepName(string value);
    [CompilerGeneratedAttribute]
public string get_StepId();
    [CompilerGeneratedAttribute]
public void set_StepId(string value);
}
public class Octopus.Client.Model.Accounts.Usages.TargetUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <TargetName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetId>k__BackingField;
    public string TargetName { get; public set; }
    public string TargetId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TargetName();
    [CompilerGeneratedAttribute]
public void set_TargetName(string value);
    [CompilerGeneratedAttribute]
public string get_TargetId();
    [CompilerGeneratedAttribute]
public void set_TargetId(string value);
}
public class Octopus.Client.Model.Accounts.UsernamePasswordAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public AccountType AccountType { get; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.ActionsUpdateProcessResource : object {
    [CompilerGeneratedAttribute]
private ProcessType <ProcessType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ActionIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitRef>k__BackingField;
    public ProcessType ProcessType { get; public set; }
    public string ProcessId { get; public set; }
    public String[] ActionIds { get; public set; }
    public string Id { get; public set; }
    public LinkCollection Links { get; public set; }
    public string GitRef { get; public set; }
    [CompilerGeneratedAttribute]
public ProcessType get_ProcessType();
    [CompilerGeneratedAttribute]
public void set_ProcessType(ProcessType value);
    [CompilerGeneratedAttribute]
public string get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(string value);
    [CompilerGeneratedAttribute]
public String[] get_ActionIds();
    [CompilerGeneratedAttribute]
public void set_ActionIds(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
    [CompilerGeneratedAttribute]
public string get_GitRef();
    [CompilerGeneratedAttribute]
public void set_GitRef(string value);
}
public class Octopus.Client.Model.ActionsUpdateResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <DefaultPropertyValues>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <Overrides>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> <ActionIdsByProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private ActionsUpdateProcessResource[] <ActionsToUpdate>k__BackingField;
    public string Id { get; public set; }
    [RequiredAttribute]
public int Version { get; public set; }
    public IDictionary`2<string, PropertyValueResource> DefaultPropertyValues { get; public set; }
    public IDictionary`2<string, PropertyValueResource> Overrides { get; public set; }
    public LinkCollection Links { get; public set; }
    [ObsoleteAttribute("UseActionsToUpdate instead")]
public IDictionary`2<string, String[]> ActionIdsByProcessId { get; public set; }
    [RequiredAttribute]
public ActionsUpdateProcessResource[] ActionsToUpdate { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_DefaultPropertyValues();
    [CompilerGeneratedAttribute]
public void set_DefaultPropertyValues(IDictionary`2<string, PropertyValueResource> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_Overrides();
    [CompilerGeneratedAttribute]
public void set_Overrides(IDictionary`2<string, PropertyValueResource> value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, String[]> get_ActionIdsByProcessId();
    [CompilerGeneratedAttribute]
public void set_ActionIdsByProcessId(IDictionary`2<string, String[]> value);
    [CompilerGeneratedAttribute]
public ActionsUpdateProcessResource[] get_ActionsToUpdate();
    [CompilerGeneratedAttribute]
public void set_ActionsToUpdate(ActionsUpdateProcessResource[] value);
}
public class Octopus.Client.Model.ActionTemplateCategoryResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DisplayOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public int DisplayOrder { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_DisplayOrder();
    [CompilerGeneratedAttribute]
public void set_DisplayOrder(int value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.ActionTemplateParameterResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HelpText>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyValueResource <DefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <DisplaySettings>k__BackingField;
    public string Id { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Label { get; public set; }
    [WriteableAttribute]
public string HelpText { get; public set; }
    [WriteableAttribute]
public PropertyValueResource DefaultValue { get; public set; }
    [WriteableAttribute]
public IDictionary`2<string, string> DisplaySettings { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_HelpText();
    [CompilerGeneratedAttribute]
public void set_HelpText(string value);
    [CompilerGeneratedAttribute]
public PropertyValueResource get_DefaultValue();
    [CompilerGeneratedAttribute]
public void set_DefaultValue(PropertyValueResource value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_DisplaySettings();
    [CompilerGeneratedAttribute]
public void set_DisplaySettings(IDictionary`2<string, string> value);
    public bool IsCertificate();
    public bool IsSensitive();
    public bool IsAmazonWebServicesAccount();
    public bool IsAzureAccount();
    public string GetControlType();
    public bool IsControlType(string controlType);
}
public class Octopus.Client.Model.ActionTemplateResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommunityActionTemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageReferenceCollection <Packages>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ActionTemplateParameterResource> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepPackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Inputs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [RequiredAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [RequiredAttribute]
[WriteableOnCreateAttribute]
public string ActionType { get; public set; }
    public int Version { get; public set; }
    public string CommunityActionTemplateId { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, PropertyValueResource> Properties { get; }
    [JsonPropertyAttribute]
public PackageReferenceCollection Packages { get; }
    [JsonPropertyAttribute]
public IList`1<ActionTemplateParameterResource> Parameters { get; }
    [JsonPropertyAttribute]
public string StepPackageVersion { get; public set; }
    [JsonPropertyAttribute]
public object Inputs { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ActionType();
    [CompilerGeneratedAttribute]
public void set_ActionType(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public string get_CommunityActionTemplateId();
    [CompilerGeneratedAttribute]
public void set_CommunityActionTemplateId(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_Properties();
    [CompilerGeneratedAttribute]
public PackageReferenceCollection get_Packages();
    [CompilerGeneratedAttribute]
public IList`1<ActionTemplateParameterResource> get_Parameters();
    [CompilerGeneratedAttribute]
public string get_StepPackageVersion();
    [CompilerGeneratedAttribute]
public void set_StepPackageVersion(string value);
    [CompilerGeneratedAttribute]
public object get_Inputs();
    [CompilerGeneratedAttribute]
public void set_Inputs(object value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.ActionTemplateSearchResource : object {
    private string legacyCategory;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keywords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Author>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Website>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInstalled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBuiltIn>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommunityActionTemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasUpdate>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Type { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public string Keywords { get; public set; }
    public string Author { get; public set; }
    public string Website { get; public set; }
    public bool IsInstalled { get; public set; }
    public bool IsBuiltIn { get; public set; }
    public string Category { get; public set; }
    public List`1<string> Categories { get; public set; }
    public string CommunityActionTemplateId { get; public set; }
    public bool HasUpdate { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Keywords();
    [CompilerGeneratedAttribute]
public void set_Keywords(string value);
    [CompilerGeneratedAttribute]
public string get_Author();
    [CompilerGeneratedAttribute]
public void set_Author(string value);
    [CompilerGeneratedAttribute]
public string get_Website();
    [CompilerGeneratedAttribute]
public void set_Website(string value);
    [CompilerGeneratedAttribute]
public bool get_IsInstalled();
    [CompilerGeneratedAttribute]
public void set_IsInstalled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsBuiltIn();
    [CompilerGeneratedAttribute]
public void set_IsBuiltIn(bool value);
    public string get_Category();
    public void set_Category(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_CommunityActionTemplateId();
    [CompilerGeneratedAttribute]
public void set_CommunityActionTemplateId(string value);
    [CompilerGeneratedAttribute]
public bool get_HasUpdate();
    [CompilerGeneratedAttribute]
public void set_HasUpdate(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.ActionTemplateUsageResource : Resource {
    [CompilerGeneratedAttribute]
private string <ActionTemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private ProcessType <ProcessType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectSlug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentProcessId>k__BackingField;
    public string ActionTemplateId { get; public set; }
    public string RunbookId { get; public set; }
    public ProcessType ProcessType { get; public set; }
    public string ProcessId { get; public set; }
    public string ActionId { get; public set; }
    public string ActionName { get; public set; }
    public string RunbookName { get; public set; }
    public string StepId { get; public set; }
    public string StepName { get; public set; }
    public string ProjectId { get; public set; }
    public string ProjectName { get; public set; }
    public string ProjectSlug { get; public set; }
    public string Version { get; public set; }
    [ObsoleteAttribute("Use ProcessId with ProcessType instead")]
public string DeploymentProcessId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ActionTemplateId();
    [CompilerGeneratedAttribute]
public void set_ActionTemplateId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public ProcessType get_ProcessType();
    [CompilerGeneratedAttribute]
public void set_ProcessType(ProcessType value);
    [CompilerGeneratedAttribute]
public string get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_ActionId();
    [CompilerGeneratedAttribute]
public void set_ActionId(string value);
    [CompilerGeneratedAttribute]
public string get_ActionName();
    [CompilerGeneratedAttribute]
public void set_ActionName(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookName();
    [CompilerGeneratedAttribute]
public void set_RunbookName(string value);
    [CompilerGeneratedAttribute]
public string get_StepId();
    [CompilerGeneratedAttribute]
public void set_StepId(string value);
    [CompilerGeneratedAttribute]
public string get_StepName();
    [CompilerGeneratedAttribute]
public void set_StepName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectSlug();
    [CompilerGeneratedAttribute]
public void set_ProjectSlug(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentProcessId();
    [CompilerGeneratedAttribute]
public void set_DeploymentProcessId(string value);
}
public enum Octopus.Client.Model.ActionUpdateOutcome : Enum {
    public int value__;
    public static ActionUpdateOutcome Success;
    public static ActionUpdateOutcome ManualMergeRequired;
    public static ActionUpdateOutcome DefaultParamterValueMissing;
    public static ActionUpdateOutcome RemovedPackageInUse;
}
public enum Octopus.Client.Model.ActionUpdatePackageUsedBy : Enum {
    public int value__;
    public static ActionUpdatePackageUsedBy ProjectVersionStrategy;
    public static ActionUpdatePackageUsedBy ProjectReleaseCreationStrategy;
    public static ActionUpdatePackageUsedBy ChannelRule;
}
public class Octopus.Client.Model.ActionUpdateRemovedPackageUsage : object {
    [CompilerGeneratedAttribute]
private string <PackageReference>k__BackingField;
    [CompilerGeneratedAttribute]
private ActionUpdatePackageUsedBy <UsedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UsedById>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UsedByName>k__BackingField;
    public string PackageReference { get; }
    public ActionUpdatePackageUsedBy UsedBy { get; }
    public string UsedById { get; }
    public string UsedByName { get; }
    public ActionUpdateRemovedPackageUsage(string packageReference, ActionUpdatePackageUsedBy usedBy, string usedById, string usedByName);
    [CompilerGeneratedAttribute]
public string get_PackageReference();
    [CompilerGeneratedAttribute]
public ActionUpdatePackageUsedBy get_UsedBy();
    [CompilerGeneratedAttribute]
public string get_UsedById();
    [CompilerGeneratedAttribute]
public string get_UsedByName();
}
public class Octopus.Client.Model.ActionUpdateResultResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private ActionUpdateOutcome <Outcome>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> <ManualMergeRequiredReasonsByPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <NamesOfNewParametersMissingDefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ActionUpdateRemovedPackageUsage> <RemovedPackageUsages>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public ActionUpdateOutcome Outcome { get; public set; }
    public IDictionary`2<string, String[]> ManualMergeRequiredReasonsByPropertyName { get; public set; }
    public String[] NamesOfNewParametersMissingDefaultValue { get; public set; }
    public ICollection`1<ActionUpdateRemovedPackageUsage> RemovedPackageUsages { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public ActionUpdateOutcome get_Outcome();
    [CompilerGeneratedAttribute]
public void set_Outcome(ActionUpdateOutcome value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, String[]> get_ManualMergeRequiredReasonsByPropertyName();
    [CompilerGeneratedAttribute]
public void set_ManualMergeRequiredReasonsByPropertyName(IDictionary`2<string, String[]> value);
    [CompilerGeneratedAttribute]
public String[] get_NamesOfNewParametersMissingDefaultValue();
    [CompilerGeneratedAttribute]
public void set_NamesOfNewParametersMissingDefaultValue(String[] value);
    [CompilerGeneratedAttribute]
public ICollection`1<ActionUpdateRemovedPackageUsage> get_RemovedPackageUsages();
    [CompilerGeneratedAttribute]
public void set_RemovedPackageUsages(ICollection`1<ActionUpdateRemovedPackageUsage> value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.ActivityElement : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Started>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Ended>k__BackingField;
    [CompilerGeneratedAttribute]
private ActivityStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private ActivityElement[] <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowAtSummaryLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private ActivityLogElement[] <LogElements>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProgressPercentage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProgressMessage>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<DateTimeOffset> Started { get; public set; }
    public Nullable`1<DateTimeOffset> Ended { get; public set; }
    public ActivityStatus Status { get; public set; }
    public ActivityElement[] Children { get; public set; }
    public bool ShowAtSummaryLevel { get; public set; }
    public ActivityLogElement[] LogElements { get; public set; }
    public int ProgressPercentage { get; public set; }
    public string ProgressMessage { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Started();
    [CompilerGeneratedAttribute]
public void set_Started(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Ended();
    [CompilerGeneratedAttribute]
public void set_Ended(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public ActivityStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(ActivityStatus value);
    [CompilerGeneratedAttribute]
public ActivityElement[] get_Children();
    [CompilerGeneratedAttribute]
public void set_Children(ActivityElement[] value);
    [CompilerGeneratedAttribute]
public bool get_ShowAtSummaryLevel();
    [CompilerGeneratedAttribute]
public void set_ShowAtSummaryLevel(bool value);
    [CompilerGeneratedAttribute]
public ActivityLogElement[] get_LogElements();
    [CompilerGeneratedAttribute]
public void set_LogElements(ActivityLogElement[] value);
    [CompilerGeneratedAttribute]
public int get_ProgressPercentage();
    [CompilerGeneratedAttribute]
public void set_ProgressPercentage(int value);
    [CompilerGeneratedAttribute]
public string get_ProgressMessage();
    [CompilerGeneratedAttribute]
public void set_ProgressMessage(string value);
}
public class Octopus.Client.Model.ActivityLogElement : object {
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <OccurredAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Detail>k__BackingField;
    public string Category { get; public set; }
    public Nullable`1<DateTimeOffset> OccurredAt { get; public set; }
    public string MessageText { get; public set; }
    [JsonPropertyAttribute]
public string Detail { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_OccurredAt();
    [CompilerGeneratedAttribute]
public void set_OccurredAt(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_MessageText();
    [CompilerGeneratedAttribute]
public void set_MessageText(string value);
    [CompilerGeneratedAttribute]
public string get_Detail();
    [CompilerGeneratedAttribute]
public void set_Detail(string value);
}
public enum Octopus.Client.Model.ActivityStatus : Enum {
    public int value__;
    public static ActivityStatus Pending;
    public static ActivityStatus Running;
    public static ActivityStatus Success;
    public static ActivityStatus Failed;
    public static ActivityStatus Skipped;
    public static ActivityStatus SuccessWithWarning;
    public static ActivityStatus Canceled;
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.AllowCsvAttribute : Attribute {
}
public class Octopus.Client.Model.AnonymousProjectGitCredentialResource : ProjectGitCredentialResource {
    [CompilerGeneratedAttribute]
private ProjectGitCredentialType <Type>k__BackingField;
    public ProjectGitCredentialType Type { get; }
    [CompilerGeneratedAttribute]
public virtual ProjectGitCredentialType get_Type();
}
public class Octopus.Client.Model.ApiConstants : object {
    public static int DefaultClientRequestTimeout;
    public static string SupportedApiSchemaVersionMin;
    public static string SupportedApiSchemaVersionMax;
    public static string AuthenticationCookiePrefix;
    public static string ApiKeyHttpHeaderName;
    public static string AntiforgeryTokenCookiePrefix;
    public static string AntiforgeryTokenHttpHeaderName;
    public static string OctopusUserAgentProductName;
    private static ApiConstants();
}
public class Octopus.Client.Model.ApiKeyCreatedResource : ApiKeyResourceBase {
    [CompilerGeneratedAttribute]
private string <ApiKey>k__BackingField;
    public string ApiKey { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ApiKey();
    [CompilerGeneratedAttribute]
public void set_ApiKey(string value);
}
public class Octopus.Client.Model.ApiKeyResource : ApiKeyResourceBase {
    [CompilerGeneratedAttribute]
private SensitiveValue <ApiKey>k__BackingField;
    public SensitiveValue ApiKey { get; public set; }
    [CompilerGeneratedAttribute]
public SensitiveValue get_ApiKey();
    [CompilerGeneratedAttribute]
public void set_ApiKey(SensitiveValue value);
}
public abstract class Octopus.Client.Model.ApiKeyResourceBase : Resource {
    [CompilerGeneratedAttribute]
private string <Purpose>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Expires>k__BackingField;
    [WriteableOnCreateAttribute]
public string Purpose { get; public set; }
    public string UserId { get; public set; }
    public DateTimeOffset Created { get; public set; }
    public Nullable`1<DateTimeOffset> Expires { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Purpose();
    [CompilerGeneratedAttribute]
public void set_Purpose(string value);
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Expires();
    [CompilerGeneratedAttribute]
public void set_Expires(Nullable`1<DateTimeOffset> value);
}
public class Octopus.Client.Model.ArtifactResource : Resource {
    [CompilerGeneratedAttribute]
private string <Filename>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerTaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogCorrelationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableOnCreateAttribute]
[RequiredAttribute]
[JsonPropertyAttribute]
public string Filename { get; public set; }
    [JsonPropertyAttribute]
public string Source { get; public set; }
    [WriteableOnCreateAttribute]
[JsonPropertyAttribute]
public string ServerTaskId { get; public set; }
    [JsonPropertyAttribute]
public DateTimeOffset Created { get; public set; }
    [JsonPropertyAttribute]
public string LogCorrelationId { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Filename();
    [CompilerGeneratedAttribute]
public void set_Filename(string value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public string get_ServerTaskId();
    [CompilerGeneratedAttribute]
public void set_ServerTaskId(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_LogCorrelationId();
    [CompilerGeneratedAttribute]
public void set_LogCorrelationId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.AuthenticationConfigResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoLoginEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSelfServiceIdentityEditingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <TrustedRedirectUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CookieDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SessionTimeoutInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumSessionDurationInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RememberMeEnabled>k__BackingField;
    public string Id { get; public set; }
    public LinkCollection Links { get; public set; }
    [WriteableAttribute]
public bool AutoLoginEnabled { get; public set; }
    [WriteableAttribute]
public bool IsSelfServiceIdentityEditingEnabled { get; public set; }
    [WriteableAttribute]
public String[] TrustedRedirectUrls { get; public set; }
    [WriteableAttribute]
public string CookieDomain { get; public set; }
    [WriteableAttribute]
public int SessionTimeoutInSeconds { get; public set; }
    [WriteableAttribute]
public int MaximumSessionDurationInSeconds { get; public set; }
    [WriteableAttribute]
public bool RememberMeEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
    [CompilerGeneratedAttribute]
public bool get_AutoLoginEnabled();
    [CompilerGeneratedAttribute]
public void set_AutoLoginEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsSelfServiceIdentityEditingEnabled();
    [CompilerGeneratedAttribute]
public void set_IsSelfServiceIdentityEditingEnabled(bool value);
    [CompilerGeneratedAttribute]
public String[] get_TrustedRedirectUrls();
    [CompilerGeneratedAttribute]
public void set_TrustedRedirectUrls(String[] value);
    [CompilerGeneratedAttribute]
public string get_CookieDomain();
    [CompilerGeneratedAttribute]
public void set_CookieDomain(string value);
    [CompilerGeneratedAttribute]
public int get_SessionTimeoutInSeconds();
    [CompilerGeneratedAttribute]
public void set_SessionTimeoutInSeconds(int value);
    [CompilerGeneratedAttribute]
public int get_MaximumSessionDurationInSeconds();
    [CompilerGeneratedAttribute]
public void set_MaximumSessionDurationInSeconds(int value);
    [CompilerGeneratedAttribute]
public bool get_RememberMeEnabled();
    [CompilerGeneratedAttribute]
public void set_RememberMeEnabled(bool value);
}
public class Octopus.Client.Model.AutoDeployReleaseOverrideResource : object {
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private static IEqualityComparer`1<AutoDeployReleaseOverrideResource> <EnvironmentIdTenantIdComparer>k__BackingField;
    public string EnvironmentId { get; }
    public string TenantId { get; }
    public string ReleaseId { get; }
    public static IEqualityComparer`1<AutoDeployReleaseOverrideResource> EnvironmentIdTenantIdComparer { get; }
    public AutoDeployReleaseOverrideResource(string environmentId, string releaseId);
    [JsonConstructorAttribute]
public AutoDeployReleaseOverrideResource(string environmentId, string tenantId, string releaseId);
    private static AutoDeployReleaseOverrideResource();
    [CompilerGeneratedAttribute]
public string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public string get_ReleaseId();
    [CompilerGeneratedAttribute]
public static IEqualityComparer`1<AutoDeployReleaseOverrideResource> get_EnvironmentIdTenantIdComparer();
}
public enum Octopus.Client.Model.AutomationEnvironment : Enum {
    public int value__;
    public static AutomationEnvironment NoneOrUnknown;
    public static AutomationEnvironment Octopus;
    public static AutomationEnvironment Bamboo;
    public static AutomationEnvironment TeamCity;
    public static AutomationEnvironment AzureDevOps;
    public static AutomationEnvironment AppVeyor;
    public static AutomationEnvironment BitBucket;
    public static AutomationEnvironment Jenkins;
    public static AutomationEnvironment CircleCI;
    public static AutomationEnvironment GitLabCI;
    public static AutomationEnvironment Travis;
    public static AutomationEnvironment GoCD;
    public static AutomationEnvironment BitRise;
    public static AutomationEnvironment Buddy;
    public static AutomationEnvironment BuildKite;
    public static AutomationEnvironment CirrusCI;
    public static AutomationEnvironment AWSCodeBuild;
    public static AutomationEnvironment Codeship;
    public static AutomationEnvironment Drone;
    public static AutomationEnvironment Dsari;
    public static AutomationEnvironment Hudson;
    public static AutomationEnvironment MagnumCI;
    public static AutomationEnvironment SailCI;
    public static AutomationEnvironment Semaphore;
    public static AutomationEnvironment Shippable;
    public static AutomationEnvironment SolanoCI;
    public static AutomationEnvironment StriderCD;
    public static AutomationEnvironment GitHubActions;
}
public class Octopus.Client.Model.AwsElasticContainerRegistryFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessKey>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <SecretKey>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public string Region { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string AccessKey { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public SensitiveValue SecretKey { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public string get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(string value);
    [CompilerGeneratedAttribute]
public string get_AccessKey();
    [CompilerGeneratedAttribute]
public void set_AccessKey(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_SecretKey();
    [CompilerGeneratedAttribute]
public void set_SecretKey(SensitiveValue value);
}
public class Octopus.Client.Model.AzureRootResource : Resource {
}
public class Octopus.Client.Model.BackupConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private string <BackupToDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMasterKeyBackedUp>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BackupAutomatically>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <BackupEvery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <StartingFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <Retention>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <NextDue>k__BackingField;
    [WriteableAttribute]
public string BackupToDirectory { get; public set; }
    [WriteableAttribute]
public bool IsMasterKeyBackedUp { get; public set; }
    [WriteableAttribute]
public bool BackupAutomatically { get; public set; }
    [WriteableAttribute]
public Nullable`1<TimeSpan> BackupEvery { get; public set; }
    [WriteableAttribute]
public Nullable`1<TimeSpan> StartingFrom { get; public set; }
    [WriteableAttribute]
public RetentionPeriod Retention { get; public set; }
    public Nullable`1<DateTimeOffset> NextDue { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BackupToDirectory();
    [CompilerGeneratedAttribute]
public void set_BackupToDirectory(string value);
    [CompilerGeneratedAttribute]
public bool get_IsMasterKeyBackedUp();
    [CompilerGeneratedAttribute]
public void set_IsMasterKeyBackedUp(bool value);
    [CompilerGeneratedAttribute]
public bool get_BackupAutomatically();
    [CompilerGeneratedAttribute]
public void set_BackupAutomatically(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_BackupEvery();
    [CompilerGeneratedAttribute]
public void set_BackupEvery(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_StartingFrom();
    [CompilerGeneratedAttribute]
public void set_StartingFrom(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_Retention();
    [CompilerGeneratedAttribute]
public void set_Retention(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_NextDue();
    [CompilerGeneratedAttribute]
public void set_NextDue(Nullable`1<DateTimeOffset> value);
}
public class Octopus.Client.Model.BuildInformation.OctopusBuildInformation : object {
    internal static string BuildInformationRequiresOctopusVersion;
    internal static string BuildInformationRequiresOctopusVersionMessage;
    [CompilerGeneratedAttribute]
private string <BuildEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Branch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Commit[] <Commits>k__BackingField;
    public string BuildEnvironment { get; public set; }
    public string BuildNumber { get; public set; }
    public string BuildUrl { get; public set; }
    public string Branch { get; public set; }
    public string VcsType { get; public set; }
    public string VcsRoot { get; public set; }
    public string VcsCommitNumber { get; public set; }
    public Commit[] Commits { get; public set; }
    private static OctopusBuildInformation();
    [CompilerGeneratedAttribute]
public string get_BuildEnvironment();
    [CompilerGeneratedAttribute]
public void set_BuildEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_BuildNumber();
    [CompilerGeneratedAttribute]
public void set_BuildNumber(string value);
    [CompilerGeneratedAttribute]
public string get_BuildUrl();
    [CompilerGeneratedAttribute]
public void set_BuildUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(string value);
    [CompilerGeneratedAttribute]
public string get_VcsType();
    [CompilerGeneratedAttribute]
public void set_VcsType(string value);
    [CompilerGeneratedAttribute]
public string get_VcsRoot();
    [CompilerGeneratedAttribute]
public void set_VcsRoot(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitNumber();
    [CompilerGeneratedAttribute]
public void set_VcsCommitNumber(string value);
    [CompilerGeneratedAttribute]
public Commit[] get_Commits();
    [CompilerGeneratedAttribute]
public void set_Commits(Commit[] value);
}
public class Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Branch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssueTrackerName>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkItemLink[] <WorkItems>k__BackingField;
    [CompilerGeneratedAttribute]
private CommitDetail[] <Commits>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IncompleteDataWarning>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Created>k__BackingField;
    public string PackageId { get; public set; }
    public string Version { get; public set; }
    public string BuildEnvironment { get; public set; }
    public string BuildNumber { get; public set; }
    public string BuildUrl { get; public set; }
    public string Branch { get; public set; }
    public string VcsType { get; public set; }
    public string VcsRoot { get; public set; }
    public string VcsCommitNumber { get; public set; }
    public string VcsCommitUrl { get; public set; }
    public string IssueTrackerName { get; public set; }
    public WorkItemLink[] WorkItems { get; public set; }
    public CommitDetail[] Commits { get; public set; }
    public string IncompleteDataWarning { get; public set; }
    public Nullable`1<DateTimeOffset> Created { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_BuildEnvironment();
    [CompilerGeneratedAttribute]
public void set_BuildEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_BuildNumber();
    [CompilerGeneratedAttribute]
public void set_BuildNumber(string value);
    [CompilerGeneratedAttribute]
public string get_BuildUrl();
    [CompilerGeneratedAttribute]
public void set_BuildUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(string value);
    [CompilerGeneratedAttribute]
public string get_VcsType();
    [CompilerGeneratedAttribute]
public void set_VcsType(string value);
    [CompilerGeneratedAttribute]
public string get_VcsRoot();
    [CompilerGeneratedAttribute]
public void set_VcsRoot(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitNumber();
    [CompilerGeneratedAttribute]
public void set_VcsCommitNumber(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitUrl();
    [CompilerGeneratedAttribute]
public void set_VcsCommitUrl(string value);
    [CompilerGeneratedAttribute]
public string get_IssueTrackerName();
    [CompilerGeneratedAttribute]
public void set_IssueTrackerName(string value);
    [CompilerGeneratedAttribute]
public WorkItemLink[] get_WorkItems();
    [CompilerGeneratedAttribute]
public void set_WorkItems(WorkItemLink[] value);
    [CompilerGeneratedAttribute]
public CommitDetail[] get_Commits();
    [CompilerGeneratedAttribute]
public void set_Commits(CommitDetail[] value);
    [CompilerGeneratedAttribute]
public string get_IncompleteDataWarning();
    [CompilerGeneratedAttribute]
public void set_IncompleteDataWarning(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(Nullable`1<DateTimeOffset> value);
}
public class Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private OctopusBuildInformation <OctopusBuildInformation>k__BackingField;
    public string PackageId { get; public set; }
    public string Version { get; public set; }
    public OctopusBuildInformation OctopusBuildInformation { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public OctopusBuildInformation get_OctopusBuildInformation();
    [CompilerGeneratedAttribute]
public void set_OctopusBuildInformation(OctopusBuildInformation value);
}
public class Octopus.Client.Model.BuildInformation.ReleasePackageVersionBuildInformationResource : object {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Branch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssueTrackerName>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkItemLink[] <WorkItems>k__BackingField;
    [CompilerGeneratedAttribute]
private CommitDetail[] <Commits>k__BackingField;
    public string PackageId { get; public set; }
    public string Version { get; public set; }
    public string BuildEnvironment { get; public set; }
    public string BuildNumber { get; public set; }
    public string BuildUrl { get; public set; }
    public string Branch { get; public set; }
    public string VcsType { get; public set; }
    public string VcsRoot { get; public set; }
    public string VcsCommitNumber { get; public set; }
    public string VcsCommitUrl { get; public set; }
    public string IssueTrackerName { get; public set; }
    public WorkItemLink[] WorkItems { get; public set; }
    public CommitDetail[] Commits { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_BuildEnvironment();
    [CompilerGeneratedAttribute]
public void set_BuildEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_BuildNumber();
    [CompilerGeneratedAttribute]
public void set_BuildNumber(string value);
    [CompilerGeneratedAttribute]
public string get_BuildUrl();
    [CompilerGeneratedAttribute]
public void set_BuildUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(string value);
    [CompilerGeneratedAttribute]
public string get_VcsType();
    [CompilerGeneratedAttribute]
public void set_VcsType(string value);
    [CompilerGeneratedAttribute]
public string get_VcsRoot();
    [CompilerGeneratedAttribute]
public void set_VcsRoot(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitNumber();
    [CompilerGeneratedAttribute]
public void set_VcsCommitNumber(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitUrl();
    [CompilerGeneratedAttribute]
public void set_VcsCommitUrl(string value);
    [CompilerGeneratedAttribute]
public string get_IssueTrackerName();
    [CompilerGeneratedAttribute]
public void set_IssueTrackerName(string value);
    [CompilerGeneratedAttribute]
public WorkItemLink[] get_WorkItems();
    [CompilerGeneratedAttribute]
public void set_WorkItems(WorkItemLink[] value);
    [CompilerGeneratedAttribute]
public CommitDetail[] get_Commits();
    [CompilerGeneratedAttribute]
public void set_Commits(CommitDetail[] value);
}
public class Octopus.Client.Model.BuiltInFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DeleteUnreleasedPackagesAfterDays>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBuiltInRepoSyncEnabled>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public Nullable`1<int> DeleteUnreleasedPackagesAfterDays { get; public set; }
    [WriteableAttribute]
public bool IsBuiltInRepoSyncEnabled { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DeleteUnreleasedPackagesAfterDays();
    [CompilerGeneratedAttribute]
public void set_DeleteUnreleasedPackagesAfterDays(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_IsBuiltInRepoSyncEnabled();
    [CompilerGeneratedAttribute]
public void set_IsBuiltInRepoSyncEnabled(bool value);
}
public class Octopus.Client.Model.BuiltInFeedStatsResource : Resource {
    [CompilerGeneratedAttribute]
private int <TotalPackages>k__BackingField;
    public int TotalPackages { get; public set; }
    [CompilerGeneratedAttribute]
public int get_TotalPackages();
    [CompilerGeneratedAttribute]
public void set_TotalPackages(int value);
}
public static class Octopus.Client.Model.BuiltInTasks : object {
    public static String[] TasksThatCanBeQueuedByUsers();
}
public enum Octopus.Client.Model.CalamariUpdateBehavior : Enum {
    public int value__;
    public static CalamariUpdateBehavior UpdateOnDeployment;
    public static CalamariUpdateBehavior UpdateOnNewMachine;
    public static CalamariUpdateBehavior UpdateAlways;
}
public class Octopus.Client.Model.CertificateConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Thumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignatureAlgorithm>k__BackingField;
    public string Name { get; public set; }
    public string Thumbprint { get; public set; }
    public string SignatureAlgorithm { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Thumbprint();
    [CompilerGeneratedAttribute]
public void set_Thumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_SignatureAlgorithm();
    [CompilerGeneratedAttribute]
public void set_SignatureAlgorithm(string value);
}
public enum Octopus.Client.Model.CertificateExportPemOptions : Enum {
    public int value__;
    public static CertificateExportPemOptions PrimaryOnly;
    public static CertificateExportPemOptions PrimaryAndChain;
    public static CertificateExportPemOptions ChainOnly;
}
public enum Octopus.Client.Model.CertificateFormat : Enum {
    public int value__;
    public static CertificateFormat Pkcs12;
    public static CertificateFormat Der;
    public static CertificateFormat Pem;
    public static CertificateFormat Unknown;
}
[DebuggerDisplayAttribute("Name = {Name}")]
public class Octopus.Client.Model.CertificateResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Notes>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <CertificateData>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    private Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Archived>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReplacedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private CertificateFormat <CertificateDataFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectDistinguishedName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectCommonName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectOrganization>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssuerDistinguishedName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssuerCommonName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssuerOrganization>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SelfSigned>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Thumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <NotAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <NotBefore>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsExpired>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasPrivateKey>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SerialNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignatureAlgorithmName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <SubjectAlternativeNames>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<X509Certificate> <CertificateChain>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Notes { get; public set; }
    [WriteableOnCreateAttribute]
public SensitiveValue CertificateData { get; public set; }
    [WriteableOnCreateAttribute]
public SensitiveValue Password { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public TenantedDeploymentMode TenantedDeploymentParticipation { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> Archived { get; private set; }
    [JsonPropertyAttribute]
public string ReplacedBy { get; private set; }
    [JsonPropertyAttribute]
public CertificateFormat CertificateDataFormat { get; private set; }
    [JsonPropertyAttribute]
public string SubjectDistinguishedName { get; private set; }
    [JsonPropertyAttribute]
public string SubjectCommonName { get; private set; }
    [JsonPropertyAttribute]
public string SubjectOrganization { get; private set; }
    [JsonPropertyAttribute]
public string IssuerDistinguishedName { get; private set; }
    [JsonPropertyAttribute]
public string IssuerCommonName { get; private set; }
    [JsonPropertyAttribute]
public string IssuerOrganization { get; private set; }
    [JsonPropertyAttribute]
public bool SelfSigned { get; private set; }
    [JsonPropertyAttribute]
public string Thumbprint { get; private set; }
    [JsonPropertyAttribute]
public DateTimeOffset NotAfter { get; private set; }
    [JsonPropertyAttribute]
public DateTimeOffset NotBefore { get; private set; }
    [JsonPropertyAttribute]
public bool IsExpired { get; private set; }
    [JsonPropertyAttribute]
public bool HasPrivateKey { get; private set; }
    [JsonPropertyAttribute]
public int Version { get; private set; }
    [JsonPropertyAttribute]
public string SerialNumber { get; private set; }
    [JsonPropertyAttribute]
public string SignatureAlgorithmName { get; private set; }
    public IList`1<string> SubjectAlternativeNames { get; public set; }
    public IList`1<X509Certificate> CertificateChain { get; public set; }
    public string SpaceId { get; public set; }
    public CertificateResource(string name, string certificateData);
    public CertificateResource(string name, string certificateData, string password);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Notes();
    [CompilerGeneratedAttribute]
public void set_Notes(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_CertificateData();
    [CompilerGeneratedAttribute]
public void set_CertificateData(SensitiveValue value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    public void set_TenantedDeploymentParticipation(TenantedDeploymentMode value);
    public TenantedDeploymentMode get_TenantedDeploymentParticipation();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Archived();
    [CompilerGeneratedAttribute]
private void set_Archived(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_ReplacedBy();
    [CompilerGeneratedAttribute]
private void set_ReplacedBy(string value);
    [CompilerGeneratedAttribute]
public CertificateFormat get_CertificateDataFormat();
    [CompilerGeneratedAttribute]
private void set_CertificateDataFormat(CertificateFormat value);
    [CompilerGeneratedAttribute]
public string get_SubjectDistinguishedName();
    [CompilerGeneratedAttribute]
private void set_SubjectDistinguishedName(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectCommonName();
    [CompilerGeneratedAttribute]
private void set_SubjectCommonName(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectOrganization();
    [CompilerGeneratedAttribute]
private void set_SubjectOrganization(string value);
    [CompilerGeneratedAttribute]
public string get_IssuerDistinguishedName();
    [CompilerGeneratedAttribute]
private void set_IssuerDistinguishedName(string value);
    [CompilerGeneratedAttribute]
public string get_IssuerCommonName();
    [CompilerGeneratedAttribute]
private void set_IssuerCommonName(string value);
    [CompilerGeneratedAttribute]
public string get_IssuerOrganization();
    [CompilerGeneratedAttribute]
private void set_IssuerOrganization(string value);
    [CompilerGeneratedAttribute]
public bool get_SelfSigned();
    [CompilerGeneratedAttribute]
private void set_SelfSigned(bool value);
    [CompilerGeneratedAttribute]
public string get_Thumbprint();
    [CompilerGeneratedAttribute]
private void set_Thumbprint(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_NotAfter();
    [CompilerGeneratedAttribute]
private void set_NotAfter(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_NotBefore();
    [CompilerGeneratedAttribute]
private void set_NotBefore(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public bool get_IsExpired();
    [CompilerGeneratedAttribute]
private void set_IsExpired(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasPrivateKey();
    [CompilerGeneratedAttribute]
private void set_HasPrivateKey(bool value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
private void set_Version(int value);
    [CompilerGeneratedAttribute]
public string get_SerialNumber();
    [CompilerGeneratedAttribute]
private void set_SerialNumber(string value);
    [CompilerGeneratedAttribute]
public string get_SignatureAlgorithmName();
    [CompilerGeneratedAttribute]
private void set_SignatureAlgorithmName(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_SubjectAlternativeNames();
    [CompilerGeneratedAttribute]
public void set_SubjectAlternativeNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<X509Certificate> get_CertificateChain();
    [CompilerGeneratedAttribute]
public void set_CertificateChain(IList`1<X509Certificate> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.CertificateUsageResource : Resource {
    [CompilerGeneratedAttribute]
private ICollection`1<ProjectResource> <ProjectUsages>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<LibraryVariableSetResource> <LibraryVariableSetUsages>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<TenantResource> <TenantUsages>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<MachineResource> <DeploymentTargetUsages>k__BackingField;
    public ICollection`1<ProjectResource> ProjectUsages { get; public set; }
    public ICollection`1<LibraryVariableSetResource> LibraryVariableSetUsages { get; public set; }
    public ICollection`1<TenantResource> TenantUsages { get; public set; }
    public ICollection`1<MachineResource> DeploymentTargetUsages { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<ProjectResource> get_ProjectUsages();
    [CompilerGeneratedAttribute]
public void set_ProjectUsages(ICollection`1<ProjectResource> value);
    [CompilerGeneratedAttribute]
public ICollection`1<LibraryVariableSetResource> get_LibraryVariableSetUsages();
    [CompilerGeneratedAttribute]
public void set_LibraryVariableSetUsages(ICollection`1<LibraryVariableSetResource> value);
    [CompilerGeneratedAttribute]
public ICollection`1<TenantResource> get_TenantUsages();
    [CompilerGeneratedAttribute]
public void set_TenantUsages(ICollection`1<TenantResource> value);
    [CompilerGeneratedAttribute]
public ICollection`1<MachineResource> get_DeploymentTargetUsages();
    [CompilerGeneratedAttribute]
public void set_DeploymentTargetUsages(ICollection`1<MachineResource> value);
}
public class Octopus.Client.Model.ChannelResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LifecycleId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ChannelVersionRuleResource> <Rules>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableOnCreateAttribute]
public string ProjectId { get; public set; }
    [WriteableAttribute]
public string LifecycleId { get; public set; }
    [WriteableAttribute]
public bool IsDefault { get; public set; }
    [WriteableAttribute]
public List`1<ChannelVersionRuleResource> Rules { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_LifecycleId();
    [CompilerGeneratedAttribute]
public void set_LifecycleId(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public List`1<ChannelVersionRuleResource> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(List`1<ChannelVersionRuleResource> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
    public ChannelResource SetAsDefaultChannel();
    public ChannelResource UsingLifecycle(LifecycleResource lifecycle);
    public ChannelResource ClearRules();
    public ChannelResource AddRule(ChannelVersionRuleResource rule);
    public ChannelResource AddCommonRuleForAllActions(string versionRange, string tagRegex, DeploymentProcessResource process);
    public ChannelResource AddRule(string versionRange, string tagRegex, DeploymentActionResource[] actions);
    public ChannelResource ClearTenantTags();
    public ChannelResource AddOrUpdateTenantTags(TagResource[] tags);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.ChannelVersionRuleResource : Resource {
    [CompilerGeneratedAttribute]
private string <VersionRange>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<DeploymentActionPackageResource> <ActionPackages>k__BackingField;
    [JsonExtensionDataAttribute]
private IDictionary`2<string, JToken> additionalData;
    [WriteableAttribute]
[TrimAttribute]
public string VersionRange { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Tag { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public ICollection`1<DeploymentActionPackageResource> ActionPackages { get; public set; }
    [CompilerGeneratedAttribute]
public string get_VersionRange();
    [CompilerGeneratedAttribute]
public void set_VersionRange(string value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<DeploymentActionPackageResource> get_ActionPackages();
    [CompilerGeneratedAttribute]
public void set_ActionPackages(ICollection`1<DeploymentActionPackageResource> value);
    [OnDeserializedAttribute]
private void OnDeserialized(StreamingContext context);
    [OnSerializingAttribute]
private void OnSerializing(StreamingContext context);
}
public class Octopus.Client.Model.CommitDetails : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LinkUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    public string Id { get; public set; }
    public string LinkUrl { get; public set; }
    public string Comment { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_LinkUrl();
    [CompilerGeneratedAttribute]
public void set_LinkUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
}
public class Octopus.Client.Model.CommitResource : object {
    [CompilerGeneratedAttribute]
private string <CommitMessage>k__BackingField;
    public string CommitMessage { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CommitMessage();
    [CompilerGeneratedAttribute]
public void set_CommitMessage(string value);
}
public class Octopus.Client.Model.CommitResource`1 : CommitResource {
    [CompilerGeneratedAttribute]
private TResource <Resource>k__BackingField;
    public TResource Resource { get; public set; }
    [CompilerGeneratedAttribute]
public TResource get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(TResource value);
}
public enum Octopus.Client.Model.CommunicationStyle : Enum {
    public int value__;
    public static CommunicationStyle None;
    [ScriptConsoleSupportedAttribute]
[TentacleUpgradeSupportedAttribute]
public static CommunicationStyle TentaclePassive;
    [ScriptConsoleSupportedAttribute]
[TentacleUpgradeSupportedAttribute]
public static CommunicationStyle TentacleActive;
    [ScriptConsoleSupportedAttribute]
[SupportedAccountTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static CommunicationStyle Ssh;
    public static CommunicationStyle OfflineDrop;
    [ScriptConsoleSupportedAttribute]
public static CommunicationStyle AzureWebApp;
    [SupportedAccountTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static CommunicationStyle Ftp;
    [SupportedAccountTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ScriptConsoleSupportedAttribute]
public static CommunicationStyle AzureCloudService;
    public static CommunicationStyle AzureServiceFabricCluster;
    [SupportedAccountTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ScriptConsoleSupportedAttribute]
public static CommunicationStyle Kubernetes;
    public static CommunicationStyle StepPackage;
}
public class Octopus.Client.Model.CommunityActionTemplateResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Author>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Website>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HistoryUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ActionTemplateParameterResource> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepPackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Inputs>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Type { get; public set; }
    public string Name { get; public set; }
    public string Author { get; public set; }
    public string Description { get; public set; }
    public int Version { get; public set; }
    public string Website { get; public set; }
    public string HistoryUrl { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, PropertyValueResource> Properties { get; }
    [JsonPropertyAttribute]
public IList`1<ActionTemplateParameterResource> Parameters { get; }
    [JsonPropertyAttribute]
public string StepPackageVersion { get; public set; }
    [JsonPropertyAttribute]
public object Inputs { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Author();
    [CompilerGeneratedAttribute]
public void set_Author(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public string get_Website();
    [CompilerGeneratedAttribute]
public void set_Website(string value);
    [CompilerGeneratedAttribute]
public string get_HistoryUrl();
    [CompilerGeneratedAttribute]
public void set_HistoryUrl(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_Properties();
    [CompilerGeneratedAttribute]
public IList`1<ActionTemplateParameterResource> get_Parameters();
    [CompilerGeneratedAttribute]
public string get_StepPackageVersion();
    [CompilerGeneratedAttribute]
public void set_StepPackageVersion(string value);
    [CompilerGeneratedAttribute]
public object get_Inputs();
    [CompilerGeneratedAttribute]
public void set_Inputs(object value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.ConfigurationItemResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string Name { get; public set; }
    public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
public static class Octopus.Client.Model.ControlType : object {
    public static string ControlTypeKey;
    public static string SingleLineText;
    public static string MultiLineText;
    public static string Select;
    public static string Checkbox;
    public static string Sensitive;
    public static string StepName;
    public static string AzureAccount;
    public static string AmazonWebServicesAccount;
    public static string Certificate;
    private static ControlType();
    public static Dictionary`2<string, string> AsDisplaySettings(string controlType);
}
public class Octopus.Client.Model.CreateChannelCommand : ChannelResource {
    [CompilerGeneratedAttribute]
private string <ChangeDescription>k__BackingField;
    public string ChangeDescription { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChangeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChangeDescription(string value);
}
public class Octopus.Client.Model.DashboardConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <IncludedProjectGroupIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <IncludedProjectIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <IncludedEnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <IncludedTenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProjectLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <IncludedTenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public ReferenceCollection IncludedProjectGroupIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection IncludedProjectIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection IncludedEnvironmentIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection IncludedTenantIds { get; public set; }
    [WriteableAttribute]
public Nullable`1<int> ProjectLimit { get; public set; }
    [WriteableAttribute]
public ReferenceCollection IncludedTenantTags { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceCollection get_IncludedProjectGroupIds();
    [CompilerGeneratedAttribute]
public void set_IncludedProjectGroupIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_IncludedProjectIds();
    [CompilerGeneratedAttribute]
public void set_IncludedProjectIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_IncludedEnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_IncludedEnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_IncludedTenantIds();
    [CompilerGeneratedAttribute]
public void set_IncludedTenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProjectLimit();
    [CompilerGeneratedAttribute]
public void set_ProjectLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_IncludedTenantTags();
    [CompilerGeneratedAttribute]
public void set_IncludedTenantTags(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.DashboardEnvironmentResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Octopus.Client.Model.DashboardItemResource : Resource {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <QueueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CompletedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasPendingInterruptions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasWarningsOrErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrevious>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public string ProjectId { get; public set; }
    public string EnvironmentId { get; public set; }
    public string ReleaseId { get; public set; }
    public string DeploymentId { get; public set; }
    public string TaskId { get; public set; }
    public string TenantId { get; public set; }
    public string ChannelId { get; public set; }
    public string ReleaseVersion { get; public set; }
    public DateTimeOffset Created { get; public set; }
    public DateTimeOffset QueueTime { get; public set; }
    public Nullable`1<DateTimeOffset> StartTime { get; public set; }
    public Nullable`1<DateTimeOffset> CompletedTime { get; public set; }
    public TaskState State { get; public set; }
    public bool HasPendingInterruptions { get; public set; }
    public bool HasWarningsOrErrors { get; public set; }
    public string ErrorMessage { get; public set; }
    public string Duration { get; public set; }
    public bool IsCurrent { get; public set; }
    public bool IsPrevious { get; public set; }
    public bool IsCompleted { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseId();
    [CompilerGeneratedAttribute]
public void set_ReleaseId(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentId();
    [CompilerGeneratedAttribute]
public void set_DeploymentId(string value);
    [CompilerGeneratedAttribute]
public string get_TaskId();
    [CompilerGeneratedAttribute]
public void set_TaskId(string value);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseVersion();
    [CompilerGeneratedAttribute]
public void set_ReleaseVersion(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_QueueTime();
    [CompilerGeneratedAttribute]
public void set_QueueTime(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CompletedTime();
    [CompilerGeneratedAttribute]
public void set_CompletedTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public TaskState get_State();
    [CompilerGeneratedAttribute]
public void set_State(TaskState value);
    [CompilerGeneratedAttribute]
public bool get_HasPendingInterruptions();
    [CompilerGeneratedAttribute]
public void set_HasPendingInterruptions(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasWarningsOrErrors();
    [CompilerGeneratedAttribute]
public void set_HasWarningsOrErrors(bool value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public string get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(string value);
    [CompilerGeneratedAttribute]
public bool get_IsCurrent();
    [CompilerGeneratedAttribute]
public void set_IsCurrent(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPrevious();
    [CompilerGeneratedAttribute]
public void set_IsPrevious(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
public void set_IsCompleted(bool value);
}
public enum Octopus.Client.Model.DashboardItemsOptions : Enum {
    public int value__;
    public static DashboardItemsOptions IncludeCurrentDeploymentOnly;
    public static DashboardItemsOptions IncludeCurrentAndPreviousSuccessfulDeployment;
}
public class Octopus.Client.Model.DashboardProjectGroupResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    public string Name { get; public set; }
    public ReferenceCollection EnvironmentIds { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    public DashboardProjectGroupResource Copy();
}
public class Octopus.Client.Model.DashboardProjectResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectGroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private TenantedDeploymentMode <TenantDeploymentMode>k__BackingField;
    [CompilerGeneratedAttribute]
private TenantedDeploymentMode <TenantedDeploymentMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanPerformUntenantedDeployment>k__BackingField;
    public string Name { get; public set; }
    public bool IsDisabled { get; public set; }
    public string Slug { get; public set; }
    public string ProjectGroupId { get; public set; }
    public ReferenceCollection EnvironmentIds { get; public set; }
    [JsonIgnoreAttribute]
[ObsoleteAttribute("Use TenantedDeploymentMode instead. This property wasn't populated correctly anyway.")]
public TenantedDeploymentMode TenantDeploymentMode { get; public set; }
    public TenantedDeploymentMode TenantedDeploymentMode { get; public set; }
    public bool CanPerformUntenantedDeployment { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public string get_Slug();
    [CompilerGeneratedAttribute]
public void set_Slug(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectGroupId();
    [CompilerGeneratedAttribute]
public void set_ProjectGroupId(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public TenantedDeploymentMode get_TenantDeploymentMode();
    [CompilerGeneratedAttribute]
public void set_TenantDeploymentMode(TenantedDeploymentMode value);
    [CompilerGeneratedAttribute]
public TenantedDeploymentMode get_TenantedDeploymentMode();
    [CompilerGeneratedAttribute]
public void set_TenantedDeploymentMode(TenantedDeploymentMode value);
    [CompilerGeneratedAttribute]
public bool get_CanPerformUntenantedDeployment();
    [CompilerGeneratedAttribute]
public void set_CanPerformUntenantedDeployment(bool value);
    public DashboardProjectResource Copy();
}
public enum Octopus.Client.Model.DashboardRenderMode : Enum {
    public int value__;
    public static DashboardRenderMode VirtualizeColumns;
    public static DashboardRenderMode VirtualizeRowsAndColumns;
}
public class Octopus.Client.Model.DashboardResource : Resource {
    [CompilerGeneratedAttribute]
private List`1<DashboardProjectResource> <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DashboardProjectGroupResource> <ProjectGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DashboardEnvironmentResource> <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DashboardTenantResource> <Tenants>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DashboardItemResource> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DashboardItemResource> <PreviousItems>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProjectLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFiltered>k__BackingField;
    public List`1<DashboardProjectResource> Projects { get; public set; }
    public List`1<DashboardProjectGroupResource> ProjectGroups { get; public set; }
    public List`1<DashboardEnvironmentResource> Environments { get; public set; }
    public List`1<DashboardTenantResource> Tenants { get; public set; }
    public List`1<DashboardItemResource> Items { get; public set; }
    public List`1<DashboardItemResource> PreviousItems { get; public set; }
    public Nullable`1<int> ProjectLimit { get; public set; }
    public bool IsFiltered { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<DashboardProjectResource> get_Projects();
    [CompilerGeneratedAttribute]
public void set_Projects(List`1<DashboardProjectResource> value);
    [CompilerGeneratedAttribute]
public List`1<DashboardProjectGroupResource> get_ProjectGroups();
    [CompilerGeneratedAttribute]
public void set_ProjectGroups(List`1<DashboardProjectGroupResource> value);
    [CompilerGeneratedAttribute]
public List`1<DashboardEnvironmentResource> get_Environments();
    [CompilerGeneratedAttribute]
public void set_Environments(List`1<DashboardEnvironmentResource> value);
    [CompilerGeneratedAttribute]
public List`1<DashboardTenantResource> get_Tenants();
    [CompilerGeneratedAttribute]
public void set_Tenants(List`1<DashboardTenantResource> value);
    [CompilerGeneratedAttribute]
public List`1<DashboardItemResource> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(List`1<DashboardItemResource> value);
    [CompilerGeneratedAttribute]
public List`1<DashboardItemResource> get_PreviousItems();
    [CompilerGeneratedAttribute]
public void set_PreviousItems(List`1<DashboardItemResource> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProjectLimit();
    [CompilerGeneratedAttribute]
public void set_ProjectLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_IsFiltered();
    [CompilerGeneratedAttribute]
public void set_IsFiltered(bool value);
}
public class Octopus.Client.Model.DashboardTenantResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ReferenceCollection> <ProjectEnvironments>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    public string Name { get; public set; }
    public IDictionary`2<string, ReferenceCollection> ProjectEnvironments { get; public set; }
    public ReferenceCollection TenantTags { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ReferenceCollection> get_ProjectEnvironments();
    [CompilerGeneratedAttribute]
public void set_ProjectEnvironments(IDictionary`2<string, ReferenceCollection> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
}
public class Octopus.Client.Model.DatabasePersistenceSettingsResource : PersistenceSettingsResource {
    [CompilerGeneratedAttribute]
private PersistenceSettingsType <Type>k__BackingField;
    public PersistenceSettingsType Type { get; }
    [CompilerGeneratedAttribute]
public virtual PersistenceSettingsType get_Type();
}
[FlagsAttribute]
[JsonConverterAttribute("Octopus.Client.Model.DaysOfWeekFlagConverter")]
public enum Octopus.Client.Model.DaysOfWeek : Enum {
    public int value__;
    public static DaysOfWeek Sunday;
    public static DaysOfWeek Monday;
    public static DaysOfWeek Tuesday;
    public static DaysOfWeek Wednesday;
    public static DaysOfWeek Thursday;
    public static DaysOfWeek Friday;
    public static DaysOfWeek Saturday;
}
public class Octopus.Client.Model.DaysOfWeekFlagConverter : JsonConverter {
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Octopus.Client.Model.Defect : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private DefectStatus <Status>k__BackingField;
    public string Description { get; public set; }
    public DefectStatus Status { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public DefectStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(DefectStatus value);
}
public class Octopus.Client.Model.DefectResource : Resource {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DefectStatus> <Status>k__BackingField;
    [RequiredAttribute]
[WriteableOnCreateAttribute]
public string Description { get; public set; }
    public Nullable`1<DefectStatus> Status { get; public set; }
    public DefectResource(string description);
    public DefectResource(string description, DefectStatus status);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DefectStatus> get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Nullable`1<DefectStatus> value);
}
public enum Octopus.Client.Model.DefectStatus : Enum {
    public int value__;
    public static DefectStatus Unresolved;
    public static DefectStatus Resolved;
}
public enum Octopus.Client.Model.DeleteMachinesBehavior : Enum {
    public int value__;
    public static DeleteMachinesBehavior DoNotDelete;
    public static DeleteMachinesBehavior DeleteUnavailableMachines;
}
public enum Octopus.Client.Model.DeploymentActionCondition : Enum {
    public int value__;
    public static DeploymentActionCondition Success;
    public static DeploymentActionCondition Variable;
}
public class Octopus.Client.Model.DeploymentActionContainerResource : object {
    [CompilerGeneratedAttribute]
private string <Image>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedId>k__BackingField;
    public string Image { get; public set; }
    public string FeedId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(string value);
    [CompilerGeneratedAttribute]
public string get_FeedId();
    [CompilerGeneratedAttribute]
public void set_FeedId(string value);
}
public class Octopus.Client.Model.DeploymentActionPackageResource : object {
    [CompilerGeneratedAttribute]
private string <DeploymentAction>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageReference>k__BackingField;
    public string DeploymentAction { get; public set; }
    public string PackageReference { get; public set; }
    public DeploymentActionPackageResource(string deploymentAction);
    [JsonConstructorAttribute]
public DeploymentActionPackageResource(string deploymentAction, string packageReference);
    [CompilerGeneratedAttribute]
public string get_DeploymentAction();
    [CompilerGeneratedAttribute]
public void set_DeploymentAction(string value);
    [CompilerGeneratedAttribute]
public string get_PackageReference();
    [CompilerGeneratedAttribute]
public void set_PackageReference(string value);
    public bool DeploymentActionNameMatches(string name);
    public bool PackageReferenceNameMatches(string name);
    internal string ToLegacyStringFormat();
    internal static DeploymentActionPackageResource FromLegacyStringFormat(string s);
}
public class Octopus.Client.Model.DeploymentActionResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Notes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WorkerPoolId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WorkerPoolVariable>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentActionContainerResource <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeUsedForProjectVersioning>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ExcludedEnvironments>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Channels>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageReferenceCollection <Packages>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentActionCondition <Condition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepPackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Inputs>k__BackingField;
    public string Name { get; public set; }
    public string ActionType { get; public set; }
    public string Notes { get; public set; }
    public bool IsDisabled { get; public set; }
    public string WorkerPoolId { get; public set; }
    public string WorkerPoolVariable { get; public set; }
    public DeploymentActionContainerResource Container { get; public set; }
    public bool CanBeUsedForProjectVersioning { get; public set; }
    public bool IsRequired { get; public set; }
    [JsonPropertyAttribute]
public ReferenceCollection Environments { get; }
    [JsonPropertyAttribute]
public ReferenceCollection ExcludedEnvironments { get; }
    [JsonPropertyAttribute]
public ReferenceCollection Channels { get; }
    [JsonPropertyAttribute]
public ReferenceCollection TenantTags { get; }
    [JsonPropertyAttribute]
public IDictionary`2<string, PropertyValueResource> Properties { get; }
    [JsonPropertyAttribute]
public PackageReferenceCollection Packages { get; }
    public DeploymentActionCondition Condition { get; public set; }
    [JsonPropertyAttribute]
public string StepPackageVersion { get; public set; }
    [JsonPropertyAttribute]
public object Inputs { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ActionType();
    [CompilerGeneratedAttribute]
public void set_ActionType(string value);
    [CompilerGeneratedAttribute]
public string get_Notes();
    [CompilerGeneratedAttribute]
public void set_Notes(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public string get_WorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_WorkerPoolId(string value);
    [CompilerGeneratedAttribute]
public string get_WorkerPoolVariable();
    [CompilerGeneratedAttribute]
public void set_WorkerPoolVariable(string value);
    [CompilerGeneratedAttribute]
public DeploymentActionContainerResource get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(DeploymentActionContainerResource value);
    [CompilerGeneratedAttribute]
public bool get_CanBeUsedForProjectVersioning();
    [CompilerGeneratedAttribute]
public void set_CanBeUsedForProjectVersioning(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsRequired();
    [CompilerGeneratedAttribute]
public void set_IsRequired(bool value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Environments();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_ExcludedEnvironments();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Channels();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_Properties();
    [CompilerGeneratedAttribute]
public PackageReferenceCollection get_Packages();
    [CompilerGeneratedAttribute]
public DeploymentActionCondition get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(DeploymentActionCondition value);
    [CompilerGeneratedAttribute]
public string get_StepPackageVersion();
    [CompilerGeneratedAttribute]
public void set_StepPackageVersion(string value);
    [CompilerGeneratedAttribute]
public object get_Inputs();
    [CompilerGeneratedAttribute]
public void set_Inputs(object value);
    public DeploymentActionResource ClearAllConditions();
    public DeploymentActionResource ForChannels(ChannelResource[] channels);
    public DeploymentActionResource ForEnvironments(EnvironmentResource[] environments);
    public DeploymentActionResource ForTenantTags(TagResource[] tags);
}
public enum Octopus.Client.Model.DeploymentApprovalStatus : Enum {
    public int value__;
    public static DeploymentApprovalStatus Approved;
    public static DeploymentApprovalStatus Rejected;
}
public class Octopus.Client.Model.DeploymentConnectivityPolicy : object {
    [CompilerGeneratedAttribute]
private SkipMachineBehavior <SkipMachineBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TargetRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowDeploymentsToNoTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExcludeUnhealthyTargets>k__BackingField;
    public SkipMachineBehavior SkipMachineBehavior { get; public set; }
    public ReferenceCollection TargetRoles { get; public set; }
    public bool AllowDeploymentsToNoTargets { get; public set; }
    public bool ExcludeUnhealthyTargets { get; public set; }
    [CompilerGeneratedAttribute]
public SkipMachineBehavior get_SkipMachineBehavior();
    [CompilerGeneratedAttribute]
public void set_SkipMachineBehavior(SkipMachineBehavior value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TargetRoles();
    [CompilerGeneratedAttribute]
public void set_TargetRoles(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public bool get_AllowDeploymentsToNoTargets();
    [CompilerGeneratedAttribute]
public void set_AllowDeploymentsToNoTargets(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExcludeUnhealthyTargets();
    [CompilerGeneratedAttribute]
public void set_ExcludeUnhealthyTargets(bool value);
}
public class Octopus.Client.Model.DeploymentPreviewBaseResource : Resource {
    [CompilerGeneratedAttribute]
private List`1<DeploymentTemplateStep> <StepsToExecute>k__BackingField;
    [CompilerGeneratedAttribute]
private Form <Form>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseGuidedFailureModeByDefault>k__BackingField;
    public List`1<DeploymentTemplateStep> StepsToExecute { get; public set; }
    public Form Form { get; public set; }
    public bool UseGuidedFailureModeByDefault { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<DeploymentTemplateStep> get_StepsToExecute();
    [CompilerGeneratedAttribute]
public void set_StepsToExecute(List`1<DeploymentTemplateStep> value);
    [CompilerGeneratedAttribute]
public Form get_Form();
    [CompilerGeneratedAttribute]
public void set_Form(Form value);
    [CompilerGeneratedAttribute]
public bool get_UseGuidedFailureModeByDefault();
    [CompilerGeneratedAttribute]
public void set_UseGuidedFailureModeByDefault(bool value);
}
public class Octopus.Client.Model.DeploymentPreviewResource : DeploymentPreviewBaseResource {
    [CompilerGeneratedAttribute]
private List`1<ReleaseChanges> <Changes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChangesMarkdown>k__BackingField;
    public List`1<ReleaseChanges> Changes { get; public set; }
    public string ChangesMarkdown { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ReleaseChanges> get_Changes();
    [CompilerGeneratedAttribute]
public void set_Changes(List`1<ReleaseChanges> value);
    [CompilerGeneratedAttribute]
public string get_ChangesMarkdown();
    [CompilerGeneratedAttribute]
public void set_ChangesMarkdown(string value);
}
public class Octopus.Client.Model.DeploymentProcess.InlineScriptAction : ScriptAction {
    private string scriptBody;
    [CompilerGeneratedAttribute]
private ScriptSyntax <Syntax>k__BackingField;
    public ScriptSource Source { get; }
    public ScriptSyntax Syntax { get; }
    public InlineScriptAction(ScriptSyntax syntax, string scriptBody);
    public virtual ScriptSource get_Source();
    [CompilerGeneratedAttribute]
public virtual ScriptSyntax get_Syntax();
    public string GetScriptBody();
}
public class Octopus.Client.Model.DeploymentProcess.InlineScriptActionFromFileInAssembly : ScriptAction {
    [CompilerGeneratedAttribute]
private Assembly <ResourceAssembly>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceName>k__BackingField;
    public ScriptSource Source { get; }
    public ScriptSyntax Syntax { get; }
    public Assembly ResourceAssembly { get; }
    public string ResourceName { get; }
    public InlineScriptActionFromFileInAssembly(string resourceName, Assembly resourceAssembly);
    public virtual ScriptSource get_Source();
    public virtual ScriptSyntax get_Syntax();
    [CompilerGeneratedAttribute]
public Assembly get_ResourceAssembly();
    [CompilerGeneratedAttribute]
public string get_ResourceName();
    public string GetScriptBody();
}
public abstract class Octopus.Client.Model.DeploymentProcess.ScriptAction : object {
    public ScriptSource Source { get; }
    public ScriptSyntax Syntax { get; }
    public abstract virtual ScriptSource get_Source();
    public abstract virtual ScriptSyntax get_Syntax();
    protected ScriptSyntax CalculateScriptType(string scriptFileName);
    public static InlineScriptAction InlineScript(ScriptSyntax syntax, string scriptBody);
    public static InlineScriptActionFromFileInAssembly InlineScriptFromFileInAssembly(string resourceName, Assembly resourceAssembly);
}
public class Octopus.Client.Model.DeploymentProcess.ScriptActionFromFileInPackage : ScriptAction {
    [CompilerGeneratedAttribute]
private string <PackageFeedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScriptFilePath>k__BackingField;
    public ScriptSource Source { get; }
    public ScriptSyntax Syntax { get; }
    public string PackageFeedId { get; protected set; }
    public string PackageId { get; protected set; }
    public string ScriptFilePath { get; protected set; }
    public ScriptActionFromFileInPackage(PackageResource package, string scriptFilePath);
    public virtual ScriptSource get_Source();
    public virtual ScriptSyntax get_Syntax();
    [CompilerGeneratedAttribute]
public string get_PackageFeedId();
    [CompilerGeneratedAttribute]
protected void set_PackageFeedId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
protected void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_ScriptFilePath();
    [CompilerGeneratedAttribute]
protected void set_ScriptFilePath(string value);
}
public enum Octopus.Client.Model.DeploymentProcess.ScriptSource : Enum {
    public int value__;
    public static ScriptSource Inline;
    public static ScriptSource Package;
}
public enum Octopus.Client.Model.DeploymentProcess.ScriptTarget : Enum {
    public int value__;
    public static ScriptTarget Server;
    public static ScriptTarget Target;
}
public class Octopus.Client.Model.DeploymentProcessResource : Resource {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DeploymentStepResource> <Steps>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public string ProjectId { get; public set; }
    public IList`1<DeploymentStepResource> Steps { get; }
    [RequiredAttribute]
public int Version { get; public set; }
    public string LastSnapshotId { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<DeploymentStepResource> get_Steps();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LastSnapshotId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LastSnapshotId(string value);
    public sealed virtual DeploymentStepResource FindStep(string name);
    public sealed virtual DeploymentStepResource AddOrUpdateStep(string name);
    public sealed virtual IProcessResource RemoveStep(string name);
    public sealed virtual IProcessResource ClearSteps();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.DeploymentPromomotionTenant : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DeploymentPromotionTarget> <PromoteTo>k__BackingField;
    public string Name { get; public set; }
    public List`1<DeploymentPromotionTarget> PromoteTo { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<DeploymentPromotionTarget> get_PromoteTo();
    [CompilerGeneratedAttribute]
public void set_PromoteTo(List`1<DeploymentPromotionTarget> value);
}
public class Octopus.Client.Model.DeploymentPromotionTarget : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Octopus.Client.Model.DeploymentResource : Resource {
    [CompilerGeneratedAttribute]
private string <ReleaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReleaseChanges> <Changes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChangesMarkdown>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePackageDownload>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePackageRedeployment>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SkipActions>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SpecificMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ExcludedMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManifestVariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseGuidedFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <FormValues>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTimeExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleRetentionPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeployedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeployedById>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FailureEncountered>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <DeployedToMachineIds>k__BackingField;
    [RequiredAttribute]
[WriteableOnCreateAttribute]
public string ReleaseId { get; public set; }
    public string ChannelId { get; public set; }
    public string DeploymentProcessId { get; public set; }
    public List`1<ReleaseChanges> Changes { get; public set; }
    public string ChangesMarkdown { get; public set; }
    [RequiredAttribute]
[WriteableOnCreateAttribute]
public string EnvironmentId { get; public set; }
    [WriteableOnCreateAttribute]
public string TenantId { get; public set; }
    [WriteableOnCreateAttribute]
public bool ForcePackageDownload { get; public set; }
    [WriteableOnCreateAttribute]
public bool ForcePackageRedeployment { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection SkipActions { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection SpecificMachineIds { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection ExcludedMachineIds { get; public set; }
    public string ManifestVariableSetId { get; public set; }
    public string TaskId { get; public set; }
    public string ProjectId { get; public set; }
    [WriteableOnCreateAttribute]
public bool UseGuidedFailure { get; public set; }
    [WriteableOnCreateAttribute]
public string Comments { get; public set; }
    [WriteableOnCreateAttribute]
[JsonPropertyAttribute]
public Dictionary`2<string, string> FormValues { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTime { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTimeExpiry { get; public set; }
    public string Name { get; public set; }
    public DateTimeOffset Created { get; public set; }
    public string SpaceId { get; public set; }
    public RetentionPeriod TentacleRetentionPeriod { get; public set; }
    public string DeployedBy { get; public set; }
    public string DeployedById { get; public set; }
    public bool FailureEncountered { get; public set; }
    public ReferenceCollection DeployedToMachineIds { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ReleaseId();
    [CompilerGeneratedAttribute]
public void set_ReleaseId(string value);
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentProcessId();
    [CompilerGeneratedAttribute]
public void set_DeploymentProcessId(string value);
    [CompilerGeneratedAttribute]
public List`1<ReleaseChanges> get_Changes();
    [CompilerGeneratedAttribute]
public void set_Changes(List`1<ReleaseChanges> value);
    [CompilerGeneratedAttribute]
public string get_ChangesMarkdown();
    [CompilerGeneratedAttribute]
public void set_ChangesMarkdown(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TenantId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ForcePackageDownload();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ForcePackageDownload(bool value);
    [CompilerGeneratedAttribute]
public bool get_ForcePackageRedeployment();
    [CompilerGeneratedAttribute]
public void set_ForcePackageRedeployment(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_SkipActions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipActions(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_SpecificMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpecificMachineIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_ExcludedMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExcludedMachineIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ManifestVariableSetId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ManifestVariableSetId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TaskId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TaskId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseGuidedFailure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseGuidedFailure(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Comments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Comments(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, string> get_FormValues();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FormValues(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTimeOffset> get_QueueTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueueTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTimeOffset> get_QueueTimeExpiry();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueueTimeExpiry(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual RetentionPeriod get_TentacleRetentionPeriod();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TentacleRetentionPeriod(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DeployedBy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedBy(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DeployedById();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedById(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_FailureEncountered();
    [CompilerGeneratedAttribute]
public void set_FailureEncountered(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_DeployedToMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedToMachineIds(ReferenceCollection value);
}
public class Octopus.Client.Model.DeploymentSettingsResource : Resource {
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentConnectivityPolicy <ConnectivityPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private GuidedFailureMode <DefaultGuidedFailureMode>k__BackingField;
    [CompilerGeneratedAttribute]
private VersioningStrategyResource <VersioningStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotesTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultToSkipIfAlreadyInstalled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentChangesTemplate>k__BackingField;
    public string SpaceId { get; public set; }
    public string ProjectId { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public DeploymentConnectivityPolicy ConnectivityPolicy { get; public set; }
    [WriteableAttribute]
public GuidedFailureMode DefaultGuidedFailureMode { get; public set; }
    [WriteableAttribute]
public VersioningStrategyResource VersioningStrategy { get; public set; }
    [WriteableAttribute]
public string ReleaseNotesTemplate { get; public set; }
    [WriteableAttribute]
public bool DefaultToSkipIfAlreadyInstalled { get; public set; }
    [WriteableAttribute]
public string DeploymentChangesTemplate { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public DeploymentConnectivityPolicy get_ConnectivityPolicy();
    [CompilerGeneratedAttribute]
public void set_ConnectivityPolicy(DeploymentConnectivityPolicy value);
    [CompilerGeneratedAttribute]
public GuidedFailureMode get_DefaultGuidedFailureMode();
    [CompilerGeneratedAttribute]
public void set_DefaultGuidedFailureMode(GuidedFailureMode value);
    [CompilerGeneratedAttribute]
public VersioningStrategyResource get_VersioningStrategy();
    [CompilerGeneratedAttribute]
public void set_VersioningStrategy(VersioningStrategyResource value);
    [CompilerGeneratedAttribute]
public string get_ReleaseNotesTemplate();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotesTemplate(string value);
    [CompilerGeneratedAttribute]
public bool get_DefaultToSkipIfAlreadyInstalled();
    [CompilerGeneratedAttribute]
public void set_DefaultToSkipIfAlreadyInstalled(bool value);
    [CompilerGeneratedAttribute]
public string get_DeploymentChangesTemplate();
    [CompilerGeneratedAttribute]
public void set_DeploymentChangesTemplate(string value);
}
public enum Octopus.Client.Model.DeploymentStepCondition : Enum {
    public int value__;
    public static DeploymentStepCondition Success;
    public static DeploymentStepCondition Failure;
    public static DeploymentStepCondition Always;
    public static DeploymentStepCondition Variable;
}
public enum Octopus.Client.Model.DeploymentStepPackageRequirement : Enum {
    public int value__;
    public static DeploymentStepPackageRequirement LetOctopusDecide;
    public static DeploymentStepPackageRequirement BeforePackageAcquisition;
    public static DeploymentStepPackageRequirement AfterPackageAcquisition;
}
public class Octopus.Client.Model.DeploymentStepProperties : object {
}
public class Octopus.Client.Model.DeploymentStepResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentStepPackageRequirement <PackageRequirement>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentStepCondition <Condition>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentStepStartTrigger <StartTrigger>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DeploymentActionResource> <Actions>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    [ObsoleteAttribute("This method was deprecated in https://github.com/OctopusDeploy/Issues/issues/3974.  Please use the PackageRequirement property instead.")]
public bool RequiresPackagesToBeAcquired { get; public set; }
    public DeploymentStepPackageRequirement PackageRequirement { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, PropertyValueResource> Properties { get; }
    public DeploymentStepCondition Condition { get; public set; }
    public DeploymentStepStartTrigger StartTrigger { get; public set; }
    [JsonPropertyAttribute]
public List`1<DeploymentActionResource> Actions { get; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public bool get_RequiresPackagesToBeAcquired();
    public void set_RequiresPackagesToBeAcquired(bool value);
    [CompilerGeneratedAttribute]
public DeploymentStepPackageRequirement get_PackageRequirement();
    [CompilerGeneratedAttribute]
public void set_PackageRequirement(DeploymentStepPackageRequirement value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_Properties();
    [CompilerGeneratedAttribute]
public DeploymentStepCondition get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(DeploymentStepCondition value);
    [CompilerGeneratedAttribute]
public DeploymentStepStartTrigger get_StartTrigger();
    [CompilerGeneratedAttribute]
public void set_StartTrigger(DeploymentStepStartTrigger value);
    [CompilerGeneratedAttribute]
public List`1<DeploymentActionResource> get_Actions();
    public DeploymentStepResource ClearActions();
    public DeploymentStepResource WithCondition(DeploymentStepCondition condition);
    public DeploymentStepResource WithStartTrigger(DeploymentStepStartTrigger startTrigger);
    public DeploymentStepResource WithPackageRequirement(DeploymentStepPackageRequirement packageRequirement);
    [ObsoleteAttribute("This method was deprecated in https://github.com/OctopusDeploy/Issues/issues/3974.  Please use the WithPackageRequirement method instead.")]
public DeploymentStepResource RequirePackagesToBeAcquired(bool requirePackagesToBeAcquired);
    public DeploymentStepResource TargetingRoles(String[] roles);
    public DeploymentActionResource FindAction(string name);
    public DeploymentStepResource RemoveAction(string name);
    public DeploymentActionResource AddOrUpdateAction(string name);
    public DeploymentActionResource AddOrUpdateManualInterventionAction(string name, string instructions);
    public DeploymentActionResource AddOrUpdateScriptAction(string name, ScriptAction scriptAction, ScriptTarget scriptTarget);
    public DeploymentActionResource AddOrUpdatePackageAction(string name, PackageResource package);
}
public enum Octopus.Client.Model.DeploymentStepStartTrigger : Enum {
    public int value__;
    public static DeploymentStepStartTrigger StartAfterPrevious;
    public static DeploymentStepStartTrigger StartWithPrevious;
}
public enum Octopus.Client.Model.DeploymentTargets.DeploymentTargetTaskType : Enum {
    public int value__;
    public static DeploymentTargetTaskType Deployment;
    public static DeploymentTargetTaskType RunbookRun;
}
public class Octopus.Client.Model.DeploymentTemplateBaseResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsVariableSetModified>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLibraryVariableSetModified>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DeploymentPromotionTarget> <PromoteTo>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DeploymentPromomotionTenant> <TenantPromotions>k__BackingField;
    public bool IsVariableSetModified { get; public set; }
    public bool IsLibraryVariableSetModified { get; public set; }
    public List`1<DeploymentPromotionTarget> PromoteTo { get; public set; }
    public List`1<DeploymentPromomotionTenant> TenantPromotions { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsVariableSetModified();
    [CompilerGeneratedAttribute]
public void set_IsVariableSetModified(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsLibraryVariableSetModified();
    [CompilerGeneratedAttribute]
public void set_IsLibraryVariableSetModified(bool value);
    [CompilerGeneratedAttribute]
public List`1<DeploymentPromotionTarget> get_PromoteTo();
    [CompilerGeneratedAttribute]
public void set_PromoteTo(List`1<DeploymentPromotionTarget> value);
    [CompilerGeneratedAttribute]
public List`1<DeploymentPromomotionTenant> get_TenantPromotions();
    [CompilerGeneratedAttribute]
public void set_TenantPromotions(List`1<DeploymentPromomotionTenant> value);
}
public class Octopus.Client.Model.DeploymentTemplateResource : DeploymentTemplateBaseResource {
    [CompilerGeneratedAttribute]
private bool <IsDeploymentProcessModified>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentNotes>k__BackingField;
    public bool IsDeploymentProcessModified { get; public set; }
    public string DeploymentNotes { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsDeploymentProcessModified();
    [CompilerGeneratedAttribute]
public void set_IsDeploymentProcessModified(bool value);
    [CompilerGeneratedAttribute]
public string get_DeploymentNotes();
    [CompilerGeneratedAttribute]
public void set_DeploymentNotes(string value);
}
public class Octopus.Client.Model.DeploymentTemplateStep : object {
    [CompilerGeneratedAttribute]
private string <ActionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <MachineNames>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineDeploymentPreview[] <Machines>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeSkipped>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasNoApplicableMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceDataItem[] <UnavailableMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceDataItem[] <ExcludedMachines>k__BackingField;
    public string ActionId { get; public set; }
    public string ActionName { get; public set; }
    public string ActionNumber { get; public set; }
    public String[] Roles { get; public set; }
    public String[] MachineNames { get; public set; }
    public MachineDeploymentPreview[] Machines { get; public set; }
    public bool CanBeSkipped { get; public set; }
    public bool HasNoApplicableMachines { get; public set; }
    public ReferenceDataItem[] UnavailableMachines { get; public set; }
    public ReferenceDataItem[] ExcludedMachines { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ActionId();
    [CompilerGeneratedAttribute]
public void set_ActionId(string value);
    [CompilerGeneratedAttribute]
public string get_ActionName();
    [CompilerGeneratedAttribute]
public void set_ActionName(string value);
    [CompilerGeneratedAttribute]
public string get_ActionNumber();
    [CompilerGeneratedAttribute]
public void set_ActionNumber(string value);
    [CompilerGeneratedAttribute]
public String[] get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_MachineNames();
    [CompilerGeneratedAttribute]
public void set_MachineNames(String[] value);
    [CompilerGeneratedAttribute]
public MachineDeploymentPreview[] get_Machines();
    [CompilerGeneratedAttribute]
public void set_Machines(MachineDeploymentPreview[] value);
    [CompilerGeneratedAttribute]
public bool get_CanBeSkipped();
    [CompilerGeneratedAttribute]
public void set_CanBeSkipped(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasNoApplicableMachines();
    [CompilerGeneratedAttribute]
public void set_HasNoApplicableMachines(bool value);
    [CompilerGeneratedAttribute]
public ReferenceDataItem[] get_UnavailableMachines();
    [CompilerGeneratedAttribute]
public void set_UnavailableMachines(ReferenceDataItem[] value);
    [CompilerGeneratedAttribute]
public ReferenceDataItem[] get_ExcludedMachines();
    [CompilerGeneratedAttribute]
public void set_ExcludedMachines(ReferenceDataItem[] value);
}
public enum Octopus.Client.Model.DiscoverableEndpointType : Enum {
    public int value__;
    public static DiscoverableEndpointType TentaclePassive;
    public static DiscoverableEndpointType TentacleActive;
    public static DiscoverableEndpointType Ssh;
}
public class Octopus.Client.Model.DiscoverMachineOptions : object {
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DiscoverableEndpointType> <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ProxyResource <Proxy>k__BackingField;
    public string Host { get; }
    public int Port { get; public set; }
    public Nullable`1<DiscoverableEndpointType> Type { get; public set; }
    public ProxyResource Proxy { get; public set; }
    public DiscoverMachineOptions(string host);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<DiscoverableEndpointType> get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Nullable`1<DiscoverableEndpointType> value);
    [CompilerGeneratedAttribute]
public ProxyResource get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(ProxyResource value);
}
public class Octopus.Client.Model.DockerFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegistryPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public string ApiVersion { get; public set; }
    [WriteableAttribute]
public string RegistryPath { get; public set; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_RegistryPath();
    [CompilerGeneratedAttribute]
public void set_RegistryPath(string value);
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.DocumentTypeResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public enum Octopus.Client.Model.EmailPriority : Enum {
    public int value__;
    public static EmailPriority Normal;
    public static EmailPriority Low;
    public static EmailPriority High;
}
public class Octopus.Client.Model.EncryptedBytes : object {
    private Byte[] ciphertext;
    private Byte[] salt;
    public Byte[] Ciphertext { get; }
    public Byte[] Salt { get; }
    public EncryptedBytes(Byte[] ciphertext, Byte[] salt);
    public Byte[] get_Ciphertext();
    public Byte[] get_Salt();
    public string ToBase64();
    public static EncryptedBytes FromBase64(string base64);
}
public enum Octopus.Client.Model.Endpoints.AzureServiceFabricCredentialType : Enum {
    public int value__;
    public static AzureServiceFabricCredentialType ClientCredential;
    public static AzureServiceFabricCredentialType UserCredential;
}
public enum Octopus.Client.Model.Endpoints.AzureServiceFabricSecurityMode : Enum {
    public int value__;
    public static AzureServiceFabricSecurityMode Unsecure;
    public static AzureServiceFabricSecurityMode SecureClientCertificate;
    public static AzureServiceFabricSecurityMode SecureAzureAD;
}
public class Octopus.Client.Model.Endpoints.AzureWebAppEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceGroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebAppName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebAppSlotName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [TrimAttribute]
[WriteableAttribute]
public string AccountId { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ResourceGroupName { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string WebAppName { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string WebAppSlotName { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string DefaultWorkerPoolId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceGroupName();
    [CompilerGeneratedAttribute]
public void set_ResourceGroupName(string value);
    [CompilerGeneratedAttribute]
public string get_WebAppName();
    [CompilerGeneratedAttribute]
public void set_WebAppName(string value);
    [CompilerGeneratedAttribute]
public string get_WebAppSlotName();
    [CompilerGeneratedAttribute]
public void set_WebAppSlotName(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
}
public class Octopus.Client.Model.Endpoints.CloudRegionEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [TrimAttribute]
[WriteableAttribute]
public string DefaultWorkerPoolId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
}
public class Octopus.Client.Model.Endpoints.CloudServiceEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CloudServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageAccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slot>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SwapIfPossible>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseCurrentInstanceCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public string AccountId { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public string CloudServiceName { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public string StorageAccountName { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Slot { get; public set; }
    [WriteableAttribute]
public bool SwapIfPossible { get; public set; }
    [WriteableAttribute]
public bool UseCurrentInstanceCount { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string DefaultWorkerPoolId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(string value);
    [CompilerGeneratedAttribute]
public string get_CloudServiceName();
    [CompilerGeneratedAttribute]
public void set_CloudServiceName(string value);
    [CompilerGeneratedAttribute]
public string get_StorageAccountName();
    [CompilerGeneratedAttribute]
public void set_StorageAccountName(string value);
    [CompilerGeneratedAttribute]
public string get_Slot();
    [CompilerGeneratedAttribute]
public void set_Slot(string value);
    [CompilerGeneratedAttribute]
public bool get_SwapIfPossible();
    [CompilerGeneratedAttribute]
public void set_SwapIfPossible(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseCurrentInstanceCount();
    [CompilerGeneratedAttribute]
public void set_UseCurrentInstanceCount(bool value);
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
}
public abstract class Octopus.Client.Model.Endpoints.EndpointResource : Resource {
    public CommunicationStyle CommunicationStyle { get; }
    public abstract virtual CommunicationStyle get_CommunicationStyle();
}
public interface Octopus.Client.Model.Endpoints.IEndpointWithMultipleAuthenticationResource {
    public string AuthenticationType { get; }
    public abstract virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.KubernetesAwsAuthenticationResource : KubernetesStandardAccountAuthenticationResource {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string ClusterName { get; public set; }
    public string AuthenticationType { get; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
public void set_ClusterName(string value);
    public virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.KubernetesAzureAuthenticationResource : KubernetesStandardAccountAuthenticationResource {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterResourceGroup>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string ClusterName { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ClusterResourceGroup { get; public set; }
    public string AuthenticationType { get; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
public void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public string get_ClusterResourceGroup();
    [CompilerGeneratedAttribute]
public void set_ClusterResourceGroup(string value);
    public virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.KubernetesCertificateAuthenticationResource : object {
    [CompilerGeneratedAttribute]
private string <ClientCertificate>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string ClientCertificate { get; public set; }
    public string AuthenticationType { get; }
    [CompilerGeneratedAttribute]
public string get_ClientCertificate();
    [CompilerGeneratedAttribute]
public void set_ClientCertificate(string value);
    public sealed virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.KubernetesEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <ClusterCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterCertificatePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SkipTlsVerification>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEndpointWithMultipleAuthenticationResource <Authentication>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentActionContainerResource <Container>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [TrimAttribute]
[WriteableAttribute]
public string ClusterCertificate { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ClusterCertificatePath { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ClusterUrl { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Namespace { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string SkipTlsVerification { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ProxyId { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string DefaultWorkerPoolId { get; public set; }
    [WriteableAttribute]
public IEndpointWithMultipleAuthenticationResource Authentication { get; public set; }
    [WriteableAttribute]
public DeploymentActionContainerResource Container { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_ClusterCertificate();
    [CompilerGeneratedAttribute]
public void set_ClusterCertificate(string value);
    [CompilerGeneratedAttribute]
public string get_ClusterCertificatePath();
    [CompilerGeneratedAttribute]
public void set_ClusterCertificatePath(string value);
    [CompilerGeneratedAttribute]
public string get_ClusterUrl();
    [CompilerGeneratedAttribute]
public void set_ClusterUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_SkipTlsVerification();
    [CompilerGeneratedAttribute]
public void set_SkipTlsVerification(string value);
    [CompilerGeneratedAttribute]
public string get_ProxyId();
    [CompilerGeneratedAttribute]
public void set_ProxyId(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
    [CompilerGeneratedAttribute]
public IEndpointWithMultipleAuthenticationResource get_Authentication();
    [CompilerGeneratedAttribute]
public void set_Authentication(IEndpointWithMultipleAuthenticationResource value);
    [CompilerGeneratedAttribute]
public DeploymentActionContainerResource get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(DeploymentActionContainerResource value);
}
public class Octopus.Client.Model.Endpoints.KubernetesGoogleCloudAuthenticationResource : KubernetesStandardAccountAuthenticationResource {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseVmServiceAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ImpersonateServiceAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceAccountEmails>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Zone>k__BackingField;
    public string ClusterName { get; public set; }
    public bool UseVmServiceAccount { get; public set; }
    public bool ImpersonateServiceAccount { get; public set; }
    public string ServiceAccountEmails { get; public set; }
    public string Project { get; public set; }
    public string Region { get; public set; }
    public string Zone { get; public set; }
    public string AuthenticationType { get; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
public void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public bool get_UseVmServiceAccount();
    [CompilerGeneratedAttribute]
public void set_UseVmServiceAccount(bool value);
    [CompilerGeneratedAttribute]
public bool get_ImpersonateServiceAccount();
    [CompilerGeneratedAttribute]
public void set_ImpersonateServiceAccount(bool value);
    [CompilerGeneratedAttribute]
public string get_ServiceAccountEmails();
    [CompilerGeneratedAttribute]
public void set_ServiceAccountEmails(string value);
    [CompilerGeneratedAttribute]
public string get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(string value);
    [CompilerGeneratedAttribute]
public string get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(string value);
    [CompilerGeneratedAttribute]
public string get_Zone();
    [CompilerGeneratedAttribute]
public void set_Zone(string value);
    public virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.KubernetesPodServiceAuthenticationResource : object {
    [CompilerGeneratedAttribute]
private string <TokenPath>k__BackingField;
    public string TokenPath { get; public set; }
    public string AuthenticationType { get; }
    [CompilerGeneratedAttribute]
public string get_TokenPath();
    [CompilerGeneratedAttribute]
public void set_TokenPath(string value);
    public sealed virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.KubernetesStandardAccountAuthenticationResource : object {
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string AccountId { get; public set; }
    public string AuthenticationType { get; }
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(string value);
    public virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.ListeningTentacleEndpointResource : TentacleEndpointResource {
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [TrimAttribute]
[WriteableAttribute]
public string Uri { get; public set; }
    [WriteableAttribute]
public string ProxyId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
    [CompilerGeneratedAttribute]
public string get_ProxyId();
    [CompilerGeneratedAttribute]
public void set_ProxyId(string value);
}
public class Octopus.Client.Model.Endpoints.OfflineDropDestinationResource : object {
    [CompilerGeneratedAttribute]
private OfflineDropDestinationType <DestinationType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DropFolderPath>k__BackingField;
    public OfflineDropDestinationType DestinationType { get; public set; }
    [TrimAttribute]
public string DropFolderPath { get; public set; }
    public OfflineDropDestinationResource(string dropFolderPath);
    [CompilerGeneratedAttribute]
public OfflineDropDestinationType get_DestinationType();
    [CompilerGeneratedAttribute]
public void set_DestinationType(OfflineDropDestinationType value);
    [CompilerGeneratedAttribute]
public string get_DropFolderPath();
    [CompilerGeneratedAttribute]
public void set_DropFolderPath(string value);
}
public enum Octopus.Client.Model.Endpoints.OfflineDropDestinationType : Enum {
    public int value__;
    public static OfflineDropDestinationType Artifact;
    public static OfflineDropDestinationType FileSystem;
}
public class Octopus.Client.Model.Endpoints.OfflineDropEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private OfflineDropDestinationResource <Destination>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <SensitiveVariablesEncryptionPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationsDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OctopusWorkingDirectory>k__BackingField;
    [JsonExtensionDataAttribute]
private IDictionary`2<string, JToken> additionalData;
    public CommunicationStyle CommunicationStyle { get; }
    [WriteableAttribute]
public OfflineDropDestinationResource Destination { get; public set; }
    [WriteableAttribute]
public SensitiveValue SensitiveVariablesEncryptionPassword { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ApplicationsDirectory { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string OctopusWorkingDirectory { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public OfflineDropDestinationResource get_Destination();
    [CompilerGeneratedAttribute]
public void set_Destination(OfflineDropDestinationResource value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_SensitiveVariablesEncryptionPassword();
    [CompilerGeneratedAttribute]
public void set_SensitiveVariablesEncryptionPassword(SensitiveValue value);
    [CompilerGeneratedAttribute]
public string get_ApplicationsDirectory();
    [CompilerGeneratedAttribute]
public void set_ApplicationsDirectory(string value);
    [CompilerGeneratedAttribute]
public string get_OctopusWorkingDirectory();
    [CompilerGeneratedAttribute]
public void set_OctopusWorkingDirectory(string value);
    [OnSerializingAttribute]
private void OnSerializing(StreamingContext context);
    [OnDeserializedAttribute]
private void OnDeserialized(StreamingContext context);
}
public class Octopus.Client.Model.Endpoints.PollingTentacleEndpointResource : TentacleEndpointResource {
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [TrimAttribute]
[WriteableAttribute]
public string Uri { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
}
public class Octopus.Client.Model.Endpoints.ServiceFabricEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <ConnectionEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private AzureServiceFabricSecurityMode <SecurityMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerCertThumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientCertVariable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateStoreLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateStoreName>k__BackingField;
    [CompilerGeneratedAttribute]
private AzureServiceFabricCredentialType <AadCredentialType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AadClientCredentialSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AadUserCredentialUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <AadUserCredentialPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [TrimAttribute]
[WriteableAttribute]
public string ConnectionEndpoint { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public AzureServiceFabricSecurityMode SecurityMode { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ServerCertThumbprint { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ClientCertVariable { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string CertificateStoreLocation { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string CertificateStoreName { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public AzureServiceFabricCredentialType AadCredentialType { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string AadClientCredentialSecret { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string AadUserCredentialUsername { get; public set; }
    [WriteableAttribute]
public SensitiveValue AadUserCredentialPassword { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string DefaultWorkerPoolId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_ConnectionEndpoint();
    [CompilerGeneratedAttribute]
public void set_ConnectionEndpoint(string value);
    [CompilerGeneratedAttribute]
public AzureServiceFabricSecurityMode get_SecurityMode();
    [CompilerGeneratedAttribute]
public void set_SecurityMode(AzureServiceFabricSecurityMode value);
    [CompilerGeneratedAttribute]
public string get_ServerCertThumbprint();
    [CompilerGeneratedAttribute]
public void set_ServerCertThumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_ClientCertVariable();
    [CompilerGeneratedAttribute]
public void set_ClientCertVariable(string value);
    [CompilerGeneratedAttribute]
public string get_CertificateStoreLocation();
    [CompilerGeneratedAttribute]
public void set_CertificateStoreLocation(string value);
    [CompilerGeneratedAttribute]
public string get_CertificateStoreName();
    [CompilerGeneratedAttribute]
public void set_CertificateStoreName(string value);
    [CompilerGeneratedAttribute]
public AzureServiceFabricCredentialType get_AadCredentialType();
    [CompilerGeneratedAttribute]
public void set_AadCredentialType(AzureServiceFabricCredentialType value);
    [CompilerGeneratedAttribute]
public string get_AadClientCredentialSecret();
    [CompilerGeneratedAttribute]
public void set_AadClientCredentialSecret(string value);
    [CompilerGeneratedAttribute]
public string get_AadUserCredentialUsername();
    [CompilerGeneratedAttribute]
public void set_AadUserCredentialUsername(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_AadUserCredentialPassword();
    [CompilerGeneratedAttribute]
public void set_AadUserCredentialPassword(SensitiveValue value);
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
}
public class Octopus.Client.Model.Endpoints.SshEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Fingerprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DotNetCorePlatform>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [TrimAttribute]
[WriteableAttribute]
public string AccountId { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Host { get; public set; }
    [WriteableAttribute]
public int Port { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Fingerprint { get; public set; }
    public string Uri { get; }
    [WriteableAttribute]
public string ProxyId { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string DotNetCorePlatform { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Fingerprint();
    [CompilerGeneratedAttribute]
public void set_Fingerprint(string value);
    public string get_Uri();
    [CompilerGeneratedAttribute]
public string get_ProxyId();
    [CompilerGeneratedAttribute]
public void set_ProxyId(string value);
    [CompilerGeneratedAttribute]
public string get_DotNetCorePlatform();
    [CompilerGeneratedAttribute]
public void set_DotNetCorePlatform(string value);
}
public class Octopus.Client.Model.Endpoints.StepPackageEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <DeploymentTargetTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepPackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Inputs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [TrimAttribute]
[WriteableAttribute]
public string DeploymentTargetTypeId { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string StepPackageVersion { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public object Inputs { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string DefaultWorkerPoolId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_DeploymentTargetTypeId();
    [CompilerGeneratedAttribute]
public void set_DeploymentTargetTypeId(string value);
    [CompilerGeneratedAttribute]
public string get_StepPackageVersion();
    [CompilerGeneratedAttribute]
public void set_StepPackageVersion(string value);
    [CompilerGeneratedAttribute]
public object get_Inputs();
    [CompilerGeneratedAttribute]
public void set_Inputs(object value);
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
}
public class Octopus.Client.Model.Endpoints.TentacleDetailsResource : object {
    [CompilerGeneratedAttribute]
private bool <UpgradeLocked>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UpgradeSuggested>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UpgradeRequired>k__BackingField;
    [WriteableAttribute]
public bool UpgradeLocked { get; public set; }
    public string Version { get; public set; }
    public bool UpgradeSuggested { get; public set; }
    public bool UpgradeRequired { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UpgradeLocked();
    [CompilerGeneratedAttribute]
public void set_UpgradeLocked(bool value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public bool get_UpgradeSuggested();
    [CompilerGeneratedAttribute]
public void set_UpgradeSuggested(bool value);
    [CompilerGeneratedAttribute]
public bool get_UpgradeRequired();
    [CompilerGeneratedAttribute]
public void set_UpgradeRequired(bool value);
}
public abstract class Octopus.Client.Model.Endpoints.TentacleEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <Thumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private TentacleDetailsResource <TentacleVersionDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateSignatureAlgorithm>k__BackingField;
    [RequiredAttribute]
[TrimAttribute]
[WriteableAttribute]
public string Thumbprint { get; public set; }
    [WriteableAttribute]
public TentacleDetailsResource TentacleVersionDetails { get; public set; }
    public string CertificateSignatureAlgorithm { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Thumbprint();
    [CompilerGeneratedAttribute]
public void set_Thumbprint(string value);
    [CompilerGeneratedAttribute]
public TentacleDetailsResource get_TentacleVersionDetails();
    [CompilerGeneratedAttribute]
public void set_TentacleVersionDetails(TentacleDetailsResource value);
    [CompilerGeneratedAttribute]
public string get_CertificateSignatureAlgorithm();
    [CompilerGeneratedAttribute]
public void set_CertificateSignatureAlgorithm(string value);
}
internal class Octopus.Client.Model.EnvironmentHelper : object {
    public sealed virtual String[] SafelyGetEnvironmentInformation();
    private static string SafelyGet(Func`1<string> thingToGet);
    [IteratorStateMachineAttribute("Octopus.Client.Model.EnvironmentHelper/<GetEnvironmentVars>d__2")]
private static IEnumerable`1<string> GetEnvironmentVars();
}
public class Octopus.Client.Model.EnvironmentResource : ResourceWithExtensionSettings {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseGuidedFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowDynamicInfrastructure>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public int SortOrder { get; public set; }
    [WriteableAttribute]
public bool UseGuidedFailure { get; public set; }
    [WriteableAttribute]
public bool AllowDynamicInfrastructure { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public bool get_UseGuidedFailure();
    [CompilerGeneratedAttribute]
public void set_UseGuidedFailure(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowDynamicInfrastructure();
    [CompilerGeneratedAttribute]
public void set_AllowDynamicInfrastructure(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.EnvironmentsSummaryResource : SummaryResourcesCombined {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineTenantSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineTenantTagSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EnvironmentSummaryResource> <EnvironmentSummaries>k__BackingField;
    public Dictionary`2<string, int> MachineTenantSummaries { get; public set; }
    public Dictionary`2<string, int> MachineTenantTagSummaries { get; public set; }
    public List`1<EnvironmentSummaryResource> EnvironmentSummaries { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineTenantSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineTenantSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineTenantTagSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineTenantTagSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public List`1<EnvironmentSummaryResource> get_EnvironmentSummaries();
    [CompilerGeneratedAttribute]
public void set_EnvironmentSummaries(List`1<EnvironmentSummaryResource> value);
}
public class Octopus.Client.Model.EnvironmentSummaryResource : SummaryResource {
    [CompilerGeneratedAttribute]
private EnvironmentResource <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineTenantSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineTenantTagSummaries>k__BackingField;
    public EnvironmentResource Environment { get; public set; }
    public Dictionary`2<string, int> MachineTenantSummaries { get; public set; }
    public Dictionary`2<string, int> MachineTenantTagSummaries { get; public set; }
    [CompilerGeneratedAttribute]
public EnvironmentResource get_Environment();
    [CompilerGeneratedAttribute]
public void set_Environment(EnvironmentResource value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineTenantSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineTenantSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineTenantTagSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineTenantTagSummaries(Dictionary`2<string, int> value);
}
public class Octopus.Client.Model.EventAgentResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.EventCategoryResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.EventGroupResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <EventCategories>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public List`1<string> EventCategories { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_EventCategories();
    [CompilerGeneratedAttribute]
public void set_EventCategories(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.EventNotificationSubscription : object {
    [CompilerGeneratedAttribute]
private EventNotificationSubscriptionFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EmailTeams>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <EmailFrequencyPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private EmailPriority <EmailPriority>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <EmailDigestLastProcessed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <EmailDigestLastProcessedEventAutoId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EmailShowDatesInTimeZoneId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebhookURI>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <WebhookTeams>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <WebhookTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebhookHeaderKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebhookHeaderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <WebhookLastProcessed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <WebhookLastProcessedEventAutoId>k__BackingField;
    public EventNotificationSubscriptionFilter Filter { get; public set; }
    public ReferenceCollection EmailTeams { get; public set; }
    public TimeSpan EmailFrequencyPeriod { get; public set; }
    public EmailPriority EmailPriority { get; public set; }
    public Nullable`1<DateTimeOffset> EmailDigestLastProcessed { get; public set; }
    public Nullable`1<long> EmailDigestLastProcessedEventAutoId { get; public set; }
    public string EmailShowDatesInTimeZoneId { get; public set; }
    public string WebhookURI { get; public set; }
    public ReferenceCollection WebhookTeams { get; public set; }
    public TimeSpan WebhookTimeout { get; public set; }
    public string WebhookHeaderKey { get; public set; }
    public string WebhookHeaderValue { get; public set; }
    public Nullable`1<DateTimeOffset> WebhookLastProcessed { get; public set; }
    public Nullable`1<long> WebhookLastProcessedEventAutoId { get; public set; }
    [CompilerGeneratedAttribute]
public EventNotificationSubscriptionFilter get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(EventNotificationSubscriptionFilter value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EmailTeams();
    [CompilerGeneratedAttribute]
public void set_EmailTeams(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public TimeSpan get_EmailFrequencyPeriod();
    [CompilerGeneratedAttribute]
public void set_EmailFrequencyPeriod(TimeSpan value);
    [CompilerGeneratedAttribute]
public EmailPriority get_EmailPriority();
    [CompilerGeneratedAttribute]
public void set_EmailPriority(EmailPriority value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_EmailDigestLastProcessed();
    [CompilerGeneratedAttribute]
public void set_EmailDigestLastProcessed(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_EmailDigestLastProcessedEventAutoId();
    [CompilerGeneratedAttribute]
public void set_EmailDigestLastProcessedEventAutoId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_EmailShowDatesInTimeZoneId();
    [CompilerGeneratedAttribute]
public void set_EmailShowDatesInTimeZoneId(string value);
    [CompilerGeneratedAttribute]
public string get_WebhookURI();
    [CompilerGeneratedAttribute]
public void set_WebhookURI(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_WebhookTeams();
    [CompilerGeneratedAttribute]
public void set_WebhookTeams(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public TimeSpan get_WebhookTimeout();
    [CompilerGeneratedAttribute]
public void set_WebhookTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public string get_WebhookHeaderKey();
    [CompilerGeneratedAttribute]
public void set_WebhookHeaderKey(string value);
    [CompilerGeneratedAttribute]
public string get_WebhookHeaderValue();
    [CompilerGeneratedAttribute]
public void set_WebhookHeaderValue(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_WebhookLastProcessed();
    [CompilerGeneratedAttribute]
public void set_WebhookLastProcessed(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_WebhookLastProcessedEventAutoId();
    [CompilerGeneratedAttribute]
public void set_WebhookLastProcessedEventAutoId(Nullable`1<long> value);
}
public class Octopus.Client.Model.EventNotificationSubscriptionFilter : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Users>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ProjectGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <EventGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <EventCategories>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <EventAgents>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Tenants>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <DocumentTypes>k__BackingField;
    public IList`1<string> Users { get; public set; }
    public IList`1<string> Projects { get; public set; }
    public IList`1<string> ProjectGroups { get; public set; }
    public IList`1<string> Environments { get; public set; }
    public IList`1<string> EventGroups { get; public set; }
    public IList`1<string> EventCategories { get; public set; }
    public IList`1<string> EventAgents { get; public set; }
    public IList`1<string> Tenants { get; public set; }
    public IList`1<string> Tags { get; public set; }
    public IList`1<string> DocumentTypes { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<string> get_Users();
    [CompilerGeneratedAttribute]
public void set_Users(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Projects();
    [CompilerGeneratedAttribute]
public void set_Projects(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ProjectGroups();
    [CompilerGeneratedAttribute]
public void set_ProjectGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Environments();
    [CompilerGeneratedAttribute]
public void set_Environments(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_EventGroups();
    [CompilerGeneratedAttribute]
public void set_EventGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_EventCategories();
    [CompilerGeneratedAttribute]
public void set_EventCategories(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_EventAgents();
    [CompilerGeneratedAttribute]
public void set_EventAgents(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Tenants();
    [CompilerGeneratedAttribute]
public void set_Tenants(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_DocumentTypes();
    [CompilerGeneratedAttribute]
public void set_DocumentTypes(IList`1<string> value);
}
public class Octopus.Client.Model.EventReference : object {
    private string referencedDocumentId;
    private int startIndex;
    private int length;
    public string ReferencedDocumentId { get; }
    public int StartIndex { get; }
    public int Length { get; }
    public EventReference(string referencedDocumentId, int startIndex, int length);
    public string get_ReferencedDocumentId();
    public int get_StartIndex();
    public int get_Length();
}
public class Octopus.Client.Model.EventResource : Resource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <RelatedDocumentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsService>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityEstablishedWith>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Occurred>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageHtml>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EventReference> <MessageReferences>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Details>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public ReferenceCollection RelatedDocumentIds { get; public set; }
    public string Category { get; public set; }
    public string UserId { get; public set; }
    public string Username { get; public set; }
    public bool IsService { get; public set; }
    public string IdentityEstablishedWith { get; public set; }
    public string UserAgent { get; public set; }
    public DateTimeOffset Occurred { get; public set; }
    public string Message { get; public set; }
    public string MessageHtml { get; public set; }
    public List`1<EventReference> MessageReferences { get; public set; }
    public string Comments { get; public set; }
    public string Details { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RelatedDocumentIds();
    [CompilerGeneratedAttribute]
public void set_RelatedDocumentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public bool get_IsService();
    [CompilerGeneratedAttribute]
public void set_IsService(bool value);
    [CompilerGeneratedAttribute]
public string get_IdentityEstablishedWith();
    [CompilerGeneratedAttribute]
public void set_IdentityEstablishedWith(string value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Occurred();
    [CompilerGeneratedAttribute]
public void set_Occurred(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_MessageHtml();
    [CompilerGeneratedAttribute]
public void set_MessageHtml(string value);
    [CompilerGeneratedAttribute]
public List`1<EventReference> get_MessageReferences();
    [CompilerGeneratedAttribute]
public void set_MessageReferences(List`1<EventReference> value);
    [CompilerGeneratedAttribute]
public string get_Comments();
    [CompilerGeneratedAttribute]
public void set_Comments(string value);
    [CompilerGeneratedAttribute]
public string get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public enum Octopus.Client.Model.EventScope : Enum {
    public int value__;
    public static EventScope Application;
    public static EventScope Project;
    public static EventScope Release;
    public static EventScope Deployment;
}
public class Octopus.Client.Model.ExtensionSettingsValues : object {
    [CompilerGeneratedAttribute]
private string <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Values>k__BackingField;
    public string ExtensionId { get; public set; }
    public object Values { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ExtensionId();
    [CompilerGeneratedAttribute]
public void set_ExtensionId(string value);
    [CompilerGeneratedAttribute]
public object get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(object value);
}
public class Octopus.Client.Model.ExternalSecurityGroupResource : Resource {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    public string DisplayName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
}
public class Octopus.Client.Model.FeaturesConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsBuiltInWorkerEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCommunityActionTemplatesEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsKubernetesEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsHelpSidebarEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HelpSidebarSupportLink>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActionContainersEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConfigurationAsCodeEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStepUiFrameworkEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsServiceNowIntegrationEnabled>k__BackingField;
    [WriteableAttribute]
public bool IsBuiltInWorkerEnabled { get; public set; }
    [WriteableAttribute]
public bool IsCommunityActionTemplatesEnabled { get; public set; }
    [WriteableAttribute]
public bool IsKubernetesEnabled { get; public set; }
    [WriteableAttribute]
public bool IsHelpSidebarEnabled { get; public set; }
    [WriteableAttribute]
public string HelpSidebarSupportLink { get; public set; }
    [WriteableAttribute]
public bool IsActionContainersEnabled { get; public set; }
    [WriteableAttribute]
public bool IsConfigurationAsCodeEnabled { get; public set; }
    [WriteableAttribute]
public bool IsStepUiFrameworkEnabled { get; public set; }
    [WriteableAttribute]
public bool IsServiceNowIntegrationEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsBuiltInWorkerEnabled();
    [CompilerGeneratedAttribute]
public void set_IsBuiltInWorkerEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsCommunityActionTemplatesEnabled();
    [CompilerGeneratedAttribute]
public void set_IsCommunityActionTemplatesEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsKubernetesEnabled();
    [CompilerGeneratedAttribute]
public void set_IsKubernetesEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsHelpSidebarEnabled();
    [CompilerGeneratedAttribute]
public void set_IsHelpSidebarEnabled(bool value);
    [CompilerGeneratedAttribute]
public string get_HelpSidebarSupportLink();
    [CompilerGeneratedAttribute]
public void set_HelpSidebarSupportLink(string value);
    [CompilerGeneratedAttribute]
public bool get_IsActionContainersEnabled();
    [CompilerGeneratedAttribute]
public void set_IsActionContainersEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsConfigurationAsCodeEnabled();
    [CompilerGeneratedAttribute]
public void set_IsConfigurationAsCodeEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsStepUiFrameworkEnabled();
    [CompilerGeneratedAttribute]
public void set_IsStepUiFrameworkEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsServiceNowIntegrationEnabled();
    [CompilerGeneratedAttribute]
public void set_IsServiceNowIntegrationEnabled(bool value);
}
public class Octopus.Client.Model.FeedResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private FeedType <FeedType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PackageAcquisitionLocation> <PackageAcquisitionLocationOptions>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableOnCreateAttribute]
public FeedType FeedType { get; }
    public string SpaceId { get; public set; }
    public IList`1<PackageAcquisitionLocation> PackageAcquisitionLocationOptions { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public IList`1<PackageAcquisitionLocation> get_PackageAcquisitionLocationOptions();
}
public enum Octopus.Client.Model.FeedType : Enum {
    public int value__;
    public static FeedType None;
    public static FeedType NuGet;
    public static FeedType Docker;
    public static FeedType Maven;
    public static FeedType OctopusProject;
    public static FeedType GitHub;
    public static FeedType BuiltIn;
    public static FeedType Helm;
    public static FeedType AwsElasticContainerRegistry;
}
public class Octopus.Client.Model.FileUpload : object {
    [CompilerGeneratedAttribute]
private Stream <Contents>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    public Stream Contents { get; public set; }
    public string FileName { get; public set; }
    [CompilerGeneratedAttribute]
public Stream get_Contents();
    [CompilerGeneratedAttribute]
public void set_Contents(Stream value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
}
public class Octopus.Client.Model.Forms.Button : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public string Text { get; private set; }
    public object Value { get; private set; }
    public Button(string text, string value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(object value);
}
public class Octopus.Client.Model.Forms.Checkbox : Control {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public string Text { get; private set; }
    public Checkbox(string text);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    public virtual object CoerceValue(string value);
    public virtual Type GetNativeValueType();
}
public abstract class Octopus.Client.Model.Forms.Control : object {
    public virtual object CoerceValue(string value);
    public virtual Type GetNativeValueType();
}
public class Octopus.Client.Model.Forms.Form : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<FormElement> <Elements>k__BackingField;
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Values { get; private set; }
    [JsonPropertyAttribute]
public List`1<FormElement> Elements { get; private set; }
    public Form(IEnumerable`1<FormElement> elements, IDictionary`2<string, string> values);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Values();
    [CompilerGeneratedAttribute]
private void set_Values(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public List`1<FormElement> get_Elements();
    [CompilerGeneratedAttribute]
private void set_Elements(List`1<FormElement> value);
}
public class Octopus.Client.Model.Forms.FormElement : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Control <Control>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValueRequired>k__BackingField;
    public string Name { get; private set; }
    public Control Control { get; private set; }
    public bool IsValueRequired { get; private set; }
    public FormElement(string name, Control control, bool isValueRequired);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public Control get_Control();
    [CompilerGeneratedAttribute]
private void set_Control(Control value);
    [CompilerGeneratedAttribute]
public bool get_IsValueRequired();
    [CompilerGeneratedAttribute]
private void set_IsValueRequired(bool value);
}
[ExtensionAttribute]
public static class Octopus.Client.Model.Forms.FormExtensions : object {
    [ExtensionAttribute]
public static void AddElement(Form form, string name, Control element, string initialValue, bool isValueRequired);
    [ExtensionAttribute]
public static void SetValue(Form form, string name, string value);
    [ExtensionAttribute]
private static FormElement GetElement(Form form, string name);
    [ExtensionAttribute]
private static string GetRawValue(Form form, string name);
    [ExtensionAttribute]
public static object GetCoercedValue(Form form, string name);
    [ExtensionAttribute]
public static void UpdateValues(Form form, IDictionary`2<string, string> values);
    [ExtensionAttribute]
public static IList`1<string> Validate(Form form);
}
public class Octopus.Client.Model.Forms.Paragraph : Control {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public string Text { get; private set; }
    public Paragraph(string text);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
}
public class Octopus.Client.Model.Forms.SubmitButtonGroup : Control {
    [CompilerGeneratedAttribute]
private List`1<Button> <Buttons>k__BackingField;
    public List`1<Button> Buttons { get; private set; }
    public SubmitButtonGroup(List`1<Button> buttons);
    [CompilerGeneratedAttribute]
public List`1<Button> get_Buttons();
    [CompilerGeneratedAttribute]
private void set_Buttons(List`1<Button> value);
    public virtual object CoerceValue(string value);
    public virtual Type GetNativeValueType();
}
public class Octopus.Client.Model.Forms.TextArea : Control {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    public string Label { get; private set; }
    public TextArea(string label);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
private void set_Label(string value);
    public virtual object CoerceValue(string value);
    public virtual Type GetNativeValueType();
}
public class Octopus.Client.Model.Forms.VariableValue : Control {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSecure>k__BackingField;
    public string Name { get; private set; }
    public string Label { get; private set; }
    public string Description { get; private set; }
    public bool IsSecure { get; private set; }
    public VariableValue(string name, string label, string description, bool isSecure);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
private void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsSecure();
    [CompilerGeneratedAttribute]
private void set_IsSecure(bool value);
    public virtual object CoerceValue(string value);
    public virtual Type GetNativeValueType();
}
public class Octopus.Client.Model.Git.ConvertProjectToGitCommand : object {
    [CompilerGeneratedAttribute]
private string <CommitMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private GitPersistenceSettingsResource <VersionControlSettings>k__BackingField;
    [RequiredAttribute]
public string CommitMessage { get; public set; }
    [RequiredAttribute]
public GitPersistenceSettingsResource VersionControlSettings { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CommitMessage();
    [CompilerGeneratedAttribute]
public void set_CommitMessage(string value);
    [CompilerGeneratedAttribute]
public GitPersistenceSettingsResource get_VersionControlSettings();
    [CompilerGeneratedAttribute]
public void set_VersionControlSettings(GitPersistenceSettingsResource value);
}
public class Octopus.Client.Model.Git.ConvertProjectToGitResponse : object {
    [CompilerGeneratedAttribute]
private MessageCollection <Messages>k__BackingField;
    public MessageCollection Messages { get; }
    [CompilerGeneratedAttribute]
public sealed virtual MessageCollection get_Messages();
}
public class Octopus.Client.Model.Git.GitReferenceResource : object {
    [CompilerGeneratedAttribute]
private string <GitRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitCommit>k__BackingField;
    [WriteableOnCreateAttribute]
public string GitRef { get; public set; }
    public string GitCommit { get; public set; }
    [CompilerGeneratedAttribute]
public string get_GitRef();
    [CompilerGeneratedAttribute]
public void set_GitRef(string value);
    [CompilerGeneratedAttribute]
public string get_GitCommit();
    [CompilerGeneratedAttribute]
public void set_GitCommit(string value);
}
public interface Octopus.Client.Model.Git.IHaveCustomerVisibleMessages {
    public MessageCollection Messages { get; }
    public abstract virtual MessageCollection get_Messages();
}
public class Octopus.Client.Model.Git.MessageCollection : List`1<string> {
}
public class Octopus.Client.Model.GitBranchResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public GitBranchResource(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
public class Octopus.Client.Model.GitCredentials.CreateGitCredentialCommand : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private GitCredentialDetails <Details>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public GitCredentialDetails Details { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public GitCredentialDetails get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(GitCredentialDetails value);
}
internal class Octopus.Client.Model.GitCredentials.CreateGitCredentialResponse : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [WriteableAttribute]
public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public abstract class Octopus.Client.Model.GitCredentials.GitCredentialDetails : object {
    public GitCredentialType Type { get; }
    public abstract virtual GitCredentialType get_Type();
}
public class Octopus.Client.Model.GitCredentials.GitCredentialResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private GitCredentialDetails <Details>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string SpaceId { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public GitCredentialDetails Details { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public GitCredentialDetails get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(GitCredentialDetails value);
}
public enum Octopus.Client.Model.GitCredentials.GitCredentialType : Enum {
    public int value__;
    public static GitCredentialType UsernamePassword;
}
public class Octopus.Client.Model.GitCredentials.GitCredentialUsage : object {
    [CompilerGeneratedAttribute]
private GitCredentialUsageProject[] <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private int <OtherProjects>k__BackingField;
    [WriteableAttribute]
public GitCredentialUsageProject[] Projects { get; public set; }
    [WriteableAttribute]
public int OtherProjects { get; public set; }
    [CompilerGeneratedAttribute]
public GitCredentialUsageProject[] get_Projects();
    [CompilerGeneratedAttribute]
public void set_Projects(GitCredentialUsageProject[] value);
    [CompilerGeneratedAttribute]
public int get_OtherProjects();
    [CompilerGeneratedAttribute]
public void set_OtherProjects(int value);
}
public class Octopus.Client.Model.GitCredentials.GitCredentialUsageProject : object {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [WriteableAttribute]
public string ProjectId { get; public set; }
    [WriteableAttribute]
public string Slug { get; public set; }
    [WriteableAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_Slug();
    [CompilerGeneratedAttribute]
public void set_Slug(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Octopus.Client.Model.GitCredentials.UsernamePasswordGitCredentialDetails : GitCredentialDetails {
    [CompilerGeneratedAttribute]
private GitCredentialType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public GitCredentialType Type { get; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    [CompilerGeneratedAttribute]
public virtual GitCredentialType get_Type();
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.GitHubFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private int <DownloadAttempts>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DownloadRetryBackoffSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public int DownloadAttempts { get; public set; }
    [WriteableAttribute]
public int DownloadRetryBackoffSeconds { get; public set; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public int get_DownloadAttempts();
    [CompilerGeneratedAttribute]
public void set_DownloadAttempts(int value);
    [CompilerGeneratedAttribute]
public int get_DownloadRetryBackoffSeconds();
    [CompilerGeneratedAttribute]
public void set_DownloadRetryBackoffSeconds(int value);
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.GitPersistenceSettingsResource : PersistenceSettingsResource {
    [CompilerGeneratedAttribute]
private PersistenceSettingsType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private ProjectGitCredentialResource <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultBranch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BasePath>k__BackingField;
    public PersistenceSettingsType Type { get; }
    [WriteableAttribute]
public string Url { get; public set; }
    [WriteableAttribute]
public ProjectGitCredentialResource Credentials { get; public set; }
    [WriteableAttribute]
public string DefaultBranch { get; public set; }
    [WriteableAttribute]
public string BasePath { get; public set; }
    [CompilerGeneratedAttribute]
public virtual PersistenceSettingsType get_Type();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public ProjectGitCredentialResource get_Credentials();
    [CompilerGeneratedAttribute]
public void set_Credentials(ProjectGitCredentialResource value);
    [CompilerGeneratedAttribute]
public string get_DefaultBranch();
    [CompilerGeneratedAttribute]
public void set_DefaultBranch(string value);
    [CompilerGeneratedAttribute]
public string get_BasePath();
    [CompilerGeneratedAttribute]
public void set_BasePath(string value);
}
public enum Octopus.Client.Model.GuidedFailureMode : Enum {
    public int value__;
    public static GuidedFailureMode EnvironmentDefault;
    public static GuidedFailureMode Off;
    public static GuidedFailureMode On;
}
public enum Octopus.Client.Model.HealthCheckType : Enum {
    public int value__;
    public static HealthCheckType RunScript;
    public static HealthCheckType OnlyConnectivity;
}
public class Octopus.Client.Model.HelmFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public interface Octopus.Client.Model.IAuditedResource {
    public Nullable`1<DateTimeOffset> LastModifiedOn { get; public set; }
    public string LastModifiedBy { get; public set; }
    public abstract virtual Nullable`1<DateTimeOffset> get_LastModifiedOn();
    public abstract virtual void set_LastModifiedOn(Nullable`1<DateTimeOffset> value);
    public abstract virtual string get_LastModifiedBy();
    public abstract virtual void set_LastModifiedBy(string value);
}
public interface Octopus.Client.Model.ICommitCommand {
    public string ChangeDescription { get; public set; }
    public abstract virtual string get_ChangeDescription();
    public abstract virtual void set_ChangeDescription(string value);
}
public class Octopus.Client.Model.IdentityClaimResource : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIdentifyingClaim>k__BackingField;
    public string Value { get; public set; }
    public bool IsIdentifyingClaim { get; public set; }
    public IdentityClaimResource(string value, bool isIdentifyingClaim);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public bool get_IsIdentifyingClaim();
    [CompilerGeneratedAttribute]
public void set_IsIdentifyingClaim(bool value);
}
public class Octopus.Client.Model.IdentityResource : object {
    [CompilerGeneratedAttribute]
private string <IdentityProviderName>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IdentityClaimResource> <Claims>k__BackingField;
    public string IdentityProviderName { get; public set; }
    public Dictionary`2<string, IdentityClaimResource> Claims { get; }
    public IdentityResource(string identityProviderName);
    [CompilerGeneratedAttribute]
public string get_IdentityProviderName();
    [CompilerGeneratedAttribute]
public void set_IdentityProviderName(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, IdentityClaimResource> get_Claims();
}
internal interface Octopus.Client.Model.IEnvironmentHelper {
    public abstract virtual String[] SafelyGetEnvironmentInformation();
}
public interface Octopus.Client.Model.IExecutionResource {
    public string Name { get; public set; }
    public DateTimeOffset Created { get; public set; }
    public bool ForcePackageDownload { get; public set; }
    public string Comments { get; public set; }
    public ReferenceCollection SkipActions { get; public set; }
    public ReferenceCollection SpecificMachineIds { get; public set; }
    public ReferenceCollection ExcludedMachineIds { get; public set; }
    public bool UseGuidedFailure { get; public set; }
    public RetentionPeriod TentacleRetentionPeriod { get; public set; }
    public string EnvironmentId { get; public set; }
    public string TenantId { get; public set; }
    public string TaskId { get; public set; }
    public string ProjectId { get; public set; }
    public string ManifestVariableSetId { get; public set; }
    public string DeployedBy { get; public set; }
    public string DeployedById { get; public set; }
    public bool FailureEncountered { get; }
    public ReferenceCollection DeployedToMachineIds { get; public set; }
    public Dictionary`2<string, string> FormValues { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTime { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTimeExpiry { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual DateTimeOffset get_Created();
    public abstract virtual void set_Created(DateTimeOffset value);
    public abstract virtual bool get_ForcePackageDownload();
    public abstract virtual void set_ForcePackageDownload(bool value);
    public abstract virtual string get_Comments();
    public abstract virtual void set_Comments(string value);
    public abstract virtual ReferenceCollection get_SkipActions();
    public abstract virtual void set_SkipActions(ReferenceCollection value);
    public abstract virtual ReferenceCollection get_SpecificMachineIds();
    public abstract virtual void set_SpecificMachineIds(ReferenceCollection value);
    public abstract virtual ReferenceCollection get_ExcludedMachineIds();
    public abstract virtual void set_ExcludedMachineIds(ReferenceCollection value);
    public abstract virtual bool get_UseGuidedFailure();
    public abstract virtual void set_UseGuidedFailure(bool value);
    public abstract virtual RetentionPeriod get_TentacleRetentionPeriod();
    public abstract virtual void set_TentacleRetentionPeriod(RetentionPeriod value);
    public abstract virtual string get_EnvironmentId();
    public abstract virtual void set_EnvironmentId(string value);
    public abstract virtual string get_TenantId();
    public abstract virtual void set_TenantId(string value);
    public abstract virtual string get_TaskId();
    public abstract virtual void set_TaskId(string value);
    public abstract virtual string get_ProjectId();
    public abstract virtual void set_ProjectId(string value);
    public abstract virtual string get_ManifestVariableSetId();
    public abstract virtual void set_ManifestVariableSetId(string value);
    public abstract virtual string get_DeployedBy();
    public abstract virtual void set_DeployedBy(string value);
    public abstract virtual string get_DeployedById();
    public abstract virtual void set_DeployedById(string value);
    public abstract virtual bool get_FailureEncountered();
    public abstract virtual ReferenceCollection get_DeployedToMachineIds();
    public abstract virtual void set_DeployedToMachineIds(ReferenceCollection value);
    public abstract virtual Dictionary`2<string, string> get_FormValues();
    public abstract virtual void set_FormValues(Dictionary`2<string, string> value);
    public abstract virtual Nullable`1<DateTimeOffset> get_QueueTime();
    public abstract virtual void set_QueueTime(Nullable`1<DateTimeOffset> value);
    public abstract virtual Nullable`1<DateTimeOffset> get_QueueTimeExpiry();
    public abstract virtual void set_QueueTimeExpiry(Nullable`1<DateTimeOffset> value);
}
public interface Octopus.Client.Model.IHaveProject {
    public string ProjectId { get; public set; }
    public abstract virtual string get_ProjectId();
    public abstract virtual void set_ProjectId(string value);
}
public class Octopus.Client.Model.InterruptionResource : Resource {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPending>k__BackingField;
    [CompilerGeneratedAttribute]
private Form <Form>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <RelatedDocumentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ResponsibleTeamIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponsibleUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanTakeResponsibility>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasResponsibility>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CorrelationId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLinkedToOtherInterruption>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [JsonPropertyAttribute]
public string Title { get; public set; }
    [JsonPropertyAttribute]
public DateTimeOffset Created { get; public set; }
    [JsonPropertyAttribute]
public bool IsPending { get; public set; }
    [JsonPropertyAttribute]
public Form Form { get; public set; }
    [JsonPropertyAttribute]
public ReferenceCollection RelatedDocumentIds { get; public set; }
    [JsonPropertyAttribute]
public ReferenceCollection ResponsibleTeamIds { get; public set; }
    [JsonPropertyAttribute]
public string ResponsibleUserId { get; public set; }
    [JsonPropertyAttribute]
public bool CanTakeResponsibility { get; public set; }
    [JsonPropertyAttribute]
public bool HasResponsibility { get; public set; }
    [JsonPropertyAttribute]
public string TaskId { get; public set; }
    [JsonPropertyAttribute]
public string CorrelationId { get; public set; }
    [JsonPropertyAttribute]
public bool IsLinkedToOtherInterruption { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public bool get_IsPending();
    [CompilerGeneratedAttribute]
public void set_IsPending(bool value);
    [CompilerGeneratedAttribute]
public Form get_Form();
    [CompilerGeneratedAttribute]
public void set_Form(Form value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RelatedDocumentIds();
    [CompilerGeneratedAttribute]
public void set_RelatedDocumentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_ResponsibleTeamIds();
    [CompilerGeneratedAttribute]
public void set_ResponsibleTeamIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_ResponsibleUserId();
    [CompilerGeneratedAttribute]
public void set_ResponsibleUserId(string value);
    [CompilerGeneratedAttribute]
public bool get_CanTakeResponsibility();
    [CompilerGeneratedAttribute]
public void set_CanTakeResponsibility(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasResponsibility();
    [CompilerGeneratedAttribute]
public void set_HasResponsibility(bool value);
    [CompilerGeneratedAttribute]
public string get_TaskId();
    [CompilerGeneratedAttribute]
public void set_TaskId(string value);
    [CompilerGeneratedAttribute]
public string get_CorrelationId();
    [CompilerGeneratedAttribute]
public void set_CorrelationId(string value);
    [CompilerGeneratedAttribute]
public bool get_IsLinkedToOtherInterruption();
    [CompilerGeneratedAttribute]
public void set_IsLinkedToOtherInterruption(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.InvitationResource : Resource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <AddToTeamIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InvitationCode>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Expires>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[RequiredAttribute]
public ReferenceCollection AddToTeamIds { get; public set; }
    public string InvitationCode { get; public set; }
    public DateTimeOffset Expires { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceCollection get_AddToTeamIds();
    [CompilerGeneratedAttribute]
public void set_AddToTeamIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_InvitationCode();
    [CompilerGeneratedAttribute]
public void set_InvitationCode(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Expires();
    [CompilerGeneratedAttribute]
public void set_Expires(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public interface Octopus.Client.Model.IProcessResource {
    public string ProjectId { get; public set; }
    public IList`1<DeploymentStepResource> Steps { get; }
    public int Version { get; public set; }
    public string LastSnapshotId { get; public set; }
    public abstract virtual string get_ProjectId();
    public abstract virtual void set_ProjectId(string value);
    public abstract virtual IList`1<DeploymentStepResource> get_Steps();
    public abstract virtual int get_Version();
    public abstract virtual void set_Version(int value);
    public abstract virtual string get_LastSnapshotId();
    public abstract virtual void set_LastSnapshotId(string value);
    public abstract virtual DeploymentStepResource FindStep(string name);
    public abstract virtual DeploymentStepResource AddOrUpdateStep(string name);
    public abstract virtual IProcessResource RemoveStep(string name);
    public abstract virtual IProcessResource ClearSteps();
}
public interface Octopus.Client.Model.ISnapshotResource {
    public DateTimeOffset Assembled { get; public set; }
    public string ProjectId { get; public set; }
    public List`1<string> LibraryVariableSetSnapshotIds { get; public set; }
    public List`1<SelectedPackage> SelectedPackages { get; }
    public string ProjectVariableSetSnapshotId { get; public set; }
    public abstract virtual DateTimeOffset get_Assembled();
    public abstract virtual void set_Assembled(DateTimeOffset value);
    public abstract virtual string get_ProjectId();
    public abstract virtual void set_ProjectId(string value);
    public abstract virtual List`1<string> get_LibraryVariableSetSnapshotIds();
    public abstract virtual void set_LibraryVariableSetSnapshotIds(List`1<string> value);
    public abstract virtual List`1<SelectedPackage> get_SelectedPackages();
    public abstract virtual string get_ProjectVariableSetSnapshotId();
    public abstract virtual void set_ProjectVariableSetSnapshotId(string value);
}
public class Octopus.Client.Model.IssueTrackers.Commit : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    public string Id { get; public set; }
    public string Comment { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
}
public class Octopus.Client.Model.IssueTrackers.CommitDetail : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LinkUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    public string Id { get; public set; }
    public string LinkUrl { get; public set; }
    public string Comment { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_LinkUrl();
    [CompilerGeneratedAttribute]
public void set_LinkUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
}
public class Octopus.Client.Model.IssueTrackers.WorkItemLink : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LinkUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LinkText>k__BackingField;
    public string Id { get; public set; }
    public string LinkUrl { get; public set; }
    public string LinkText { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_LinkUrl();
    [CompilerGeneratedAttribute]
public void set_LinkUrl(string value);
    [CompilerGeneratedAttribute]
public string get_LinkText();
    [CompilerGeneratedAttribute]
public void set_LinkText(string value);
}
internal interface Octopus.Client.Model.IVariableScopeValues {
    public List`1<ReferenceDataItem> Environments { get; public set; }
    public List`1<ReferenceDataItem> Machines { get; public set; }
    public List`1<ReferenceDataItem> Actions { get; public set; }
    public List`1<ReferenceDataItem> Roles { get; public set; }
    public List`1<ReferenceDataItem> Channels { get; public set; }
    public abstract virtual List`1<ReferenceDataItem> get_Environments();
    public abstract virtual void set_Environments(List`1<ReferenceDataItem> value);
    public abstract virtual List`1<ReferenceDataItem> get_Machines();
    public abstract virtual void set_Machines(List`1<ReferenceDataItem> value);
    public abstract virtual List`1<ReferenceDataItem> get_Actions();
    public abstract virtual void set_Actions(List`1<ReferenceDataItem> value);
    public abstract virtual List`1<ReferenceDataItem> get_Roles();
    public abstract virtual void set_Roles(List`1<ReferenceDataItem> value);
    public abstract virtual List`1<ReferenceDataItem> get_Channels();
    public abstract virtual void set_Channels(List`1<ReferenceDataItem> value);
}
public interface Octopus.Client.Model.IVariableTemplateContainer {
    public List`1<ActionTemplateParameterResource> Templates { get; }
    public abstract virtual List`1<ActionTemplateParameterResource> get_Templates();
}
public interface Octopus.Client.Model.IVariableTemplateContainerEditor`1 {
    public abstract virtual TContainer Clear();
    public abstract virtual TContainer AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public abstract virtual TContainer AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    public abstract virtual TContainer AddOrUpdateSingleLineTextTemplate(string name, string label);
    public abstract virtual TContainer AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public abstract virtual TContainer AddOrUpdateMultiLineTextTemplate(string name, string label);
    public abstract virtual TContainer AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public abstract virtual TContainer AddOrUpdateSensitiveTemplate(string name, string label);
    public abstract virtual TContainer AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public abstract virtual TContainer AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public abstract virtual TContainer AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
}
[ObsoleteAttribute("Removed in Octopus Server 2020.3.0")]
public enum Octopus.Client.Model.LeadershipRank : Enum {
    public int value__;
    public static LeadershipRank Follower;
    public static LeadershipRank Leader;
}
public class Octopus.Client.Model.LibraryVariableSetProjectUsage : object {
    [CompilerGeneratedAttribute]
private string <ProjectSlug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<LibraryVariableSetRunbookSnapshotUsageEntry> <RunbookSnapshots>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<LibraryVariableSetReleaseUsageEntry> <Releases>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCurrentlyBeingUsedInProject>k__BackingField;
    public string ProjectSlug { get; public set; }
    public string ProjectName { get; public set; }
    public string ProjectId { get; public set; }
    public List`1<LibraryVariableSetRunbookSnapshotUsageEntry> RunbookSnapshots { get; public set; }
    public ICollection`1<LibraryVariableSetReleaseUsageEntry> Releases { get; public set; }
    public bool IsCurrentlyBeingUsedInProject { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectSlug();
    [CompilerGeneratedAttribute]
public void set_ProjectSlug(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public List`1<LibraryVariableSetRunbookSnapshotUsageEntry> get_RunbookSnapshots();
    [CompilerGeneratedAttribute]
public void set_RunbookSnapshots(List`1<LibraryVariableSetRunbookSnapshotUsageEntry> value);
    [CompilerGeneratedAttribute]
public ICollection`1<LibraryVariableSetReleaseUsageEntry> get_Releases();
    [CompilerGeneratedAttribute]
public void set_Releases(ICollection`1<LibraryVariableSetReleaseUsageEntry> value);
    [CompilerGeneratedAttribute]
public bool get_IsCurrentlyBeingUsedInProject();
    [CompilerGeneratedAttribute]
public void set_IsCurrentlyBeingUsedInProject(bool value);
}
public class Octopus.Client.Model.LibraryVariableSetReleaseUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <ReleaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseVersion>k__BackingField;
    public string ReleaseId { get; public set; }
    public string ReleaseVersion { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ReleaseId();
    [CompilerGeneratedAttribute]
public void set_ReleaseId(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseVersion();
    [CompilerGeneratedAttribute]
public void set_ReleaseVersion(string value);
}
public class Octopus.Client.Model.LibraryVariableSetResource : Resource {
    private IVariableTemplateContainerEditor`1<LibraryVariableSetResource> variableTemplateEditor;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private VariableSetContentType <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ActionTemplateParameterResource> <Templates>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Description { get; public set; }
    public string VariableSetId { get; public set; }
    [WriteableOnCreateAttribute]
public VariableSetContentType ContentType { get; public set; }
    public List`1<ActionTemplateParameterResource> Templates { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_VariableSetId();
    [CompilerGeneratedAttribute]
public void set_VariableSetId(string value);
    [CompilerGeneratedAttribute]
public VariableSetContentType get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(VariableSetContentType value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ActionTemplateParameterResource> get_Templates();
    [CompilerGeneratedAttribute]
public void set_Templates(List`1<ActionTemplateParameterResource> value);
    public sealed virtual LibraryVariableSetResource Clear();
    public sealed virtual LibraryVariableSetResource AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public sealed virtual LibraryVariableSetResource AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSingleLineTextTemplate(string name, string label);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual LibraryVariableSetResource AddOrUpdateMultiLineTextTemplate(string name, string label);
    public sealed virtual LibraryVariableSetResource AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSensitiveTemplate(string name, string label);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.LibraryVariableSetRunbookSnapshotUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <SnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SnapshotName>k__BackingField;
    public string SnapshotId { get; public set; }
    public string SnapshotName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SnapshotId();
    [CompilerGeneratedAttribute]
public void set_SnapshotId(string value);
    [CompilerGeneratedAttribute]
public string get_SnapshotName();
    [CompilerGeneratedAttribute]
public void set_SnapshotName(string value);
}
public class Octopus.Client.Model.LibraryVariableSetUsageResource : Resource {
    [CompilerGeneratedAttribute]
private ICollection`1<LibraryVariableSetProjectUsage> <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CountOfProjectsUserCannotSee>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CountOfReleasesUserCannotSee>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CountOfRunbookSnapshotsUserCannotSee>k__BackingField;
    public ICollection`1<LibraryVariableSetProjectUsage> Projects { get; public set; }
    public int CountOfProjectsUserCannotSee { get; public set; }
    public int CountOfReleasesUserCannotSee { get; public set; }
    public int CountOfRunbookSnapshotsUserCannotSee { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<LibraryVariableSetProjectUsage> get_Projects();
    [CompilerGeneratedAttribute]
public void set_Projects(ICollection`1<LibraryVariableSetProjectUsage> value);
    [CompilerGeneratedAttribute]
public int get_CountOfProjectsUserCannotSee();
    [CompilerGeneratedAttribute]
public void set_CountOfProjectsUserCannotSee(int value);
    [CompilerGeneratedAttribute]
public int get_CountOfReleasesUserCannotSee();
    [CompilerGeneratedAttribute]
public void set_CountOfReleasesUserCannotSee(int value);
    [CompilerGeneratedAttribute]
public int get_CountOfRunbookSnapshotsUserCannotSee();
    [CompilerGeneratedAttribute]
public void set_CountOfRunbookSnapshotsUserCannotSee(int value);
}
public static class Octopus.Client.Model.LicenseKinds : object {
    public static string Unlicensed;
    public static string Trial;
    public static string CommunityEdition;
    public static string CommercialLicense;
    private static LicenseKinds();
}
public class Octopus.Client.Model.LicenseLimitStatusResource : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EffectiveLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EffectiveLimitDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnlimited>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentUsage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Disposition>k__BackingField;
    public string Name { get; public set; }
    public int EffectiveLimit { get; public set; }
    public string EffectiveLimitDescription { get; public set; }
    public bool IsUnlimited { get; public set; }
    public int CurrentUsage { get; public set; }
    public string Message { get; public set; }
    public string Disposition { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_EffectiveLimit();
    [CompilerGeneratedAttribute]
public void set_EffectiveLimit(int value);
    [CompilerGeneratedAttribute]
public string get_EffectiveLimitDescription();
    [CompilerGeneratedAttribute]
public void set_EffectiveLimitDescription(string value);
    [CompilerGeneratedAttribute]
public bool get_IsUnlimited();
    [CompilerGeneratedAttribute]
public void set_IsUnlimited(bool value);
    [CompilerGeneratedAttribute]
public int get_CurrentUsage();
    [CompilerGeneratedAttribute]
public void set_CurrentUsage(int value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Disposition();
    [CompilerGeneratedAttribute]
public void set_Disposition(string value);
}
public static class Octopus.Client.Model.LicenseMessageDispositions : object {
    public static string Information;
    public static string Warning;
    public static string Error;
    private static LicenseMessageDispositions();
}
public class Octopus.Client.Model.LicenseMessageResource : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Disposition>k__BackingField;
    public string Message { get; public set; }
    public string Disposition { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Disposition();
    [CompilerGeneratedAttribute]
public void set_Disposition(string value);
}
public class Octopus.Client.Model.LicenseResource : Resource {
    [CompilerGeneratedAttribute]
private string <LicenseText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SerialNumber>k__BackingField;
    [WriteableAttribute]
public string LicenseText { get; public set; }
    public string SerialNumber { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LicenseText();
    [CompilerGeneratedAttribute]
public void set_LicenseText(string value);
    [CompilerGeneratedAttribute]
public string get_SerialNumber();
    [CompilerGeneratedAttribute]
public void set_SerialNumber(string value);
}
public class Octopus.Client.Model.LicenseStatusResource : Resource {
    [CompilerGeneratedAttribute]
private string <LicenseKind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCompliant>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostingEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ComplianceSummary>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EffectiveExpiryDate>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DaysToEffectiveExpiryDate>k__BackingField;
    [CompilerGeneratedAttribute]
private LicenseMessageResource[] <Messages>k__BackingField;
    [CompilerGeneratedAttribute]
private LicenseLimitStatusResource[] <Limits>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DoesExpiryBlockKeyActivities>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EffectiveNodeTaskLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EffectiveClusterTaskLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsClusterTaskLimitControlledByLicense>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNodeTaskLimitControlledByLicense>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PermissionsMode>k__BackingField;
    [ObsoleteAttribute("No longer supported from 2019.8.6")]
public string LicenseKind { get; public set; }
    public bool IsCompliant { get; public set; }
    public string HostingEnvironment { get; public set; }
    public string ComplianceSummary { get; public set; }
    [JsonConverterAttribute("Octopus.Client.Serialization.DateConverter")]
public DateTime EffectiveExpiryDate { get; public set; }
    public int DaysToEffectiveExpiryDate { get; public set; }
    public LicenseMessageResource[] Messages { get; public set; }
    public LicenseLimitStatusResource[] Limits { get; public set; }
    public bool DoesExpiryBlockKeyActivities { get; public set; }
    public int EffectiveNodeTaskLimit { get; public set; }
    public int EffectiveClusterTaskLimit { get; public set; }
    public bool IsClusterTaskLimitControlledByLicense { get; public set; }
    public bool IsNodeTaskLimitControlledByLicense { get; public set; }
    public string PermissionsMode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LicenseKind();
    [CompilerGeneratedAttribute]
public void set_LicenseKind(string value);
    [CompilerGeneratedAttribute]
public bool get_IsCompliant();
    [CompilerGeneratedAttribute]
public void set_IsCompliant(bool value);
    [CompilerGeneratedAttribute]
public string get_HostingEnvironment();
    [CompilerGeneratedAttribute]
public void set_HostingEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_ComplianceSummary();
    [CompilerGeneratedAttribute]
public void set_ComplianceSummary(string value);
    [CompilerGeneratedAttribute]
public DateTime get_EffectiveExpiryDate();
    [CompilerGeneratedAttribute]
public void set_EffectiveExpiryDate(DateTime value);
    [CompilerGeneratedAttribute]
public int get_DaysToEffectiveExpiryDate();
    [CompilerGeneratedAttribute]
public void set_DaysToEffectiveExpiryDate(int value);
    [CompilerGeneratedAttribute]
public LicenseMessageResource[] get_Messages();
    [CompilerGeneratedAttribute]
public void set_Messages(LicenseMessageResource[] value);
    [CompilerGeneratedAttribute]
public LicenseLimitStatusResource[] get_Limits();
    [CompilerGeneratedAttribute]
public void set_Limits(LicenseLimitStatusResource[] value);
    [CompilerGeneratedAttribute]
public bool get_DoesExpiryBlockKeyActivities();
    [CompilerGeneratedAttribute]
public void set_DoesExpiryBlockKeyActivities(bool value);
    [CompilerGeneratedAttribute]
public int get_EffectiveNodeTaskLimit();
    [CompilerGeneratedAttribute]
public void set_EffectiveNodeTaskLimit(int value);
    [CompilerGeneratedAttribute]
public int get_EffectiveClusterTaskLimit();
    [CompilerGeneratedAttribute]
public void set_EffectiveClusterTaskLimit(int value);
    [CompilerGeneratedAttribute]
public bool get_IsClusterTaskLimitControlledByLicense();
    [CompilerGeneratedAttribute]
public void set_IsClusterTaskLimitControlledByLicense(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsNodeTaskLimitControlledByLicense();
    [CompilerGeneratedAttribute]
public void set_IsNodeTaskLimitControlledByLicense(bool value);
    [CompilerGeneratedAttribute]
public string get_PermissionsMode();
    [CompilerGeneratedAttribute]
public void set_PermissionsMode(string value);
}
public class Octopus.Client.Model.LifecycleProgressionResource : Resource {
    [CompilerGeneratedAttribute]
private List`1<PhaseProgressionResource> <Phases>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <NextDeployments>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NextDeploymentsMinimumRequired>k__BackingField;
    public List`1<PhaseProgressionResource> Phases { get; public set; }
    public ReferenceCollection NextDeployments { get; public set; }
    public int NextDeploymentsMinimumRequired { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<PhaseProgressionResource> get_Phases();
    [CompilerGeneratedAttribute]
public void set_Phases(List`1<PhaseProgressionResource> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_NextDeployments();
    [CompilerGeneratedAttribute]
public void set_NextDeployments(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public int get_NextDeploymentsMinimumRequired();
    [CompilerGeneratedAttribute]
public void set_NextDeploymentsMinimumRequired(int value);
}
public class Octopus.Client.Model.LifecycleResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <ReleaseRetentionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleRetentionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PhaseResource> <Phases>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[JsonPropertyAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public RetentionPeriod ReleaseRetentionPolicy { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public RetentionPeriod TentacleRetentionPolicy { get; public set; }
    public IList`1<PhaseResource> Phases { get; private set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_ReleaseRetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_ReleaseRetentionPolicy(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_TentacleRetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_TentacleRetentionPolicy(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public IList`1<PhaseResource> get_Phases();
    [CompilerGeneratedAttribute]
private void set_Phases(IList`1<PhaseResource> value);
    public LifecycleResource WithReleaseRetentionPolicy(RetentionPeriod period);
    public LifecycleResource WithTentacleRetentionPolicy(RetentionPeriod period);
    public LifecycleResource Clear();
    public PhaseResource FindPhase(string name);
    public PhaseResource AddOrUpdatePhase(string name);
    public LifecycleResource RemovePhase(string name);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.LoginCommand : object {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RememberMe>k__BackingField;
    [CompilerGeneratedAttribute]
private LoginState <State>k__BackingField;
    [RequiredAttribute]
public string Username { get; public set; }
    [RequiredAttribute]
public string Password { get; public set; }
    public bool RememberMe { get; public set; }
    public LoginState State { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public bool get_RememberMe();
    [CompilerGeneratedAttribute]
public void set_RememberMe(bool value);
    [CompilerGeneratedAttribute]
public LoginState get_State();
    [CompilerGeneratedAttribute]
public void set_State(LoginState value);
}
public class Octopus.Client.Model.LoginState : object {
    [CompilerGeneratedAttribute]
private bool <UsingSecureConnection>k__BackingField;
    public bool UsingSecureConnection { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UsingSecureConnection();
    [CompilerGeneratedAttribute]
public void set_UsingSecureConnection(bool value);
}
public abstract class Octopus.Client.Model.MachineBasedResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Thumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MachinePolicyId>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineModelStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineModelHealthStatus <HealthStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasLatestCalamari>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusSummary>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInProcess>k__BackingField;
    [CompilerGeneratedAttribute]
private EndpointResource <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OperatingSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShellName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShellVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Architecture>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Thumbprint { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Uri { get; public set; }
    [WriteableAttribute]
public bool IsDisabled { get; public set; }
    [WriteableAttribute]
public string MachinePolicyId { get; public set; }
    public MachineModelStatus Status { get; public set; }
    public MachineModelHealthStatus HealthStatus { get; public set; }
    public bool HasLatestCalamari { get; public set; }
    public string StatusSummary { get; public set; }
    public bool IsInProcess { get; public set; }
    [WriteableAttribute]
public EndpointResource Endpoint { get; public set; }
    public string OperatingSystem { get; public set; }
    public string ShellName { get; public set; }
    public string ShellVersion { get; public set; }
    public string Architecture { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Thumbprint();
    [CompilerGeneratedAttribute]
public void set_Thumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public string get_MachinePolicyId();
    [CompilerGeneratedAttribute]
public void set_MachinePolicyId(string value);
    [CompilerGeneratedAttribute]
public MachineModelStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(MachineModelStatus value);
    [CompilerGeneratedAttribute]
public MachineModelHealthStatus get_HealthStatus();
    [CompilerGeneratedAttribute]
public void set_HealthStatus(MachineModelHealthStatus value);
    [CompilerGeneratedAttribute]
public bool get_HasLatestCalamari();
    [CompilerGeneratedAttribute]
public void set_HasLatestCalamari(bool value);
    [CompilerGeneratedAttribute]
public string get_StatusSummary();
    [CompilerGeneratedAttribute]
public void set_StatusSummary(string value);
    [CompilerGeneratedAttribute]
public bool get_IsInProcess();
    [CompilerGeneratedAttribute]
public void set_IsInProcess(bool value);
    [CompilerGeneratedAttribute]
public EndpointResource get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(EndpointResource value);
    [CompilerGeneratedAttribute]
public string get_OperatingSystem();
    [CompilerGeneratedAttribute]
public void set_OperatingSystem(string value);
    [CompilerGeneratedAttribute]
public string get_ShellName();
    [CompilerGeneratedAttribute]
public void set_ShellName(string value);
    [CompilerGeneratedAttribute]
public string get_ShellVersion();
    [CompilerGeneratedAttribute]
public void set_ShellVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Architecture();
    [CompilerGeneratedAttribute]
public void set_Architecture(string value);
}
public class Octopus.Client.Model.MachineCleanupPolicy : object {
    [CompilerGeneratedAttribute]
private DeleteMachinesBehavior <DeleteMachinesBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DeleteMachinesElapsedTimeSpan>k__BackingField;
    public DeleteMachinesBehavior DeleteMachinesBehavior { get; public set; }
    public TimeSpan DeleteMachinesElapsedTimeSpan { get; public set; }
    [CompilerGeneratedAttribute]
public DeleteMachinesBehavior get_DeleteMachinesBehavior();
    [CompilerGeneratedAttribute]
public void set_DeleteMachinesBehavior(DeleteMachinesBehavior value);
    [CompilerGeneratedAttribute]
public TimeSpan get_DeleteMachinesElapsedTimeSpan();
    [CompilerGeneratedAttribute]
public void set_DeleteMachinesElapsedTimeSpan(TimeSpan value);
}
public class Octopus.Client.Model.MachineConnectionStatus : Resource {
    [CompilerGeneratedAttribute]
private string <MachineId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ActivityLogElement> <Logs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentTentacleVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastChecked>k__BackingField;
    public string MachineId { get; public set; }
    public List`1<ActivityLogElement> Logs { get; public set; }
    public string Status { get; public set; }
    public string CurrentTentacleVersion { get; public set; }
    public DateTimeOffset LastChecked { get; public set; }
    [CompilerGeneratedAttribute]
public string get_MachineId();
    [CompilerGeneratedAttribute]
public void set_MachineId(string value);
    [CompilerGeneratedAttribute]
public List`1<ActivityLogElement> get_Logs();
    [CompilerGeneratedAttribute]
public void set_Logs(List`1<ActivityLogElement> value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_CurrentTentacleVersion();
    [CompilerGeneratedAttribute]
public void set_CurrentTentacleVersion(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastChecked();
    [CompilerGeneratedAttribute]
public void set_LastChecked(DateTimeOffset value);
}
public enum Octopus.Client.Model.MachineConnectivityBehavior : Enum {
    public int value__;
    public static MachineConnectivityBehavior ExpectedToBeOnline;
    public static MachineConnectivityBehavior MayBeOfflineAndCanBeSkipped;
}
public class Octopus.Client.Model.MachineConnectivityPolicy : object {
    [CompilerGeneratedAttribute]
private MachineConnectivityBehavior <MachineConnectivityBehavior>k__BackingField;
    public MachineConnectivityBehavior MachineConnectivityBehavior { get; public set; }
    [CompilerGeneratedAttribute]
public MachineConnectivityBehavior get_MachineConnectivityBehavior();
    [CompilerGeneratedAttribute]
public void set_MachineConnectivityBehavior(MachineConnectivityBehavior value);
}
public class Octopus.Client.Model.MachineDeploymentPreview : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasLatestCalamari>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public bool HasLatestCalamari { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_HasLatestCalamari();
    [CompilerGeneratedAttribute]
public void set_HasLatestCalamari(bool value);
}
public class Octopus.Client.Model.MachineHealthCheckPolicy : object {
    private static string UtcTimezone;
    [CompilerGeneratedAttribute]
private MachineScriptPolicy <PowerShellHealthCheckPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineScriptPolicy <BashHealthCheckPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <HealthCheckInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HealthCheckCron>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HealthCheckCronTimezone>k__BackingField;
    [CompilerGeneratedAttribute]
private HealthCheckType <HealthCheckType>k__BackingField;
    [ObsoleteAttribute("Use PowerShellHealthCheckPolicy instead.")]
public MachineScriptPolicy TentacleEndpointHealthCheckPolicy { get; }
    public MachineScriptPolicy PowerShellHealthCheckPolicy { get; public set; }
    [ObsoleteAttribute("Use BashHealthCheckPolicy instead.")]
public MachineScriptPolicy SshEndpointHealthCheckPolicy { get; }
    public MachineScriptPolicy BashHealthCheckPolicy { get; public set; }
    public Nullable`1<TimeSpan> HealthCheckInterval { get; public set; }
    public string HealthCheckCron { get; public set; }
    public string HealthCheckCronTimezone { get; public set; }
    public HealthCheckType HealthCheckType { get; public set; }
    [JsonConstructorAttribute]
public MachineHealthCheckPolicy(MachineScriptPolicy powerShellHealthCheckPolicy, MachineScriptPolicy bashHealthCheckPolicy);
    public MachineScriptPolicy get_TentacleEndpointHealthCheckPolicy();
    [CompilerGeneratedAttribute]
public MachineScriptPolicy get_PowerShellHealthCheckPolicy();
    [CompilerGeneratedAttribute]
public void set_PowerShellHealthCheckPolicy(MachineScriptPolicy value);
    public MachineScriptPolicy get_SshEndpointHealthCheckPolicy();
    [CompilerGeneratedAttribute]
public MachineScriptPolicy get_BashHealthCheckPolicy();
    [CompilerGeneratedAttribute]
public void set_BashHealthCheckPolicy(MachineScriptPolicy value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_HealthCheckInterval();
    [CompilerGeneratedAttribute]
public void set_HealthCheckInterval(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public string get_HealthCheckCron();
    [CompilerGeneratedAttribute]
public void set_HealthCheckCron(string value);
    [CompilerGeneratedAttribute]
public string get_HealthCheckCronTimezone();
    [CompilerGeneratedAttribute]
public void set_HealthCheckCronTimezone(string value);
    [CompilerGeneratedAttribute]
public HealthCheckType get_HealthCheckType();
    [CompilerGeneratedAttribute]
public void set_HealthCheckType(HealthCheckType value);
}
public enum Octopus.Client.Model.MachineModelHealthStatus : Enum {
    public int value__;
    public static MachineModelHealthStatus Healthy;
    public static MachineModelHealthStatus Unavailable;
    public static MachineModelHealthStatus Unknown;
    public static MachineModelHealthStatus HasWarnings;
    public static MachineModelHealthStatus Unhealthy;
}
public enum Octopus.Client.Model.MachineModelStatus : Enum {
    public int value__;
    public static MachineModelStatus Online;
    public static MachineModelStatus Offline;
    public static MachineModelStatus Unknown;
    public static MachineModelStatus NeedsUpgrade;
    public static MachineModelStatus CalamariNeedsUpgrade;
    public static MachineModelStatus Disabled;
}
public class Octopus.Client.Model.MachinePolicyResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineHealthCheckPolicy <MachineHealthCheckPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineConnectivityPolicy <MachineConnectivityPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineCleanupPolicy <MachineCleanupPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineUpdatePolicy <MachineUpdatePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <PollingRequestQueueTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <PollingRequestMaximumMessageProcessingTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConnectionRetrySleepInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ConnectionRetryCountLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConnectionRetryTimeLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConnectionConnectTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[JsonPropertyAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public bool IsDefault { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public MachineHealthCheckPolicy MachineHealthCheckPolicy { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public MachineConnectivityPolicy MachineConnectivityPolicy { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public MachineCleanupPolicy MachineCleanupPolicy { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public MachineUpdatePolicy MachineUpdatePolicy { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public TimeSpan PollingRequestQueueTimeout { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public TimeSpan PollingRequestMaximumMessageProcessingTimeout { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public TimeSpan ConnectionRetrySleepInterval { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public int ConnectionRetryCountLimit { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public TimeSpan ConnectionRetryTimeLimit { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public TimeSpan ConnectionConnectTimeout { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public MachineHealthCheckPolicy get_MachineHealthCheckPolicy();
    [CompilerGeneratedAttribute]
public void set_MachineHealthCheckPolicy(MachineHealthCheckPolicy value);
    [CompilerGeneratedAttribute]
public MachineConnectivityPolicy get_MachineConnectivityPolicy();
    [CompilerGeneratedAttribute]
public void set_MachineConnectivityPolicy(MachineConnectivityPolicy value);
    [CompilerGeneratedAttribute]
public MachineCleanupPolicy get_MachineCleanupPolicy();
    [CompilerGeneratedAttribute]
public void set_MachineCleanupPolicy(MachineCleanupPolicy value);
    [CompilerGeneratedAttribute]
public MachineUpdatePolicy get_MachineUpdatePolicy();
    [CompilerGeneratedAttribute]
public void set_MachineUpdatePolicy(MachineUpdatePolicy value);
    [CompilerGeneratedAttribute]
public TimeSpan get_PollingRequestQueueTimeout();
    [CompilerGeneratedAttribute]
public void set_PollingRequestQueueTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_PollingRequestMaximumMessageProcessingTimeout();
    [CompilerGeneratedAttribute]
public void set_PollingRequestMaximumMessageProcessingTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConnectionRetrySleepInterval();
    [CompilerGeneratedAttribute]
public void set_ConnectionRetrySleepInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_ConnectionRetryCountLimit();
    [CompilerGeneratedAttribute]
public void set_ConnectionRetryCountLimit(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConnectionRetryTimeLimit();
    [CompilerGeneratedAttribute]
public void set_ConnectionRetryTimeLimit(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConnectionConnectTimeout();
    [CompilerGeneratedAttribute]
public void set_ConnectionConnectTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.MachinePollingConversation : object {
    [CompilerGeneratedAttribute]
private DateTime <StartedAtUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <InitialMessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InitialMessageDescription>k__BackingField;
    public DateTime StartedAtUtc { get; public set; }
    public Guid InitialMessageId { get; public set; }
    public string InitialMessageDescription { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_StartedAtUtc();
    [CompilerGeneratedAttribute]
public void set_StartedAtUtc(DateTime value);
    [CompilerGeneratedAttribute]
public Guid get_InitialMessageId();
    [CompilerGeneratedAttribute]
public void set_InitialMessageId(Guid value);
    [CompilerGeneratedAttribute]
public string get_InitialMessageDescription();
    [CompilerGeneratedAttribute]
public void set_InitialMessageDescription(string value);
}
public class Octopus.Client.Model.MachineResource : MachineBasedResource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Roles>k__BackingField;
    private Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection Roles { get; public set; }
    [WriteableAttribute]
public TenantedDeploymentMode TenantedDeploymentParticipation { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(ReferenceCollection value);
    public void set_TenantedDeploymentParticipation(TenantedDeploymentMode value);
    public TenantedDeploymentMode get_TenantedDeploymentParticipation();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
    public MachineResource AddOrUpdateEnvironments(EnvironmentResource[] environments);
    public MachineResource RemoveEnvironment(EnvironmentResource environment);
    public MachineResource ClearEnvironments();
    public MachineResource AddOrUpdateRoles(String[] roles);
    public MachineResource RemoveRole(string role);
    public MachineResource ClearRoles();
    public MachineResource AddOrUpdateTenants(TenantResource[] tenants);
    public MachineResource RemoveTenant(TenantResource tenant);
    public MachineResource ClearTenants();
    public MachineResource AddOrUpdateTenantTags(TagResource[] tenantTags);
    public MachineResource RemoveTenantTag(TagResource tenantTag);
    public MachineResource ClearTenantTags();
}
public class Octopus.Client.Model.MachineScriptPolicy : object {
    [CompilerGeneratedAttribute]
private MachineScriptPolicyRunType <RunType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScriptBody>k__BackingField;
    public MachineScriptPolicyRunType RunType { get; public set; }
    public string ScriptBody { get; public set; }
    [CompilerGeneratedAttribute]
public MachineScriptPolicyRunType get_RunType();
    [CompilerGeneratedAttribute]
public void set_RunType(MachineScriptPolicyRunType value);
    [CompilerGeneratedAttribute]
public string get_ScriptBody();
    [CompilerGeneratedAttribute]
public void set_ScriptBody(string value);
}
public enum Octopus.Client.Model.MachineScriptPolicyRunType : Enum {
    public int value__;
    public static MachineScriptPolicyRunType InheritFromDefault;
    public static MachineScriptPolicyRunType Inline;
    [ObsoleteAttribute("The connectivity setting is now configured per MachineHealthCheckPolicy using the property HealthCheckType", "True")]
public static MachineScriptPolicyRunType OnlyConnectivity;
}
public class Octopus.Client.Model.MachineUpdatePolicy : object {
    [CompilerGeneratedAttribute]
private CalamariUpdateBehavior <CalamariUpdateBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private TentacleUpdateBehavior <TentacleUpdateBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TentacleUpdateAccountId>k__BackingField;
    public CalamariUpdateBehavior CalamariUpdateBehavior { get; public set; }
    public TentacleUpdateBehavior TentacleUpdateBehavior { get; public set; }
    public string TentacleUpdateAccountId { get; public set; }
    [CompilerGeneratedAttribute]
public CalamariUpdateBehavior get_CalamariUpdateBehavior();
    [CompilerGeneratedAttribute]
public void set_CalamariUpdateBehavior(CalamariUpdateBehavior value);
    [CompilerGeneratedAttribute]
public TentacleUpdateBehavior get_TentacleUpdateBehavior();
    [CompilerGeneratedAttribute]
public void set_TentacleUpdateBehavior(TentacleUpdateBehavior value);
    [CompilerGeneratedAttribute]
public string get_TentacleUpdateAccountId();
    [CompilerGeneratedAttribute]
public void set_TentacleUpdateAccountId(string value);
}
public class Octopus.Client.Model.MaintenanceConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsInMaintenanceMode>k__BackingField;
    [WriteableAttribute]
public bool IsInMaintenanceMode { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsInMaintenanceMode();
    [CompilerGeneratedAttribute]
public void set_IsInMaintenanceMode(bool value);
}
public class Octopus.Client.Model.MavenFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private int <DownloadAttempts>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DownloadRetryBackoffSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public int DownloadAttempts { get; public set; }
    [WriteableAttribute]
public int DownloadRetryBackoffSeconds { get; public set; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public int get_DownloadAttempts();
    [CompilerGeneratedAttribute]
public void set_DownloadAttempts(int value);
    [CompilerGeneratedAttribute]
public int get_DownloadRetryBackoffSeconds();
    [CompilerGeneratedAttribute]
public void set_DownloadRetryBackoffSeconds(int value);
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.Migrations.MigrationImportResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageFeedSpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEncryptedPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDryRun>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OverwriteExisting>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DeletePackageOnCompletion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SuccessCallbackUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureCallbackUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [WriteableAttribute]
public string PackageId { get; public set; }
    [WriteableAttribute]
public string PackageFeedSpaceId { get; public set; }
    [WriteableAttribute]
public string PackageVersion { get; public set; }
    [WriteableAttribute]
public string Password { get; public set; }
    [WriteableAttribute]
public bool IsEncryptedPackage { get; public set; }
    [WriteableAttribute]
public bool IsDryRun { get; public set; }
    [WriteableAttribute]
public bool OverwriteExisting { get; public set; }
    [WriteableAttribute]
public bool DeletePackageOnCompletion { get; public set; }
    [WriteableAttribute]
public string SuccessCallbackUri { get; public set; }
    [WriteableAttribute]
public string FailureCallbackUri { get; public set; }
    public string TaskId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageFeedSpaceId();
    [CompilerGeneratedAttribute]
public void set_PackageFeedSpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageVersion();
    [CompilerGeneratedAttribute]
public void set_PackageVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEncryptedPackage();
    [CompilerGeneratedAttribute]
public void set_IsEncryptedPackage(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsDryRun();
    [CompilerGeneratedAttribute]
public void set_IsDryRun(bool value);
    [CompilerGeneratedAttribute]
public bool get_OverwriteExisting();
    [CompilerGeneratedAttribute]
public void set_OverwriteExisting(bool value);
    [CompilerGeneratedAttribute]
public bool get_DeletePackageOnCompletion();
    [CompilerGeneratedAttribute]
public void set_DeletePackageOnCompletion(bool value);
    [CompilerGeneratedAttribute]
public string get_SuccessCallbackUri();
    [CompilerGeneratedAttribute]
public void set_SuccessCallbackUri(string value);
    [CompilerGeneratedAttribute]
public string get_FailureCallbackUri();
    [CompilerGeneratedAttribute]
public void set_FailureCallbackUri(string value);
    [CompilerGeneratedAttribute]
public string get_TaskId();
    [CompilerGeneratedAttribute]
public void set_TaskId(string value);
}
public class Octopus.Client.Model.Migrations.MigrationPartialExportResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCertificates>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreDeployments>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreTenants>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeTaskLogs>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EncryptPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationPackageFeedSpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationApiKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationPackageFeed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SuccessCallbackUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureCallbackUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [WriteableAttribute]
public string PackageId { get; public set; }
    [WriteableAttribute]
public string SpaceId { get; public set; }
    [WriteableAttribute]
public string PackageVersion { get; public set; }
    [WriteableAttribute]
public string Password { get; public set; }
    [WriteableAttribute]
public List`1<string> Projects { get; public set; }
    [WriteableAttribute]
public bool IgnoreCertificates { get; public set; }
    [WriteableAttribute]
public bool IgnoreMachines { get; public set; }
    [WriteableAttribute]
public bool IgnoreDeployments { get; public set; }
    [WriteableAttribute]
public bool IgnoreTenants { get; public set; }
    [WriteableAttribute]
public bool IncludeTaskLogs { get; public set; }
    [WriteableAttribute]
public bool EncryptPackage { get; public set; }
    [WriteableAttribute]
public string DestinationPackageFeedSpaceId { get; public set; }
    [WriteableAttribute]
public string DestinationApiKey { get; public set; }
    [WriteableAttribute]
public string DestinationPackageFeed { get; public set; }
    [WriteableAttribute]
public string SuccessCallbackUri { get; public set; }
    [WriteableAttribute]
public string FailureCallbackUri { get; public set; }
    public string TaskId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_SpaceId();
    [CompilerGeneratedAttribute]
public void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageVersion();
    [CompilerGeneratedAttribute]
public void set_PackageVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Projects();
    [CompilerGeneratedAttribute]
public void set_Projects(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreCertificates();
    [CompilerGeneratedAttribute]
public void set_IgnoreCertificates(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreMachines();
    [CompilerGeneratedAttribute]
public void set_IgnoreMachines(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreDeployments();
    [CompilerGeneratedAttribute]
public void set_IgnoreDeployments(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreTenants();
    [CompilerGeneratedAttribute]
public void set_IgnoreTenants(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeTaskLogs();
    [CompilerGeneratedAttribute]
public void set_IncludeTaskLogs(bool value);
    [CompilerGeneratedAttribute]
public bool get_EncryptPackage();
    [CompilerGeneratedAttribute]
public void set_EncryptPackage(bool value);
    [CompilerGeneratedAttribute]
public string get_DestinationPackageFeedSpaceId();
    [CompilerGeneratedAttribute]
public void set_DestinationPackageFeedSpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_DestinationApiKey();
    [CompilerGeneratedAttribute]
public void set_DestinationApiKey(string value);
    [CompilerGeneratedAttribute]
public string get_DestinationPackageFeed();
    [CompilerGeneratedAttribute]
public void set_DestinationPackageFeed(string value);
    [CompilerGeneratedAttribute]
public string get_SuccessCallbackUri();
    [CompilerGeneratedAttribute]
public void set_SuccessCallbackUri(string value);
    [CompilerGeneratedAttribute]
public string get_FailureCallbackUri();
    [CompilerGeneratedAttribute]
public void set_FailureCallbackUri(string value);
    [CompilerGeneratedAttribute]
public string get_TaskId();
    [CompilerGeneratedAttribute]
public void set_TaskId(string value);
}
public class Octopus.Client.Model.MissingVariableResource : object {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LibraryVariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableTemplateName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableTemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [JsonPropertyAttribute]
public string ProjectId { get; public set; }
    [JsonPropertyAttribute]
public string LibraryVariableSetId { get; public set; }
    public string VariableTemplateName { get; public set; }
    public string VariableTemplateId { get; public set; }
    [JsonPropertyAttribute]
public string EnvironmentId { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_LibraryVariableSetId();
    [CompilerGeneratedAttribute]
public void set_LibraryVariableSetId(string value);
    [CompilerGeneratedAttribute]
public string get_VariableTemplateName();
    [CompilerGeneratedAttribute]
public void set_VariableTemplateName(string value);
    [CompilerGeneratedAttribute]
public string get_VariableTemplateId();
    [CompilerGeneratedAttribute]
public void set_VariableTemplateId(string value);
    [CompilerGeneratedAttribute]
public string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.ModifyChannelCommand : ChannelResource {
    [CompilerGeneratedAttribute]
private string <ChangeDescription>k__BackingField;
    public string ChangeDescription { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChangeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChangeDescription(string value);
}
public class Octopus.Client.Model.ModifyDeploymentProcessCommand : DeploymentProcessResource {
    [CompilerGeneratedAttribute]
private string <ChangeDescription>k__BackingField;
    public string ChangeDescription { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChangeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChangeDescription(string value);
}
public class Octopus.Client.Model.ModifyDeploymentSettingsCommand : DeploymentSettingsResource {
    [CompilerGeneratedAttribute]
private string <ChangeDescription>k__BackingField;
    public string ChangeDescription { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChangeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChangeDescription(string value);
}
public enum Octopus.Client.Model.MultipleAccountType : Enum {
    public int value__;
    public static MultipleAccountType None;
    public static MultipleAccountType KubernetesStandard;
    public static MultipleAccountType KubernetesAws;
    public static MultipleAccountType KubernetesAzure;
    public static MultipleAccountType KubernetesCertificate;
    public static MultipleAccountType KubernetesPodService;
    public static MultipleAccountType KubernetesGoogleCloud;
}
public class Octopus.Client.Model.MultiTenancyStatusResource : Resource {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    public bool Enabled { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
}
public class Octopus.Client.Model.NamedReferenceItem : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisplayIdAndName>k__BackingField;
    public string Id { get; public set; }
    public string DisplayName { get; public set; }
    public bool DisplayIdAndName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public bool get_DisplayIdAndName();
    [CompilerGeneratedAttribute]
public void set_DisplayIdAndName(bool value);
}
public class Octopus.Client.Model.NamedReferenceItemCollection : List`1<NamedReferenceItem> {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.NormalizeAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.NotDocumentReferenceAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.NotReadableAttribute : ApiPropertyAttribute {
}
public class Octopus.Client.Model.NuGetFeedResource : FeedResource {
    public static int DefaultDownloadAttempts;
    public static int DefaultDownloadRetryBackoffSeconds;
    public static bool DefaultEnhancedMode;
    [CompilerGeneratedAttribute]
private int <DownloadAttempts>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DownloadRetryBackoffSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnhancedMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public int DownloadAttempts { get; public set; }
    [WriteableAttribute]
public int DownloadRetryBackoffSeconds { get; public set; }
    [WriteableAttribute]
public bool EnhancedMode { get; public set; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    private static NuGetFeedResource();
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public int get_DownloadAttempts();
    [CompilerGeneratedAttribute]
public void set_DownloadAttempts(int value);
    [CompilerGeneratedAttribute]
public int get_DownloadRetryBackoffSeconds();
    [CompilerGeneratedAttribute]
public void set_DownloadRetryBackoffSeconds(int value);
    [CompilerGeneratedAttribute]
public bool get_EnhancedMode();
    [CompilerGeneratedAttribute]
public void set_EnhancedMode(bool value);
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.NumericReportData : object {
    [CompilerGeneratedAttribute]
private String[] <Labels>k__BackingField;
    [CompilerGeneratedAttribute]
private NumericReportSeries[] <Series>k__BackingField;
    public String[] Labels { get; public set; }
    public NumericReportSeries[] Series { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Labels();
    [CompilerGeneratedAttribute]
public void set_Labels(String[] value);
    [CompilerGeneratedAttribute]
public NumericReportSeries[] get_Series();
    [CompilerGeneratedAttribute]
public void set_Series(NumericReportSeries[] value);
}
public class Octopus.Client.Model.NumericReportSeries : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private Double[] <Data>k__BackingField;
    public string Label { get; public set; }
    public Double[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public Double[] get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(Double[] value);
}
internal class Octopus.Client.Model.OctopusCustomHeaders : object {
    internal static IEnvironmentHelper environmentHelper;
    internal static IAutomationEnvironmentProvider automationEnvironmentProvider;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    internal string UserAgent { get; }
    internal OctopusCustomHeaders(string requestingTool);
    private static OctopusCustomHeaders();
    [CompilerGeneratedAttribute]
internal string get_UserAgent();
}
public class Octopus.Client.Model.OctopusProjectFeedResource : FeedResource {
    public FeedType FeedType { get; }
    public virtual FeedType get_FeedType();
}
public class Octopus.Client.Model.OctopusServerClusterSummaryResource : object {
    [CompilerGeneratedAttribute]
private OctopusServerNodeSummaryResource[] <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public OctopusServerNodeSummaryResource[] Nodes { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public OctopusServerNodeSummaryResource[] get_Nodes();
    [CompilerGeneratedAttribute]
public void set_Nodes(OctopusServerNodeSummaryResource[] value);
    [CompilerGeneratedAttribute]
public LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.OctopusServerNodeDetailsResource : Resource {
    [CompilerGeneratedAttribute]
private int <RunningTasks>k__BackingField;
    [WriteableAttribute]
public int RunningTasks { get; public set; }
    [CompilerGeneratedAttribute]
public int get_RunningTasks();
    [CompilerGeneratedAttribute]
public void set_RunningTasks(int value);
}
public class Octopus.Client.Model.OctopusServerNodeResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxConcurrentTasks>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInMaintenanceMode>k__BackingField;
    public string Name { get; public set; }
    [WriteableAttribute]
public int MaxConcurrentTasks { get; public set; }
    [WriteableAttribute]
public bool IsInMaintenanceMode { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_MaxConcurrentTasks();
    [CompilerGeneratedAttribute]
public void set_MaxConcurrentTasks(int value);
    [CompilerGeneratedAttribute]
public bool get_IsInMaintenanceMode();
    [CompilerGeneratedAttribute]
public void set_IsInMaintenanceMode(bool value);
}
public class Octopus.Client.Model.OctopusServerNodeSummaryResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxConcurrentTasks>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInMaintenanceMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastSeen>k__BackingField;
    [CompilerGeneratedAttribute]
private LeadershipRank <Rank>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLeader>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOffline>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RunningTaskCount>k__BackingField;
    public string Name { get; public set; }
    public int MaxConcurrentTasks { get; public set; }
    public bool IsInMaintenanceMode { get; public set; }
    public Nullable`1<DateTimeOffset> LastSeen { get; public set; }
    [ObsoleteAttribute("Removed in Octopus Server 2020.3.0")]
public LeadershipRank Rank { get; public set; }
    [ObsoleteAttribute("Removed in Octopus Server 2020.3.0")]
public bool IsLeader { get; public set; }
    public bool IsOffline { get; public set; }
    public int RunningTaskCount { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_MaxConcurrentTasks();
    [CompilerGeneratedAttribute]
public void set_MaxConcurrentTasks(int value);
    [CompilerGeneratedAttribute]
public bool get_IsInMaintenanceMode();
    [CompilerGeneratedAttribute]
public void set_IsInMaintenanceMode(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastSeen();
    [CompilerGeneratedAttribute]
public void set_LastSeen(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public LeadershipRank get_Rank();
    [CompilerGeneratedAttribute]
public void set_Rank(LeadershipRank value);
    [CompilerGeneratedAttribute]
public bool get_IsLeader();
    [CompilerGeneratedAttribute]
public void set_IsLeader(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsOffline();
    [CompilerGeneratedAttribute]
public void set_IsOffline(bool value);
    [CompilerGeneratedAttribute]
public int get_RunningTaskCount();
    [CompilerGeneratedAttribute]
public void set_RunningTaskCount(int value);
}
public enum Octopus.Client.Model.OverwriteMode : Enum {
    public int value__;
    public static OverwriteMode FailIfExists;
    public static OverwriteMode OverwriteExisting;
    public static OverwriteMode IgnoreIfExists;
}
[ExtensionAttribute]
internal static class Octopus.Client.Model.OverwriteModeLink : object {
    public static string Link;
    private static OverwriteModeLink();
    [ExtensionAttribute]
public static bool ConvertToLegacyReplaceFlag(OverwriteMode this, ILog logger);
}
public enum Octopus.Client.Model.PackageAcquisitionLocation : Enum {
    public int value__;
    public static PackageAcquisitionLocation Server;
    public static PackageAcquisitionLocation ExecutionTarget;
    public static PackageAcquisitionLocation NotAcquired;
}
public class Octopus.Client.Model.PackageBuildMetadata : object {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitNumber>k__BackingField;
    public string PackageId { get; public set; }
    public string Version { get; public set; }
    public string BuildNumber { get; public set; }
    public string BuildUrl { get; public set; }
    public string VcsType { get; public set; }
    public string VcsRoot { get; public set; }
    public string VcsCommitNumber { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_BuildNumber();
    [CompilerGeneratedAttribute]
public void set_BuildNumber(string value);
    [CompilerGeneratedAttribute]
public string get_BuildUrl();
    [CompilerGeneratedAttribute]
public void set_BuildUrl(string value);
    [CompilerGeneratedAttribute]
public string get_VcsType();
    [CompilerGeneratedAttribute]
public void set_VcsType(string value);
    [CompilerGeneratedAttribute]
public string get_VcsRoot();
    [CompilerGeneratedAttribute]
public void set_VcsRoot(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitNumber();
    [CompilerGeneratedAttribute]
public void set_VcsCommitNumber(string value);
}
public class Octopus.Client.Model.PackageFromBuiltInFeedResource : PackageResource {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <PackageSizeBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hash>k__BackingField;
    public Nullable`1<long> PackageSizeBytes { get; public set; }
    public string Hash { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_PackageSizeBytes();
    [CompilerGeneratedAttribute]
public void set_PackageSizeBytes(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Hash();
    [CompilerGeneratedAttribute]
public void set_Hash(string value);
}
public class Octopus.Client.Model.PackageMetadata.OctopusPackageMetadata : object {
    internal static string PackageMetadataRequiresOctopusVersion;
    internal static string PackageMetadataRequiresOctopusVersionMessage;
    [CompilerGeneratedAttribute]
private string <BuildEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommentParser>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Commit[] <Commits>k__BackingField;
    public string BuildEnvironment { get; public set; }
    public string CommentParser { get; public set; }
    public string BuildNumber { get; public set; }
    public string BuildUrl { get; public set; }
    public string VcsType { get; public set; }
    public string VcsRoot { get; public set; }
    public string VcsCommitNumber { get; public set; }
    public Commit[] Commits { get; public set; }
    private static OctopusPackageMetadata();
    [CompilerGeneratedAttribute]
public string get_BuildEnvironment();
    [CompilerGeneratedAttribute]
public void set_BuildEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_CommentParser();
    [CompilerGeneratedAttribute]
public void set_CommentParser(string value);
    [CompilerGeneratedAttribute]
public string get_BuildNumber();
    [CompilerGeneratedAttribute]
public void set_BuildNumber(string value);
    [CompilerGeneratedAttribute]
public string get_BuildUrl();
    [CompilerGeneratedAttribute]
public void set_BuildUrl(string value);
    [CompilerGeneratedAttribute]
public string get_VcsType();
    [CompilerGeneratedAttribute]
public void set_VcsType(string value);
    [CompilerGeneratedAttribute]
public string get_VcsRoot();
    [CompilerGeneratedAttribute]
public void set_VcsRoot(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitNumber();
    [CompilerGeneratedAttribute]
public void set_VcsCommitNumber(string value);
    [CompilerGeneratedAttribute]
public Commit[] get_Commits();
    [CompilerGeneratedAttribute]
public void set_Commits(Commit[] value);
}
public class Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataMappedResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssueTrackerName>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkItemLink[] <WorkItems>k__BackingField;
    [CompilerGeneratedAttribute]
private CommitDetail[] <Commits>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IncompleteDataWarning>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Created>k__BackingField;
    public string PackageId { get; public set; }
    public string Version { get; public set; }
    public string BuildEnvironment { get; public set; }
    public string BuildNumber { get; public set; }
    public string BuildUrl { get; public set; }
    public string VcsType { get; public set; }
    public string VcsRoot { get; public set; }
    public string VcsCommitNumber { get; public set; }
    public string VcsCommitUrl { get; public set; }
    public string IssueTrackerName { get; public set; }
    public WorkItemLink[] WorkItems { get; public set; }
    public CommitDetail[] Commits { get; public set; }
    public string IncompleteDataWarning { get; public set; }
    public Nullable`1<DateTimeOffset> Created { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_BuildEnvironment();
    [CompilerGeneratedAttribute]
public void set_BuildEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_BuildNumber();
    [CompilerGeneratedAttribute]
public void set_BuildNumber(string value);
    [CompilerGeneratedAttribute]
public string get_BuildUrl();
    [CompilerGeneratedAttribute]
public void set_BuildUrl(string value);
    [CompilerGeneratedAttribute]
public string get_VcsType();
    [CompilerGeneratedAttribute]
public void set_VcsType(string value);
    [CompilerGeneratedAttribute]
public string get_VcsRoot();
    [CompilerGeneratedAttribute]
public void set_VcsRoot(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitNumber();
    [CompilerGeneratedAttribute]
public void set_VcsCommitNumber(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitUrl();
    [CompilerGeneratedAttribute]
public void set_VcsCommitUrl(string value);
    [CompilerGeneratedAttribute]
public string get_IssueTrackerName();
    [CompilerGeneratedAttribute]
public void set_IssueTrackerName(string value);
    [CompilerGeneratedAttribute]
public WorkItemLink[] get_WorkItems();
    [CompilerGeneratedAttribute]
public void set_WorkItems(WorkItemLink[] value);
    [CompilerGeneratedAttribute]
public CommitDetail[] get_Commits();
    [CompilerGeneratedAttribute]
public void set_Commits(CommitDetail[] value);
    [CompilerGeneratedAttribute]
public string get_IncompleteDataWarning();
    [CompilerGeneratedAttribute]
public void set_IncompleteDataWarning(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(Nullable`1<DateTimeOffset> value);
}
public class Octopus.Client.Model.PackageMetadata.OctopusPackageMetadataVersionResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private OctopusPackageMetadata <OctopusPackageMetadata>k__BackingField;
    public string PackageId { get; public set; }
    public string Version { get; public set; }
    public OctopusPackageMetadata OctopusPackageMetadata { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public OctopusPackageMetadata get_OctopusPackageMetadata();
    [CompilerGeneratedAttribute]
public void set_OctopusPackageMetadata(OctopusPackageMetadata value);
}
public class Octopus.Client.Model.PackageReference : object {
    private string name;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AcquisitionLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepPackageInputsReferenceId>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string PackageId { get; public set; }
    public string FeedId { get; public set; }
    public string AcquisitionLocation { get; public set; }
    [JsonPropertyAttribute]
public string StepPackageInputsReferenceId { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Properties { get; private set; }
    [JsonIgnoreAttribute]
public bool IsPrimaryPackage { get; }
    public PackageReference(string name, string packageId, string feedId, PackageAcquisitionLocation acquisitionLocation);
    public PackageReference(string name, string packageId, string feedId, string acquisitionLocation);
    public PackageReference(string packageId, string feedId, PackageAcquisitionLocation acquisitionLocation);
    public PackageReference(string packageId, string feedId, string acquisitionLocation);
    public PackageReference(string packageId, string feedId);
    [JsonConstructorAttribute]
protected PackageReference(string id, string name, string packageId, string feedId, string acquisitionLocation);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    public string get_Name();
    public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_FeedId();
    [CompilerGeneratedAttribute]
public void set_FeedId(string value);
    [CompilerGeneratedAttribute]
public string get_AcquisitionLocation();
    [CompilerGeneratedAttribute]
public void set_AcquisitionLocation(string value);
    [CompilerGeneratedAttribute]
public string get_StepPackageInputsReferenceId();
    [CompilerGeneratedAttribute]
public void set_StepPackageInputsReferenceId(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(IDictionary`2<string, string> value);
    public bool get_IsPrimaryPackage();
    public PackageReference Clone();
}
public class Octopus.Client.Model.PackageReferenceCollection : object {
    private Dictionary`2<string, PackageReference> nameMap;
    public PackageReference PrimaryPackage { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public PackageReference get_PrimaryPackage();
    public sealed virtual void Add(PackageReference item);
    public PackageReference GetByName(string name);
    public bool TryGetByName(string name, PackageReference& package);
    public sealed virtual bool Contains(PackageReference item);
    public sealed virtual void CopyTo(PackageReference[] array, int arrayIndex);
    public sealed virtual bool Remove(PackageReference item);
    public sealed virtual int get_Count();
    public sealed virtual void Clear();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual IEnumerator`1<PackageReference> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Octopus.Client.Model.PackageResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Summary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Published>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileExtension>k__BackingField;
    [CompilerGeneratedAttribute]
private OctopusPackageVersionBuildInformationMappedResource <PackageVersionBuildInformation>k__BackingField;
    [ObsoleteAttribute("Replaced by PackageId")]
public string NuGetPackageId { get; public set; }
    public string PackageId { get; public set; }
    [ObsoleteAttribute("Replaced by FeedId")]
public string NuGetFeedId { get; public set; }
    public string FeedId { get; public set; }
    public string Title { get; public set; }
    public string Summary { get; public set; }
    public string Version { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<DateTimeOffset> Published { get; public set; }
    public string ReleaseNotes { get; public set; }
    public string FileExtension { get; public set; }
    public OctopusPackageVersionBuildInformationMappedResource PackageVersionBuildInformation { get; public set; }
    public string get_NuGetPackageId();
    public void set_NuGetPackageId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    public string get_NuGetFeedId();
    public void set_NuGetFeedId(string value);
    [CompilerGeneratedAttribute]
public string get_FeedId();
    [CompilerGeneratedAttribute]
public void set_FeedId(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Summary();
    [CompilerGeneratedAttribute]
public void set_Summary(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Published();
    [CompilerGeneratedAttribute]
public void set_Published(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_ReleaseNotes();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotes(string value);
    [CompilerGeneratedAttribute]
public string get_FileExtension();
    [CompilerGeneratedAttribute]
public void set_FileExtension(string value);
    [CompilerGeneratedAttribute]
public OctopusPackageVersionBuildInformationMappedResource get_PackageVersionBuildInformation();
    [CompilerGeneratedAttribute]
public void set_PackageVersionBuildInformation(OctopusPackageVersionBuildInformationMappedResource value);
}
public class Octopus.Client.Model.PackageSignatureResource : object {
    [CompilerGeneratedAttribute]
private Byte[] <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseVersion>k__BackingField;
    public Byte[] Signature { get; public set; }
    public string BaseVersion { get; public set; }
    [CompilerGeneratedAttribute]
public Byte[] get_Signature();
    [CompilerGeneratedAttribute]
public void set_Signature(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_BaseVersion();
    [CompilerGeneratedAttribute]
public void set_BaseVersion(string value);
}
public class Octopus.Client.Model.PerformanceConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private DashboardRenderMode <DefaultDashboardRenderMode>k__BackingField;
    [WriteableAttribute]
public DashboardRenderMode DefaultDashboardRenderMode { get; public set; }
    [CompilerGeneratedAttribute]
public DashboardRenderMode get_DefaultDashboardRenderMode();
    [CompilerGeneratedAttribute]
public void set_DefaultDashboardRenderMode(DashboardRenderMode value);
}
public enum Octopus.Client.Model.Permission : Enum {
    public int value__;
    [DescriptionAttribute("Perform system-level functions like configuring HTTP web hosting, the public URL, server nodes, maintenance mode, and server diagnostics")]
public static Permission AdministerSystem;
    [DescriptionAttribute("Edit project details")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectEdit;
    [DescriptionAttribute("View the details of projects")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectView;
    [DescriptionAttribute("Create projects")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectCreate;
    [DescriptionAttribute("Delete projects")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectDelete;
    [DescriptionAttribute("View the deployment process and channels associated with a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProcessView;
    [DescriptionAttribute("Edit the deployment process and channels associated with a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProcessEdit;
    [DescriptionAttribute("Edit variables belonging to a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission VariableEdit;
    [DescriptionAttribute("Edit non-environment scoped variables belonging to a project or library variable set")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission VariableEditUnscoped;
    [DescriptionAttribute("View variables belonging to a project or library variable set")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission VariableView;
    [DescriptionAttribute("View non-environment scoped variables belonging to a project or library variable set")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission VariableViewUnscoped;
    [DescriptionAttribute("Create a release for a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ReleaseCreate;
    [DescriptionAttribute("View a release of a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ReleaseView;
    [DescriptionAttribute("Edit a release of a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ReleaseEdit;
    [DescriptionAttribute("Delete a release of a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ReleaseDelete;
    [DescriptionAttribute("Block a release from progressing to the next lifecycle phase")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission DefectReport;
    [DescriptionAttribute("Unblock a release so it can progress to the next phase")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission DefectResolve;
    [DescriptionAttribute("Deploy releases to target environments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission DeploymentCreate;
    [DescriptionAttribute("Delete deployments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission DeploymentDelete;
    [DescriptionAttribute("View deployments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission DeploymentView;
    [DescriptionAttribute("View environments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission EnvironmentView;
    [DescriptionAttribute("Create environments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission EnvironmentCreate;
    [DescriptionAttribute("Edit environments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission EnvironmentEdit;
    [DescriptionAttribute("Delete environments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission EnvironmentDelete;
    [DescriptionAttribute("Create machines")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission MachineCreate;
    [DescriptionAttribute("Edit machines")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission MachineEdit;
    [DescriptionAttribute("View machines")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission MachineView;
    [DescriptionAttribute("Delete machines")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission MachineDelete;
    [DescriptionAttribute("View the artifacts created manually and during deployment")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ArtifactView;
    [DescriptionAttribute("Manually create artifacts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ArtifactCreate;
    [DescriptionAttribute("Edit the details describing artifacts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ArtifactEdit;
    [DescriptionAttribute("Delete artifacts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ArtifactDelete;
    [DescriptionAttribute("View package feeds and the packages in them")]
public static Permission FeedView;
    [DescriptionAttribute("View release and deployment events")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission EventView;
    [DescriptionAttribute("View library variable sets")]
public static Permission LibraryVariableSetView;
    [DescriptionAttribute("Create library variable sets")]
public static Permission LibraryVariableSetCreate;
    [DescriptionAttribute("Edit library variable sets")]
public static Permission LibraryVariableSetEdit;
    [DescriptionAttribute("Delete library variable sets")]
public static Permission LibraryVariableSetDelete;
    [DescriptionAttribute("View project groups")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectGroupView;
    [DescriptionAttribute("Create project groups")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectGroupCreate;
    [DescriptionAttribute("Edit project groups")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectGroupEdit;
    [DescriptionAttribute("Delete project groups")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectGroupDelete;
    [DescriptionAttribute("Create teams")]
public static Permission TeamCreate;
    [DescriptionAttribute("View teams")]
public static Permission TeamView;
    [DescriptionAttribute("Edit teams")]
public static Permission TeamEdit;
    [DescriptionAttribute("Delete teams")]
public static Permission TeamDelete;
    [DescriptionAttribute("View users")]
public static Permission UserView;
    [DescriptionAttribute("Invite users to register accounts")]
public static Permission UserInvite;
    [DescriptionAttribute("View other user's roles")]
public static Permission UserRoleView;
    [DescriptionAttribute("Edit user role definitions")]
public static Permission UserRoleEdit;
    [DescriptionAttribute("View summary-level information associated with a task")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TaskView;
    [ObsoleteAttribute("TaskViewLog is no longer supported by Octopus Server. Instead use the TaskView permission, which also grants access to Task logs", "False")]
[DescriptionAttribute("View detailed information about the execution of a task, including the task log output")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TaskViewLog;
    [DescriptionAttribute("Explicitly create (run) server tasks")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TaskCreate;
    [DescriptionAttribute("Cancel server tasks")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TaskCancel;
    [DescriptionAttribute("Edit server tasks")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TaskEdit;
    [DescriptionAttribute("View interruptions generated during deployments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission InterruptionView;
    [DescriptionAttribute("Take responsibility for and submit interruptions generated during deployments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission InterruptionSubmit;
    [DescriptionAttribute("Take responsibility for and submit interruptions generated during deployments when the user is in a designated responsible team")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission InterruptionViewSubmitResponsible;
    [DescriptionAttribute("Push new packages to the built-in package repository")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission BuiltInFeedPush;
    [DescriptionAttribute("Replace or delete packages in the built-in package repository")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission BuiltInFeedAdminister;
    [DescriptionAttribute("Retrieve the contents of packages in the built-in package repository")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission BuiltInFeedDownload;
    [DescriptionAttribute("View step templates")]
public static Permission ActionTemplateView;
    [DescriptionAttribute("Create step templates")]
public static Permission ActionTemplateCreate;
    [DescriptionAttribute("Edit step templates")]
public static Permission ActionTemplateEdit;
    [DescriptionAttribute("Delete step templates")]
public static Permission ActionTemplateDelete;
    [DescriptionAttribute("Create lifecycles")]
public static Permission LifecycleCreate;
    [DescriptionAttribute("View lifecycles")]
public static Permission LifecycleView;
    [DescriptionAttribute("Edit lifecycles")]
public static Permission LifecycleEdit;
    [DescriptionAttribute("Delete lifecycles")]
public static Permission LifecycleDelete;
    [DescriptionAttribute("View accounts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission AccountView;
    [DescriptionAttribute("Edit accounts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission AccountEdit;
    [DescriptionAttribute("Create accounts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission AccountCreate;
    [DescriptionAttribute("Delete accounts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission AccountDelete;
    [DescriptionAttribute("Create tenants")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TenantCreate;
    [DescriptionAttribute("Edit tenants")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TenantEdit;
    [DescriptionAttribute("View tenants")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TenantView;
    [DescriptionAttribute("Delete tenants")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TenantDelete;
    [DescriptionAttribute("Create tag sets")]
public static Permission TagSetCreate;
    [DescriptionAttribute("Edit tag sets")]
public static Permission TagSetEdit;
    [DescriptionAttribute("Delete tag sets")]
public static Permission TagSetDelete;
    [DescriptionAttribute("View telemetry data")]
public static Permission TelemetryView;
    [DescriptionAttribute("Create health check policies")]
public static Permission MachinePolicyCreate;
    [DescriptionAttribute("View health check policies")]
public static Permission MachinePolicyView;
    [DescriptionAttribute("Edit health check policies")]
public static Permission MachinePolicyEdit;
    [DescriptionAttribute("Delete health check policies")]
public static Permission MachinePolicyDelete;
    [DescriptionAttribute("Create proxies")]
public static Permission ProxyCreate;
    [DescriptionAttribute("View proxies")]
public static Permission ProxyView;
    [DescriptionAttribute("Edit proxies")]
public static Permission ProxyEdit;
    [DescriptionAttribute("Delete proxies")]
public static Permission ProxyDelete;
    [DescriptionAttribute("Create subscriptions")]
public static Permission SubscriptionCreate;
    [DescriptionAttribute("View subscriptions")]
public static Permission SubscriptionView;
    [DescriptionAttribute("Edit subscriptions")]
public static Permission SubscriptionEdit;
    [DescriptionAttribute("Delete subscriptions")]
public static Permission SubscriptionDelete;
    [DescriptionAttribute("Create triggers")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TriggerCreate;
    [DescriptionAttribute("View triggers")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TriggerView;
    [DescriptionAttribute("Edit triggers")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TriggerEdit;
    [DescriptionAttribute("Delete triggers")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TriggerDelete;
    [DescriptionAttribute("View certificates")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission CertificateView;
    [DescriptionAttribute("Create certificates")]
public static Permission CertificateCreate;
    [DescriptionAttribute("Edit certificates")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission CertificateEdit;
    [DescriptionAttribute("Delete certificates")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission CertificateDelete;
    [DescriptionAttribute("Export certificate private-keys")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission CertificateExportPrivateKey;
    [DescriptionAttribute("Edit users")]
public static Permission UserEdit;
    [DescriptionAttribute("Configure server settings like Authentication, SMTP, and HTTP Security Headers")]
public static Permission ConfigureServer;
    [DescriptionAttribute("Edit feeds")]
public static Permission FeedEdit;
    [DescriptionAttribute("View the workers in worker pools")]
public static Permission WorkerView;
    [DescriptionAttribute("Edit workers and worker pools")]
public static Permission WorkerEdit;
    [DescriptionAttribute("Edit spaces")]
public static Permission SpaceEdit;
    [DescriptionAttribute("View spaces")]
public static Permission SpaceView;
    [DescriptionAttribute("Delete spaces")]
public static Permission SpaceDelete;
    [DescriptionAttribute("Create spaces")]
public static Permission SpaceCreate;
    [DescriptionAttribute("Create/update build information")]
public static Permission BuildInformationPush;
    [DescriptionAttribute("Replace or delete build information")]
public static Permission BuildInformationAdminister;
    [DescriptionAttribute("View runbooks")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission RunbookView;
    [DescriptionAttribute("Edit runbooks")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission RunbookEdit;
    [DescriptionAttribute("View runbook runs")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission RunbookRunView;
    [DescriptionAttribute("Delete runbook runs")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission RunbookRunDelete;
    [DescriptionAttribute("Create runbook runs")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission RunbookRunCreate;
    [DescriptionAttribute("View Git credentials")]
public static Permission GitCredentialView;
    [DescriptionAttribute("Edit Git credentials")]
public static Permission GitCredentialEdit;
}
public class Octopus.Client.Model.PermissionDescription : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <SupportedRestrictions>k__BackingField;
    public string Description { get; public set; }
    public String[] SupportedRestrictions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public String[] get_SupportedRestrictions();
    [CompilerGeneratedAttribute]
public void set_SupportedRestrictions(String[] value);
}
public static class Octopus.Client.Model.PermissionModes : object {
    public static string Unspecified;
    public static string Restricted;
    public static string Full;
    private static PermissionModes();
}
public static class Octopus.Client.Model.PermissionScope : object {
    public static string Environments;
    public static string Projects;
    public static string ProjectGroups;
    public static string Tenants;
}
public abstract class Octopus.Client.Model.PersistenceSettingsResource : object {
    public PersistenceSettingsType Type { get; }
    public abstract virtual PersistenceSettingsType get_Type();
}
public enum Octopus.Client.Model.PersistenceSettingsType : Enum {
    public int value__;
    public static PersistenceSettingsType Database;
    public static PersistenceSettingsType VersionControlled;
}
public class Octopus.Client.Model.PhaseDeploymentResource : object {
    [CompilerGeneratedAttribute]
private TaskResource <Task>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentResource <Deployment>k__BackingField;
    public TaskResource Task { get; public set; }
    public DeploymentResource Deployment { get; public set; }
    [CompilerGeneratedAttribute]
public TaskResource get_Task();
    [CompilerGeneratedAttribute]
public void set_Task(TaskResource value);
    [CompilerGeneratedAttribute]
public DeploymentResource get_Deployment();
    [CompilerGeneratedAttribute]
public void set_Deployment(DeploymentResource value);
}
public enum Octopus.Client.Model.PhaseProgress : Enum {
    public int value__;
    public static PhaseProgress Pending;
    public static PhaseProgress Current;
    public static PhaseProgress Complete;
}
public class Octopus.Client.Model.PhaseProgressionResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Blocked>k__BackingField;
    [CompilerGeneratedAttribute]
private PhaseProgress <Progress>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PhaseDeploymentResource> <Deployments>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <AutomaticDeploymentTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <OptionalDeploymentTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MinimumEnvironmentsBeforePromotion>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public bool Blocked { get; public set; }
    public PhaseProgress Progress { get; public set; }
    public List`1<PhaseDeploymentResource> Deployments { get; public set; }
    public ReferenceCollection AutomaticDeploymentTargets { get; public set; }
    public ReferenceCollection OptionalDeploymentTargets { get; public set; }
    public int MinimumEnvironmentsBeforePromotion { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Blocked();
    [CompilerGeneratedAttribute]
public void set_Blocked(bool value);
    [CompilerGeneratedAttribute]
public PhaseProgress get_Progress();
    [CompilerGeneratedAttribute]
public void set_Progress(PhaseProgress value);
    [CompilerGeneratedAttribute]
public List`1<PhaseDeploymentResource> get_Deployments();
    [CompilerGeneratedAttribute]
public void set_Deployments(List`1<PhaseDeploymentResource> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_AutomaticDeploymentTargets();
    [CompilerGeneratedAttribute]
public void set_AutomaticDeploymentTargets(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_OptionalDeploymentTargets();
    [CompilerGeneratedAttribute]
public void set_OptionalDeploymentTargets(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public int get_MinimumEnvironmentsBeforePromotion();
    [CompilerGeneratedAttribute]
public void set_MinimumEnvironmentsBeforePromotion(int value);
}
public class Octopus.Client.Model.PhaseResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <AutomaticDeploymentTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <OptionalDeploymentTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MinimumEnvironmentsBeforePromotion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptionalPhase>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <ReleaseRetentionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleRetentionPolicy>k__BackingField;
    public string Id { get; public set; }
    [TrimAttribute]
public string Name { get; public set; }
    public ReferenceCollection AutomaticDeploymentTargets { get; public set; }
    public ReferenceCollection OptionalDeploymentTargets { get; public set; }
    public int MinimumEnvironmentsBeforePromotion { get; public set; }
    public bool IsOptionalPhase { get; public set; }
    public RetentionPeriod ReleaseRetentionPolicy { get; public set; }
    public RetentionPeriod TentacleRetentionPolicy { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_AutomaticDeploymentTargets();
    [CompilerGeneratedAttribute]
public void set_AutomaticDeploymentTargets(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_OptionalDeploymentTargets();
    [CompilerGeneratedAttribute]
public void set_OptionalDeploymentTargets(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public int get_MinimumEnvironmentsBeforePromotion();
    [CompilerGeneratedAttribute]
public void set_MinimumEnvironmentsBeforePromotion(int value);
    [CompilerGeneratedAttribute]
public bool get_IsOptionalPhase();
    [CompilerGeneratedAttribute]
public void set_IsOptionalPhase(bool value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_ReleaseRetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_ReleaseRetentionPolicy(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_TentacleRetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_TentacleRetentionPolicy(RetentionPeriod value);
    public PhaseResource Clear();
    public PhaseResource WithAutomaticDeploymentTargets(EnvironmentResource[] environments);
    public PhaseResource WithOptionalDeploymentTargets(EnvironmentResource[] environments);
    public PhaseResource WithMinimumEnvironmentsBeforePromotion(int minimumEnvironmentsBeforePromotion);
    public PhaseResource WithReleaseRetentionPolicy(RetentionPeriod period);
    public PhaseResource WithTentacleRetentionPolicy(RetentionPeriod period);
}
public class Octopus.Client.Model.ProcessReferenceDataItem : ReferenceDataItem {
    [CompilerGeneratedAttribute]
private ProcessType <ProcessType>k__BackingField;
    public ProcessType ProcessType { get; public set; }
    public ProcessReferenceDataItem(string id, string name, ProcessType processType);
    [CompilerGeneratedAttribute]
public ProcessType get_ProcessType();
    [CompilerGeneratedAttribute]
public void set_ProcessType(ProcessType value);
}
public enum Octopus.Client.Model.ProcessType : Enum {
    public int value__;
    public static ProcessType Deployment;
    public static ProcessType Runbook;
}
public class Octopus.Client.Model.ProgressionResource : Resource {
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IEnumerable`1<ReferenceDataItem>> <ChannelEnvironments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReleaseProgressionResource> <Releases>k__BackingField;
    public List`1<ReferenceDataItem> Environments { get; public set; }
    public Dictionary`2<string, IEnumerable`1<ReferenceDataItem>> ChannelEnvironments { get; public set; }
    public List`1<ReleaseProgressionResource> Releases { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ReferenceDataItem> get_Environments();
    [CompilerGeneratedAttribute]
public void set_Environments(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, IEnumerable`1<ReferenceDataItem>> get_ChannelEnvironments();
    [CompilerGeneratedAttribute]
public void set_ChannelEnvironments(Dictionary`2<string, IEnumerable`1<ReferenceDataItem>> value);
    [CompilerGeneratedAttribute]
public List`1<ReleaseProgressionResource> get_Releases();
    [CompilerGeneratedAttribute]
public void set_Releases(List`1<ReleaseProgressionResource> value);
}
public class Octopus.Client.Model.ProjectedTeamReferenceDataItem : ReferenceDataItem {
    [CompilerGeneratedAttribute]
private bool <IsDirectlyAssigned>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ExternalGroupNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public bool IsDirectlyAssigned { get; public set; }
    public String[] ExternalGroupNames { get; public set; }
    public string SpaceId { get; public set; }
    public ProjectedTeamReferenceDataItem(string id, string name, string spaceId, bool isDirectlyAssigned, String[] externalGroupNames);
    [CompilerGeneratedAttribute]
public bool get_IsDirectlyAssigned();
    [CompilerGeneratedAttribute]
public void set_IsDirectlyAssigned(bool value);
    [CompilerGeneratedAttribute]
public String[] get_ExternalGroupNames();
    [CompilerGeneratedAttribute]
public void set_ExternalGroupNames(String[] value);
    [CompilerGeneratedAttribute]
public string get_SpaceId();
    [CompilerGeneratedAttribute]
public void set_SpaceId(string value);
}
public abstract class Octopus.Client.Model.ProjectGitCredentialResource : object {
    public ProjectGitCredentialType Type { get; }
    public abstract virtual ProjectGitCredentialType get_Type();
}
public enum Octopus.Client.Model.ProjectGitCredentialType : Enum {
    public int value__;
    public static ProjectGitCredentialType Anonymous;
    public static ProjectGitCredentialType UsernamePassword;
    public static ProjectGitCredentialType Reference;
}
public class Octopus.Client.Model.ProjectGroupResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RetentionPolicyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public string RetentionPolicyId { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_RetentionPolicyId();
    [CompilerGeneratedAttribute]
public void set_RetentionPolicyId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.ProjectResource : ResourceWithExtensionSettings {
    private IVariableTemplateContainerEditor`1<ProjectResource> variableTemplateEditor;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectGroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClonedFromProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LifecycleId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoCreateRelease>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVersionControlled>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistenceSettingsResource <PersistenceSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DiscreteChannelRelease>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IncludedLibraryVariableSetIds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultToSkipIfAlreadyInstalled>k__BackingField;
    [CompilerGeneratedAttribute]
private TenantedDeploymentMode <TenantedDeploymentMode>k__BackingField;
    [CompilerGeneratedAttribute]
private GuidedFailureMode <DefaultGuidedFailureMode>k__BackingField;
    [CompilerGeneratedAttribute]
private VersioningStrategyResource <VersioningStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private ReleaseCreationStrategyResource <ReleaseCreationStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ActionTemplateParameterResource> <Templates>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentConnectivityPolicy <ProjectConnectivityPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<AutoDeployReleaseOverrideResource> <AutoDeployReleaseOverrides>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotesTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentChangesTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[JsonPropertyAttribute]
[ContainsSomeValidCharactersAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Slug { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public bool IsDisabled { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public string ProjectGroupId { get; public set; }
    public string VariableSetId { get; public set; }
    public string DeploymentProcessId { get; public set; }
    public string ClonedFromProjectId { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public string LifecycleId { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public bool AutoCreateRelease { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public bool IsVersionControlled { get; public set; }
    [JsonPropertyAttribute]
public PersistenceSettingsResource PersistenceSettings { get; public set; }
    [WriteableAttribute]
public bool DiscreteChannelRelease { get; public set; }
    [WriteableAttribute]
public List`1<string> IncludedLibraryVariableSetIds { get; public set; }
    [WriteableAttribute]
[ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
public bool DefaultToSkipIfAlreadyInstalled { get; public set; }
    [WriteableAttribute]
public TenantedDeploymentMode TenantedDeploymentMode { get; public set; }
    [WriteableAttribute]
[ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
public GuidedFailureMode DefaultGuidedFailureMode { get; public set; }
    [WriteableAttribute]
[ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
public VersioningStrategyResource VersioningStrategy { get; public set; }
    [WriteableAttribute]
public ReleaseCreationStrategyResource ReleaseCreationStrategy { get; public set; }
    public List`1<ActionTemplateParameterResource> Templates { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
[ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
public DeploymentConnectivityPolicy ProjectConnectivityPolicy { get; public set; }
    [WriteableAttribute]
public ISet`1<AutoDeployReleaseOverrideResource> AutoDeployReleaseOverrides { get; }
    [WriteableAttribute]
[ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
public string ReleaseNotesTemplate { get; public set; }
    [WriteableAttribute]
[ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
public string DeploymentChangesTemplate { get; public set; }
    public string SpaceId { get; public set; }
    public ProjectResource(string id, string name, string slug);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Slug();
    [CompilerGeneratedAttribute]
public void set_Slug(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public string get_ProjectGroupId();
    [CompilerGeneratedAttribute]
public void set_ProjectGroupId(string value);
    [CompilerGeneratedAttribute]
public string get_VariableSetId();
    [CompilerGeneratedAttribute]
public void set_VariableSetId(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentProcessId();
    [CompilerGeneratedAttribute]
public void set_DeploymentProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_ClonedFromProjectId();
    [CompilerGeneratedAttribute]
public void set_ClonedFromProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_LifecycleId();
    [CompilerGeneratedAttribute]
public void set_LifecycleId(string value);
    [CompilerGeneratedAttribute]
public bool get_AutoCreateRelease();
    [CompilerGeneratedAttribute]
public void set_AutoCreateRelease(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsVersionControlled();
    [CompilerGeneratedAttribute]
public void set_IsVersionControlled(bool value);
    [CompilerGeneratedAttribute]
public PersistenceSettingsResource get_PersistenceSettings();
    [CompilerGeneratedAttribute]
public void set_PersistenceSettings(PersistenceSettingsResource value);
    [CompilerGeneratedAttribute]
public bool get_DiscreteChannelRelease();
    [CompilerGeneratedAttribute]
public void set_DiscreteChannelRelease(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_IncludedLibraryVariableSetIds();
    [CompilerGeneratedAttribute]
public void set_IncludedLibraryVariableSetIds(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_DefaultToSkipIfAlreadyInstalled();
    [CompilerGeneratedAttribute]
public void set_DefaultToSkipIfAlreadyInstalled(bool value);
    [CompilerGeneratedAttribute]
public TenantedDeploymentMode get_TenantedDeploymentMode();
    [CompilerGeneratedAttribute]
public void set_TenantedDeploymentMode(TenantedDeploymentMode value);
    [CompilerGeneratedAttribute]
public GuidedFailureMode get_DefaultGuidedFailureMode();
    [CompilerGeneratedAttribute]
public void set_DefaultGuidedFailureMode(GuidedFailureMode value);
    [CompilerGeneratedAttribute]
public VersioningStrategyResource get_VersioningStrategy();
    [CompilerGeneratedAttribute]
public void set_VersioningStrategy(VersioningStrategyResource value);
    [CompilerGeneratedAttribute]
public ReleaseCreationStrategyResource get_ReleaseCreationStrategy();
    [CompilerGeneratedAttribute]
public void set_ReleaseCreationStrategy(ReleaseCreationStrategyResource value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ActionTemplateParameterResource> get_Templates();
    [CompilerGeneratedAttribute]
public void set_Templates(List`1<ActionTemplateParameterResource> value);
    [CompilerGeneratedAttribute]
public DeploymentConnectivityPolicy get_ProjectConnectivityPolicy();
    [CompilerGeneratedAttribute]
public void set_ProjectConnectivityPolicy(DeploymentConnectivityPolicy value);
    [CompilerGeneratedAttribute]
public ISet`1<AutoDeployReleaseOverrideResource> get_AutoDeployReleaseOverrides();
    [CompilerGeneratedAttribute]
public string get_ReleaseNotesTemplate();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotesTemplate(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentChangesTemplate();
    [CompilerGeneratedAttribute]
public void set_DeploymentChangesTemplate(string value);
    public sealed virtual ProjectResource Clear();
    public sealed virtual ProjectResource AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    public sealed virtual ProjectResource AddOrUpdateSingleLineTextTemplate(string name, string label);
    public sealed virtual ProjectResource AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual ProjectResource AddOrUpdateMultiLineTextTemplate(string name, string label);
    public sealed virtual ProjectResource AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual ProjectResource AddOrUpdateSensitiveTemplate(string name, string label);
    public sealed virtual ProjectResource AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual ProjectResource AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public sealed virtual ProjectResource AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
    public ProjectResource IncludingLibraryVariableSets(LibraryVariableSetResource[] libraryVariableSets);
    public sealed virtual ProjectResource AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public void AddAutoDeployReleaseOverride(EnvironmentResource environment, ReleaseResource release);
    public void AddAutoDeployReleaseOverride(EnvironmentResource environment, TenantResource tenant, ReleaseResource release);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.ProjectTriggerResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private TriggerFilterResource <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private TriggerActionResource <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string ProjectId { get; public set; }
    [WriteableAttribute]
public bool IsDisabled { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public TriggerFilterResource Filter { get; public set; }
    [WriteableAttribute]
public TriggerActionResource Action { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public TriggerFilterResource get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(TriggerFilterResource value);
    [CompilerGeneratedAttribute]
public TriggerActionResource get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(TriggerActionResource value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.PropertyValueResource : object {
    [CompilerGeneratedAttribute]
private bool <IsSensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <SensitiveValue>k__BackingField;
    public bool IsSensitive { get; }
    public string Value { get; }
    public SensitiveValue SensitiveValue { get; }
    public PropertyValueResource(string value);
    public PropertyValueResource(string value, bool isSensitive);
    [JsonConstructorAttribute]
public PropertyValueResource(SensitiveValue sensitiveValue);
    [CompilerGeneratedAttribute]
public bool get_IsSensitive();
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public SensitiveValue get_SensitiveValue();
    public static PropertyValueResource op_Implicit(string value);
}
public class Octopus.Client.Model.ProxyResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Host { get; public set; }
    [WriteableAttribute]
public int Port { get; public set; }
    [WriteableAttribute]
public string ProxyType { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_ProxyType();
    [CompilerGeneratedAttribute]
public void set_ProxyType(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.ReferenceCollection : HashSet`1<string> {
    public ReferenceCollection(string singleValue);
    public ReferenceCollection(IEnumerable`1<string> values);
    public void ReplaceAll(IEnumerable`1<string> newItems);
    public ReferenceCollection Clone();
    public virtual string ToString();
    public static ReferenceCollection One(string item);
}
public class Octopus.Client.Model.ReferenceDataItem : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public ReferenceDataItem(string id, string name);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Octopus.Client.Model.ReferenceProjectGitCredentialResource : ProjectGitCredentialResource {
    [CompilerGeneratedAttribute]
private ProjectGitCredentialType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public ProjectGitCredentialType Type { get; }
    [WriteableAttribute]
public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public virtual ProjectGitCredentialType get_Type();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public class Octopus.Client.Model.RegisterCommand : UserResource {
    [CompilerGeneratedAttribute]
private string <InvitationCode>k__BackingField;
    [WriteableAttribute]
public string InvitationCode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_InvitationCode();
    [CompilerGeneratedAttribute]
public void set_InvitationCode(string value);
}
public class Octopus.Client.Model.ReleaseChanges : object {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PackageBuildMetadata> <PackageBuildMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<WorkItemLink> <WorkItems>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CommitDetails> <Commits>k__BackingField;
    public string Version { get; public set; }
    public string ReleaseNotes { get; public set; }
    public List`1<PackageBuildMetadata> PackageBuildMetadata { get; public set; }
    public List`1<WorkItemLink> WorkItems { get; public set; }
    public List`1<CommitDetails> Commits { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseNotes();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotes(string value);
    [CompilerGeneratedAttribute]
public List`1<PackageBuildMetadata> get_PackageBuildMetadata();
    [CompilerGeneratedAttribute]
public void set_PackageBuildMetadata(List`1<PackageBuildMetadata> value);
    [CompilerGeneratedAttribute]
public List`1<WorkItemLink> get_WorkItems();
    [CompilerGeneratedAttribute]
public void set_WorkItems(List`1<WorkItemLink> value);
    [CompilerGeneratedAttribute]
public List`1<CommitDetails> get_Commits();
    [CompilerGeneratedAttribute]
public void set_Commits(List`1<CommitDetails> value);
}
public class Octopus.Client.Model.ReleaseCreationStrategyResource : object {
    [CompilerGeneratedAttribute]
private DeploymentActionPackageResource <ReleaseCreationPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    [JsonExtensionDataAttribute]
private IDictionary`2<string, JToken> additionalData;
    public DeploymentActionPackageResource ReleaseCreationPackage { get; public set; }
    public string ChannelId { get; public set; }
    [CompilerGeneratedAttribute]
public DeploymentActionPackageResource get_ReleaseCreationPackage();
    [CompilerGeneratedAttribute]
public void set_ReleaseCreationPackage(DeploymentActionPackageResource value);
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
    [OnDeserializedAttribute]
private void OnDeserialized(StreamingContext context);
    [OnSerializingAttribute]
private void OnSerializing(StreamingContext context);
}
public class Octopus.Client.Model.ReleaseProgressionResource : object {
    [CompilerGeneratedAttribute]
private ReleaseResource <Release>k__BackingField;
    [CompilerGeneratedAttribute]
private ChannelResource <Channel>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IList`1<DashboardItemResource>> <Deployments>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <NextDeployments>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasUnresolvedDefect>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <ReleaseRetentionPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleRetentionPeriod>k__BackingField;
    public ReleaseResource Release { get; public set; }
    public ChannelResource Channel { get; public set; }
    public Dictionary`2<string, IList`1<DashboardItemResource>> Deployments { get; public set; }
    public ReferenceCollection NextDeployments { get; public set; }
    public bool HasUnresolvedDefect { get; public set; }
    public RetentionPeriod ReleaseRetentionPeriod { get; public set; }
    public RetentionPeriod TentacleRetentionPeriod { get; public set; }
    [CompilerGeneratedAttribute]
public ReleaseResource get_Release();
    [CompilerGeneratedAttribute]
public void set_Release(ReleaseResource value);
    [CompilerGeneratedAttribute]
public ChannelResource get_Channel();
    [CompilerGeneratedAttribute]
public void set_Channel(ChannelResource value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, IList`1<DashboardItemResource>> get_Deployments();
    [CompilerGeneratedAttribute]
public void set_Deployments(Dictionary`2<string, IList`1<DashboardItemResource>> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_NextDeployments();
    [CompilerGeneratedAttribute]
public void set_NextDeployments(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public bool get_HasUnresolvedDefect();
    [CompilerGeneratedAttribute]
public void set_HasUnresolvedDefect(bool value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_ReleaseRetentionPeriod();
    [CompilerGeneratedAttribute]
public void set_ReleaseRetentionPeriod(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_TentacleRetentionPeriod();
    [CompilerGeneratedAttribute]
public void set_TentacleRetentionPeriod(RetentionPeriod value);
}
public class Octopus.Client.Model.ReleaseResource : Resource {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectDeploymentProcessSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectVariableSetSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreChannelRules>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReleasePackageVersionBuildInformationResource> <BuildInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Assembled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <LibraryVariableSetSnapshotIds>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SelectedPackage> <SelectedPackages>k__BackingField;
    [CompilerGeneratedAttribute]
private GitReferenceResource <VersionControlReference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [RequiredAttribute]
[StringLengthAttribute("349")]
[TrimAttribute]
[WriteableAttribute]
public string Version { get; public set; }
    [WriteableAttribute]
public string ChannelId { get; public set; }
    [WriteableAttribute]
public string ReleaseNotes { get; public set; }
    public string ProjectDeploymentProcessSnapshotId { get; public set; }
    public string ProjectVariableSetSnapshotId { get; public set; }
    [WriteableAttribute]
[NotReadableAttribute]
[JsonPropertyAttribute]
public bool IgnoreChannelRules { get; public set; }
    [WriteableOnCreateAttribute]
public List`1<ReleasePackageVersionBuildInformationResource> BuildInformation { get; public set; }
    public DateTimeOffset Assembled { get; public set; }
    [WriteableOnCreateAttribute]
public string ProjectId { get; public set; }
    public List`1<string> LibraryVariableSetSnapshotIds { get; public set; }
    public List`1<SelectedPackage> SelectedPackages { get; public set; }
    public GitReferenceResource VersionControlReference { get; public set; }
    public string SpaceId { get; public set; }
    public ReleaseResource(string version, string projectId, string channelId);
    public ReleaseResource(string version, string projectId);
    public ReleaseResource(string projectId);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseNotes();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotes(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectDeploymentProcessSnapshotId();
    [CompilerGeneratedAttribute]
public void set_ProjectDeploymentProcessSnapshotId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectVariableSetSnapshotId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectVariableSetSnapshotId(string value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreChannelRules();
    [CompilerGeneratedAttribute]
public void set_IgnoreChannelRules(bool value);
    [CompilerGeneratedAttribute]
public List`1<ReleasePackageVersionBuildInformationResource> get_BuildInformation();
    [CompilerGeneratedAttribute]
public void set_BuildInformation(List`1<ReleasePackageVersionBuildInformationResource> value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_Assembled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Assembled(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_LibraryVariableSetSnapshotIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LibraryVariableSetSnapshotIds(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<SelectedPackage> get_SelectedPackages();
    [CompilerGeneratedAttribute]
public void set_SelectedPackages(List`1<SelectedPackage> value);
    [CompilerGeneratedAttribute]
public GitReferenceResource get_VersionControlReference();
    [CompilerGeneratedAttribute]
public void set_VersionControlReference(GitReferenceResource value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.ReleaseSummaryResource : Resource {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [RequiredAttribute]
[StringLengthAttribute("349")]
[ValidSemanticVersionOrMaskAttribute]
[TrimAttribute]
[WriteableAttribute]
public string Version { get; public set; }
    public ReleaseSummaryResource(string releaseId, string version);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
public class Octopus.Client.Model.ReleaseTemplateBaseResource : Resource {
    [CompilerGeneratedAttribute]
private IList`1<ReleaseTemplatePackage> <Packages>k__BackingField;
    public IList`1<ReleaseTemplatePackage> Packages { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<ReleaseTemplatePackage> get_Packages();
    [CompilerGeneratedAttribute]
public void set_Packages(IList`1<ReleaseTemplatePackage> value);
}
public class Octopus.Client.Model.ReleaseTemplatePackage : object {
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageReferenceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersionSelectedLastRelease>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsResolvable>k__BackingField;
    [ObsoleteAttribute("Replaced by ActionName")]
public string StepName { get; public set; }
    public string ActionName { get; public set; }
    [ObsoleteAttribute("Replaced by PackageId")]
public string NuGetPackageId { get; public set; }
    public string PackageId { get; public set; }
    public string PackageReferenceName { get; public set; }
    [ObsoleteAttribute("Replaced by FeedId")]
public string NuGetFeedId { get; public set; }
    public string FeedId { get; public set; }
    [ObsoleteAttribute("Replaced by FeedName")]
public string NuGetFeedName { get; public set; }
    public string FeedName { get; public set; }
    public string VersionSelectedLastRelease { get; public set; }
    public bool IsResolvable { get; public set; }
    public string get_StepName();
    public void set_StepName(string value);
    [CompilerGeneratedAttribute]
public string get_ActionName();
    [CompilerGeneratedAttribute]
public void set_ActionName(string value);
    public string get_NuGetPackageId();
    public void set_NuGetPackageId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageReferenceName();
    [CompilerGeneratedAttribute]
public void set_PackageReferenceName(string value);
    public string get_NuGetFeedId();
    public void set_NuGetFeedId(string value);
    [CompilerGeneratedAttribute]
public string get_FeedId();
    [CompilerGeneratedAttribute]
public void set_FeedId(string value);
    public string get_NuGetFeedName();
    public void set_NuGetFeedName(string value);
    [CompilerGeneratedAttribute]
public string get_FeedName();
    [CompilerGeneratedAttribute]
public void set_FeedName(string value);
    [CompilerGeneratedAttribute]
public string get_VersionSelectedLastRelease();
    [CompilerGeneratedAttribute]
public void set_VersionSelectedLastRelease(string value);
    [CompilerGeneratedAttribute]
public bool get_IsResolvable();
    [CompilerGeneratedAttribute]
public void set_IsResolvable(bool value);
}
public class Octopus.Client.Model.ReleaseTemplateResource : ReleaseTemplateBaseResource {
    [CompilerGeneratedAttribute]
private string <DeploymentProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastReleaseVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextVersionIncrement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersioningPackageStepName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersioningPackageReferenceName>k__BackingField;
    public string DeploymentProcessId { get; public set; }
    public string LastReleaseVersion { get; public set; }
    public string NextVersionIncrement { get; public set; }
    public string VersioningPackageStepName { get; public set; }
    public string VersioningPackageReferenceName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeploymentProcessId();
    [CompilerGeneratedAttribute]
public void set_DeploymentProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_LastReleaseVersion();
    [CompilerGeneratedAttribute]
public void set_LastReleaseVersion(string value);
    [CompilerGeneratedAttribute]
public string get_NextVersionIncrement();
    [CompilerGeneratedAttribute]
public void set_NextVersionIncrement(string value);
    [CompilerGeneratedAttribute]
public string get_VersioningPackageStepName();
    [CompilerGeneratedAttribute]
public void set_VersioningPackageStepName(string value);
    [CompilerGeneratedAttribute]
public string get_VersioningPackageReferenceName();
    [CompilerGeneratedAttribute]
public void set_VersioningPackageReferenceName(string value);
}
public class Octopus.Client.Model.ReportDeploymentCountOverTimeResource : Resource {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private NumericReportData <ReportData>k__BackingField;
    public string ProjectId { get; public set; }
    public NumericReportData ReportData { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public NumericReportData get_ReportData();
    [CompilerGeneratedAttribute]
public void set_ReportData(NumericReportData value);
}
public abstract class Octopus.Client.Model.Resource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastModifiedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> LastModifiedOn { get; public set; }
    [JsonPropertyAttribute]
public string LastModifiedBy { get; public set; }
    [JsonPropertyAttribute]
public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTimeOffset> get_LastModifiedOn();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LastModifiedOn(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LastModifiedBy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LastModifiedBy(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
    public bool HasLink(string name);
    public string Link(string name);
}
public class Octopus.Client.Model.ResourceCollection`1 : Resource {
    [CompilerGeneratedAttribute]
private bool <IsStale>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalResults>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ItemsPerPage>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TResource> <Items>k__BackingField;
    [JsonPropertyAttribute]
public string ItemType { get; }
    [JsonPropertyAttribute]
public bool IsStale { get; public set; }
    [JsonPropertyAttribute]
public int TotalResults { get; public set; }
    [JsonPropertyAttribute]
public int ItemsPerPage { get; public set; }
    [JsonPropertyAttribute]
public IList`1<TResource> Items { get; public set; }
    public ResourceCollection`1(IEnumerable`1<TResource> items, LinkCollection links);
    public string get_ItemType();
    [CompilerGeneratedAttribute]
public bool get_IsStale();
    [CompilerGeneratedAttribute]
public void set_IsStale(bool value);
    [CompilerGeneratedAttribute]
public int get_TotalResults();
    [CompilerGeneratedAttribute]
public void set_TotalResults(int value);
    [CompilerGeneratedAttribute]
public int get_ItemsPerPage();
    [CompilerGeneratedAttribute]
public void set_ItemsPerPage(int value);
    [CompilerGeneratedAttribute]
public IList`1<TResource> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<TResource> value);
}
public abstract class Octopus.Client.Model.ResourceWithExtensionSettings : Resource {
    [CompilerGeneratedAttribute]
private List`1<ExtensionSettingsValues> <ExtensionSettings>k__BackingField;
    [WriteableAttribute]
public List`1<ExtensionSettingsValues> ExtensionSettings { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ExtensionSettingsValues> get_ExtensionSettings();
    [CompilerGeneratedAttribute]
public void set_ExtensionSettings(List`1<ExtensionSettingsValues> value);
    public TSettings GetExtensionSettings(string extensionId);
}
public class Octopus.Client.Model.RetentionDefaultConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RetentionDays>k__BackingField;
    [WriteableAttribute]
public Nullable`1<int> RetentionDays { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RetentionDays();
    [CompilerGeneratedAttribute]
public void set_RetentionDays(Nullable`1<int> value);
}
public class Octopus.Client.Model.RetentionPeriod : object {
    private int quantityToKeep;
    private RetentionUnit unit;
    public RetentionUnit Unit { get; }
    public int QuantityToKeep { get; }
    public bool ShouldKeepForever { get; }
    public RetentionPeriod(int quantityToKeep, RetentionUnit unit);
    public RetentionUnit get_Unit();
    public int get_QuantityToKeep();
    public bool get_ShouldKeepForever();
    public static RetentionPeriod KeepForever();
    public sealed virtual bool Equals(RetentionPeriod other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(RetentionPeriod left, RetentionPeriod right);
    public static bool op_Inequality(RetentionPeriod left, RetentionPeriod right);
    public virtual string ToString();
}
public class Octopus.Client.Model.RetentionPolicyResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <UndeployedReleases>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <DeployedReleases>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleDeployments>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    public bool IsReadOnly { get; public set; }
    [WriteableAttribute]
public RetentionPeriod UndeployedReleases { get; public set; }
    [WriteableAttribute]
public RetentionPeriod DeployedReleases { get; public set; }
    [WriteableAttribute]
public RetentionPeriod TentacleDeployments { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsReadOnly();
    [CompilerGeneratedAttribute]
public void set_IsReadOnly(bool value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_UndeployedReleases();
    [CompilerGeneratedAttribute]
public void set_UndeployedReleases(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_DeployedReleases();
    [CompilerGeneratedAttribute]
public void set_DeployedReleases(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_TentacleDeployments();
    [CompilerGeneratedAttribute]
public void set_TentacleDeployments(RetentionPeriod value);
}
public enum Octopus.Client.Model.RetentionUnit : Enum {
    public int value__;
    public static RetentionUnit Days;
    public static RetentionUnit Items;
}
public class Octopus.Client.Model.RootResource : Resource {
    [CompilerGeneratedAttribute]
private string <Application>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <InstallationId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEarlyAccessProgram>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasLongTermSupport>k__BackingField;
    public string Application { get; public set; }
    public string Version { get; public set; }
    public string ApiVersion { get; public set; }
    public Guid InstallationId { get; public set; }
    [DefaultValueAttribute("False")]
[JsonPropertyAttribute]
public bool IsEarlyAccessProgram { get; public set; }
    [DefaultValueAttribute("False")]
[JsonPropertyAttribute]
public bool HasLongTermSupport { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Application();
    [CompilerGeneratedAttribute]
public void set_Application(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public Guid get_InstallationId();
    [CompilerGeneratedAttribute]
public void set_InstallationId(Guid value);
    [CompilerGeneratedAttribute]
public bool get_IsEarlyAccessProgram();
    [CompilerGeneratedAttribute]
public void set_IsEarlyAccessProgram(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasLongTermSupport();
    [CompilerGeneratedAttribute]
public void set_HasLongTermSupport(bool value);
}
public enum Octopus.Client.Model.RunbookEnvironmentScope : Enum {
    public int value__;
    public static RunbookEnvironmentScope All;
    public static RunbookEnvironmentScope Specified;
    public static RunbookEnvironmentScope FromProjectLifecycles;
}
public class Octopus.Client.Model.RunbookProcessResource : Resource {
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DeploymentStepResource> <Steps>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public string RunbookId { get; public set; }
    public string ProjectId { get; public set; }
    public IList`1<DeploymentStepResource> Steps { get; }
    [RequiredAttribute]
public int Version { get; public set; }
    public string LastSnapshotId { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<DeploymentStepResource> get_Steps();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LastSnapshotId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LastSnapshotId(string value);
    public sealed virtual DeploymentStepResource FindStep(string name);
    public sealed virtual DeploymentStepResource AddOrUpdateStep(string name);
    public sealed virtual IProcessResource RemoveStep(string name);
    public sealed virtual IProcessResource ClearSteps();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.RunbookResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublishedRunbookSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private TenantedDeploymentMode <MultiTenancyMode>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentConnectivityPolicy <ConnectivityPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private RunbookEnvironmentScope <EnvironmentScope>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private GuidedFailureMode <DefaultGuidedFailureMode>k__BackingField;
    [CompilerGeneratedAttribute]
private RunbookRetentionPeriod <RunRetentionPolicy>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public string RunbookProcessId { get; public set; }
    [WriteableAttribute]
public string PublishedRunbookSnapshotId { get; public set; }
    [WriteableAttribute]
public string ProjectId { get; public set; }
    public string SpaceId { get; public set; }
    [WriteableAttribute]
public TenantedDeploymentMode MultiTenancyMode { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public DeploymentConnectivityPolicy ConnectivityPolicy { get; public set; }
    [WriteableAttribute]
public RunbookEnvironmentScope EnvironmentScope { get; public set; }
    [JsonPropertyAttribute]
public ReferenceCollection Environments { get; }
    [WriteableAttribute]
public GuidedFailureMode DefaultGuidedFailureMode { get; public set; }
    [WriteableAttribute]
public RunbookRetentionPeriod RunRetentionPolicy { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookProcessId();
    [CompilerGeneratedAttribute]
public void set_RunbookProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_PublishedRunbookSnapshotId();
    [CompilerGeneratedAttribute]
public void set_PublishedRunbookSnapshotId(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public TenantedDeploymentMode get_MultiTenancyMode();
    [CompilerGeneratedAttribute]
public void set_MultiTenancyMode(TenantedDeploymentMode value);
    [CompilerGeneratedAttribute]
public DeploymentConnectivityPolicy get_ConnectivityPolicy();
    [CompilerGeneratedAttribute]
public void set_ConnectivityPolicy(DeploymentConnectivityPolicy value);
    [CompilerGeneratedAttribute]
public RunbookEnvironmentScope get_EnvironmentScope();
    [CompilerGeneratedAttribute]
public void set_EnvironmentScope(RunbookEnvironmentScope value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Environments();
    [CompilerGeneratedAttribute]
public GuidedFailureMode get_DefaultGuidedFailureMode();
    [CompilerGeneratedAttribute]
public void set_DefaultGuidedFailureMode(GuidedFailureMode value);
    [CompilerGeneratedAttribute]
public RunbookRetentionPeriod get_RunRetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_RunRetentionPolicy(RunbookRetentionPeriod value);
}
public class Octopus.Client.Model.RunbookRetentionPeriod : object {
    [CompilerGeneratedAttribute]
private int <QuantityToKeep>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldKeepForever>k__BackingField;
    public int QuantityToKeep { get; public set; }
    public bool ShouldKeepForever { get; public set; }
    [CompilerGeneratedAttribute]
public int get_QuantityToKeep();
    [CompilerGeneratedAttribute]
public void set_QuantityToKeep(int value);
    [CompilerGeneratedAttribute]
public bool get_ShouldKeepForever();
    [CompilerGeneratedAttribute]
public void set_ShouldKeepForever(bool value);
}
public class Octopus.Client.Model.RunbookRunParameters : object {
    [CompilerGeneratedAttribute]
private bool <UseDefaultSnapshot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookSnapshotNameOrId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePackageDownload>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseGuidedFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <SpecificMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ExcludedMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <TenantTagNames>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <SkipActions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTimeExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <FormValues>k__BackingField;
    public bool UseDefaultSnapshot { get; public set; }
    public string RunbookId { get; public set; }
    public string ProjectId { get; public set; }
    public string RunbookSnapshotNameOrId { get; public set; }
    public string EnvironmentId { get; public set; }
    public String[] EnvironmentIds { get; public set; }
    public bool ForcePackageDownload { get; public set; }
    public Nullable`1<bool> UseGuidedFailure { get; public set; }
    public String[] SpecificMachineIds { get; public set; }
    public String[] ExcludedMachineIds { get; public set; }
    public string TenantId { get; public set; }
    public String[] TenantIds { get; public set; }
    public String[] TenantTagNames { get; public set; }
    public String[] SkipActions { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTime { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTimeExpiry { get; public set; }
    public Dictionary`2<string, string> FormValues { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UseDefaultSnapshot();
    [CompilerGeneratedAttribute]
public void set_UseDefaultSnapshot(bool value);
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookSnapshotNameOrId();
    [CompilerGeneratedAttribute]
public void set_RunbookSnapshotNameOrId(string value);
    [CompilerGeneratedAttribute]
public string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public String[] get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(String[] value);
    [CompilerGeneratedAttribute]
public bool get_ForcePackageDownload();
    [CompilerGeneratedAttribute]
public void set_ForcePackageDownload(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseGuidedFailure();
    [CompilerGeneratedAttribute]
public void set_UseGuidedFailure(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public String[] get_SpecificMachineIds();
    [CompilerGeneratedAttribute]
public void set_SpecificMachineIds(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_ExcludedMachineIds();
    [CompilerGeneratedAttribute]
public void set_ExcludedMachineIds(String[] value);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public String[] get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_TenantTagNames();
    [CompilerGeneratedAttribute]
public void set_TenantTagNames(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_SkipActions();
    [CompilerGeneratedAttribute]
public void set_SkipActions(String[] value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_QueueTime();
    [CompilerGeneratedAttribute]
public void set_QueueTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_QueueTimeExpiry();
    [CompilerGeneratedAttribute]
public void set_QueueTimeExpiry(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_FormValues();
    [CompilerGeneratedAttribute]
public void set_FormValues(Dictionary`2<string, string> value);
    public static RunbookRunParameters MapFrom(RunbookRunResource runbookRun);
}
public class Octopus.Client.Model.RunbookRunPreviewResource : DeploymentPreviewBaseResource {
}
public class Octopus.Client.Model.RunbookRunResource : Resource {
    [CompilerGeneratedAttribute]
private string <RunbookSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FrozenRunbookProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePackageDownload>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SkipActions>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SpecificMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ExcludedMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManifestVariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseGuidedFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <FormValues>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTimeExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleRetentionPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeployedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeployedById>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FailureEncountered>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <DeployedToMachineIds>k__BackingField;
    [RequiredAttribute]
[WriteableOnCreateAttribute]
public string RunbookSnapshotId { get; public set; }
    public string FrozenRunbookProcessId { get; public set; }
    [RequiredAttribute]
[WriteableOnCreateAttribute]
public string RunbookId { get; public set; }
    [RequiredAttribute]
[WriteableOnCreateAttribute]
public string EnvironmentId { get; public set; }
    [WriteableOnCreateAttribute]
public string TenantId { get; public set; }
    [WriteableOnCreateAttribute]
public bool ForcePackageDownload { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection SkipActions { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection SpecificMachineIds { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection ExcludedMachineIds { get; public set; }
    public string ManifestVariableSetId { get; public set; }
    public string TaskId { get; public set; }
    public string ProjectId { get; public set; }
    [WriteableOnCreateAttribute]
public bool UseGuidedFailure { get; public set; }
    [WriteableOnCreateAttribute]
public string Comments { get; public set; }
    [WriteableOnCreateAttribute]
[JsonPropertyAttribute]
public Dictionary`2<string, string> FormValues { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTime { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTimeExpiry { get; public set; }
    public string Name { get; public set; }
    public DateTimeOffset Created { get; public set; }
    public string SpaceId { get; public set; }
    public RetentionPeriod TentacleRetentionPeriod { get; public set; }
    public string DeployedBy { get; public set; }
    public string DeployedById { get; public set; }
    public bool FailureEncountered { get; public set; }
    public ReferenceCollection DeployedToMachineIds { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RunbookSnapshotId();
    [CompilerGeneratedAttribute]
public void set_RunbookSnapshotId(string value);
    [CompilerGeneratedAttribute]
public string get_FrozenRunbookProcessId();
    [CompilerGeneratedAttribute]
public void set_FrozenRunbookProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TenantId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ForcePackageDownload();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ForcePackageDownload(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_SkipActions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipActions(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_SpecificMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpecificMachineIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_ExcludedMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExcludedMachineIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ManifestVariableSetId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ManifestVariableSetId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TaskId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TaskId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseGuidedFailure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseGuidedFailure(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Comments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Comments(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, string> get_FormValues();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FormValues(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTimeOffset> get_QueueTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueueTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTimeOffset> get_QueueTimeExpiry();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueueTimeExpiry(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual RetentionPeriod get_TentacleRetentionPeriod();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TentacleRetentionPeriod(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DeployedBy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedBy(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DeployedById();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedById(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_FailureEncountered();
    [CompilerGeneratedAttribute]
public void set_FailureEncountered(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_DeployedToMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedToMachineIds(ReferenceCollection value);
}
public class Octopus.Client.Model.RunbookRunTemplateResource : DeploymentTemplateBaseResource {
    [CompilerGeneratedAttribute]
private bool <IsRunbookProcessModified>k__BackingField;
    public bool IsRunbookProcessModified { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsRunbookProcessModified();
    [CompilerGeneratedAttribute]
public void set_IsRunbookProcessModified(bool value);
}
public class Octopus.Client.Model.RunbookSnapshotResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Notes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FrozenRunbookProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FrozenProjectVariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Assembled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <LibraryVariableSetSnapshotIds>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SelectedPackage> <SelectedPackages>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectVariableSetSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableOnCreateAttribute]
public string RunbookId { get; public set; }
    [WriteableAttribute]
public string Notes { get; public set; }
    public string FrozenRunbookProcessId { get; public set; }
    public string FrozenProjectVariableSetId { get; public set; }
    public DateTimeOffset Assembled { get; public set; }
    [WriteableOnCreateAttribute]
public string ProjectId { get; public set; }
    public List`1<string> LibraryVariableSetSnapshotIds { get; public set; }
    public List`1<SelectedPackage> SelectedPackages { get; public set; }
    public string ProjectVariableSetSnapshotId { get; public set; }
    public string SpaceId { get; public set; }
    public RunbookSnapshotResource(string projectId);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public string get_Notes();
    [CompilerGeneratedAttribute]
public void set_Notes(string value);
    [CompilerGeneratedAttribute]
public string get_FrozenRunbookProcessId();
    [CompilerGeneratedAttribute]
public void set_FrozenRunbookProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_FrozenProjectVariableSetId();
    [CompilerGeneratedAttribute]
public void set_FrozenProjectVariableSetId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_Assembled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Assembled(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_LibraryVariableSetSnapshotIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LibraryVariableSetSnapshotIds(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<SelectedPackage> get_SelectedPackages();
    [CompilerGeneratedAttribute]
public void set_SelectedPackages(List`1<SelectedPackage> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectVariableSetSnapshotId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectVariableSetSnapshotId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.RunbookSnapshotTemplateResource : ReleaseTemplateBaseResource {
    [CompilerGeneratedAttribute]
private string <RunbookProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextNameIncrement>k__BackingField;
    public string RunbookProcessId { get; public set; }
    public string NextNameIncrement { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RunbookProcessId();
    [CompilerGeneratedAttribute]
public void set_RunbookProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_NextNameIncrement();
    [CompilerGeneratedAttribute]
public void set_NextNameIncrement(string value);
}
public class Octopus.Client.Model.ScheduledTaskDetailsResource : Resource {
    [CompilerGeneratedAttribute]
private ActivityElement <ActivityLog>k__BackingField;
    public ActivityElement ActivityLog { get; public set; }
    [CompilerGeneratedAttribute]
public ActivityElement get_ActivityLog();
    [CompilerGeneratedAttribute]
public void set_ActivityLog(ActivityElement value);
}
public class Octopus.Client.Model.ScheduledTaskStatusResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public string Name { get; public set; }
    public bool IsEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(bool value);
}
public class Octopus.Client.Model.SchedulerStatusResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsRunning>k__BackingField;
    [CompilerGeneratedAttribute]
private ScheduledTaskStatusResource[] <TaskStatus>k__BackingField;
    public bool IsRunning { get; public set; }
    public ScheduledTaskStatusResource[] TaskStatus { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsRunning();
    [CompilerGeneratedAttribute]
public void set_IsRunning(bool value);
    [CompilerGeneratedAttribute]
public ScheduledTaskStatusResource[] get_TaskStatus();
    [CompilerGeneratedAttribute]
public void set_TaskStatus(ScheduledTaskStatusResource[] value);
}
public class Octopus.Client.Model.ScopedUserRoleResource : Resource {
    [CompilerGeneratedAttribute]
private string <UserRoleId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TeamId>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ProjectGroupIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ProjectIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public string UserRoleId { get; public set; }
    [WriteableAttribute]
public string TeamId { get; public set; }
    [WriteableAttribute]
public ReferenceCollection ProjectGroupIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection ProjectIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserRoleId();
    [CompilerGeneratedAttribute]
public void set_UserRoleId(string value);
    [CompilerGeneratedAttribute]
public string get_TeamId();
    [CompilerGeneratedAttribute]
public void set_TeamId(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_ProjectGroupIds();
    [CompilerGeneratedAttribute]
public void set_ProjectGroupIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_ProjectIds();
    [CompilerGeneratedAttribute]
public void set_ProjectIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public enum Octopus.Client.Model.ScopeField : Enum {
    public int value__;
    public static ScopeField Project;
    public static ScopeField Environment;
    public static ScopeField Machine;
    public static ScopeField Role;
    public static ScopeField TargetRole;
    public static ScopeField Action;
    public static ScopeField User;
    public static ScopeField Trigger;
    public static ScopeField ParentDeployment;
    public static ScopeField Private;
    public static ScopeField Channel;
    public static ScopeField TenantTag;
    public static ScopeField Tenant;
    public static ScopeField ProcessOwner;
}
[DebuggerDisplayAttribute("{ToString()}")]
public class Octopus.Client.Model.ScopeSpecification : Dictionary`2<ScopeField, ScopeValue> {
    public ScopeSpecification Clone();
    [ObsoleteAttribute("Rank usage is deprecated. Please see https://octopus.com/docs/deployment-process/variables for variable specificity rules.")]
public int Rank();
    private int Score(ScopeField field, int value);
    public sealed virtual bool Equals(ScopeSpecification other);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Octopus.Client.Model.ScopeValue : ReferenceCollection {
    public ScopeValue(string value);
    public ScopeValue(string value, String[] additionalValues);
    public ScopeValue(IEnumerable`1<string> items);
    public static ScopeValue op_Implicit(string value);
}
[AttributeUsageAttribute("256")]
public class Octopus.Client.Model.ScriptConsoleSupportedAttribute : Attribute {
}
public enum Octopus.Client.Model.ScriptSyntax : Enum {
    public int value__;
    public static ScriptSyntax PowerShell;
    public static ScriptSyntax Bash;
    public static ScriptSyntax CSharp;
    public static ScriptSyntax FSharp;
    public static ScriptSyntax Python;
}
[ExtensionAttribute]
public static class Octopus.Client.Model.ScriptSyntaxExtension : object {
    [ExtensionAttribute]
public static string GetExtension(ScriptSyntax syntax);
}
public class Octopus.Client.Model.ScriptSyntaxMeta : object {
    public ScriptSyntax ScriptSyntax;
    public string Extension;
    public string Name;
    public static ScriptSyntaxMeta PowerShell;
    public static ScriptSyntaxMeta Bash;
    public static ScriptSyntaxMeta CSharp;
    public static ScriptSyntaxMeta FSharp;
    public static ScriptSyntaxMeta Python;
    public static ScriptSyntaxMeta[] All;
    private ScriptSyntaxMeta(ScriptSyntax scriptSyntax, string extension, string name);
    private static ScriptSyntaxMeta();
    public static ScriptSyntaxMeta FromName(string name);
    public static ScriptSyntaxMeta FromExtension(string extension);
}
public class Octopus.Client.Model.SelectedPackage : object {
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageReferenceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [ObsoleteAttribute("Replaced by ActionName")]
public string StepName { get; public set; }
    public string ActionName { get; public set; }
    public string PackageReferenceName { get; public set; }
    public string Version { get; public set; }
    public SelectedPackage(string actionName, string version);
    public SelectedPackage(string actionName, string packageReferenceName, string version);
    public string get_StepName();
    public void set_StepName(string value);
    [CompilerGeneratedAttribute]
public string get_ActionName();
    [CompilerGeneratedAttribute]
public void set_ActionName(string value);
    [CompilerGeneratedAttribute]
public string get_PackageReferenceName();
    [CompilerGeneratedAttribute]
public void set_PackageReferenceName(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
public class Octopus.Client.Model.SemanticVersion : StrictSemanticVersion {
    private string _originalString;
    public Version Version { get; }
    public bool IsLegacyVersion { get; }
    public int Revision { get; }
    public bool IsSemVer2 { get; }
    public string OriginalString { get; }
    public SemanticVersion(string version);
    public SemanticVersion(SemanticVersion version);
    public SemanticVersion(Version version, string releaseLabel, string metadata);
    public SemanticVersion(int major, int minor, int patch);
    public SemanticVersion(int major, int minor, int patch, string releaseLabel);
    public SemanticVersion(int major, int minor, int patch, string releaseLabel, string metadata);
    public SemanticVersion(int major, int minor, int patch, IEnumerable`1<string> releaseLabels, string metadata);
    public SemanticVersion(int major, int minor, int patch, int revision);
    public SemanticVersion(int major, int minor, int patch, int revision, string releaseLabel, string metadata);
    public SemanticVersion(int major, int minor, int patch, int revision, IEnumerable`1<string> releaseLabels, string metadata);
    public SemanticVersion(Version version, IEnumerable`1<string> releaseLabels, string metadata, string originalVersion, bool preserveMissingComponents);
    public static SemanticVersion op_Explicit(string versionString);
    public virtual string ToString();
    public Version get_Version();
    public virtual bool get_IsLegacyVersion();
    public int get_Revision();
    public bool get_IsSemVer2();
    public string get_OriginalString();
    public static string IncrementRelease(string release);
    public static SemanticVersion Parse(string value, bool preserveMissingComponents);
    public static bool TryParse(string value, SemanticVersion& version, bool preserveMissingComponents);
    public static bool TryParseStrict(string value, SemanticVersion& version);
    private static string GetLegacyString(Version version, IEnumerable`1<string> releaseLabels, string metadata);
    private static IEnumerable`1<string> ParseReleaseLabels(string releaseLabels);
}
public class Octopus.Client.Model.SemanticVersionComparer : object {
    public sealed virtual int Compare(string x, string y);
}
public static class Octopus.Client.Model.SemanticVersionMask : object {
    private static string PatternIncrement;
    private static string PatternCurrent;
    private static Regex FormatRegex;
    private static SemanticVersionMask();
    public static bool IsMask(string versionString);
    public static SemanticVersion GetLatestMaskedVersion(string mask, List`1<SemanticVersion> versions);
    public static SemanticVersion ApplyMask(string mask, SemanticVersion currentVersion);
    private static SemanticVersion GenerateVersionFromMask(MaskMatchedVersion mask);
    private static SemanticVersion GenerateVersionFromCurrent(MaskMatchedVersion mask, MaskMatchedVersion current);
}
public class Octopus.Client.Model.SensitiveValue : object {
    [CompilerGeneratedAttribute]
private bool <HasValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hint>k__BackingField;
    public bool HasValue { get; public set; }
    public string NewValue { get; public set; }
    public string Hint { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_HasValue();
    [CompilerGeneratedAttribute]
public void set_HasValue(bool value);
    [CompilerGeneratedAttribute]
public string get_NewValue();
    [CompilerGeneratedAttribute]
public void set_NewValue(string value);
    [CompilerGeneratedAttribute]
public string get_Hint();
    [CompilerGeneratedAttribute]
public void set_Hint(string value);
    public static SensitiveValue op_Implicit(string newValue);
    public sealed virtual bool Equals(SensitiveValue other);
}
public class Octopus.Client.Model.ServerActivitiesResource : Resource {
    [CompilerGeneratedAttribute]
private ServerActivityResource[] <OrchestratedActivities>k__BackingField;
    [CompilerGeneratedAttribute]
private ServerActivityResource[] <SystemServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ServerActivityResource[] <OrphanedActivities>k__BackingField;
    public ServerActivityResource[] OrchestratedActivities { get; public set; }
    public ServerActivityResource[] SystemServices { get; public set; }
    public ServerActivityResource[] OrphanedActivities { get; public set; }
    [CompilerGeneratedAttribute]
public ServerActivityResource[] get_OrchestratedActivities();
    [CompilerGeneratedAttribute]
public void set_OrchestratedActivities(ServerActivityResource[] value);
    [CompilerGeneratedAttribute]
public ServerActivityResource[] get_SystemServices();
    [CompilerGeneratedAttribute]
public void set_SystemServices(ServerActivityResource[] value);
    [CompilerGeneratedAttribute]
public ServerActivityResource[] get_OrphanedActivities();
    [CompilerGeneratedAttribute]
public void set_OrphanedActivities(ServerActivityResource[] value);
}
public class Octopus.Client.Model.ServerActivityResource : Resource {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActorName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private int <InputQueueCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentOperation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentlyReceiving>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CurrentlyReceivingSinceUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ServerActivityResource> <SupervisedActivities>k__BackingField;
    public string Description { get; public set; }
    public string ActorName { get; public set; }
    public string Location { get; public set; }
    public int InputQueueCount { get; public set; }
    public string CurrentOperation { get; public set; }
    public string CurrentlyReceiving { get; public set; }
    public Nullable`1<DateTime> CurrentlyReceivingSinceUtc { get; public set; }
    public List`1<ServerActivityResource> SupervisedActivities { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ActorName();
    [CompilerGeneratedAttribute]
public void set_ActorName(string value);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
    [CompilerGeneratedAttribute]
public int get_InputQueueCount();
    [CompilerGeneratedAttribute]
public void set_InputQueueCount(int value);
    [CompilerGeneratedAttribute]
public string get_CurrentOperation();
    [CompilerGeneratedAttribute]
public void set_CurrentOperation(string value);
    [CompilerGeneratedAttribute]
public string get_CurrentlyReceiving();
    [CompilerGeneratedAttribute]
public void set_CurrentlyReceiving(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CurrentlyReceivingSinceUtc();
    [CompilerGeneratedAttribute]
public void set_CurrentlyReceivingSinceUtc(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public List`1<ServerActivityResource> get_SupervisedActivities();
    [CompilerGeneratedAttribute]
public void set_SupervisedActivities(List`1<ServerActivityResource> value);
}
public class Octopus.Client.Model.ServerConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private string <ServerUri>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string ServerUri { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ServerUri();
    [CompilerGeneratedAttribute]
public void set_ServerUri(string value);
}
public class Octopus.Client.Model.ServerStatusHealthResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsOperatingNormally>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEntireClusterReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEntireClusterDrainingTasks>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCompliantWithLicense>k__BackingField;
    public bool IsOperatingNormally { get; public set; }
    public string Description { get; public set; }
    public bool IsEntireClusterReadOnly { get; public set; }
    public bool IsEntireClusterDrainingTasks { get; public set; }
    public bool IsCompliantWithLicense { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsOperatingNormally();
    [CompilerGeneratedAttribute]
public void set_IsOperatingNormally(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEntireClusterReadOnly();
    [CompilerGeneratedAttribute]
public void set_IsEntireClusterReadOnly(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsEntireClusterDrainingTasks();
    [CompilerGeneratedAttribute]
public void set_IsEntireClusterDrainingTasks(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsCompliantWithLicense();
    [CompilerGeneratedAttribute]
public void set_IsCompliantWithLicense(bool value);
}
public class Octopus.Client.Model.ServerStatusResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsDatabaseEncrypted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUpgradeAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaximumAvailableVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaximumAvailableVersionCoveredByLicense>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaintenanceExpires>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInMaintenanceMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMajorMinorUpgrade>k__BackingField;
    public bool IsDatabaseEncrypted { get; public set; }
    public bool IsUpgradeAvailable { get; public set; }
    public string MaximumAvailableVersion { get; public set; }
    public string MaximumAvailableVersionCoveredByLicense { get; public set; }
    public string MaintenanceExpires { get; public set; }
    public bool IsInMaintenanceMode { get; public set; }
    public bool IsMajorMinorUpgrade { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsDatabaseEncrypted();
    [CompilerGeneratedAttribute]
public void set_IsDatabaseEncrypted(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsUpgradeAvailable();
    [CompilerGeneratedAttribute]
public void set_IsUpgradeAvailable(bool value);
    [CompilerGeneratedAttribute]
public string get_MaximumAvailableVersion();
    [CompilerGeneratedAttribute]
public void set_MaximumAvailableVersion(string value);
    [CompilerGeneratedAttribute]
public string get_MaximumAvailableVersionCoveredByLicense();
    [CompilerGeneratedAttribute]
public void set_MaximumAvailableVersionCoveredByLicense(string value);
    [CompilerGeneratedAttribute]
public string get_MaintenanceExpires();
    [CompilerGeneratedAttribute]
public void set_MaintenanceExpires(string value);
    [CompilerGeneratedAttribute]
public bool get_IsInMaintenanceMode();
    [CompilerGeneratedAttribute]
public void set_IsInMaintenanceMode(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsMajorMinorUpgrade();
    [CompilerGeneratedAttribute]
public void set_IsMajorMinorUpgrade(bool value);
}
public enum Octopus.Client.Model.SkipMachineBehavior : Enum {
    public int value__;
    public static SkipMachineBehavior None;
    public static SkipMachineBehavior SkipUnavailableMachines;
}
public class Octopus.Client.Model.SmtpConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private string <SmtpHost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SmtpPort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SendEmailFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SmtpLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <SmtpPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewSmtpPassword>k__BackingField;
    [WriteableAttribute]
public string SmtpHost { get; public set; }
    [WriteableAttribute]
[RequiredAttribute]
public Nullable`1<int> SmtpPort { get; public set; }
    [WriteableAttribute]
public string SendEmailFrom { get; public set; }
    [WriteableAttribute]
public string SmtpLogin { get; public set; }
    [WriteableAttribute]
public bool EnableSsl { get; public set; }
    [WriteableAttribute]
public Nullable`1<int> Timeout { get; public set; }
    [WriteableAttribute]
public SensitiveValue SmtpPassword { get; public set; }
    [NotReadableAttribute]
[WriteableAttribute]
[ObsoleteAttribute("Use 'SmtpPassword' instead. Will be removed in version 5.0.0.", "False")]
public string NewSmtpPassword { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SmtpHost();
    [CompilerGeneratedAttribute]
public void set_SmtpHost(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SmtpPort();
    [CompilerGeneratedAttribute]
public void set_SmtpPort(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_SendEmailFrom();
    [CompilerGeneratedAttribute]
public void set_SendEmailFrom(string value);
    [CompilerGeneratedAttribute]
public string get_SmtpLogin();
    [CompilerGeneratedAttribute]
public void set_SmtpLogin(string value);
    [CompilerGeneratedAttribute]
public bool get_EnableSsl();
    [CompilerGeneratedAttribute]
public void set_EnableSsl(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_SmtpPassword();
    [CompilerGeneratedAttribute]
public void set_SmtpPassword(SensitiveValue value);
    [CompilerGeneratedAttribute]
public string get_NewSmtpPassword();
    [CompilerGeneratedAttribute]
public void set_NewSmtpPassword(string value);
}
public class Octopus.Client.Model.SpaceResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TaskQueueStopped>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SpaceManagersTeams>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SpaceManagersTeamMembers>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public bool IsDefault { get; public set; }
    public bool TaskQueueStopped { get; public set; }
    [WriteableAttribute]
public ReferenceCollection SpaceManagersTeams { get; public set; }
    [WriteableAttribute]
public ReferenceCollection SpaceManagersTeamMembers { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public bool get_TaskQueueStopped();
    [CompilerGeneratedAttribute]
public void set_TaskQueueStopped(bool value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_SpaceManagersTeams();
    [CompilerGeneratedAttribute]
public void set_SpaceManagersTeams(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_SpaceManagersTeamMembers();
    [CompilerGeneratedAttribute]
public void set_SpaceManagersTeamMembers(ReferenceCollection value);
}
public class Octopus.Client.Model.SpaceRootResource : Resource {
}
public class Octopus.Client.Model.SpaceSearchResult : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.SquidAttribute : Attribute {
}
public class Octopus.Client.Model.StaticWorkerPoolResource : WorkerPoolResource {
}
public class Octopus.Client.Model.SubscriptionResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private SubscriptionType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private EventNotificationSubscription <EventNotificationSubscription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public SubscriptionType Type { get; public set; }
    [WriteableAttribute]
public bool IsDisabled { get; public set; }
    [WriteableAttribute]
public EventNotificationSubscription EventNotificationSubscription { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public SubscriptionType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(SubscriptionType value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public EventNotificationSubscription get_EventNotificationSubscription();
    [CompilerGeneratedAttribute]
public void set_EventNotificationSubscription(EventNotificationSubscription value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public enum Octopus.Client.Model.SubscriptionType : Enum {
    public int value__;
    public static SubscriptionType Event;
}
public class Octopus.Client.Model.SummaryResource : object {
    [CompilerGeneratedAttribute]
private int <TotalMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalDisabledMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineHealthStatusSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineEndpointSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TentacleUpgradesRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <MachineIdsForCalamariUpgrade>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <MachineIdsForTentacleUpgrade>k__BackingField;
    public int TotalMachines { get; public set; }
    public int TotalDisabledMachines { get; public set; }
    public Dictionary`2<string, int> MachineHealthStatusSummaries { get; public set; }
    public Dictionary`2<string, int> MachineEndpointSummaries { get; public set; }
    public bool TentacleUpgradesRequired { get; public set; }
    public String[] MachineIdsForCalamariUpgrade { get; public set; }
    public String[] MachineIdsForTentacleUpgrade { get; public set; }
    [CompilerGeneratedAttribute]
public int get_TotalMachines();
    [CompilerGeneratedAttribute]
public void set_TotalMachines(int value);
    [CompilerGeneratedAttribute]
public int get_TotalDisabledMachines();
    [CompilerGeneratedAttribute]
public void set_TotalDisabledMachines(int value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineHealthStatusSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineHealthStatusSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineEndpointSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineEndpointSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public bool get_TentacleUpgradesRequired();
    [CompilerGeneratedAttribute]
public void set_TentacleUpgradesRequired(bool value);
    [CompilerGeneratedAttribute]
public String[] get_MachineIdsForCalamariUpgrade();
    [CompilerGeneratedAttribute]
public void set_MachineIdsForCalamariUpgrade(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_MachineIdsForTentacleUpgrade();
    [CompilerGeneratedAttribute]
public void set_MachineIdsForTentacleUpgrade(String[] value);
}
public class Octopus.Client.Model.SummaryResourcesCombined : object {
    [CompilerGeneratedAttribute]
private int <TotalMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalDisabledMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineHealthStatusSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineEndpointSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TentacleUpgradesRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <MachineIdsForCalamariUpgrade>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <MachineIdsForTentacleUpgrade>k__BackingField;
    public int TotalMachines { get; public set; }
    public int TotalDisabledMachines { get; public set; }
    public Dictionary`2<string, int> MachineHealthStatusSummaries { get; public set; }
    public Dictionary`2<string, int> MachineEndpointSummaries { get; public set; }
    public bool TentacleUpgradesRequired { get; public set; }
    public String[] MachineIdsForCalamariUpgrade { get; public set; }
    public String[] MachineIdsForTentacleUpgrade { get; public set; }
    [CompilerGeneratedAttribute]
public int get_TotalMachines();
    [CompilerGeneratedAttribute]
public void set_TotalMachines(int value);
    [CompilerGeneratedAttribute]
public int get_TotalDisabledMachines();
    [CompilerGeneratedAttribute]
public void set_TotalDisabledMachines(int value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineHealthStatusSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineHealthStatusSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineEndpointSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineEndpointSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public bool get_TentacleUpgradesRequired();
    [CompilerGeneratedAttribute]
public void set_TentacleUpgradesRequired(bool value);
    [CompilerGeneratedAttribute]
public String[] get_MachineIdsForCalamariUpgrade();
    [CompilerGeneratedAttribute]
public void set_MachineIdsForCalamariUpgrade(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_MachineIdsForTentacleUpgrade();
    [CompilerGeneratedAttribute]
public void set_MachineIdsForTentacleUpgrade(String[] value);
}
[AttributeUsageAttribute("256")]
public class Octopus.Client.Model.SupportsRestrictionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private IList`1<string> <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExplicitTenantScopeRequired>k__BackingField;
    public IList`1<string> Scopes { get; }
    public bool ExplicitTenantScopeRequired { get; public set; }
    public SupportsRestrictionAttribute(String[] scopes);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public bool get_ExplicitTenantScopeRequired();
    [CompilerGeneratedAttribute]
public void set_ExplicitTenantScopeRequired(bool value);
}
public class Octopus.Client.Model.SystemInfoResource : Resource {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OSVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private long <WorkingSetBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClrVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ThreadCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Uptime>k__BackingField;
    public string Version { get; public set; }
    public string OSVersion { get; public set; }
    public long WorkingSetBytes { get; public set; }
    public string ClrVersion { get; public set; }
    public int ThreadCount { get; public set; }
    public TimeSpan Uptime { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_OSVersion();
    [CompilerGeneratedAttribute]
public void set_OSVersion(string value);
    [CompilerGeneratedAttribute]
public long get_WorkingSetBytes();
    [CompilerGeneratedAttribute]
public void set_WorkingSetBytes(long value);
    [CompilerGeneratedAttribute]
public string get_ClrVersion();
    [CompilerGeneratedAttribute]
public void set_ClrVersion(string value);
    [CompilerGeneratedAttribute]
public int get_ThreadCount();
    [CompilerGeneratedAttribute]
public void set_ThreadCount(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Uptime();
    [CompilerGeneratedAttribute]
public void set_Uptime(TimeSpan value);
}
public class Octopus.Client.Model.TagResource : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Color>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CanonicalTagName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Color { get; public set; }
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public string CanonicalTagName { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public int SortOrder { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Color();
    [CompilerGeneratedAttribute]
public void set_Color(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_CanonicalTagName();
    [CompilerGeneratedAttribute]
public void set_CanonicalTagName(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
}
public class Octopus.Client.Model.TagSetResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TagResource> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public int SortOrder { get; public set; }
    [WriteableAttribute]
public IList`1<TagResource> Tags { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public IList`1<TagResource> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IList`1<TagResource> value);
    public TagSetResource AddOrUpdateTag(string name, string description, string color);
    public TagSetResource RemoveTag(string name);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.TaskDetailsResource : Resource {
    private ActivityElement activityLog;
    [CompilerGeneratedAttribute]
private TaskResource <Task>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ActivityElement> <ActivityLogs>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskProgress <Progress>k__BackingField;
    [CompilerGeneratedAttribute]
private long <PhysicalLogSize>k__BackingField;
    public TaskResource Task { get; public set; }
    public IList`1<ActivityElement> ActivityLogs { get; public set; }
    [ObsoleteAttribute("Use ActivityLogs property")]
[EditorBrowsableAttribute("1")]
public ActivityElement ActivityLog { get; public set; }
    public TaskProgress Progress { get; public set; }
    public long PhysicalLogSize { get; public set; }
    [CompilerGeneratedAttribute]
public TaskResource get_Task();
    [CompilerGeneratedAttribute]
public void set_Task(TaskResource value);
    [CompilerGeneratedAttribute]
public IList`1<ActivityElement> get_ActivityLogs();
    [CompilerGeneratedAttribute]
public void set_ActivityLogs(IList`1<ActivityElement> value);
    public ActivityElement get_ActivityLog();
    public void set_ActivityLog(ActivityElement value);
    [CompilerGeneratedAttribute]
public TaskProgress get_Progress();
    [CompilerGeneratedAttribute]
public void set_Progress(TaskProgress value);
    [CompilerGeneratedAttribute]
public long get_PhysicalLogSize();
    [CompilerGeneratedAttribute]
public void set_PhysicalLogSize(long value);
}
public class Octopus.Client.Model.TaskProgress : object {
    [CompilerGeneratedAttribute]
private int <ProgressPercentage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EstimatedTimeRemaining>k__BackingField;
    public int ProgressPercentage { get; public set; }
    public string EstimatedTimeRemaining { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ProgressPercentage();
    [CompilerGeneratedAttribute]
public void set_ProgressPercentage(int value);
    [CompilerGeneratedAttribute]
public string get_EstimatedTimeRemaining();
    [CompilerGeneratedAttribute]
public void set_EstimatedTimeRemaining(string value);
}
public class Octopus.Client.Model.TaskResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Completed>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <QueueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTimeExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastUpdatedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CompletedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasBeenPickedUpByProcessor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasPendingInterruptions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanRerun>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasWarningsOrErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableOnCreateAttribute]
[JsonPropertyAttribute]
public string Name { get; public set; }
    [WriteableOnCreateAttribute]
[JsonPropertyAttribute]
public string Description { get; public set; }
    [WriteableOnCreateAttribute]
[JsonPropertyAttribute]
public Dictionary`2<string, object> Arguments { get; public set; }
    [JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
[JsonPropertyAttribute]
public TaskState State { get; public set; }
    [JsonPropertyAttribute]
public string Completed { get; public set; }
    [JsonPropertyAttribute]
public DateTimeOffset QueueTime { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> QueueTimeExpiry { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> StartTime { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> LastUpdatedTime { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> CompletedTime { get; public set; }
    [JsonPropertyAttribute]
public string ServerNode { get; public set; }
    [JsonPropertyAttribute]
public string Duration { get; public set; }
    [JsonPropertyAttribute]
public string ErrorMessage { get; public set; }
    [JsonPropertyAttribute]
public bool HasBeenPickedUpByProcessor { get; public set; }
    [JsonPropertyAttribute]
public bool IsCompleted { get; }
    [JsonPropertyAttribute]
public bool FinishedSuccessfully { get; }
    [JsonPropertyAttribute]
public bool HasPendingInterruptions { get; public set; }
    [JsonPropertyAttribute]
public bool CanRerun { get; public set; }
    [JsonPropertyAttribute]
public bool HasWarningsOrErrors { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public TaskState get_State();
    [CompilerGeneratedAttribute]
public void set_State(TaskState value);
    [CompilerGeneratedAttribute]
public string get_Completed();
    [CompilerGeneratedAttribute]
public void set_Completed(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_QueueTime();
    [CompilerGeneratedAttribute]
public void set_QueueTime(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_QueueTimeExpiry();
    [CompilerGeneratedAttribute]
public void set_QueueTimeExpiry(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastUpdatedTime();
    [CompilerGeneratedAttribute]
public void set_LastUpdatedTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CompletedTime();
    [CompilerGeneratedAttribute]
public void set_CompletedTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_ServerNode();
    [CompilerGeneratedAttribute]
public void set_ServerNode(string value);
    [CompilerGeneratedAttribute]
public string get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public bool get_HasBeenPickedUpByProcessor();
    [CompilerGeneratedAttribute]
public void set_HasBeenPickedUpByProcessor(bool value);
    public bool get_IsCompleted();
    public bool get_FinishedSuccessfully();
    [CompilerGeneratedAttribute]
public bool get_HasPendingInterruptions();
    [CompilerGeneratedAttribute]
public void set_HasPendingInterruptions(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanRerun();
    [CompilerGeneratedAttribute]
public void set_CanRerun(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasWarningsOrErrors();
    [CompilerGeneratedAttribute]
public void set_HasWarningsOrErrors(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.TaskResourceCollection : ResourceCollection`1<TaskResource> {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <TotalCounts>k__BackingField;
    public Dictionary`2<string, int> TotalCounts { get; public set; }
    public TaskResourceCollection(IEnumerable`1<TaskResource> items, LinkCollection links);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_TotalCounts();
    [CompilerGeneratedAttribute]
public void set_TotalCounts(Dictionary`2<string, int> value);
}
public enum Octopus.Client.Model.TaskState : Enum {
    public int value__;
    public static TaskState Queued;
    public static TaskState Executing;
    public static TaskState Failed;
    public static TaskState Canceled;
    public static TaskState TimedOut;
    public static TaskState Success;
    public static TaskState Cancelling;
}
public class Octopus.Client.Model.TaskTypeResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.TeamNameResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Octopus.Client.Model.TeamResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <MemberUserIds>k__BackingField;
    [CompilerGeneratedAttribute]
private NamedReferenceItemCollection <ExternalSecurityGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeRenamed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanChangeRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanChangeMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public ReferenceCollection MemberUserIds { get; public set; }
    [WriteableAttribute]
public NamedReferenceItemCollection ExternalSecurityGroups { get; public set; }
    public bool CanBeDeleted { get; public set; }
    public bool CanBeRenamed { get; public set; }
    public bool CanChangeRoles { get; public set; }
    public bool CanChangeMembers { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_MemberUserIds();
    [CompilerGeneratedAttribute]
public void set_MemberUserIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public NamedReferenceItemCollection get_ExternalSecurityGroups();
    [CompilerGeneratedAttribute]
public void set_ExternalSecurityGroups(NamedReferenceItemCollection value);
    [CompilerGeneratedAttribute]
public bool get_CanBeDeleted();
    [CompilerGeneratedAttribute]
public void set_CanBeDeleted(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanBeRenamed();
    [CompilerGeneratedAttribute]
public void set_CanBeRenamed(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanChangeRoles();
    [CompilerGeneratedAttribute]
public void set_CanChangeRoles(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanChangeMembers();
    [CompilerGeneratedAttribute]
public void set_CanChangeMembers(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.TelemetryConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ShowAsNewUntil>k__BackingField;
    [WriteableAttribute]
public bool Enabled { get; public set; }
    public DateTimeOffset ShowAsNewUntil { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ShowAsNewUntil();
    [CompilerGeneratedAttribute]
public void set_ShowAsNewUntil(DateTimeOffset value);
}
public enum Octopus.Client.Model.TenantedDeploymentMode : Enum {
    public int value__;
    public static TenantedDeploymentMode Untenanted;
    public static TenantedDeploymentMode TenantedOrUntenanted;
    public static TenantedDeploymentMode Tenanted;
}
public class Octopus.Client.Model.TenantProjectEnvironmentMappingResource : Resource {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Environments>k__BackingField;
    [WriteableAttribute]
public string ProjectId { get; public set; }
    [WriteableAttribute]
public ReferenceCollection Environments { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Environments();
    [CompilerGeneratedAttribute]
public void set_Environments(ReferenceCollection value);
}
public class Octopus.Client.Model.TenantResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ReferenceCollection> <ProjectEnvironments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClonedFromTenantId>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    [WriteableAttribute]
public IDictionary`2<string, ReferenceCollection> ProjectEnvironments { get; public set; }
    public string SpaceId { get; public set; }
    public string Description { get; public set; }
    [WriteableOnCreateAttribute]
public string ClonedFromTenantId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ReferenceCollection> get_ProjectEnvironments();
    [CompilerGeneratedAttribute]
public void set_ProjectEnvironments(IDictionary`2<string, ReferenceCollection> value);
    public TenantResource WithTag(TagResource tag);
    public TenantResource ClearTags();
    public TenantResource ConnectToProjectAndEnvironments(ProjectResource project, EnvironmentResource[] environments);
    public TenantResource ClearProjects();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ClonedFromTenantId();
    [CompilerGeneratedAttribute]
public void set_ClonedFromTenantId(string value);
}
public class Octopus.Client.Model.TenantsMissingVariablesResource : object {
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<MissingVariableResource> <MissingVariables>k__BackingField;
    public string TenantId { get; }
    public LinkCollection Links { get; }
    [JsonPropertyAttribute]
public IEnumerable`1<MissingVariableResource> MissingVariables { get; public set; }
    public TenantsMissingVariablesResource(string tenantId);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public IEnumerable`1<MissingVariableResource> get_MissingVariables();
    [CompilerGeneratedAttribute]
public void set_MissingVariables(IEnumerable`1<MissingVariableResource> value);
}
public class Octopus.Client.Model.TenantVariableResource : Resource {
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantName>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Project> <ProjectVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Library> <LibraryVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public string TenantId { get; public set; }
    public string TenantName { get; public set; }
    public Dictionary`2<string, Project> ProjectVariables { get; public set; }
    public Dictionary`2<string, Library> LibraryVariables { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public string get_TenantName();
    [CompilerGeneratedAttribute]
public void set_TenantName(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Project> get_ProjectVariables();
    [CompilerGeneratedAttribute]
public void set_ProjectVariables(Dictionary`2<string, Project> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Library> get_LibraryVariables();
    [CompilerGeneratedAttribute]
public void set_LibraryVariables(Dictionary`2<string, Library> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public enum Octopus.Client.Model.TentacleUpdateBehavior : Enum {
    public int value__;
    public static TentacleUpdateBehavior NeverUpdate;
    public static TentacleUpdateBehavior Update;
}
[AttributeUsageAttribute("256")]
public class Octopus.Client.Model.TentacleUpgradeSupportedAttribute : Attribute {
}
public class Octopus.Client.Model.Triggers.AutoDeployActionResource : TriggerActionResource {
    [CompilerGeneratedAttribute]
private bool <ShouldRedeployWhenMachineHasBeenDeployedTo>k__BackingField;
    public TriggerActionType ActionType { get; }
    [WriteableAttribute]
public bool ShouldRedeployWhenMachineHasBeenDeployedTo { get; public set; }
    public virtual TriggerActionType get_ActionType();
    [CompilerGeneratedAttribute]
public bool get_ShouldRedeployWhenMachineHasBeenDeployedTo();
    [CompilerGeneratedAttribute]
public void set_ShouldRedeployWhenMachineHasBeenDeployedTo(bool value);
}
public class Octopus.Client.Model.Triggers.MachineFilterResource : TriggerFilterResource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EventGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EventCategories>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection Roles { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EventGroups { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EventCategories { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EventGroups();
    [CompilerGeneratedAttribute]
public void set_EventGroups(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EventCategories();
    [CompilerGeneratedAttribute]
public void set_EventCategories(ReferenceCollection value);
}
public class Octopus.Client.Model.Triggers.RunRunbookActionResource : TriggerActionResource {
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    public TriggerActionType ActionType { get; }
    [WriteableAttribute]
public string RunbookId { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    public virtual TriggerActionType get_ActionType();
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.ContinuousDailyScheduledTriggerFilterResource : ScheduledTriggerFilterResource {
    [CompilerGeneratedAttribute]
private DateTime <RunAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <RunUntil>k__BackingField;
    [CompilerGeneratedAttribute]
private DailyScheduledTriggerInterval <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <HourInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <MinuteInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private DaysOfWeek <DaysOfWeek>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public DateTime RunAfter { get; public set; }
    [WriteableAttribute]
public DateTime RunUntil { get; public set; }
    [WriteableAttribute]
public DailyScheduledTriggerInterval Interval { get; public set; }
    [WriteableAttribute]
public Nullable`1<short> HourInterval { get; public set; }
    [WriteableAttribute]
public Nullable`1<short> MinuteInterval { get; public set; }
    [WriteableAttribute]
public DaysOfWeek DaysOfWeek { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public DateTime get_RunAfter();
    [CompilerGeneratedAttribute]
public void set_RunAfter(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_RunUntil();
    [CompilerGeneratedAttribute]
public void set_RunUntil(DateTime value);
    [CompilerGeneratedAttribute]
public DailyScheduledTriggerInterval get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(DailyScheduledTriggerInterval value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_HourInterval();
    [CompilerGeneratedAttribute]
public void set_HourInterval(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_MinuteInterval();
    [CompilerGeneratedAttribute]
public void set_MinuteInterval(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public DaysOfWeek get_DaysOfWeek();
    [CompilerGeneratedAttribute]
public void set_DaysOfWeek(DaysOfWeek value);
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.CronScheduledTriggerFilterResource : ScheduledTriggerFilterResource {
    [CompilerGeneratedAttribute]
private string <CronExpression>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public string CronExpression { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public string get_CronExpression();
    [CompilerGeneratedAttribute]
public void set_CronExpression(string value);
}
public enum Octopus.Client.Model.Triggers.ScheduledTriggers.DailyScheduledTriggerInterval : Enum {
    public int value__;
    public static DailyScheduledTriggerInterval OnceHourly;
    public static DailyScheduledTriggerInterval OnceEveryMinute;
}
public enum Octopus.Client.Model.Triggers.ScheduledTriggers.DayOfWeek : Enum {
    public int value__;
    public static DayOfWeek Sunday;
    public static DayOfWeek Monday;
    public static DayOfWeek Tuesday;
    public static DayOfWeek Wednesday;
    public static DayOfWeek Thursday;
    public static DayOfWeek Friday;
    public static DayOfWeek Saturday;
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.DaysPerMonthScheduledTriggerFilterResource : ScheduledTriggerFilterResource {
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private MonthlyScheduleType <MonthlyScheduleType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateOfMonth>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DayNumberOfMonth>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DayOfWeek> <DayOfWeek>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public DateTime StartTime { get; public set; }
    [WriteableAttribute]
public MonthlyScheduleType MonthlyScheduleType { get; public set; }
    [WriteableAttribute]
public string DateOfMonth { get; public set; }
    [WriteableAttribute]
public string DayNumberOfMonth { get; public set; }
    [WriteableAttribute]
public Nullable`1<DayOfWeek> DayOfWeek { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public MonthlyScheduleType get_MonthlyScheduleType();
    [CompilerGeneratedAttribute]
public void set_MonthlyScheduleType(MonthlyScheduleType value);
    [CompilerGeneratedAttribute]
public string get_DateOfMonth();
    [CompilerGeneratedAttribute]
public void set_DateOfMonth(string value);
    [CompilerGeneratedAttribute]
public string get_DayNumberOfMonth();
    [CompilerGeneratedAttribute]
public void set_DayNumberOfMonth(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DayOfWeek> get_DayOfWeek();
    [CompilerGeneratedAttribute]
public void set_DayOfWeek(Nullable`1<DayOfWeek> value);
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.DeployLatestReleaseActionResource : ScopedDeploymentActionResource {
    [CompilerGeneratedAttribute]
private string <Variables>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SourceEnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationEnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldRedeployWhenReleaseIsCurrent>k__BackingField;
    public TriggerActionType ActionType { get; }
    [WriteableAttribute]
public string Variables { get; public set; }
    [WriteableAttribute]
public ReferenceCollection SourceEnvironmentIds { get; public set; }
    [WriteableAttribute]
public string DestinationEnvironmentId { get; public set; }
    [WriteableAttribute]
public bool ShouldRedeployWhenReleaseIsCurrent { get; public set; }
    public virtual TriggerActionType get_ActionType();
    [CompilerGeneratedAttribute]
public string get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_SourceEnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_SourceEnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_DestinationEnvironmentId();
    [CompilerGeneratedAttribute]
public void set_DestinationEnvironmentId(string value);
    [CompilerGeneratedAttribute]
public bool get_ShouldRedeployWhenReleaseIsCurrent();
    [CompilerGeneratedAttribute]
public void set_ShouldRedeployWhenReleaseIsCurrent(bool value);
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.DeployNewReleaseActionResource : ScopedDeploymentActionResource {
    [CompilerGeneratedAttribute]
private string <Variables>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private GitReferenceResource <VersionControlReference>k__BackingField;
    public TriggerActionType ActionType { get; }
    [WriteableAttribute]
public string Variables { get; public set; }
    [WriteableAttribute]
public string EnvironmentId { get; public set; }
    public GitReferenceResource VersionControlReference { get; public set; }
    public virtual TriggerActionType get_ActionType();
    [CompilerGeneratedAttribute]
public string get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(string value);
    [CompilerGeneratedAttribute]
public string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public GitReferenceResource get_VersionControlReference();
    [CompilerGeneratedAttribute]
public void set_VersionControlReference(GitReferenceResource value);
}
public enum Octopus.Client.Model.Triggers.ScheduledTriggers.MonthlyScheduleType : Enum {
    public int value__;
    public static MonthlyScheduleType DateOfMonth;
    public static MonthlyScheduleType DayOfMonth;
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.OnceDailyScheduledTriggerFilterResource : ScheduledTriggerFilterResource {
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DaysOfWeek <DaysOfWeek>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public DateTime StartTime { get; public set; }
    [WriteableAttribute]
public DaysOfWeek DaysOfWeek { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public DaysOfWeek get_DaysOfWeek();
    [CompilerGeneratedAttribute]
public void set_DaysOfWeek(DaysOfWeek value);
}
public abstract class Octopus.Client.Model.Triggers.ScheduledTriggers.ScheduledTriggerFilterResource : TriggerFilterResource {
    [CompilerGeneratedAttribute]
private string <Timezone>k__BackingField;
    [WriteableAttribute]
public string Timezone { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Timezone();
    [CompilerGeneratedAttribute]
public void set_Timezone(string value);
}
public abstract class Octopus.Client.Model.Triggers.ScopedDeploymentActionResource : TriggerActionResource {
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [WriteableAttribute]
public string ChannelId { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
}
public abstract class Octopus.Client.Model.Triggers.TriggerActionResource : Resource {
    public TriggerActionType ActionType { get; }
    public abstract virtual TriggerActionType get_ActionType();
}
public enum Octopus.Client.Model.Triggers.TriggerActionType : Enum {
    public int value__;
    public static TriggerActionType AutoDeploy;
    public static TriggerActionType DeployLatestRelease;
    public static TriggerActionType DeployNewRelease;
    public static TriggerActionType RunRunbook;
}
public abstract class Octopus.Client.Model.Triggers.TriggerFilterResource : Resource {
    public TriggerFilterType FilterType { get; }
    public abstract virtual TriggerFilterType get_FilterType();
}
public enum Octopus.Client.Model.Triggers.TriggerFilterType : Enum {
    public int value__;
    public static TriggerFilterType MachineFilter;
    public static TriggerFilterType OnceDailySchedule;
    public static TriggerFilterType ContinuousDailySchedule;
    public static TriggerFilterType DaysPerMonthSchedule;
    public static TriggerFilterType CronExpressionSchedule;
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.TrimAttribute : Attribute {
}
public class Octopus.Client.Model.UpgradeConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private UpgradeNotificationMode <NotificationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowChecking>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeStatistics>k__BackingField;
    [WriteableAttribute]
public UpgradeNotificationMode NotificationMode { get; public set; }
    [WriteableAttribute]
public bool AllowChecking { get; public set; }
    [WriteableAttribute]
public bool IncludeStatistics { get; public set; }
    [CompilerGeneratedAttribute]
public UpgradeNotificationMode get_NotificationMode();
    [CompilerGeneratedAttribute]
public void set_NotificationMode(UpgradeNotificationMode value);
    [CompilerGeneratedAttribute]
public bool get_AllowChecking();
    [CompilerGeneratedAttribute]
public void set_AllowChecking(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeStatistics();
    [CompilerGeneratedAttribute]
public void set_IncludeStatistics(bool value);
}
public enum Octopus.Client.Model.UpgradeNotificationMode : Enum {
    public int value__;
    public static UpgradeNotificationMode AlwaysShow;
    public static UpgradeNotificationMode ShowOnlyMajorMinor;
    public static UpgradeNotificationMode NeverShow;
}
public class Octopus.Client.Model.UsernamePasswordProjectGitCredentialResource : ProjectGitCredentialResource {
    [CompilerGeneratedAttribute]
private ProjectGitCredentialType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public ProjectGitCredentialType Type { get; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    [CompilerGeneratedAttribute]
public virtual ProjectGitCredentialType get_Type();
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.UserPermissionRestriction : object {
    [CompilerGeneratedAttribute]
private ReferenceCollection <RestrictedToProjectIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <RestrictedToEnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <RestrictedToTenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <RestrictedToProjectGroupIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private static IEqualityComparer`1<UserPermissionRestriction> <UserPermissionRestrictionComparer>k__BackingField;
    public ReferenceCollection RestrictedToProjectIds { get; public set; }
    public ReferenceCollection RestrictedToEnvironmentIds { get; public set; }
    public ReferenceCollection RestrictedToTenantIds { get; public set; }
    public ReferenceCollection RestrictedToProjectGroupIds { get; public set; }
    public string SpaceId { get; public set; }
    public static IEqualityComparer`1<UserPermissionRestriction> UserPermissionRestrictionComparer { get; }
    private static UserPermissionRestriction();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RestrictedToProjectIds();
    [CompilerGeneratedAttribute]
public void set_RestrictedToProjectIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RestrictedToEnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_RestrictedToEnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RestrictedToTenantIds();
    [CompilerGeneratedAttribute]
public void set_RestrictedToTenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RestrictedToProjectGroupIds();
    [CompilerGeneratedAttribute]
public void set_RestrictedToProjectGroupIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_SpaceId();
    [CompilerGeneratedAttribute]
public void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public static IEqualityComparer`1<UserPermissionRestriction> get_UserPermissionRestrictionComparer();
    public virtual string ToString();
}
public class Octopus.Client.Model.UserPermissionSetResource : Resource {
    [CompilerGeneratedAttribute]
private Dictionary`2<Permission, List`1<UserPermissionRestriction>> <SpacePermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Permission> <SystemPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ProjectedTeamReferenceDataItem> <Teams>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTeamsComplete>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPermissionsComplete>k__BackingField;
    public Dictionary`2<Permission, List`1<UserPermissionRestriction>> SpacePermissions { get; public set; }
    public List`1<Permission> SystemPermissions { get; public set; }
    public List`1<ProjectedTeamReferenceDataItem> Teams { get; public set; }
    public bool IsTeamsComplete { get; public set; }
    public bool IsPermissionsComplete { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<Permission, List`1<UserPermissionRestriction>> get_SpacePermissions();
    [CompilerGeneratedAttribute]
public void set_SpacePermissions(Dictionary`2<Permission, List`1<UserPermissionRestriction>> value);
    [CompilerGeneratedAttribute]
public List`1<Permission> get_SystemPermissions();
    [CompilerGeneratedAttribute]
public void set_SystemPermissions(List`1<Permission> value);
    [CompilerGeneratedAttribute]
public List`1<ProjectedTeamReferenceDataItem> get_Teams();
    [CompilerGeneratedAttribute]
public void set_Teams(List`1<ProjectedTeamReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public bool get_IsTeamsComplete();
    [CompilerGeneratedAttribute]
public void set_IsTeamsComplete(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPermissionsComplete();
    [CompilerGeneratedAttribute]
public void set_IsPermissionsComplete(bool value);
}
public class Octopus.Client.Model.UserResource : Resource {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsService>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EmailAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanPasswordBeEdited>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRequestor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityResource[] <Identities>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
[StringLengthAttribute("64")]
public string Username { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
[RequiredAttribute]
[StringLengthAttribute("64")]
public string DisplayName { get; public set; }
    [WriteableAttribute]
public bool IsActive { get; public set; }
    [WriteableOnCreateAttribute]
public bool IsService { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
[StringLengthAttribute("256")]
[DataTypeAttribute("10")]
public string EmailAddress { get; public set; }
    public bool CanPasswordBeEdited { get; public set; }
    public bool IsRequestor { get; public set; }
    [WriteableAttribute]
[PasswordComplexityAttribute]
[NotReadableAttribute]
[JsonPropertyAttribute]
public string Password { get; public set; }
    [WriteableAttribute]
public IdentityResource[] Identities { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsService();
    [CompilerGeneratedAttribute]
public void set_IsService(bool value);
    [CompilerGeneratedAttribute]
public string get_EmailAddress();
    [CompilerGeneratedAttribute]
public void set_EmailAddress(string value);
    [CompilerGeneratedAttribute]
public bool get_CanPasswordBeEdited();
    [CompilerGeneratedAttribute]
public void set_CanPasswordBeEdited(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsRequestor();
    [CompilerGeneratedAttribute]
public void set_IsRequestor(bool value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public IdentityResource[] get_Identities();
    [CompilerGeneratedAttribute]
public void set_Identities(IdentityResource[] value);
}
public class Octopus.Client.Model.UserRoleResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SupportedRestrictions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SpacePermissionDescriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SystemPermissionDescriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Permission> <GrantedSpacePermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Permission> <GrantedSystemPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeDeleted>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    public List`1<string> SupportedRestrictions { get; public set; }
    public List`1<string> SpacePermissionDescriptions { get; public set; }
    public List`1<string> SystemPermissionDescriptions { get; public set; }
    [WriteableAttribute]
public List`1<Permission> GrantedSpacePermissions { get; public set; }
    [WriteableAttribute]
public List`1<Permission> GrantedSystemPermissions { get; public set; }
    public bool CanBeDeleted { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_SupportedRestrictions();
    [CompilerGeneratedAttribute]
public void set_SupportedRestrictions(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_SpacePermissionDescriptions();
    [CompilerGeneratedAttribute]
public void set_SpacePermissionDescriptions(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_SystemPermissionDescriptions();
    [CompilerGeneratedAttribute]
public void set_SystemPermissionDescriptions(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<Permission> get_GrantedSpacePermissions();
    [CompilerGeneratedAttribute]
public void set_GrantedSpacePermissions(List`1<Permission> value);
    [CompilerGeneratedAttribute]
public List`1<Permission> get_GrantedSystemPermissions();
    [CompilerGeneratedAttribute]
public void set_GrantedSystemPermissions(List`1<Permission> value);
    [CompilerGeneratedAttribute]
public bool get_CanBeDeleted();
    [CompilerGeneratedAttribute]
public void set_CanBeDeleted(bool value);
}
public class Octopus.Client.Model.VariablePromptOptions : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <DisplaySettings>k__BackingField;
    public string Label { get; public set; }
    public string Description { get; public set; }
    public bool Required { get; public set; }
    public IDictionary`2<string, string> DisplaySettings { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_DisplaySettings();
    [CompilerGeneratedAttribute]
public void set_DisplaySettings(IDictionary`2<string, string> value);
    public VariablePromptOptions Clone();
}
public class Octopus.Client.Model.VariableResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private VariableType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ScopeSpecification <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEditable>k__BackingField;
    [CompilerGeneratedAttribute]
private VariablePromptOptions <Prompt>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSensitive>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string Description { get; public set; }
    public VariableType Type { get; public set; }
    public ScopeSpecification Scope { get; public set; }
    public bool IsEditable { get; public set; }
    public VariablePromptOptions Prompt { get; public set; }
    public bool IsSensitive { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public VariableType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(VariableType value);
    [CompilerGeneratedAttribute]
public ScopeSpecification get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(ScopeSpecification value);
    [CompilerGeneratedAttribute]
public bool get_IsEditable();
    [CompilerGeneratedAttribute]
public void set_IsEditable(bool value);
    [CompilerGeneratedAttribute]
public VariablePromptOptions get_Prompt();
    [CompilerGeneratedAttribute]
public void set_Prompt(VariablePromptOptions value);
    [CompilerGeneratedAttribute]
public bool get_IsSensitive();
    [CompilerGeneratedAttribute]
public void set_IsSensitive(bool value);
}
public class Octopus.Client.Model.VariableScopeValues : object {
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Machines>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Actions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Channels>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ProcessReferenceDataItem> <Processes>k__BackingField;
    public List`1<ReferenceDataItem> Environments { get; public set; }
    public List`1<ReferenceDataItem> Machines { get; public set; }
    public List`1<ReferenceDataItem> Actions { get; public set; }
    public List`1<ReferenceDataItem> Roles { get; public set; }
    public List`1<ReferenceDataItem> Channels { get; public set; }
    public List`1<ReferenceDataItem> TenantTags { get; public set; }
    public List`1<ProcessReferenceDataItem> Processes { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ReferenceDataItem> get_Environments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environments(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ReferenceDataItem> get_Machines();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Machines(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ReferenceDataItem> get_Actions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Actions(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ReferenceDataItem> get_Roles();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Roles(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ReferenceDataItem> get_Channels();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Channels(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public List`1<ReferenceDataItem> get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public List`1<ProcessReferenceDataItem> get_Processes();
    [CompilerGeneratedAttribute]
public void set_Processes(List`1<ProcessReferenceDataItem> value);
}
public enum Octopus.Client.Model.VariableSetContentType : Enum {
    public int value__;
    public static VariableSetContentType Variables;
    public static VariableSetContentType ScriptModule;
}
public class Octopus.Client.Model.VariableSetResource : Resource {
    [CompilerGeneratedAttribute]
private string <OwnerId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<VariableResource> <Variables>k__BackingField;
    [CompilerGeneratedAttribute]
private VariableScopeValues <ScopeValues>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public string OwnerId { get; public set; }
    public int Version { get; public set; }
    public IList`1<VariableResource> Variables { get; public set; }
    public VariableScopeValues ScopeValues { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OwnerId();
    [CompilerGeneratedAttribute]
public void set_OwnerId(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public IList`1<VariableResource> get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(IList`1<VariableResource> value);
    [CompilerGeneratedAttribute]
public VariableScopeValues get_ScopeValues();
    [CompilerGeneratedAttribute]
public void set_ScopeValues(VariableScopeValues value);
    public VariableSetResource AddOrUpdateVariableValue(string name, string value);
    public VariableSetResource AddOrUpdateVariableValue(string name, string value, string description);
    public VariableSetResource AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope);
    public VariableSetResource AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive);
    public VariableSetResource AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive, string description);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.VariableTemplateContainerEditor`1 : object {
    private TContainer container;
    private static Dictionary`2<string, string> SingleLineTextTemplateDisplaySettings;
    private static Dictionary`2<string, string> MultiLineTextTemplateDisplaySettings;
    private static Dictionary`2<string, string> SensitiveTemplateDisplaySettings;
    public VariableTemplateContainerEditor`1(TContainer container);
    private static VariableTemplateContainerEditor`1();
    public sealed virtual TContainer AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public sealed virtual TContainer AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    private bool IsSensitive(IDictionary`2<string, string> displaySettings);
    private static Dictionary`2<string, string> BuildSelectTemplateDisplaySettings(IDictionary`2<string, string> options);
    public sealed virtual TContainer AddOrUpdateSingleLineTextTemplate(string name, string label);
    public sealed virtual TContainer AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual TContainer AddOrUpdateMultiLineTextTemplate(string name, string label);
    public sealed virtual TContainer AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual TContainer AddOrUpdateSensitiveTemplate(string name, string label);
    public sealed virtual TContainer AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual TContainer AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public sealed virtual TContainer AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
    public sealed virtual TContainer Clear();
}
public enum Octopus.Client.Model.VariableType : Enum {
    public int value__;
    public static VariableType String;
    public static VariableType Sensitive;
    public static VariableType Certificate;
    public static VariableType AmazonWebServicesAccount;
    public static VariableType AzureAccount;
    public static VariableType WorkerPool;
}
public interface Octopus.Client.Model.Versioning.IVersionComparer {
}
public class Octopus.Client.Model.Versioning.StrictSemanticVersion : object {
    internal IEnumerable`1<string> _releaseLabels;
    internal string _metadata;
    internal Version _version;
    public int Major { get; }
    public int Minor { get; }
    public int Patch { get; }
    public IEnumerable`1<string> ReleaseLabels { get; }
    public string Release { get; }
    public bool IsPrerelease { get; }
    public bool HasMetadata { get; }
    public string Metadata { get; }
    public StrictSemanticVersion(StrictSemanticVersion version);
    public StrictSemanticVersion(int major, int minor, int patch);
    public StrictSemanticVersion(int major, int minor, int patch, string releaseLabel);
    public StrictSemanticVersion(int major, int minor, int patch, string releaseLabel, string metadata);
    public StrictSemanticVersion(int major, int minor, int patch, IEnumerable`1<string> releaseLabels, string metadata);
    protected StrictSemanticVersion(Version version, string releaseLabel, string metadata);
    protected StrictSemanticVersion(int major, int minor, int patch, int revision, string releaseLabel, string metadata);
    protected StrictSemanticVersion(int major, int minor, int patch, int revision, IEnumerable`1<string> releaseLabels, string metadata);
    protected StrictSemanticVersion(Version version, IEnumerable`1<string> releaseLabels, string metadata, bool preserveMissingComponents);
    public int get_Major();
    public int get_Minor();
    public int get_Patch();
    public IEnumerable`1<string> get_ReleaseLabels();
    public string get_Release();
    public virtual bool get_IsPrerelease();
    public virtual bool get_HasMetadata();
    public virtual string get_Metadata();
    public virtual string ToNormalizedString();
    public virtual string ToString();
    public virtual string ToString(string format, IFormatProvider formatProvider);
    protected bool TryFormatter(string format, IFormatProvider formatProvider, String& formattedString);
    public virtual int GetHashCode();
    public virtual int CompareTo(object obj);
    public virtual int CompareTo(StrictSemanticVersion other);
    public virtual bool Equals(object obj);
    public virtual bool Equals(StrictSemanticVersion other);
    public virtual bool Equals(StrictSemanticVersion other, VersionComparison versionComparison);
    public virtual int CompareTo(StrictSemanticVersion other, VersionComparison versionComparison);
    public static bool op_Equality(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static bool op_Inequality(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static bool op_LessThan(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static bool op_LessThanOrEqual(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static bool op_GreaterThan(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static bool op_GreaterThanOrEqual(StrictSemanticVersion version1, StrictSemanticVersion version2);
    private static int Compare(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static StrictSemanticVersion Parse(string value);
    public static bool TryParse(string value, StrictSemanticVersion& version);
    internal static bool IsLetterOrDigitOrDash(char c);
    internal static bool IsValid(string s, bool allowLeadingZeros);
    internal static bool IsValidPart(string s, bool allowLeadingZeros);
    internal static bool IsValidPart(Char[] chars, bool allowLeadingZeros);
    internal static Tuple`3<string, String[], string> ParseSections(string value);
    internal static Version NormalizeVersionValue(Version version);
    private static IEnumerable`1<string> ParseReleaseLabels(string releaseLabels);
}
public class Octopus.Client.Model.Versioning.VersionComparer : object {
    private VersionComparison _mode;
    public static IVersionComparer Default;
    public static IVersionComparer Version;
    public static IVersionComparer VersionRelease;
    public static IVersionComparer VersionReleaseMetadata;
    public VersionComparer(VersionComparison versionComparison);
    private static VersionComparer();
    public sealed virtual bool Equals(StrictSemanticVersion x, StrictSemanticVersion y);
    public static int Compare(StrictSemanticVersion version1, StrictSemanticVersion version2, VersionComparison versionComparison);
    public sealed virtual int GetHashCode(StrictSemanticVersion version);
    public sealed virtual int Compare(StrictSemanticVersion x, StrictSemanticVersion y);
    private static int CompareLegacyVersion(SemanticVersion legacyX, SemanticVersion legacyY);
    private static int CompareReleaseLabels(IEnumerable`1<string> version1, IEnumerable`1<string> version2);
    private static int CompareRelease(string version1, string version2);
}
public enum Octopus.Client.Model.Versioning.VersionComparison : Enum {
    public int value__;
    public static VersionComparison Default;
    public static VersionComparison Version;
    public static VersionComparison VersionRelease;
    public static VersionComparison VersionReleaseMetadata;
}
public class Octopus.Client.Model.Versioning.VersionFormatter : object {
    public sealed virtual string Format(string format, object arg, IFormatProvider formatProvider);
    public sealed virtual object GetFormat(Type formatType);
    private static string GetNormalizedString(StrictSemanticVersion version);
    private static string Format(char c, StrictSemanticVersion version);
    private static string FormatVersion(StrictSemanticVersion version);
}
public class Octopus.Client.Model.VersioningStrategyResource : object {
    [CompilerGeneratedAttribute]
private string <Template>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentActionPackageResource <DonorPackage>k__BackingField;
    [JsonExtensionDataAttribute]
private IDictionary`2<string, JToken> additionalData;
    public string Template { get; public set; }
    public DeploymentActionPackageResource DonorPackage { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(string value);
    [CompilerGeneratedAttribute]
public DeploymentActionPackageResource get_DonorPackage();
    [CompilerGeneratedAttribute]
public void set_DonorPackage(DeploymentActionPackageResource value);
    [OnDeserializedAttribute]
private void OnDeserialized(StreamingContext context);
    [OnSerializingAttribute]
private void OnSerializing(StreamingContext context);
}
public class Octopus.Client.Model.WebPortalConfigResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private WebPortalSecurityResource <Security>k__BackingField;
    public string Id { get; public set; }
    public LinkCollection Links { get; public set; }
    public WebPortalSecurityResource Security { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
    [CompilerGeneratedAttribute]
public WebPortalSecurityResource get_Security();
    [CompilerGeneratedAttribute]
public void set_Security(WebPortalSecurityResource value);
}
public class Octopus.Client.Model.WebPortalSecurityResource : object {
    [CompilerGeneratedAttribute]
private string <CorsWhitelist>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReferrerPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ContentSecurityPolicyEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HttpStrictTransportSecurityEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HttpStrictTransportSecurityMaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private XOptionsResource <XOptions>k__BackingField;
    [WriteableAttribute]
public string CorsWhitelist { get; public set; }
    [WriteableAttribute]
public string ReferrerPolicy { get; public set; }
    [WriteableAttribute]
public bool ContentSecurityPolicyEnabled { get; public set; }
    [WriteableAttribute]
public bool HttpStrictTransportSecurityEnabled { get; public set; }
    [WriteableAttribute]
[RequiredAttribute]
public long HttpStrictTransportSecurityMaxAge { get; public set; }
    public XOptionsResource XOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CorsWhitelist();
    [CompilerGeneratedAttribute]
public void set_CorsWhitelist(string value);
    [CompilerGeneratedAttribute]
public string get_ReferrerPolicy();
    [CompilerGeneratedAttribute]
public void set_ReferrerPolicy(string value);
    [CompilerGeneratedAttribute]
public bool get_ContentSecurityPolicyEnabled();
    [CompilerGeneratedAttribute]
public void set_ContentSecurityPolicyEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_HttpStrictTransportSecurityEnabled();
    [CompilerGeneratedAttribute]
public void set_HttpStrictTransportSecurityEnabled(bool value);
    [CompilerGeneratedAttribute]
public long get_HttpStrictTransportSecurityMaxAge();
    [CompilerGeneratedAttribute]
public void set_HttpStrictTransportSecurityMaxAge(long value);
    [CompilerGeneratedAttribute]
public XOptionsResource get_XOptions();
    [CompilerGeneratedAttribute]
public void set_XOptions(XOptionsResource value);
}
public class Octopus.Client.Model.WorkerPoolResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkerPoolType <WorkerPoolType>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public bool IsDefault { get; public set; }
    [WriteableAttribute]
public int SortOrder { get; public set; }
    public string SpaceId { get; public set; }
    public WorkerPoolType WorkerPoolType { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public WorkerPoolType get_WorkerPoolType();
    [CompilerGeneratedAttribute]
public void set_WorkerPoolType(WorkerPoolType value);
}
public class Octopus.Client.Model.WorkerPoolsSummaryResource : SummaryResourcesCombined {
    [CompilerGeneratedAttribute]
private List`1<WorkerPoolSummaryResource> <WorkerPoolSummaries>k__BackingField;
    public List`1<WorkerPoolSummaryResource> WorkerPoolSummaries { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<WorkerPoolSummaryResource> get_WorkerPoolSummaries();
    [CompilerGeneratedAttribute]
public void set_WorkerPoolSummaries(List`1<WorkerPoolSummaryResource> value);
}
public class Octopus.Client.Model.WorkerPoolSummaryResource : SummaryResource {
    [CompilerGeneratedAttribute]
private WorkerPoolResource <WorkerPool>k__BackingField;
    public WorkerPoolResource WorkerPool { get; public set; }
    [CompilerGeneratedAttribute]
public WorkerPoolResource get_WorkerPool();
    [CompilerGeneratedAttribute]
public void set_WorkerPool(WorkerPoolResource value);
}
public enum Octopus.Client.Model.WorkerPoolType : Enum {
    public int value__;
    public static WorkerPoolType StaticWorkerPool;
    public static WorkerPoolType DynamicWorkerPool;
}
public class Octopus.Client.Model.WorkerResource : MachineBasedResource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <WorkerPoolIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public ReferenceCollection WorkerPoolIds { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceCollection get_WorkerPoolIds();
    [CompilerGeneratedAttribute]
public void set_WorkerPoolIds(ReferenceCollection value);
    public WorkerResource AddOrUpdateWorkerPools(WorkerPoolResource[] pools);
    public WorkerResource RemoveWorkerPool(WorkerPoolResource pool);
    public WorkerResource ClearWorkerPools();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.XOptionsResource : object {
    public static string XFrameAllowFromDescription;
    public static string XFrameOptionsDescription;
    [CompilerGeneratedAttribute]
private string <XFrameOptionAllowFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private string <XFrameOptions>k__BackingField;
    [WriteableAttribute]
public string XFrameOptionAllowFrom { get; public set; }
    [WriteableAttribute]
public string XFrameOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_XFrameOptionAllowFrom();
    [CompilerGeneratedAttribute]
public void set_XFrameOptionAllowFrom(string value);
    [CompilerGeneratedAttribute]
public string get_XFrameOptions();
    [CompilerGeneratedAttribute]
public void set_XFrameOptions(string value);
}
public class Octopus.Client.OctopusAsyncClient : object {
    private static ILog Logger;
    private OctopusServerEndpoint serverEndpoint;
    private JsonSerializerSettings defaultJsonSerializerSettings;
    private ResourceSelfLinkExtractor resourceSelfLinkExtractor;
    private HttpClient client;
    private CookieContainer cookieContainer;
    private Uri cookieOriginUri;
    private bool ignoreSslErrors;
    private bool ignoreSslErrorMessageLogged;
    private string antiforgeryCookieName;
    private IHttpRouteExtractor httpRouteExtractor;
    [CompilerGeneratedAttribute]
private Action`1<HttpRequestMessage> BeforeSendingHttpRequest;
    [CompilerGeneratedAttribute]
private Action`1<HttpResponseMessage> AfterReceivedHttpResponse;
    [CompilerGeneratedAttribute]
private Action`1<OctopusRequest> SendingOctopusRequest;
    [CompilerGeneratedAttribute]
private Action`1<OctopusResponse> ReceivedOctopusResponse;
    [CompilerGeneratedAttribute]
private IOctopusAsyncRepository <Repository>k__BackingField;
    public bool IsUsingSecureConnection { get; }
    public RootResource RootDocument { get; }
    public IOctopusAsyncRepository Repository { get; protected set; }
    protected OctopusAsyncClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options, bool addCertificateCallback, string requestingTool, IHttpRouteExtractor httpRouteExtractor);
    private static OctopusAsyncClient();
    private Uri BuildCookieUri(OctopusServerEndpoint octopusServerEndpoint);
    private bool IgnoreServerCertificateCallback(HttpRequestMessage message, X509Certificate2 certificate, X509Chain chain, SslPolicyErrors errors);
    public sealed virtual IOctopusSpaceAsyncRepository ForSpace(SpaceResource space);
    public sealed virtual IOctopusSystemAsyncRepository ForSystem();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Do>d__16`2")]
public sealed virtual Task`1<TResponse> Do(ICommand`2<TCommand, TResponse> command, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Request>d__17`2")]
public sealed virtual Task`1<TResponse> Request(IRequest`2<TRequest, TResponse> request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Send>d__18`1")]
private Task`1<TResponse> Send(HttpMethod method, Uri relativeRoute, object payload, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Create>d__19")]
public static Task`1<IOctopusAsyncClient> Create(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Create>d__20")]
internal static Task`1<IOctopusAsyncClient> Create(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options, string requestingTool);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Create>d__21")]
private static Task`1<IOctopusAsyncClient> Create(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options, bool addHandler, string requestingTool);
    public sealed virtual bool get_IsUsingSecureConnection();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<SignIn>d__24")]
public sealed virtual Task SignIn(LoginCommand loginCommand);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<SignOut>d__25")]
public sealed virtual Task SignOut();
    [CompilerGeneratedAttribute]
public sealed virtual void add_BeforeSendingHttpRequest(Action`1<HttpRequestMessage> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_BeforeSendingHttpRequest(Action`1<HttpRequestMessage> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_AfterReceivedHttpResponse(Action`1<HttpResponseMessage> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_AfterReceivedHttpResponse(Action`1<HttpResponseMessage> value);
    public sealed virtual RootResource get_RootDocument();
    [CompilerGeneratedAttribute]
public sealed virtual void add_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Get>d__40`1")]
public sealed virtual Task`1<TResource> Get(string path, object pathParameters);
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusAsyncRepository get_Repository();
    [CompilerGeneratedAttribute]
protected void set_Repository(IOctopusAsyncRepository value);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<List>d__45`1")]
public sealed virtual Task`1<ResourceCollection`1<TResource>> List(string path, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<ListAll>d__46`1")]
public sealed virtual Task`1<IReadOnlyList`1<TResource>> ListAll(string path, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Paginate>d__47`1")]
public sealed virtual Task Paginate(string path, object pathParameters, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public sealed virtual Task Paginate(string path, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Create>d__49`1")]
public sealed virtual Task`1<TResource> Create(string path, TResource resource, object pathParameters);
    public sealed virtual Task Post(string path, TResource resource, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Post>d__51`2")]
public sealed virtual Task`1<TResponse> Post(string path, TResource resource, object pathParameters);
    public sealed virtual Task Post(string path);
    public sealed virtual Task Put(string path, TResource resource);
    public sealed virtual Task Put(string path);
    public sealed virtual Task Put(string path, TResource resource, object pathParameters);
    public sealed virtual Task Delete(string path, object pathParameters, object resource);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Update>d__57`1")]
public sealed virtual Task`1<TResource> Update(string path, TResource resource, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<GetContent>d__58")]
public sealed virtual Task`1<Stream> GetContent(string path, object pathParameters);
    public sealed virtual Task PutContent(string path, Stream contentStream);
    public sealed virtual Uri QualifyUri(string path, object parameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<DispatchRequest>d__61`1")]
protected virtual Task`1<OctopusResponse`1<TResponseResource>> DispatchRequest(OctopusRequest request, bool readResponse, CancellationToken cancellationToken);
    private HttpContent GetContent(OctopusRequest request);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<ReadResponse>d__63`1")]
private Task`1<T> ReadResponse(HttpResponseMessage response);
    private void ValidateSpaceId(SpaceResource space);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private bool <DispatchRequest>b__61_0(Cookie c);
}
public class Octopus.Client.OctopusAsyncRepository : object {
    internal static int SecondsToWaitForServerToStart;
    private Lazy`1<Task`1<RootResource>> loadRootResource;
    private Lazy`1<Task`1<SpaceRootResource>> loadSpaceRootResource;
    private static string rootDocumentUri;
    [CompilerGeneratedAttribute]
private IOctopusAsyncClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private RepositoryScope <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private IAccountRepository <Accounts>k__BackingField;
    [CompilerGeneratedAttribute]
private IActionTemplateRepository <ActionTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IArtifactRepository <Artifacts>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackupRepository <Backups>k__BackingField;
    [CompilerGeneratedAttribute]
private IBuiltInPackageRepositoryRepository <BuiltInPackageRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private IBuildInformationRepository <BuildInformationRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private ICertificateConfigurationRepository <CertificateConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private ICertificateRepository <Certificates>k__BackingField;
    [CompilerGeneratedAttribute]
private IChannelRepository <Channels>k__BackingField;
    [CompilerGeneratedAttribute]
private ICommunityActionTemplateRepository <CommunityActionTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfigurationRepository <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private IDashboardConfigurationRepository <DashboardConfigurations>k__BackingField;
    [CompilerGeneratedAttribute]
private IDashboardRepository <Dashboards>k__BackingField;
    [CompilerGeneratedAttribute]
private IDefectsRepository <Defects>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentProcessRepository <DeploymentProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentSettingsRepository <DeploymentSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentRepository <Deployments>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnvironmentRepository <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private IEventRepository <Events>k__BackingField;
    [CompilerGeneratedAttribute]
private IFeaturesConfigurationRepository <FeaturesConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IFeedRepository <Feeds>k__BackingField;
    [CompilerGeneratedAttribute]
private IGitCredentialRepository <GitCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IInterruptionRepository <Interruptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ILibraryVariableSetRepository <LibraryVariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ILicensesRepository <Licenses>k__BackingField;
    [CompilerGeneratedAttribute]
private ILifecyclesRepository <Lifecycles>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachinePolicyRepository <MachinePolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachineRepository <Machines>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachineRoleRepository <MachineRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IMigrationRepository <Migrations>k__BackingField;
    [CompilerGeneratedAttribute]
private IOctopusServerNodeRepository <OctopusServerNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private IPerformanceConfigurationRepository <PerformanceConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IPackageMetadataRepository <PackageMetadataRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectGroupRepository <ProjectGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectRepository <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookRepository <Runbooks>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookProcessRepository <RunbookProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookSnapshotRepository <RunbookSnapshots>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookRunRepository <RunbookRuns>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectTriggerRepository <ProjectTriggers>k__BackingField;
    [CompilerGeneratedAttribute]
private IProxyRepository <Proxies>k__BackingField;
    [CompilerGeneratedAttribute]
private IReleaseRepository <Releases>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetentionPolicyRepository <RetentionPolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchedulerRepository <Schedulers>k__BackingField;
    [CompilerGeneratedAttribute]
private IServerStatusRepository <ServerStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpaceRepository <Spaces>k__BackingField;
    [CompilerGeneratedAttribute]
private ISubscriptionRepository <Subscriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ITagSetRepository <TagSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskRepository <Tasks>k__BackingField;
    [CompilerGeneratedAttribute]
private ITeamsRepository <Teams>k__BackingField;
    [CompilerGeneratedAttribute]
private ITenantRepository <Tenants>k__BackingField;
    [CompilerGeneratedAttribute]
private ITenantVariablesRepository <TenantVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserInvitesRepository <UserInvites>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserRepository <Users>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserRolesRepository <UserRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IVariableSetRepository <VariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private IWorkerPoolRepository <WorkerPools>k__BackingField;
    [CompilerGeneratedAttribute]
private IWorkerRepository <Workers>k__BackingField;
    [CompilerGeneratedAttribute]
private IScopedUserRoleRepository <ScopedUserRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserPermissionsRepository <UserPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserTeamsRepository <UserTeams>k__BackingField;
    [CompilerGeneratedAttribute]
private IUpgradeConfigurationRepository <UpgradeConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private ITelemetryConfigurationRepository <TelemetryConfigurationRepository>k__BackingField;
    public IOctopusAsyncClient Client { get; }
    public RepositoryScope Scope { get; private set; }
    public IAccountRepository Accounts { get; }
    public IActionTemplateRepository ActionTemplates { get; }
    public IArtifactRepository Artifacts { get; }
    public IBackupRepository Backups { get; }
    public IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    public IBuildInformationRepository BuildInformationRepository { get; }
    public ICertificateConfigurationRepository CertificateConfiguration { get; }
    public ICertificateRepository Certificates { get; }
    public IChannelRepository Channels { get; }
    public ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    public IConfigurationRepository Configuration { get; }
    public IDashboardConfigurationRepository DashboardConfigurations { get; }
    public IDashboardRepository Dashboards { get; }
    public IDefectsRepository Defects { get; }
    public IDeploymentProcessRepository DeploymentProcesses { get; }
    public IDeploymentSettingsRepository DeploymentSettings { get; }
    public IDeploymentRepository Deployments { get; }
    public IEnvironmentRepository Environments { get; }
    public IEventRepository Events { get; }
    public IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    public IFeedRepository Feeds { get; }
    public IGitCredentialRepository GitCredentials { get; }
    public IInterruptionRepository Interruptions { get; }
    public ILibraryVariableSetRepository LibraryVariableSets { get; }
    public ILicensesRepository Licenses { get; }
    public ILifecyclesRepository Lifecycles { get; }
    public IMachinePolicyRepository MachinePolicies { get; }
    public IMachineRepository Machines { get; }
    public IMachineRoleRepository MachineRoles { get; }
    public IMigrationRepository Migrations { get; }
    public IOctopusServerNodeRepository OctopusServerNodes { get; }
    public IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    public IPackageMetadataRepository PackageMetadataRepository { get; }
    public IProjectGroupRepository ProjectGroups { get; }
    public IProjectRepository Projects { get; }
    public IRunbookRepository Runbooks { get; }
    public IRunbookProcessRepository RunbookProcesses { get; }
    public IRunbookSnapshotRepository RunbookSnapshots { get; }
    public IRunbookRunRepository RunbookRuns { get; }
    public IProjectTriggerRepository ProjectTriggers { get; }
    public IProxyRepository Proxies { get; }
    public IReleaseRepository Releases { get; }
    public IRetentionPolicyRepository RetentionPolicies { get; }
    public ISchedulerRepository Schedulers { get; }
    public IServerStatusRepository ServerStatus { get; }
    public ISpaceRepository Spaces { get; }
    public ISubscriptionRepository Subscriptions { get; }
    public ITagSetRepository TagSets { get; }
    public ITaskRepository Tasks { get; }
    public ITeamsRepository Teams { get; }
    public ITenantRepository Tenants { get; }
    public ITenantVariablesRepository TenantVariables { get; }
    public IUserInvitesRepository UserInvites { get; }
    public IUserRepository Users { get; }
    public IUserRolesRepository UserRoles { get; }
    public IVariableSetRepository VariableSets { get; }
    public IWorkerPoolRepository WorkerPools { get; }
    public IWorkerRepository Workers { get; }
    public IScopedUserRoleRepository ScopedUserRoles { get; }
    public IUserPermissionsRepository UserPermissions { get; }
    public IUserTeamsRepository UserTeams { get; }
    public IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    public ITelemetryConfigurationRepository TelemetryConfigurationRepository { get; }
    public OctopusAsyncRepository(IOctopusAsyncClient client, RepositoryScope repositoryScope);
    private static OctopusAsyncRepository();
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusAsyncClient get_Client();
    [CompilerGeneratedAttribute]
public sealed virtual RepositoryScope get_Scope();
    [CompilerGeneratedAttribute]
private void set_Scope(RepositoryScope value);
    [CompilerGeneratedAttribute]
public sealed virtual IAccountRepository get_Accounts();
    [CompilerGeneratedAttribute]
public sealed virtual IActionTemplateRepository get_ActionTemplates();
    [CompilerGeneratedAttribute]
public sealed virtual IArtifactRepository get_Artifacts();
    [CompilerGeneratedAttribute]
public sealed virtual IBackupRepository get_Backups();
    [CompilerGeneratedAttribute]
public sealed virtual IBuiltInPackageRepositoryRepository get_BuiltInPackageRepository();
    [CompilerGeneratedAttribute]
public sealed virtual IBuildInformationRepository get_BuildInformationRepository();
    [CompilerGeneratedAttribute]
public sealed virtual ICertificateConfigurationRepository get_CertificateConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual ICertificateRepository get_Certificates();
    [CompilerGeneratedAttribute]
public sealed virtual IChannelRepository get_Channels();
    [CompilerGeneratedAttribute]
public sealed virtual ICommunityActionTemplateRepository get_CommunityActionTemplates();
    [CompilerGeneratedAttribute]
public sealed virtual IConfigurationRepository get_Configuration();
    [CompilerGeneratedAttribute]
public sealed virtual IDashboardConfigurationRepository get_DashboardConfigurations();
    [CompilerGeneratedAttribute]
public sealed virtual IDashboardRepository get_Dashboards();
    [CompilerGeneratedAttribute]
public sealed virtual IDefectsRepository get_Defects();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentProcessRepository get_DeploymentProcesses();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentSettingsRepository get_DeploymentSettings();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentRepository get_Deployments();
    [CompilerGeneratedAttribute]
public sealed virtual IEnvironmentRepository get_Environments();
    [CompilerGeneratedAttribute]
public sealed virtual IEventRepository get_Events();
    [CompilerGeneratedAttribute]
public sealed virtual IFeaturesConfigurationRepository get_FeaturesConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual IFeedRepository get_Feeds();
    [CompilerGeneratedAttribute]
public sealed virtual IGitCredentialRepository get_GitCredentials();
    [CompilerGeneratedAttribute]
public sealed virtual IInterruptionRepository get_Interruptions();
    [CompilerGeneratedAttribute]
public sealed virtual ILibraryVariableSetRepository get_LibraryVariableSets();
    [CompilerGeneratedAttribute]
public sealed virtual ILicensesRepository get_Licenses();
    [CompilerGeneratedAttribute]
public sealed virtual ILifecyclesRepository get_Lifecycles();
    [CompilerGeneratedAttribute]
public sealed virtual IMachinePolicyRepository get_MachinePolicies();
    [CompilerGeneratedAttribute]
public sealed virtual IMachineRepository get_Machines();
    [CompilerGeneratedAttribute]
public sealed virtual IMachineRoleRepository get_MachineRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IMigrationRepository get_Migrations();
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusServerNodeRepository get_OctopusServerNodes();
    [CompilerGeneratedAttribute]
public sealed virtual IPerformanceConfigurationRepository get_PerformanceConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual IPackageMetadataRepository get_PackageMetadataRepository();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectGroupRepository get_ProjectGroups();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectRepository get_Projects();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookRepository get_Runbooks();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookProcessRepository get_RunbookProcesses();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookSnapshotRepository get_RunbookSnapshots();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookRunRepository get_RunbookRuns();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectTriggerRepository get_ProjectTriggers();
    [CompilerGeneratedAttribute]
public sealed virtual IProxyRepository get_Proxies();
    [CompilerGeneratedAttribute]
public sealed virtual IReleaseRepository get_Releases();
    [CompilerGeneratedAttribute]
public sealed virtual IRetentionPolicyRepository get_RetentionPolicies();
    [CompilerGeneratedAttribute]
public sealed virtual ISchedulerRepository get_Schedulers();
    [CompilerGeneratedAttribute]
public sealed virtual IServerStatusRepository get_ServerStatus();
    [CompilerGeneratedAttribute]
public sealed virtual ISpaceRepository get_Spaces();
    [CompilerGeneratedAttribute]
public sealed virtual ISubscriptionRepository get_Subscriptions();
    [CompilerGeneratedAttribute]
public sealed virtual ITagSetRepository get_TagSets();
    [CompilerGeneratedAttribute]
public sealed virtual ITaskRepository get_Tasks();
    [CompilerGeneratedAttribute]
public sealed virtual ITeamsRepository get_Teams();
    [CompilerGeneratedAttribute]
public sealed virtual ITenantRepository get_Tenants();
    [CompilerGeneratedAttribute]
public sealed virtual ITenantVariablesRepository get_TenantVariables();
    [CompilerGeneratedAttribute]
public sealed virtual IUserInvitesRepository get_UserInvites();
    [CompilerGeneratedAttribute]
public sealed virtual IUserRepository get_Users();
    [CompilerGeneratedAttribute]
public sealed virtual IUserRolesRepository get_UserRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IVariableSetRepository get_VariableSets();
    [CompilerGeneratedAttribute]
public sealed virtual IWorkerPoolRepository get_WorkerPools();
    [CompilerGeneratedAttribute]
public sealed virtual IWorkerRepository get_Workers();
    [CompilerGeneratedAttribute]
public sealed virtual IScopedUserRoleRepository get_ScopedUserRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IUserPermissionsRepository get_UserPermissions();
    [CompilerGeneratedAttribute]
public sealed virtual IUserTeamsRepository get_UserTeams();
    [CompilerGeneratedAttribute]
public sealed virtual IUpgradeConfigurationRepository get_UpgradeConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual ITelemetryConfigurationRepository get_TelemetryConfigurationRepository();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<HasLink>d__201")]
public sealed virtual Task`1<bool> HasLink(string name);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<HasLinkParameter>d__202")]
public sealed virtual Task`1<bool> HasLinkParameter(string linkName, string parameterName);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<Link>d__203")]
public sealed virtual Task`1<string> Link(string name);
    public sealed virtual Task`1<RootResource> LoadRootDocument();
    public sealed virtual Task`1<SpaceRootResource> LoadSpaceRootDocument();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<LoadRootDocumentInner>d__206")]
private Task`1<RootResource> LoadRootDocumentInner();
    private Task`1<SpaceRootResource> LoadSpaceRootDocumentInner();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<<LoadSpaceRootDocumentInner>b__207_1>d")]
[CompilerGeneratedAttribute]
private Task`1<SpaceRootResource> <LoadSpaceRootDocumentInner>b__207_1();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<<LoadSpaceRootDocumentInner>g__LoadSpaceRootResourceFor|207_2>d")]
[CompilerGeneratedAttribute]
private Task`1<SpaceRootResource> <LoadSpaceRootDocumentInner>g__LoadSpaceRootResourceFor|207_2(SpaceResource space);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<<LoadSpaceRootDocumentInner>g__TryGetDefaultSpace|207_3>d")]
[CompilerGeneratedAttribute]
private Task`1<SpaceResource> <LoadSpaceRootDocumentInner>g__TryGetDefaultSpace|207_3();
}
public class Octopus.Client.OctopusClient : object {
    private static ILog Logger;
    private OctopusServerEndpoint serverEndpoint;
    private CookieContainer cookieContainer;
    private Uri cookieOriginUri;
    private JsonSerializerSettings defaultJsonSerializerSettings;
    private ResourceSelfLinkExtractor resourceSelfLinkExtractor;
    private OctopusCustomHeaders octopusCustomHeaders;
    private string antiforgeryCookieName;
    private IHttpRouteExtractor httpRouteExtractor;
    [CompilerGeneratedAttribute]
private IOctopusRepository <Repository>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<WebRequest> BeforeSendingHttpRequest;
    [CompilerGeneratedAttribute]
private Action`1<WebResponse> AfterReceivingHttpResponse;
    [CompilerGeneratedAttribute]
private Action`1<OctopusRequest> SendingOctopusRequest;
    [CompilerGeneratedAttribute]
private Action`1<OctopusResponse> ReceivedOctopusResponse;
    public RootResource RootDocument { get; }
    public IOctopusRepository Repository { get; private set; }
    public bool IsUsingSecureConnection { get; }
    public OctopusClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
    internal OctopusClient(OctopusServerEndpoint serverEndpoint, string requestingTool, OctopusClientOptions options);
    private static OctopusClient();
    public sealed virtual RootResource get_RootDocument();
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusRepository get_Repository();
    [CompilerGeneratedAttribute]
private void set_Repository(IOctopusRepository value);
    public sealed virtual bool get_IsUsingSecureConnection();
    public sealed virtual IOctopusSpaceRepository ForSpace(SpaceResource space);
    public sealed virtual IOctopusSystemRepository ForSystem();
    public sealed virtual TResponse Do(ICommand`2<TCommand, TResponse> command, CancellationToken cancellationToken);
    public sealed virtual TResponse Request(IRequest`2<TRequest, TResponse> request, CancellationToken cancellationToken);
    private TResponse Send(HttpMethod method, Uri relativeRoute, object payload, CancellationToken cancellationToken);
    public sealed virtual void SignIn(LoginCommand loginCommand);
    public sealed virtual void SignOut();
    [CompilerGeneratedAttribute]
public sealed virtual void add_BeforeSendingHttpRequest(Action`1<WebRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_BeforeSendingHttpRequest(Action`1<WebRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_AfterReceivingHttpResponse(Action`1<WebResponse> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_AfterReceivingHttpResponse(Action`1<WebResponse> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    public void Initialize();
    private Uri BuildCookieUri(OctopusServerEndpoint octopusServerEndpoint);
    public sealed virtual TResource Get(string path, object pathParameters);
    public sealed virtual ResourceCollection`1<TResource> List(string path, object pathParameters);
    public sealed virtual IReadOnlyList`1<TResource> ListAll(string path, object pathParameters);
    public sealed virtual void Paginate(string path, object pathParameters, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public sealed virtual void Paginate(string path, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public sealed virtual TResource Create(string path, TResource resource, object pathParameters);
    public sealed virtual void Post(string path, TResource resource, object pathParameters);
    public sealed virtual TResponse Post(string path, TResource resource, object pathParameters);
    public sealed virtual void Post(string path);
    public sealed virtual void Put(string path, TResource resource);
    public sealed virtual void Put(string path);
    public sealed virtual void Put(string path, TResource resource, object pathParameters);
    public sealed virtual void Delete(string path, object pathParameters, object resource);
    public sealed virtual TResource Update(string path, TResource resource, object pathParameters);
    public sealed virtual Stream GetContent(string path, object pathParameters);
    public sealed virtual void PutContent(string path, Stream contentStream);
    public sealed virtual Uri QualifyUri(string path, object parameters);
    protected virtual OctopusResponse`1<TResponseResource> DispatchRequest(OctopusRequest request, bool readResponse);
    public sealed virtual void Dispose();
    private void ValidateSpaceId(SpaceResource space);
    [CompilerGeneratedAttribute]
private bool <DispatchRequest>b__57_0(Cookie c);
}
public class Octopus.Client.OctopusClientFactory : object {
    public sealed virtual IOctopusClient CreateClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
    public sealed virtual Task`1<IOctopusAsyncClient> CreateAsyncClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
    private string DetermineRequestingTool();
}
public class Octopus.Client.OctopusClientOptions : object {
    [CompilerGeneratedAttribute]
private SslProtocols <SslProtocols>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreSslErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowDefaultProxy>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<Type[]> <ScanForHttpRouteTypes>k__BackingField;
    public SslProtocols SslProtocols { get; public set; }
    public bool IgnoreSslErrors { get; public set; }
    public TimeSpan Timeout { get; public set; }
    public string Proxy { get; public set; }
    public string ProxyUsername { get; public set; }
    public string ProxyPassword { get; public set; }
    public bool AllowDefaultProxy { get; public set; }
    public Func`1<Type[]> ScanForHttpRouteTypes { get; public set; }
    [CompilerGeneratedAttribute]
public SslProtocols get_SslProtocols();
    [CompilerGeneratedAttribute]
public void set_SslProtocols(SslProtocols value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreSslErrors();
    [CompilerGeneratedAttribute]
public void set_IgnoreSslErrors(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public string get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(string value);
    [CompilerGeneratedAttribute]
public string get_ProxyUsername();
    [CompilerGeneratedAttribute]
public void set_ProxyUsername(string value);
    [CompilerGeneratedAttribute]
public string get_ProxyPassword();
    [CompilerGeneratedAttribute]
public void set_ProxyPassword(string value);
    [CompilerGeneratedAttribute]
public bool get_AllowDefaultProxy();
    [CompilerGeneratedAttribute]
public void set_AllowDefaultProxy(bool value);
    [CompilerGeneratedAttribute]
public Func`1<Type[]> get_ScanForHttpRouteTypes();
    [CompilerGeneratedAttribute]
public void set_ScanForHttpRouteTypes(Func`1<Type[]> value);
}
public class Octopus.Client.OctopusRepository : object {
    private Lazy`1<RootResource> loadRootResource;
    private Lazy`1<SpaceRootResource> loadSpaceRootResource;
    [CompilerGeneratedAttribute]
private IOctopusClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private RepositoryScope <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private IAccountRepository <Accounts>k__BackingField;
    [CompilerGeneratedAttribute]
private IActionTemplateRepository <ActionTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IArtifactRepository <Artifacts>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackupRepository <Backups>k__BackingField;
    [CompilerGeneratedAttribute]
private IBuiltInPackageRepositoryRepository <BuiltInPackageRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private IBuildInformationRepository <BuildInformationRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private ICertificateConfigurationRepository <CertificateConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private ICertificateRepository <Certificates>k__BackingField;
    [CompilerGeneratedAttribute]
private IChannelRepository <Channels>k__BackingField;
    [CompilerGeneratedAttribute]
private ICommunityActionTemplateRepository <CommunityActionTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfigurationRepository <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private IDashboardConfigurationRepository <DashboardConfigurations>k__BackingField;
    [CompilerGeneratedAttribute]
private IDashboardRepository <Dashboards>k__BackingField;
    [CompilerGeneratedAttribute]
private IDefectsRepository <Defects>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentProcessRepository <DeploymentProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentSettingsRepository <DeploymentSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentRepository <Deployments>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnvironmentRepository <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private IEventRepository <Events>k__BackingField;
    [CompilerGeneratedAttribute]
private IFeaturesConfigurationRepository <FeaturesConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IFeedRepository <Feeds>k__BackingField;
    [CompilerGeneratedAttribute]
private IInterruptionRepository <Interruptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ILibraryVariableSetRepository <LibraryVariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ILifecyclesRepository <Lifecycles>k__BackingField;
    [CompilerGeneratedAttribute]
private ILicensesRepository <Licenses>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachinePolicyRepository <MachinePolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachineRepository <Machines>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachineRoleRepository <MachineRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IMigrationRepository <Migrations>k__BackingField;
    [CompilerGeneratedAttribute]
private IOctopusServerNodeRepository <OctopusServerNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private IPerformanceConfigurationRepository <PerformanceConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IPackageMetadataRepository <PackageMetadataRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectGroupRepository <ProjectGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectRepository <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookRepository <Runbooks>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookProcessRepository <RunbookProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookSnapshotRepository <RunbookSnapshots>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookRunRepository <RunbookRuns>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectTriggerRepository <ProjectTriggers>k__BackingField;
    [CompilerGeneratedAttribute]
private IProxyRepository <Proxies>k__BackingField;
    [CompilerGeneratedAttribute]
private IReleaseRepository <Releases>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetentionPolicyRepository <RetentionPolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchedulerRepository <Schedulers>k__BackingField;
    [CompilerGeneratedAttribute]
private IServerStatusRepository <ServerStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpaceRepository <Spaces>k__BackingField;
    [CompilerGeneratedAttribute]
private ISubscriptionRepository <Subscriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ITagSetRepository <TagSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskRepository <Tasks>k__BackingField;
    [CompilerGeneratedAttribute]
private ITeamsRepository <Teams>k__BackingField;
    [CompilerGeneratedAttribute]
private ITenantRepository <Tenants>k__BackingField;
    [CompilerGeneratedAttribute]
private ITenantVariablesRepository <TenantVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserInvitesRepository <UserInvites>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserRepository <Users>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserRolesRepository <UserRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IVariableSetRepository <VariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private IWorkerPoolRepository <WorkerPools>k__BackingField;
    [CompilerGeneratedAttribute]
private IWorkerRepository <Workers>k__BackingField;
    [CompilerGeneratedAttribute]
private IScopedUserRoleRepository <ScopedUserRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserPermissionsRepository <UserPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserTeamsRepository <UserTeams>k__BackingField;
    [CompilerGeneratedAttribute]
private IUpgradeConfigurationRepository <UpgradeConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private ITelemetryConfigurationRepository <TelemetryConfigurationRepository>k__BackingField;
    public IOctopusClient Client { get; }
    public RepositoryScope Scope { get; }
    public IAccountRepository Accounts { get; }
    public IActionTemplateRepository ActionTemplates { get; }
    public IArtifactRepository Artifacts { get; }
    public IBackupRepository Backups { get; }
    public IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    public IBuildInformationRepository BuildInformationRepository { get; }
    public ICertificateConfigurationRepository CertificateConfiguration { get; }
    public ICertificateRepository Certificates { get; }
    public IChannelRepository Channels { get; }
    public ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    public IConfigurationRepository Configuration { get; }
    public IDashboardConfigurationRepository DashboardConfigurations { get; }
    public IDashboardRepository Dashboards { get; }
    public IDefectsRepository Defects { get; }
    public IDeploymentProcessRepository DeploymentProcesses { get; }
    public IDeploymentSettingsRepository DeploymentSettings { get; }
    public IDeploymentRepository Deployments { get; }
    public IEnvironmentRepository Environments { get; }
    public IEventRepository Events { get; }
    public IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    public IFeedRepository Feeds { get; }
    public IInterruptionRepository Interruptions { get; }
    public ILibraryVariableSetRepository LibraryVariableSets { get; }
    public ILifecyclesRepository Lifecycles { get; }
    public ILicensesRepository Licenses { get; }
    public IMachinePolicyRepository MachinePolicies { get; }
    public IMachineRepository Machines { get; }
    public IMachineRoleRepository MachineRoles { get; }
    public IMigrationRepository Migrations { get; }
    public IOctopusServerNodeRepository OctopusServerNodes { get; }
    public IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    public IPackageMetadataRepository PackageMetadataRepository { get; }
    public IProjectGroupRepository ProjectGroups { get; }
    public IProjectRepository Projects { get; }
    public IRunbookRepository Runbooks { get; }
    public IRunbookProcessRepository RunbookProcesses { get; }
    public IRunbookSnapshotRepository RunbookSnapshots { get; }
    public IRunbookRunRepository RunbookRuns { get; }
    public IProjectTriggerRepository ProjectTriggers { get; }
    public IProxyRepository Proxies { get; }
    public IReleaseRepository Releases { get; }
    public IRetentionPolicyRepository RetentionPolicies { get; }
    public ISchedulerRepository Schedulers { get; }
    public IServerStatusRepository ServerStatus { get; }
    public ISpaceRepository Spaces { get; }
    public ISubscriptionRepository Subscriptions { get; }
    public ITagSetRepository TagSets { get; }
    public ITaskRepository Tasks { get; }
    public ITeamsRepository Teams { get; }
    public ITenantRepository Tenants { get; }
    public ITenantVariablesRepository TenantVariables { get; }
    public IUserInvitesRepository UserInvites { get; }
    public IUserRepository Users { get; }
    public IUserRolesRepository UserRoles { get; }
    public IVariableSetRepository VariableSets { get; }
    public IWorkerPoolRepository WorkerPools { get; }
    public IWorkerRepository Workers { get; }
    public IScopedUserRoleRepository ScopedUserRoles { get; }
    public IUserPermissionsRepository UserPermissions { get; }
    public IUserTeamsRepository UserTeams { get; }
    public IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    public ITelemetryConfigurationRepository TelemetryConfigurationRepository { get; }
    public OctopusRepository(OctopusServerEndpoint endpoint);
    public OctopusRepository(OctopusServerEndpoint endpoint, RepositoryScope repositoryScope);
    public OctopusRepository(IOctopusClient client, RepositoryScope repositoryScope);
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusClient get_Client();
    [CompilerGeneratedAttribute]
public sealed virtual RepositoryScope get_Scope();
    [CompilerGeneratedAttribute]
public sealed virtual IAccountRepository get_Accounts();
    [CompilerGeneratedAttribute]
public sealed virtual IActionTemplateRepository get_ActionTemplates();
    [CompilerGeneratedAttribute]
public sealed virtual IArtifactRepository get_Artifacts();
    [CompilerGeneratedAttribute]
public sealed virtual IBackupRepository get_Backups();
    [CompilerGeneratedAttribute]
public sealed virtual IBuiltInPackageRepositoryRepository get_BuiltInPackageRepository();
    [CompilerGeneratedAttribute]
public sealed virtual IBuildInformationRepository get_BuildInformationRepository();
    [CompilerGeneratedAttribute]
public sealed virtual ICertificateConfigurationRepository get_CertificateConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual ICertificateRepository get_Certificates();
    [CompilerGeneratedAttribute]
public sealed virtual IChannelRepository get_Channels();
    [CompilerGeneratedAttribute]
public sealed virtual ICommunityActionTemplateRepository get_CommunityActionTemplates();
    [CompilerGeneratedAttribute]
public sealed virtual IConfigurationRepository get_Configuration();
    [CompilerGeneratedAttribute]
public sealed virtual IDashboardConfigurationRepository get_DashboardConfigurations();
    [CompilerGeneratedAttribute]
public sealed virtual IDashboardRepository get_Dashboards();
    [CompilerGeneratedAttribute]
public sealed virtual IDefectsRepository get_Defects();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentProcessRepository get_DeploymentProcesses();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentSettingsRepository get_DeploymentSettings();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentRepository get_Deployments();
    [CompilerGeneratedAttribute]
public sealed virtual IEnvironmentRepository get_Environments();
    [CompilerGeneratedAttribute]
public sealed virtual IEventRepository get_Events();
    [CompilerGeneratedAttribute]
public sealed virtual IFeaturesConfigurationRepository get_FeaturesConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual IFeedRepository get_Feeds();
    [CompilerGeneratedAttribute]
public sealed virtual IInterruptionRepository get_Interruptions();
    [CompilerGeneratedAttribute]
public sealed virtual ILibraryVariableSetRepository get_LibraryVariableSets();
    [CompilerGeneratedAttribute]
public sealed virtual ILifecyclesRepository get_Lifecycles();
    [CompilerGeneratedAttribute]
public sealed virtual ILicensesRepository get_Licenses();
    [CompilerGeneratedAttribute]
public sealed virtual IMachinePolicyRepository get_MachinePolicies();
    [CompilerGeneratedAttribute]
public sealed virtual IMachineRepository get_Machines();
    [CompilerGeneratedAttribute]
public sealed virtual IMachineRoleRepository get_MachineRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IMigrationRepository get_Migrations();
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusServerNodeRepository get_OctopusServerNodes();
    [CompilerGeneratedAttribute]
public sealed virtual IPerformanceConfigurationRepository get_PerformanceConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual IPackageMetadataRepository get_PackageMetadataRepository();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectGroupRepository get_ProjectGroups();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectRepository get_Projects();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookRepository get_Runbooks();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookProcessRepository get_RunbookProcesses();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookSnapshotRepository get_RunbookSnapshots();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookRunRepository get_RunbookRuns();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectTriggerRepository get_ProjectTriggers();
    [CompilerGeneratedAttribute]
public sealed virtual IProxyRepository get_Proxies();
    [CompilerGeneratedAttribute]
public sealed virtual IReleaseRepository get_Releases();
    [CompilerGeneratedAttribute]
public sealed virtual IRetentionPolicyRepository get_RetentionPolicies();
    [CompilerGeneratedAttribute]
public sealed virtual ISchedulerRepository get_Schedulers();
    [CompilerGeneratedAttribute]
public sealed virtual IServerStatusRepository get_ServerStatus();
    [CompilerGeneratedAttribute]
public sealed virtual ISpaceRepository get_Spaces();
    [CompilerGeneratedAttribute]
public sealed virtual ISubscriptionRepository get_Subscriptions();
    [CompilerGeneratedAttribute]
public sealed virtual ITagSetRepository get_TagSets();
    [CompilerGeneratedAttribute]
public sealed virtual ITaskRepository get_Tasks();
    [CompilerGeneratedAttribute]
public sealed virtual ITeamsRepository get_Teams();
    [CompilerGeneratedAttribute]
public sealed virtual ITenantRepository get_Tenants();
    [CompilerGeneratedAttribute]
public sealed virtual ITenantVariablesRepository get_TenantVariables();
    [CompilerGeneratedAttribute]
public sealed virtual IUserInvitesRepository get_UserInvites();
    [CompilerGeneratedAttribute]
public sealed virtual IUserRepository get_Users();
    [CompilerGeneratedAttribute]
public sealed virtual IUserRolesRepository get_UserRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IVariableSetRepository get_VariableSets();
    [CompilerGeneratedAttribute]
public sealed virtual IWorkerPoolRepository get_WorkerPools();
    [CompilerGeneratedAttribute]
public sealed virtual IWorkerRepository get_Workers();
    [CompilerGeneratedAttribute]
public sealed virtual IScopedUserRoleRepository get_ScopedUserRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IUserPermissionsRepository get_UserPermissions();
    [CompilerGeneratedAttribute]
public sealed virtual IUserTeamsRepository get_UserTeams();
    [CompilerGeneratedAttribute]
public sealed virtual IUpgradeConfigurationRepository get_UpgradeConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual ITelemetryConfigurationRepository get_TelemetryConfigurationRepository();
    public sealed virtual bool HasLink(string name);
    public sealed virtual bool HasLinkParameter(string linkName, string parameterName);
    public sealed virtual string Link(string name);
    public sealed virtual RootResource LoadRootDocument();
    public sealed virtual SpaceRootResource LoadSpaceRootDocument();
    private RootResource LoadRootDocumentInner();
    private SpaceRootResource LoadSpaceRootDocumentInner();
    [CompilerGeneratedAttribute]
private SpaceRootResource <LoadSpaceRootDocumentInner>b__203_1();
    [CompilerGeneratedAttribute]
private SpaceRootResource <LoadSpaceRootDocumentInner>g__LoadSpaceRootResourceFor|203_2(SpaceResource space);
    [CompilerGeneratedAttribute]
private SpaceResource <LoadSpaceRootDocumentInner>g__TryGetDefaultSpace|203_3();
}
[ExtensionAttribute]
public static class Octopus.Client.OctopusRepositoryExtensions : object {
    [ExtensionAttribute]
public static IOctopusAsyncRepository CreateRepository(IOctopusAsyncClient client, RepositoryScope scope);
    [ExtensionAttribute]
public static IOctopusSpaceAsyncRepository ForSpace(IOctopusAsyncRepository repo, SpaceResource space);
    [ExtensionAttribute]
public static IOctopusSystemAsyncRepository ForSystem(IOctopusAsyncRepository repo);
    [ExtensionAttribute]
public static IOctopusSpaceRepository ForSpace(IOctopusRepository repo, SpaceResource space);
    [ExtensionAttribute]
public static IOctopusSystemRepository ForSystem(IOctopusRepository repo);
}
public class Octopus.Client.OctopusRequest : object {
    private string method;
    private Uri uri;
    private object requestResource;
    public string Method { get; }
    public Uri Uri { get; }
    public object RequestResource { get; }
    public OctopusRequest(string method, Uri uri, object requestResource);
    public string get_Method();
    public Uri get_Uri();
    public object get_RequestResource();
}
public class Octopus.Client.OctopusResponse : object {
    private OctopusRequest request;
    private HttpStatusCode statusCode;
    private string location;
    private object responseResource;
    public OctopusRequest Request { get; }
    public HttpStatusCode StatusCode { get; }
    public string Location { get; }
    public object ResponseResource { get; }
    public OctopusResponse(OctopusRequest request, HttpStatusCode statusCode, string location, object responseResource);
    public OctopusRequest get_Request();
    public HttpStatusCode get_StatusCode();
    public string get_Location();
    public object get_ResponseResource();
}
public class Octopus.Client.OctopusResponse`1 : OctopusResponse {
    public TResponseResource ResponseResource { get; }
    public OctopusResponse`1(OctopusRequest request, HttpStatusCode statusCode, string location, TResponseResource responseResource);
    public TResponseResource get_ResponseResource();
}
public class Octopus.Client.OctopusServerEndpoint : object {
    private ILinkResolver octopusServer;
    private string apiKey;
    private ICredentials credentials;
    [CompilerGeneratedAttribute]
private IWebProxy <Proxy>k__BackingField;
    public ILinkResolver OctopusServer { get; }
    public bool IsUsingSecureConnection { get; }
    public string ApiKey { get; }
    public ICredentials Credentials { get; }
    public IWebProxy Proxy { get; public set; }
    public OctopusServerEndpoint(string octopusServerAddress);
    public OctopusServerEndpoint(string octopusServerAddress, string apiKey);
    public OctopusServerEndpoint(string octopusServerAddress, string apiKey, ICredentials credentials);
    public OctopusServerEndpoint(ILinkResolver octopusServer, string apiKey, ICredentials credentials);
    public ILinkResolver get_OctopusServer();
    public bool get_IsUsingSecureConnection();
    public string get_ApiKey();
    public ICredentials get_Credentials();
    public OctopusServerEndpoint AsUser(string newUserApiKey);
    [CompilerGeneratedAttribute]
public IWebProxy get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(IWebProxy value);
}
public class Octopus.Client.Operations.InvalidRegistrationArgumentsException : ArgumentException {
    public InvalidRegistrationArgumentsException(string message);
}
public interface Octopus.Client.Operations.IRegisterMachineOperation {
    public String[] EnvironmentNames { get; public set; }
    public String[] Roles { get; public set; }
    public String[] Tenants { get; public set; }
    public String[] TenantTags { get; public set; }
    public TenantedDeploymentMode TenantedDeploymentParticipation { get; public set; }
    public abstract virtual String[] get_EnvironmentNames();
    public abstract virtual void set_EnvironmentNames(String[] value);
    public abstract virtual String[] get_Roles();
    public abstract virtual void set_Roles(String[] value);
    public abstract virtual String[] get_Tenants();
    public abstract virtual void set_Tenants(String[] value);
    public abstract virtual String[] get_TenantTags();
    public abstract virtual void set_TenantTags(String[] value);
    public abstract virtual TenantedDeploymentMode get_TenantedDeploymentParticipation();
    public abstract virtual void set_TenantedDeploymentParticipation(TenantedDeploymentMode value);
}
public interface Octopus.Client.Operations.IRegisterMachineOperationBase {
    public string MachineName { get; public set; }
    public string MachinePolicy { get; public set; }
    public string TentacleHostname { get; public set; }
    public int TentaclePort { get; public set; }
    public string TentacleThumbprint { get; public set; }
    public string ProxyName { get; public set; }
    public bool AllowOverwrite { get; public set; }
    public CommunicationStyle CommunicationStyle { get; public set; }
    public Uri SubscriptionId { get; public set; }
    public abstract virtual string get_MachineName();
    public abstract virtual void set_MachineName(string value);
    public abstract virtual string get_MachinePolicy();
    public abstract virtual void set_MachinePolicy(string value);
    public abstract virtual string get_TentacleHostname();
    public abstract virtual void set_TentacleHostname(string value);
    public abstract virtual int get_TentaclePort();
    public abstract virtual void set_TentaclePort(int value);
    public abstract virtual string get_TentacleThumbprint();
    public abstract virtual void set_TentacleThumbprint(string value);
    public abstract virtual string get_ProxyName();
    public abstract virtual void set_ProxyName(string value);
    public abstract virtual bool get_AllowOverwrite();
    public abstract virtual void set_AllowOverwrite(bool value);
    public abstract virtual CommunicationStyle get_CommunicationStyle();
    public abstract virtual void set_CommunicationStyle(CommunicationStyle value);
    public abstract virtual Uri get_SubscriptionId();
    public abstract virtual void set_SubscriptionId(Uri value);
    public abstract virtual void Execute(OctopusServerEndpoint serverEndpoint);
    public abstract virtual void Execute(OctopusRepository repository);
    public abstract virtual void Execute(IOctopusSpaceRepository repository);
    public abstract virtual Task ExecuteAsync(OctopusServerEndpoint serverEndpoint);
    public abstract virtual Task ExecuteAsync(OctopusAsyncRepository repository);
    public abstract virtual Task ExecuteAsync(IOctopusSpaceAsyncRepository repository);
}
public interface Octopus.Client.Operations.IRegisterWorkerOperation {
    public String[] WorkerPoolNames { get; public set; }
    public abstract virtual String[] get_WorkerPoolNames();
    public abstract virtual void set_WorkerPoolNames(String[] value);
}
public class Octopus.Client.Operations.RegisterMachineOperation : RegisterMachineOperationBase {
    [CompilerGeneratedAttribute]
private String[] <EnvironmentNames>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Tenants>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private TenantedDeploymentMode <TenantedDeploymentParticipation>k__BackingField;
    public String[] EnvironmentNames { get; public set; }
    public String[] Roles { get; public set; }
    public String[] Tenants { get; public set; }
    public String[] TenantTags { get; public set; }
    public TenantedDeploymentMode TenantedDeploymentParticipation { get; public set; }
    public RegisterMachineOperation(IOctopusClientFactory clientFactory);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_EnvironmentNames();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnvironmentNames(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_Roles();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Roles(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_Tenants();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tenants(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_TenantTags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TenantTags(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual TenantedDeploymentMode get_TenantedDeploymentParticipation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TenantedDeploymentParticipation(TenantedDeploymentMode value);
    public virtual void Execute(IOctopusSpaceRepository repository);
    private List`1<TenantResource> GetTenants(IOctopusSpaceRepository repository);
    private void ValidateTenantTags(IOctopusSpaceRepository repository);
    private List`1<EnvironmentResource> GetEnvironments(IOctopusSpaceRepository repository);
    private MachineResource GetMachine(IOctopusSpaceRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperation/<ExecuteAsync>d__27")]
public virtual Task ExecuteAsync(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperation/<GetTenants>d__28")]
private Task`1<List`1<TenantResource>> GetTenants(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperation/<ValidateTenantTags>d__29")]
private Task ValidateTenantTags(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperation/<GetEnvironments>d__30")]
private Task`1<List`1<EnvironmentResource>> GetEnvironments(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperation/<GetMachine>d__31")]
private Task`1<MachineResource> GetMachine(IOctopusSpaceAsyncRepository repository);
    private void ApplyDeploymentTargetChanges(MachineResource machine, IEnumerable`1<EnvironmentResource> environment, IEnumerable`1<TenantResource> tenants);
}
public abstract class Octopus.Client.Operations.RegisterMachineOperationBase : object {
    private IOctopusClientFactory clientFactory;
    [CompilerGeneratedAttribute]
private string <MachineName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MachinePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TentacleHostname>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TentaclePort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TentacleThumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowOverwrite>k__BackingField;
    [CompilerGeneratedAttribute]
private CommunicationStyle <CommunicationStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <SubscriptionId>k__BackingField;
    public string MachineName { get; public set; }
    public string MachinePolicy { get; public set; }
    public string TentacleHostname { get; public set; }
    public int TentaclePort { get; public set; }
    public string TentacleThumbprint { get; public set; }
    public string ProxyName { get; public set; }
    public bool AllowOverwrite { get; public set; }
    public CommunicationStyle CommunicationStyle { get; public set; }
    public Uri SubscriptionId { get; public set; }
    public RegisterMachineOperationBase(IOctopusClientFactory clientFactory);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MachineName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MachineName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MachinePolicy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MachinePolicy(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TentacleHostname();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TentacleHostname(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_TentaclePort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TentaclePort(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TentacleThumbprint();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TentacleThumbprint(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProxyName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProxyName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_AllowOverwrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowOverwrite(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CommunicationStyle(CommunicationStyle value);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_SubscriptionId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionId(Uri value);
    public sealed virtual void Execute(OctopusServerEndpoint serverEndpoint);
    public sealed virtual void Execute(OctopusRepository repository);
    public abstract virtual void Execute(IOctopusSpaceRepository repository);
    protected MachinePolicyResource GetMachinePolicy(IOctopusSpaceRepository repository);
    protected ProxyResource GetProxy(IOctopusSpaceRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperationBase/<ExecuteAsync>d__43")]
public sealed virtual Task ExecuteAsync(OctopusServerEndpoint serverEndpoint);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperationBase/<ExecuteAsync>d__44")]
public sealed virtual Task ExecuteAsync(OctopusAsyncRepository repository);
    public abstract virtual Task ExecuteAsync(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperationBase/<GetMachinePolicy>d__46")]
protected Task`1<MachinePolicyResource> GetMachinePolicy(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperationBase/<GetProxy>d__47")]
protected Task`1<ProxyResource> GetProxy(IOctopusSpaceAsyncRepository repository);
    protected void ApplyBaseChanges(MachineBasedResource machine, MachinePolicyResource machinePolicy, ProxyResource proxy);
    protected static string CouldNotFindMessage(string modelType, String[] missing);
}
public class Octopus.Client.Operations.RegisterWorkerOperation : RegisterMachineOperationBase {
    [CompilerGeneratedAttribute]
private String[] <WorkerPoolNames>k__BackingField;
    public String[] WorkerPoolNames { get; public set; }
    public RegisterWorkerOperation(IOctopusClientFactory clientFactory);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_WorkerPoolNames();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WorkerPoolNames(String[] value);
    public virtual void Execute(IOctopusSpaceRepository repository);
    private List`1<WorkerPoolResource> GetWorkerPools(IOctopusSpaceRepository repository);
    private WorkerResource GetWorker(IOctopusSpaceRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterWorkerOperation/<ExecuteAsync>d__9")]
public virtual Task ExecuteAsync(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterWorkerOperation/<GetWorkerPools>d__10")]
private Task`1<List`1<WorkerPoolResource>> GetWorkerPools(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterWorkerOperation/<GetWorker>d__11")]
private Task`1<WorkerResource> GetWorker(IOctopusSpaceAsyncRepository repository);
}
internal class Octopus.Client.Repositories.AccountRepository : BasicRepository`1<AccountResource> {
    public AccountRepository(IOctopusRepository repository);
    public sealed virtual TAccount GetOfType(string idOrHref);
    public sealed virtual List`1<TAccount> GetOfType(String[] ids);
    public sealed virtual TAccount RefreshOfType(TAccount resource);
    public sealed virtual TAccount FindByNameOfType(string name);
    public sealed virtual List`1<TAccount> FindByNamesOfType(IEnumerable`1<string> names);
    private object PathParametersOfType(object pathParameters);
    public sealed virtual void PaginateOfType(Func`2<ResourceCollection`1<TAccount>, bool> getNextPage, object pathParameters);
    public sealed virtual TAccount FindOneOfType(Func`2<TAccount, bool> search, object pathParameters);
    public sealed virtual List`1<TAccount> FindManyOfType(Func`2<TAccount, bool> search, object pathParameters);
    public sealed virtual List`1<TAccount> FindAllOfType(object pathParameters);
    public sealed virtual AccountType DetermineAccountType();
    public sealed virtual AccountUsageResource GetAccountUsage(AccountResource account);
}
internal class Octopus.Client.Repositories.ActionTemplateRepository : BasicRepository`1<ActionTemplateResource> {
    public ActionTemplateRepository(IOctopusRepository repository);
    public sealed virtual List`1<ActionTemplateSearchResource> Search();
    public List`1<ActionTemplateCategoryResource> Categories();
    public sealed virtual ActionTemplateResource GetVersion(ActionTemplateResource resource, int version);
    public sealed virtual ActionUpdateResultResource[] UpdateActions(ActionTemplateResource actionTemplate, ActionsUpdateResource update);
    public sealed virtual void SetLogo(ActionTemplateResource resource, string fileName, Stream contents);
}
internal class Octopus.Client.Repositories.ArtifactRepository : BasicRepository`1<ArtifactResource> {
    public ArtifactRepository(IOctopusRepository repository);
    public sealed virtual Stream GetContent(ArtifactResource artifact);
    public sealed virtual void PutContent(ArtifactResource artifact, Stream contentStream);
    public sealed virtual ResourceCollection`1<ArtifactResource> FindRegarding(IResource resource);
}
internal class Octopus.Client.Repositories.Async.AccountRepository : BasicRepository`1<AccountResource> {
    public AccountRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<GetOfType>d__1`1")]
public sealed virtual Task`1<TAccount> GetOfType(string idOrHref);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<GetOfType>d__2`1")]
public sealed virtual Task`1<List`1<TAccount>> GetOfType(String[] ids);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<RefreshOfType>d__3`1")]
public sealed virtual Task`1<TAccount> RefreshOfType(TAccount resource);
    public sealed virtual Task`1<TAccount> FindByNameOfType(string name);
    public sealed virtual Task`1<List`1<TAccount>> FindByNamesOfType(IEnumerable`1<string> names);
    private object PathParametersOfType(object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<PaginateOfType>d__7`1")]
public sealed virtual Task PaginateOfType(Func`2<ResourceCollection`1<TAccount>, bool> getNextPage, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<FindOneOfType>d__8`1")]
public sealed virtual Task`1<TAccount> FindOneOfType(Func`2<TAccount, bool> search, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<FindManyOfType>d__9`1")]
public sealed virtual Task`1<List`1<TAccount>> FindManyOfType(Func`2<TAccount, bool> search, object pathParameters);
    public sealed virtual Task`1<List`1<TAccount>> FindAllOfType(object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<GetAccountUsage>d__11")]
public sealed virtual Task`1<AccountUsageResource> GetAccountUsage(AccountResource account);
    public sealed virtual AccountType DetermineAccountType();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<AccountResource> <>n__0(string idOrHref);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<List`1<AccountResource>> <>n__1(String[] ids);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<AccountResource> <>n__2(AccountResource resource);
}
internal class Octopus.Client.Repositories.Async.ActionTemplateRepository : BasicRepository`1<ActionTemplateResource> {
    public ActionTemplateRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ActionTemplateRepository/<Search>d__1")]
public sealed virtual Task`1<List`1<ActionTemplateSearchResource>> Search();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ActionTemplateRepository/<Categories>d__2")]
public Task`1<List`1<ActionTemplateCategoryResource>> Categories();
    public sealed virtual Task`1<ActionTemplateResource> GetVersion(ActionTemplateResource resource, int version);
    public sealed virtual Task`1<ActionUpdateResultResource[]> UpdateActions(ActionTemplateResource actionTemplate, ActionsUpdateResource update);
    public sealed virtual Task SetLogo(ActionTemplateResource resource, string fileName, Stream contents);
}
internal class Octopus.Client.Repositories.Async.ArtifactRepository : BasicRepository`1<ArtifactResource> {
    public ArtifactRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<Stream> GetContent(ArtifactResource artifact);
    public sealed virtual Task PutContent(ArtifactResource artifact, Stream contentStream);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ArtifactRepository/<FindRegarding>d__3")]
public sealed virtual Task`1<ResourceCollection`1<ArtifactResource>> FindRegarding(IResource resource);
}
internal class Octopus.Client.Repositories.Async.BackupRepository : object {
    private IOctopusAsyncRepository repository;
    private IOctopusAsyncClient client;
    public BackupRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BackupRepository/<GetConfiguration>d__3")]
public sealed virtual Task`1<BackupConfigurationResource> GetConfiguration();
    public sealed virtual Task`1<BackupConfigurationResource> ModifyConfiguration(BackupConfigurationResource backupConfiguration);
}
internal abstract class Octopus.Client.Repositories.Async.BasicRepository`1 : object {
    private Func`2<IOctopusAsyncRepository, Task`1<string>> getCollectionLinkName;
    protected string CollectionLinkName;
    private SemanticVersion minimumRequiredVersion;
    private bool hasMinimumRequiredVersion;
    [CompilerGeneratedAttribute]
private IOctopusAsyncClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private IOctopusAsyncRepository <Repository>k__BackingField;
    public IOctopusAsyncClient Client { get; }
    public IOctopusAsyncRepository Repository { get; }
    protected BasicRepository`1(IOctopusAsyncRepository repository, string collectionLinkName, Func`2<IOctopusAsyncRepository, Task`1<string>> getCollectionLinkName);
    protected virtual Dictionary`2<string, object> GetAdditionalQueryParameters();
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusAsyncClient get_Client();
    [CompilerGeneratedAttribute]
public IOctopusAsyncRepository get_Repository();
    protected virtual Task CheckSpaceResource(IHaveSpaceResource spaceResource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<ServerSupportsSpaces>d__13")]
private Task`1<bool> ServerSupportsSpaces();
    protected void MinimumCompatibleVersion(string version);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<AssertSpaceIdMatchesResource>d__15")]
private Task AssertSpaceIdMatchesResource(TResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<ThrowIfServerVersionIsNotCompatible>d__16")]
protected Task`1<bool> ThrowIfServerVersionIsNotCompatible();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<EnsureServerIsMinimumVersion>d__17")]
protected Task EnsureServerIsMinimumVersion(SemanticVersion requiredVersion, Func`2<string, string> messageGenerator);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Create>d__18")]
public virtual Task`1<TResource> Create(TResource resource, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Modify>d__19")]
public virtual Task`1<TResource> Modify(TResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Delete>d__20")]
public sealed virtual Task Delete(TResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Paginate>d__21")]
public sealed virtual Task Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, string path, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<FindOne>d__22")]
public sealed virtual Task`1<TResource> FindOne(Func`2<TResource, bool> search, string path, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<FindMany>d__23")]
public sealed virtual Task`1<List`1<TResource>> FindMany(Func`2<TResource, bool> search, string path, object pathParameters);
    public sealed virtual Task`1<List`1<TResource>> FindAll(string path, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<GetAll>d__25")]
public sealed virtual Task`1<List`1<TResource>> GetAll();
    public sealed virtual Task`1<TResource> FindByName(string name, string path, object pathParameters);
    public sealed virtual Task`1<List`1<TResource>> FindByNames(IEnumerable`1<string> names, string path, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Get>d__28")]
public sealed virtual Task`1<TResource> Get(string idOrHref);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Get>d__29")]
public virtual Task`1<List`1<TResource>> Get(String[] ids);
    public sealed virtual Task`1<TResource> Refresh(TResource resource);
    protected virtual void EnrichSpaceId(TResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<ResolveLink>d__32")]
protected Task`1<string> ResolveLink();
    [CompilerGeneratedAttribute]
private string <ThrowIfServerVersionIsNotCompatible>b__16_0(string currentServerVersion);
}
internal class Octopus.Client.Repositories.Async.BuildInformationRepository : object {
    private IOctopusAsyncRepository repository;
    private static ILog Logger;
    public BuildInformationRepository(IOctopusAsyncRepository repository);
    private static BuildInformationRepository();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<Get>d__3")]
public sealed virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Get(string id);
    public sealed virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Push(string packageId, string version, OctopusBuildInformation octopusMetadata, bool replaceExisting);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<Push>d__5")]
public sealed virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Push(string packageId, string version, OctopusBuildInformation octopusMetadata, OverwriteMode overwriteMode);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<ListBuilds>d__6")]
public sealed virtual Task`1<ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource>> ListBuilds(string packageId, int skip, int take);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<LatestBuilds>d__7")]
public sealed virtual Task`1<ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource>> LatestBuilds(int skip, int take);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<Delete>d__8")]
public sealed virtual Task Delete(OctopusPackageVersionBuildInformationMappedResource buildInformation);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<DeleteBuilds>d__9")]
public sealed virtual Task DeleteBuilds(IReadOnlyList`1<OctopusPackageVersionBuildInformationMappedResource> builds);
}
internal class Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository : object {
    private IOctopusAsyncRepository repository;
    private static ILog Logger;
    public BuiltInPackageRepositoryRepository(IOctopusAsyncRepository repository);
    private static BuiltInPackageRepositoryRepository();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<PushPackage>d__3")]
public sealed virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<PushPackage>d__4")]
public sealed virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, bool replaceExisting);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<PushPackage>d__5")]
public sealed virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, bool replaceExisting, bool useDeltaCompression);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<PushPackage>d__6")]
public sealed virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode, bool useDeltaCompression);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<VerifyTransfer>d__7")]
private Task`1<PackageFromBuiltInFeedResource> VerifyTransfer(string fileName, Stream contents);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<TryFindPackage>d__8")]
private Task`1<PackageFromBuiltInFeedResource> TryFindPackage(string packageId, SemanticVersion version);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<AttemptDeltaPush>d__9")]
private Task`1<PackageFromBuiltInFeedResource> AttemptDeltaPush(string fileName, Stream contents, OverwriteMode overwriteMode);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<ListPackages>d__10")]
public sealed virtual Task`1<ResourceCollection`1<PackageFromBuiltInFeedResource>> ListPackages(string packageId, int skip, int take);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<GetPackage>d__11")]
public sealed virtual Task`1<PackageFromBuiltInFeedResource> GetPackage(string packageId, string version);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<LatestPackages>d__12")]
public sealed virtual Task`1<ResourceCollection`1<PackageFromBuiltInFeedResource>> LatestPackages(int skip, int take);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<DeletePackage>d__13")]
public sealed virtual Task DeletePackage(PackageResource package);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<DeletePackages>d__14")]
public sealed virtual Task DeletePackages(IReadOnlyList`1<PackageResource> packages);
}
internal class Octopus.Client.Repositories.Async.CertificateConfigurationRepository : BasicRepository`1<CertificateConfigurationResource> {
    public CertificateConfigurationRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<CertificateConfigurationResource> GetOctopusCertificate();
    public sealed virtual Task`1<Stream> GetPublicCertificate(CertificateConfigurationResource certificateConfiguration);
}
internal class Octopus.Client.Repositories.Async.CertificateRepository : BasicRepository`1<CertificateResource> {
    public CertificateRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<Stream> Export(CertificateResource certificate, Nullable`1<CertificateFormat> format, string password, bool includePrivateKey);
    public sealed virtual Task`1<Stream> ExportAsPem(CertificateResource certificate, bool includePrivateKey, CertificateExportPemOptions pemOptions);
    public sealed virtual Task`1<CertificateResource> Replace(CertificateResource certificate, string certificateData, string password);
    public sealed virtual Task Archive(CertificateResource certificate);
    public sealed virtual Task UnArchive(CertificateResource certificate);
    public sealed virtual Task`1<CertificateConfigurationResource> GetOctopusCertificate();
}
internal class Octopus.Client.Repositories.Async.ChannelRepository : BasicRepository`1<ChannelResource> {
    public ChannelRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ChannelResource> FindByName(ProjectResource project, string name);
    public sealed virtual Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name);
    public sealed virtual Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name, string description);
    public sealed virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ChannelResource channel, int skip, Nullable`1<int> take, string searchByVersion);
    public sealed virtual Task`1<IReadOnlyList`1<ReleaseResource>> GetAllReleases(ChannelResource channel);
    public sealed virtual Task`1<ReleaseResource> GetReleaseByVersion(ChannelResource channel, string version);
}
internal class Octopus.Client.Repositories.Async.CommunityActionTemplateRepository : BasicRepository`1<CommunityActionTemplateResource> {
    public CommunityActionTemplateRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task Install(CommunityActionTemplateResource resource);
    public sealed virtual Task UpdateInstallation(CommunityActionTemplateResource resource);
    public sealed virtual Task`1<ActionTemplateResource> GetInstalledTemplate(CommunityActionTemplateResource resource);
}
internal class Octopus.Client.Repositories.Async.ConfigurationRepository : object {
    private IOctopusAsyncRepository repository;
    private string collectionLinkName;
    public ConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ConfigurationRepository/<Get>d__3`1")]
public sealed virtual Task`1<T> Get();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ConfigurationRepository/<Modify>d__4`1")]
public sealed virtual Task`1<T> Modify(T configurationResource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ConfigurationRepository/<GetConfigurationItem>d__5")]
private Task`1<ConfigurationItemResource> GetConfigurationItem(IResource instance);
}
internal class Octopus.Client.Repositories.Async.DashboardConfigurationRepository : object {
    private IOctopusAsyncRepository repository;
    public DashboardConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DashboardConfigurationRepository/<GetDashboardConfiguration>d__2")]
public sealed virtual Task`1<DashboardConfigurationResource> GetDashboardConfiguration();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DashboardConfigurationRepository/<ModifyDashboardConfiguration>d__3")]
public sealed virtual Task`1<DashboardConfigurationResource> ModifyDashboardConfiguration(DashboardConfigurationResource resource);
}
internal class Octopus.Client.Repositories.Async.DashboardRepository : object {
    private IOctopusAsyncRepository repository;
    public DashboardRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DashboardRepository/<GetDashboard>d__2")]
public sealed virtual Task`1<DashboardResource> GetDashboard();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DashboardRepository/<GetDynamicDashboard>d__3")]
public sealed virtual Task`1<DashboardResource> GetDynamicDashboard(String[] projects, String[] environments, DashboardItemsOptions dashboardItemsOptions);
}
internal class Octopus.Client.Repositories.Async.DefectsRepository : BasicRepository`1<DefectResource> {
    public DefectsRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ResourceCollection`1<DefectResource>> GetDefects(ReleaseResource release);
    public sealed virtual Task RaiseDefect(ReleaseResource release, string description);
    public sealed virtual Task ResolveDefect(ReleaseResource release);
}
internal class Octopus.Client.Repositories.Async.DeploymentProcessRepository : BasicRepository`1<DeploymentProcessResource> {
    public DeploymentProcessRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ReleaseTemplateResource> GetTemplate(DeploymentProcessResource deploymentProcess, ChannelResource channel);
    public sealed virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource, string gitRef);
    public sealed virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentProcessRepository/<Modify>d__4")]
public sealed virtual Task`1<DeploymentProcessResource> Modify(DeploymentProcessResource deploymentSettings, string commitMessage);
}
internal class Octopus.Client.Repositories.Async.DeploymentRepository : BasicRepository`1<DeploymentResource> {
    public DeploymentRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<TaskResource> GetTask(DeploymentResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentRepository/<FindBy>d__2")]
public sealed virtual Task`1<ResourceCollection`1<DeploymentResource>> FindBy(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    [ObsoleteAttribute("This method is not a find all, it still requires paging. So it has been renamed to `FindBy`")]
public sealed virtual Task`1<ResourceCollection`1<DeploymentResource>> FindAll(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    public sealed virtual Task Paginate(String[] projects, String[] environments, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentRepository/<Paginate>d__5")]
public sealed virtual Task Paginate(String[] projects, String[] environments, String[] tenants, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
}
internal class Octopus.Client.Repositories.Async.DeploymentSettingsRepository : object {
    private IOctopusAsyncClient client;
    public DeploymentSettingsRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentSettingsRepository/<Get>d__2")]
public sealed virtual Task`1<DeploymentSettingsResource> Get(ProjectResource projectResource, string gitRef);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentSettingsRepository/<Modify>d__3")]
public sealed virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource resource, string commitMessage);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentSettingsRepository/<Get>d__4")]
public sealed virtual Task`1<DeploymentSettingsResource> Get(ProjectResource projectResource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentSettingsRepository/<Modify>d__5")]
public sealed virtual Task`1<DeploymentSettingsResource> Modify(ProjectResource projectResource, DeploymentSettingsResource deploymentSettings);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentSettingsRepository/<Modify>d__6")]
public sealed virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource deploymentSettings);
}
internal class Octopus.Client.Repositories.Async.EnvironmentRepository : BasicRepository`1<EnvironmentResource> {
    public EnvironmentRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EnvironmentRepository/<GetMachines>d__1")]
public sealed virtual Task`1<List`1<MachineResource>> GetMachines(EnvironmentResource environment, Nullable`1<int> skip, Nullable`1<int> take, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EnvironmentRepository/<Summary>d__2")]
public sealed virtual Task`1<EnvironmentsSummaryResource> Summary(string ids, string partialName, string machinePartialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, Nullable`1<bool> hideEmptyEnvironments);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EnvironmentRepository/<Sort>d__3")]
public sealed virtual Task Sort(String[] environmentIdsInOrder);
    public sealed virtual Task`1<EnvironmentEditor> CreateOrModify(string name);
    public sealed virtual Task`1<EnvironmentEditor> CreateOrModify(string name, string description);
    public sealed virtual Task`1<EnvironmentEditor> CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
}
internal class Octopus.Client.Repositories.Async.EventRepository : MixedScopeBaseRepository`1<EventResource> {
    public EventRepository(IOctopusAsyncRepository repository);
    private EventRepository(IOctopusAsyncRepository repository, SpaceContext userDefinedSpaceContext);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<List>d__2")]
[ObsoleteAttribute("This method was deprecated in Octopus 3.4.  Please use the other List method by providing named arguments.")]
public sealed virtual Task`1<ResourceCollection`1<EventResource>> List(int skip, string filterByUserId, string regardingDocumentId, bool includeInternalEvents);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<List>d__3")]
public sealed virtual Task`1<ResourceCollection`1<EventResource>> List(int skip, Nullable`1<int> take, string from, string to, string regarding, string regardingAny, bool includeInternalEvents, string user, string users, string projects, string environments, string eventGroups, string eventCategories, string tenants, string tags, Nullable`1<long> fromAutoId, Nullable`1<long> toAutoId, string documentTypes, string eventAgents, string projectGroups);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<GetDocumentTypes>d__4")]
public sealed virtual Task`1<IReadOnlyList`1<DocumentTypeResource>> GetDocumentTypes();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<GetAgents>d__5")]
public sealed virtual Task`1<IReadOnlyList`1<EventAgentResource>> GetAgents();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<GetCategories>d__6")]
public sealed virtual Task`1<IReadOnlyList`1<EventCategoryResource>> GetCategories();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<GetGroups>d__7")]
public sealed virtual Task`1<IReadOnlyList`1<EventGroupResource>> GetGroups();
    public sealed virtual IEventRepository UsingContext(SpaceContext spaceContext);
}
internal class Octopus.Client.Repositories.Async.FeaturesConfigurationRepository : object {
    private IOctopusAsyncRepository repository;
    public FeaturesConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.FeaturesConfigurationRepository/<GetFeaturesConfiguration>d__2")]
public sealed virtual Task`1<FeaturesConfigurationResource> GetFeaturesConfiguration();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.FeaturesConfigurationRepository/<ModifyFeaturesConfiguration>d__3")]
public sealed virtual Task`1<FeaturesConfigurationResource> ModifyFeaturesConfiguration(FeaturesConfigurationResource resource);
}
internal class Octopus.Client.Repositories.Async.FeedRepository : BasicRepository`1<FeedResource> {
    public FeedRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<List`1<PackageResource>> GetVersions(FeedResource feed, String[] packageIds);
}
internal class Octopus.Client.Repositories.Async.GitCredentialRepository : BasicRepository`1<GitCredentialResource> {
    public GitCredentialRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<GitCredentialUsage> Usage(GitCredentialResource credential);
}
public interface Octopus.Client.Repositories.Async.IAccountRepository {
    public abstract virtual AccountType DetermineAccountType();
    public abstract virtual Task`1<TAccount> GetOfType(string idOrHref);
    public abstract virtual Task`1<List`1<TAccount>> GetOfType(String[] ids);
    public abstract virtual Task`1<TAccount> RefreshOfType(TAccount resource);
    public abstract virtual Task`1<TAccount> FindByNameOfType(string name);
    public abstract virtual Task`1<List`1<TAccount>> FindByNamesOfType(IEnumerable`1<string> names);
    public abstract virtual Task PaginateOfType(Func`2<ResourceCollection`1<TAccount>, bool> getNextPage, object pathParameters);
    public abstract virtual Task`1<TAccount> FindOneOfType(Func`2<TAccount, bool> search, object pathParameters);
    public abstract virtual Task`1<List`1<TAccount>> FindManyOfType(Func`2<TAccount, bool> search, object pathParameters);
    public abstract virtual Task`1<List`1<TAccount>> FindAllOfType(object pathParameters);
    public abstract virtual Task`1<AccountUsageResource> GetAccountUsage(AccountResource account);
}
public interface Octopus.Client.Repositories.Async.IActionTemplateRepository {
    public abstract virtual Task`1<List`1<ActionTemplateSearchResource>> Search();
    public abstract virtual Task`1<ActionTemplateResource> GetVersion(ActionTemplateResource resource, int version);
    public abstract virtual Task`1<ActionUpdateResultResource[]> UpdateActions(ActionTemplateResource actionTemplate, ActionsUpdateResource update);
    public abstract virtual Task SetLogo(ActionTemplateResource resource, string fileName, Stream contents);
}
public interface Octopus.Client.Repositories.Async.IArtifactRepository {
    public abstract virtual Task`1<Stream> GetContent(ArtifactResource artifact);
    public abstract virtual Task PutContent(ArtifactResource artifact, Stream contentStream);
    public abstract virtual Task`1<ResourceCollection`1<ArtifactResource>> FindRegarding(IResource resource);
}
public interface Octopus.Client.Repositories.Async.IBackupRepository {
    public abstract virtual Task`1<BackupConfigurationResource> GetConfiguration();
    public abstract virtual Task`1<BackupConfigurationResource> ModifyConfiguration(BackupConfigurationResource backupConfiguration);
}
public interface Octopus.Client.Repositories.Async.IBuildInformationRepository {
    public abstract virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Get(string id);
    public abstract virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Push(string packageId, string version, OctopusBuildInformation octopusMetadata, OverwriteMode overwriteMode);
    [ObsoleteAttribute]
public abstract virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Push(string packageId, string version, OctopusBuildInformation octopusMetadata, bool replaceExisting);
    public abstract virtual Task`1<ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource>> ListBuilds(string packageId, int skip, int take);
    public abstract virtual Task`1<ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource>> LatestBuilds(int skip, int take);
    public abstract virtual Task Delete(OctopusPackageVersionBuildInformationMappedResource buildInformation);
    public abstract virtual Task DeleteBuilds(IReadOnlyList`1<OctopusPackageVersionBuildInformationMappedResource> builds);
}
public interface Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository {
    public abstract virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, bool replaceExisting);
    public abstract virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, bool replaceExisting, bool useDeltaCompression);
    public abstract virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode);
    public abstract virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode, bool useDeltaCompression);
    public abstract virtual Task`1<ResourceCollection`1<PackageFromBuiltInFeedResource>> ListPackages(string packageId, int skip, int take);
    public abstract virtual Task`1<ResourceCollection`1<PackageFromBuiltInFeedResource>> LatestPackages(int skip, int take);
    public abstract virtual Task DeletePackage(PackageResource package);
    public abstract virtual Task DeletePackages(IReadOnlyList`1<PackageResource> packages);
    public abstract virtual Task`1<PackageFromBuiltInFeedResource> GetPackage(string packageId, string version);
}
public interface Octopus.Client.Repositories.Async.ICanExtendSpaceContext`1 {
    public abstract virtual T UsingContext(SpaceContext spaceContext);
}
public interface Octopus.Client.Repositories.Async.ICertificateConfigurationRepository {
    public abstract virtual Task`1<CertificateConfigurationResource> GetOctopusCertificate();
    public abstract virtual Task`1<Stream> GetPublicCertificate(CertificateConfigurationResource certificateConfiguration);
}
public interface Octopus.Client.Repositories.Async.ICertificateRepository {
    public abstract virtual Task`1<Stream> Export(CertificateResource certificate, Nullable`1<CertificateFormat> format, string password, bool includePrivateKey);
    public abstract virtual Task`1<Stream> ExportAsPem(CertificateResource certificate, bool includePrivateKey, CertificateExportPemOptions pemOptions);
    public abstract virtual Task`1<CertificateResource> Replace(CertificateResource certificate, string certificateData, string password);
    public abstract virtual Task Archive(CertificateResource certificate);
    public abstract virtual Task UnArchive(CertificateResource certificate);
    public abstract virtual Task`1<CertificateConfigurationResource> GetOctopusCertificate();
}
public interface Octopus.Client.Repositories.Async.IChannelRepository {
    public abstract virtual Task`1<ChannelResource> FindByName(ProjectResource project, string name);
    public abstract virtual Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name);
    public abstract virtual Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name, string description);
    public abstract virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ChannelResource channel, int skip, Nullable`1<int> take, string searchByVersion);
    public abstract virtual Task`1<IReadOnlyList`1<ReleaseResource>> GetAllReleases(ChannelResource channel);
    public abstract virtual Task`1<ReleaseResource> GetReleaseByVersion(ChannelResource channel, string version);
}
public interface Octopus.Client.Repositories.Async.ICommunityActionTemplateRepository {
    public abstract virtual Task`1<ActionTemplateResource> GetInstalledTemplate(CommunityActionTemplateResource resource);
    public abstract virtual Task Install(CommunityActionTemplateResource resource);
    public abstract virtual Task UpdateInstallation(CommunityActionTemplateResource resource);
}
public interface Octopus.Client.Repositories.Async.IConfigurationRepository {
    public abstract virtual Task`1<T> Get();
    public abstract virtual Task`1<T> Modify(T configurationResource);
}
public interface Octopus.Client.Repositories.Async.ICreate`1 {
    public abstract virtual Task`1<TResource> Create(TResource resource, object pathParameters);
}
public interface Octopus.Client.Repositories.Async.IDashboardConfigurationRepository {
    public abstract virtual Task`1<DashboardConfigurationResource> GetDashboardConfiguration();
    public abstract virtual Task`1<DashboardConfigurationResource> ModifyDashboardConfiguration(DashboardConfigurationResource resource);
}
public interface Octopus.Client.Repositories.Async.IDashboardRepository {
    public abstract virtual Task`1<DashboardResource> GetDashboard();
    public abstract virtual Task`1<DashboardResource> GetDynamicDashboard(String[] projects, String[] environments, DashboardItemsOptions dashboardItemsOptions);
}
public interface Octopus.Client.Repositories.Async.IDefectsRepository {
    public abstract virtual Task`1<ResourceCollection`1<DefectResource>> GetDefects(ReleaseResource release);
    public abstract virtual Task RaiseDefect(ReleaseResource release, string description);
    public abstract virtual Task ResolveDefect(ReleaseResource release);
}
public interface Octopus.Client.Repositories.Async.IDelete`1 {
    public abstract virtual Task Delete(TResource resource);
}
public interface Octopus.Client.Repositories.Async.IDeploymentProcessRepository {
    public abstract virtual Task`1<ReleaseTemplateResource> GetTemplate(DeploymentProcessResource deploymentProcess, ChannelResource channel);
    public abstract virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource, string gitRef);
    public abstract virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource);
    public abstract virtual Task`1<DeploymentProcessResource> Modify(DeploymentProcessResource deploymentSettings, string commitMessage);
}
public interface Octopus.Client.Repositories.Async.IDeploymentRepository {
    public abstract virtual Task`1<TaskResource> GetTask(DeploymentResource resource);
    public abstract virtual Task`1<ResourceCollection`1<DeploymentResource>> FindBy(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    [ObsoleteAttribute("This method is not a find all, it still requires paging. So it has been renamed to `FindBy`")]
public abstract virtual Task`1<ResourceCollection`1<DeploymentResource>> FindAll(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    public abstract virtual Task Paginate(String[] projects, String[] environments, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
    public abstract virtual Task Paginate(String[] projects, String[] environments, String[] tenants, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
}
public interface Octopus.Client.Repositories.Async.IDeploymentSettingsRepository {
    public abstract virtual Task`1<DeploymentSettingsResource> Get(ProjectResource project);
    public abstract virtual Task`1<DeploymentSettingsResource> Get(ProjectResource projectResource, string gitRef);
    [ObsoleteAttribute("ProjectResource is no longer required to be passed in")]
public abstract virtual Task`1<DeploymentSettingsResource> Modify(ProjectResource project, DeploymentSettingsResource deploymentSettings);
    public abstract virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource deploymentSettings);
    public abstract virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource resource, string commitMessage);
}
public interface Octopus.Client.Repositories.Async.IEnvironmentRepository {
    public abstract virtual Task`1<List`1<MachineResource>> GetMachines(EnvironmentResource environment, Nullable`1<int> skip, Nullable`1<int> take, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags);
    public abstract virtual Task`1<EnvironmentsSummaryResource> Summary(string ids, string partialName, string machinePartialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, Nullable`1<bool> hideEmptyEnvironments);
    public abstract virtual Task Sort(String[] environmentIdsInOrder);
    public abstract virtual Task`1<EnvironmentEditor> CreateOrModify(string name);
    public abstract virtual Task`1<EnvironmentEditor> CreateOrModify(string name, string description);
    public abstract virtual Task`1<EnvironmentEditor> CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
}
public interface Octopus.Client.Repositories.Async.IEventRepository {
    [ObsoleteAttribute("This method was deprecated in Octopus 3.4.  Please use the other List method by providing named arguments.")]
public abstract virtual Task`1<ResourceCollection`1<EventResource>> List(int skip, string filterByUserId, string regardingDocumentId, bool includeInternalEvents);
    public abstract virtual Task`1<ResourceCollection`1<EventResource>> List(int skip, Nullable`1<int> take, string from, string to, string regarding, string regardingAny, bool includeInternalEvents, string user, string users, string projects, string environments, string eventGroups, string eventCategories, string tenants, string tags, Nullable`1<long> fromAutoId, Nullable`1<long> toAutoId, string documentTypes, string eventAgents, string projectGroups);
    public abstract virtual Task`1<IReadOnlyList`1<DocumentTypeResource>> GetDocumentTypes();
    public abstract virtual Task`1<IReadOnlyList`1<EventAgentResource>> GetAgents();
    public abstract virtual Task`1<IReadOnlyList`1<EventCategoryResource>> GetCategories();
    public abstract virtual Task`1<IReadOnlyList`1<EventGroupResource>> GetGroups();
}
public interface Octopus.Client.Repositories.Async.IFeaturesConfigurationRepository {
    public abstract virtual Task`1<FeaturesConfigurationResource> GetFeaturesConfiguration();
    public abstract virtual Task`1<FeaturesConfigurationResource> ModifyFeaturesConfiguration(FeaturesConfigurationResource resource);
}
public interface Octopus.Client.Repositories.Async.IFeedRepository {
    public abstract virtual Task`1<List`1<PackageResource>> GetVersions(FeedResource feed, String[] packageIds);
}
public interface Octopus.Client.Repositories.Async.IFindByName`1 {
    public abstract virtual Task`1<TResource> FindByName(string name, string path, object pathParameters);
    public abstract virtual Task`1<List`1<TResource>> FindByNames(IEnumerable`1<string> names, string path, object pathParameters);
}
public interface Octopus.Client.Repositories.Async.IGet`1 {
    public abstract virtual Task`1<TResource> Get(string idOrHref);
    public abstract virtual Task`1<List`1<TResource>> Get(String[] ids);
    public abstract virtual Task`1<TResource> Refresh(TResource resource);
}
public interface Octopus.Client.Repositories.Async.IGetAll`1 {
    public abstract virtual Task`1<List`1<TResource>> GetAll();
}
public interface Octopus.Client.Repositories.Async.IGitCredentialRepository {
    public abstract virtual Task`1<GitCredentialUsage> Usage(GitCredentialResource credential);
}
public interface Octopus.Client.Repositories.Async.IInterruptionRepository {
    public abstract virtual Task`1<ResourceCollection`1<InterruptionResource>> List(int skip, Nullable`1<int> take, bool pendingOnly, string regardingDocumentId);
    public abstract virtual Task Submit(InterruptionResource interruption);
    public abstract virtual Task TakeResponsibility(InterruptionResource interruption);
    public abstract virtual Task`1<UserResource> GetResponsibleUser(InterruptionResource interruption);
}
public interface Octopus.Client.Repositories.Async.ILibraryVariableSetRepository {
    public abstract virtual Task`1<LibraryVariableSetEditor> CreateOrModify(string name);
    public abstract virtual Task`1<LibraryVariableSetEditor> CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.Async.ILicensesRepository {
    public abstract virtual Task`1<LicenseResource> GetCurrent();
    public abstract virtual Task`1<LicenseResource> UpdateCurrent(LicenseResource resource);
    public abstract virtual Task`1<LicenseStatusResource> GetStatus();
}
public interface Octopus.Client.Repositories.Async.ILifecyclesRepository {
    public abstract virtual Task`1<LifecycleEditor> CreateOrModify(string name);
    public abstract virtual Task`1<LifecycleEditor> CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.Async.IMachinePolicyRepository {
    public abstract virtual Task`1<List`1<MachineResource>> GetMachines(MachinePolicyResource machinePolicy);
    public abstract virtual Task`1<MachinePolicyResource> GetTemplate();
}
public interface Octopus.Client.Repositories.Async.IMachineRepository {
    public abstract virtual Task`1<MachineResource> Discover(string host, int port, Nullable`1<DiscoverableEndpointType> discoverableEndpointType);
    public abstract virtual Task`1<MachineResource> Discover(DiscoverMachineOptions options);
    public abstract virtual Task`1<MachineConnectionStatus> GetConnectionStatus(MachineResource machine);
    public abstract virtual Task`1<List`1<MachineResource>> FindByThumbprint(string thumbprint);
    public abstract virtual Task`1<IReadOnlyList`1<TaskResource>> GetTasks(MachineResource machine);
    public abstract virtual Task`1<IReadOnlyList`1<TaskResource>> GetTasks(MachineResource machine, object pathParameters);
    public abstract virtual Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public abstract virtual Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    public abstract virtual Task`1<ResourceCollection`1<MachineResource>> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, string environmentIds);
}
public interface Octopus.Client.Repositories.Async.IMachineRoleRepository {
    public abstract virtual Task`1<List`1<string>> GetAllRoleNames();
}
public interface Octopus.Client.Repositories.Async.IMigrationRepository {
    public abstract virtual Task`1<MigrationPartialExportResource> PartialExport(MigrationPartialExportResource resource);
    public abstract virtual Task`1<MigrationImportResource> Import(MigrationImportResource resource);
}
public interface Octopus.Client.Repositories.Async.IModify`1 {
    public abstract virtual Task`1<TResource> Modify(TResource resource);
}
internal class Octopus.Client.Repositories.Async.InterruptionRepository : BasicRepository`1<InterruptionResource> {
    public InterruptionRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.InterruptionRepository/<List>d__1")]
public sealed virtual Task`1<ResourceCollection`1<InterruptionResource>> List(int skip, Nullable`1<int> take, bool pendingOnly, string regardingDocumentId);
    public sealed virtual Task Submit(InterruptionResource interruption);
    public sealed virtual Task TakeResponsibility(InterruptionResource interruption);
    public sealed virtual Task`1<UserResource> GetResponsibleUser(InterruptionResource interruption);
}
public interface Octopus.Client.Repositories.Async.IOctopusServerNodeRepository {
    public abstract virtual Task`1<OctopusServerNodeDetailsResource> Details(OctopusServerNodeResource node);
    public abstract virtual Task`1<OctopusServerClusterSummaryResource> Summary();
}
public interface Octopus.Client.Repositories.Async.IPackageMetadataRepository {
    public abstract virtual Task`1<OctopusPackageMetadataMappedResource> Get(string id);
    public abstract virtual Task`1<OctopusPackageMetadataMappedResource> Push(string packageId, string version, OctopusPackageMetadata octopusMetadata, OverwriteMode overwriteMode);
    [ObsoleteAttribute]
public abstract virtual Task`1<OctopusPackageMetadataMappedResource> Push(string packageId, string version, OctopusPackageMetadata octopusMetadata, bool replaceExisting);
}
public interface Octopus.Client.Repositories.Async.IPaginate`1 {
    public abstract virtual Task Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, string path, object pathParameters);
    public abstract virtual Task`1<TResource> FindOne(Func`2<TResource, bool> search, string path, object pathParameters);
    public abstract virtual Task`1<List`1<TResource>> FindMany(Func`2<TResource, bool> search, string path, object pathParameters);
    public abstract virtual Task`1<List`1<TResource>> FindAll(string path, object pathParameters);
}
public interface Octopus.Client.Repositories.Async.IPerformanceConfigurationRepository {
    public abstract virtual Task`1<PerformanceConfigurationResource> Get();
    public abstract virtual Task`1<PerformanceConfigurationResource> Modify(PerformanceConfigurationResource resource);
}
public interface Octopus.Client.Repositories.Async.IProjectGroupRepository {
    public abstract virtual Task`1<List`1<ProjectResource>> GetProjects(ProjectGroupResource projectGroup);
    public abstract virtual Task`1<ProjectGroupEditor> CreateOrModify(string name);
    public abstract virtual Task`1<ProjectGroupEditor> CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.Async.IProjectRepository {
    public abstract virtual Task`1<ResourceCollection`1<GitBranchResource>> GetGitBranches(ProjectResource projectResource);
    public abstract virtual Task`1<GitBranchResource> GetGitBranch(ProjectResource projectResource, string branch);
    public abstract virtual Task`1<ConvertProjectToGitResponse> ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage);
    public abstract virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ProjectResource project, int skip, Nullable`1<int> take, string searchByVersion);
    public abstract virtual Task`1<IReadOnlyList`1<ReleaseResource>> GetAllReleases(ProjectResource project);
    public abstract virtual Task`1<ReleaseResource> GetReleaseByVersion(ProjectResource project, string version);
    public abstract virtual Task`1<ResourceCollection`1<ChannelResource>> GetChannels(ProjectResource project);
    public abstract virtual Task`1<IReadOnlyList`1<ChannelResource>> GetAllChannels(ProjectResource project);
    public abstract virtual Task`1<ProgressionResource> GetProgression(ProjectResource project);
    public abstract virtual Task`1<ResourceCollection`1<ProjectTriggerResource>> GetTriggers(ProjectResource project);
    public abstract virtual Task`1<IReadOnlyList`1<ProjectTriggerResource>> GetAllTriggers(ProjectResource project);
    public abstract virtual Task SetLogo(ProjectResource project, string fileName, Stream contents);
    public abstract virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    public abstract virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    public abstract virtual Task`1<ResourceCollection`1<RunbookSnapshotResource>> GetRunbookSnapshots(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public abstract virtual Task`1<IReadOnlyList`1<RunbookSnapshotResource>> GetAllRunbookSnapshots(ProjectResource project);
    public abstract virtual Task`1<RunbookSnapshotResource> GetRunbookSnapshotByName(ProjectResource project, string name);
    public abstract virtual Task`1<ResourceCollection`1<RunbookResource>> GetRunbooks(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public abstract virtual Task`1<IReadOnlyList`1<RunbookResource>> GetAllRunbooks(ProjectResource project);
}
public interface Octopus.Client.Repositories.Async.IProjectTriggerRepository {
    public abstract virtual Task`1<ProjectTriggerResource> FindByName(ProjectResource project, string name);
    public abstract virtual Task`1<ProjectTriggerEditor> CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    public abstract virtual Task`1<ResourceCollection`1<ProjectTriggerResource>> FindByRunbook(String[] runbookIds);
}
public interface Octopus.Client.Repositories.Async.IProxyRepository {
}
public interface Octopus.Client.Repositories.Async.IReleaseRepository {
    public abstract virtual Task`1<ResourceCollection`1<DeploymentResource>> GetDeployments(ReleaseResource release, int skip, Nullable`1<int> take);
    public abstract virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(ReleaseResource release, int skip, Nullable`1<int> take);
    public abstract virtual Task`1<DeploymentTemplateResource> GetTemplate(ReleaseResource release);
    public abstract virtual Task`1<DeploymentPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual Task`1<ReleaseResource> SnapshotVariables(ReleaseResource release);
    public abstract virtual Task`1<ReleaseResource> Create(ReleaseResource release, bool ignoreChannelRules);
    public abstract virtual Task`1<LifecycleProgressionResource> GetProgression(ReleaseResource release);
}
public interface Octopus.Client.Repositories.Async.IResourceRepository {
    public IOctopusAsyncClient Client { get; }
    public abstract virtual IOctopusAsyncClient get_Client();
}
public interface Octopus.Client.Repositories.Async.IRetentionPolicyRepository {
    public abstract virtual Task`1<TaskResource> ApplyNow(string spaceId);
}
public interface Octopus.Client.Repositories.Async.IRunbookProcessRepository {
    public abstract virtual Task`1<RunbookSnapshotTemplateResource> GetTemplate(RunbookProcessResource runbookProcess);
}
public interface Octopus.Client.Repositories.Async.IRunbookRepository {
    public abstract virtual Task`1<RunbookResource> FindByName(ProjectResource project, string name);
    public abstract virtual Task`1<RunbookEditor> CreateOrModify(ProjectResource project, string name, string description);
    public abstract virtual Task`1<RunbookSnapshotTemplateResource> GetRunbookSnapshotTemplate(RunbookResource runbook);
    public abstract virtual Task`1<RunbookRunTemplateResource> GetRunbookRunTemplate(RunbookResource runbook);
    public abstract virtual Task`1<RunbookRunPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual Task`1<RunbookRunResource> Run(RunbookResource runbook, RunbookRunResource runbookRun);
    public abstract virtual Task`1<RunbookRunResource[]> Run(RunbookResource runbook, RunbookRunParameters runbookRunParameters);
}
public interface Octopus.Client.Repositories.Async.IRunbookRunRepository {
    public abstract virtual Task`1<TaskResource> GetTask(RunbookRunResource resource);
    public abstract virtual Task`1<ResourceCollection`1<RunbookRunResource>> FindBy(String[] projects, String[] runbooks, String[] environments, int skip, Nullable`1<int> take);
    public abstract virtual Task Paginate(String[] projects, String[] runbooks, String[] environments, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
    public abstract virtual Task Paginate(String[] projects, String[] runbooks, String[] environments, String[] tenants, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
}
public interface Octopus.Client.Repositories.Async.IRunbookSnapshotRepository {
    public abstract virtual Task`1<ResourceCollection`1<RunbookRunResource>> GetRunbookRuns(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public abstract virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public abstract virtual Task`1<RunbookRunTemplateResource> GetTemplate(RunbookSnapshotResource runbookSnapshot);
    public abstract virtual Task`1<RunbookRunPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual Task`1<RunbookSnapshotResource> SnapshotVariables(RunbookSnapshotResource runbookSnapshot);
    public abstract virtual Task`1<RunbookSnapshotResource> Create(RunbookSnapshotResource runbookSnapshot);
}
public interface Octopus.Client.Repositories.Async.ISchedulerRepository {
    public abstract virtual Task Start();
    public abstract virtual Task Start(string taskName);
    public abstract virtual Task Stop();
    public abstract virtual Task Stop(string taskName);
    public abstract virtual Task Trigger(string taskName);
    public abstract virtual Task`1<ScheduledTaskDetailsResource> GetLogs(string taskName);
    public abstract virtual Task`1<Stream> GetRawLogs(string taskName);
    public abstract virtual Task`1<SchedulerStatusResource> Status();
}
public interface Octopus.Client.Repositories.Async.IScopedUserRoleRepository {
}
public interface Octopus.Client.Repositories.Async.IServerStatusRepository {
    public abstract virtual Task`1<ServerStatusResource> GetServerStatus();
    public abstract virtual Task`1<SystemInfoResource> GetSystemInfo(ServerStatusResource status);
    public abstract virtual Task`1<ServerStatusHealthResource> GetServerHealth();
}
public interface Octopus.Client.Repositories.Async.ISpaceRepository {
    public abstract virtual Task SetLogo(SpaceResource space, string fileName, Stream contents);
    public abstract virtual Task`1<SpaceSearchResult[]> Search(string spaceId, string keyword);
}
public interface Octopus.Client.Repositories.Async.ISubscriptionRepository {
    public abstract virtual Task`1<SubscriptionEditor> CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
}
public interface Octopus.Client.Repositories.Async.ITagSetRepository {
    public abstract virtual Task Sort(String[] tagSetIdsInOrder);
    public abstract virtual Task`1<TagSetEditor> CreateOrModify(string name);
    public abstract virtual Task`1<TagSetEditor> CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.Async.ITaskRepository {
    public abstract virtual Task`1<TaskResource> ExecuteHealthCheck(string description, int timeoutAfterMinutes, int machineTimeoutAfterMinutes, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public abstract virtual Task`1<TaskResource> ExecuteCalamariUpdate(string description, String[] machineIds);
    public abstract virtual Task`1<TaskResource> ExecuteBackup(string description);
    public abstract virtual Task`1<TaskResource> ExecuteTentacleUpgrade(string description, string environmentId, String[] machineIds, string restrictTo, string workerpooltId, String[] workerIds);
    public abstract virtual Task`1<TaskResource> ExecuteAdHocScript(string scriptBody, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, string syntax, Nullable`1<TargetType> targetType);
    public abstract virtual Task`1<TaskDetailsResource> GetDetails(TaskResource resource, Nullable`1<bool> includeVerboseOutput, Nullable`1<int> tail);
    public abstract virtual Task`1<TaskResource> ExecuteActionTemplate(ActionTemplateResource resource, Dictionary`2<string, PropertyValueResource> properties, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, Nullable`1<TargetType> targetType);
    public abstract virtual Task`1<TaskResource> ExecuteCommunityActionTemplatesSynchronisation(string description);
    public abstract virtual Task`1<List`1<TaskResource>> GetAllActive(int pageSize);
    public abstract virtual Task`1<TaskResourceCollection> GetActiveWithSummary(int pageSize, int skip);
    public abstract virtual Task`1<TaskResourceCollection> GetAllWithSummary(int pageSize, int skip);
    public abstract virtual Task`1<string> GetRawOutputLog(TaskResource resource);
    public abstract virtual Task`1<TaskTypeResource[]> GetTaskTypes();
    public abstract virtual Task Rerun(TaskResource resource);
    public abstract virtual Task Cancel(TaskResource resource);
    public abstract virtual Task ModifyState(TaskResource resource, TaskState newState, string reason);
    public abstract virtual Task`1<IReadOnlyList`1<TaskResource>> GetQueuedBehindTasks(TaskResource resource);
    public abstract virtual Task WaitForCompletion(TaskResource task, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public abstract virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public abstract virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Func`2<TaskResource[], Task> interval);
    public abstract virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, Nullable`1<TimeSpan> timeoutAfter, Func`2<TaskResource[], Task> interval);
}
public interface Octopus.Client.Repositories.Async.ITeamsRepository {
    public abstract virtual Task`1<List`1<ScopedUserRoleResource>> GetScopedUserRoles(TeamResource team);
}
public interface Octopus.Client.Repositories.Async.ITelemetryConfigurationRepository {
    public abstract virtual Task`1<TelemetryConfigurationResource> GetTelemetryConfiguration();
    public abstract virtual Task`1<TelemetryConfigurationResource> ModifyTelemetryConfiguration(TelemetryConfigurationResource resource);
    public abstract virtual Task`1<TelemetryConfigurationResource> EnableTelemetry();
    public abstract virtual Task`1<TelemetryConfigurationResource> DisableTelemetry();
}
public interface Octopus.Client.Repositories.Async.ITenantRepository {
    public abstract virtual Task`1<MultiTenancyStatusResource> Status();
    public abstract virtual Task SetLogo(TenantResource tenant, string fileName, Stream contents);
    public abstract virtual Task`1<TenantVariableResource> GetVariables(TenantResource tenant);
    public abstract virtual Task`1<TenantVariableResource> ModifyVariables(TenantResource tenant, TenantVariableResource variables);
    public abstract virtual Task`1<List`1<TenantsMissingVariablesResource>> GetMissingVariables(string tenantId, string projectId, string environmentId);
    public abstract virtual Task`1<List`1<TenantResource>> FindAll(string name, String[] tags, int pageSize);
    public abstract virtual Task`1<TenantEditor> CreateOrModify(string name);
    public abstract virtual Task`1<TenantEditor> CreateOrModify(string name, string description);
    public abstract virtual Task`1<TenantEditor> CreateOrModify(string name, string description, string cloneId);
}
public interface Octopus.Client.Repositories.Async.ITenantVariablesRepository {
    public abstract virtual Task`1<List`1<TenantVariableResource>> GetAll(ProjectResource projectResource);
}
public interface Octopus.Client.Repositories.Async.IUpgradeConfigurationRepository {
    public abstract virtual Task`1<UpgradeConfigurationResource> Get();
}
public interface Octopus.Client.Repositories.Async.IUserInvitesRepository {
    public abstract virtual Task`1<InvitationResource> Invite(string addToTeamId);
    public abstract virtual Task`1<InvitationResource> Invite(ReferenceCollection addToTeamIds);
}
public interface Octopus.Client.Repositories.Async.IUserPermissionsRepository {
    public abstract virtual Task`1<UserPermissionSetResource> Get(UserResource user);
    public abstract virtual Task`1<UserPermissionSetResource> GetConfiguration(UserResource user);
    public abstract virtual Task`1<Stream> Export(UserPermissionSetResource userPermissions);
}
public interface Octopus.Client.Repositories.Async.IUserRepository {
    public abstract virtual Task`1<UserResource> FindByUsername(string username);
    public abstract virtual Task`1<UserResource> Create(string username, string displayName, string password, string emailAddress);
    public abstract virtual Task`1<UserResource> CreateServiceAccount(string username, string displayName);
    public abstract virtual Task`1<UserResource> Register(RegisterCommand registerCommand);
    public abstract virtual Task SignIn(LoginCommand loginCommand);
    public abstract virtual Task SignIn(string username, string password, bool rememberMe);
    public abstract virtual Task SignOut();
    public abstract virtual Task`1<UserResource> GetCurrent();
    public abstract virtual Task`1<SpaceResource[]> GetSpaces(UserResource user);
    public abstract virtual Task`1<ApiKeyCreatedResource> CreateApiKey(UserResource user, string purpose, Nullable`1<DateTimeOffset> expires);
    public abstract virtual Task`1<List`1<ApiKeyResource>> GetApiKeys(UserResource user);
    public abstract virtual Task RevokeApiKey(ApiKeyResourceBase apiKey);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public abstract virtual Task`1<InvitationResource> Invite(string addToTeamId);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public abstract virtual Task`1<InvitationResource> Invite(ReferenceCollection addToTeamIds);
}
public interface Octopus.Client.Repositories.Async.IUserRolesRepository {
}
public interface Octopus.Client.Repositories.Async.IUserTeamsRepository {
    public abstract virtual Task`1<TeamNameResource[]> Get(UserResource user);
}
public interface Octopus.Client.Repositories.Async.IVariableSetRepository {
    public abstract virtual Task`1<String[]> GetVariableNames(string projects, String[] environments);
    public abstract virtual Task`1<VariableSetResource> GetVariablePreview(string project, string channel, string tenant, string runbook, string action, string environment, string machine, string role);
}
public interface Octopus.Client.Repositories.Async.IWorkerPoolRepository {
    public abstract virtual Task`1<List`1<WorkerResource>> GetMachines(WorkerPoolResource workerPool, Nullable`1<int> skip, Nullable`1<int> take, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles);
    public abstract virtual Task`1<WorkerPoolsSummaryResource> Summary(string ids, string partialName, string machinePartialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, Nullable`1<bool> hideEmptyPools);
    public abstract virtual Task Sort(String[] workerPoolIdsInOrder);
    public abstract virtual Task`1<WorkerPoolEditor> CreateOrModify(string name);
    public abstract virtual Task`1<WorkerPoolEditor> CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.Async.IWorkerRepository {
    public abstract virtual Task`1<WorkerResource> Discover(string host, int port, Nullable`1<DiscoverableEndpointType> discoverableEndpointType);
    public abstract virtual Task`1<MachineConnectionStatus> GetConnectionStatus(WorkerResource machine);
    public abstract virtual Task`1<List`1<WorkerResource>> FindByThumbprint(string thumbprint);
    public abstract virtual Task`1<WorkerEditor> CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] pools);
    public abstract virtual Task`1<ResourceCollection`1<WorkerResource>> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string workerpoolIds);
}
internal class Octopus.Client.Repositories.Async.LegacyInvitationRepository : BasicRepository`1<InvitationResource> {
    public LegacyInvitationRepository(IOctopusAsyncRepository repository);
}
internal class Octopus.Client.Repositories.Async.LibraryVariableSetRepository : BasicRepository`1<LibraryVariableSetResource> {
    public LibraryVariableSetRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<LibraryVariableSetEditor> CreateOrModify(string name);
    public sealed virtual Task`1<LibraryVariableSetEditor> CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.Async.LicensesRepository : BasicRepository`1<LicenseResource> {
    public LicensesRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.LicensesRepository/<GetCurrent>d__1")]
public sealed virtual Task`1<LicenseResource> GetCurrent();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.LicensesRepository/<UpdateCurrent>d__2")]
public sealed virtual Task`1<LicenseResource> UpdateCurrent(LicenseResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.LicensesRepository/<GetStatus>d__3")]
public sealed virtual Task`1<LicenseStatusResource> GetStatus();
}
internal class Octopus.Client.Repositories.Async.LifecyclesRepository : BasicRepository`1<LifecycleResource> {
    public LifecyclesRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<LifecycleEditor> CreateOrModify(string name);
    public sealed virtual Task`1<LifecycleEditor> CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.Async.MachinePolicyRepository : BasicRepository`1<MachinePolicyResource> {
    public MachinePolicyRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachinePolicyRepository/<GetMachines>d__1")]
public sealed virtual Task`1<List`1<MachineResource>> GetMachines(MachinePolicyResource machinePolicy);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachinePolicyRepository/<GetTemplate>d__2")]
public sealed virtual Task`1<MachinePolicyResource> GetTemplate();
}
internal class Octopus.Client.Repositories.Async.MachineRepository : BasicRepository`1<MachineResource> {
    public MachineRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<MachineResource> Discover(string host, int port, Nullable`1<DiscoverableEndpointType> type);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachineRepository/<Discover>d__2")]
public sealed virtual Task`1<MachineResource> Discover(DiscoverMachineOptions options);
    public sealed virtual Task`1<MachineConnectionStatus> GetConnectionStatus(MachineResource machine);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachineRepository/<FindByThumbprint>d__4")]
public sealed virtual Task`1<List`1<MachineResource>> FindByThumbprint(string thumbprint);
    public sealed virtual Task`1<IReadOnlyList`1<TaskResource>> GetTasks(MachineResource machine);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachineRepository/<GetTasks>d__6")]
public sealed virtual Task`1<IReadOnlyList`1<TaskResource>> GetTasks(MachineResource machine, object pathParameters);
    public sealed virtual Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public sealed virtual Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachineRepository/<List>d__9")]
public sealed virtual Task`1<ResourceCollection`1<MachineResource>> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, string environmentIds);
}
internal class Octopus.Client.Repositories.Async.MachineRoleRepository : object {
    private IOctopusAsyncRepository repository;
    public MachineRoleRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachineRoleRepository/<GetAllRoleNames>d__2")]
public sealed virtual Task`1<List`1<string>> GetAllRoleNames();
}
internal class Octopus.Client.Repositories.Async.MigrationRepository : object {
    private IOctopusAsyncRepository repository;
    public MigrationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MigrationRepository/<PartialExport>d__2")]
public sealed virtual Task`1<MigrationPartialExportResource> PartialExport(MigrationPartialExportResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MigrationRepository/<Import>d__3")]
public sealed virtual Task`1<MigrationImportResource> Import(MigrationImportResource resource);
}
internal class Octopus.Client.Repositories.Async.MixedScopeBaseRepository`1 : BasicRepository`1<TMixedScopeResource> {
    private SpaceContext userDefinedSpaceContext;
    protected MixedScopeBaseRepository`1(IOctopusAsyncRepository repository, string collectionLinkName);
    protected MixedScopeBaseRepository`1(IOctopusAsyncRepository repository, string collectionLinkName, SpaceContext userDefinedSpaceContext);
    protected virtual Dictionary`2<string, object> GetAdditionalQueryParameters();
    private void ValidateThatICanUseACustomSpaceContext();
    protected virtual Task CheckSpaceResource(IHaveSpaceResource spaceResource);
    protected SpaceContext GetCurrentSpaceContext();
    protected virtual void EnrichSpaceId(TMixedScopeResource resource);
    protected void EnsureSingleSpaceContext();
    protected void EnsureSystemContext();
    [CompilerGeneratedAttribute]
private void <EnsureSingleSpaceContext>b__8_2();
}
internal class Octopus.Client.Repositories.Async.OctopusServerNodeRepository : BasicRepository`1<OctopusServerNodeResource> {
    private IOctopusAsyncRepository repository;
    public OctopusServerNodeRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.OctopusServerNodeRepository/<Details>d__2")]
public sealed virtual Task`1<OctopusServerNodeDetailsResource> Details(OctopusServerNodeResource node);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.OctopusServerNodeRepository/<Summary>d__3")]
public sealed virtual Task`1<OctopusServerClusterSummaryResource> Summary();
}
internal class Octopus.Client.Repositories.Async.PackageMetadataRepository : object {
    private IOctopusAsyncRepository repository;
    private static ILog Logger;
    public PackageMetadataRepository(IOctopusAsyncRepository repository);
    private static PackageMetadataRepository();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.PackageMetadataRepository/<Get>d__3")]
public sealed virtual Task`1<OctopusPackageMetadataMappedResource> Get(string id);
    public sealed virtual Task`1<OctopusPackageMetadataMappedResource> Push(string packageId, string version, OctopusPackageMetadata octopusMetadata, bool replaceExisting);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.PackageMetadataRepository/<Push>d__5")]
public sealed virtual Task`1<OctopusPackageMetadataMappedResource> Push(string packageId, string version, OctopusPackageMetadata octopusMetadata, OverwriteMode overwriteMode);
}
internal class Octopus.Client.Repositories.Async.PerformanceConfigurationRepository : object {
    private IOctopusAsyncRepository repository;
    public PerformanceConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.PerformanceConfigurationRepository/<Get>d__2")]
public sealed virtual Task`1<PerformanceConfigurationResource> Get();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.PerformanceConfigurationRepository/<Modify>d__3")]
public sealed virtual Task`1<PerformanceConfigurationResource> Modify(PerformanceConfigurationResource resource);
}
internal class Octopus.Client.Repositories.Async.ProjectGroupRepository : BasicRepository`1<ProjectGroupResource> {
    public ProjectGroupRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ProjectGroupRepository/<GetProjects>d__1")]
public sealed virtual Task`1<List`1<ProjectResource>> GetProjects(ProjectGroupResource projectGroup);
    public sealed virtual Task`1<ProjectGroupEditor> CreateOrModify(string name);
    public sealed virtual Task`1<ProjectGroupEditor> CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.Async.ProjectRepository : BasicRepository`1<ProjectResource> {
    public ProjectRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ResourceCollection`1<GitBranchResource>> GetGitBranches(ProjectResource projectResource);
    public sealed virtual Task`1<GitBranchResource> GetGitBranch(ProjectResource projectResource, string branch);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ProjectRepository/<ConvertToGit>d__3")]
public sealed virtual Task`1<ConvertProjectToGitResponse> ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage);
    public sealed virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ProjectResource project, int skip, Nullable`1<int> take, string searchByVersion);
    public sealed virtual Task`1<IReadOnlyList`1<ReleaseResource>> GetAllReleases(ProjectResource project);
    public sealed virtual Task`1<ReleaseResource> GetReleaseByVersion(ProjectResource project, string version);
    public sealed virtual Task`1<ResourceCollection`1<ChannelResource>> GetChannels(ProjectResource project);
    public sealed virtual Task`1<IReadOnlyList`1<ChannelResource>> GetAllChannels(ProjectResource project);
    public sealed virtual Task`1<ProgressionResource> GetProgression(ProjectResource project);
    public sealed virtual Task`1<ResourceCollection`1<ProjectTriggerResource>> GetTriggers(ProjectResource project);
    public sealed virtual Task`1<IReadOnlyList`1<ProjectTriggerResource>> GetAllTriggers(ProjectResource project);
    public sealed virtual Task SetLogo(ProjectResource project, string fileName, Stream contents);
    public sealed virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    public sealed virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    public sealed virtual Task`1<ResourceCollection`1<RunbookSnapshotResource>> GetRunbookSnapshots(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public sealed virtual Task`1<IReadOnlyList`1<RunbookSnapshotResource>> GetAllRunbookSnapshots(ProjectResource project);
    public sealed virtual Task`1<RunbookSnapshotResource> GetRunbookSnapshotByName(ProjectResource project, string name);
    public sealed virtual Task`1<ResourceCollection`1<RunbookResource>> GetRunbooks(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public sealed virtual Task`1<IReadOnlyList`1<RunbookResource>> GetAllRunbooks(ProjectResource project);
}
internal class Octopus.Client.Repositories.Async.ProjectTriggerRepository : BasicRepository`1<ProjectTriggerResource> {
    public ProjectTriggerRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ProjectTriggerResource> FindByName(ProjectResource project, string name);
    public sealed virtual Task`1<ProjectTriggerEditor> CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ProjectTriggerRepository/<FindByRunbook>d__3")]
public sealed virtual Task`1<ResourceCollection`1<ProjectTriggerResource>> FindByRunbook(String[] runbookIds);
}
internal class Octopus.Client.Repositories.Async.ProxyRepository : BasicRepository`1<ProxyResource> {
    public ProxyRepository(IOctopusAsyncRepository repository);
}
internal class Octopus.Client.Repositories.Async.ReleaseRepository : BasicRepository`1<ReleaseResource> {
    public ReleaseRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ResourceCollection`1<DeploymentResource>> GetDeployments(ReleaseResource release, int skip, Nullable`1<int> take);
    public sealed virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(ReleaseResource release, int skip, Nullable`1<int> take);
    public sealed virtual Task`1<DeploymentTemplateResource> GetTemplate(ReleaseResource release);
    public sealed virtual Task`1<DeploymentPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ReleaseRepository/<SnapshotVariables>d__5")]
public sealed virtual Task`1<ReleaseResource> SnapshotVariables(ReleaseResource release);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ReleaseRepository/<Create>d__6")]
public sealed virtual Task`1<ReleaseResource> Create(ReleaseResource release, bool ignoreChannelRules);
    public sealed virtual Task`1<LifecycleProgressionResource> GetProgression(ReleaseResource release);
}
internal class Octopus.Client.Repositories.Async.RetentionPolicyRepository : BasicRepository`1<RetentionPolicyResource> {
    public RetentionPolicyRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<TaskResource> ApplyNow(string spaceId);
}
internal class Octopus.Client.Repositories.Async.RunbookProcessRepository : BasicRepository`1<RunbookProcessResource> {
    public RunbookProcessRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<RunbookSnapshotTemplateResource> GetTemplate(RunbookProcessResource runbookProcess);
}
internal class Octopus.Client.Repositories.Async.RunbookRepository : BasicRepository`1<RunbookResource> {
    private SemanticVersion integrationTestVersion;
    private SemanticVersion versionAfterWhichRunbookRunParametersAreAvailable;
    public RunbookRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<RunbookResource> FindByName(ProjectResource project, string name);
    public sealed virtual Task`1<RunbookEditor> CreateOrModify(ProjectResource project, string name, string description);
    public sealed virtual Task`1<RunbookSnapshotTemplateResource> GetRunbookSnapshotTemplate(RunbookResource runbook);
    public sealed virtual Task`1<RunbookRunTemplateResource> GetRunbookRunTemplate(RunbookResource runbook);
    public sealed virtual Task`1<RunbookRunPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    private bool ServerSupportsRunbookRunParameters(string version);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookRepository/<Run>d__9")]
public sealed virtual Task`1<RunbookRunResource> Run(RunbookResource runbook, RunbookRunResource runbookRun);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookRepository/<Run>d__10")]
public sealed virtual Task`1<RunbookRunResource[]> Run(RunbookResource runbook, RunbookRunParameters runbookRunParameters);
}
internal class Octopus.Client.Repositories.Async.RunbookRunRepository : BasicRepository`1<RunbookRunResource> {
    public RunbookRunRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<TaskResource> GetTask(RunbookRunResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookRunRepository/<FindBy>d__2")]
public sealed virtual Task`1<ResourceCollection`1<RunbookRunResource>> FindBy(String[] projects, String[] runbooks, String[] environments, int skip, Nullable`1<int> take);
    public sealed virtual Task Paginate(String[] projects, String[] runbooks, String[] environments, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookRunRepository/<Paginate>d__4")]
public sealed virtual Task Paginate(String[] projects, String[] runbooks, String[] environments, String[] tenants, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
}
internal class Octopus.Client.Repositories.Async.RunbookSnapshotRepository : BasicRepository`1<RunbookSnapshotResource> {
    public RunbookSnapshotRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ResourceCollection`1<RunbookRunResource>> GetRunbookRuns(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public sealed virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public sealed virtual Task`1<RunbookRunTemplateResource> GetTemplate(RunbookSnapshotResource runbookSnapshot);
    public sealed virtual Task`1<RunbookRunPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookSnapshotRepository/<SnapshotVariables>d__5")]
public sealed virtual Task`1<RunbookSnapshotResource> SnapshotVariables(RunbookSnapshotResource runbookSnapshot);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookSnapshotRepository/<Create>d__6")]
public sealed virtual Task`1<RunbookSnapshotResource> Create(RunbookSnapshotResource runbookSnapshot);
}
internal class Octopus.Client.Repositories.Async.SchedulerRepository : object {
    private IOctopusAsyncRepository repository;
    public SchedulerRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task Start();
    public sealed virtual Task Start(string taskName);
    public sealed virtual Task Trigger(string taskName);
    public sealed virtual Task Stop();
    public sealed virtual Task Stop(string taskName);
    public sealed virtual Task`1<ScheduledTaskDetailsResource> GetLogs(string taskName);
    public sealed virtual Task`1<Stream> GetRawLogs(string taskName);
    public sealed virtual Task`1<SchedulerStatusResource> Status();
}
internal class Octopus.Client.Repositories.Async.ScopedUserRoleRepository : MixedScopeBaseRepository`1<ScopedUserRoleResource> {
    public ScopedUserRoleRepository(IOctopusAsyncRepository repository);
    private ScopedUserRoleRepository(IOctopusAsyncRepository repository, SpaceContext spaceContext);
    public sealed virtual IScopedUserRoleRepository UsingContext(SpaceContext spaceContext);
}
internal class Octopus.Client.Repositories.Async.ServerStatusRepository : BasicRepository`1<ServerStatusResource> {
    public ServerStatusRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ServerStatusRepository/<GetServerStatus>d__1")]
public sealed virtual Task`1<ServerStatusResource> GetServerStatus();
    public sealed virtual Task`1<SystemInfoResource> GetSystemInfo(ServerStatusResource status);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ServerStatusRepository/<GetServerHealth>d__3")]
public sealed virtual Task`1<ServerStatusHealthResource> GetServerHealth();
}
internal class Octopus.Client.Repositories.Async.SpaceRepository : BasicRepository`1<SpaceResource> {
    public SpaceRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task SetLogo(SpaceResource space, string fileName, Stream contents);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.SpaceRepository/<Search>d__2")]
public sealed virtual Task`1<SpaceSearchResult[]> Search(string spaceId, string keyword);
}
public class Octopus.Client.Repositories.Async.SpaceScopedOperationOutsideOfCurrentSpaceContextException : Exception {
    public SpaceScopedOperationOutsideOfCurrentSpaceContextException(string spaceId, SpaceContext context);
}
internal class Octopus.Client.Repositories.Async.SubscriptionRepository : BasicRepository`1<SubscriptionResource> {
    public SubscriptionRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<SubscriptionEditor> CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
}
internal class Octopus.Client.Repositories.Async.TagSetRepository : BasicRepository`1<TagSetResource> {
    public TagSetRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TagSetRepository/<Sort>d__1")]
public sealed virtual Task Sort(String[] tagSetIdsInOrder);
    public sealed virtual Task`1<TagSetEditor> CreateOrModify(string name);
    public sealed virtual Task`1<TagSetEditor> CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.Async.TaskRepository : MixedScopeBaseRepository`1<TaskResource> {
    public TaskRepository(IOctopusAsyncRepository repository);
    private TaskRepository(IOctopusAsyncRepository repository, SpaceContext spaceContext);
    public sealed virtual Task`1<TaskResource> ExecuteHealthCheck(string description, int timeoutAfterMinutes, int machineTimeoutAfterMinutes, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public sealed virtual Task`1<TaskResource> ExecuteCalamariUpdate(string description, String[] machineIds);
    public sealed virtual Task`1<TaskResource> ExecuteBackup(string description);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ExecuteTentacleUpgrade>d__5")]
public sealed virtual Task`1<TaskResource> ExecuteTentacleUpgrade(string description, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ExecuteAdHocScript>d__6")]
public sealed virtual Task`1<TaskResource> ExecuteAdHocScript(string scriptBody, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, string syntax, Nullable`1<TargetType> targetType);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ExecuteActionTemplate>d__7")]
public sealed virtual Task`1<TaskResource> ExecuteActionTemplate(ActionTemplateResource template, Dictionary`2<string, PropertyValueResource> properties, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, Nullable`1<TargetType> targetType);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<EnsureValidTargetType>d__8")]
private Task EnsureValidTargetType(Nullable`1<TargetType> targetType);
    public sealed virtual Task`1<TaskResource> ExecuteCommunityActionTemplatesSynchronisation(string description);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetDetails>d__10")]
public sealed virtual Task`1<TaskDetailsResource> GetDetails(TaskResource resource, Nullable`1<bool> includeVerboseOutput, Nullable`1<int> tail);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetRawOutputLog>d__11")]
public sealed virtual Task`1<string> GetRawOutputLog(TaskResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetTaskTypes>d__12")]
public sealed virtual Task`1<TaskTypeResource[]> GetTaskTypes();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<Rerun>d__13")]
public sealed virtual Task Rerun(TaskResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<Cancel>d__14")]
public sealed virtual Task Cancel(TaskResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ModifyState>d__15")]
public sealed virtual Task ModifyState(TaskResource resource, TaskState newState, string reason);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetQueuedBehindTasks>d__16")]
public sealed virtual Task`1<IReadOnlyList`1<TaskResource>> GetQueuedBehindTasks(TaskResource resource);
    public sealed virtual Task WaitForCompletion(TaskResource task, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public sealed virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public sealed virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Func`2<TaskResource[], Task> interval);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<WaitForCompletion>d__20")]
public sealed virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, Nullable`1<TimeSpan> timeoutAfter, Func`2<TaskResource[], Task> interval);
    public sealed virtual Task`1<List`1<TaskResource>> GetAllActive(int pageSize);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetActiveWithSummary>d__22")]
public sealed virtual Task`1<TaskResourceCollection> GetActiveWithSummary(int pageSize, int skip);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetAllWithSummary>d__23")]
public sealed virtual Task`1<TaskResourceCollection> GetAllWithSummary(int pageSize, int skip);
    public sealed virtual ITaskRepository UsingContext(SpaceContext spaceContext);
    private void EnsureTaskCanRunInTheCurrentContext(TaskResource task);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<CreateSystemTask>d__26")]
private Task`1<TaskResource> CreateSystemTask(TaskResource task);
}
internal class Octopus.Client.Repositories.Async.TeamsRepository : MixedScopeBaseRepository`1<TeamResource> {
    public TeamsRepository(IOctopusAsyncRepository repository);
    private TeamsRepository(IOctopusAsyncRepository repository, SpaceContext spaceContext);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TeamsRepository/<GetScopedUserRoles>d__2")]
public sealed virtual Task`1<List`1<ScopedUserRoleResource>> GetScopedUserRoles(TeamResource team);
    public sealed virtual ITeamsRepository UsingContext(SpaceContext spaceContext);
}
public class Octopus.Client.Repositories.Async.TelemetryConfigurationRepository : object {
    private IOctopusAsyncRepository repository;
    private static string LinkName;
    public TelemetryConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TelemetryConfigurationRepository/<GetTelemetryConfiguration>d__3")]
public sealed virtual Task`1<TelemetryConfigurationResource> GetTelemetryConfiguration();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TelemetryConfigurationRepository/<ModifyTelemetryConfiguration>d__4")]
public sealed virtual Task`1<TelemetryConfigurationResource> ModifyTelemetryConfiguration(TelemetryConfigurationResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TelemetryConfigurationRepository/<EnableTelemetry>d__5")]
public sealed virtual Task`1<TelemetryConfigurationResource> EnableTelemetry();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TelemetryConfigurationRepository/<DisableTelemetry>d__6")]
public sealed virtual Task`1<TelemetryConfigurationResource> DisableTelemetry();
}
internal class Octopus.Client.Repositories.Async.TenantRepository : BasicRepository`1<TenantResource> {
    public TenantRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<TenantVariableResource> GetVariables(TenantResource tenant);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TenantRepository/<FindAll>d__2")]
public sealed virtual Task`1<List`1<TenantResource>> FindAll(string name, String[] tags, int pageSize);
    public sealed virtual Task`1<TenantVariableResource> ModifyVariables(TenantResource tenant, TenantVariableResource variables);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TenantRepository/<GetMissingVariables>d__4")]
public sealed virtual Task`1<List`1<TenantsMissingVariablesResource>> GetMissingVariables(string tenantId, string projectId, string environmentId);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TenantRepository/<Status>d__5")]
public sealed virtual Task`1<MultiTenancyStatusResource> Status();
    public sealed virtual Task SetLogo(TenantResource tenant, string fileName, Stream contents);
    public sealed virtual Task`1<TenantEditor> CreateOrModify(string name);
    public sealed virtual Task`1<TenantEditor> CreateOrModify(string name, string description);
    public sealed virtual Task`1<TenantEditor> CreateOrModify(string name, string description, string cloneId);
}
internal class Octopus.Client.Repositories.Async.TenantVariablesRepository : BasicRepository`1<TenantVariableResource> {
    public TenantVariablesRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TenantVariablesRepository/<GetAll>d__0")]
public sealed virtual Task`1<List`1<TenantVariableResource>> GetAll(ProjectResource projectResource);
}
internal class Octopus.Client.Repositories.Async.UpgradeConfigurationRepository : BasicRepository`1<UpgradeConfigurationResource> {
    public UpgradeConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UpgradeConfigurationRepository/<Get>d__1")]
public sealed virtual Task`1<UpgradeConfigurationResource> Get();
}
internal class Octopus.Client.Repositories.Async.UserInvitesRepository : MixedScopeBaseRepository`1<InvitationResource> {
    public UserInvitesRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<InvitationResource> Invite(string addToTeamId);
    public sealed virtual Task`1<InvitationResource> Invite(ReferenceCollection addToTeamIds);
}
internal class Octopus.Client.Repositories.Async.UserPermissionsRepository : MixedScopeBaseRepository`1<UserPermissionSetResource> {
    public UserPermissionsRepository(IOctopusAsyncRepository repository);
    private UserPermissionsRepository(IOctopusAsyncRepository repository, SpaceContext spaceContext);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserPermissionsRepository/<Get>d__2")]
public sealed virtual Task`1<UserPermissionSetResource> Get(UserResource user);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserPermissionsRepository/<GetConfiguration>d__3")]
public sealed virtual Task`1<UserPermissionSetResource> GetConfiguration(UserResource user);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserPermissionsRepository/<Export>d__4")]
public sealed virtual Task`1<Stream> Export(UserPermissionSetResource userPermissions);
    public sealed virtual IUserPermissionsRepository UsingContext(SpaceContext spaceContext);
}
internal class Octopus.Client.Repositories.Async.UserRepository : BasicRepository`1<UserResource> {
    private BasicRepository`1<InvitationResource> invitations;
    public UserRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<UserResource> FindByUsername(string username);
    public sealed virtual Task`1<UserResource> Create(string username, string displayName, string password, string emailAddress);
    public sealed virtual Task`1<UserResource> CreateServiceAccount(string username, string displayName);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRepository/<Register>d__5")]
public sealed virtual Task`1<UserResource> Register(RegisterCommand registerCommand);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRepository/<SignIn>d__6")]
public sealed virtual Task SignIn(LoginCommand loginCommand);
    public sealed virtual Task SignIn(string username, string password, bool rememberMe);
    public sealed virtual Task SignOut();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRepository/<GetCurrent>d__9")]
public sealed virtual Task`1<UserResource> GetCurrent();
    public sealed virtual Task`1<SpaceResource[]> GetSpaces(UserResource user);
    public sealed virtual Task`1<ApiKeyCreatedResource> CreateApiKey(UserResource user, string purpose, Nullable`1<DateTimeOffset> expires);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRepository/<GetApiKeys>d__12")]
public sealed virtual Task`1<List`1<ApiKeyResource>> GetApiKeys(UserResource user);
    public sealed virtual Task RevokeApiKey(ApiKeyResourceBase apiKey);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public sealed virtual Task`1<InvitationResource> Invite(string addToTeamId);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public sealed virtual Task`1<InvitationResource> Invite(ReferenceCollection addToTeamIds);
}
internal class Octopus.Client.Repositories.Async.UserRolesRepository : BasicRepository`1<UserRoleResource> {
    public UserRolesRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRolesRepository/<Create>d__1")]
public virtual Task`1<UserRoleResource> Create(UserRoleResource resource, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRolesRepository/<Modify>d__2")]
public virtual Task`1<UserRoleResource> Modify(UserRoleResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRolesRepository/<RemoveInvalidPermissions>d__3")]
private Task RemoveInvalidPermissions(UserRoleResource resource);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<UserRoleResource> <>n__0(UserRoleResource resource, object pathParameters);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<UserRoleResource> <>n__1(UserRoleResource resource);
    [CompilerGeneratedAttribute]
internal static List`1<Permission> <RemoveInvalidPermissions>g__RemoveDeprecatedPermission|3_0(Permission permissionToRemove, List`1<Permission> permissions);
}
internal class Octopus.Client.Repositories.Async.UserTeamsRepository : MixedScopeBaseRepository`1<TeamNameResource> {
    public UserTeamsRepository(IOctopusAsyncRepository repository);
    private UserTeamsRepository(IOctopusAsyncRepository repository, SpaceContext spaceContext);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserTeamsRepository/<Get>d__2")]
public sealed virtual Task`1<TeamNameResource[]> Get(UserResource user);
    public sealed virtual IUserTeamsRepository UsingContext(SpaceContext spaceContext);
}
internal class Octopus.Client.Repositories.Async.VariableSetRepository : BasicRepository`1<VariableSetResource> {
    public VariableSetRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<GetVariableNames>d__1")]
public sealed virtual Task`1<String[]> GetVariableNames(string project, String[] environments);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<GetVariablePreview>d__2")]
public sealed virtual Task`1<VariableSetResource> GetVariablePreview(string project, string channel, string tenant, string runbook, string action, string environment, string machine, string role);
    public virtual Task`1<List`1<VariableSetResource>> Get(String[] ids);
}
internal class Octopus.Client.Repositories.Async.WorkerPoolRepository : BasicRepository`1<WorkerPoolResource> {
    public WorkerPoolRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerPoolRepository/<GetMachines>d__1")]
public sealed virtual Task`1<List`1<WorkerResource>> GetMachines(WorkerPoolResource workerPool, Nullable`1<int> skip, Nullable`1<int> take, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerPoolRepository/<Summary>d__2")]
public sealed virtual Task`1<WorkerPoolsSummaryResource> Summary(string ids, string partialName, string machinePartialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, Nullable`1<bool> hideEmptyPools);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerPoolRepository/<Sort>d__3")]
public sealed virtual Task Sort(String[] workerPoolIdsInOrder);
    public sealed virtual Task`1<WorkerPoolEditor> CreateOrModify(string name);
    public sealed virtual Task`1<WorkerPoolEditor> CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.Async.WorkerRepository : BasicRepository`1<WorkerResource> {
    public WorkerRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerRepository/<Discover>d__1")]
public sealed virtual Task`1<WorkerResource> Discover(string host, int port, Nullable`1<DiscoverableEndpointType> type);
    public sealed virtual Task`1<MachineConnectionStatus> GetConnectionStatus(WorkerResource worker);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerRepository/<FindByThumbprint>d__3")]
public sealed virtual Task`1<List`1<WorkerResource>> FindByThumbprint(string thumbprint);
    public sealed virtual Task`1<WorkerEditor> CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] workerpools);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerRepository/<List>d__5")]
public sealed virtual Task`1<ResourceCollection`1<WorkerResource>> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string workerpoolIds);
}
internal class Octopus.Client.Repositories.BackupRepository : object {
    private IOctopusRepository repository;
    public BackupRepository(IOctopusRepository repository);
    public sealed virtual BackupConfigurationResource GetConfiguration();
    public sealed virtual BackupConfigurationResource ModifyConfiguration(BackupConfigurationResource backupConfiguration);
}
internal abstract class Octopus.Client.Repositories.BasicRepository`1 : object {
    private Func`2<IOctopusRepository, string> getCollectionLinkName;
    [CompilerGeneratedAttribute]
private IOctopusRepository <Repository>k__BackingField;
    private IOctopusClient client;
    protected string CollectionLinkName;
    private SemanticVersion minimumRequiredVersion;
    private bool hasMinimumRequiredVersion;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <AdditionalQueryParameters>k__BackingField;
    public IOctopusRepository Repository { get; }
    protected Dictionary`2<string, object> AdditionalQueryParameters { get; }
    public IOctopusClient Client { get; }
    protected BasicRepository`1(IOctopusRepository repository, string collectionLinkName, Func`2<IOctopusRepository, string> getCollectionLinkName);
    [CompilerGeneratedAttribute]
public IOctopusRepository get_Repository();
    [CompilerGeneratedAttribute]
protected virtual Dictionary`2<string, object> get_AdditionalQueryParameters();
    public sealed virtual IOctopusClient get_Client();
    protected virtual void CheckSpaceResource(IHaveSpaceResource spaceResource);
    private bool ServerSupportsSpaces();
    protected void MinimumCompatibleVersion(string version);
    protected void ThrowIfServerVersionIsNotCompatible();
    protected void EnsureServerIsMinimumVersion(SemanticVersion requiredVersion, Func`2<string, string> messageGenerator);
    private void AssertSpaceIdMatchesResource(TResource resource);
    public virtual TResource Create(TResource resource, object pathParameters);
    public virtual TResource Modify(TResource resource);
    public sealed virtual void Delete(TResource resource);
    public sealed virtual void Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, string path, object pathParameters);
    public sealed virtual TResource FindOne(Func`2<TResource, bool> search, string path, object pathParameters);
    public sealed virtual List`1<TResource> FindMany(Func`2<TResource, bool> search, string path, object pathParameters);
    public sealed virtual List`1<TResource> FindAll(string path, object pathParameters);
    public sealed virtual List`1<TResource> GetAll();
    public sealed virtual TResource FindByName(string name, string path, object pathParameters);
    public sealed virtual List`1<TResource> FindByNames(IEnumerable`1<string> names, string path, object pathParameters);
    public sealed virtual TResource Get(string idOrHref);
    public virtual List`1<TResource> Get(String[] ids);
    public sealed virtual TResource Refresh(TResource resource);
    protected virtual void EnrichSpaceId(TResource resource);
    protected string ResolveLink();
    [CompilerGeneratedAttribute]
private string <ThrowIfServerVersionIsNotCompatible>b__17_0(string currentServerVersion);
}
public class Octopus.Client.Repositories.BuildInformationRepository : object {
    private IOctopusRepository repository;
    private static ILog Logger;
    public BuildInformationRepository(IOctopusRepository repository);
    private static BuildInformationRepository();
    public sealed virtual OctopusPackageVersionBuildInformationMappedResource Get(string id);
    public sealed virtual OctopusPackageVersionBuildInformationMappedResource Push(string packageId, string version, OctopusBuildInformation octopusMetadata);
    public sealed virtual OctopusPackageVersionBuildInformationMappedResource Push(string packageId, string version, OctopusBuildInformation octopusMetadata, OverwriteMode overwriteMode);
    public sealed virtual ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource> ListBuilds(string packageId, int skip, int take);
    public sealed virtual ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource> LatestBuilds(int skip, int take);
    public sealed virtual void Delete(OctopusPackageVersionBuildInformationMappedResource buildInformation);
    public sealed virtual void DeleteBuilds(IReadOnlyList`1<OctopusPackageVersionBuildInformationMappedResource> builds);
}
internal class Octopus.Client.Repositories.BuiltInPackageRepositoryRepository : object {
    private IOctopusRepository repository;
    private static ILog Logger;
    public BuiltInPackageRepositoryRepository(IOctopusRepository repository);
    private static BuiltInPackageRepositoryRepository();
    public sealed virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode);
    public sealed virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, bool replaceExisting);
    public sealed virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, bool replaceExisting, bool useDeltaCompression);
    public sealed virtual PackageFromBuiltInFeedResource GetPackage(string packageId, string version);
    public sealed virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode, bool useDeltaCompression);
    private PackageFromBuiltInFeedResource VerifyTransfer(string fileName, Stream contents);
    private PackageFromBuiltInFeedResource TryFindPackage(string packageId, SemanticVersion version);
    private PackageFromBuiltInFeedResource AttemptDeltaPush(string fileName, Stream contents, OverwriteMode overwriteMode);
    public sealed virtual ResourceCollection`1<PackageFromBuiltInFeedResource> ListPackages(string packageId, int skip, int take);
    public sealed virtual ResourceCollection`1<PackageFromBuiltInFeedResource> LatestPackages(int skip, int take);
    public sealed virtual void DeletePackage(PackageResource package);
    public sealed virtual void DeletePackages(IReadOnlyList`1<PackageResource> packages);
}
internal class Octopus.Client.Repositories.CertificateConfigurationRepository : BasicRepository`1<CertificateConfigurationResource> {
    public CertificateConfigurationRepository(IOctopusRepository repository);
    public sealed virtual CertificateConfigurationResource GetOctopusCertificate();
    public sealed virtual Stream GetPublicCertificate(CertificateConfigurationResource certificateConfiguration);
    private static string DetermineCollectionLinkName(IOctopusRepository repository);
}
internal class Octopus.Client.Repositories.CertificateRepository : BasicRepository`1<CertificateResource> {
    public CertificateRepository(IOctopusRepository repository);
    public sealed virtual Stream Export(CertificateResource certificate, Nullable`1<CertificateFormat> format, string password, bool includePrivateKey);
    public sealed virtual Stream ExportAsPem(CertificateResource certificate, bool includePrivateKey, CertificateExportPemOptions pemOptions);
    public sealed virtual CertificateResource Replace(CertificateResource certificate, string certificateData, string password);
    public sealed virtual void Archive(CertificateResource certificate);
    public sealed virtual void UnArchive(CertificateResource certificate);
    public sealed virtual CertificateConfigurationResource GetOctopusCertificate();
}
internal class Octopus.Client.Repositories.ChannelRepository : BasicRepository`1<ChannelResource> {
    public ChannelRepository(IOctopusRepository repository);
    public sealed virtual ChannelResource FindByName(ProjectResource project, string name);
    public sealed virtual ChannelEditor CreateOrModify(ProjectResource project, string name);
    public sealed virtual ChannelEditor CreateOrModify(ProjectResource project, string name, string description);
}
internal class Octopus.Client.Repositories.CommunityActionTemplateRepository : BasicRepository`1<CommunityActionTemplateResource> {
    public CommunityActionTemplateRepository(IOctopusRepository repository);
    public sealed virtual void Install(CommunityActionTemplateResource resource);
    public sealed virtual void UpdateInstallation(CommunityActionTemplateResource resource);
    public sealed virtual ActionTemplateResource GetInstalledTemplate(CommunityActionTemplateResource resource);
}
internal class Octopus.Client.Repositories.ConfigurationRepository : object {
    private IOctopusRepository repository;
    private string collectionLinkName;
    public ConfigurationRepository(IOctopusRepository repository);
    public sealed virtual T Get();
    public sealed virtual T Modify(T configurationResource);
    private ConfigurationItemResource GetConfigurationItem(IResource instance);
}
internal class Octopus.Client.Repositories.DashboardConfigurationRepository : object {
    private IOctopusRepository repository;
    public DashboardConfigurationRepository(IOctopusRepository repository);
    public sealed virtual DashboardConfigurationResource GetDashboardConfiguration();
    public sealed virtual DashboardConfigurationResource ModifyDashboardConfiguration(DashboardConfigurationResource resource);
}
internal class Octopus.Client.Repositories.DashboardRepository : object {
    private IOctopusRepository repository;
    public DashboardRepository(IOctopusRepository repository);
    public sealed virtual DashboardResource GetDashboard();
    public sealed virtual DashboardResource GetDynamicDashboard(String[] projects, String[] environments, DashboardItemsOptions dashboardItemsOptions);
}
internal class Octopus.Client.Repositories.DefectsRepository : BasicRepository`1<DefectResource> {
    public DefectsRepository(IOctopusRepository repository);
    public sealed virtual ResourceCollection`1<DefectResource> GetDefects(ReleaseResource release);
    public sealed virtual void RaiseDefect(ReleaseResource release, string description);
    public sealed virtual void ResolveDefect(ReleaseResource release);
}
internal class Octopus.Client.Repositories.DeploymentProcessRepository : BasicRepository`1<DeploymentProcessResource> {
    public DeploymentProcessRepository(IOctopusRepository repository);
    public sealed virtual ReleaseTemplateResource GetTemplate(DeploymentProcessResource deploymentProcess, ChannelResource channel);
    public sealed virtual DeploymentProcessResource Get(ProjectResource projectResource);
    public sealed virtual DeploymentProcessResource Get(ProjectResource projectResource, string gitRef);
    public sealed virtual DeploymentProcessResource Modify(DeploymentProcessResource deploymentSettings, string commitMessage);
}
internal class Octopus.Client.Repositories.DeploymentRepository : BasicRepository`1<DeploymentResource> {
    public DeploymentRepository(IOctopusRepository repository);
    public sealed virtual TaskResource GetTask(DeploymentResource resource);
    public sealed virtual ResourceCollection`1<DeploymentResource> FindBy(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    [ObsoleteAttribute("This method is not a find all, it still requires paging. So it has been renamed to `FindBy`")]
public sealed virtual ResourceCollection`1<DeploymentResource> FindAll(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    public sealed virtual void Paginate(String[] projects, String[] environments, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
    public sealed virtual void Paginate(String[] projects, String[] environments, String[] tenants, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
}
internal class Octopus.Client.Repositories.DeploymentSettingsRepository : object {
    private IOctopusClient client;
    public DeploymentSettingsRepository(IOctopusRepository repository);
    public sealed virtual DeploymentSettingsResource Get(ProjectResource projectResource, string gitRef);
    public sealed virtual DeploymentSettingsResource Get(ProjectResource project);
    public sealed virtual DeploymentSettingsResource Modify(ProjectResource project, DeploymentSettingsResource deploymentSettings);
    public sealed virtual DeploymentSettingsResource Modify(DeploymentSettingsResource deploymentSettings);
    public sealed virtual DeploymentSettingsResource Modify(DeploymentSettingsResource deploymentSettings, string commitMessage);
}
internal class Octopus.Client.Repositories.EnvironmentRepository : BasicRepository`1<EnvironmentResource> {
    public EnvironmentRepository(IOctopusRepository repository);
    public sealed virtual List`1<MachineResource> GetMachines(EnvironmentResource environment, Nullable`1<int> skip, Nullable`1<int> take, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags);
    public sealed virtual EnvironmentsSummaryResource Summary(string ids, string partialName, string machinePartialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, Nullable`1<bool> hideEmptyEnvironments);
    public sealed virtual void Sort(String[] environmentIdsInOrder);
    public sealed virtual EnvironmentEditor CreateOrModify(string name);
    public sealed virtual EnvironmentEditor CreateOrModify(string name, string description);
    public sealed virtual EnvironmentEditor CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
}
internal class Octopus.Client.Repositories.EventRepository : MixedScopeBaseRepository`1<EventResource> {
    public EventRepository(IOctopusRepository repository);
    private EventRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    [ObsoleteAttribute("This method was deprecated in Octopus 3.4.  Please use the other List method by providing named arguments.")]
public sealed virtual ResourceCollection`1<EventResource> List(int skip, string filterByUserId, string regardingDocumentId, bool includeInternalEvents);
    public sealed virtual ResourceCollection`1<EventResource> List(int skip, Nullable`1<int> take, string from, string to, string regarding, string regardingAny, bool includeInternalEvents, string user, string users, string projects, string environments, string eventGroups, string eventCategories, string tenants, string tags, Nullable`1<long> fromAutoId, Nullable`1<long> toAutoId, string documentTypes, string eventAgents, string projectGroups);
    public sealed virtual IReadOnlyList`1<DocumentTypeResource> GetDocumentTypes();
    public sealed virtual IReadOnlyList`1<EventAgentResource> GetAgents();
    public sealed virtual IReadOnlyList`1<EventCategoryResource> GetCategories();
    public sealed virtual IReadOnlyList`1<EventGroupResource> GetGroups();
    public sealed virtual IEventRepository UsingContext(SpaceContext userDefinedSpaceContext);
}
internal class Octopus.Client.Repositories.FeaturesConfigurationRepository : object {
    private IOctopusRepository repository;
    public FeaturesConfigurationRepository(IOctopusRepository repository);
    public sealed virtual FeaturesConfigurationResource GetFeaturesConfiguration();
    public sealed virtual FeaturesConfigurationResource ModifyFeaturesConfiguration(FeaturesConfigurationResource resource);
}
internal class Octopus.Client.Repositories.FeedRepository : BasicRepository`1<FeedResource> {
    public FeedRepository(IOctopusRepository repository);
    public sealed virtual List`1<PackageResource> GetVersions(FeedResource feed, String[] packageIds);
}
public interface Octopus.Client.Repositories.IAccountRepository {
    public abstract virtual AccountType DetermineAccountType();
    public abstract virtual TAccount GetOfType(string idOrHref);
    public abstract virtual List`1<TAccount> GetOfType(String[] ids);
    public abstract virtual TAccount RefreshOfType(TAccount resource);
    public abstract virtual TAccount FindByNameOfType(string name);
    public abstract virtual List`1<TAccount> FindByNamesOfType(IEnumerable`1<string> names);
    public abstract virtual void PaginateOfType(Func`2<ResourceCollection`1<TAccount>, bool> getNextPage, object pathParameters);
    public abstract virtual TAccount FindOneOfType(Func`2<TAccount, bool> search, object pathParameters);
    public abstract virtual List`1<TAccount> FindManyOfType(Func`2<TAccount, bool> search, object pathParameters);
    public abstract virtual List`1<TAccount> FindAllOfType(object pathParameters);
    public abstract virtual AccountUsageResource GetAccountUsage(AccountResource account);
}
public interface Octopus.Client.Repositories.IActionTemplateRepository {
    public abstract virtual List`1<ActionTemplateSearchResource> Search();
    public abstract virtual ActionTemplateResource GetVersion(ActionTemplateResource resource, int version);
    public abstract virtual ActionUpdateResultResource[] UpdateActions(ActionTemplateResource actionTemplate, ActionsUpdateResource update);
    public abstract virtual void SetLogo(ActionTemplateResource resource, string fileName, Stream contents);
}
public interface Octopus.Client.Repositories.IArtifactRepository {
    public abstract virtual Stream GetContent(ArtifactResource artifact);
    public abstract virtual void PutContent(ArtifactResource artifact, Stream contentStream);
    public abstract virtual ResourceCollection`1<ArtifactResource> FindRegarding(IResource resource);
}
public interface Octopus.Client.Repositories.IBackupRepository {
    public abstract virtual BackupConfigurationResource GetConfiguration();
    public abstract virtual BackupConfigurationResource ModifyConfiguration(BackupConfigurationResource backupConfiguration);
}
public interface Octopus.Client.Repositories.IBuildInformationRepository {
    public abstract virtual OctopusPackageVersionBuildInformationMappedResource Get(string id);
    public abstract virtual OctopusPackageVersionBuildInformationMappedResource Push(string packageId, string version, OctopusBuildInformation octopusMetadata, OverwriteMode overwriteMode);
    public abstract virtual OctopusPackageVersionBuildInformationMappedResource Push(string packageId, string version, OctopusBuildInformation octopusMetadata);
    public abstract virtual ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource> ListBuilds(string packageId, int skip, int take);
    public abstract virtual ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource> LatestBuilds(int skip, int take);
    public abstract virtual void Delete(OctopusPackageVersionBuildInformationMappedResource buildInformation);
    public abstract virtual void DeleteBuilds(IReadOnlyList`1<OctopusPackageVersionBuildInformationMappedResource> builds);
}
public interface Octopus.Client.Repositories.IBuiltInPackageRepositoryRepository {
    public abstract virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, bool replaceExisting);
    public abstract virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, bool replaceExisting, bool useDeltaCompression);
    public abstract virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode);
    public abstract virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode, bool useDeltaCompression);
    public abstract virtual ResourceCollection`1<PackageFromBuiltInFeedResource> ListPackages(string packageId, int skip, int take);
    public abstract virtual ResourceCollection`1<PackageFromBuiltInFeedResource> LatestPackages(int skip, int take);
    public abstract virtual void DeletePackage(PackageResource package);
    public abstract virtual void DeletePackages(IReadOnlyList`1<PackageResource> packages);
    public abstract virtual PackageFromBuiltInFeedResource GetPackage(string packageId, string version);
}
public interface Octopus.Client.Repositories.ICanExtendSpaceContext`1 {
    public abstract virtual T UsingContext(SpaceContext userDefinedSpaceContext);
}
public interface Octopus.Client.Repositories.ICertificateConfigurationRepository {
    public abstract virtual CertificateConfigurationResource GetOctopusCertificate();
    public abstract virtual Stream GetPublicCertificate(CertificateConfigurationResource certificateConfiguration);
}
public interface Octopus.Client.Repositories.ICertificateRepository {
    public abstract virtual Stream Export(CertificateResource certificate, Nullable`1<CertificateFormat> format, string password, bool includePrivateKey);
    public abstract virtual Stream ExportAsPem(CertificateResource certificate, bool includePrivateKey, CertificateExportPemOptions pemOptions);
    public abstract virtual CertificateResource Replace(CertificateResource certificate, string certificateData, string password);
    public abstract virtual void Archive(CertificateResource certificate);
    public abstract virtual void UnArchive(CertificateResource certificate);
    public abstract virtual CertificateConfigurationResource GetOctopusCertificate();
}
public interface Octopus.Client.Repositories.IChannelRepository {
    public abstract virtual ChannelResource FindByName(ProjectResource project, string name);
    public abstract virtual ChannelEditor CreateOrModify(ProjectResource project, string name);
    public abstract virtual ChannelEditor CreateOrModify(ProjectResource project, string name, string description);
}
public interface Octopus.Client.Repositories.ICommunityActionTemplateRepository {
    public abstract virtual ActionTemplateResource GetInstalledTemplate(CommunityActionTemplateResource resource);
    public abstract virtual void Install(CommunityActionTemplateResource resource);
    public abstract virtual void UpdateInstallation(CommunityActionTemplateResource resource);
}
public interface Octopus.Client.Repositories.IConfigurationRepository {
    public abstract virtual T Get();
    public abstract virtual T Modify(T configurationResource);
}
public interface Octopus.Client.Repositories.ICreate`1 {
    public abstract virtual TResource Create(TResource resource, object pathParameters);
}
public interface Octopus.Client.Repositories.IDashboardConfigurationRepository {
    public abstract virtual DashboardConfigurationResource GetDashboardConfiguration();
    public abstract virtual DashboardConfigurationResource ModifyDashboardConfiguration(DashboardConfigurationResource resource);
}
public interface Octopus.Client.Repositories.IDashboardRepository {
    public abstract virtual DashboardResource GetDashboard();
    public abstract virtual DashboardResource GetDynamicDashboard(String[] projects, String[] environments, DashboardItemsOptions dashboardItemsOptions);
}
public interface Octopus.Client.Repositories.IDefectsRepository {
    public abstract virtual ResourceCollection`1<DefectResource> GetDefects(ReleaseResource release);
    public abstract virtual void RaiseDefect(ReleaseResource release, string description);
    public abstract virtual void ResolveDefect(ReleaseResource release);
}
public interface Octopus.Client.Repositories.IDelete`1 {
    public abstract virtual void Delete(TResource resource);
}
public interface Octopus.Client.Repositories.IDeploymentProcessRepository {
    public abstract virtual ReleaseTemplateResource GetTemplate(DeploymentProcessResource deploymentProcess, ChannelResource channel);
    public abstract virtual DeploymentProcessResource Get(ProjectResource projectResource);
    public abstract virtual DeploymentProcessResource Get(ProjectResource projectResource, string gitRef);
    public abstract virtual DeploymentProcessResource Modify(DeploymentProcessResource deploymentSettings, string commitMessage);
}
public interface Octopus.Client.Repositories.IDeploymentRepository {
    public abstract virtual TaskResource GetTask(DeploymentResource resource);
    public abstract virtual ResourceCollection`1<DeploymentResource> FindBy(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    [ObsoleteAttribute("This method is not a find all, it still requires paging. So it has been renamed to `FindBy`")]
public abstract virtual ResourceCollection`1<DeploymentResource> FindAll(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    public abstract virtual void Paginate(String[] projects, String[] environments, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
    public abstract virtual void Paginate(String[] projects, String[] environments, String[] tenants, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
}
public interface Octopus.Client.Repositories.IDeploymentSettingsRepository {
    public abstract virtual DeploymentSettingsResource Get(ProjectResource projectResource, string gitRef);
    public abstract virtual DeploymentSettingsResource Get(ProjectResource project);
    [ObsoleteAttribute("ProjectResource is no longer required to be passed in")]
public abstract virtual DeploymentSettingsResource Modify(ProjectResource project, DeploymentSettingsResource deploymentSettings);
    public abstract virtual DeploymentSettingsResource Modify(DeploymentSettingsResource deploymentSettings);
    public abstract virtual DeploymentSettingsResource Modify(DeploymentSettingsResource deploymentSettings, string commitMessage);
}
public interface Octopus.Client.Repositories.IEnvironmentRepository {
    public abstract virtual List`1<MachineResource> GetMachines(EnvironmentResource environment, Nullable`1<int> skip, Nullable`1<int> take, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags);
    public abstract virtual EnvironmentsSummaryResource Summary(string ids, string partialName, string machinePartialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, Nullable`1<bool> hideEmptyEnvironments);
    public abstract virtual void Sort(String[] environmentIdsInOrder);
    public abstract virtual EnvironmentEditor CreateOrModify(string name);
    public abstract virtual EnvironmentEditor CreateOrModify(string name, string description);
    public abstract virtual EnvironmentEditor CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
}
public interface Octopus.Client.Repositories.IEventRepository {
    [ObsoleteAttribute("This method was deprecated in Octopus 3.4.  Please use the other List method by providing named arguments.")]
public abstract virtual ResourceCollection`1<EventResource> List(int skip, string filterByUserId, string regardingDocumentId, bool includeInternalEvents);
    public abstract virtual ResourceCollection`1<EventResource> List(int skip, Nullable`1<int> take, string from, string to, string regarding, string regardingAny, bool includeInternalEvents, string user, string users, string projects, string environments, string eventGroups, string eventCategories, string tenants, string tags, Nullable`1<long> fromAutoId, Nullable`1<long> toAutoId, string documentTypes, string eventAgents, string projectGroups);
    public abstract virtual IReadOnlyList`1<DocumentTypeResource> GetDocumentTypes();
    public abstract virtual IReadOnlyList`1<EventAgentResource> GetAgents();
    public abstract virtual IReadOnlyList`1<EventCategoryResource> GetCategories();
    public abstract virtual IReadOnlyList`1<EventGroupResource> GetGroups();
}
public interface Octopus.Client.Repositories.IFeaturesConfigurationRepository {
    public abstract virtual FeaturesConfigurationResource GetFeaturesConfiguration();
    public abstract virtual FeaturesConfigurationResource ModifyFeaturesConfiguration(FeaturesConfigurationResource resource);
}
public interface Octopus.Client.Repositories.IFeedRepository {
    public abstract virtual List`1<PackageResource> GetVersions(FeedResource feed, String[] packageIds);
}
public interface Octopus.Client.Repositories.IFindByName`1 {
    public abstract virtual TResource FindByName(string name, string path, object pathParameters);
    public abstract virtual List`1<TResource> FindByNames(IEnumerable`1<string> names, string path, object pathParameters);
}
public interface Octopus.Client.Repositories.IGet`1 {
    public abstract virtual TResource Get(string idOrHref);
    public abstract virtual List`1<TResource> Get(String[] ids);
    public abstract virtual TResource Refresh(TResource resource);
}
public interface Octopus.Client.Repositories.IGetAll`1 {
    public abstract virtual List`1<TResource> GetAll();
}
public interface Octopus.Client.Repositories.IInterruptionRepository {
    public abstract virtual ResourceCollection`1<InterruptionResource> List(int skip, Nullable`1<int> take, bool pendingOnly, string regardingDocumentId);
    public abstract virtual void Submit(InterruptionResource interruption);
    public abstract virtual void TakeResponsibility(InterruptionResource interruption);
    public abstract virtual UserResource GetResponsibleUser(InterruptionResource interruption);
}
public interface Octopus.Client.Repositories.ILibraryVariableSetRepository {
    public abstract virtual LibraryVariableSetEditor CreateOrModify(string name);
    public abstract virtual LibraryVariableSetEditor CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.ILicensesRepository {
    public abstract virtual LicenseResource GetCurrent();
    public abstract virtual LicenseResource UpdateCurrent(LicenseResource resource);
    public abstract virtual LicenseStatusResource GetStatus();
}
public interface Octopus.Client.Repositories.ILifecyclesRepository {
    public abstract virtual LifecycleEditor CreateOrModify(string name);
    public abstract virtual LifecycleEditor CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.IMachinePolicyRepository {
    public abstract virtual List`1<MachineResource> GetMachines(MachinePolicyResource machinePolicy);
    public abstract virtual MachinePolicyResource GetTemplate();
}
public interface Octopus.Client.Repositories.IMachineRepository {
    public abstract virtual MachineResource Discover(string host, int port, Nullable`1<DiscoverableEndpointType> discoverableEndpointType);
    public abstract virtual MachineResource Discover(DiscoverMachineOptions options);
    public abstract virtual MachineConnectionStatus GetConnectionStatus(MachineResource machine);
    public abstract virtual List`1<MachineResource> FindByThumbprint(string thumbprint);
    public abstract virtual IReadOnlyList`1<TaskResource> GetTasks(MachineResource machine, Nullable`1<DeploymentTargetTaskType> type);
    public abstract virtual IReadOnlyList`1<TaskResource> GetTasks(MachineResource machine, object pathParameters);
    public abstract virtual MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public abstract virtual MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    public abstract virtual ResourceCollection`1<MachineResource> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, string environmentIds);
}
public interface Octopus.Client.Repositories.IMachineRoleRepository {
    public abstract virtual List`1<string> GetAllRoleNames();
}
public interface Octopus.Client.Repositories.IMigrationRepository {
    public abstract virtual MigrationPartialExportResource PartialExport(MigrationPartialExportResource resource);
    public abstract virtual MigrationImportResource Import(MigrationImportResource resource);
}
public interface Octopus.Client.Repositories.IModify`1 {
    public abstract virtual TResource Modify(TResource resource);
}
internal class Octopus.Client.Repositories.InterruptionRepository : BasicRepository`1<InterruptionResource> {
    public InterruptionRepository(IOctopusRepository repository);
    public sealed virtual ResourceCollection`1<InterruptionResource> List(int skip, Nullable`1<int> take, bool pendingOnly, string regardingDocumentId);
    public sealed virtual void Submit(InterruptionResource interruption);
    public sealed virtual void TakeResponsibility(InterruptionResource interruption);
    public sealed virtual UserResource GetResponsibleUser(InterruptionResource interruption);
}
public interface Octopus.Client.Repositories.IOctopusServerNodeRepository {
    public abstract virtual OctopusServerNodeDetailsResource Details(OctopusServerNodeResource node);
    public abstract virtual OctopusServerClusterSummaryResource Summary();
}
public interface Octopus.Client.Repositories.IPackageMetadataRepository {
    public abstract virtual OctopusPackageMetadataMappedResource Get(string id);
    public abstract virtual OctopusPackageMetadataMappedResource Push(string packageId, string version, OctopusPackageMetadata octopusMetadata, OverwriteMode overwriteMode);
    public abstract virtual OctopusPackageMetadataMappedResource Push(string packageId, string version, OctopusPackageMetadata octopusMetadata);
}
public interface Octopus.Client.Repositories.IPaginate`1 {
    public abstract virtual void Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, string path, object pathParameters);
    public abstract virtual TResource FindOne(Func`2<TResource, bool> search, string path, object pathParameters);
    public abstract virtual List`1<TResource> FindMany(Func`2<TResource, bool> search, string path, object pathParameters);
    public abstract virtual List`1<TResource> FindAll(string path, object pathParameters);
}
public interface Octopus.Client.Repositories.IPerformanceConfigurationRepository {
    public abstract virtual PerformanceConfigurationResource Get();
    public abstract virtual PerformanceConfigurationResource Modify(PerformanceConfigurationResource resource);
}
public interface Octopus.Client.Repositories.IProjectGroupRepository {
    public abstract virtual List`1<ProjectResource> GetProjects(ProjectGroupResource projectGroup);
    public abstract virtual ProjectGroupEditor CreateOrModify(string name);
    public abstract virtual ProjectGroupEditor CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.IProjectRepository {
    public abstract virtual ResourceCollection`1<GitBranchResource> GetGitBranches(ProjectResource projectResource);
    public abstract virtual GitBranchResource GetGitBranch(ProjectResource projectResource, string branch);
    public abstract virtual ConvertProjectToGitResponse ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage);
    public abstract virtual ResourceCollection`1<ReleaseResource> GetReleases(ProjectResource project, int skip, Nullable`1<int> take, string searchByVersion);
    public abstract virtual IReadOnlyList`1<ReleaseResource> GetAllReleases(ProjectResource project);
    public abstract virtual ReleaseResource GetReleaseByVersion(ProjectResource project, string version);
    public abstract virtual ResourceCollection`1<ChannelResource> GetChannels(ProjectResource project);
    public abstract virtual IReadOnlyList`1<ChannelResource> GetAllChannels(ProjectResource project);
    public abstract virtual ProgressionResource GetProgression(ProjectResource project);
    public abstract virtual ResourceCollection`1<ProjectTriggerResource> GetTriggers(ProjectResource project);
    public abstract virtual IReadOnlyList`1<ProjectTriggerResource> GetAllTriggers(ProjectResource project);
    public abstract virtual void SetLogo(ProjectResource project, string fileName, Stream contents);
    public abstract virtual ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    public abstract virtual ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    public abstract virtual ResourceCollection`1<RunbookSnapshotResource> GetRunbookSnapshots(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public abstract virtual IReadOnlyList`1<RunbookSnapshotResource> GetAllRunbookSnapshots(ProjectResource project);
    public abstract virtual RunbookSnapshotResource GetRunbookSnapshotByName(ProjectResource project, string name);
    public abstract virtual ResourceCollection`1<RunbookResource> GetRunbooks(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public abstract virtual IReadOnlyList`1<RunbookResource> GetAllRunbooks(ProjectResource project);
}
public interface Octopus.Client.Repositories.IProjectTriggerRepository {
    public abstract virtual ProjectTriggerResource FindByName(ProjectResource project, string name);
    public abstract virtual ProjectTriggerEditor CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    public abstract virtual ResourceCollection`1<ProjectTriggerResource> FindByRunbook(String[] runbookIds);
}
public interface Octopus.Client.Repositories.IProxyRepository {
}
public interface Octopus.Client.Repositories.IReleaseRepository {
    public abstract virtual ResourceCollection`1<DeploymentResource> GetDeployments(ReleaseResource release, int skip, Nullable`1<int> take);
    public abstract virtual ResourceCollection`1<ArtifactResource> GetArtifacts(ReleaseResource release, int skip, Nullable`1<int> take);
    public abstract virtual DeploymentTemplateResource GetTemplate(ReleaseResource release);
    public abstract virtual DeploymentPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual ReleaseResource SnapshotVariables(ReleaseResource release);
    public abstract virtual ReleaseResource Create(ReleaseResource release, bool ignoreChannelRules);
    public abstract virtual LifecycleProgressionResource GetProgression(ReleaseResource release);
}
public interface Octopus.Client.Repositories.IResourceRepository {
    public IOctopusClient Client { get; }
    public abstract virtual IOctopusClient get_Client();
}
public interface Octopus.Client.Repositories.IRetentionPolicyRepository {
    public abstract virtual TaskResource ApplyNow(string spaceId);
}
public interface Octopus.Client.Repositories.IRunbookProcessRepository {
    public abstract virtual RunbookSnapshotTemplateResource GetTemplate(RunbookProcessResource runbookProcess);
}
public interface Octopus.Client.Repositories.IRunbookRepository {
    public abstract virtual RunbookResource FindByName(ProjectResource project, string name);
    public abstract virtual RunbookEditor CreateOrModify(ProjectResource project, string name, string description);
    public abstract virtual RunbookSnapshotTemplateResource GetRunbookSnapshotTemplate(RunbookResource runbook);
    public abstract virtual RunbookRunTemplateResource GetRunbookRunTemplate(RunbookResource runbook);
    public abstract virtual RunbookRunPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual RunbookRunResource Run(RunbookResource runbook, RunbookRunResource runbookRun);
    public abstract virtual RunbookRunResource[] Run(RunbookResource runbook, RunbookRunParameters runbookRunParameters);
}
public interface Octopus.Client.Repositories.IRunbookRunRepository {
    public abstract virtual TaskResource GetTask(RunbookRunResource resource);
    public abstract virtual ResourceCollection`1<RunbookRunResource> FindBy(String[] projects, String[] runbooks, String[] environments, int skip, Nullable`1<int> take);
    public abstract virtual void Paginate(String[] projects, String[] runbooks, String[] environments, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
    public abstract virtual void Paginate(String[] projects, String[] runbooks, String[] environments, String[] tenants, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
}
public interface Octopus.Client.Repositories.IRunbookSnapshotRepository {
    public abstract virtual ResourceCollection`1<RunbookRunResource> GetRunbookRuns(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public abstract virtual ResourceCollection`1<ArtifactResource> GetArtifacts(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public abstract virtual RunbookRunTemplateResource GetTemplate(RunbookSnapshotResource runbookSnapshot);
    public abstract virtual RunbookRunPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual RunbookSnapshotResource SnapshotVariables(RunbookSnapshotResource runbookSnapshot);
    public abstract virtual RunbookSnapshotResource Create(RunbookSnapshotResource runbookSnapshot);
}
public interface Octopus.Client.Repositories.ISchedulerRepository {
    public abstract virtual void Start();
    public abstract virtual void Start(string taskName);
    public abstract virtual void Stop();
    public abstract virtual void Stop(string taskName);
    public abstract virtual void Trigger(string taskName);
    public abstract virtual ScheduledTaskDetailsResource GetLogs(string taskName);
    public abstract virtual Stream GetRawLogs(string taskName);
    public abstract virtual SchedulerStatusResource Status();
}
public interface Octopus.Client.Repositories.IScopedUserRoleRepository {
}
public interface Octopus.Client.Repositories.IServerStatusRepository {
    public abstract virtual ServerStatusResource GetServerStatus();
    public abstract virtual SystemInfoResource GetSystemInfo(ServerStatusResource status);
    public abstract virtual ServerStatusHealthResource GetServerHealth();
}
public interface Octopus.Client.Repositories.ISpaceRepository {
    public abstract virtual void SetLogo(SpaceResource space, string fileName, Stream contents);
    public abstract virtual SpaceSearchResult[] Search(string spaceId, string keyword);
}
public interface Octopus.Client.Repositories.ISubscriptionRepository {
    public abstract virtual SubscriptionEditor CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
}
public interface Octopus.Client.Repositories.ITagSetRepository {
    public abstract virtual void Sort(String[] tagSetIdsInOrder);
    public abstract virtual TagSetEditor CreateOrModify(string name);
    public abstract virtual TagSetEditor CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.ITaskRepository {
    public abstract virtual TaskResource ExecuteHealthCheck(string description, int timeoutAfterMinutes, int machineTimeoutAfterMinutes, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public abstract virtual TaskResource ExecuteCalamariUpdate(string description, String[] machineIds);
    public abstract virtual TaskResource ExecuteBackup(string description);
    public abstract virtual TaskResource ExecuteTentacleUpgrade(string description, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public abstract virtual TaskResource ExecuteAdHocScript(string scriptBody, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, string syntax, Nullable`1<TargetType> targetType);
    public abstract virtual TaskResource ExecuteActionTemplate(ActionTemplateResource resource, Dictionary`2<string, PropertyValueResource> properties, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, Nullable`1<TargetType> targetType);
    public abstract virtual TaskResource ExecuteCommunityActionTemplatesSynchronisation(string description);
    public abstract virtual List`1<TaskResource> GetAllActive(int pageSize);
    public abstract virtual TaskResourceCollection GetActiveWithSummary(int pageSize, int skip);
    public abstract virtual TaskResourceCollection GetAllWithSummary(int pageSize, int skip);
    public abstract virtual TaskDetailsResource GetDetails(TaskResource resource, Nullable`1<bool> includeVerboseOutput, Nullable`1<int> tail);
    public abstract virtual string GetRawOutputLog(TaskResource resource);
    public abstract virtual TaskTypeResource[] GetTaskTypes();
    public abstract virtual void Rerun(TaskResource resource);
    public abstract virtual void Cancel(TaskResource resource);
    public abstract virtual void ModifyState(TaskResource resource, TaskState newState, string reason);
    public abstract virtual IReadOnlyList`1<TaskResource> GetQueuedBehindTasks(TaskResource resource);
    public abstract virtual void WaitForCompletion(TaskResource task, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public abstract virtual void WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public abstract virtual void WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, Nullable`1<TimeSpan> timeoutAfter, Action`1<TaskResource[]> interval);
}
public interface Octopus.Client.Repositories.ITeamsRepository {
    public abstract virtual List`1<ScopedUserRoleResource> GetScopedUserRoles(TeamResource team);
}
public interface Octopus.Client.Repositories.ITelemetryConfigurationRepository {
    public abstract virtual TelemetryConfigurationResource GetTelemetryConfiguration();
    public abstract virtual TelemetryConfigurationResource ModifyTelemetryConfiguration(TelemetryConfigurationResource resource);
    public abstract virtual TelemetryConfigurationResource EnableTelemetry();
    public abstract virtual TelemetryConfigurationResource DisableTelemetry();
}
public interface Octopus.Client.Repositories.ITenantRepository {
    public abstract virtual MultiTenancyStatusResource Status();
    public abstract virtual void SetLogo(TenantResource tenant, string fileName, Stream contents);
    public abstract virtual TenantVariableResource GetVariables(TenantResource tenant);
    public abstract virtual TenantVariableResource ModifyVariables(TenantResource tenant, TenantVariableResource variables);
    public abstract virtual List`1<TenantsMissingVariablesResource> GetMissingVariables(string tenantId, string projectId, string environmentId);
    public abstract virtual List`1<TenantResource> FindAll(string name, String[] tags, int pageSize);
    public abstract virtual TenantEditor CreateOrModify(string name);
    public abstract virtual TenantEditor CreateOrModify(string name, string description);
    public abstract virtual TenantEditor CreateOrModify(string name, string description, string cloneId);
}
public interface Octopus.Client.Repositories.ITenantVariablesRepository {
    public abstract virtual List`1<TenantVariableResource> GetAll(ProjectResource projectResource);
}
public interface Octopus.Client.Repositories.IUpgradeConfigurationRepository {
    public abstract virtual UpgradeConfigurationResource Get();
}
public interface Octopus.Client.Repositories.IUserInvitesRepository {
    public abstract virtual InvitationResource Invite(string addToTeamId);
    public abstract virtual InvitationResource Invite(ReferenceCollection addToTeamIds);
}
public interface Octopus.Client.Repositories.IUserPermissionsRepository {
    public abstract virtual UserPermissionSetResource Get(UserResource user);
    public abstract virtual UserPermissionSetResource GetConfiguration(UserResource user);
    public abstract virtual Stream Export(UserPermissionSetResource userPermissions);
}
public interface Octopus.Client.Repositories.IUserRepository {
    public abstract virtual UserResource FindByUsername(string username);
    public abstract virtual UserResource Create(string username, string displayName, string password, string emailAddress);
    public abstract virtual UserResource CreateServiceAccount(string username, string displayName);
    public abstract virtual UserResource Register(RegisterCommand registerCommand);
    public abstract virtual void SignIn(LoginCommand loginCommand);
    public abstract virtual void SignIn(string username, string password, bool rememberMe);
    public abstract virtual void SignOut();
    public abstract virtual UserResource GetCurrent();
    public abstract virtual SpaceResource[] GetSpaces(UserResource user);
    public abstract virtual ApiKeyCreatedResource CreateApiKey(UserResource user, string purpose, Nullable`1<DateTimeOffset> expires);
    public abstract virtual List`1<ApiKeyResource> GetApiKeys(UserResource user);
    public abstract virtual void RevokeApiKey(ApiKeyResourceBase apiKey);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public abstract virtual InvitationResource Invite(string addToTeamId);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public abstract virtual InvitationResource Invite(ReferenceCollection addToTeamIds);
}
public interface Octopus.Client.Repositories.IUserRolesRepository {
}
public interface Octopus.Client.Repositories.IUserTeamsRepository {
    public abstract virtual TeamNameResource[] Get(UserResource user);
}
public interface Octopus.Client.Repositories.IVariableSetRepository {
    public abstract virtual String[] GetVariableNames(string projects, String[] environments);
    public abstract virtual VariableSetResource GetVariablePreview(string project, string channel, string tenant, string runbook, string action, string environment, string machine, string role);
}
public interface Octopus.Client.Repositories.IWorkerPoolRepository {
    public abstract virtual List`1<WorkerResource> GetMachines(WorkerPoolResource workerPool, Nullable`1<int> skip, Nullable`1<int> take, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles);
    public abstract virtual WorkerPoolsSummaryResource Summary(string ids, string partialName, string machinePartialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, Nullable`1<bool> hideEmptypools);
    public abstract virtual void Sort(String[] workerpoolIdsInOrder);
    public abstract virtual WorkerPoolEditor CreateOrModify(string name);
    public abstract virtual WorkerPoolEditor CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.IWorkerRepository {
    public abstract virtual WorkerResource Discover(string host, int port, Nullable`1<DiscoverableEndpointType> discoverableEndpointType);
    public abstract virtual MachineConnectionStatus GetConnectionStatus(WorkerResource machine);
    public abstract virtual List`1<WorkerResource> FindByThumbprint(string thumbprint);
    public abstract virtual WorkerEditor CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] pools);
    public abstract virtual ResourceCollection`1<WorkerResource> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string workerpoolIds);
}
internal class Octopus.Client.Repositories.LegacyInvitationRepository : BasicRepository`1<InvitationResource> {
    public LegacyInvitationRepository(IOctopusRepository repository);
}
internal class Octopus.Client.Repositories.LibraryVariableSetRepository : BasicRepository`1<LibraryVariableSetResource> {
    public LibraryVariableSetRepository(IOctopusRepository repository);
    public sealed virtual LibraryVariableSetEditor CreateOrModify(string name);
    public sealed virtual LibraryVariableSetEditor CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.LicensesRepository : BasicRepository`1<LicenseResource> {
    public LicensesRepository(IOctopusRepository repository);
    public sealed virtual LicenseResource GetCurrent();
    public sealed virtual LicenseResource UpdateCurrent(LicenseResource resource);
    public sealed virtual LicenseStatusResource GetStatus();
}
internal class Octopus.Client.Repositories.LifecyclesRepository : BasicRepository`1<LifecycleResource> {
    public LifecyclesRepository(IOctopusRepository repository);
    public sealed virtual LifecycleEditor CreateOrModify(string name);
    public sealed virtual LifecycleEditor CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.MachinePolicyRepository : BasicRepository`1<MachinePolicyResource> {
    public MachinePolicyRepository(IOctopusRepository repository);
    public sealed virtual List`1<MachineResource> GetMachines(MachinePolicyResource machinePolicy);
    public sealed virtual MachinePolicyResource GetTemplate();
}
internal class Octopus.Client.Repositories.MachineRepository : BasicRepository`1<MachineResource> {
    public MachineRepository(IOctopusRepository repository);
    public sealed virtual MachineResource Discover(string host, int port, Nullable`1<DiscoverableEndpointType> type);
    public sealed virtual MachineResource Discover(DiscoverMachineOptions options);
    public sealed virtual MachineConnectionStatus GetConnectionStatus(MachineResource machine);
    public sealed virtual List`1<MachineResource> FindByThumbprint(string thumbprint);
    public sealed virtual IReadOnlyList`1<TaskResource> GetTasks(MachineResource machine, Nullable`1<DeploymentTargetTaskType> type);
    public sealed virtual IReadOnlyList`1<TaskResource> GetTasks(MachineResource machine, object pathParameters);
    public sealed virtual MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public sealed virtual MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    public sealed virtual ResourceCollection`1<MachineResource> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, string environmentIds);
}
internal class Octopus.Client.Repositories.MachineRoleRepository : object {
    private IOctopusRepository repository;
    public MachineRoleRepository(IOctopusRepository repository);
    public sealed virtual List`1<string> GetAllRoleNames();
}
internal class Octopus.Client.Repositories.MigrationRepository : object {
    private IOctopusRepository repository;
    public MigrationRepository(IOctopusRepository repository);
    public sealed virtual MigrationPartialExportResource PartialExport(MigrationPartialExportResource resource);
    public sealed virtual MigrationImportResource Import(MigrationImportResource resource);
}
internal abstract class Octopus.Client.Repositories.MixedScopeBaseRepository`1 : BasicRepository`1<TMixedScopeResource> {
    private SpaceContext userDefinedSpaceContext;
    protected Dictionary`2<string, object> AdditionalQueryParameters { get; }
    protected MixedScopeBaseRepository`1(IOctopusRepository repository, string collectionLinkName);
    protected MixedScopeBaseRepository`1(IOctopusRepository repository, string collectionLinkName, SpaceContext userDefinedSpaceContext);
    protected virtual Dictionary`2<string, object> get_AdditionalQueryParameters();
    protected virtual void CheckSpaceResource(IHaveSpaceResource spaceResource);
    protected SpaceContext GetCurrentSpaceContext();
    private void ValidateThatICanUseACustomSpaceContext();
    protected virtual void EnrichSpaceId(TMixedScopeResource resource);
    protected void EnsureSingleSpaceContext();
    protected void EnsureSystemContext();
    [CompilerGeneratedAttribute]
private void <EnsureSingleSpaceContext>b__9_2();
}
internal class Octopus.Client.Repositories.OctopusServerNodeRepository : BasicRepository`1<OctopusServerNodeResource> {
    private IOctopusRepository repository;
    public OctopusServerNodeRepository(IOctopusRepository repository);
    public sealed virtual OctopusServerNodeDetailsResource Details(OctopusServerNodeResource node);
    public sealed virtual OctopusServerClusterSummaryResource Summary();
}
public class Octopus.Client.Repositories.PackageMetadataRepository : object {
    private IOctopusRepository repository;
    private static ILog Logger;
    public PackageMetadataRepository(IOctopusRepository repository);
    private static PackageMetadataRepository();
    public sealed virtual OctopusPackageMetadataMappedResource Get(string id);
    public sealed virtual OctopusPackageMetadataMappedResource Push(string packageId, string version, OctopusPackageMetadata octopusMetadata);
    public sealed virtual OctopusPackageMetadataMappedResource Push(string packageId, string version, OctopusPackageMetadata octopusMetadata, OverwriteMode overwriteMode);
}
public class Octopus.Client.Repositories.PerformanceConfigurationRepository : object {
    private IOctopusRepository repository;
    public PerformanceConfigurationRepository(IOctopusRepository repository);
    public sealed virtual PerformanceConfigurationResource Get();
    public sealed virtual PerformanceConfigurationResource Modify(PerformanceConfigurationResource resource);
}
internal class Octopus.Client.Repositories.ProjectGroupRepository : BasicRepository`1<ProjectGroupResource> {
    public ProjectGroupRepository(IOctopusRepository repository);
    public sealed virtual List`1<ProjectResource> GetProjects(ProjectGroupResource projectGroup);
    public sealed virtual ProjectGroupEditor CreateOrModify(string name);
    public sealed virtual ProjectGroupEditor CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.ProjectRepository : BasicRepository`1<ProjectResource> {
    public ProjectRepository(IOctopusRepository repository);
    public sealed virtual ResourceCollection`1<GitBranchResource> GetGitBranches(ProjectResource projectResource);
    public sealed virtual GitBranchResource GetGitBranch(ProjectResource projectResource, string branch);
    public sealed virtual ConvertProjectToGitResponse ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage);
    public sealed virtual ResourceCollection`1<ReleaseResource> GetReleases(ProjectResource project, int skip, Nullable`1<int> take, string searchByVersion);
    public sealed virtual IReadOnlyList`1<ReleaseResource> GetAllReleases(ProjectResource project);
    public sealed virtual ReleaseResource GetReleaseByVersion(ProjectResource project, string version);
    public sealed virtual ResourceCollection`1<ChannelResource> GetChannels(ProjectResource project);
    public sealed virtual IReadOnlyList`1<ChannelResource> GetAllChannels(ProjectResource project);
    public sealed virtual ProgressionResource GetProgression(ProjectResource project);
    public sealed virtual ResourceCollection`1<ProjectTriggerResource> GetTriggers(ProjectResource project);
    public sealed virtual IReadOnlyList`1<ProjectTriggerResource> GetAllTriggers(ProjectResource project);
    public sealed virtual void SetLogo(ProjectResource project, string fileName, Stream contents);
    public sealed virtual ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    public sealed virtual ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    public sealed virtual ResourceCollection`1<RunbookSnapshotResource> GetRunbookSnapshots(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public sealed virtual IReadOnlyList`1<RunbookSnapshotResource> GetAllRunbookSnapshots(ProjectResource project);
    public sealed virtual RunbookSnapshotResource GetRunbookSnapshotByName(ProjectResource project, string name);
    public sealed virtual ResourceCollection`1<RunbookResource> GetRunbooks(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public sealed virtual IReadOnlyList`1<RunbookResource> GetAllRunbooks(ProjectResource project);
}
internal class Octopus.Client.Repositories.ProjectTriggerRepository : BasicRepository`1<ProjectTriggerResource> {
    public ProjectTriggerRepository(IOctopusRepository repository);
    public sealed virtual ProjectTriggerResource FindByName(ProjectResource project, string name);
    public sealed virtual ProjectTriggerEditor CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    public sealed virtual ResourceCollection`1<ProjectTriggerResource> FindByRunbook(String[] runbookIds);
}
internal class Octopus.Client.Repositories.ProxyRepository : BasicRepository`1<ProxyResource> {
    public ProxyRepository(IOctopusRepository repository);
}
internal class Octopus.Client.Repositories.ReleaseRepository : BasicRepository`1<ReleaseResource> {
    public ReleaseRepository(IOctopusRepository repository);
    public sealed virtual ResourceCollection`1<DeploymentResource> GetDeployments(ReleaseResource release, int skip, Nullable`1<int> take);
    public sealed virtual ResourceCollection`1<ArtifactResource> GetArtifacts(ReleaseResource release, int skip, Nullable`1<int> take);
    public sealed virtual DeploymentTemplateResource GetTemplate(ReleaseResource release);
    public sealed virtual DeploymentPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    public sealed virtual ReleaseResource SnapshotVariables(ReleaseResource release);
    public sealed virtual ReleaseResource Create(ReleaseResource release, bool ignoreChannelRules);
    public sealed virtual LifecycleProgressionResource GetProgression(ReleaseResource release);
}
internal class Octopus.Client.Repositories.RetentionPolicyRepository : BasicRepository`1<RetentionPolicyResource> {
    public RetentionPolicyRepository(IOctopusRepository repository);
    public sealed virtual TaskResource ApplyNow(string spaceId);
}
internal class Octopus.Client.Repositories.RunbookProcessRepository : BasicRepository`1<RunbookProcessResource> {
    public RunbookProcessRepository(IOctopusRepository repository);
    public sealed virtual RunbookSnapshotTemplateResource GetTemplate(RunbookProcessResource runbookProcess);
}
internal class Octopus.Client.Repositories.RunbookRepository : BasicRepository`1<RunbookResource> {
    private SemanticVersion versionAfterWhichRunbookRunParametersAreAvailable;
    private SemanticVersion integrationTestVersion;
    public RunbookRepository(IOctopusRepository repository);
    public sealed virtual RunbookResource FindByName(ProjectResource project, string name);
    public sealed virtual RunbookEditor CreateOrModify(ProjectResource project, string name, string description);
    public sealed virtual RunbookSnapshotTemplateResource GetRunbookSnapshotTemplate(RunbookResource runbook);
    public sealed virtual RunbookRunTemplateResource GetRunbookRunTemplate(RunbookResource runbook);
    public sealed virtual RunbookRunPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    private bool ServerSupportsRunbookRunParameters(string version);
    public sealed virtual RunbookRunResource Run(RunbookResource runbook, RunbookRunResource runbookRun);
    public sealed virtual RunbookRunResource[] Run(RunbookResource runbook, RunbookRunParameters runbookRunParameters);
}
internal class Octopus.Client.Repositories.RunbookRunRepository : BasicRepository`1<RunbookRunResource> {
    public RunbookRunRepository(IOctopusRepository repository);
    public sealed virtual TaskResource GetTask(RunbookRunResource resource);
    public sealed virtual ResourceCollection`1<RunbookRunResource> FindBy(String[] projects, String[] runbooks, String[] environments, int skip, Nullable`1<int> take);
    public sealed virtual void Paginate(String[] projects, String[] runbooks, String[] environments, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
    public sealed virtual void Paginate(String[] projects, String[] runbooks, String[] environments, String[] tenants, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
}
internal class Octopus.Client.Repositories.RunbookSnapshotRepository : BasicRepository`1<RunbookSnapshotResource> {
    public RunbookSnapshotRepository(IOctopusRepository repository);
    public sealed virtual ResourceCollection`1<RunbookRunResource> GetRunbookRuns(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public sealed virtual ResourceCollection`1<ArtifactResource> GetArtifacts(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public sealed virtual RunbookRunTemplateResource GetTemplate(RunbookSnapshotResource runbookSnapshot);
    public sealed virtual RunbookRunPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    public sealed virtual RunbookSnapshotResource SnapshotVariables(RunbookSnapshotResource runbookSnapshot);
    public sealed virtual RunbookSnapshotResource Create(RunbookSnapshotResource runbookSnapshot);
}
internal class Octopus.Client.Repositories.SchedulerRepository : object {
    private IOctopusRepository repository;
    public SchedulerRepository(IOctopusRepository repository);
    public sealed virtual void Start();
    public sealed virtual void Start(string taskName);
    public sealed virtual void Trigger(string taskName);
    public sealed virtual void Stop();
    public sealed virtual void Stop(string taskName);
    public sealed virtual ScheduledTaskDetailsResource GetLogs(string taskName);
    public sealed virtual Stream GetRawLogs(string taskName);
    public sealed virtual SchedulerStatusResource Status();
}
internal class Octopus.Client.Repositories.ScopedUserRoleRepository : MixedScopeBaseRepository`1<ScopedUserRoleResource> {
    public ScopedUserRoleRepository(IOctopusRepository repository);
    private ScopedUserRoleRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    public sealed virtual IScopedUserRoleRepository UsingContext(SpaceContext userDefinedSpaceContext);
}
internal class Octopus.Client.Repositories.ServerStatusRepository : BasicRepository`1<ServerStatusResource> {
    public ServerStatusRepository(IOctopusRepository repository);
    public sealed virtual ServerStatusResource GetServerStatus();
    public sealed virtual ServerStatusHealthResource GetServerHealth();
    public sealed virtual SystemInfoResource GetSystemInfo(ServerStatusResource status);
}
internal class Octopus.Client.Repositories.SpaceRepository : BasicRepository`1<SpaceResource> {
    public SpaceRepository(IOctopusRepository repository);
    public sealed virtual void SetLogo(SpaceResource space, string fileName, Stream contents);
    public sealed virtual SpaceSearchResult[] Search(string spaceId, string keyword);
}
internal class Octopus.Client.Repositories.SubscriptionRepository : BasicRepository`1<SubscriptionResource> {
    public SubscriptionRepository(IOctopusRepository repository);
    public sealed virtual SubscriptionEditor CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
}
internal class Octopus.Client.Repositories.TagSetRepository : BasicRepository`1<TagSetResource> {
    public TagSetRepository(IOctopusRepository repository);
    public sealed virtual void Sort(String[] tagSetIdsInOrder);
    public sealed virtual TagSetEditor CreateOrModify(string name);
    public sealed virtual TagSetEditor CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.TaskRepository : MixedScopeBaseRepository`1<TaskResource> {
    public TaskRepository(IOctopusRepository repository);
    private TaskRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    public sealed virtual TaskResource ExecuteHealthCheck(string description, int timeoutAfterMinutes, int machineTimeoutAfterMinutes, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public sealed virtual TaskResource ExecuteCalamariUpdate(string description, String[] machineIds);
    public sealed virtual TaskResource ExecuteBackup(string description);
    public sealed virtual TaskResource ExecuteTentacleUpgrade(string description, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public sealed virtual TaskResource ExecuteAdHocScript(string scriptBody, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, string syntax, Nullable`1<TargetType> targetType);
    public sealed virtual TaskResource ExecuteActionTemplate(ActionTemplateResource template, Dictionary`2<string, PropertyValueResource> properties, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, Nullable`1<TargetType> targetType);
    private void EnsureValidTargetType(Nullable`1<TargetType> targetType);
    public sealed virtual TaskResource ExecuteCommunityActionTemplatesSynchronisation(string description);
    public sealed virtual TaskDetailsResource GetDetails(TaskResource resource, Nullable`1<bool> includeVerboseOutput, Nullable`1<int> tail);
    public sealed virtual string GetRawOutputLog(TaskResource resource);
    public sealed virtual TaskTypeResource[] GetTaskTypes();
    public sealed virtual void Rerun(TaskResource resource);
    public sealed virtual void Cancel(TaskResource resource);
    public sealed virtual void ModifyState(TaskResource resource, TaskState newState, string reason);
    public sealed virtual IReadOnlyList`1<TaskResource> GetQueuedBehindTasks(TaskResource resource);
    public sealed virtual void WaitForCompletion(TaskResource task, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public sealed virtual void WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public sealed virtual void WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, Nullable`1<TimeSpan> timeoutAfter, Action`1<TaskResource[]> interval);
    public sealed virtual List`1<TaskResource> GetAllActive(int pageSize);
    public sealed virtual TaskResourceCollection GetActiveWithSummary(int pageSize, int skip);
    public sealed virtual TaskResourceCollection GetAllWithSummary(int pageSize, int skip);
    public sealed virtual ITaskRepository UsingContext(SpaceContext userDefinedSpaceContext);
    private void EnsureTaskCanRunInTheCurrentContext(TaskResource task);
    private TaskResource CreateSystemTask(TaskResource task);
    [CompilerGeneratedAttribute]
private <>f__AnonymousType63`2<TaskResource, TaskResource> <WaitForCompletion>b__19_0(TaskResource task);
}
internal class Octopus.Client.Repositories.TeamsRepository : MixedScopeBaseRepository`1<TeamResource> {
    public TeamsRepository(IOctopusRepository repository);
    private TeamsRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    public sealed virtual List`1<ScopedUserRoleResource> GetScopedUserRoles(TeamResource team);
    public sealed virtual ITeamsRepository UsingContext(SpaceContext userDefinedSpaceContext);
}
public class Octopus.Client.Repositories.TelemetryConfigurationRepository : object {
    private IOctopusRepository repository;
    private static string LinkName;
    public TelemetryConfigurationRepository(IOctopusRepository repository);
    public sealed virtual TelemetryConfigurationResource GetTelemetryConfiguration();
    public sealed virtual TelemetryConfigurationResource ModifyTelemetryConfiguration(TelemetryConfigurationResource resource);
    public sealed virtual TelemetryConfigurationResource EnableTelemetry();
    public sealed virtual TelemetryConfigurationResource DisableTelemetry();
}
internal class Octopus.Client.Repositories.TenantRepository : BasicRepository`1<TenantResource> {
    public TenantRepository(IOctopusRepository repository);
    public sealed virtual TenantVariableResource GetVariables(TenantResource tenant);
    public sealed virtual List`1<TenantResource> FindAll(string name, String[] tags, int pageSize);
    public sealed virtual TenantVariableResource ModifyVariables(TenantResource tenant, TenantVariableResource variables);
    public sealed virtual List`1<TenantsMissingVariablesResource> GetMissingVariables(string tenantId, string projectId, string environmentId);
    public sealed virtual MultiTenancyStatusResource Status();
    public sealed virtual void SetLogo(TenantResource tenant, string fileName, Stream contents);
    public sealed virtual TenantEditor CreateOrModify(string name);
    public sealed virtual TenantEditor CreateOrModify(string name, string description);
    public sealed virtual TenantEditor CreateOrModify(string name, string description, string cloneId);
}
internal class Octopus.Client.Repositories.TenantVariablesRepository : BasicRepository`1<TenantVariableResource> {
    public TenantVariablesRepository(IOctopusRepository repository);
    public sealed virtual List`1<TenantVariableResource> GetAll(ProjectResource projectResource);
}
internal class Octopus.Client.Repositories.UpgradeConfigurationRepository : BasicRepository`1<UpgradeConfigurationResource> {
    public UpgradeConfigurationRepository(IOctopusRepository repository);
    public sealed virtual UpgradeConfigurationResource Get();
}
internal class Octopus.Client.Repositories.UserInvitesRepository : MixedScopeBaseRepository`1<InvitationResource> {
    public UserInvitesRepository(IOctopusRepository octopusRepository);
    public sealed virtual InvitationResource Invite(string addToTeamId);
    public sealed virtual InvitationResource Invite(ReferenceCollection addToTeamIds);
}
internal class Octopus.Client.Repositories.UserPermissionsRepository : MixedScopeBaseRepository`1<UserPermissionSetResource> {
    public UserPermissionsRepository(IOctopusRepository repository);
    private UserPermissionsRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    public sealed virtual UserPermissionSetResource Get(UserResource user);
    public sealed virtual UserPermissionSetResource GetConfiguration(UserResource user);
    public sealed virtual Stream Export(UserPermissionSetResource userPermissions);
    public sealed virtual IUserPermissionsRepository UsingContext(SpaceContext userDefinedSpaceContext);
}
internal class Octopus.Client.Repositories.UserRepository : BasicRepository`1<UserResource> {
    private BasicRepository`1<InvitationResource> invitations;
    public UserRepository(IOctopusRepository repository);
    public sealed virtual UserResource FindByUsername(string username);
    public sealed virtual UserResource Create(string username, string displayName, string password, string emailAddress);
    public sealed virtual UserResource CreateServiceAccount(string username, string displayName);
    public sealed virtual UserResource Register(RegisterCommand registerCommand);
    public sealed virtual void SignIn(LoginCommand loginCommand);
    public sealed virtual void SignIn(string username, string password, bool rememberMe);
    public sealed virtual void SignOut();
    public sealed virtual UserResource GetCurrent();
    public sealed virtual SpaceResource[] GetSpaces(UserResource user);
    public sealed virtual ApiKeyCreatedResource CreateApiKey(UserResource user, string purpose, Nullable`1<DateTimeOffset> expires);
    public sealed virtual List`1<ApiKeyResource> GetApiKeys(UserResource user);
    public sealed virtual void RevokeApiKey(ApiKeyResourceBase apiKey);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public sealed virtual InvitationResource Invite(string addToTeamId);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public sealed virtual InvitationResource Invite(ReferenceCollection addToTeamIds);
}
internal class Octopus.Client.Repositories.UserRolesRepository : BasicRepository`1<UserRoleResource> {
    public UserRolesRepository(IOctopusRepository repository);
    public virtual UserRoleResource Create(UserRoleResource resource, object pathParameters);
    public virtual UserRoleResource Modify(UserRoleResource resource);
    private void RemoveInvalidPermissions(UserRoleResource resource);
    [CompilerGeneratedAttribute]
internal static List`1<Permission> <RemoveInvalidPermissions>g__RemoveDeprecatedPermission|3_0(Permission permissionToRemove, List`1<Permission> permissions);
}
internal class Octopus.Client.Repositories.UserTeamsRepository : MixedScopeBaseRepository`1<TeamNameResource> {
    public UserTeamsRepository(IOctopusRepository repository);
    private UserTeamsRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    public sealed virtual TeamNameResource[] Get(UserResource user);
    public sealed virtual IUserTeamsRepository UsingContext(SpaceContext userDefinedSpaceContext);
}
internal class Octopus.Client.Repositories.VariableSetRepository : BasicRepository`1<VariableSetResource> {
    public VariableSetRepository(IOctopusRepository repository);
    public sealed virtual String[] GetVariableNames(string project, String[] environments);
    public sealed virtual VariableSetResource GetVariablePreview(string project, string channel, string tenant, string runbook, string action, string environment, string machine, string role);
    public virtual List`1<VariableSetResource> Get(String[] ids);
}
internal class Octopus.Client.Repositories.WorkerPoolRepository : BasicRepository`1<WorkerPoolResource> {
    public WorkerPoolRepository(IOctopusRepository repository);
    public sealed virtual List`1<WorkerResource> GetMachines(WorkerPoolResource workerPool, Nullable`1<int> skip, Nullable`1<int> take, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles);
    public sealed virtual WorkerPoolsSummaryResource Summary(string ids, string partialName, string machinePartialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, Nullable`1<bool> hideEmptyPools);
    public sealed virtual void Sort(String[] workerpoolIdsInOrder);
    public sealed virtual WorkerPoolEditor CreateOrModify(string name);
    public sealed virtual WorkerPoolEditor CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.WorkerRepository : BasicRepository`1<WorkerResource> {
    public WorkerRepository(IOctopusRepository repository);
    public sealed virtual WorkerResource Discover(string host, int port, Nullable`1<DiscoverableEndpointType> type);
    public sealed virtual MachineConnectionStatus GetConnectionStatus(WorkerResource machine);
    public sealed virtual List`1<WorkerResource> FindByThumbprint(string thumbprint);
    public sealed virtual WorkerEditor CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] pools);
    public sealed virtual ResourceCollection`1<WorkerResource> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string workerpoolIds);
}
public class Octopus.Client.RepositoryScope : object {
    private RepositoryScopeType type;
    private SpaceResource space;
    private RepositoryScope(RepositoryScopeType type, SpaceResource space);
    public static RepositoryScope ForSpace(SpaceResource space);
    public static RepositoryScope ForSystem();
    public static RepositoryScope Unspecified();
    public T Apply(Func`2<SpaceResource, T> whenSpaceScoped, Func`1<T> whenSystemScoped, Func`1<T> whenUnspecifiedScope);
    public void Apply(Action`1<SpaceResource> whenSpaceScoped, Action whenSystemScoped, Action whenUnspecifiedScope);
}
internal class Octopus.Client.ResourceSelfLinkExtractor : object {
    public string GetSelfUrlOrNull(TResource resource);
}
public class Octopus.Client.Serialization.AccountConverter : InheritedClassConverter`2<AccountResource, AccountType> {
    private static IDictionary`2<AccountType, Type> AccountTypeMappings;
    protected IDictionary`2<AccountType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    private static AccountConverter();
    protected virtual IDictionary`2<AccountType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
}
internal class Octopus.Client.Serialization.ControlConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Octopus.Client.Serialization.DateConverter : IsoDateTimeConverter {
}
public class Octopus.Client.Serialization.EndpointConverter : InheritedClassConverter`2<EndpointResource, CommunicationStyle> {
    private static IDictionary`2<CommunicationStyle, Type> EndpointTypes;
    protected IDictionary`2<CommunicationStyle, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    private static EndpointConverter();
    protected virtual IDictionary`2<CommunicationStyle, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
}
public class Octopus.Client.Serialization.EndpointWithMultipleAuthenticationConverter : InheritedClassConverter`2<IEndpointWithMultipleAuthenticationResource, MultipleAccountType> {
    private static IDictionary`2<MultipleAccountType, Type> FeedTypeMappings;
    protected IDictionary`2<MultipleAccountType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    private static EndpointWithMultipleAuthenticationConverter();
    protected virtual IDictionary`2<MultipleAccountType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
}
public class Octopus.Client.Serialization.FeedConverter : InheritedClassConverter`2<FeedResource, FeedType> {
    private static IDictionary`2<FeedType, Type> FeedTypeMappings;
    private static Type defaultType;
    [CompilerGeneratedAttribute]
private Type <DefaultType>k__BackingField;
    protected IDictionary`2<FeedType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    protected Type DefaultType { get; }
    private static FeedConverter();
    protected virtual IDictionary`2<FeedType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
    [CompilerGeneratedAttribute]
protected virtual Type get_DefaultType();
}
public class Octopus.Client.Serialization.GitCredentialDetailsConverter : InheritedClassConverter`2<GitCredentialDetails, GitCredentialType> {
    private static IDictionary`2<GitCredentialType, Type> GitCredentialDetailsTypeMappings;
    private static Type defaultType;
    [CompilerGeneratedAttribute]
private Type <DefaultType>k__BackingField;
    protected IDictionary`2<GitCredentialType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    protected Type DefaultType { get; }
    private static GitCredentialDetailsConverter();
    protected virtual IDictionary`2<GitCredentialType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
    [CompilerGeneratedAttribute]
protected virtual Type get_DefaultType();
}
public class Octopus.Client.Serialization.GitSettingsConverter : InheritedClassConverter`2<ProjectGitCredentialResource, ProjectGitCredentialType> {
    private static IDictionary`2<ProjectGitCredentialType, Type> GitCredentialTypeMappings;
    private static Type defaultType;
    [CompilerGeneratedAttribute]
private Type <DefaultType>k__BackingField;
    protected IDictionary`2<ProjectGitCredentialType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    protected Type DefaultType { get; }
    private static GitSettingsConverter();
    protected virtual IDictionary`2<ProjectGitCredentialType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
    [CompilerGeneratedAttribute]
protected virtual Type get_DefaultType();
}
public class Octopus.Client.Serialization.HrefConverter : JsonConverter {
    private Func`1<string> baseUrlResolver;
    public HrefConverter(Func`1<string> baseUrlResolver);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public abstract class Octopus.Client.Serialization.InheritedClassConverter`2 : JsonConverter {
    [CompilerGeneratedAttribute]
private Type <DefaultType>k__BackingField;
    protected Type DefaultType { get; }
    protected IDictionary`2<TEnumType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    [CompilerGeneratedAttribute]
protected virtual Type get_DefaultType();
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
    protected abstract virtual IDictionary`2<TEnumType, Type> get_DerivedTypeMappings();
    protected abstract virtual string get_TypeDesignatingPropertyName();
}
public static class Octopus.Client.Serialization.JsonSerialization : object {
    private static JsonSerialization();
    public static JsonSerializerSettings GetDefaultSerializerSettings();
    public static string SerializeObject(object obj);
    public static T DeserializeObject(string value);
}
public class Octopus.Client.Serialization.MultiIsoDateTimeFormatConverter : JsonConverter {
    private List`1<JsonConverter> converters;
    private JsonConverter DefaultConverter { get; }
    public MultiIsoDateTimeFormatConverter(string defaultFormat, String[] additionalReadFormats);
    private JsonConverter get_DefaultConverter();
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Octopus.Client.Serialization.PersistenceSettingsConverter : InheritedClassConverter`2<PersistenceSettingsResource, PersistenceSettingsType> {
    private static IDictionary`2<PersistenceSettingsType, Type> PersistenceSettingsTypeMappings;
    private static Type defaultType;
    [CompilerGeneratedAttribute]
private Type <DefaultType>k__BackingField;
    protected IDictionary`2<PersistenceSettingsType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    protected Type DefaultType { get; }
    private static PersistenceSettingsConverter();
    protected virtual IDictionary`2<PersistenceSettingsType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
    [CompilerGeneratedAttribute]
protected virtual Type get_DefaultType();
}
public class Octopus.Client.Serialization.PrivateMemberContractResolver : DefaultContractResolver {
    protected virtual JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization);
}
public static class Octopus.Client.Serialization.Serializer : object {
    public static string Serialize(object metadata, T exportObject);
    public static string Serialize(object obj);
    public static T Deserialize(string input);
}
public class Octopus.Client.Serialization.TriggerActionConverter : InheritedClassConverter`2<TriggerActionResource, TriggerActionType> {
    private static IDictionary`2<TriggerActionType, Type> ActionTypes;
    protected IDictionary`2<TriggerActionType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    private static TriggerActionConverter();
    protected virtual IDictionary`2<TriggerActionType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
}
public class Octopus.Client.Serialization.TriggerFilterConverter : InheritedClassConverter`2<TriggerFilterResource, TriggerFilterType> {
    private static IDictionary`2<TriggerFilterType, Type> FilterTypes;
    protected IDictionary`2<TriggerFilterType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    private static TriggerFilterConverter();
    protected virtual IDictionary`2<TriggerFilterType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
}
public class Octopus.Client.SingleSpaceOperationInMultiSpaceContextException : Exception {
}
public class Octopus.Client.SpaceContext : object {
    private SpaceSelection spaceSelection;
    private IReadOnlyCollection`1<SpaceResource> spaces;
    [CompilerGeneratedAttribute]
private bool <IncludeSystem>k__BackingField;
    public bool IncludeSystem { get; }
    private SpaceContext(SpaceSelection spaceSelection, IReadOnlyCollection`1<SpaceResource> spaces, bool includeSystem);
    public static SpaceContext AllSpaces();
    public static SpaceContext AllSpacesAndSystem();
    public static SpaceContext SpecificSpace(SpaceResource space);
    public static SpaceContext SpecificSpaceAndSystem(SpaceResource space);
    public static SpaceContext SpecificSpaces(IEnumerable`1<SpaceResource> spaces);
    public static SpaceContext SpecificSpacesAndSystem(IEnumerable`1<SpaceResource> spaces);
    public static SpaceContext SpecificSpaces(SpaceResource[] spaces);
    public static SpaceContext SpecificSpacesAndSystem(SpaceResource[] spaces);
    public static SpaceContext SystemOnly();
    [CompilerGeneratedAttribute]
public bool get_IncludeSystem();
    public T ApplySpaceSelection(Func`2<IReadOnlyCollection`1<SpaceResource>, T> handleSpecificSpaces, Func`1<T> handleAllSpaces);
    public void ApplySpaceSelection(Action`1<IReadOnlyCollection`1<SpaceResource>> handleSpecificSpaces, Action handleAllSpaces);
}
public class Octopus.Client.SpaceContextSwitchException : Exception {
}
public class Octopus.Client.SpaceScopedOperationInSystemContextException : Exception {
}
public enum Octopus.Client.SpaceSelection : Enum {
    public int value__;
    public static SpaceSelection AllSpaces;
    public static SpaceSelection SpecificSpaces;
}
internal static class Octopus.Client.TinyTypeConverterRegistration : object {
    public static void RegisterTinyTypeConverters();
    [CompilerGeneratedAttribute]
internal static Type[] <RegisterTinyTypeConverters>g__SafelyGetTypes|0_2(Assembly assembly);
}
public class Octopus.Client.UrlTemplate : object {
    private static string UriReservedSymbols;
    private static string UriUnreservedSymbols;
    private static Dictionary`2<char, OperatorInfo> Operators;
    private Dictionary`2<string, object> parameters;
    private string template;
    private bool errorDetected;
    private List`1<string> parameterNames;
    private StringBuilder result;
    public UrlTemplate(string template);
    private static UrlTemplate();
    public void SetParameter(string name, object value);
    public void SetParameter(string name, string value);
    public void SetParameter(string name, IEnumerable`1<string> value);
    public void SetParameter(string name, IDictionary`2<string, string> value);
    public IEnumerable`1<string> GetParameterNames();
    public string Resolve();
    private void ProcessExpression(StringBuilder currentExpression);
    private bool ProcessVariable(VarSpec varSpec);
    private void AppendDictionary(OperatorInfo op, bool explode, IDictionary`2<string, string> dictionary);
    private void AppendList(OperatorInfo op, bool explode, string variable, IEnumerable`1<string> list);
    private void AppendValue(string value, int prefixLength, bool allowReserved);
    private void AppendName(string variable, OperatorInfo op, bool valueIsEmpty);
    private static string Encode(string p, bool allowReserved);
    private static OperatorInfo GetOperator(char operatorIndicator);
    public static string Resolve(string templateSpec, object parameters);
    public static string Resolve(string templateSpec, IDictionary`2<string, object> parameters);
}
internal class Octopus.Client.Util.ClientProxy : object {
    [CompilerGeneratedAttribute]
private Uri <ProxyUri>k__BackingField;
    [CompilerGeneratedAttribute]
private ICredentials <Credentials>k__BackingField;
    public Uri ProxyUri { get; protected set; }
    public ICredentials Credentials { get; public set; }
    public ClientProxy(string address, string username, string password);
    [CompilerGeneratedAttribute]
public Uri get_ProxyUri();
    [CompilerGeneratedAttribute]
protected void set_ProxyUri(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual ICredentials get_Credentials();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Credentials(ICredentials value);
    public sealed virtual Uri GetProxy(Uri destination);
    public sealed virtual bool IsBypassed(Uri host);
}
[ExtensionAttribute]
internal static class Octopus.Client.Util.DynamicExtensions : object {
    [ExtensionAttribute]
public static object ToDynamic(object value, object metadata);
    private static IDictionary`2<string, object> GetExpandoObject(object value);
}
internal static class Octopus.Client.Util.HashCalculator : object {
    public static string Hash(Stream stream);
    public static string Hash(Byte[] bytes);
    public static string Hash(string input);
    private static string Sanitize(Byte[] hash);
}
public class Octopus.Client.Util.HashCodeCombiner : object {
    private static long Seed;
    private long combinedHash;
    public int CombinedHash { get; }
    public int get_CombinedHash();
    public HashCodeCombiner AddInt32(int i);
    public HashCodeCombiner AddObject(int i);
    public HashCodeCombiner AddObject(bool b);
    public HashCodeCombiner AddObject(object o);
    public static int GetHashCode(Object[] objects);
}
[ExtensionAttribute]
internal static class Octopus.Client.Util.LinkSpaceExtension : object {
    [ExtensionAttribute]
public static string AppendSpaceId(Href link, SpaceResource space);
}
internal static class Octopus.Client.Util.PackageContentComparer : object {
    public static bool AreSame(PackageFromBuiltInFeedResource uploadedPackage, Stream contents, ILog logger);
    private static string CalculateLocalPackageHash(Stream contents);
}
public class Octopus.Client.Util.PackageIdentityParser : object {
    public static bool TryParsePackageIdAndVersion(string idAndVersion, String& packageId, SemanticVersion& version);
}
internal static class Octopus.Client.Util.ParameterHelper : object {
    public static Dictionary`2<string, object> CombineParameters(Dictionary`2<string, object> currentAdditionalQueryParameters, object userProvidedParameters);
    private static IDictionary`2<string, object> GetParameters(object parameters);
}
internal class Octopus.Client.Util.TemporaryFile : object {
    private static ILog Logger;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    public string FileName { get; }
    private static TemporaryFile();
    [CompilerGeneratedAttribute]
public string get_FileName();
    public sealed virtual void Dispose();
}
public class Octopus.Client.Validation.ContainsSomeValidCharactersAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Validation.NonEmptyCollectionAttribute : ValidationAttribute {
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Validation.NonEmptyCollectionItemAttribute : ValidationAttribute {
    public virtual bool IsValid(object value);
}
public class Octopus.Client.Validation.PasswordComplexityAttribute : ValidationAttribute {
    public static string DefaultMessage;
    private static PasswordComplexityAttribute();
    public virtual bool IsValid(object value);
    public static bool IsPasswordStrongEnough(string password);
    private static int CalculateStrength(string password);
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Validation.PathSegmentAttribute : Attribute {
}
internal static class Octopus.Client.Validation.ServerVersionCheck : object {
    private static String[] WhitelistOfServerVersionsSafeToIgnore;
    private static ServerVersionCheck();
    public static bool IsOlderThanClient(string currentServerVersion, SemanticVersion minimumRequiredVersion);
    private static SemanticVersion Normalize(SemanticVersion version);
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Validation.ValidSemanticVersionOrMaskAttribute : ValidationAttribute {
    public virtual bool IsValid(object value);
}
