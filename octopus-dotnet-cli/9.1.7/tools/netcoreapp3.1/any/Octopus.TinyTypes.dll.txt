[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Octopus.TinyTypes.CaseInsensitiveStringTinyType : TinyType`1<string> {
    private int calculateHash;
    protected CaseInsensitiveStringTinyType(string value);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Octopus.TinyTypes.CaseSensitiveStringTinyType : TinyType`1<string> {
    protected CaseSensitiveStringTinyType(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{Value}")]
public abstract class Octopus.TinyTypes.TinyType`1 : object {
    private static BindingFlags Flags;
    private static ConcurrentDictionary`2<Type, Delegate> TypeCreatorCache;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public T Value { get; }
    protected TinyType`1(T value);
    private static TinyType`1();
    [CompilerGeneratedAttribute]
public T get_Value();
    [NullableContextAttribute("2")]
public virtual int CompareTo(object obj);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public static bool op_Equality(TinyType`1<T> a, TinyType`1<T> b);
    public static bool op_Inequality(TinyType`1<T> a, TinyType`1<T> b);
    public virtual int GetHashCode();
    [NullableContextAttribute("2")]
public virtual string ToString();
    public static Func`2<T, TTinyType> GetTinyTypeCreatorDelegate(Type tinyType);
    public static TinyType`1<T> Create(Type tinyType, object value);
    [NullableContextAttribute("0")]
public static TTinyType Create(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Octopus.TinyTypes.TinyTypeExtensionMethods : object {
    [ExtensionAttribute]
public static Type UnderlyingValueType(Type type);
    [ExtensionAttribute]
public static bool IsTinyType(Type type);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
