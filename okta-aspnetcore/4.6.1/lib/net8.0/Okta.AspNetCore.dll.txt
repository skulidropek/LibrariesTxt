[ExtensionAttribute]
public static class Okta.AspNetCore.OktaAuthenticationOptionsExtensions : object {
    [ExtensionAttribute]
public static AuthenticationBuilder AddOktaMvc(AuthenticationBuilder builder, OktaMvcOptions options);
    [ExtensionAttribute]
public static AuthenticationBuilder AddOktaMvc(AuthenticationBuilder builder, string authenticationScheme, OktaMvcOptions options);
    [ExtensionAttribute]
public static AuthenticationBuilder AddOktaWebApi(AuthenticationBuilder builder, OktaWebApiOptions options);
    [ExtensionAttribute]
public static AuthenticationBuilder AddOktaWebApi(AuthenticationBuilder builder, string authenticationScheme, OktaWebApiOptions options);
    private static AuthenticationBuilder AddCodeFlow(AuthenticationBuilder builder, string authenticationScheme, OktaMvcOptions options);
    private static Task BeforeRedirectToIdentityProviderAsync(RedirectContext context, Func`2<RedirectContext, Task> redirectEvent);
    private static AuthenticationBuilder AddJwtValidation(AuthenticationBuilder builder, string authenticationScheme, OktaWebApiOptions options);
}
public static class Okta.AspNetCore.OktaDefaults : object {
    public static string MvcAuthenticationScheme;
    public static string ApiAuthenticationScheme;
    public static string CallbackPath;
    public static string SignOutCallbackPath;
    public static String[] Scope;
    private static OktaDefaults();
}
public class Okta.AspNetCore.OktaMvcOptions : OktaWebOptions {
    [CompilerGeneratedAttribute]
private string <ClientSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CallbackPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PostLogoutRedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GetClaimsFromUserInfoEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private OpenIdConnectEvents <OpenIdConnectEvents>k__BackingField;
    public string ClientSecret { get; public set; }
    public string ClientId { get; public set; }
    public string CallbackPath { get; public set; }
    public string PostLogoutRedirectUri { get; public set; }
    public IList`1<string> Scope { get; public set; }
    public bool GetClaimsFromUserInfoEndpoint { get; public set; }
    public OpenIdConnectEvents OpenIdConnectEvents { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientSecret();
    [CompilerGeneratedAttribute]
public void set_ClientSecret(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_CallbackPath();
    [CompilerGeneratedAttribute]
public void set_CallbackPath(string value);
    [CompilerGeneratedAttribute]
public string get_PostLogoutRedirectUri();
    [CompilerGeneratedAttribute]
public void set_PostLogoutRedirectUri(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(IList`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_GetClaimsFromUserInfoEndpoint();
    [CompilerGeneratedAttribute]
public void set_GetClaimsFromUserInfoEndpoint(bool value);
    [CompilerGeneratedAttribute]
public OpenIdConnectEvents get_OpenIdConnectEvents();
    [CompilerGeneratedAttribute]
public void set_OpenIdConnectEvents(OpenIdConnectEvents value);
}
public class Okta.AspNetCore.OktaMvcOptionsValidator : OktaWebOptionsValidator`1<OktaMvcOptions> {
    protected virtual void ValidateInternal(OktaMvcOptions options);
}
public class Okta.AspNetCore.OktaWebApiOptions : OktaWebApiOptions {
    [CompilerGeneratedAttribute]
private JwtBearerEvents <JwtBearerEvents>k__BackingField;
    public JwtBearerEvents JwtBearerEvents { get; public set; }
    [CompilerGeneratedAttribute]
public JwtBearerEvents get_JwtBearerEvents();
    [CompilerGeneratedAttribute]
public void set_JwtBearerEvents(JwtBearerEvents value);
}
public class Okta.AspNetCore.OpenIdConnectOptionsHelper : object {
    public static void ConfigureOpenIdConnectOptions(OktaMvcOptions oktaMvcOptions, OpenIdConnectOptions oidcOptions);
    public static void ConfigureJwtBearerOptions(OktaWebApiOptions oktaWebApiOptions, JwtBearerOptions jwtBearerOptions);
}
