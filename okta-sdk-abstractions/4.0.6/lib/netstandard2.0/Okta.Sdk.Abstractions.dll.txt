public class Okta.Sdk.Abstractions.AbstractResourceTypeResolverFactory : object {
    private IEnumerable`1<TypeInfo> _resourceDefinedTypes;
    private static Type DefaultResolverType;
    public AbstractResourceTypeResolverFactory(IEnumerable`1<TypeInfo> resourceDefinedTypes);
    private static AbstractResourceTypeResolverFactory();
    private IEnumerable`1<ValueTuple`2<Type, Type>> GetAllResolvers(IEnumerable`1<TypeInfo> allTypes);
    public IEnumerable`1<TypeInfo> GetAllResourceDefinedTypes();
    protected IEnumerable`1<ValueTuple`2<Type, Type>> GetAllResolvers();
    public bool RequiresResolution(Type resourceType);
    public IResourceTypeResolver CreateResolver();
    public IResourceTypeResolver CreateResolver(Type forType);
    private Type GetConcreteForInterface(Type possiblyInterface);
    private Type GetResolver(Type resourceType);
}
public class Okta.Sdk.Abstractions.ApiError : BaseResource {
    public string ErrorCode { get; }
    public string ErrorSummary { get; }
    public string ErrorLink { get; }
    public string ErrorId { get; }
    public IEnumerable`1<IApiErrorCause> ErrorCauses { get; }
    public sealed virtual string get_ErrorCode();
    public sealed virtual string get_ErrorSummary();
    public sealed virtual string get_ErrorLink();
    public sealed virtual string get_ErrorId();
    public sealed virtual IEnumerable`1<IApiErrorCause> get_ErrorCauses();
}
public class Okta.Sdk.Abstractions.ApiErrorCause : BaseResource {
    public string ErrorSummary { get; }
    public sealed virtual string get_ErrorSummary();
}
public class Okta.Sdk.Abstractions.AuthorizationSettings : object {
    [CompilerGeneratedAttribute]
private AuthorizationType <AuthorizationType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public AuthorizationType AuthorizationType { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public AuthorizationType get_AuthorizationType();
    [CompilerGeneratedAttribute]
public void set_AuthorizationType(AuthorizationType value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public static AuthorizationSettings GetDefault();
    public static string EncodeClientCredentials(string clientId, string clientSecret);
}
public enum Okta.Sdk.Abstractions.AuthorizationType : Enum {
    public int value__;
    public static AuthorizationType None;
    public static AuthorizationType Basic;
    public static AuthorizationType Ssws;
}
public class Okta.Sdk.Abstractions.BaseOktaClient : object {
    protected IDataStore _dataStore;
    protected RequestContext _requestContext;
    [CompilerGeneratedAttribute]
private OktaClientConfiguration <Configuration>k__BackingField;
    public OktaClientConfiguration Configuration { get; protected set; }
    private static BaseOktaClient();
    protected BaseOktaClient(OktaClientConfiguration apiClientConfiguration, HttpClient httpClient, ILogger logger, UserAgentBuilder userAgentBuilder, AbstractResourceTypeResolverFactory resourceTypeResolverFactory);
    protected BaseOktaClient(IDataStore dataStore, OktaClientConfiguration configuration, RequestContext requestContext);
    protected static OktaClientConfiguration GetConfigurationOrDefault(OktaClientConfiguration apiClientConfiguration);
    [CompilerGeneratedAttribute]
public OktaClientConfiguration get_Configuration();
    [CompilerGeneratedAttribute]
protected void set_Configuration(OktaClientConfiguration value);
    public sealed virtual IOktaClient CreateScoped(RequestContext requestContext);
    protected CollectionClient`1<T> GetCollectionClient(HttpRequest initialRequest);
    public sealed virtual Task`1<T> GetAsync(string href, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.BaseOktaClient/<GetAsync>d__14`1")]
public sealed virtual Task`1<T> GetAsync(HttpRequest request, CancellationToken cancellationToken);
    public sealed virtual CollectionClient`1<T> GetCollection(string href);
    public sealed virtual CollectionClient`1<T> GetCollection(HttpRequest request);
    public sealed virtual Task PostAsync(string href, object model, CancellationToken cancellationToken);
    public sealed virtual Task`1<TResponse> PostAsync(string href, object model, CancellationToken cancellationToken);
    public sealed virtual Task PostAsync(HttpRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.BaseOktaClient/<PostAsync>d__20`1")]
public sealed virtual Task`1<TResponse> PostAsync(HttpRequest request, CancellationToken cancellationToken);
    public sealed virtual Task PutAsync(string href, object model, CancellationToken cancellationToken);
    public sealed virtual Task`1<TResponse> PutAsync(string href, object model, CancellationToken cancellationToken);
    public sealed virtual Task PutAsync(HttpRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.BaseOktaClient/<PutAsync>d__24`1")]
public sealed virtual Task`1<TResponse> PutAsync(HttpRequest request, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(string href, CancellationToken cancellationToken);
    public sealed virtual Task DeleteAsync(HttpRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.BaseOktaClient/<SendAsync>d__27`1")]
public sealed virtual Task`1<TResponse> SendAsync(HttpRequest request, HttpVerb httpVerb, CancellationToken cancellationToken);
}
[DefaultMemberAttribute("Item")]
public class Okta.Sdk.Abstractions.BaseResource : object {
    internal static TypeInfo ResourceTypeInfo;
    protected IOktaClient _client;
    private ResourceFactory _resourceFactory;
    private ILogger _logger;
    private IDictionary`2<string, object> _data;
    public object Item { get; public set; }
    private static BaseResource();
    public void Initialize(IOktaClient client, ResourceFactory resourceFactory, IDictionary`2<string, object> data, ILogger logger);
    protected IOktaClient GetClient();
    public sealed virtual IDictionary`2<string, object> GetData();
    public sealed virtual object get_Item(string name);
    public sealed virtual void set_Item(string name, object value);
    public sealed virtual T GetProperty(string name);
    private object GetPropertyOrNull(string key);
    private object GetPropertyOrEmptyCollection(string key);
    public sealed virtual void SetProperty(string name, object value);
    protected string GetStringProperty(string name);
    protected Nullable`1<bool> GetBooleanProperty(string name);
    protected Nullable`1<int> GetIntegerProperty(string name);
    protected Nullable`1<long> GetLongProperty(string name);
    protected Nullable`1<double> GetDoubleProperty(string name);
    protected Nullable`1<DateTimeOffset> GetDateTimeProperty(string name);
    public sealed virtual IList`1<T> GetArrayProperty(string name);
    protected TEnum GetEnumProperty(string name);
    private TEnum GetEnumPropertyInternal(string name);
    protected T GetResourceProperty(string name);
    private T GetResourcePropertyInternal(string key);
    public sealed virtual string GetRaw();
}
[DefaultMemberAttribute("Item")]
public class Okta.Sdk.Abstractions.CastingListAdapter`1 : object {
    private IList`1<object> _genericList;
    private ResourceFactory _resourceFactory;
    private TypeInfo _targetTypeInfo;
    private ILogger _logger;
    public T Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public CastingListAdapter`1(IList`1<object> genericList, ResourceFactory resourceFactory, ILogger logger);
    private T Cast(object item);
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    [IteratorStateMachineAttribute("Okta.Sdk.Abstractions.CastingListAdapter`1/<GetEnumerator>d__17")]
public sealed virtual IEnumerator`1<T> GetEnumerator();
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual bool Remove(T item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Okta.Sdk.Abstractions.CollectionAsyncEnumerator`1 : object {
    private PagedCollectionEnumerator`1<T> _pagedEnumerator;
    private bool _initialized;
    private int _localPageIndex;
    private bool _disposedValue;
    public T Current { get; }
    public CollectionAsyncEnumerator`1(IDataStore dataStore, HttpRequest initialRequest, RequestContext requestContext, CancellationToken cancellationToken);
    public sealed virtual T get_Current();
    private void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.CollectionAsyncEnumerator`1/<MoveNextAsync>d__8")]
public sealed virtual ValueTask`1<bool> MoveNextAsync();
    public sealed virtual ValueTask DisposeAsync();
}
public class Okta.Sdk.Abstractions.CollectionClient`1 : object {
    private IDataStore _dataStore;
    private HttpRequest _initialRequest;
    private RequestContext _requestContext;
    public CollectionClient`1(IDataStore dataStore, HttpRequest initialRequest, RequestContext requestContext);
    public sealed virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
    public sealed virtual IPagedCollectionEnumerator`1<T> GetPagedEnumerator(CancellationToken cancellationToken);
}
public class Okta.Sdk.Abstractions.CollectionPage`1 : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<T> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpResponse`1<IEnumerable`1<T>> <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private WebLink <NextLink>k__BackingField;
    public IEnumerable`1<T> Items { get; public set; }
    public HttpResponse`1<IEnumerable`1<T>> Response { get; public set; }
    public WebLink NextLink { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<T> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IEnumerable`1<T> value);
    [CompilerGeneratedAttribute]
public HttpResponse`1<IEnumerable`1<T>> get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(HttpResponse`1<IEnumerable`1<T>> value);
    [CompilerGeneratedAttribute]
public WebLink get_NextLink();
    [CompilerGeneratedAttribute]
public void set_NextLink(WebLink value);
}
public class Okta.Sdk.Abstractions.Configuration.OktaClientConfiguration : object {
    private bool _disableHttpsCheck;
    public static int DefaultConnectionTimeout;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConnectionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OktaDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private ProxyConfiguration <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public Nullable`1<int> ConnectionTimeout { get; public set; }
    public string OktaDomain { get; public set; }
    public ProxyConfiguration Proxy { get; public set; }
    public string Token { get; public set; }
    public bool DisableHttpsCheck { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ConnectionTimeout();
    [CompilerGeneratedAttribute]
public void set_ConnectionTimeout(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_OktaDomain();
    [CompilerGeneratedAttribute]
public void set_OktaDomain(string value);
    [CompilerGeneratedAttribute]
public ProxyConfiguration get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(ProxyConfiguration value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    public bool get_DisableHttpsCheck();
    public void set_DisableHttpsCheck(bool value);
    public sealed virtual OktaClientConfiguration DeepClone();
}
public class Okta.Sdk.Abstractions.Configuration.Providers.EnvironmentVariables.CustomEnvironmentVariablesProvider : ConfigurationProvider {
    private string mustStartWith;
    private string separator;
    private string root;
    public CustomEnvironmentVariablesProvider(string mustStartWith, string separator, string root);
    public virtual void Load();
    public void Load(IDictionary variables);
}
public class Okta.Sdk.Abstractions.Configuration.Providers.EnvironmentVariables.CustomEnvironmentVariablesSource : object {
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Root>k__BackingField;
    public string Prefix { get; public set; }
    public string Separator { get; public set; }
    public string Root { get; public set; }
    public CustomEnvironmentVariablesSource(string mustStartWith, string separator, string root);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public string get_Separator();
    [CompilerGeneratedAttribute]
public void set_Separator(string value);
    [CompilerGeneratedAttribute]
public string get_Root();
    [CompilerGeneratedAttribute]
public void set_Root(string value);
    public sealed virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[ExtensionAttribute]
public static class Okta.Sdk.Abstractions.Configuration.Providers.EnvironmentVariables.EnvironmentConfigurationExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddEnvironmentVariables(IConfigurationBuilder builder, string mustStartWith, string separator, string root);
}
public class Okta.Sdk.Abstractions.Configuration.Providers.EnvironmentVariables.EnvironmentVariablesEnumerator : object {
    private static string KeyDelimiter;
    private string prefix;
    private string separator;
    public EnvironmentVariablesEnumerator(string prefix, string separator);
    [IteratorStateMachineAttribute("Okta.Sdk.Abstractions.Configuration.Providers.EnvironmentVariables.EnvironmentVariablesEnumerator/<GetItems>d__4")]
public IEnumerable`1<KeyValuePair`2<string, string>> GetItems(IDictionary environmentVariables);
}
public class Okta.Sdk.Abstractions.Configuration.Providers.Object.ObjectConfigurationProvider : JsonStreamConfigurationProvider {
    public ObjectConfigurationProvider(ObjectConfigurationSource configurationSource);
}
public class Okta.Sdk.Abstractions.Configuration.Providers.Object.ObjectConfigurationSource : JsonStreamConfigurationSource {
    [CompilerGeneratedAttribute]
private JObject <JsonObject>k__BackingField;
    public JObject JsonObject { get; }
    public ObjectConfigurationSource(JObject jsonObject);
    [CompilerGeneratedAttribute]
public JObject get_JsonObject();
    public virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[ExtensionAttribute]
public static class Okta.Sdk.Abstractions.Configuration.Providers.Object.ObjectExtension : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddObject(IConfigurationBuilder builder, object object, string root);
}
[ExtensionAttribute]
public static class Okta.Sdk.Abstractions.Configuration.Providers.Yaml.YamlConfigurationExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddYamlFile(IConfigurationBuilder builder, string path);
    [ExtensionAttribute]
public static IConfigurationBuilder AddYamlFile(IConfigurationBuilder builder, string path, bool optional);
}
public class Okta.Sdk.Abstractions.Configuration.Providers.Yaml.YamlConfigurationProvider : FileConfigurationProvider {
    public YamlConfigurationProvider(YamlConfigurationSource source);
    public virtual void Load(Stream stream);
    private void AddConfigurationValue(string parentPrefix, KeyValuePair`2<object, object> entry);
}
public class Okta.Sdk.Abstractions.Configuration.Providers.Yaml.YamlConfigurationSource : FileConfigurationSource {
    public virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
public class Okta.Sdk.Abstractions.Configuration.ProxyConfiguration : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    public Nullable`1<int> Port { get; public set; }
    public string Host { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    public sealed virtual ProxyConfiguration DeepClone();
}
public class Okta.Sdk.Abstractions.DefaultDataStore : object {
    private IRequestExecutor _requestExecutor;
    private ISerializer _serializer;
    private ILogger _logger;
    private UserAgentBuilder _userAgentBuilder;
    private ResourceFactory _resourceFactory;
    public IRequestExecutor RequestExecutor { get; }
    public ISerializer Serializer { get; }
    public DefaultDataStore(IRequestExecutor requestExecutor, ISerializer serializer, ResourceFactory resourceFactory, ILogger logger, UserAgentBuilder userAgentBuilder);
    public sealed virtual IRequestExecutor get_RequestExecutor();
    public sealed virtual ISerializer get_Serializer();
    private static HttpResponse`1<T> CreateResourceResponse(HttpResponse`1<string> response, T resource);
    private static string PayloadOrEmpty(HttpResponse`1<string> response);
    private static void EnsureValidRequest(HttpRequest request);
    private void AddUserAgent(HttpRequest request);
    private static void ApplyContextToRequest(HttpRequest request, RequestContext context);
    private void EnsureResponseSuccess(HttpResponse`1<string> response);
    private bool IsOAuthException(IDictionary`2<string, object> errorData);
    private void PrepareRequest(HttpRequest request, RequestContext context);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.DefaultDataStore/<GetAsync>d__18`1")]
public sealed virtual Task`1<HttpResponse`1<T>> GetAsync(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.DefaultDataStore/<GetArrayAsync>d__19`1")]
public sealed virtual Task`1<HttpResponse`1<IEnumerable`1<T>>> GetArrayAsync(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.DefaultDataStore/<PostAsync>d__20`1")]
public sealed virtual Task`1<HttpResponse`1<TResponse>> PostAsync(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.DefaultDataStore/<PutAsync>d__21`1")]
public sealed virtual Task`1<HttpResponse`1<TResponse>> PutAsync(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.DefaultDataStore/<DeleteAsync>d__22")]
public sealed virtual Task`1<HttpResponse> DeleteAsync(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private T <GetArrayAsync>b__19_0(IDictionary`2<string, object> x);
}
public static class Okta.Sdk.Abstractions.DefaultHttpClient : object {
    public static HttpClient Create(Nullable`1<int> connectionTimeout, ProxyConfiguration proxyConfiguration, ILogger logger);
}
public class Okta.Sdk.Abstractions.DefaultProxy : object {
    private ICredentials _credentials;
    private Uri _proxyUri;
    public ICredentials Credentials { get; public set; }
    public DefaultProxy(ProxyConfiguration proxyConfiguration, ILogger logger);
    public sealed virtual ICredentials get_Credentials();
    public sealed virtual void set_Credentials(ICredentials value);
    public sealed virtual Uri GetProxy(Uri destination);
    public sealed virtual bool IsBypassed(Uri host);
}
public class Okta.Sdk.Abstractions.DefaultRequestExecutor : object {
    private string _oktaDomain;
    private HttpClient _httpClient;
    private ILogger _logger;
    public DefaultRequestExecutor(OktaClientConfiguration configuration, HttpClient httpClient, ILogger logger);
    private static void ApplyDefaultClientSettings(HttpClient client, string oktaDomain, OktaClientConfiguration configuration);
    private string EnsureRelativeUrl(string uri);
    private string GetContentType(IEnumerable`1<KeyValuePair`2<string, string>> headers);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.DefaultRequestExecutor/<SendAsync>d__7")]
private Task`1<HttpResponse`1<string>> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    private void ApplyHeadersToRequest(HttpRequestMessage request, IEnumerable`1<KeyValuePair`2<string, string>> headers);
    private static IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> ExtractHeaders(HttpResponseMessage response);
    public sealed virtual Task`1<HttpResponse`1<string>> GetAsync(string href, IEnumerable`1<KeyValuePair`2<string, string>> headers, CancellationToken cancellationToken);
    public sealed virtual Task`1<HttpResponse`1<string>> PostAsync(string href, IEnumerable`1<KeyValuePair`2<string, string>> headers, string body, CancellationToken cancellationToken);
    public sealed virtual Task`1<HttpResponse`1<string>> PutAsync(string href, IEnumerable`1<KeyValuePair`2<string, string>> headers, string body, CancellationToken cancellationToken);
    public sealed virtual Task`1<HttpResponse`1<string>> DeleteAsync(string href, IEnumerable`1<KeyValuePair`2<string, string>> headers, CancellationToken cancellationToken);
}
internal class Okta.Sdk.Abstractions.DefaultResourceTypeResolver`1 : AbstractResourceTypeResolver`1<T> {
    public AbstractResourceTypeResolverFactory ResourceTypeResolverFactory { get; public set; }
    public virtual AbstractResourceTypeResolverFactory get_ResourceTypeResolverFactory();
    public virtual void set_ResourceTypeResolverFactory(AbstractResourceTypeResolverFactory value);
    protected virtual Type GetResolvedTypeInternal(IDictionary`2<string, object> data);
}
public class Okta.Sdk.Abstractions.DefaultSerializer : object {
    private static string EmptyObject;
    private JsonSerializer _serializer;
    public sealed virtual IDictionary`2<string, object> Deserialize(string json);
    public sealed virtual IEnumerable`1<IDictionary`2<string, object>> DeserializeArray(string json);
    public sealed virtual string Serialize(object model);
    private T Deserialize(string input);
}
public static class Okta.Sdk.Abstractions.HomePath : object {
    public static string Resolve(String[] pathSegments);
    public static string GetHomePath();
}
public class Okta.Sdk.Abstractions.HttpRequest : object {
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Payload>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <QueryParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <PathParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Headers>k__BackingField;
    public string Uri { get; public set; }
    public object Payload { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, object>> QueryParameters { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, object>> PathParameters { get; public set; }
    public IDictionary`2<string, string> Headers { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
    [CompilerGeneratedAttribute]
public object get_Payload();
    [CompilerGeneratedAttribute]
public void set_Payload(object value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<KeyValuePair`2<string, object>> get_QueryParameters();
    [CompilerGeneratedAttribute]
public void set_QueryParameters(IEnumerable`1<KeyValuePair`2<string, object>> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<KeyValuePair`2<string, object>> get_PathParameters();
    [CompilerGeneratedAttribute]
public void set_PathParameters(IEnumerable`1<KeyValuePair`2<string, object>> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IDictionary`2<string, string> value);
}
public static class Okta.Sdk.Abstractions.HttpRequestContentBuilder : object {
    public static string ContentTypeJson;
    public static string ContentTypeFormUrlEncoded;
    public static HttpContent GetRequestContent(string contentType, string body);
}
public class Okta.Sdk.Abstractions.HttpResponse : object {
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> <Headers>k__BackingField;
    public int StatusCode { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> Headers { get; public set; }
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(int value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> value);
}
public class Okta.Sdk.Abstractions.HttpResponse`1 : HttpResponse {
    [CompilerGeneratedAttribute]
private T <Payload>k__BackingField;
    public T Payload { get; public set; }
    [CompilerGeneratedAttribute]
public T get_Payload();
    [CompilerGeneratedAttribute]
public void set_Payload(T value);
}
public enum Okta.Sdk.Abstractions.HttpVerb : Enum {
    public int value__;
    public static HttpVerb Get;
    public static HttpVerb Post;
    public static HttpVerb Put;
    public static HttpVerb Delete;
}
public interface Okta.Sdk.Abstractions.IApiError {
    public string ErrorCode { get; }
    public string ErrorSummary { get; }
    public string ErrorLink { get; }
    public string ErrorId { get; }
    public IEnumerable`1<IApiErrorCause> ErrorCauses { get; }
    public abstract virtual string get_ErrorCode();
    public abstract virtual string get_ErrorSummary();
    public abstract virtual string get_ErrorLink();
    public abstract virtual string get_ErrorId();
    public abstract virtual IEnumerable`1<IApiErrorCause> get_ErrorCauses();
}
public interface Okta.Sdk.Abstractions.IApiErrorCause {
    public string ErrorSummary { get; }
    public abstract virtual string get_ErrorSummary();
}
public interface Okta.Sdk.Abstractions.ICollectionClient`1 {
    public abstract virtual IPagedCollectionEnumerator`1<T> GetPagedEnumerator(CancellationToken cancellationToken);
}
public interface Okta.Sdk.Abstractions.IDataStore {
    public IRequestExecutor RequestExecutor { get; }
    public ISerializer Serializer { get; }
    public abstract virtual IRequestExecutor get_RequestExecutor();
    public abstract virtual ISerializer get_Serializer();
    public abstract virtual Task`1<HttpResponse`1<T>> GetAsync(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponse`1<IEnumerable`1<T>>> GetArrayAsync(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponse`1<TResponse>> PostAsync(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponse`1<TResponse>> PutAsync(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponse> DeleteAsync(HttpRequest request, RequestContext requestContext, CancellationToken cancellationToken);
}
public interface Okta.Sdk.Abstractions.IDeepCloneable`1 {
    public abstract virtual T DeepClone();
}
public interface Okta.Sdk.Abstractions.IIonApiError {
    public string Version { get; }
    public string ErrorSummary { get; }
    public abstract virtual string get_Version();
    public abstract virtual string get_ErrorSummary();
}
public abstract class Okta.Sdk.Abstractions.Internal.AbstractResourceTypeResolver`1 : object {
    protected AbstractResourceTypeResolverFactory _resourceTypeResolverFactory;
    public AbstractResourceTypeResolverFactory ResourceTypeResolverFactory { get; public set; }
    public abstract virtual AbstractResourceTypeResolverFactory get_ResourceTypeResolverFactory();
    public abstract virtual void set_ResourceTypeResolverFactory(AbstractResourceTypeResolverFactory value);
    public sealed virtual Type GetResolvedType(IDictionary`2<string, object> data);
    protected abstract virtual Type GetResolvedTypeInternal(IDictionary`2<string, object> data);
}
public interface Okta.Sdk.Abstractions.IOAuthApiError {
    public string Error { get; }
    public string ErrorDescription { get; }
    public abstract virtual string get_Error();
    public abstract virtual string get_ErrorDescription();
}
public interface Okta.Sdk.Abstractions.IOktaClient {
    public abstract virtual IOktaClient CreateScoped(RequestContext requestContext);
    public abstract virtual Task`1<T> GetAsync(string href, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> GetAsync(HttpRequest request, CancellationToken cancellationToken);
    public abstract virtual CollectionClient`1<T> GetCollection(string href);
    public abstract virtual CollectionClient`1<T> GetCollection(HttpRequest request);
    public abstract virtual Task PostAsync(string href, object model, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResponse> PostAsync(string href, object model, CancellationToken cancellationToken);
    public abstract virtual Task PostAsync(HttpRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResponse> PostAsync(HttpRequest request, CancellationToken cancellationToken);
    public abstract virtual Task PutAsync(string href, object model, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResponse> PutAsync(string href, object model, CancellationToken cancellationToken);
    public abstract virtual Task PutAsync(HttpRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResponse> PutAsync(HttpRequest request, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(string href, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(HttpRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResponse> SendAsync(HttpRequest request, HttpVerb httpVerb, CancellationToken cancellationToken);
}
public class Okta.Sdk.Abstractions.IonApiError : BaseResource {
    public string Version { get; }
    public string ErrorSummary { get; }
    public sealed virtual string get_Version();
    public sealed virtual string get_ErrorSummary();
    private string GetErrorSummary();
    private string GetResponseErrorSummary();
    private string GetFormValidationErrorSummary();
}
public interface Okta.Sdk.Abstractions.IPagedCollectionEnumerator`1 {
    public CollectionPage`1<T> CurrentPage { get; }
    public abstract virtual CollectionPage`1<T> get_CurrentPage();
    public abstract virtual Task`1<bool> MoveNextAsync();
}
public interface Okta.Sdk.Abstractions.IRequestExecutor {
    public abstract virtual Task`1<HttpResponse`1<string>> GetAsync(string href, IEnumerable`1<KeyValuePair`2<string, string>> headers, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponse`1<string>> PostAsync(string href, IEnumerable`1<KeyValuePair`2<string, string>> headers, string body, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponse`1<string>> PutAsync(string href, IEnumerable`1<KeyValuePair`2<string, string>> headers, string body, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponse`1<string>> DeleteAsync(string href, IEnumerable`1<KeyValuePair`2<string, string>> headers, CancellationToken cancellationToken);
}
[DefaultMemberAttribute("Item")]
public interface Okta.Sdk.Abstractions.IResource {
    public object Item { get; public set; }
    public abstract virtual object get_Item(string name);
    public abstract virtual void set_Item(string name, object value);
    public abstract virtual IList`1<T> GetArrayProperty(string name);
    public abstract virtual IDictionary`2<string, object> GetData();
    public abstract virtual string GetRaw();
    public abstract virtual void SetProperty(string name, object value);
    public abstract virtual T GetProperty(string name);
}
public interface Okta.Sdk.Abstractions.IResourceTypeResolver {
    public abstract virtual Type GetResolvedType(IDictionary`2<string, object> data);
}
public interface Okta.Sdk.Abstractions.ISerializer {
    public abstract virtual string Serialize(object model);
    public abstract virtual IDictionary`2<string, object> Deserialize(string json);
    public abstract virtual IEnumerable`1<IDictionary`2<string, object>> DeserializeArray(string json);
}
public static class Okta.Sdk.Abstractions.LinkHeaderParser : object {
    [IteratorStateMachineAttribute("Okta.Sdk.Abstractions.LinkHeaderParser/<Parse>d__0")]
public static IEnumerable`1<WebLink> Parse(String[] headerValues);
    public static IEnumerable`1<WebLink> Parse(IEnumerable`1<string> headerValues);
}
public class Okta.Sdk.Abstractions.OAuthApiError : BaseResource {
    public string Error { get; }
    public string ErrorDescription { get; }
    public sealed virtual string get_Error();
    public sealed virtual string get_ErrorDescription();
}
public class Okta.Sdk.Abstractions.OktaApiException : OktaException {
    private IApiError _error;
    public IApiError Error { get; }
    public string ErrorCode { get; }
    public string ErrorSummary { get; }
    public string ErrorLink { get; }
    public string ErrorId { get; }
    public IEnumerable`1<IApiErrorCause> ErrorCauses { get; }
    public OktaApiException(int statusCode, IApiError error);
    public IApiError get_Error();
    public string get_ErrorCode();
    public string get_ErrorSummary();
    public string get_ErrorLink();
    public string get_ErrorId();
    public IEnumerable`1<IApiErrorCause> get_ErrorCauses();
    private static string GetDetailedErrorMessage(int statusCode, IApiError error);
}
public class Okta.Sdk.Abstractions.OktaClientConfigurationValidator : object {
    public static void Validate(OktaClientConfiguration configuration);
}
public class Okta.Sdk.Abstractions.OktaException : Exception {
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    public int StatusCode { get; private set; }
    public OktaException(string message, int statusCode);
    public OktaException(string message);
    public OktaException(string message, Exception innerException);
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    [CompilerGeneratedAttribute]
private void set_StatusCode(int value);
}
public class Okta.Sdk.Abstractions.OktaIonApiException : OktaException {
    private IonApiError _error;
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    public int StatusCode { get; }
    public IonApiError Error { get; }
    public OktaIonApiException(int statusCode, IonApiError error);
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    public IonApiError get_Error();
}
public class Okta.Sdk.Abstractions.OktaOAuthException : OktaException {
    private IOAuthApiError _error;
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    public int StatusCode { get; }
    public string Error { get; }
    public string ErrorDescription { get; }
    public OktaOAuthException(int statusCode, IOAuthApiError error);
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    public string get_Error();
    public string get_ErrorDescription();
}
public class Okta.Sdk.Abstractions.PagedCollectionEnumerator`1 : object {
    private IDataStore _dataStore;
    private RequestContext _requestContext;
    private CancellationToken _cancellationToken;
    private HttpRequest _nextRequest;
    [CompilerGeneratedAttribute]
private CollectionPage`1<T> <CurrentPage>k__BackingField;
    public CollectionPage`1<T> CurrentPage { get; private set; }
    public PagedCollectionEnumerator`1(IDataStore dataStore, HttpRequest initialRequest, RequestContext requestContext, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public sealed virtual CollectionPage`1<T> get_CurrentPage();
    [CompilerGeneratedAttribute]
private void set_CurrentPage(CollectionPage`1<T> value);
    [AsyncStateMachineAttribute("Okta.Sdk.Abstractions.PagedCollectionEnumerator`1/<MoveNextAsync>d__9")]
public sealed virtual Task`1<bool> MoveNextAsync();
    private static WebLink GetNextLink(HttpResponse response);
}
public class Okta.Sdk.Abstractions.RecursiveDictionaryConverter : CustomCreationConverter`1<IDictionary`2<string, object>> {
    public virtual IDictionary`2<string, object> Create(Type objectType);
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public class Okta.Sdk.Abstractions.RequestContext : object {
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <XForwardedFor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <XForwardedProto>k__BackingField;
    [CompilerGeneratedAttribute]
private string <XForwardedPort>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationSettings <AuthorizationSettings>k__BackingField;
    public string UserAgent { get; public set; }
    public string XForwardedFor { get; public set; }
    public string XForwardedProto { get; public set; }
    public string XForwardedPort { get; public set; }
    public AuthorizationSettings AuthorizationSettings { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public string get_XForwardedFor();
    [CompilerGeneratedAttribute]
public void set_XForwardedFor(string value);
    [CompilerGeneratedAttribute]
public string get_XForwardedProto();
    [CompilerGeneratedAttribute]
public void set_XForwardedProto(string value);
    [CompilerGeneratedAttribute]
public string get_XForwardedPort();
    [CompilerGeneratedAttribute]
public void set_XForwardedPort(string value);
    [CompilerGeneratedAttribute]
public AuthorizationSettings get_AuthorizationSettings();
    [CompilerGeneratedAttribute]
public void set_AuthorizationSettings(AuthorizationSettings value);
}
public class Okta.Sdk.Abstractions.ResourceFactory : object {
    private IOktaClient _client;
    private ILogger _logger;
    private AbstractResourceTypeResolverFactory _resourceTypeResolverFactory;
    public ResourceFactory(IOktaClient client, ILogger logger, AbstractResourceTypeResolverFactory resourceTypeResolverFactory);
    public IDictionary`2<string, object> NewDictionary(IDictionary`2<string, object> existingData);
    public T CreateFromExistingData(IDictionary`2<string, object> existingDictionary);
    public T CreateNew(IDictionary`2<string, object> data);
}
public class Okta.Sdk.Abstractions.ResourceSerializingConverter : JsonConverter {
    private static TypeInfo ResourceTypeInfo;
    public bool CanRead { get; }
    public bool CanWrite { get; }
    private static ResourceSerializingConverter();
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private static JToken RemoveEmptyChildren(JToken token);
    private static bool IsEmpty(JToken token);
}
public class Okta.Sdk.Abstractions.ResourceTypeHelper : object {
    public static IEnumerable`1<TypeInfo> AllDefinedTypes { get; }
    public static IEnumerable`1<TypeInfo> GetAllDefinedTypes(Type type);
    public static IEnumerable`1<TypeInfo> get_AllDefinedTypes();
}
public abstract class Okta.Sdk.Abstractions.StringEnum : object {
    internal static TypeInfo TypeInfo;
    private string _value;
    public string Value { get; }
    public StringEnum(string value);
    private static StringEnum();
    public string get_Value();
    public virtual string ToString();
    public static string op_Implicit(StringEnum enum);
    public static bool op_Equality(StringEnum x, StringEnum y);
    public static bool op_Inequality(StringEnum x, StringEnum y);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual int CompareTo(object other);
    public static T Create(string item);
}
public class Okta.Sdk.Abstractions.StringEnumSerializingConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public static class Okta.Sdk.Abstractions.UrlFormatter : object {
    public static string Encode(object value);
    public static string EncodeToBase64Url(Byte[] bytes);
    public static string ApplyParametersToPath(HttpRequest request);
}
public static class Okta.Sdk.Abstractions.UrlHelper : object {
    public static string GetOktaRootUrl(string issuer);
    public static string EnsureTrailingSlash(string uri);
}
public class Okta.Sdk.Abstractions.UserAgentBuilder : object {
    private Lazy`1<string> _cachedUserAgent;
    private string _oktaSdkUserAgentName;
    private Version _sdkVersion;
    private static Char[] IllegalCharacters;
    public UserAgentBuilder(string sdkUserAgentName, Version sdkVersion);
    private static UserAgentBuilder();
    public string GetUserAgent();
    public static string Sanitize(string input);
    private string Generate();
    private string GetSdkVersion();
}
public static class Okta.Sdk.Abstractions.UserAgentHelper : object {
    private static string DotNetCoreRuntimeLabel;
    public static Version SdkVersion { get; }
    public static Version get_SdkVersion();
    public static string GetRuntimeVersion(string runtimeFrameworkDescription, string runtimeAssemblyCodeBase);
}
public class Okta.Sdk.Abstractions.WebLink : object {
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Relation>k__BackingField;
    public string Target { get; }
    public string Relation { get; }
    public WebLink(string target, string relation);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public string get_Relation();
    public virtual string ToString();
}
