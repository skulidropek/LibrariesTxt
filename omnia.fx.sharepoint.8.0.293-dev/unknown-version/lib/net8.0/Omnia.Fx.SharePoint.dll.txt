[ExtensionAttribute]
public static class Microsoft.SharePoint.Client.ClientRuntimeContextExtensions : object {
    private static int DefaultRetryCount;
    private static int DefaultDelayInSeconds;
    private static int DefaultWebAppRetryCount;
    [ExtensionAttribute]
public static IClientContextLoadStatus LoadIfNeeded(ClientRuntimeContext ctx, T clientObject, Expression`1[] properties);
    [AsyncStateMachineAttribute("Microsoft.SharePoint.Client.ClientRuntimeContextExtensions/<ExecuteQueryWithRetryAsync>d__7")]
[ExtensionAttribute]
public static Task ExecuteQueryWithRetryAsync(ClientRuntimeContext clientContext);
    [AsyncStateMachineAttribute("Microsoft.SharePoint.Client.ClientRuntimeContextExtensions/<ExecuteQueryWithRetryAsync>d__8")]
[ExtensionAttribute]
public static Task ExecuteQueryWithRetryAsync(ClientRuntimeContext clientContext, int retryCount, int delayInSeconds, bool useRetryAfterHeader);
    internal static IClientContextLoadStatus UpdateLoadStatus(ClientRuntimeContext ctx, T clientObject, ClientContextLoadStatus clientCtxStatus, Expression`1[] properties);
}
[ExtensionAttribute]
public static class Microsoft.SharePoint.Client.SPWebUrlFallbackExtensions : object {
    [ExtensionAttribute]
public static string EnsureSPWebUrl(ContentSearchResult result);
    [ExtensionAttribute]
public static string EnsureSPWebUrl(DocumentSearchResult result);
    [ExtensionAttribute]
public static string EnsureSPWebUrl(SiteSearchResult result);
    [ExtensionAttribute]
public static string EnsureSPWebUrl(IDictionary`2<string, object> resultRow);
    private static string GetStringValue(string key, IDictionary`2<string, object> resultRow);
}
[ExtensionAttribute]
public static class Omnia.Fx.HostConfiguration.Extensions.IOmniaNetStandardConfigurationExtensions : object {
    [ExtensionAttribute]
public static T AddOmniaFxSharePoint(T omniaNetStandardConfiguration, Action`1<IOmniaFxSharePointRequiredImplementations> configureOptions);
    [ExtensionAttribute]
public static T AddOmniaFxSharePointWithEmptyOptions(T omniaNetStandardConfiguration, Action`1<IOmniaFxSharePointEmptyConfigurationOptions> configureOptions);
}
[ExtensionAttribute]
public static class Omnia.Fx.Models.Apps.AppInstanceOutputExtensions : object {
    [ExtensionAttribute]
public static bool TryConvertWithSharepointOutput(AppInstanceOutput outputInfo, AppInstanceWithSharepointOutput& result);
}
[ExtensionAttribute]
public static class Omnia.Fx.Models.Apps.FeatureConfigurationExtensions : object {
    [ExtensionAttribute]
public static bool TryGetSharepointFeatureConfiguration(FeatureConfiguration featureConfiguration, SharePointFeatureConfiguration& sharepointFeatureConfiguration);
}
public class Omnia.Fx.Models.Security.SharePointAccessTokenResource : AccessTokenResourceTypes {
    internal SharePointAccessTokenResource(string siteUrl);
}
[ExtensionAttribute]
public static class Omnia.Fx.Models.Security.SharePointAppSettingsExtensions : object {
    [ExtensionAttribute]
public static AccessTokenResourceTypes GetSPSiteAccessTokenResourceType(SharePointAppSettings appSettings);
    [ExtensionAttribute]
public static AccessTokenResourceTypes GetMySiteAccessTokenResourceType(SharePointAppSettings appSettings);
    [ExtensionAttribute]
public static AccessTokenResourceTypes GetAdminAccessTokenResourceType(SharePointAppSettings appSettings);
}
internal class Omnia.Fx.SharePoint.Apps.AppCustomizerHelper : object {
    private static JsonSerializerOptions JsonOptions;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SharePointClientContextProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OmniaServicesDnsSettings> <OmniaServiceDnsMapping>k__BackingField;
    protected ISharePointClientContextProvider SharePointClientContextProvider { get; }
    protected IOptionsMonitor`1<OmniaServicesDnsSettings> OmniaServiceDnsMapping { get; }
    public AppCustomizerHelper(ISharePointClientContextProvider spClientContextProvider, IOptionsMonitor`1<OmniaServicesDnsSettings> omniaServiceDnsMapping);
    private static AppCustomizerHelper();
    [CompilerGeneratedAttribute]
protected ISharePointClientContextProvider get_SharePointClientContextProvider();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<OmniaServicesDnsSettings> get_OmniaServiceDnsMapping();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Apps.AppCustomizerHelper/<IsExistAsync>d__8")]
public sealed virtual Task`1<bool> IsExistAsync(string spUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Apps.AppCustomizerHelper/<EnsureApplicationCustomizerAsync>d__9")]
public virtual Task EnsureApplicationCustomizerAsync(string spUrl, AppCustomizerProperties appCustomizerProperties);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Apps.AppCustomizerHelper/<GetAppCustomizerPropertiesAsync>d__10")]
public virtual Task`1<AppCustomizerProperties> GetAppCustomizerPropertiesAsync(string spUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Apps.AppCustomizerHelper/<RemoveApplicationCustomizerAsync>d__11")]
public sealed virtual Task RemoveApplicationCustomizerAsync(string spUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Apps.AppCustomizerHelper/<RemoveCustomizerAsync>d__12")]
private Task RemoveCustomizerAsync(ClientContext ctx);
    protected string GetOmniaUrl();
}
public interface Omnia.Fx.SharePoint.Apps.IAppCustomizerHelper {
    public abstract virtual Task`1<AppCustomizerProperties> GetAppCustomizerPropertiesAsync(string spUrl);
    public abstract virtual Task EnsureApplicationCustomizerAsync(string spUrl, AppCustomizerProperties appCustomizerProperties);
    public abstract virtual Task RemoveApplicationCustomizerAsync(string spUrl);
    public abstract virtual Task`1<bool> IsExistAsync(string spUrl);
}
public class Omnia.Fx.SharePoint.Apps.Models.AppCustomizerClientSideComponentProperties : object {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <OmniaServiceId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <ManifestId>k__BackingField;
    public Nullable`1<Guid> OmniaServiceId { get; public set; }
    public Nullable`1<Guid> ManifestId { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_OmniaServiceId();
    [CompilerGeneratedAttribute]
public void set_OmniaServiceId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_ManifestId();
    [CompilerGeneratedAttribute]
public void set_ManifestId(Nullable`1<Guid> value);
}
internal class Omnia.Fx.SharePoint.Apps.Models.AppCustomizerClientSideComponentPropertiesInternal : AppCustomizerClientSideComponentProperties {
    [CompilerGeneratedAttribute]
private string <OmniaUrl>k__BackingField;
    public string OmniaUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OmniaUrl();
    [CompilerGeneratedAttribute]
public void set_OmniaUrl(string value);
}
public class Omnia.Fx.SharePoint.Apps.Models.AppCustomizerHostProperties : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <preAllocatedApplicationCustomizerTopHeight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <preAllocatedApplicationCustomizerBottomHeight>k__BackingField;
    public Nullable`1<int> preAllocatedApplicationCustomizerTopHeight { get; public set; }
    public Nullable`1<int> preAllocatedApplicationCustomizerBottomHeight { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_preAllocatedApplicationCustomizerTopHeight();
    [CompilerGeneratedAttribute]
public void set_preAllocatedApplicationCustomizerTopHeight(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_preAllocatedApplicationCustomizerBottomHeight();
    [CompilerGeneratedAttribute]
public void set_preAllocatedApplicationCustomizerBottomHeight(Nullable`1<int> value);
}
public class Omnia.Fx.SharePoint.Apps.Models.AppCustomizerNotFoundException : Exception {
    public AppCustomizerNotFoundException(string spUrl);
    public AppCustomizerNotFoundException(string message, Exception inner);
}
public class Omnia.Fx.SharePoint.Apps.Models.AppCustomizerProperties : object {
    [CompilerGeneratedAttribute]
private AppCustomizerHostProperties <HostProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private AppCustomizerClientSideComponentProperties <ClientSideComponentProperties>k__BackingField;
    public AppCustomizerHostProperties HostProperties { get; public set; }
    public AppCustomizerClientSideComponentProperties ClientSideComponentProperties { get; public set; }
    [CompilerGeneratedAttribute]
public AppCustomizerHostProperties get_HostProperties();
    [CompilerGeneratedAttribute]
public void set_HostProperties(AppCustomizerHostProperties value);
    [CompilerGeneratedAttribute]
public AppCustomizerClientSideComponentProperties get_ClientSideComponentProperties();
    [CompilerGeneratedAttribute]
public void set_ClientSideComponentProperties(AppCustomizerClientSideComponentProperties value);
}
internal class Omnia.Fx.SharePoint.CamlexNET.ArrayOperationShouldContainOnlyFieldRefOperandsException : GenericException {
}
internal class Omnia.Fx.SharePoint.CamlexNET.AtLeastOneCamlPartShouldNotBeEmptyException : Exception {
}
internal static class Omnia.Fx.SharePoint.CamlexNET.Attributes : object {
    public static string Name;
    public static string ID;
    public static string Type;
    public static string IncludeTimeValue;
    public static string Ascending;
    public static string Collapse;
    public static string GroupLimit;
    public static string LookupId;
    public static string ListAlias;
    public static string List;
    public static string RefType;
    public static string ShowField;
    private static Attributes();
}
public class Omnia.Fx.SharePoint.CamlexNET.BaseFieldType : object {
    public static BaseFieldType op_Explicit(string s);
}
public class Omnia.Fx.SharePoint.CamlexNET.BaseFieldTypeWithOperators : BaseFieldType {
    public static bool op_LessThan(object c1, BaseFieldTypeWithOperators c2);
    public static bool op_GreaterThan(object c1, BaseFieldTypeWithOperators c2);
    public static bool op_LessThanOrEqual(object c1, BaseFieldTypeWithOperators c2);
    public static bool op_GreaterThanOrEqual(object c1, BaseFieldTypeWithOperators c2);
}
internal class Omnia.Fx.SharePoint.CamlexNET.CamlAnalysisException : Exception {
    public CamlAnalysisException(string msg);
}
public class Omnia.Fx.SharePoint.CamlexNET.Camlex : object {
    public static string Now;
    public static string Today;
    public static string Week;
    public static string Month;
    public static string Year;
    public static string UserID;
    private static ITranslatorFactory translatorFactory;
    private static IReTranslatorFactory retranslatorFactory;
    private static IReLinkerFactory relinkerFactory;
    private static Camlex();
    public static bool DateRangesOverlap(object startField, object stopField, object recurrenceField, DateTime dateTime);
    public static bool DateRangesOverlap(object startField, object stopField, object recurrenceField, DateTime dateTime);
    public static IQuery Query();
    public static IReQuery QueryFromString(string input);
}
internal class Omnia.Fx.SharePoint.CamlexNET.CantCreateExpressionForValuesValueOperandException : Exception {
}
internal class Omnia.Fx.SharePoint.CamlexNET.CantCreateValuesValueOperandException : Exception {
    public CantCreateValuesValueOperandException(string msg);
}
internal class Omnia.Fx.SharePoint.CamlexNET.CantDetermineValueTypeException : Exception {
    public CantDetermineValueTypeException(string msg);
}
internal class Omnia.Fx.SharePoint.CamlexNET.CantParseBooleanAttributeException : Exception {
    public CantParseBooleanAttributeException(string attr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.CantParseIntegerAttributeException : Exception {
    public CantParseIntegerAttributeException(string attr);
}
public static class Omnia.Fx.SharePoint.CamlexNET.DataTypes : object {
}
internal class Omnia.Fx.SharePoint.CamlexNET.DateTimeOperandModeNotSupportedException : GenericException {
    public DateTimeOperandModeNotSupportedException(DateTimeValueMode mode);
}
internal class Omnia.Fx.SharePoint.CamlexNET.DateTimeValueOperandExpectedException : GenericException {
}
internal class Omnia.Fx.SharePoint.CamlexNET.EmptyExpressionsListException : GenericException {
}
internal static class Omnia.Fx.SharePoint.CamlexNET.ErrorMessages : object {
    public static string NON_SUPPORTED_EXPRESSION;
    public static string NON_SUPPORTED_EXPRESSION_TYPE;
    public static string NON_SUPPORTED_OPERAND_TYPE;
    public static string NULL_VALUE_OPERAND_CAN_NOT_BE_TRANSLATED_TO_CAML;
    public static string INVALID_VALUE_FOR_OPERAND_TYPE;
    public static string INVALID_VALUE_FOR_FIELD_REF_OPERAND;
    public static string ONLY_OR_AND_BINARY_EXPRESSIONS_ALLOWED_FOR_JOINS;
    public static string EMPTY_EXPRESSIONS_LIST;
    public static string FIELD_REF_SHOULD_CONTAIN_NAME_OR_ID;
    public static string XML_NOT_WELL_FORMED_EXCEPTION;
    public static string DATETIME_OPERAND_MODE_NOT_SUPPORTED;
    public static string ARRAY_OPERATION_SHOULD_CONTAIN_ONLY_FIELD_REF_OPERANDS_EXCEPTION;
    public static string OPERATION_SHOULD_CONTAIN_FIELD_REF_OPERAND_EXCEPTION;
    public static string OPERATION_SHOULD_CONTAIN_TEXT_VALUE_OPERAND_EXCEPTION;
    public static string DATE_TIME_VALUE_OPERAND_EXPECTED_EXCEPTION;
}
[ExtensionAttribute]
public static class Omnia.Fx.SharePoint.CamlexNET.ExtensionMethods : object {
    [ExtensionAttribute]
public static DateTime IncludeTimeValue(DateTime dateTime);
    [ExtensionAttribute]
public static object PrimaryList(object val, string primaryListAlias);
    [ExtensionAttribute]
public static object ForeignList(object val, string foreignListAlias);
    [ExtensionAttribute]
public static object List(object val, string foreignListAlias);
    [ExtensionAttribute]
public static object ShowField(object val, string fieldTitle);
    [ExtensionAttribute]
public static bool Includes(object obj, object val);
    [ExtensionAttribute]
public static bool Includes(object obj, object val, bool lookupId);
}
internal class Omnia.Fx.SharePoint.CamlexNET.FieldRefOperandShouldContainNameOrIdException : GenericException {
}
internal class Omnia.Fx.SharePoint.CamlexNET.GenericException : Exception {
    public GenericException(string message, Object[] args);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.BaseAnalyzer : object {
    protected IOperationResultBuilder operationResultBuilder;
    protected BaseAnalyzer(IOperationResultBuilder operationResultBuilder);
    public abstract virtual bool IsValid(LambdaExpression expr);
    public abstract virtual IOperation GetOperation(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr, object param);
    protected bool isValidEvaluableExpression(Expression expr);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.BinaryExpressionBaseAnalyzer : BaseAnalyzer {
    protected IOperandBuilder operandBuilder;
    protected BinaryExpressionBaseAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    private bool isValidExpressionWithStringBasedSyntax(BinaryExpression body);
    protected bool isValidLeftExpressionWithStringBasedSyntax(Expression leftExpression);
    private bool isExpressionWithStringBasedSyntax(Expression rightExpression);
    private bool isValidExpressionWithNativeSyntax(BinaryExpression body);
    protected bool isValidLeftExpressionWithNativeSyntax(Expression leftExpression);
    protected bool isValidRightExpressionWithNativeSyntax(Expression rightExpression);
    protected bool isValidRightExpressionWithStringBasedSyntax(Expression rightExpression);
    protected IOperand getFieldRefOperand(LambdaExpression expr, IOperand valueOperand);
    protected IOperand getValueOperand(LambdaExpression expr);
    protected IOperation getOperation(LambdaExpression expr, Func`4<IOperationResultBuilder, IOperand, IOperand, T> creator);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.BinaryOperationBase : OperationBase {
    protected IOperand fieldRefOperand;
    protected IOperand valueOperand;
    protected BinaryOperationBase(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    protected virtual Expression getFieldRefOperandExpression();
    protected virtual Expression getFieldRefOperandExpression(Type valueOperandType);
    protected virtual Type getValueOperandType();
    protected virtual Expression getValueOperandExpression();
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.CompositeExpressionBaseAnalyzer : BaseAnalyzer {
    protected IAnalyzerFactory analyzerFactory;
    protected CompositeExpressionBaseAnalyzer(IOperationResultBuilder operationResultBuilder, IAnalyzerFactory analyzerFactory);
    public virtual bool IsValid(LambdaExpression expr);
    private bool isExpressionValid(Expression subExpr, ParameterExpression lambdaParam);
    private Expression`1<Func`2<ListItem, bool>> createLambdaFromExpression(Expression subExpr, ParameterExpression lambdaParam);
    private IOperation createOperationFromExpression(Expression subExpr, ParameterExpression lambdaParam);
    protected IOperation getLeftOperation(LambdaExpression expr);
    protected IOperation getRightOperation(LambdaExpression expr);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.CompositeOperationBase : OperationBase {
    protected IOperation leftOperation;
    protected IOperation rightOperation;
    protected CompositeOperationBase(IOperationResultBuilder operationResultBuilder, IOperation leftOperation, IOperation rightOperation);
    protected virtual Expression getLeftOperationExpression();
    protected virtual Expression getRightOperationExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Factories.AnalyzerFactory : object {
    private IOperandBuilder operandBuilder;
    private IOperationResultBuilder operationResultBuilder;
    public AnalyzerFactory(IOperandBuilder operandBuilder, IOperationResultBuilder operationResultBuilder);
    public sealed virtual IAnalyzer Create(LambdaExpression expr);
    private bool isNullExpression(LambdaExpression expr, IsNullAnalyzer& analyzer);
    private bool isNotNullExpression(LambdaExpression expr, IsNotNullAnalyzer& analyzer);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Factories.OperandBuilder : object {
    public sealed virtual IOperand CreateFieldRefOperand(Expression expr, IOperand valueOperand);
    private IOperand createFieldRefOperandFromNonConstantExpression(Expression expr, IOperand valueOperand);
    private IOperand createFieldRefOperandFromConstantExpression(ConstantExpression expr, IOperand valueOperand);
    private IOperand createFieldRefOperandByNameOrId(string val, IOperand valueOperand);
    private IOperand createFieldRefOperand(string fieldName, IOperand valueOperand);
    private List`1<KeyValuePair`2<string, string>> getAdditionalAttributesForFieldRefOperands(IOperand valueOperand);
    private IOperand createFieldRefOperand(Guid id, IOperand valueOperand);
    public sealed virtual IOperand CreateFieldRefOperandWithOrdering(Expression expr, OrderDirection orderDirection);
    public sealed virtual IOperand CreateFieldRefOperandForJoin(Expression expr);
    public sealed virtual IOperand CreateFieldRefOperandForJoin(Expression expr, Expression primaryListExpr);
    public sealed virtual IOperand CreateFieldRefOperandForProjectedField(Expression expr, Expression listExpr, Expression showFieldExpr);
    public sealed virtual IOperand CreateValueOperandForNativeSyntax(Expression expr);
    public sealed virtual IOperand CreateValueOperandForNativeSyntax(Expression expr, Type explicitOperandType);
    private IOperand CreateValueOperandForNativeSyntax(Expression expr, Type explicitOperandType, Expression sourceExpr);
    public sealed virtual IOperand CreateValueOperandForStringBasedSyntax(Expression expr);
    public sealed virtual IOperand CreateValuesValueOperand(Expression expr);
    private IEnumerable getArrayFromExpression(Expression expr);
    public sealed virtual IOperand CreateConstantOperand(object val, string tag);
    private IOperand createValueOperandFromNonConstantExpression(Expression expr, Type explicitOperandType, Expression sourceExpr);
    private object evaluateExpression(Expression expr);
    private IOperand createValueOperandFromConstantExpression(ConstantExpression expr, Type explicitOperandType, Expression sourceExpr);
    private IOperand createValueOperand(Type type, object value, Expression expr);
    internal static IOperand CreateValueOperand(Type type, object value, bool includeTimeValue, bool parseExactDateTime, bool isComparisionOperation, bool isIntegerForUserId);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Factories.OperationResultBuilder : object {
    public sealed virtual IOperationResult CreateResult(XElement value);
    public sealed virtual IOperationResult CreateResult(XElement[] values);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Factories.TranslatorFactory : object {
    private IAnalyzerFactory analyzerFactory;
    public TranslatorFactory(IAnalyzerFactory analyzerFactory);
    public sealed virtual ITranslator Create(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.GenericTranslator : object {
    private IAnalyzer analyzer;
    public GenericTranslator(IAnalyzer analyzer);
    public sealed virtual XElement TranslateWhere(LambdaExpression expr);
    public sealed virtual XElement TranslateOrderBy(LambdaExpression expr);
    public sealed virtual XElement TranslateGroupBy(LambdaExpression expr, Nullable`1<bool> collapse, Nullable`1<int> groupLimit);
    public sealed virtual XElement TranslateViewFields(Expression`1<Func`2<ListItem, Object[]>> expr);
    public sealed virtual XElement TranslateRowLimit(LambdaExpression expr);
    public sealed virtual XElement TranslateJoin(Expression`1<Func`2<ListItem, object>> expr, JoinType type);
    public sealed virtual XElement TranslateProjectedField(Expression`1<Func`2<ListItem, object>> expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Helpers.ConvertHelper : object {
    public static string ConvertToString(XElement[] elements);
}
public static class Omnia.Fx.SharePoint.CamlexNET.Impl.Helpers.ExpressionsHelper : object {
    public static Expression`1<Func`2<ListItem, bool>> CombineAnd(IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions);
    public static Expression`1<Func`2<ListItem, bool>> CombineOr(IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions);
    private static Expression`1<Func`2<ListItem, bool>> Combine(IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions, ExpressionType type);
    private static BinaryExpression joinExpressions(IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions, ExpressionType type);
    private static BinaryExpression joinExpressions(int currentIdxToAdd, IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions, Expression prevExpr, ExpressionType type);
    internal static bool IncludeTimeValue(Expression expression);
    internal static Expression RemoveIncludeTimeValueMethodCallIfAny(Expression expression);
    public static bool IsIntegerForUserId(Expression expr);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.NullabilityBaseAnalyzer : BinaryExpressionBaseAnalyzer {
    protected NullabilityBaseAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.BooleanValueOperand : ValueOperand`1<bool> {
    public BooleanValueOperand(bool value);
    public BooleanValueOperand(string value);
    private bool tryConvertViaInteger(string value, Boolean& result);
    public virtual XElement ToCaml();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.ConstantOperand : object {
    private object value;
    private string tag;
    public ConstantOperand(object value, string tag);
    public sealed virtual XElement ToCaml();
    public sealed virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.DateTimeValueOperand : ValueOperand`1<DateTime> {
    [CompilerGeneratedAttribute]
private DateTimeValueMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeTimeValue>k__BackingField;
    public DateTimeValueMode Mode { get; public set; }
    public bool IncludeTimeValue { get; public set; }
    public DateTimeValueOperand(DateTime value, bool includeTimeValue);
    public DateTimeValueOperand(string value, bool includeTimeValue);
    public DateTimeValueOperand(string value, bool includeTimeValue, bool parseExact);
    [CompilerGeneratedAttribute]
public DateTimeValueMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(DateTimeValueMode value);
    [CompilerGeneratedAttribute]
public bool get_IncludeTimeValue();
    [CompilerGeneratedAttribute]
public void set_IncludeTimeValue(bool value);
    public virtual XElement ToCaml();
    private string getStringFromDateTime(DateTime dt);
    public virtual Expression ToExpression();
    private Expression getExpressionByMode(DateTimeValueMode mode);
    private Expression getExpression(string name);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.FieldRefOperand : object {
    protected string fieldName;
    protected Nullable`1<Guid> id;
    private List`1<KeyValuePair`2<string, string>> attributes;
    private string tagName;
    public string FieldName { get; }
    public Nullable`1<Guid> FieldId { get; }
    public List`1<KeyValuePair`2<string, string>> Attributes { get; public set; }
    public string TagName { get; public set; }
    protected FieldRefOperand(List`1<KeyValuePair`2<string, string>> attributes);
    public FieldRefOperand(string fieldName);
    public FieldRefOperand(string fieldName, List`1<KeyValuePair`2<string, string>> attributes);
    public FieldRefOperand(Guid id);
    public FieldRefOperand(Guid id, List`1<KeyValuePair`2<string, string>> attributes);
    public string get_FieldName();
    public Nullable`1<Guid> get_FieldId();
    public List`1<KeyValuePair`2<string, string>> get_Attributes();
    public void set_Attributes(List`1<KeyValuePair`2<string, string>> value);
    public string get_TagName();
    public void set_TagName(string value);
    protected void initialize(Guid id);
    protected void initialize(string fieldName);
    public virtual XElement ToCaml();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.FieldRefOperandWithOrdering : FieldRefOperand {
    private OrderDirection orderDirection;
    public FieldRefOperandWithOrdering(FieldRefOperand fieldRefOperand, OrderDirection orderDirection);
    public virtual XElement ToCaml();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.GenericStringBasedValueOperand : ValueOperand`1<string> {
    public GenericStringBasedValueOperand(Type type, string value);
    public virtual XElement ToCaml();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.GuidValueOperand : ValueOperand`1<Guid> {
    public GuidValueOperand(Guid value);
    public GuidValueOperand(string value);
    public virtual XElement ToCaml();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.IntegerValueOperand : ValueOperand`1<int> {
    public IntegerValueOperand(int value);
    public IntegerValueOperand(string value);
    public virtual XElement ToCaml();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.LookupIdValueOperand : GenericStringBasedValueOperand {
    public LookupIdValueOperand(string value);
    public virtual XElement ToCaml();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.LookupMultiIdValueOperand : GenericStringBasedValueOperand {
    public LookupMultiIdValueOperand(string value);
    public virtual XElement ToCaml();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.LookupMultiValueValueOperand : GenericStringBasedValueOperand {
    public LookupMultiValueValueOperand(string value);
    public virtual XElement ToCaml();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.LookupValueValueOperand : GenericStringBasedValueOperand {
    public LookupValueValueOperand(string value);
    public virtual XElement ToCaml();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.NullValueOperand : object {
    public sealed virtual XElement ToCaml();
    public sealed virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.NumberValueOperand : ValueOperand`1<double> {
    public NumberValueOperand(double value);
    public NumberValueOperand(string value);
    public virtual XElement ToCaml();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.TextValueOperand : ValueOperand`1<string> {
    public TextValueOperand(string value);
    public virtual XElement ToCaml();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.UserIdConstValueOperand : GenericStringBasedValueOperand {
    public virtual XElement ToCaml();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.UserIdValueOperand : GenericStringBasedValueOperand {
    public UserIdValueOperand(string value);
    public virtual XElement ToCaml();
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.ValueOperand`1 : object {
    protected Type type;
    protected T value;
    public Type Type { get; }
    public string TypeName { get; }
    public T Value { get; }
    protected ValueOperand`1(Type type, T value);
    public Type get_Type();
    public string get_TypeName();
    public T get_Value();
    public abstract virtual XElement ToCaml();
    public abstract virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operands.ValuesValueOperand : ValueOperand`1<IEnumerable`1<IOperand>> {
    public ValuesValueOperand(IEnumerable`1<IOperand> values);
    public virtual XElement ToCaml();
    public virtual Expression ToExpression();
    public Type GetOperandsType();
    private Type getOperandsType(IOperand operand);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.OperationBase : object {
    protected IOperationResultBuilder operationResultBuilder;
    protected OperationBase(IOperationResultBuilder operationResultBuilder);
    public abstract virtual IOperationResult ToResult();
    public abstract virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.AndAlso.AndAlsoAnalyzer : CompositeExpressionBaseAnalyzer {
    public AndAlsoAnalyzer(IOperationResultBuilder operationResultBuilder, IAnalyzerFactory analyzerFactory);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.AndAlso.AndAlsoOperation : CompositeOperationBase {
    public AndAlsoOperation(IOperationResultBuilder operationResultBuilder, IOperation leftOperation, IOperation rightOperation);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Array.ArrayAnalyzer : BaseAnalyzer {
    private IOperandBuilder operandBuilder;
    public ArrayAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
    private IOperand[] getFieldRefOperandsWithOrdering(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Array.ArrayOperation : OperationBase {
    private IOperand[] fieldRefOperands;
    public int OperandsCount { get; }
    public ArrayOperation(IOperationResultBuilder operationResultBuilder, IOperand[] fieldRefOperands);
    public int get_OperandsCount();
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.BeginsWith.BeginsWithAnalyzer : UnaryExpressionBaseAnalyzer {
    public BeginsWithAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.BeginsWith.BeginsWithOperation : BinaryOperationBase {
    public BeginsWithOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.BeginsWith.ConstantOperation : OperationBase {
    private IOperand operand;
    public ConstantOperation(IOperationResultBuilder operationResultBuilder, IOperand operand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Constant.ConstantAnalyzer : BaseAnalyzer {
    private IOperandBuilder operandBuilder;
    private string tag;
    public ConstantAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder, string tag);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Contains.ContainsAnalyzer : UnaryExpressionBaseAnalyzer {
    public ContainsAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Contains.ContainsOperation : BinaryOperationBase {
    public ContainsOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.DateRangesOverlap.DateRangesOverlapAnalyzer : BinaryExpressionBaseAnalyzer {
    public DateRangesOverlapAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.DateRangesOverlap.DateRangesOverlapOperation : OperationBase {
    protected IOperand startFieldRefOperand;
    protected IOperand stopFieldRefOperand;
    protected IOperand recurrenceFieldRefOperand;
    protected IOperand dateTimeOperand;
    public DateRangesOverlapOperation(IOperationResultBuilder operationResultBuilder, IOperand startFieldRefOperand, IOperand stopFieldRefOperand, IOperand recurrenceFieldRefOperand, IOperand dateTimeOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Eq.EqAnalyzer : BinaryExpressionBaseAnalyzer {
    public EqAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
    [CompilerGeneratedAttribute]
private EqOperation <GetOperation>b__2_0(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Eq.EqOperation : BinaryOperationBase {
    public EqOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Geq.GeqAnalyzer : BinaryExpressionBaseAnalyzer {
    public GeqAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
    [CompilerGeneratedAttribute]
private GeqOperation <GetOperation>b__2_0(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Geq.GeqOperation : BinaryOperationBase {
    public GeqOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Gt.GtAnalyzer : BinaryExpressionBaseAnalyzer {
    public GtAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
    [CompilerGeneratedAttribute]
private GtOperation <GetOperation>b__2_0(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Gt.GtOperation : BinaryOperationBase {
    public GtOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.In.InAnalyzer : BaseAnalyzer {
    protected IOperandBuilder operandBuilder;
    public InAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    private bool isValid(Expression enumerable, Expression val);
    public virtual IOperation GetOperation(LambdaExpression expr);
    private IOperand getValueOperand(LambdaExpression expr);
    private IOperand getFieldRefOperand(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.In.InOperation : BinaryOperationBase {
    public InOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Includes.IncludesAnalyzer : UnaryExpressionBaseAnalyzer {
    public IncludesAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Includes.IncludesOperation : BinaryOperationBase {
    public IOperand FieldRefOperand { get; }
    public IOperand ValueOperand { get; }
    public IncludesOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    public IOperand get_FieldRefOperand();
    public IOperand get_ValueOperand();
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.IsNotNull.IsNotNullAnalyzer : NullabilityBaseAnalyzer {
    public IsNotNullAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.IsNotNull.IsNotNullOperation : UnaryOperationBase {
    public IsNotNullOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.IsNull.IsNullAnalyzer : NullabilityBaseAnalyzer {
    public IsNullAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.IsNull.IsNullOperation : UnaryOperationBase {
    public IsNullOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Join.JoinAnalyzer : BaseAnalyzer {
    protected IOperandBuilder operandBuilder;
    public JoinAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    private bool isValid(MethodCallExpression body, string methodName);
    protected bool isValidLeftExpression(Expression leftExpression);
    public virtual IOperation GetOperation(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr, object param);
    private IOperand getValueOperand(LambdaExpression expr);
    private IOperand getFieldRefOperand(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Join.JoinOperation : BinaryOperationBase {
    private JoinType type;
    public JoinType Type { get; }
    public JoinOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand, JoinType type);
    public JoinType get_Type();
    public virtual IOperationResult ToResult();
    private void sortAttributes(XElement e);
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Leq.LeqAnalyzer : BinaryExpressionBaseAnalyzer {
    public LeqAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
    [CompilerGeneratedAttribute]
private LeqOperation <GetOperation>b__2_0(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Leq.LeqOperation : BinaryOperationBase {
    public LeqOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Lt.LtAnalyzer : BinaryExpressionBaseAnalyzer {
    public LtAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
    [CompilerGeneratedAttribute]
private LtOperation <GetOperation>b__2_0(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Lt.LtOperation : BinaryOperationBase {
    public LtOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Neq.NeqAnalyzer : BinaryExpressionBaseAnalyzer {
    public NeqAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
    [CompilerGeneratedAttribute]
private NeqOperation <GetOperation>b__2_0(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Neq.NeqOperation : BinaryOperationBase {
    public NeqOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.NotIncludes.NotIncludesAnalyzer : UnaryExpressionBaseAnalyzer {
    public NotIncludesAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
    private Expression getSubExpr(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.NotIncludes.NotIncludesOperation : BinaryOperationBase {
    public NotIncludesOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand, IOperand valueOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.OrElse.OrElseAnalyzer : CompositeExpressionBaseAnalyzer {
    public OrElseAnalyzer(IOperationResultBuilder operationResultBuilder, IAnalyzerFactory analyzerFactory);
    public virtual bool IsValid(LambdaExpression expr);
    public virtual IOperation GetOperation(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.OrElse.OrElseOperation : CompositeOperationBase {
    public OrElseOperation(IOperationResultBuilder operationResultBuilder, IOperation leftOperation, IOperation rightOperation);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.ProjectedField.ProjectedFieldAnalyzer : BaseAnalyzer {
    protected IOperandBuilder operandBuilder;
    public ProjectedFieldAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    private bool isValid(MethodCallExpression body, string methodName);
    protected bool isValidLeftExpression(Expression leftExpression);
    public virtual IOperation GetOperation(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.ProjectedField.ProjectedFieldOperation : BinaryOperationBase {
    public ProjectedFieldOperation(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand);
    public virtual IOperationResult ToResult();
    public virtual Expression ToExpression();
}
public class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Results.ExpressionOperationResult : object {
    protected Expression expression;
    public object Value { get; }
    public ExpressionOperationResult(Expression expression);
    public sealed virtual object get_Value();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Results.XElementArrayOperationResult : object {
    private XElement[] elements;
    public object Value { get; }
    public XElementArrayOperationResult(XElement[] elements);
    public sealed virtual object get_Value();
    public virtual string ToString();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Operations.Results.XElementOperationResult : object {
    private XElement element;
    public object Value { get; }
    public XElementOperationResult(XElement element);
    public sealed virtual object get_Value();
    public virtual string ToString();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.Query : object {
    private ITranslatorFactory translatorFactory;
    private IReTranslatorFactory reTranslatorFactory;
    private XElement where;
    private XElement orderBy;
    private XElement groupBy;
    private XElement rowLimit;
    private XElement viewFields;
    private ViewScope viewScope;
    private List`1<XElement> joins;
    private List`1<XElement> projectedFields;
    public Query(ITranslatorFactory translatorFactory, IReTranslatorFactory reTranslatorFactory);
    public sealed virtual IQuery Where(Expression`1<Func`2<ListItem, bool>> expr);
    private Expression`1<Func`2<ListItem, bool>> canonize(Expression`1<Func`2<ListItem, bool>> expr);
    private Expression canonizeBody(Expression expr);
    public sealed virtual IQuery WhereAll(IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions);
    public sealed virtual IQuery WhereAll(string existingWhere, Expression`1<Func`2<ListItem, bool>> expression);
    public sealed virtual IQuery WhereAll(string existingWhere, IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions);
    public sealed virtual IQuery WhereAll(IEnumerable`1<string> expressions);
    private Expression`1<Func`2<ListItem, bool>> getWhereExpressionFromString(string existingWhere);
    private string ensureParentTag(string xml, string tag);
    private Expression`1<Func`2<ListItem, Object[]>> getOrderByExpressionFromString(string existingOrderBy);
    private Expression`1<Func`2<ListItem, Object[]>> getGroupByExpressionFromString(string existingGroupBy, Nullable`1& collapse, Nullable`1& groupLimit);
    private Expression`1<Func`2<ListItem, Object[]>> getViewFieldsExpressionFromString(string existingViewFields);
    public sealed virtual IQuery WhereAny(IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions);
    public sealed virtual IQuery WhereAny(string existingWhere, Expression`1<Func`2<ListItem, bool>> expression);
    public sealed virtual IQuery WhereAny(string existingWhere, IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions);
    public sealed virtual IQuery WhereAny(IEnumerable`1<string> expressions);
    public sealed virtual IQuery OrderBy(Expression`1<Func`2<ListItem, object>> expr);
    public sealed virtual IQuery OrderBy(Expression`1<Func`2<ListItem, Object[]>> expr);
    public sealed virtual IQuery OrderBy(IEnumerable`1<Expression`1<Func`2<ListItem, object>>> expressions);
    public sealed virtual IQuery OrderBy(string existingOrderBy, Expression`1<Func`2<ListItem, object>> expr);
    public sealed virtual IQuery OrderBy(string existingOrderBy, Expression`1<Func`2<ListItem, Object[]>> expr);
    public sealed virtual IQuery OrderBy(string existingOrderBy, IEnumerable`1<Expression`1<Func`2<ListItem, object>>> expressions);
    private Expression`1<Func`2<ListItem, Object[]>> createArrayExpression(IEnumerable`1<Expression`1<Func`2<ListItem, object>>> expressions);
    private Expression`1<Func`2<ListItem, Object[]>> createArrayExpression(IEnumerable`1<Expression`1<Func`2<ListItem, Object[]>>> expressions);
    private Expression`1<Func`2<ListItem, Object[]>> ensureArrayExpression(Expression`1<Func`2<ListItem, object>> expr);
    private Expression`1<Func`2<ListItem, Object[]>> createArrayExpression(Expression`1<Func`2<ListItem, object>> expr);
    public sealed virtual IQuery GroupBy(Expression`1<Func`2<ListItem, object>> expr);
    public sealed virtual IQuery GroupBy(Expression`1<Func`2<ListItem, Object[]>> expr, Nullable`1<bool> collapse, Nullable`1<int> groupLimit);
    public sealed virtual IQuery GroupBy(Expression`1<Func`2<ListItem, object>> expr, Nullable`1<bool> collapse, Nullable`1<int> groupLimit);
    public sealed virtual IQuery GroupBy(Expression`1<Func`2<ListItem, object>> expr, Nullable`1<bool> collapse);
    public sealed virtual IQuery GroupBy(Expression`1<Func`2<ListItem, object>> expr, Nullable`1<int> groupLimit);
    public sealed virtual IQuery GroupBy(string existingGroupBy, Expression`1<Func`2<ListItem, object>> expr);
    public sealed virtual IQuery GroupBy(string existingGroupBy, Expression`1<Func`2<ListItem, Object[]>> expr);
    public sealed virtual IQuery Take(int count);
    public sealed virtual IQuery ViewFields(Expression`1<Func`2<ListItem, object>> expr);
    public sealed virtual IQuery ViewFields(Expression`1<Func`2<ListItem, Object[]>> expr);
    public sealed virtual IQuery ViewFields(string existingViewFields, Expression`1<Func`2<ListItem, object>> expr);
    public sealed virtual IQuery ViewFields(string existingViewFields, Expression`1<Func`2<ListItem, Object[]>> expr);
    public sealed virtual IQuery ViewFields(IEnumerable`1<string> titles);
    public sealed virtual IQuery ViewFields(string existingViewFields, IEnumerable`1<string> titles);
    public sealed virtual IQuery Scope(ViewScope scope);
    public sealed virtual IQuery LeftJoin(Expression`1<Func`2<ListItem, object>> expr);
    public sealed virtual IQuery InnerJoin(Expression`1<Func`2<ListItem, object>> expr);
    public sealed virtual IQuery ProjectedField(Expression`1<Func`2<ListItem, object>> expr);
    private Expression`1<Func`2<ListItem, Object[]>> createExpressionFromArray(IEnumerable`1<T> items);
    public sealed virtual XElement[] ToCaml(bool includeViewTag);
    public sealed virtual CamlQuery ToCamlQuery();
    public virtual string ToString();
    public sealed virtual string ToString(bool includeViewTag);
    public static string op_Implicit(Query query);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReAndAlsoAnalyzer : ReCompositeExpressionBaseAnalyzer {
    public ReAndAlsoAnalyzer(XElement el, IReOperandBuilder operandBuilder, IReAnalyzerFactory reAnalyzerFactory);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReArrayAnalyzer : ReBaseAnalyzer {
    public ReArrayAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
    private IOperand[] getFieldRefOperands(XElement el);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReBeginsWithAnalyzer : ReBinaryExpressionBaseAnalyzer {
    public ReBeginsWithAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    protected virtual bool isValueValid(string valueType, string value, bool isLookupId);
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReConstantAnalyzer : ReBaseAnalyzer {
    private string tag;
    private Type type;
    public ReConstantAnalyzer(XElement el, IReOperandBuilder operandBuilder, string tag, Type type);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReContainsAnalyzer : ReBinaryExpressionBaseAnalyzer {
    public ReContainsAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    protected virtual bool isValueValid(string valueType, string value, bool isLookupId);
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReDateRangesOverlapAnalyzer : ReBaseAnalyzer {
    public ReDateRangesOverlapAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    protected bool hasValidFieldRefElements();
    protected bool hasValidValueElement();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReEqAnalyzer : ReBinaryExpressionBaseAnalyzer {
    public ReEqAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReGeqAnalyzer : ReComparisonBaseAnalyzer {
    public ReGeqAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReGtAnalyzer : ReComparisonBaseAnalyzer {
    public ReGtAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReInAnalyzer : ReBinaryExpressionBaseAnalyzer {
    public ReInAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    protected virtual bool hasValidValueElement();
    public virtual IOperation GetOperation();
    [CompilerGeneratedAttribute]
private bool <hasValidValueElement>b__2_0(XElement e);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReIsNotNullAnalyzer : ReNullabilityBaseAnalyzer {
    public ReIsNotNullAnalyzer(XElement element, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReIsNullAnalyzer : ReNullabilityBaseAnalyzer {
    public ReIsNullAnalyzer(XElement element, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReJoinAnalyzer : ReBaseAnalyzer {
    public ReJoinAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    private bool isValid(XElement el);
    private bool isChildElemValid(XElement el, string attr1, string attr2);
    public virtual IOperation GetOperation();
    public virtual List`1<IOperation> GetOperations();
    private IOperand[] getFieldRefOperands(XElement el);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReLeqAnalyzer : ReComparisonBaseAnalyzer {
    public ReLeqAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReLtAnalyzer : ReComparisonBaseAnalyzer {
    public ReLtAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReNeqAnalyzer : ReBinaryExpressionBaseAnalyzer {
    public ReNeqAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReOrElseAnalyzer : ReCompositeExpressionBaseAnalyzer {
    public ReOrElseAnalyzer(XElement el, IReOperandBuilder operandBuilder, IReAnalyzerFactory reAnalyzerFactory);
    public virtual bool IsValid();
    public virtual IOperation GetOperation();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Analyzers.ReProjectedFieldsAnalyzer : ReBaseAnalyzer {
    public ReProjectedFieldsAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    private bool isValid(XElement el);
    public virtual IOperation GetOperation();
    public virtual List`1<IOperation> GetOperations();
    private List`1<IOperand> getOperands();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Factories.ReAnalyzerFromCamlFactory : object {
    private IReOperandBuilder operandBuilder;
    public ReAnalyzerFromCamlFactory(IReOperandBuilder operandBuilder);
    public sealed virtual IReAnalyzer Create(XElement el);
    private IReAnalyzer getAnalyzerForWhere(XElement el);
    private IReAnalyzer getAnalyzerForAray(XElement el);
    private IReAnalyzer getAnalyzerForJoins(XElement el);
    private IReAnalyzer getAnalyzerForProjectedFields(XElement el);
    private IReAnalyzer getAnalyzer(XElement el);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Factories.ReLinkerFromCamlFactory : object {
    public sealed virtual IReLinker Create(IReTranslator translator);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Factories.ReOperandBuilderFromCaml : object {
    public sealed virtual IOperand CreateFieldRefOperand(XElement el);
    public sealed virtual IOperand CreateFieldRefOperandWithOrdering(XElement el, OrderDirection orderDirection);
    public sealed virtual IOperand CreateValueOperand(XElement operationElement, bool isComparision);
    public sealed virtual IOperand CreateFieldRefOperandForProjectedField(XElement el);
    private IOperand createValueOperand(XElement operationElement, XElement valueElement, bool isComparision);
    public sealed virtual IOperand CreateConstantOperand(XElement operationElement, Type type);
    private Type convertToNativeIfPossible(Type type);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.Factories.ReTranslatorFromCamlFactory : object {
    private IReAnalyzerFactory analyzerFactory;
    public ReTranslatorFromCamlFactory(IReAnalyzerFactory analyzerFactory);
    public sealed virtual IReTranslator Create(string input);
    private XElement createForTag(string input, string tag);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.ReLinkerFromCaml : object {
    private XElement where;
    private XElement orderBy;
    private XElement groupBy;
    private XElement rowLimit;
    private XElement viewFields;
    private XElement joins;
    private XElement projectedFields;
    public ReLinkerFromCaml(XElement where, XElement orderBy, XElement groupBy, XElement viewFields, XElement joins, XElement projectedFields, XElement rowLimit);
    public sealed virtual Expression Link(LambdaExpression where, LambdaExpression orderBy, LambdaExpression groupBy, LambdaExpression viewFields, List`1<KeyValuePair`2<LambdaExpression, JoinType>> joins, List`1<LambdaExpression> projectedFields, GroupByParams groupByParams, Expression rowLimit);
    private MethodInfoWithParams getMethodInfo(string methodName, GroupByParams groupByParams);
    private MethodInfoWithParams getFieldMethodInfo();
    private MethodInfoWithParams getLeftJoinMethodInfo();
    private MethodInfoWithParams getInnerJoinMethodInfo();
    private MethodInfoWithParams getViewFieldsMethodInfo();
    private MethodInfoWithParams getGroupByMethodInfo(GroupByParams groupByParams);
    private MethodInfo getGroupByMethodInfo(int count, bool hasCollapse, bool hasGroupLimit);
    private List`1<Expression> getGroupByParams(int count, bool hasGroupLimit, bool hasCollapse, int groupLimit, bool collapse);
    private MethodInfoWithParams getOrderByMethodInfo();
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.Caml.ReTranslatorFromCaml : object {
    private IReAnalyzer analyzerForWhere;
    private IReAnalyzer analyzerForOrderBy;
    private IReAnalyzer analyzerForGroupBy;
    private IReAnalyzer analyzerForRowLimit;
    private IReAnalyzer analyzerForViewFields;
    private IReAnalyzer analyzerForJoins;
    private IReAnalyzer analyzerForProjectedFields;
    public XElement Where { get; }
    public XElement OrderBy { get; }
    public XElement GroupBy { get; }
    public XElement RowLimit { get; }
    public XElement ViewFields { get; }
    public XElement Joins { get; }
    public XElement ProjectedFields { get; }
    public ReTranslatorFromCaml(IReAnalyzer analyzerForWhere, IReAnalyzer analyzerForOrderBy, IReAnalyzer analyzerForGroupBy, IReAnalyzer analyzerForViewFields, IReAnalyzer analyzerForJoins, IReAnalyzer analyzerForProjectedFields, IReAnalyzer analyzerForRowLimit);
    public XElement get_Where();
    public XElement get_OrderBy();
    public XElement get_GroupBy();
    public XElement get_RowLimit();
    public XElement get_ViewFields();
    public XElement get_Joins();
    public XElement get_ProjectedFields();
    public sealed virtual LambdaExpression TranslateWhere();
    private LambdaExpression translateWhere(IReAnalyzer analyzer, string tag);
    public sealed virtual Expression TranslateRowLimit();
    private Expression translateRowLimit(IReAnalyzer analyzer, string tag);
    private LambdaExpression translateArrayOperation(IReAnalyzer analyzer, string tag);
    public sealed virtual LambdaExpression TranslateOrderBy();
    public sealed virtual LambdaExpression TranslateGroupBy(GroupByParams& groupByParams);
    public sealed virtual LambdaExpression TranslateViewFields();
    public sealed virtual List`1<KeyValuePair`2<LambdaExpression, JoinType>> TranslateJoins();
    public sealed virtual List`1<LambdaExpression> TranslateProjectedFields();
    private XElement getElement(IReAnalyzer analyzer);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.ReBaseAnalyzer : object {
    protected XElement el;
    protected IReOperandBuilder operandBuilder;
    public XElement Element { get; }
    public ReBaseAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public sealed virtual XElement get_Element();
    public virtual bool IsValid();
    public abstract virtual IOperation GetOperation();
    public virtual List`1<IOperation> GetOperations();
    protected bool isOperationComparison(XElement operationElement);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.ReBinaryExpressionBaseAnalyzer : ReBaseAnalyzer {
    protected ReBinaryExpressionBaseAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    protected bool hasValidFieldRefElement();
    protected virtual bool hasValidValueElement();
    protected bool hasValidValueElement(XElement valueElement);
    private bool isEmptyValueAcceptable(string valueType);
    protected virtual bool isValueValid(string valueType, string value, bool isIntegerForUserId);
    protected IOperation getOperation(Func`3<IOperand, IOperand, T> constructor);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.ReComparisonBaseAnalyzer : ReBinaryExpressionBaseAnalyzer {
    protected ReComparisonBaseAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    protected virtual bool isValueValid(string valueType, string value, bool isLookupId);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.ReCompositeExpressionBaseAnalyzer : ReBaseAnalyzer {
    protected IReAnalyzerFactory reAnalyzerFactory;
    protected ReCompositeExpressionBaseAnalyzer(XElement el, IReOperandBuilder operandBuilder, IReAnalyzerFactory reAnalyzerFactory);
    public virtual bool IsValid();
    protected bool hasValidSubElement(XElement subElement);
    protected IOperation createOperation(XElement subElement);
    protected IOperation getOperation(Func`3<IOperation, IOperation, T> constructor);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.ReNullabilityBaseAnalyzer : ReBinaryExpressionBaseAnalyzer {
    protected ReNullabilityBaseAnalyzer(XElement el, IReOperandBuilder operandBuilder);
    public virtual bool IsValid();
    protected IOperation getNullabilityOperation(Func`3<IOperationResultBuilder, IOperand, T> constructor);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Impl.ReverseEngeneering.ReQuery : object {
    private IReTranslatorFactory translatorFactory;
    private IReLinkerFactory linkerFactory;
    private string input;
    public ReQuery(IReTranslatorFactory translatorFactory, IReLinkerFactory linkerFactory, string input);
    public sealed virtual Expression ToExpression();
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.UnaryExpressionBaseAnalyzer : BaseAnalyzer {
    protected IOperandBuilder operandBuilder;
    protected UnaryExpressionBaseAnalyzer(IOperationResultBuilder operationResultBuilder, IOperandBuilder operandBuilder);
    public virtual bool IsValid(LambdaExpression expr);
    protected virtual IOperand getFieldRefOperand(LambdaExpression expr);
    protected virtual IOperand getValueOperand(LambdaExpression expr);
    private Expression getObjectExpression(LambdaExpression expr);
}
internal abstract class Omnia.Fx.SharePoint.CamlexNET.Impl.UnaryOperationBase : OperationBase {
    protected IOperand fieldRefOperand;
    protected UnaryOperationBase(IOperationResultBuilder operationResultBuilder, IOperand fieldRefOperand);
}
internal class Omnia.Fx.SharePoint.CamlexNET.IncorrectCamlException : Exception {
    public IncorrectCamlException(string tag);
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.IAnalyzer {
    public abstract virtual bool IsValid(LambdaExpression expr);
    public abstract virtual IOperation GetOperation(LambdaExpression expr);
    public abstract virtual IOperation GetOperation(LambdaExpression expr, object param);
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.IAnalyzerFactory {
    public abstract virtual IAnalyzer Create(LambdaExpression expr);
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.IOperand {
    public abstract virtual XElement ToCaml();
    public abstract virtual Expression ToExpression();
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.IOperandBuilder {
    public abstract virtual IOperand CreateFieldRefOperand(Expression expr, IOperand valueOperand);
    public abstract virtual IOperand CreateFieldRefOperandWithOrdering(Expression expr, OrderDirection orderDirection);
    public abstract virtual IOperand CreateFieldRefOperandForJoin(Expression expr);
    public abstract virtual IOperand CreateFieldRefOperandForJoin(Expression expr, Expression primaryListExpr);
    public abstract virtual IOperand CreateFieldRefOperandForProjectedField(Expression expr, Expression listExpr, Expression showFieldExpr);
    public abstract virtual IOperand CreateValueOperandForNativeSyntax(Expression expr);
    public abstract virtual IOperand CreateValueOperandForNativeSyntax(Expression expr, Type explicitOperandType);
    public abstract virtual IOperand CreateValueOperandForStringBasedSyntax(Expression expr);
    public abstract virtual IOperand CreateConstantOperand(object val, string tag);
    public abstract virtual IOperand CreateValuesValueOperand(Expression expr);
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.IOperation {
    public abstract virtual IOperationResult ToResult();
    public abstract virtual Expression ToExpression();
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.IOperationResult {
    public object Value { get; }
    public abstract virtual object get_Value();
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.IOperationResultBuilder {
    public abstract virtual IOperationResult CreateResult(XElement value);
    public abstract virtual IOperationResult CreateResult(XElement[] values);
}
public interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.IQuery {
    public abstract virtual IQuery Where(Expression`1<Func`2<ListItem, bool>> expr);
    public abstract virtual IQuery WhereAll(IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions);
    public abstract virtual IQuery WhereAll(string existingWhere, Expression`1<Func`2<ListItem, bool>> expression);
    public abstract virtual IQuery WhereAll(string existingWhere, IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions);
    public abstract virtual IQuery WhereAll(IEnumerable`1<string> expressions);
    public abstract virtual IQuery WhereAny(IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions);
    public abstract virtual IQuery WhereAny(string existingWhere, Expression`1<Func`2<ListItem, bool>> expression);
    public abstract virtual IQuery WhereAny(string existingWhere, IEnumerable`1<Expression`1<Func`2<ListItem, bool>>> expressions);
    public abstract virtual IQuery WhereAny(IEnumerable`1<string> expression);
    public abstract virtual IQuery OrderBy(Expression`1<Func`2<ListItem, object>> expr);
    public abstract virtual IQuery OrderBy(Expression`1<Func`2<ListItem, Object[]>> expr);
    public abstract virtual IQuery OrderBy(IEnumerable`1<Expression`1<Func`2<ListItem, object>>> expressions);
    public abstract virtual IQuery OrderBy(string existingOrderBy, Expression`1<Func`2<ListItem, object>> expr);
    public abstract virtual IQuery OrderBy(string existingOrderBy, Expression`1<Func`2<ListItem, Object[]>> expr);
    public abstract virtual IQuery OrderBy(string existingOrderBy, IEnumerable`1<Expression`1<Func`2<ListItem, object>>> expressions);
    public abstract virtual IQuery GroupBy(Expression`1<Func`2<ListItem, object>> expr);
    public abstract virtual IQuery GroupBy(Expression`1<Func`2<ListItem, Object[]>> expr, Nullable`1<bool> collapse, Nullable`1<int> groupLimit);
    public abstract virtual IQuery GroupBy(Expression`1<Func`2<ListItem, object>> expr, Nullable`1<bool> collapse, Nullable`1<int> groupLimit);
    public abstract virtual IQuery GroupBy(Expression`1<Func`2<ListItem, object>> expr, Nullable`1<int> groupLimit);
    public abstract virtual IQuery GroupBy(Expression`1<Func`2<ListItem, object>> expr, Nullable`1<bool> collapse);
    public abstract virtual IQuery GroupBy(string existingGroupBy, Expression`1<Func`2<ListItem, object>> expr);
    public abstract virtual IQuery GroupBy(string existingGroupBy, Expression`1<Func`2<ListItem, Object[]>> expr);
    public abstract virtual IQuery Take(int count);
    public abstract virtual IQuery ViewFields(Expression`1<Func`2<ListItem, object>> expr);
    public abstract virtual IQuery ViewFields(Expression`1<Func`2<ListItem, Object[]>> expr);
    public abstract virtual IQuery ViewFields(string existingViewFields, Expression`1<Func`2<ListItem, object>> expr);
    public abstract virtual IQuery ViewFields(string existingViewFields, Expression`1<Func`2<ListItem, Object[]>> expr);
    public abstract virtual IQuery ViewFields(IEnumerable`1<string> titles);
    public abstract virtual IQuery ViewFields(string existingViewFields, IEnumerable`1<string> titles);
    public abstract virtual IQuery Scope(ViewScope scope);
    public abstract virtual IQuery LeftJoin(Expression`1<Func`2<ListItem, object>> expr);
    public abstract virtual IQuery InnerJoin(Expression`1<Func`2<ListItem, object>> expr);
    public abstract virtual IQuery ProjectedField(Expression`1<Func`2<ListItem, object>> expr);
    public abstract virtual XElement[] ToCaml(bool includeViewTag);
    public abstract virtual string ToString();
    public abstract virtual string ToString(bool includeViewTag);
    public abstract virtual CamlQuery ToCamlQuery();
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.ITranslator {
    public abstract virtual XElement TranslateWhere(LambdaExpression expr);
    public abstract virtual XElement TranslateOrderBy(LambdaExpression expr);
    public abstract virtual XElement TranslateGroupBy(LambdaExpression expr, Nullable`1<bool> collapse, Nullable`1<int> groupLimit);
    public abstract virtual XElement TranslateViewFields(Expression`1<Func`2<ListItem, Object[]>> expr);
    public abstract virtual XElement TranslateRowLimit(LambdaExpression expr);
    public abstract virtual XElement TranslateJoin(Expression`1<Func`2<ListItem, object>> expr, JoinType type);
    public abstract virtual XElement TranslateProjectedField(Expression`1<Func`2<ListItem, object>> expr);
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.ITranslatorFactory {
    public abstract virtual ITranslator Create(LambdaExpression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.Interfaces.ReverseEngeneering.GroupByParams : ValueType {
    public bool HasGroupLimit;
    public bool HasCollapse;
    public bool Collapse;
    public int GroupLimit;
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.ReverseEngeneering.IReAnalyzer {
    public XElement Element { get; }
    public abstract virtual XElement get_Element();
    public abstract virtual bool IsValid();
    public abstract virtual IOperation GetOperation();
    public abstract virtual List`1<IOperation> GetOperations();
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.ReverseEngeneering.IReAnalyzerFactory {
    public abstract virtual IReAnalyzer Create(XElement el);
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.ReverseEngeneering.IReLinker {
    public abstract virtual Expression Link(LambdaExpression where, LambdaExpression orderBy, LambdaExpression groupBy, LambdaExpression viewFields, List`1<KeyValuePair`2<LambdaExpression, JoinType>> joins, List`1<LambdaExpression> projectedFields, GroupByParams groupByParams, Expression rowLimit);
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.ReverseEngeneering.IReLinkerFactory {
    public abstract virtual IReLinker Create(IReTranslator translator);
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.ReverseEngeneering.IReOperandBuilder {
    public abstract virtual IOperand CreateFieldRefOperand(XElement el);
    public abstract virtual IOperand CreateFieldRefOperandWithOrdering(XElement el, OrderDirection orderDirection);
    public abstract virtual IOperand CreateValueOperand(XElement operationElement, bool isComparision);
    public abstract virtual IOperand CreateConstantOperand(XElement operationElement, Type type);
    public abstract virtual IOperand CreateFieldRefOperandForProjectedField(XElement el);
}
public interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.ReverseEngeneering.IReOperationResult {
    public Expression Value { get; }
    public abstract virtual Expression get_Value();
}
public interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.ReverseEngeneering.IReQuery {
    public abstract virtual Expression ToExpression();
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.ReverseEngeneering.IReTranslator {
    public abstract virtual LambdaExpression TranslateWhere();
    public abstract virtual LambdaExpression TranslateOrderBy();
    public abstract virtual LambdaExpression TranslateGroupBy(GroupByParams& groupByParams);
    public abstract virtual Expression TranslateRowLimit();
    public abstract virtual LambdaExpression TranslateViewFields();
    public abstract virtual List`1<KeyValuePair`2<LambdaExpression, JoinType>> TranslateJoins();
    public abstract virtual List`1<LambdaExpression> TranslateProjectedFields();
}
internal interface Omnia.Fx.SharePoint.CamlexNET.Interfaces.ReverseEngeneering.IReTranslatorFactory {
    public abstract virtual IReTranslator Create(string input);
}
internal class Omnia.Fx.SharePoint.CamlexNET.InvalidValueForFieldRefException : GenericException {
    public InvalidValueForFieldRefException(object value);
}
internal class Omnia.Fx.SharePoint.CamlexNET.InvalidValueForOperandTypeException : GenericException {
    public InvalidValueForOperandTypeException(object value, Type operandType);
}
internal enum Omnia.Fx.SharePoint.CamlexNET.JoinType : Enum {
    public int value__;
    public static JoinType Left;
    public static JoinType Inner;
}
internal class Omnia.Fx.SharePoint.CamlexNET.LinkerFromCamlRequiresTranslatorFromCamlException : Exception {
    public LinkerFromCamlRequiresTranslatorFromCamlException(Type type);
}
internal class Omnia.Fx.SharePoint.CamlexNET.NonSupportedExpressionException : GenericException {
    public NonSupportedExpressionException(Expression expr);
}
internal class Omnia.Fx.SharePoint.CamlexNET.NonSupportedExpressionTypeException : GenericException {
    public NonSupportedExpressionTypeException(ExpressionType exprType);
}
internal class Omnia.Fx.SharePoint.CamlexNET.NonSupportedOperandTypeException : GenericException {
    public NonSupportedOperandTypeException(Type type);
}
internal class Omnia.Fx.SharePoint.CamlexNET.NullValueOperandCannotBeTranslatedToCamlException : GenericException {
}
internal class Omnia.Fx.SharePoint.CamlexNET.OnlyOrAndBinaryExpressionsAllowedForJoinsExceptions : GenericException {
}
internal class Omnia.Fx.SharePoint.CamlexNET.OperationShouldContainFieldRefOperandException : GenericException {
}
internal class Omnia.Fx.SharePoint.CamlexNET.OperationShouldContainTextValueOperandException : GenericException {
}
internal class Omnia.Fx.SharePoint.CamlexNET.OperationShouldContainValuesValueOperandException : GenericException {
}
internal static class Omnia.Fx.SharePoint.CamlexNET.ReflectionHelper : object {
    public static string QueryMethodName;
    public static string WhereMethodName;
    public static string OrderByMethodName;
    public static string GroupByMethodName;
    public static string RowLimitMethodName;
    public static string ViewFieldsMethodName;
    public static string IndexerMethodName;
    public static string StartsWithMethodName;
    public static string ContainsMethodName;
    public static string IncludesMethodName;
    public static string IncludeTimeValue;
    public static string DateRangesOverlap;
    public static string CommonParameterName;
    public static string Item;
    public static string ToStringMethodName;
    public static string UserID;
    public static string GreaterThanMethodName;
    public static string GreaterThanOrEqualMethodName;
    public static string LessThanMethodName;
    public static string LessThanOrEqualMethodName;
    public static string GreaterThanMethodSymbol;
    public static string GreaterThanOrEqualMethodSymbol;
    public static string LessThanMethodSymbol;
    public static string LessThanOrEqualMethodSymbol;
    public static string PrimaryListMethodName;
    public static string ForeignListMethodName;
    public static string ListMethodName;
    public static string ShowFieldMethodName;
    public static string LeftJoinMethodName;
    public static string InnerJoinMethodName;
    public static string FieldMethodName;
    public static IEnumerable`1<MethodInfo> GetExtensionMethods(Assembly assembly, Type extendedType);
    public static MethodInfo GetMethodInfo(Type type, string methodName);
}
public class Omnia.Fx.SharePoint.CamlexNET.StringBasedFieldType : BaseFieldTypeWithOperators {
    public bool Contains(string text);
    public bool StartsWith(string text);
}
internal static class Omnia.Fx.SharePoint.CamlexNET.Tags : object {
    public static string Query;
    public static string Where;
    public static string OrderBy;
    public static string GroupBy;
    public static string RowLimit;
    public static string FieldRef;
    public static string Value;
    public static string And;
    public static string Or;
    public static string Eq;
    public static string Neq;
    public static string Geq;
    public static string Gt;
    public static string Leq;
    public static string Lt;
    public static string IsNotNull;
    public static string IsNull;
    public static string BeginsWith;
    public static string Contains;
    public static string Includes;
    public static string NotIncludes;
    public static string DateRangesOverlap;
    public static string ViewFields;
    public static string View;
    public static string UserID;
    public static string In;
    public static string Values;
    public static string Joins;
    public static string Join;
    public static string ProjectedFields;
    public static string Field;
}
internal static class Omnia.Fx.SharePoint.CamlexNET.Values : object {
    public static string Id;
    public static string Lookup;
}
internal class Omnia.Fx.SharePoint.CamlexNET.XmlNotWellFormedException : GenericException {
}
[ExtensionAttribute]
public static class Omnia.Fx.SharePoint.Client.ExceptionExtensions : object {
    [ExtensionAttribute]
public static bool IsNotExistedException(ServerException exception);
    [ExtensionAttribute]
public static bool IsFileFolderNotExistedException(ServerException exception);
    [ExtensionAttribute]
public static bool IsThresholdException(ServerException exception);
    [ExtensionAttribute]
public static bool IsThrottleException(Exception exception);
    [ExtensionAttribute]
public static bool IsServiceUnavailableException(Exception exception);
    [ExtensionAttribute]
public static bool IsSPSiteNotFoundException(Exception ex);
    [ExtensionAttribute]
public static bool IsSPSiteUnauthorizedException(Exception ex);
    [ExtensionAttribute]
public static bool IsSPSiteForbiddenException(Exception ex);
    private static bool CheckWebException(Exception ex, HttpStatusCode statusCode);
    private static bool IsUnauthorizedAccessException(Exception ex);
}
public interface Omnia.Fx.SharePoint.Client.ISharePointClientContextProvider {
    public abstract virtual ClientContext CreateClientContext(string spUrl, bool elevated, bool ignoreSystemAccount);
    public abstract virtual ClientContext CreateClientContext(string spUrl, string accessToken);
    public abstract virtual ClientContext CreateClientContext(string spUrl, string username, string password);
    public abstract virtual ClientContext CreateDefaultClientContext(bool elevated, bool ignoreSystemAccount);
    public abstract virtual ClientContext CreateDefaultClientContext(string accessToken);
}
public interface Omnia.Fx.SharePoint.Client.ISharePointContextHelper {
    public abstract virtual string GetSPUrl();
    public abstract virtual string GetDefaultSPUrl();
}
internal interface Omnia.Fx.SharePoint.Client.ISharePointTokenProvider {
    public abstract virtual SharePointTokenResult GetAccessToken(string spUrl, bool elevated, bool ignoreSystemAccount);
    public abstract virtual SharePointTokenResult GetAccessTokenByUserCredentials(string spUrl, string username, string password);
}
internal class Omnia.Fx.SharePoint.Client.SharePointClientContextProvider : object {
    [CompilerGeneratedAttribute]
private IOmniaUserTokenProvider <UserTokenProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaServices <CurrentService>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointContextHelper <SharePointContextHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceScopeFactory <ServiceScopeFactory>k__BackingField;
    private IOmniaUserTokenProvider UserTokenProvider { get; }
    private IOmniaServices CurrentService { get; }
    private ISharePointContextHelper SharePointContextHelper { get; }
    private IServiceProvider ServiceProvider { get; }
    private IServiceScopeFactory ServiceScopeFactory { get; }
    public SharePointClientContextProvider(IOmniaUserTokenProvider userTokenProvider, IOmniaServices currentService, ISharePointContextHelper sharePointContextHelper, IServiceProvider serviceProvider, IServiceScopeFactory serviceScopeFactory);
    [CompilerGeneratedAttribute]
private IOmniaUserTokenProvider get_UserTokenProvider();
    [CompilerGeneratedAttribute]
private IOmniaServices get_CurrentService();
    [CompilerGeneratedAttribute]
private ISharePointContextHelper get_SharePointContextHelper();
    [CompilerGeneratedAttribute]
private IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
private IServiceScopeFactory get_ServiceScopeFactory();
    public sealed virtual ClientContext CreateClientContext(string spUrl, bool elevated, bool ignoreSystemAccount);
    public sealed virtual ClientContext CreateClientContext(string spUrl, string accessToken);
    public sealed virtual ClientContext CreateDefaultClientContext(bool elevated, bool ignoreSystemAccount);
    public sealed virtual ClientContext CreateClientContext(string spUrl, string username, string password);
    public sealed virtual ClientContext CreateDefaultClientContext(string accessToken);
    private SharePointClientContextTag CreateClientContextTag(bool isAppOnly, string accessToken, Func`2<IServiceProvider, SharePointTokenResult> getTokenResultFunc);
    private ClientContext CreateClientContext(string spUrl, SharePointClientContextTag tag);
    private string GetApplicationName();
}
public class Omnia.Fx.SharePoint.Client.SharePointClientContextTag : object {
    [CompilerGeneratedAttribute]
private bool <IsAppOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private OmniaToken <OmniaToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaServiceDefinition <OmniaService>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<ClientRuntimeContext, ValueTask> <RefreshTokenHandler>k__BackingField;
    public bool IsAppOnly { get; public set; }
    public OmniaToken OmniaToken { get; public set; }
    public string AccessToken { get; public set; }
    public IOmniaServiceDefinition OmniaService { get; public set; }
    public Func`2<ClientRuntimeContext, ValueTask> RefreshTokenHandler { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsAppOnly();
    [CompilerGeneratedAttribute]
public void set_IsAppOnly(bool value);
    [CompilerGeneratedAttribute]
public OmniaToken get_OmniaToken();
    [CompilerGeneratedAttribute]
public void set_OmniaToken(OmniaToken value);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public IOmniaServiceDefinition get_OmniaService();
    [CompilerGeneratedAttribute]
public void set_OmniaService(IOmniaServiceDefinition value);
    [CompilerGeneratedAttribute]
public Func`2<ClientRuntimeContext, ValueTask> get_RefreshTokenHandler();
    [CompilerGeneratedAttribute]
public void set_RefreshTokenHandler(Func`2<ClientRuntimeContext, ValueTask> value);
}
internal class Omnia.Fx.SharePoint.Client.SharePointContextHelper : object {
    [CompilerGeneratedAttribute]
private IScopedContextResolver <ScopedContextResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> <SPAppSettingsOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ITenantService <TenantService>k__BackingField;
    private IScopedContextResolver ScopedContextResolver { get; }
    private IOptionsMonitor`1<SharePointAppSettings> SPAppSettingsOptions { get; }
    private ITenantService TenantService { get; }
    public SharePointContextHelper(ITenantService tenantService, IScopedContextResolver scopedContextResolver, IOptionsMonitor`1<SharePointAppSettings> spAppSettingsOptions);
    [CompilerGeneratedAttribute]
private IScopedContextResolver get_ScopedContextResolver();
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> get_SPAppSettingsOptions();
    [CompilerGeneratedAttribute]
private ITenantService get_TenantService();
    public sealed virtual string GetSPUrl();
    public sealed virtual string GetDefaultSPUrl();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Client.SharePointContextHelper/<GetTenantPropertyCSOMClientContextFallbackUrl>d__12")]
private ValueTask`1<TenantPropertyCSOMClientContextFallbackUrl> GetTenantPropertyCSOMClientContextFallbackUrl();
}
internal class Omnia.Fx.SharePoint.Client.SharePointTokenProvider : object {
    protected IOmniaUserTokenProvider _userTokenProvider;
    protected IAuthService _authService;
    public SharePointTokenProvider(IOmniaUserTokenProvider userTokenProvider, IAuthService authService);
    public sealed virtual SharePointTokenResult GetAccessToken(string spUrl, bool elevated, bool ignoreSystemAccount);
    public sealed virtual SharePointTokenResult GetAccessTokenByUserCredentials(string spUrl, string username, string password);
    protected SharePointTokenResult GetAccessTokenFromOmniaContext(string spUrl);
    protected string GetAppOnlyAccessToken(string spUrl, bool ignoreSystemAccount);
}
public static class Omnia.Fx.SharePoint.Constants : object {
}
[AttributeUsageAttribute("4")]
public class Omnia.Fx.SharePoint.ContentTypes.Attributes.ContentTypeAttribute : EntityAttribute {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasFullId>k__BackingField;
    private string _name;
    private string _description;
    private string _group;
    private bool _sealed;
    private string _displayFormTemplateName;
    private string _editFormTemplateName;
    private string _newFormTemplateName;
    private string _newFormUrl;
    private string _mobileNewFormUrl;
    private string _editFormUrl;
    private string _mobileEditFormUrl;
    private string _displayFormUrl;
    private string _mobileDisplayFormUrl;
    private bool _readOnly;
    private string _jsLink;
    private bool _hidden;
    private string _documentTemplate;
    private string _schemaXmlWithResourceTokens;
    [CompilerGeneratedAttribute]
private IList`1<Guid> <FieldIds>k__BackingField;
    public string Id { get; private set; }
    public bool HasFullId { get; private set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public string Group { get; public set; }
    public bool Sealed { get; public set; }
    public string DisplayFormTemplateName { get; public set; }
    public string EditFormTemplateName { get; public set; }
    public string NewFormTemplateName { get; public set; }
    public string NewFormUrl { get; public set; }
    public string MobileNewFormUrl { get; public set; }
    public string EditFormUrl { get; public set; }
    public string MobileEditFormUrl { get; public set; }
    public string DisplayFormUrl { get; public set; }
    public string MobileDisplayFormUrl { get; public set; }
    public bool ReadOnly { get; public set; }
    public string JSLink { get; public set; }
    public bool Hidden { get; public set; }
    public string DocumentTemplate { get; public set; }
    public string SchemaXmlWithResourceTokens { get; public set; }
    public IList`1<Guid> FieldIds { get; public set; }
    public ContentTypeAttribute(string id, string name, bool hasFullId);
    public ContentTypeAttribute(string id);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public bool get_HasFullId();
    [CompilerGeneratedAttribute]
private void set_HasFullId(bool value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Description();
    public void set_Description(string value);
    public string get_Group();
    public void set_Group(string value);
    public bool get_Sealed();
    public void set_Sealed(bool value);
    public string get_DisplayFormTemplateName();
    public void set_DisplayFormTemplateName(string value);
    public string get_EditFormTemplateName();
    public void set_EditFormTemplateName(string value);
    public string get_NewFormTemplateName();
    public void set_NewFormTemplateName(string value);
    public string get_NewFormUrl();
    public void set_NewFormUrl(string value);
    public string get_MobileNewFormUrl();
    public void set_MobileNewFormUrl(string value);
    public string get_EditFormUrl();
    public void set_EditFormUrl(string value);
    public string get_MobileEditFormUrl();
    public void set_MobileEditFormUrl(string value);
    public string get_DisplayFormUrl();
    public void set_DisplayFormUrl(string value);
    public string get_MobileDisplayFormUrl();
    public void set_MobileDisplayFormUrl(string value);
    public bool get_ReadOnly();
    public void set_ReadOnly(bool value);
    public string get_JSLink();
    public void set_JSLink(string value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public string get_DocumentTemplate();
    public void set_DocumentTemplate(string value);
    public string get_SchemaXmlWithResourceTokens();
    public void set_SchemaXmlWithResourceTokens(string value);
    [CompilerGeneratedAttribute]
public IList`1<Guid> get_FieldIds();
    [CompilerGeneratedAttribute]
public void set_FieldIds(IList`1<Guid> value);
    internal virtual Task LoadAttributeInfoAsync(ISharePointEntityHelper sharePointEntityHelper);
    internal virtual ContentType OnCreating(ISharePointEntityHelper sharePointEntityHelper, string idAsString);
    internal void OnUpdating(ISharePointEntityHelper sharePointEntityHelper, ContentType contentType, bool updateChildren, bool force);
    private bool UpdateContentTypeProperties(ISharePointEntityHelper sharePointEntityHelper, ContentType contentType, bool updateChildren, bool force);
    [CompilerGeneratedAttribute]
private Task <UpdateContentTypeProperties>b__89_0(ISharePointEntityHelperFull entityHelper);
}
[AttributeUsageAttribute("32767")]
public class Omnia.Fx.SharePoint.ContentTypes.Attributes.ContentTypeRefAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ContentTypeReference <Reference>k__BackingField;
    public bool IsDefault { get; public set; }
    internal ContentTypeReference Reference { get; }
    public ContentTypeRefAttribute(string id);
    public ContentTypeRefAttribute(ContentTypeAttribute contentTypeAttribute);
    public ContentTypeRefAttribute(Type type);
    public bool get_IsDefault();
    public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
internal ContentTypeReference get_Reference();
}
[ContentTypeAttribute("0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF3900242457EFB8B24247815D688C526CD44D")]
public class Omnia.Fx.SharePoint.ContentTypes.BuiltIn.ArticlePage : Page {
}
[ContentTypeAttribute("0x0101002039C03B61C64EC4A04F5361F3851066")]
public class Omnia.Fx.SharePoint.ContentTypes.BuiltIn.DisplayTemplate : Document {
}
[ContentTypeAttribute("0x0101", "Document", "True")]
public class Omnia.Fx.SharePoint.ContentTypes.BuiltIn.Document : Item {
    [CompilerGeneratedAttribute]
private string <FieldDefinition>k__BackingField;
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.FileLeafRef")]
public string FieldDefinition { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FieldDefinition();
    [CompilerGeneratedAttribute]
public void set_FieldDefinition(string value);
}
[ContentTypeAttribute("0x0120")]
public class Omnia.Fx.SharePoint.ContentTypes.BuiltIn.Folder : Item {
}
[ContentTypeAttribute("0x01", "Item", "True")]
public class Omnia.Fx.SharePoint.ContentTypes.BuiltIn.Item : ContentTypeBase {
    [CompilerGeneratedAttribute]
private DateTime <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CreatedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EditedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ListItemId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ListItemUniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Modified>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.Created")]
public DateTime Created { get; public set; }
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.Author")]
public string CreatedBy { get; public set; }
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.Editor")]
public string EditedBy { get; public set; }
    public int ListItemId { get; public set; }
    public Guid ListItemUniqueId { get; public set; }
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.Modified")]
public DateTime Modified { get; public set; }
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.Title")]
public string Title { get; public set; }
    [CompilerGeneratedAttribute]
public virtual DateTime get_Created();
    [CompilerGeneratedAttribute]
public virtual void set_Created(DateTime value);
    [CompilerGeneratedAttribute]
public virtual string get_CreatedBy();
    [CompilerGeneratedAttribute]
public virtual void set_CreatedBy(string value);
    [CompilerGeneratedAttribute]
public virtual string get_EditedBy();
    [CompilerGeneratedAttribute]
public virtual void set_EditedBy(string value);
    [CompilerGeneratedAttribute]
public int get_ListItemId();
    [CompilerGeneratedAttribute]
public void set_ListItemId(int value);
    [CompilerGeneratedAttribute]
public Guid get_ListItemUniqueId();
    [CompilerGeneratedAttribute]
public void set_ListItemUniqueId(Guid value);
    [CompilerGeneratedAttribute]
public virtual DateTime get_Modified();
    [CompilerGeneratedAttribute]
public virtual void set_Modified(DateTime value);
    [CompilerGeneratedAttribute]
public virtual string get_Title();
    [CompilerGeneratedAttribute]
public virtual void set_Title(string value);
}
[ContentTypeAttribute("0x0101002039C03B61C64EC4A04F5361F385106603")]
public class Omnia.Fx.SharePoint.ContentTypes.BuiltIn.ItemDisplayTemplate : DisplayTemplate {
}
[ContentTypeAttribute("0x010105")]
public class Omnia.Fx.SharePoint.ContentTypes.BuiltIn.MasterPage : Document {
}
[ContentTypeAttribute("0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF39")]
public class Omnia.Fx.SharePoint.ContentTypes.BuiltIn.Page : SystemPage {
}
[ContentTypeAttribute("0x01010007FF3E057FA8AB4AA42FCB67B453FFC100E214EEE741181F4E9F7ACC43278EE811")]
public class Omnia.Fx.SharePoint.ContentTypes.BuiltIn.PageLayout : SystemPageLayout {
}
[ContentTypeAttribute("0x010100C568DB52D9D0A14D9B2FDCC96666E9F2")]
public class Omnia.Fx.SharePoint.ContentTypes.BuiltIn.SystemPage : Document {
}
[ContentTypeAttribute("0x01010007FF3E057FA8AB4AA42FCB67B453FFC1")]
public class Omnia.Fx.SharePoint.ContentTypes.BuiltIn.SystemPageLayout : Document {
}
public class Omnia.Fx.SharePoint.ContentTypes.ContentTypeBase : object {
    private string _idAsString;
    private ContentTypeAttribute _contentTypeAttribute;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    public string IdAsString { get; }
    public bool IsDefault { get; public set; }
    public ContentTypeAttribute ContentTypeAttribute { get; public set; }
    public string get_IdAsString();
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    public ContentTypeAttribute get_ContentTypeAttribute();
    public void set_ContentTypeAttribute(ContentTypeAttribute value);
    public virtual void OnAdded(Web parent);
    public virtual void OnUpdated(Web parent);
    private IList`1<Guid> GetFieldRefIds();
    private string PrependContentTypeId(string contentTypeIdAsString, string parentIdString);
    private string GetContentTypeIdAsString();
}
public class Omnia.Fx.SharePoint.ContentTypes.ContentTypeReference : object {
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentTypeBase <ContentType>k__BackingField;
    public string Id { get; }
    public bool IsDefault { get; public set; }
    internal ContentTypeBase ContentType { get; }
    internal ContentTypeAttribute ContentTypeAttribute { get; }
    public ContentTypeReference(Type type);
    public ContentTypeReference(ContentTypeAttribute contentTypeAttribute);
    public ContentTypeReference(string contentTypeId);
    public string get_Id();
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
internal ContentTypeBase get_ContentType();
    internal ContentTypeAttribute get_ContentTypeAttribute();
    private void Init();
}
internal interface Omnia.Fx.SharePoint.ContentTypes.ISharePointContentTypeHelper {
    public abstract virtual ValueTask`1<ContentType> GetContentTypeAsync(string id, Action`2<ClientRuntimeContext, ContentType> loadAction, bool force);
    public abstract virtual ContentType AddContentType(string id, ContentTypeAttribute contentTypeAttribute);
    public abstract virtual bool AddFieldIntoContentType(ContentType contentType, Field field);
    public abstract virtual void LoadContentType(ContentType contentType);
}
internal interface Omnia.Fx.SharePoint.ContentTypes.ISharePointContentTypeHelperFull {
    public abstract virtual bool LoadWebContentTypes();
    public abstract virtual ContentType GetContentTypeFromWebContentTypes(string id, Boolean& waitForNextExecute);
}
public interface Omnia.Fx.SharePoint.ContentTypes.ISharePointContentTypeInfo {
    public ContentType ContentType { get; }
    public abstract virtual ContentType get_ContentType();
    public abstract virtual ISharePointContentTypeInfo AddToList(bool setDefault);
    public abstract virtual ISharePointContentTypeInfo AddToList(string listRelativeUrl, bool setDefault);
}
public interface Omnia.Fx.SharePoint.ContentTypes.ISharePointContentTypeProvisioningSetup {
    public abstract virtual ISharePointContentTypeProvisioningSetup Configure(Action`1<ContentTypeAttribute> configureFunction);
    public abstract virtual ISharePointContentTypeProvisioningSetup OnAdded(Action`1<Web> configureFunction);
    public abstract virtual ISharePointContentTypeProvisioningSetup OnUpdated(Action`1<Web> configureFunction);
}
internal class Omnia.Fx.SharePoint.ContentTypes.Models.SharePointContentTypeModel : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UpdateChildren>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentTypeReference <ContentTypeReference>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<ClientRuntimeContext, ContentType> <LoadAction>k__BackingField;
    public string Id { get; private set; }
    public bool UpdateChildren { get; private set; }
    public ContentTypeReference ContentTypeReference { get; private set; }
    public Action`2<ClientRuntimeContext, ContentType> LoadAction { get; public set; }
    public bool NeedToEnsure { get; }
    public SharePointContentTypeModel(Type type, bool needToEnsure, bool updateChildren);
    public SharePointContentTypeModel(ContentTypeAttribute contentTypeAttribute, bool updateChildren);
    public SharePointContentTypeModel(string id);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public bool get_UpdateChildren();
    [CompilerGeneratedAttribute]
private void set_UpdateChildren(bool value);
    [CompilerGeneratedAttribute]
public ContentTypeReference get_ContentTypeReference();
    [CompilerGeneratedAttribute]
private void set_ContentTypeReference(ContentTypeReference value);
    [CompilerGeneratedAttribute]
public Action`2<ClientRuntimeContext, ContentType> get_LoadAction();
    [CompilerGeneratedAttribute]
public void set_LoadAction(Action`2<ClientRuntimeContext, ContentType> value);
    public bool get_NeedToEnsure();
}
[ContentTypeAttribute("458c3580-b619-4dbe-9d6e-80b1ef70d71d", "Sample Content Type 20180719-1-2", "False")]
public class Omnia.Fx.SharePoint.ContentTypes.Sample.SampleContentType1 : Item {
    [CompilerGeneratedAttribute]
private IList`1<string> <Fields>k__BackingField;
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.TextField")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.FirstName")]
[FieldRefAttribute("ea8f7ca9-2a0e-4a89-b8bf-c51a6af62c73")]
public IList`1<string> Fields { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<string> get_Fields();
    [CompilerGeneratedAttribute]
public void set_Fields(IList`1<string> value);
}
[ContentTypeAttribute("cd4c5bf1-0004-4473-a17d-9cda45231dd7", "Sample Content Type 20180719-2-2", "False")]
public class Omnia.Fx.SharePoint.ContentTypes.Sample.SampleContentType2 : Item {
    [CompilerGeneratedAttribute]
private IList`1<FieldBase> <FieldDefinitions>k__BackingField;
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.LookupField")]
public IList`1<FieldBase> FieldDefinitions { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<FieldBase> get_FieldDefinitions();
    [CompilerGeneratedAttribute]
public void set_FieldDefinitions(IList`1<FieldBase> value);
}
internal class Omnia.Fx.SharePoint.ContentTypes.SharePointContentTypeHandler : object {
    private SharePointContentTypeModel _sharePointContentTypeModel;
    private Dictionary`2<string, bool> _listRelativeUrls;
    private Action`1<Web> _afterAddedFunction;
    private Action`1<Web> _afterUpdatedFunction;
    private List`1<Field> _fields;
    private Dictionary`2<List, bool> _lists;
    private Func`2<LoadWebFieldsCallbackParams, Field> _getFieldFunc;
    private Func`2<string, List> _getListFunc;
    [CompilerGeneratedAttribute]
private ContentType <ContentType>k__BackingField;
    public ContentType ContentType { get; private set; }
    public SharePointContentTypeHandler(SharePointContentTypeModel sharePointContentTypeModel);
    [CompilerGeneratedAttribute]
public sealed virtual ContentType get_ContentType();
    [CompilerGeneratedAttribute]
private void set_ContentType(ContentType value);
    public sealed virtual ISharePointContentTypeInfo AddToList(bool setDefault);
    public sealed virtual ISharePointContentTypeInfo AddToList(string listRelativeUrl, bool setDefault);
    public sealed virtual ISharePointContentTypeProvisioningSetup Configure(Action`1<ContentTypeAttribute> configureFunction);
    public sealed virtual ISharePointContentTypeProvisioningSetup OnAdded(Action`1<Web> configureFunction);
    public sealed virtual ISharePointContentTypeProvisioningSetup OnUpdated(Action`1<Web> configureFunction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.ContentTypes.SharePointContentTypeHandler/<RetrieveNotEnsureMainEntityAsync>d__18")]
public sealed virtual Task RetrieveNotEnsureMainEntityAsync(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.ContentTypes.SharePointContentTypeHandler/<EnsureMainEntityAsync>d__19")]
public sealed virtual Task EnsureMainEntityAsync(ISharePointEntityHelper sharePointEntityHelper);
    public sealed virtual Task ExecuteRelatedActionsAsync(ISharePointEntityHelper sharePointEntityHelper);
    private void LoadFields(ISharePointEntityHelper sharePointEntityHelper);
    private bool LoadLists(ISharePointEntityHelper sharePointEntityHelper);
    private Task CheckInitStatusAsync(ISharePointEntityHelper sharePointEntityHelper);
    private void UpdateContentType(ISharePointEntityHelper sharePointEntityHelper, bool force);
    private Task CheckUpdateContentTypeDoneAsync(ISharePointEntityHelper sharePointEntityHelper);
    private void AddFieldsToContentType(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.ContentTypes.SharePointContentTypeHandler/<AddContentTypeToListsAsync>d__27")]
private Task AddContentTypeToListsAsync(ISharePointEntityHelper sharePointEntityHelper);
    private Task SetDefaultContentTypeForListsAsync(ISharePointEntityHelper sharePointEntityHelper);
}
internal class Omnia.Fx.SharePoint.ContentTypes.SharePointContentTypeHelper : object {
    private Web _web;
    private Dictionary`2<string, ContentType> _spContentTypeDictionary;
    private Dictionary`2<string, List`1<Guid>> _tempNewFieldsByContentTypeId;
    public SharePointContentTypeHelper(Web web);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.ContentTypes.SharePointContentTypeHelper/<GetContentTypeAsync>d__4")]
public sealed virtual ValueTask`1<ContentType> GetContentTypeAsync(string id, Action`2<ClientRuntimeContext, ContentType> loadAction, bool force);
    public sealed virtual bool LoadWebContentTypes();
    public sealed virtual ContentType GetContentTypeFromWebContentTypes(string id, Boolean& waitForNextExecute);
    public sealed virtual ContentType AddContentType(string id, ContentTypeAttribute contentTypeAttribute);
    public sealed virtual bool AddFieldIntoContentType(ContentType contentType, Field field);
    public sealed virtual void LoadContentType(ContentType contentType);
    public sealed virtual void CleanupState();
    private void InvokeLoadForContentType(ContentType contentType, Action`2<ClientRuntimeContext, ContentType> loadAction);
    private bool CheckFieldExists(ContentType contentType, Guid fieldId);
    private Dictionary`2<string, ContentType> EnsureContentTypeDictionary();
}
[ExtensionAttribute]
public static class Omnia.Fx.SharePoint.Extensions.SortExtensions : object {
    [ExtensionAttribute]
public static IOrderedQueryable`1<T> OrderBy(IQueryable`1<T> source, string property);
    [ExtensionAttribute]
public static IOrderedQueryable`1<T> OrderByDescending(IQueryable`1<T> source, string property);
    private static IOrderedQueryable`1<T> ApplyOrder(IQueryable`1<T> source, string property, string methodName);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.BooleanFieldAttribute : FieldAttribute {
    public static string TypeAsStringValue;
    private string _jumpToNoField;
    private string _jumpToYesField;
    public string JumpToNoField { get; public set; }
    public string JumpToYesField { get; public set; }
    public BooleanFieldAttribute(string id, string internalName);
    public string get_JumpToNoField();
    public void set_JumpToNoField(string value);
    public string get_JumpToYesField();
    public void set_JumpToYesField(string value);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.CalculatedFieldAttribute : FieldAttribute {
    public static string TypeAsStringValue;
    private DateTimeFieldFormatType _dateFormat;
    private string _formula;
    private FieldType _outputType;
    private string _resultType;
    public DateTimeFieldFormatType DateFormat { get; public set; }
    public string Formula { get; public set; }
    public FieldType OutputType { get; public set; }
    public string ResultType { get; public set; }
    public CalculatedFieldAttribute(string id, string internalName);
    public DateTimeFieldFormatType get_DateFormat();
    public void set_DateFormat(DateTimeFieldFormatType value);
    public string get_Formula();
    public void set_Formula(string value);
    public FieldType get_OutputType();
    public void set_OutputType(FieldType value);
    public string get_ResultType();
    public void set_ResultType(string value);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
    internal virtual void BuildFieldSchemalXml(XElement fieldSchemaXml);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.ChoiceFieldAttribute : FieldAttribute {
    public static string TypeAsStringValue;
    private bool _allowMultipleValues;
    private String[] _choices;
    private ChoiceFormatType _editFormat;
    private bool _fillInChoice;
    public bool AllowMultipleValues { get; public set; }
    public String[] Choices { get; public set; }
    public ChoiceFormatType EditFormat { get; public set; }
    public bool FillInChoice { get; public set; }
    public ChoiceFieldAttribute(string id, string internalName);
    public bool get_AllowMultipleValues();
    public void set_AllowMultipleValues(bool value);
    public String[] get_Choices();
    public void set_Choices(String[] value);
    public ChoiceFormatType get_EditFormat();
    public void set_EditFormat(ChoiceFormatType value);
    public bool get_FillInChoice();
    public void set_FillInChoice(bool value);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.DateTimeFieldAttribute : FieldAttribute {
    public static string TypeAsStringValue;
    private CalendarType _dateTimeCalendarType;
    private DateTimeFieldFormatType _displayFormat;
    private DateTimeFieldFriendlyFormatType _friendlyDisplayFormat;
    public CalendarType DateTimeCalendarType { get; public set; }
    public DateTimeFieldFormatType DisplayFormat { get; public set; }
    public DateTimeFieldFriendlyFormatType FriendlyDisplayFormat { get; public set; }
    public DateTimeFieldAttribute(string id, string internalName);
    public CalendarType get_DateTimeCalendarType();
    public void set_DateTimeCalendarType(CalendarType value);
    public DateTimeFieldFormatType get_DisplayFormat();
    public void set_DisplayFormat(DateTimeFieldFormatType value);
    public DateTimeFieldFriendlyFormatType get_FriendlyDisplayFormat();
    public void set_FriendlyDisplayFormat(DateTimeFieldFriendlyFormatType value);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
}
[AttributeUsageAttribute("4")]
public class Omnia.Fx.SharePoint.Fields.Attributes.FieldAttribute : EntityAttribute {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalName>k__BackingField;
    private string _staticName;
    private string _title;
    private string _typeAsString;
    private bool _canBeDeleted;
    private string _defaultFormula;
    private string _defaultValue;
    private string _description;
    private string _direction;
    private bool _enforceUniqueValues;
    private FieldType _fieldTypeKind;
    private string _group;
    private bool _hidden;
    private string _jsLink;
    private bool _readOnlyField;
    private bool _required;
    private string _schemaXml;
    private bool _sealed;
    private string _validationFormula;
    private string _validationMessage;
    public Guid Id { get; public set; }
    public string InternalName { get; public set; }
    public string StaticName { get; public set; }
    public string Title { get; public set; }
    public string TypeAsString { get; public set; }
    public bool CanBeDeleted { get; public set; }
    public string DefaultFormula { get; public set; }
    public string DefaultValue { get; public set; }
    public string Description { get; public set; }
    public string Direction { get; public set; }
    public bool EnforceUniqueValues { get; public set; }
    public FieldType FieldTypeKind { get; public set; }
    public string Group { get; public set; }
    public bool Hidden { get; public set; }
    public string JSLink { get; public set; }
    public bool ReadOnlyField { get; public set; }
    public bool Required { get; public set; }
    public string SchemaXml { get; public set; }
    public bool Sealed { get; public set; }
    public string ValidationFormula { get; public set; }
    public string ValidationMessage { get; public set; }
    public FieldAttribute(string id, string internalName, string typeAsString);
    public FieldAttribute(string id);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_InternalName();
    [CompilerGeneratedAttribute]
public void set_InternalName(string value);
    public string get_StaticName();
    public void set_StaticName(string value);
    public string get_Title();
    public void set_Title(string value);
    public string get_TypeAsString();
    public void set_TypeAsString(string value);
    public bool get_CanBeDeleted();
    public void set_CanBeDeleted(bool value);
    public string get_DefaultFormula();
    public void set_DefaultFormula(string value);
    public string get_DefaultValue();
    public void set_DefaultValue(string value);
    public string get_Description();
    public void set_Description(string value);
    public string get_Direction();
    public void set_Direction(string value);
    public bool get_EnforceUniqueValues();
    public void set_EnforceUniqueValues(bool value);
    public FieldType get_FieldTypeKind();
    public void set_FieldTypeKind(FieldType value);
    public string get_Group();
    public void set_Group(string value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public string get_JSLink();
    public void set_JSLink(string value);
    public bool get_ReadOnlyField();
    public void set_ReadOnlyField(bool value);
    public bool get_Required();
    public void set_Required(bool value);
    public string get_SchemaXml();
    public void set_SchemaXml(string value);
    public bool get_Sealed();
    public void set_Sealed(bool value);
    public string get_ValidationFormula();
    public void set_ValidationFormula(string value);
    public string get_ValidationMessage();
    public void set_ValidationMessage(string value);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
    internal virtual Task LoadAttributeInfoAsync(ISharePointEntityHelper sharePointEntityHelper);
    internal virtual Field OnCreating(ISharePointEntityHelper sharePointEntityHelper);
    internal virtual void OnUpdating(ISharePointEntityHelper sharePointEntityHelper, Field field, bool force);
    internal virtual void BuildFieldSchemalXml(XElement fieldSchemaXml);
    internal virtual void OnUpdated(ISharePointEntityHelper sharePointEntityHelper);
    private bool UpdateFieldProperties(ISharePointEntityHelper sharePointEntityHelper, Field field, bool force);
    [CompilerGeneratedAttribute]
private Task <UpdateFieldProperties>b__92_0(ISharePointEntityHelperFull entityHelper);
}
[AttributeUsageAttribute("32767")]
public class Omnia.Fx.SharePoint.Fields.Attributes.FieldRefAttribute : Attribute {
    [CompilerGeneratedAttribute]
private FieldReference <Reference>k__BackingField;
    public int OrderedIndex { get; public set; }
    public bool Required { get; public set; }
    internal FieldReference Reference { get; }
    public FieldRefAttribute(Type fieldType);
    public FieldRefAttribute(FieldAttribute fieldAttribute);
    public FieldRefAttribute(string fieldId);
    public int get_OrderedIndex();
    public void set_OrderedIndex(int value);
    public bool get_Required();
    public void set_Required(bool value);
    [CompilerGeneratedAttribute]
internal FieldReference get_Reference();
}
public class Omnia.Fx.SharePoint.Fields.Attributes.HTMLFieldAttribute : FieldAttribute {
    public static string TypeAsStringValue;
    public HTMLFieldAttribute(string id, string internalName);
    internal virtual void BuildFieldSchemalXml(XElement fieldSchemaXml);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.IntegerFieldAttribute : FieldAttribute {
    public static string TypeAsStringValue;
    private int _maximumValue;
    private int _minimumValue;
    public int MaximumValue { get; public set; }
    public int MinimumValue { get; public set; }
    public IntegerFieldAttribute(string id, string internalName);
    public int get_MaximumValue();
    public void set_MaximumValue(int value);
    public int get_MinimumValue();
    public void set_MinimumValue(int value);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.LookupFieldAttribute : FieldAttribute {
    public static string TypeSingleAsStringValue;
    public static string TypeMultiAsStringValue;
    private bool _allowMultipleValues;
    private bool _isRelationship;
    private string _lookupField;
    private string _lookupList;
    private string _lookupWebId;
    private string _primaryFieldId;
    private bool _prependId;
    private RelationshipDeleteBehaviorType _relationshipDeleteBehavior;
    [CompilerGeneratedAttribute]
private string <ListRelativeUrl>k__BackingField;
    public bool AllowMultipleValues { get; public set; }
    public bool IsRelationship { get; public set; }
    public string LookupField { get; public set; }
    public string LookupList { get; public set; }
    public string LookupWebId { get; public set; }
    public string PrimaryFieldId { get; public set; }
    public bool PrependId { get; public set; }
    public RelationshipDeleteBehaviorType RelationshipDeleteBehavior { get; public set; }
    internal string ListRelativeUrl { get; internal set; }
    public LookupFieldAttribute(string id, string internalName, bool isMulti, string lookupField, string listRelativeUrl);
    public bool get_AllowMultipleValues();
    public void set_AllowMultipleValues(bool value);
    public bool get_IsRelationship();
    public void set_IsRelationship(bool value);
    public string get_LookupField();
    public void set_LookupField(string value);
    public string get_LookupList();
    public void set_LookupList(string value);
    public string get_LookupWebId();
    public void set_LookupWebId(string value);
    public string get_PrimaryFieldId();
    public void set_PrimaryFieldId(string value);
    public bool get_PrependId();
    public void set_PrependId(bool value);
    public RelationshipDeleteBehaviorType get_RelationshipDeleteBehavior();
    public void set_RelationshipDeleteBehavior(RelationshipDeleteBehaviorType value);
    [CompilerGeneratedAttribute]
internal string get_ListRelativeUrl();
    [CompilerGeneratedAttribute]
internal void set_ListRelativeUrl(string value);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Fields.Attributes.LookupFieldAttribute/<LoadAttributeInfoAsync>d__40")]
internal virtual Task LoadAttributeInfoAsync(ISharePointEntityHelper sharePointEntityHelper);
    [CompilerGeneratedAttribute]
private Task <LoadAttributeInfoAsync>b__40_0(Func`2<string, List> getListFunc);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(ISharePointEntityHelper sharePointEntityHelper);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.ManagedMetadataFieldAttribute : FieldAttribute {
    public static string TypeSingleAsStringValue;
    public static string TypeMultiAsStringValue;
    [CompilerGeneratedAttribute]
private string <TermGroupName>k__BackingField;
    private bool _allowMultipleValues;
    [CompilerGeneratedAttribute]
private string <TermSetName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AnchorName>k__BackingField;
    private Guid _sspId;
    private Guid _termSetId;
    private Guid _anchorId;
    private string _targetTemplate;
    public string TermGroupName { get; public set; }
    public bool AllowMultipleValues { get; public set; }
    public string TermSetName { get; public set; }
    public string AnchorName { get; public set; }
    public Guid SspId { get; public set; }
    public Guid TermSetId { get; public set; }
    public Guid AnchorId { get; public set; }
    public string TargetTemplate { get; public set; }
    public ManagedMetadataFieldAttribute(string id, string internalName, bool isMulti, string termStoreIdOrName, string termGroupName, string termSetIdOrName, string anchorIdOrName);
    [CompilerGeneratedAttribute]
public string get_TermGroupName();
    [CompilerGeneratedAttribute]
public void set_TermGroupName(string value);
    public bool get_AllowMultipleValues();
    public void set_AllowMultipleValues(bool value);
    [CompilerGeneratedAttribute]
public string get_TermSetName();
    [CompilerGeneratedAttribute]
public void set_TermSetName(string value);
    [CompilerGeneratedAttribute]
public string get_AnchorName();
    [CompilerGeneratedAttribute]
public void set_AnchorName(string value);
    public Guid get_SspId();
    public void set_SspId(Guid value);
    public Guid get_TermSetId();
    public void set_TermSetId(Guid value);
    public Guid get_AnchorId();
    public void set_AnchorId(Guid value);
    public string get_TargetTemplate();
    public void set_TargetTemplate(string value);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Fields.Attributes.ManagedMetadataFieldAttribute/<LoadAttributeInfoAsync>d__36")]
internal virtual Task LoadAttributeInfoAsync(ISharePointEntityHelper sharePointEntityHelper);
    private void CheckInitCompleted();
    [CompilerGeneratedAttribute]
private Task <LoadAttributeInfoAsync>b__36_0(TermStore termStore);
    [CompilerGeneratedAttribute]
private Task <LoadAttributeInfoAsync>b__36_1(TermSet termSet, Term term);
    [CompilerGeneratedAttribute]
private Task <LoadAttributeInfoAsync>b__36_2(TermSet termSet);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(ISharePointEntityHelper sharePointEntityHelper);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.NoteFieldAttribute : FieldAttribute {
    public static string TypeAsStringValue;
    private bool _allowHyperlink;
    private bool _appendOnly;
    private int _numberOfLines;
    private bool _restrictedMode;
    private bool _richText;
    private bool _unlimitedLengthInDocumentLibrary;
    public bool AllowHyperlink { get; public set; }
    public bool AppendOnly { get; public set; }
    public int NumberOfLines { get; public set; }
    public bool RestrictedMode { get; public set; }
    public bool RichText { get; public set; }
    public bool UnlimitedLengthInDocumentLibrary { get; public set; }
    public NoteFieldAttribute(string id, string internalName);
    public bool get_AllowHyperlink();
    public void set_AllowHyperlink(bool value);
    public bool get_AppendOnly();
    public void set_AppendOnly(bool value);
    public int get_NumberOfLines();
    public void set_NumberOfLines(int value);
    public bool get_RestrictedMode();
    public void set_RestrictedMode(bool value);
    public bool get_RichText();
    public void set_RichText(bool value);
    public bool get_UnlimitedLengthInDocumentLibrary();
    public void set_UnlimitedLengthInDocumentLibrary(bool value);
    internal virtual void BuildFieldSchemalXml(XElement fieldSchemaXml);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.NumberFieldAttribute : FieldAttribute {
    public static string TypeAsStringValue;
    private bool _showAsPercentage;
    private double _maximumValue;
    private double _minimumValue;
    public bool ShowAsPercentage { get; public set; }
    public double MaximumValue { get; public set; }
    public double MinimumValue { get; public set; }
    public NumberFieldAttribute(string id, string internalName);
    public bool get_ShowAsPercentage();
    public void set_ShowAsPercentage(bool value);
    public double get_MaximumValue();
    public void set_MaximumValue(double value);
    public double get_MinimumValue();
    public void set_MinimumValue(double value);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.TextFieldAttribute : FieldAttribute {
    public static string TypeAsStringValue;
    private int _maxLength;
    public int MaxLength { get; public set; }
    public TextFieldAttribute(string id, string internalName);
    public int get_MaxLength();
    public void set_MaxLength(int value);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.UrlFieldAttribute : FieldAttribute {
    public static string TypeAsStringValue;
    private UrlFieldFormatType _displayFormat;
    public UrlFieldFormatType DisplayFormat { get; public set; }
    public UrlFieldAttribute(string id, string internalName);
    public UrlFieldFormatType get_DisplayFormat();
    public void set_DisplayFormat(UrlFieldFormatType value);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
}
public class Omnia.Fx.SharePoint.Fields.Attributes.UserFieldAttribute : LookupFieldAttribute {
    public static string TypeSingleAsStringValue;
    public static string TypeMultiAsStringValue;
    private bool _allowDisplay;
    private bool _presence;
    private int _selectionGroup;
    private FieldUserSelectionMode _selectionMode;
    public bool AllowDisplay { get; public set; }
    public bool Presence { get; public set; }
    public int SelectionGroup { get; public set; }
    public FieldUserSelectionMode SelectionMode { get; public set; }
    public UserFieldAttribute(string id, string internalName, bool allowMulti, string showField);
    public bool get_AllowDisplay();
    public void set_AllowDisplay(bool value);
    public bool get_Presence();
    public void set_Presence(bool value);
    public int get_SelectionGroup();
    public void set_SelectionGroup(int value);
    public FieldUserSelectionMode get_SelectionMode();
    public void set_SelectionMode(FieldUserSelectionMode value);
    public virtual ClientObject GetSharePointFieldTypedObject(Field field);
}
[TextFieldAttribute("{246D0907-637C-46b7-9AA0-0BB914DAA832}", "_Author")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Author : FieldBase {
}
[TextFieldAttribute("{0FC9CACE-C5C2-465d-AE88-B67F2964CA93}", "_Category")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Category : FieldBase {
}
[LookupFieldAttribute("{58014f77-5463-437b-ab67-eec79532da67}", "_CheckinComment", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._CheckinComment : FieldBase {
}
[NoteFieldAttribute("{52578FC3-1F01-4f4d-B016-94CCBCF428CF}", "_Comments")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Comments : FieldBase {
}
[NoteFieldAttribute("{370B7779-0344-4b9f-8F2D-DC1C62EAE801}", "_Contributor")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Contributor : FieldBase {
}
[TextFieldAttribute("{6b4e226d-3d88-4a36-808d-a129bf52bccf}", "_CopySource")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._CopySource : FieldBase {
}
[TextFieldAttribute("{3B1D59C0-26B1-4de6-ABBD-3EDB4E2C6ECA}", "_Coverage")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Coverage : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._DCDateCreated : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._DCDateModified : FieldBase {
}
[FieldAttribute("{2ea78cef-1bf9-4019-960a-02c41636cb47}", "_EditMenuTableEnd", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._EditMenuTableEnd : FieldBase {
}
[FieldAttribute("{3c6303be-e21f-4366-80d7-d6d0a3b22c7a}", "_EditMenuTableStart", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._EditMenuTableStart : FieldBase {
}
[FieldAttribute("{1344423c-c7f9-4134-88e4-ad842e2d723c}", "_EditMenuTableStart2", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._EditMenuTableStart2 : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._EndDate : FieldBase {
}
[TextFieldAttribute("{36111FDD-2C65-41ac-B7EF-48B9B8DA4526}", "_Format")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Format : FieldBase {
}
[BooleanFieldAttribute("{26d0756c-986a-48a7-af35-bf18ab85ff4a}", "_HasCopyDestinations")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._HasCopyDestinations : FieldBase {
}
[TextFieldAttribute("{3C76805F-AD45-483a-9C85-7AC24506CE1A}", "_Identifier")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Identifier : FieldBase {
}
[BooleanFieldAttribute("{c101c3e7-122d-4d4d-bc34-58e94a38c816}", "_IsCurrentVersion")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._IsCurrentVersion : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._LastPrinted : FieldBase {
}
[FieldAttribute("{43bdd51b-3c5b-4e78-90a8-fb2087f71e70}", "_Level", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Level : FieldBase {
}
[NoteFieldAttribute("{34ad21eb-75bd-4544-8c73-0e08330291fe}", "_ModerationComments")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._ModerationComments : FieldBase {
}
[FieldAttribute("{fdc3b2ed-5bf2-4835-a4bc-b885f3396a61}", "_ModerationStatus", "ModStat")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._ModerationStatus : FieldBase {
}
[UrlFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Photo : FieldBase {
}
[TextFieldAttribute("{2EEDD0AE-4281-4b77-99BE-68F8B3AD8A7A}", "_Publisher")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Publisher : FieldBase {
}
[NoteFieldAttribute("{5E75C854-6E9D-405d-B6C1-F8725BAE5822}", "_Relation")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Relation : FieldBase {
}
[TextFieldAttribute("{EDECEC70-F6E2-4c3c-A4C7-F61A515DFAA9}", "_ResourceType")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._ResourceType : FieldBase {
}
[TextFieldAttribute("{16B4AB96-0CE5-4c82-A836-F3117E8996FF}", "_Revision")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Revision : FieldBase {
}
[NoteFieldAttribute("{ADA3F0CB-6F95-4588-BB08-D97CC0623522}", "_RightsManagement")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._RightsManagement : FieldBase {
}
[TextFieldAttribute("{034998e9-bf1c-4288-bbbd-00eacfc64410}", "_SharedFileIndex")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._SharedFileIndex : FieldBase {
}
[NoteFieldAttribute("{B0A3C1DB-FAF1-48f0-9BE1-47D2FC8CB5D6}", "_Source")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Source : FieldBase {
}
[TextFieldAttribute("{c63a459d-54ba-4ab7-933a-dcf1c6fadec2}", "_SourceUrl")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._SourceUrl : FieldBase {
}
[ChoiceFieldAttribute("{1DAB9B48-2D1A-47b3-878C-8E84F0D211BA}", "_Status")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Status : FieldBase {
}
[FieldAttribute("{7841bf41-43d0-4434-9f50-a673baef7631}", "_UIVersion", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._UIVersion : FieldBase {
}
[TextFieldAttribute("{dce8262a-3ae9-45aa-aab4-83bd75fb738a}", "_UIVersionString")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._UIVersionString : FieldBase {
}
[TextFieldAttribute("{78BE84B9-D70C-447b-8275-8DCD768B6F92}", "_Version")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn._Version : FieldBase {
}
[NumberFieldAttribute("{B0B3407E-1C33-40ed-A37C-2430B7A5D081}", "ActualWork")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ActualWork : FieldBase {
}
[UrlFieldAttribute("{7B016EE5-70AA-4ABB-8AA3-01795B4EFE6F}", "AdminTaskAction")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AdminTaskAction : FieldBase {
}
[TextFieldAttribute("{93490584-B6A8-4996-AA00-EAD5F59AAE0D}", "AdminTaskDescription")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AdminTaskDescription : FieldBase {
}
[NumberFieldAttribute("{CF935CC2-A00C-4AD3-BCA1-0865AB15AFC1}", "AdminTaskOrder")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AdminTaskOrder : FieldBase {
}
[BooleanFieldAttribute("{7266b59c-030b-4ca3-bc09-bb8e76ad969b}", "AllowEditing")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AllowEditing : FieldBase {
}
[UrlFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AlternateThumbnailUrl : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Anniversary : FieldBase {
}
[LookupFieldAttribute("{6bfaba20-36bf-44b5-a1b2-eb6346d49716}", "AppAuthor", "False", "", "AppPrincipals")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AppAuthor : FieldBase {
}
[LookupFieldAttribute("{e08400f3-c779-4ed2-a18c-ab7f34caa318}", "AppEditor", "False", "", "AppPrincipals")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AppEditor : FieldBase {
}
[DateTimeFieldAttribute("{71316CEA-40A0-49f3-8659-F0CEFDBDBD4F}", "ArticleStartDate")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ArticleDate : FieldBase {
}
[UserFieldAttribute("{53101f38-dd2e-458c-b245-0c236cc13d1a}", "AssignedTo", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AssignedTo : FieldBase {
}
[TextFieldAttribute("{F55DE332-074E-4e71-A71A-B90ABFAD51AE}", "AssistantNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AssistantNumber : FieldBase {
}
[TextFieldAttribute("{2AEA194D-E399-4f05-95AF-94F87B1F2687}", "AssistantsName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AssistantsName : FieldBase {
}
[TextFieldAttribute("{B75067A2-E23B-499f-AA07-4CEB6C79E0B3}", "AssociatedListId")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AssociatedListId : FieldBase {
}
[FieldAttribute("{67df98f4-9dec-48ff-a553-29bece9c5bf4}", "Attachments", "Attachments")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Attachments : FieldBase {
}
[ChoiceFieldAttribute("{3329F39D-70ED-4858-B8C8-C5237634BF08}", "AttendeeStatus")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.AttendeeStatus : FieldBase {
}
[UserFieldAttribute("{1df5e554-ec7e-46a6-901d-d85a3881cb18}", "Author", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Author : FieldBase {
}
[TextFieldAttribute("{E9359D15-261B-48f6-A302-01419A68D4DE}", "BaseAssociationGuid")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.BaseAssociationGuid : FieldBase {
}
[FieldAttribute("{7615464b-559e-4302-b8e2-8f440b913101}", "BaseName", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.BaseName : FieldBase {
}
[FieldAttribute("{A8B93FBA-7396-443D-9884-EE332CAA4560}", "BestAnswerId", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.BestAnswerId : FieldBase {
}
[TextFieldAttribute("{4F03F66B-FB1E-4ed2-AB8E-F6ED3FE14844}", "BillingInformation")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.BillingInformation : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Birthday : FieldBase {
}
[NoteFieldAttribute("{7662cd2c-f069-4dba-9e35-082cf976e170}", "Body")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Body : FieldBase {
}
[FieldAttribute("{c7e9537e-bde4-4923-a100-adbd9e0a0a0d}", "BodyAndMore", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.BodyAndMore : FieldBase {
}
[FieldAttribute("{af82aa75-3039-4573-84a8-73ffdfd22733}", "BodyWasExpanded", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.BodyWasExpanded : FieldBase {
}
[TextFieldAttribute("{9b12fb06-254e-43b3-bfc8-8eea422ebc9f}", "Break")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Break : FieldBase {
}
[TextFieldAttribute("{6547D03A-76D3-4d74-9D34-F51B837C0879}", "Business2Number")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Business2Number : FieldBase {
}
[BooleanFieldAttribute("{274b7e21-284a-4c49-bec6-f1f2cb6fc344}", "CallBack")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.CallBack : FieldBase {
}
[TextFieldAttribute("{344E9657-B17F-4344-A834-FF7C056BCC5E}", "CallbackNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.CallbackNumber : FieldBase {
}
[DateTimeFieldAttribute("{63fc6806-db53-4d0d-b18b-eaf90e96ddf5}", "CallTime")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.CallTime : FieldBase {
}
[TextFieldAttribute("{92A011A9-FD1B-42e0-B6FA-AFCFEE1928FA}", "CarNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.CarNumber : FieldBase {
}
[TextFieldAttribute("{9EBCD900-9D05-46c8-8F4D-E46E87328844}", "Categories")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Categories : FieldBase {
}
[ChoiceFieldAttribute("{6DF9BD52-550E-4a30-BC31-A4366832A87D}", "Category")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Category : FieldBase {
}
[TextFieldAttribute("{2a464df1-44c1-4851-949d-fcd270f0ccf2}", "CellPhone")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.CellPhone : FieldBase {
}
[CalculatedFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Checkmark : FieldBase {
}
[UserFieldAttribute("{3881510a-4e4a-4ee8-b102-8ee8e2d0dd4b}", "CheckoutUser", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.CheckoutUser : FieldBase {
}
[TextFieldAttribute("{6440B402-8EC5-4d7a-83F4-AFCCB556B5CC}", "ChildrensNames")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ChildrensNames : FieldBase {
}
[FieldAttribute("{E52012A0-51EB-4c0c-8DFB-9B8A0EBEDCB6}", "Combine", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Combine : FieldBase {
}
[NoteFieldAttribute("{6DF9BD52-550E-4a30-BC31-A4366832A87F}", "Comment")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Comment : FieldBase {
}
[NoteFieldAttribute("{9da97a8a-1da5-4a77-98d3-4bc10456e700}", "Comments")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Comments : FieldBase {
}
[TextFieldAttribute("{038D1503-4629-40f6-ADAF-B47D1AB2D4FE}", "Company")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Company : FieldBase {
}
[TextFieldAttribute("{27CB1283-BDA2-4ae8-BCFF-71725B674DBB}", "CompanyNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.CompanyNumber : FieldBase {
}
[TextFieldAttribute("{034aae88-6e9a-4e41-bc8a-09b6c15fcdf4}", "CompanyPhonetic")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.CompanyPhonetic : FieldBase {
}
[BooleanFieldAttribute("{35363960-D998-4aad-B7E8-058DFE2C669E}", "Completed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Completed : FieldBase {
}
[TextFieldAttribute("{86A78395-C8AD-429e-ABFF-BE09417B523E}", "ComputerNetworkName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ComputerNetworkName : FieldBase {
}
[BooleanFieldAttribute("{9b0e6471-c5c5-42ef-9ade-63170bf28819}", "Confidential")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Confidential : FieldBase {
}
[TextFieldAttribute("{ef7465d3-5d54-487b-b081-ade80acae88e}", "Confirmations")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Confirmations : FieldBase {
}
[NoteFieldAttribute("{1b89212c-1c67-487a-8c14-4d30bf4ef223}", "ConfirmedTo")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ConfirmedTo : FieldBase {
}
[ChoiceFieldAttribute("{939dfb93-3107-44c6-a98f-dd88dca3f8cf}", "ConnectionType")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ConnectionType : FieldBase {
}
[TextFieldAttribute("{aea1a4dd-0f19-417d-8721-95a1d28762ab}", "PublishingContact")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Contact : FieldBase {
}
[FieldAttribute("{e1a85174-b8d0-4962-9ce6-758f8b612725}", "ContactInfo", "ContactInfo")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ContactInfo : FieldBase {
}
[UrlFieldAttribute("{7650d41a-fa26-4c72-a641-af4e93dc7053}", "Content")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Content : FieldBase {
}
[TextFieldAttribute("{58073EBD-B204-4899-BC77-54402C61E9E9}", "ContentLanguages")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ContentLanguages : FieldBase {
}
[FieldAttribute("{c042a256-787d-4a6f-8a8a-cf6ab767f12d}", "ContentType", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ContentType : FieldBase {
}
[FieldAttribute("{03e45e84-1992-4d42-9116-26f756012634}", "ContentTypeId", "ContentTypeId")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ContentTypeId : FieldBase {
}
[FieldAttribute("{b0204f69-2253-43d2-99ad-c0df00031b66}", "CorrectBodyToShow", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.CorrectBodyToShow : FieldBase {
}
[DateTimeFieldAttribute("{8c06beca-0777-48f7-91c7-6da68bc07b69}", "Created")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Created : FieldBase {
}
[TextFieldAttribute("{4dd7e525-8d6b-4cb4-9d3e-44ee25f973eb}", "Created_x0020_By")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Created_x0020_By : FieldBase {
}
[LookupFieldAttribute("{998b5cff-4a35-47a7-92f3-3914aa6aa4a2}", "Created_x0020_Date", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Created_x0020_Date : FieldBase {
}
[TextFieldAttribute("{81368791-7CBC-4230-981A-A7669ADE9801}", "CustomerID")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.CustomerID : FieldBase {
}
[NoteFieldAttribute("{38269294-165e-448a-a6b9-f0e09688f3f9}", "Data")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Data : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Date : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DateCompleted : FieldBase {
}
[TextFieldAttribute("{61fc45dd-b33d-4679-8646-be9e6584fadd}", "DayOfWeek")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DayOfWeek : FieldBase {
}
[ChoiceFieldAttribute("{AC3A1092-34AD-42b2-8D47-A79D01D9F516}", "DecisionStatus")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DecisionStatus : FieldBase {
}
[TextFieldAttribute("{CC10B158-50B4-4f02-8F3A-B9B6C3102628}", "DefaultCssFile")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DefaultCssFile : FieldBase {
}
[BooleanFieldAttribute("{4ed6dfdf-86a8-4894-bd1b-4fa28042be53}", "Deleted")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Deleted : FieldBase {
}
[TextFieldAttribute("{05fdf852-4b64-4096-9b2b-d2a62a86bc59}", "Department")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Department : FieldBase {
}
[NoteFieldAttribute("{3f155110-a6a2-4d70-926c-94648101f0e8}", "Description")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Description : FieldBase {
}
[NoteFieldAttribute("{6529a881-d745-4117-a552-3dcc7110e9b8}", "Detail")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Detail : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DiscussionLastUpdated : FieldBase {
}
[FieldAttribute("{c5abfdc7-3435-4183-9207-3d1146895cf8}", "DiscussionTitle", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DiscussionTitle : FieldBase {
}
[LookupFieldAttribute("{f0218b98-d0d6-4fc1-b15b-aabeb89f32a9}", "DiscussionTitleLookup", "False", "ParentFolderId", "Self")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DiscussionTitleLookup : FieldBase {
}
[UrlFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DisplayTemplateJSConfigurationUrl : FieldBase {
}
[UrlFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DisplayTemplateJSIconUrl : FieldBase {
}
[TextFieldAttribute("{ED095CF7-534E-460b-965F-F14269E70F5A}", "DisplayTemplateJSTargetContentType")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DisplayTemplateJSTargetContentType : FieldBase {
}
[ChoiceFieldAttribute("{0E49B273-3102-4b7d-B609-2E05DD1A17D9}", "DisplayTemplateJSTargetControlType")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DisplayTemplateJSTargetControlType : FieldBase {
}
[TextFieldAttribute("{9F927425-78E9-49c3-B03B-65E1211394E1}", "DisplayTemplateJSTargetListTemplate")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DisplayTemplateJSTargetListTemplate : FieldBase {
}
[TextFieldAttribute("{DF8BD7E5-B3DB-4a94-AFB4-7296397D829D}", "DisplayTemplateJSTargetScope")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DisplayTemplateJSTargetScope : FieldBase {
}
[BooleanFieldAttribute("{3D0684F7-CA97-413d-9D03-D00F480059AE}", "DisplayTemplateJSTemplateHidden")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DisplayTemplateJSTemplateHidden : FieldBase {
}
[ChoiceFieldAttribute("{D63173AC-B914-4f90-9CF8-4FF4352E41A3}", "DisplayTemplateJSTemplateType")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DisplayTemplateJSTemplateType : FieldBase {
}
[TextFieldAttribute("{2fd53156-ff9d-4cc3-b0ac-fe8a7bc82283}", "DLC_Description")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DLC_Description : FieldBase {
}
[NumberFieldAttribute("{80289bac-fd36-4848-b67a-bc8b5b621ec2}", "DLC_Duration")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DLC_Duration : FieldBase {
}
[FieldAttribute("{081c6e4c-5c14-4f20-b23e-1a71ceb6a67c}", "DocIcon", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DocIcon : FieldBase {
}
[DateTimeFieldAttribute("{c1e86ea6-7603-493c-ab5d-db4bbfe8f96a}", "DueDate")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.DueDate : FieldBase {
}
[FieldAttribute("{4D54445D-1C84-4a6d-B8DB-A51DED4E1ACC}", "Duration", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Duration : FieldBase {
}
[FieldAttribute("{503f1caa-358e-4918-9094-4a2cdc4bc034}", "Edit", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Edit : FieldBase {
}
[UserFieldAttribute("{d31655d1-1d5b-4511-95a1-7a09e9b75bf2}", "Editor", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Editor : FieldBase {
}
[TextFieldAttribute("{fce16b4c-fe53-4793-aaab-b4892e736d15}", "EMail")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EMail : FieldBase {
}
[TextFieldAttribute("{E232D6C8-9F49-4be2-BB28-B90570BCF167}", "Email2")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Email2 : FieldBase {
}
[TextFieldAttribute("{8BD27DBD-29A0-4ccd-BCB4-03FE70C538B1}", "Email3")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Email3 : FieldBase {
}
[NoteFieldAttribute("{8CBB9252-1035-4156-9C35-F54E9056C65A}", "EmailBody")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EmailBody : FieldBase {
}
[DateTimeFieldAttribute("{32f182ba-284e-4a87-93c3-936a6585af39}", "EmailCalendarDateStamp")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EmailCalendarDateStamp : FieldBase {
}
[FieldAttribute("{7a0cb12b-c70c-4f99-99f1-a232783a87d7}", "EmailCalendarSequence", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EmailCalendarSequence : FieldBase {
}
[NoteFieldAttribute("{f4e00567-8a9d-451b-82d4-a4447f9bd9a5}", "EmailCalendarUid")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EmailCalendarUid : FieldBase {
}
[NoteFieldAttribute("{a6af6df4-feb5-4dbf-bef6-d81230d4a071}", "EmailCc")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EmailCc : FieldBase {
}
[TextFieldAttribute("{e7cb6f60-f676-4b1d-89a3-975b6bc78cad}", "EmailFrom")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EmailFrom : FieldBase {
}
[NoteFieldAttribute("{e6985df4-cf66-4313-bcda-d89744d3b02f}", "EmailHeaders")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EmailHeaders : FieldBase {
}
[NoteFieldAttribute("{124527a9-fc10-48ff-8d44-960a7db405f8}", "EmailReferences")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EmailReferences : FieldBase {
}
[NoteFieldAttribute("{4ce600fb-a927-4911-bfc1-11076b76b522}", "EmailSender")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EmailSender : FieldBase {
}
[TextFieldAttribute("{072e9bb6-a643-44ce-b6fb-8b574a792556}", "EmailSubject")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EmailSubject : FieldBase {
}
[NoteFieldAttribute("{caa2cb1e-a124-4068-9496-14feef1a901f}", "EmailTo")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EmailTo : FieldBase {
}
[FieldAttribute("{B9E6F3AE-5632-4b13-B636-9D1A2BD67120}", "EncodedAbsThumbnailUrl", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EncodedAbsThumbnailUrl : FieldBase {
}
[FieldAttribute("{7177cfc7-f399-4d4d-905d-37dd51bc90bf}", "EncodedAbsUrl", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EncodedAbsUrl : FieldBase {
}
[FieldAttribute("{A1CA0063-779F-49f9-999C-A4A2E3645B07}", "EncodedAbsWebImgUrl", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EncodedAbsWebImgUrl : FieldBase {
}
[TextFieldAttribute("{04b29608-b1e8-4ff9-90d5-5328096dd5ac}", "End")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.End : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EndDate : FieldBase {
}
[ManagedMetadataFieldAttribute("{23f27201-bee3-471e-b2e7-b64fd8b7ca38}", "TaxKeyword", "False", "", "", "", "")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EnterpriseKeyword : FieldBase {
}
[FieldAttribute("{20a1a5b1-fddf-4420-ac68-9701490e09af}", "Event", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Event : FieldBase {
}
[BooleanFieldAttribute("{B8BBE503-BB22-4237-8D9E-0587756A2176}", "EventCanceled")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EventCanceled : FieldBase {
}
[FieldAttribute("{5D1D4E76-091A-4e03-AE83-6A59847731C0}", "EventType", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.EventType : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Expires : FieldBase {
}
[NoteFieldAttribute("{1C5518E2-1E99-49FE-BFC6-1A8DE3BA16E2}", "ExtendedProperties")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ExtendedProperties : FieldBase {
}
[FieldAttribute("{a4e7b3e1-1b0a-4ffa-8426-c94d4cb8cc57}", "Facilities", "Facilities")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Facilities : FieldBase {
}
[FieldAttribute("{7D95D1F4-F5FD-4a70-90CD-B35ABC9B5BC8}", "fAllDayEvent", "AllDayEvent")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.fAllDayEvent : FieldBase {
}
[LookupFieldAttribute("{8fca95c0-9b7d-456f-8dae-b41ee2728b85}", "File_x0020_Size", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.File_x0020_Size : FieldBase {
}
[TextFieldAttribute("{39360f11-34cf-4356-9945-25c44e68dade}", "File_x0020_Type")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.File_x0020_Type : FieldBase {
}
[LookupFieldAttribute("{56605df6-8fa1-47e4-a04c-5b384d59609f}", "FileDirRef", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FileDirRef : FieldBase {
}
[FieldAttribute("{8553196d-ec8d-4564-9861-3dbe931050c8}", "FileLeafRef", "File")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FileLeafRef : FieldBase {
}
[LookupFieldAttribute("{94f89715-e097-4e8b-ba79-ea02aa8b7adb}", "FileRef", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FileRef : FieldBase {
}
[FieldAttribute("{78a07ba4-bda8-4357-9e0f-580d64487583}", "FileSizeDisplay", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FileSizeDisplay : FieldBase {
}
[FieldAttribute("{C53A03F3-F930-4ef2-B166-E0F2210C13C0}", "FileType", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FileType : FieldBase {
}
[TextFieldAttribute("{4a722dd4-d406-4356-93f9-2550b8f50dd0}", "FirstName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FirstName : FieldBase {
}
[TextFieldAttribute("{ea8f7ca9-2a0e-4a89-b8bf-c51a6af62c73}", "FirstNamePhonetic")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FirstNamePhonetic : FieldBase {
}
[LookupFieldAttribute("{960ff01f-2b6d-4f1b-9c3f-e19ad8927341}", "FolderChildCount", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FolderChildCount : FieldBase {
}
[NoteFieldAttribute("{78EAE64A-F5F2-49af-B416-3247B76F46A1}", "FormData")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FormData : FieldBase {
}
[TextFieldAttribute("{17CA3A22-FDFE-46eb-99B5-9646BAED3F16}", "FormURN")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FormURN : FieldBase {
}
[FieldAttribute("{F2E63656-135E-4f1c-8FC2-CCBE74071901}", "fRecurrence", "Recurrence")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.fRecurrence : FieldBase {
}
[FieldAttribute("{393003f9-6ccb-4ea9-9623-704aa4748dec}", "FreeBusy", "FreeBusy")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FreeBusy : FieldBase {
}
[DateTimeFieldAttribute("{4cd541b9-c8ee-468f-bee6-33f3b9baa722}", "From")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.From : FieldBase {
}
[LookupFieldAttribute("{30bb605f-5bae-48fe-b4e3-1f81d9772af9}", "FSObjType", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FSObjType : FieldBase {
}
[UrlFieldAttribute("{D733736E-4204-4812-9565-191567B27E33}", "FTPSite")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FTPSite : FieldBase {
}
[FieldAttribute("{9c4be348-663a-4172-a38a-9714b2634c17}", "FullBody", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FullBody : FieldBase {
}
[TextFieldAttribute("{475c2610-c157-4b91-9e2d-6855031b3538}", "FullName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.FullName : FieldBase {
}
[ChoiceFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.GbwCategory : FieldBase {
}
[TextFieldAttribute("{afaa4198-9797-4e45-9825-8f7e7b0f5dd5}", "GbwLocation")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.GbwLocation : FieldBase {
}
[ChoiceFieldAttribute("{23550288-91B5-4e7f-81F9-1A92661C4838}", "Gender")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Gender : FieldBase {
}
[BooleanFieldAttribute("{6570d35e-7f0a-4123-93c9-f53ffa5810d3}", "GoFromHome")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.GoFromHome : FieldBase {
}
[BooleanFieldAttribute("{2ead592e-f05c-41a2-9817-e06dac25bc19}", "GoingHome")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.GoingHome : FieldBase {
}
[TextFieldAttribute("{DA31D3C9-F9DA-4c35-88D4-60AAFA4C3F19}", "GovernmentIDNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.GovernmentIDNumber : FieldBase {
}
[FieldAttribute("{c86a2f7f-7680-4a0b-8907-39c4f4855a35}", "Group", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Group : FieldBase {
}
[FieldAttribute("{ae069f25-3ac2-4256-b9c3-15dbc15da0e0}", "GUID", "Guid")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.GUID : FieldBase {
}
[BooleanFieldAttribute("{47F68C3B-8930-406f-BDE2-4A8C669EE87C}", "HasCustomEmailBody")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HasCustomEmailBody : FieldBase {
}
[ChoiceFieldAttribute("{A63505F2-F42C-4d94-B03B-78BA2C73D40E}", "HealthReportCategory")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthReportCategory : FieldBase {
}
[NoteFieldAttribute("{B4C8FAEC-5D60-49ee-A5FB-6165F5C3E6A9}", "HealthReportExplanation")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthReportExplanation : FieldBase {
}
[NoteFieldAttribute("{8AA22CAA-8000-44c9-B343-A7705BBED863}", "HealthReportRemedy")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthReportRemedy : FieldBase {
}
[NoteFieldAttribute("{84A318AA-9035-4529-98B9-E08BB20A5DA0}", "HealthReportServers")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthReportServers : FieldBase {
}
[NoteFieldAttribute("{E2B0B450-6795-4b86-86B7-3C21AB1797FB}", "HealthReportServices")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthReportServices : FieldBase {
}
[ChoiceFieldAttribute("{505423C5-F085-48b9-9432-12073D643BA5}", "HealthReportSeverity")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthReportSeverity : FieldBase {
}
[FieldAttribute("{89EFCBD9-9796-41f0-B569-65325F1882DC}", "HealthReportSeverityIcon", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthReportSeverityIcon : FieldBase {
}
[BooleanFieldAttribute("{1E41A55E-EF71-4740-B65A-D11E24C1D00D}", "HealthRuleAutoRepairEnabled")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthRuleAutoRepairEnabled : FieldBase {
}
[BooleanFieldAttribute("{7B2B1712-A73D-4ad7-A9D0-662F0291713D}", "HealthRuleCheckEnabled")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthRuleCheckEnabled : FieldBase {
}
[UrlFieldAttribute("{CF4FF575-F1F5-4c5b-B595-54BBCCCD0C62}", "HealthRuleReportLink")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthRuleReportLink : FieldBase {
}
[ChoiceFieldAttribute("{26761BA3-729D-4bfc-9658-77B55E01F8D5}", "HealthRuleSchedule")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthRuleSchedule : FieldBase {
}
[ChoiceFieldAttribute("{E59F08C9-FA34-4f94-A00A-F6458B1D3C56}", "HealthRuleScope")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthRuleScope : FieldBase {
}
[TextFieldAttribute("{2D6E61D0-BE31-460c-AB8B-77D8B369F517}", "HealthRuleService")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthRuleService : FieldBase {
}
[TextFieldAttribute("{7DD0A092-8704-4ed2-8253-AC309150AC59}", "HealthRuleType")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthRuleType : FieldBase {
}
[TextFieldAttribute("{6B6B1455-09EE-43b7-BEEA-4DC97456DE2F}", "HealthRuleVersion")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HealthRuleVersion : FieldBase {
}
[TextFieldAttribute("{203FA378-6EB8-4ed9-A4F9-221A4C1FBF46}", "Hobbies")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Hobbies : FieldBase {
}
[TextFieldAttribute("{335e22c3-b8a4-4234-9790-7a03eeb7b0d4}", "HolidayDate")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HolidayDate : FieldBase {
}
[TextFieldAttribute("{dc9100ec-251d-4e81-a6cb-d967a065ba24}", "HolidayNightWork")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HolidayNightWork : FieldBase {
}
[TextFieldAttribute("{b5a7350f-2716-46ca-9c42-66bb39d042ec}", "HolidayWork")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HolidayWork : FieldBase {
}
[TextFieldAttribute("{8C5A385D-2FFF-42da-A4C5-F6A904F2E491}", "Home2Number")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Home2Number : FieldBase {
}
[TextFieldAttribute("{5AEABC56-57C6-4861-BC12-BD72C30FC6BD}", "HomeAddressCity")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HomeAddressCity : FieldBase {
}
[TextFieldAttribute("{897ECFD7-4293-4782-B463-BD68440A5FED}", "HomeAddressCountry")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HomeAddressCountry : FieldBase {
}
[TextFieldAttribute("{C0E4B4C6-6245-4846-8561-B8C6C01FEFC1}", "HomeAddressPostalCode")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HomeAddressPostalCode : FieldBase {
}
[TextFieldAttribute("{F5B36006-69B0-418c-BD4A-F25CA7E096BB}", "HomeAddressStateOrProvince")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HomeAddressStateOrProvince : FieldBase {
}
[TextFieldAttribute("{8C66E340-0985-4d68-AF03-3050ECE4862B}", "HomeAddressStreet")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HomeAddressStreet : FieldBase {
}
[TextFieldAttribute("{C189A857-E6B0-488f-83A0-F4EE0A3AD01E}", "HomeFaxNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HomeFaxNumber : FieldBase {
}
[TextFieldAttribute("{2ab923eb-9880-4b47-9965-ebf93ae15487}", "HomePhone")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HomePhone : FieldBase {
}
[TextFieldAttribute("{0c5e0085-eb30-494b-9cdd-ece1d3c649a2}", "HTML_x0020_File_x0020_Type")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.HTML_x0020_File_x0020_Type : FieldBase {
}
[TextFieldAttribute("{B77CDBCF-5DCE-4937-85A7-9FC202705C91}", "IconOverlay")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IconOverlay : FieldBase {
}
[FieldAttribute("{1d22ea11-1e32-424e-89ab-9fedbadb6ce1}", "ID", "Counter")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ID : FieldBase {
}
[TextFieldAttribute("{4CBD96F7-09C6-4b5e-AD42-1CBE123DE63A}", "IMAddress")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IMAddress : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ImageCreateDate : FieldBase {
}
[FieldAttribute("{1944C034-D61B-42af-AA84-647F2E74CA70}", "ImageHeight", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ImageHeight : FieldBase {
}
[FieldAttribute("{922551B8-C7E0-46a6-B7E3-3CF02917F68A}", "ImageSize", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ImageSize : FieldBase {
}
[FieldAttribute("{7E68A0F9-AF76-404c-9613-6F82BC6DC28C}", "ImageWidth", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ImageWidth : FieldBase {
}
[TextFieldAttribute("{D2433B20-3F02-4432-817D-369F104A2DCD}", "IMEComment1")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IMEComment1 : FieldBase {
}
[TextFieldAttribute("{E2C93917-CF32-4b29-BE5C-D71F1BAC7714}", "IMEComment2")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IMEComment2 : FieldBase {
}
[TextFieldAttribute("{7C52F61A-E1E0-4341-9E2F-9B36CDDFDD7C}", "IMEComment3")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IMEComment3 : FieldBase {
}
[TextFieldAttribute("{90244050-709C-4837-9316-93863FBD3DA6}", "IMEDisplay")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IMEDisplay : FieldBase {
}
[ChoiceFieldAttribute("{F3CDBCFD-F456-45f4-9000-B6F34BB95D84}", "IMEPos")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IMEPos : FieldBase {
}
[UrlFieldAttribute("{84B0FE85-6B16-40c3-8507-E56C5BBC482E}", "IMEUrl")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IMEUrl : FieldBase {
}
[TextFieldAttribute("{ee394fd4-4c11-4d8e-baff-83270c1921aa}", "In")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.In : FieldBase {
}
[FieldAttribute("{26c4f53e-733a-4202-814b-377492b6c841}", "Indentation", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Indentation : FieldBase {
}
[FieldAttribute("{68227570-72dd-4816-b6b6-4b81ff99a393}", "IndentLevel", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IndentLevel : FieldBase {
}
[TextFieldAttribute("{7A282F86-69D9-40ff-AE1C-C746CF21256B}", "Initials")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Initials : FieldBase {
}
[FieldAttribute("{50a54da4-1528-4e67-954a-e2d24f1e9efb}", "InstanceID", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.InstanceID : FieldBase {
}
[BooleanFieldAttribute("{AF5036DB-36F4-46c8-BDE7-A677BD0EF280}", "IsActive")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IsActive : FieldBase {
}
[BooleanFieldAttribute("{32B1CA82-A25B-48D1-B78D-3A956BA07C41}", "IsAnswered")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IsAnswered : FieldBase {
}
[TextFieldAttribute("{A579062A-6C1D-4ad3-9D5E-035F9F2C1882}", "ISDNNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ISDNNumber : FieldBase {
}
[BooleanFieldAttribute("{5A034FF8-D7A4-4d69-AB26-5F5A043B572D}", "IsFeatured")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IsFeatured : FieldBase {
}
[BooleanFieldAttribute("{baf7091c-01fb-4831-a975-08254f87f234}", "IsNonWorkingDay")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IsNonWorkingDay : FieldBase {
}
[BooleanFieldAttribute("{7AEAD996-F9F9-4682-9E0E-F5634AB352C8}", "IsQuestion")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IsQuestion : FieldBase {
}
[FieldAttribute("{bd2216c1-a2f3-48c0-b21c-dc297d0cc658}", "IsRootPost", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IsRootPost : FieldBase {
}
[BooleanFieldAttribute("{9ba260b2-85a1-4a32-ad7a-63eaceffe6b4}", "IsSiteAdmin")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IsSiteAdmin : FieldBase {
}
[ChoiceFieldAttribute("{3F277A5C-C7AE-4bbe-9D44-0456FB548F94}", "IssueStatus")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.IssueStatus : FieldBase {
}
[FieldAttribute("{92b8e9d0-a11b-418f-bf1c-c44aaa73075d}", "Item", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Item : FieldBase {
}
[LookupFieldAttribute("{b824e17e-a1b3-426e-aecf-f0184d900485}", "ItemChildCount", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ItemChildCount : FieldBase {
}
[TextFieldAttribute("{c4e0f350-52cc-4ede-904c-dd71a3d11f7d}", "JobTitle")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.JobTitle : FieldBase {
}
[NoteFieldAttribute("{B66E9B50-A28E-469b-B1A0-AF0E45486874}", "Keywords")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Keywords : FieldBase {
}
[ChoiceFieldAttribute("{D81529E8-384C-4ca6-9C43-C86A256E6A44}", "Language")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Language : FieldBase {
}
[LookupFieldAttribute("{173f76c8-aebd-446a-9bc9-769a2bd2c18f}", "Last_x0020_Modified", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Last_x0020_Modified : FieldBase {
}
[TextFieldAttribute("{fdc8216d-dabf-441d-8ac0-f6c626fbdc24}", "LastNamePhonetic")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LastNamePhonetic : FieldBase {
}
[UserFieldAttribute("{7F15088C-1448-41C7-A125-18A3A90CE543}", "LastReplyBy", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LastReplyBy : FieldBase {
}
[TextFieldAttribute("{df7f27a4-d87b-4a97-947b-13d1d4f7e6de}", "Late")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Late : FieldBase {
}
[TextFieldAttribute("{a2a86efe-c28e-4dde-ab56-0afa31664bbc}", "LeaveEarly")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LeaveEarly : FieldBase {
}
[FieldAttribute("{076193bd-865b-4de7-9633-1f12069a6fff}", "LessLink", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LessLink : FieldBase {
}
[FieldAttribute("{61b97279-cbc0-4aa9-a362-f1ff249c1706}", "LimitedBody", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LimitedBody : FieldBase {
}
[FieldAttribute("{46045bc4-283a-4826-b3dd-7a78d790b266}", "LinkDiscussionTitle", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LinkDiscussionTitle : FieldBase {
}
[FieldAttribute("{b4e31c47-f962-4f9f-9132-eb555a1a026c}", "LinkDiscussionTitle2", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LinkDiscussionTitle2 : FieldBase {
}
[FieldAttribute("{3ac9353f-613f-42bd-98e1-530e9fd1cbf6}", "LinkDiscussionTitleNoMenu", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LinkDiscussionTitleNoMenu : FieldBase {
}
[FieldAttribute("{5cc6dc79-3710-4374-b433-61cb4a686c12}", "LinkFilename", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LinkFilename : FieldBase {
}
[FieldAttribute("{9d30f126-ba48-446b-b8f9-83745f322ebe}", "LinkFilenameNoMenu", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LinkFilenameNoMenu : FieldBase {
}
[FieldAttribute("{03F89857-27C9-4b58-AAAB-620647DEDA9B}", "LinkIssueIDNoMenu", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LinkIssueIDNoMenu : FieldBase {
}
[FieldAttribute("{82642ec8-ef9b-478f-acf9-31f7d45fbc31}", "LinkTitle", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LinkTitle : FieldBase {
}
[FieldAttribute("{bc91a437-52e7-49e1-8c4e-4698904b2b6d}", "LinkTitleNoMenu", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.LinkTitleNoMenu : FieldBase {
}
[FieldAttribute("{f44e428b-61c8-4100-a911-a3a635f43bb5}", "List", "Guid")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.List : FieldBase {
}
[TextFieldAttribute("{fce16b4c-fe53-4793-aaab-b4892e736d15}", "Email")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ListEmailAddress : FieldBase {
}
[ChoiceFieldAttribute("{81dde544-1e25-4765-b5fd-ba613198d850}", "ListType")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ListType : FieldBase {
}
[TextFieldAttribute("{288F5F32-8462-4175-8F09-DD7BA29359A9}", "Location")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Location : FieldBase {
}
[TextFieldAttribute("{BA934502-D68D-4960-A54B-51E15FEF5FD3}", "ManagersName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ManagersName : FieldBase {
}
[FieldAttribute("{9B2BED84-7769-40e3-9B1D-7954A4053834}", "MasterSeriesItemID", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.MasterSeriesItemID : FieldBase {
}
[FieldAttribute("{fbba993f-afee-4e00-b9be-36bc660dcdd1}", "MessageBody", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.MessageBody : FieldBase {
}
[TextFieldAttribute("{2ef29342-2f5f-4052-90d3-8192e0705e51}", "MessageId")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.MessageId : FieldBase {
}
[LookupFieldAttribute("{687c7f94-686a-42d3-9b67-2782eac4b4f8}", "MetaInfo", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.MetaInfo : FieldBase {
}
[TextFieldAttribute("{418C8D29-6F2E-44c3-8955-2CD7EC3E2151}", "MiddleName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.MiddleName : FieldBase {
}
[TextFieldAttribute("{3126C2F1-063E-4892-828F-0696EC6E105F}", "Mileage")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Mileage : FieldBase {
}
[UrlFieldAttribute("{53a2a512-d395-4852-8714-d4c27e7585f3}", "MobileContent")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.MobileContent : FieldBase {
}
[TextFieldAttribute("{BF03D3CA-AA6E-4845-809A-B4378B37CE08}", "MobilePhone")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.MobilePhone : FieldBase {
}
[DateTimeFieldAttribute("{28cf69c5-fa48-462a-b5cd-27b6f9d2bd5f}", "Modified")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Modified : FieldBase {
}
[TextFieldAttribute("{822c78e3-1ea9-4943-b449-57863ad33ca9}", "Modified_x0020_By")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Modified_x0020_By : FieldBase {
}
[FieldAttribute("{fb6c2494-1b14-49b0-a7ca-0506d6e85a62}", "MoreLink", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.MoreLink : FieldBase {
}
[TextFieldAttribute("{FB005DAA-CAF9-4ecd-84D5-6BDD2EB3DCE7}", "MUILanguages")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.MUILanguages : FieldBase {
}
[UserFieldAttribute("{078B9DBA-EB8C-4ec5-BFDD-8D220A3FCC5D}", "MyEditor", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.MyEditor : FieldBase {
}
[TextFieldAttribute("{bfc6f32c-668c-43c4-a903-847cca2f9b3c}", "Name")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Name : FieldBase {
}
[FieldAttribute("{76D1CC87-56DE-432c-8A2A-16E5BA5331B3}", "NameOrTitle", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.NameOrTitle : FieldBase {
}
[TextFieldAttribute("{6B0A2CD7-A7F9-41ca-B932-F3BEBB603793}", "Nickname")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Nickname : FieldBase {
}
[TextFieldAttribute("{aaa68c08-6276-4337-9bce-b9cd852c7328}", "NightWork")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.NightWork : FieldBase {
}
[TextFieldAttribute("{A05A8639-088A-4aea-B8A9-AFC888971C81}", "NoCodeVisibility")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.NoCodeVisibility : FieldBase {
}
[BooleanFieldAttribute("{B0E12A3B-CF63-47D1-8418-4EF850D87A3C}", "NoCrawl")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.NoCrawl : FieldBase {
}
[NoteFieldAttribute("{e241f186-9b94-415c-9f66-255ce7f86235}", "Notes")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Notes : FieldBase {
}
[ChoiceFieldAttribute("{44e16d52-da1b-4e72-8bdb-89a3b77ec8b0}", "NumberOfVacation")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.NumberOfVacation : FieldBase {
}
[DateTimeFieldAttribute("{5602dc33-a60a-4dec-bd23-d18dfcef861d}", "Occurred")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Occurred : FieldBase {
}
[TextFieldAttribute("{26169AB2-4BD2-4870-B077-10F49C8A5822}", "Office")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Office : FieldBase {
}
[TextFieldAttribute("{16B6952F-3CE6-45e0-8F4E-42DAC6E12441}", "OffsiteParticipant")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.OffsiteParticipant : FieldBase {
}
[TextFieldAttribute("{4A799BA5-F449-4796-B43E-AA5186C3C414}", "OffsiteParticipantReason")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.OffsiteParticipantReason : FieldBase {
}
[TextFieldAttribute("{C814B2CF-84C6-4f56-B4A4-C766938A97C5}", "ol_Department")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ol_Department : FieldBase {
}
[TextFieldAttribute("{493896DA-0A4F-46ec-A68E-9CFD1A5FC19B}", "ol_EventAddress")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ol_EventAddress : FieldBase {
}
[TextFieldAttribute("{63c1c608-df6f-4cfa-bcab-fdbf9c223e31}", "Oof")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Oof : FieldBase {
}
[NumberFieldAttribute("{ca4addac-796f-4b23-b093-d2a3f65c0774}", "Order")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Order : FieldBase {
}
[TextFieldAttribute("{0850AE15-19DD-431f-9C2F-3AFF3AE292CE}", "OrganizationalIDNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.OrganizationalIDNumber : FieldBase {
}
[TextFieldAttribute("{90FA9A8E-AAC0-4828-9CB4-78F98416AFFA}", "OtherAddressCity")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.OtherAddressCity : FieldBase {
}
[TextFieldAttribute("{3C0E9E00-8FCC-479f-9D8D-3447CDA34C5B}", "OtherAddressCountry")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.OtherAddressCountry : FieldBase {
}
[TextFieldAttribute("{0557C3F8-60C4-4dfb-B5BA-BF3C4E4386B1}", "OtherAddressPostalCode")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.OtherAddressPostalCode : FieldBase {
}
[TextFieldAttribute("{F45883BC-8733-4b77-AB5D-43613986AA12}", "OtherAddressStateOrProvince")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.OtherAddressStateOrProvince : FieldBase {
}
[TextFieldAttribute("{DFF5DFC2-E2B7-4a19-BDE7-76DABC90A3D2}", "OtherAddressStreet")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.OtherAddressStreet : FieldBase {
}
[TextFieldAttribute("{AAD15EB6-D7FD-47b8-ABD4-ADC0FE33A6BA}", "OtherFaxNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.OtherFaxNumber : FieldBase {
}
[TextFieldAttribute("{96E02495-F428-48bc-9F13-06D98BA58C34}", "OtherNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.OtherNumber : FieldBase {
}
[TextFieldAttribute("{fde05b9b-52bf-43dc-9b96-bb35fa7aa05d}", "Out")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Out : FieldBase {
}
[TextFieldAttribute("{dcde7b1f-918b-4ed5-819f-9798f8abac37}", "Outcome")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Outcome : FieldBase {
}
[FieldAttribute("{d8cd5bcf-3768-4d6c-a8aa-fefa3c793d8d}", "Overbook", "Overbook")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Overbook : FieldBase {
}
[TextFieldAttribute("{35d79e8b-3701-4659-9c27-c070ed3c2bfa}", "Overtime")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Overtime : FieldBase {
}
[FieldAttribute("{d4e44a66-ee3a-4d02-88c9-4ec5ff3f4cd5}", "owshiddenversion", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.owshiddenversion : FieldBase {
}
[HTMLFieldAttribute("{F55C4D88-1F2E-4ad9-AAA8-819AF4EE7EE8}", "PublishingPageContent")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PageContent : FieldBase {
}
[TextFieldAttribute("{F79BF074-DAF7-4c06-A314-15B287FDF4C9}", "PagerNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PagerNumber : FieldBase {
}
[FieldAttribute("{a9ec25bf-5a22-4658-bd19-484e52efbe1a}", "ParentFolderId", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ParentFolderId : FieldBase {
}
[LookupFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ParentID : FieldBase {
}
[UserFieldAttribute("{ff90fecb-7f46-44f5-9698-db44a81b2a8b}", "ParentItemEditor", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ParentItemEditor : FieldBase {
}
[FieldAttribute("{7d014138-1886-41f0-834f-BA9f4e72f33b}", "ParentItemID", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ParentItemID : FieldBase {
}
[LookupFieldAttribute("{774EAB3A-855F-4a34-99DA-69DC21043BEC}", "ParentLeafName", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ParentLeafName : FieldBase {
}
[LookupFieldAttribute("{BC1A8EFB-0F4C-49f8-A38F-7FE22AF3D3E0}", "ParentVersionString", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ParentVersionString : FieldBase {
}
[NoteFieldAttribute("{453c2d71-c41e-46bc-97c1-a5a9535053a3}", "Participants")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Participants : FieldBase {
}
[UserFieldAttribute("{8137f7ad-9170-4c1d-a17b-4ca7f557bc88}", "ParticipantsPicker", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ParticipantsPicker : FieldBase {
}
[DateTimeFieldAttribute("{4D2444C2-0E97-476c-A2A3-E9E4A9C73009}", "PendingModTime")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PendingModTime : FieldBase {
}
[NumberFieldAttribute("{d2311440-1ed6-46ea-b46d-daa643dc3886}", "PercentComplete")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PercentComplete : FieldBase {
}
[FieldAttribute("{BA3C27EE-4791-4867-8821-FF99000BAC98}", "PermMask", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PermMask : FieldBase {
}
[UrlFieldAttribute("{5AA071D9-3254-40fb-82DF-5CEDEFF0C41E}", "PersonalWebsite")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PersonalWebsite : FieldBase {
}
[FieldAttribute("{adfe65ee-74bb-4771-bec5-d691d9a6a14e}", "PersonImage", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PersonImage : FieldBase {
}
[FieldAttribute("{b4ab471e-0262-462a-8b3f-c1dfc9e2d5fd}", "PersonViewMinimal", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PersonViewMinimal : FieldBase {
}
[UrlFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Picture : FieldBase {
}
[LookupFieldAttribute("{38bea83b-350a-1a6e-f34a-93a6af31338b}", "PostCategory", "True", "", "")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PostCategory : FieldBase {
}
[LookupFieldAttribute("{c3a92d97-2b77-4a25-9698-3ab54874bc6f}", "Predecessors", "True", "", "Self")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Predecessors : FieldBase {
}
[FieldAttribute("{BD716B26-546D-43f2-B229-62699581FA9F}", "Preview", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Preview : FieldBase {
}
[BooleanFieldAttribute("{3CA8EFCD-96E8-414f-BA90-4C8C4A8BFEF8}", "PreviewExists")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PreviewExists : FieldBase {
}
[FieldAttribute("{8C0D0AAC-9B76-4951-927A-2490ABE13C0B}", "PreviewOnForm", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PreviewOnForm : FieldBase {
}
[UserFieldAttribute("{1982e408-0f94-4149-8349-16f301d89134}", "PreviouslyAssignedTo", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PreviouslyAssignedTo : FieldBase {
}
[TextFieldAttribute("{D69BCC0E-57C3-4f3b-BBC5-B090EDF21F0F}", "PrimaryNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PrimaryNumber : FieldBase {
}
[FieldAttribute("{DCC67EBD-247F-4bee-8626-85FF6F69FBB6}", "PrincipalCount", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PrincipalCount : FieldBase {
}
[ChoiceFieldAttribute("{a8eb573e-9e11-481a-a8c9-1104a54b2fbd}", "Priority")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Priority : FieldBase {
}
[TextFieldAttribute("{F0753A13-44B1-4269-82AF-5C34C57B0C67}", "Profession")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Profession : FieldBase {
}
[LookupFieldAttribute("{c5c4b81c-f1d9-4b43-a6a2-090df32ebb68}", "ProgId", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ProgId : FieldBase {
}
[DateTimeFieldAttribute("{b1b53d80-23d6-e31b-b235-3a286b9f10ea}", "PublishedDate")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.PublishedDate : FieldBase {
}
[ChoiceFieldAttribute("{8ee23f39-e2d1-4b46-8945-42386b24829d}", "Purpose")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Purpose : FieldBase {
}
[FieldAttribute("{e393d344-2e8c-425b-a8c3-89ac3144c9a2}", "QuotedTextWasExpanded", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.QuotedTextWasExpanded : FieldBase {
}
[TextFieldAttribute("{D1AEDE4F-1352-48d9-81E2-B10097C359C1}", "RadioNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.RadioNumber : FieldBase {
}
[NoteFieldAttribute("{D12572D0-0A1E-4438-89B5-4D0430BE7603}", "RecurrenceData")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.RecurrenceData : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.RecurrenceID : FieldBase {
}
[TextFieldAttribute("{9B4CC5A9-1119-43e4-B2A8-412C4031F92B}", "ReferredBy")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ReferredBy : FieldBase {
}
[LookupFieldAttribute("{875FAB27-6E95-463b-A4A6-82544F1027FB}", "RelatedIssues", "True", "", "Self")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.RelatedIssues : FieldBase {
}
[FieldAttribute("{D2A04AFC-9A05-48C8-A7FA-FA98F9496141}", "RelatedItems", "RelatedItems")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.RelatedItems : FieldBase {
}
[NoteFieldAttribute("{1AD7C220-C893-4C15-B95C-B69B992BDEE2}", "RelatedLinks")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.RelatedLinks : FieldBase {
}
[NoteFieldAttribute("{9161f6cb-a8e6-47b8-9d24-89415de691f7}", "RelevantMessages")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.RelevantMessages : FieldBase {
}
[FieldAttribute("{5D36727B-BCB2-47d2-A231-1F0BC63B7439}", "RepairDocument", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.RepairDocument : FieldBase {
}
[FieldAttribute("{87cda0e2-fc57-4eec-a696-b0de2f61f361}", "ReplyNoGif", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ReplyNoGif : FieldBase {
}
[FieldAttribute("{DE1BAA4B-2117-473b-AA0C-4D824034142D}", "RequiredField", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.RequiredField : FieldBase {
}
[BooleanFieldAttribute("{a6fd2bb9-c701-4168-99cc-242e42f7671a}", "Resolved")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Resolved : FieldBase {
}
[UserFieldAttribute("{b4fa187b-eb65-478e-8bc6-93b0da320f03}", "ResolvedBy", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ResolvedBy : FieldBase {
}
[DateTimeFieldAttribute("{c4995c71-4c5c-4e9f-afc1-a9033f2bfde5}", "ResolvedDate")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ResolvedDate : FieldBase {
}
[TextFieldAttribute("{8B02A33C-ACCD-4b73-BCAE-6932C7AAB812}", "RestrictContentTypeId")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.RestrictContentTypeId : FieldBase {
}
[TextFieldAttribute("{EEAEAAF1-4110-465b-905E-DF1073A7E0E6}", "Role")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Role : FieldBase {
}
[TextFieldAttribute("{AD97FBAC-70AF-4860-A078-5EE704946F93}", "RulesUrl")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.RulesUrl : FieldBase {
}
[TextFieldAttribute("{3bdf7bd3-f229-419e-8e12-3dfecb49ed38}", "ScheduledWork")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ScheduledWork : FieldBase {
}
[LookupFieldAttribute("{dddd2420-b270-4735-93b5-92b713d0944d}", "ScopeId", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ScopeId : FieldBase {
}
[FieldAttribute("{7EBF72CA-A307-4c18-9E5B-9D89E1DAE74F}", "SelectedFlag", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.SelectedFlag : FieldBase {
}
[FieldAttribute("{5f47e085-2150-41dc-b661-442f3027f552}", "SelectFilename", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.SelectFilename : FieldBase {
}
[FieldAttribute("{b1f7969b-ea65-42e1-8b54-b588292635f2}", "SelectTitle", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.SelectTitle : FieldBase {
}
[BooleanFieldAttribute("{CB2413F2-7DE9-4afc-8587-1CA3F563F624}", "SendEmailNotification")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.SendEmailNotification : FieldBase {
}
[FieldAttribute("{105f76ce-724a-4bba-aece-f81f2fce58f5}", "ServerUrl", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ServerUrl : FieldBase {
}
[TextFieldAttribute("{48B4A73E-8853-44AC-83A8-3A4BD59CE9EC}", "Service")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Service : FieldBase {
}
[TextFieldAttribute("{691b9a4b-512e-4341-b3f1-68914130d5b2}", "ShortComment")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ShortComment : FieldBase {
}
[NoteFieldAttribute("{4753e73b-5b5d-4bbc-8e09-c9683b0d40a7}", "ShortestThreadIndex")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ShortestThreadIndex : FieldBase {
}
[TextFieldAttribute("{2bec4782-695f-406d-9e50-f1d39a2b8eb6}", "ShortestThreadIndexId")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ShortestThreadIndexId : FieldBase {
}
[LookupFieldAttribute("{8ffccefe-998b-4896-a6df-32d566f69141}", "ShortestThreadIndexIdLookup", "False", "ParentFolderId", "Self")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ShortestThreadIndexIdLookup : FieldBase {
}
[TextFieldAttribute("{086F2B30-460C-4251-B75A-DA88A5B205C1}", "ShowCombineView")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ShowCombineView : FieldBase {
}
[TextFieldAttribute("{11851948-B05E-41be-9D9F-BC3BF55D1DE3}", "ShowRepairView")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ShowRepairView : FieldBase {
}
[TextFieldAttribute("{829c275d-8744-4d9b-a42f-53f53eb60559}", "SipAddress")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.SipAddress : FieldBase {
}
[LookupFieldAttribute("{423874f8-c300-4bfb-b7a1-42e2159e3b19}", "SortBehavior", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.SortBehavior : FieldBase {
}
[TextFieldAttribute("{F590B1DE-8E28-4c17-91BC-BF4096024B7E}", "SpouseName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.SpouseName : FieldBase {
}
[TextFieldAttribute("{05e6336c-d22e-478e-9414-366762883b3f}", "Start")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Start : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.StartDate : FieldBase {
}
[FieldAttribute("{f90bce56-87dc-4d73-bfcb-03fcaf670500}", "StatusBar", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.StatusBar : FieldBase {
}
[TextFieldAttribute("{76A81629-44D4-4ce1-8D4D-6D7EBCD885FC}", "Subject")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Subject : FieldBase {
}
[TextFieldAttribute("{D886EBA3-D018-4103-A322-D5780127EF8A}", "Suffix")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Suffix : FieldBase {
}
[TextFieldAttribute("{E6F528FB-2E22-483d-9C80-F2536ACDC6DE}", "SurveyTitle")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.SurveyTitle : FieldBase {
}
[BooleanFieldAttribute("{AF0A3D4B-3CEB-449E-9BF4-51103F2032E3}", "SystemTask")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.SystemTask : FieldBase {
}
[TextFieldAttribute("{3914F98E-6D99-4218-9BA3-AF7370B9E7BC}", "TaskCompanies")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.TaskCompanies : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.TaskDueDate : FieldBase {
}
[UserFieldAttribute("{50d8f08c-8e99-4948-97bf-2be41fa34a0d}", "TaskGroup", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.TaskGroup : FieldBase {
}
[ChoiceFieldAttribute("{c15b34c3-ce7d-490a-b133-3f4de8801b76}", "TaskStatus")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.TaskStatus : FieldBase {
}
[FieldAttribute("{8D96AA48-9DFF-46cf-8538-84C747FFA877}", "TaskType", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.TaskType : FieldBase {
}
[TextFieldAttribute("{E7BE7F3C-C436-481d-8865-669E5146F53C}", "TelexNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.TelexNumber : FieldBase {
}
[TextFieldAttribute("{4B1BF6C6-4F39-45ac-ACD5-16FE7A214E5E}", "TemplateUrl")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.TemplateUrl : FieldBase {
}
[FieldAttribute("{cef73bf1-edf6-4dd9-9098-a07d83984700}", "ThreadIndex", "ThreadIndex")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ThreadIndex : FieldBase {
}
[FieldAttribute("{58ca6516-51cd-41fb-a908-dd2a4aeea8bc}", "Threading", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Threading : FieldBase {
}
[FieldAttribute("{c55a4674-640b-4bae-8738-ce0439e6f6d4}", "ThreadingControls", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ThreadingControls : FieldBase {
}
[TextFieldAttribute("{769b99d9-d361-4948-b687-f01332391629}", "ThreadTopic")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ThreadTopic : FieldBase {
}
[FieldAttribute("{AC7BB138-02DC-40eb-B07A-84C15575B6E9}", "Thumbnail", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Thumbnail : FieldBase {
}
[BooleanFieldAttribute("{1F43CD21-53C5-44c5-8675-B8BB86083244}", "ThumbnailExists")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ThumbnailExists : FieldBase {
}
[FieldAttribute("{9941082A-4160-46a1-A5B2-03394BFDF7EE}", "ThumbnailOnForm", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ThumbnailOnForm : FieldBase {
}
[FieldAttribute("{6CC1C612-748A-48d8-88F2-944F477F301B}", "TimeZone", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.TimeZone : FieldBase {
}
[TextFieldAttribute("{fa564e0f-0c70-4ab9-b863-0177e6ddd247}", "Title")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Title : FieldBase {
}
[FieldAttribute("{e451420d-4e62-43e3-af83-010d36e353a2}", "ToggleQuotedText", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.ToggleQuotedText : FieldBase {
}
[NumberFieldAttribute("{F3C4A259-19A2-44b8-AB3D-E9145D07D538}", "TotalWork")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.TotalWork : FieldBase {
}
[NoteFieldAttribute("{6d0f8993-5050-41f3-be6c-18902d282357}", "TrimmedBody")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.TrimmedBody : FieldBase {
}
[TextFieldAttribute("{F54697F1-0357-4c5a-A711-0CB654BC73E4}", "TTYTDDNumber")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.TTYTDDNumber : FieldBase {
}
[FieldAttribute("{63055D04-01B5-48f3-9E1E-E564E7C6B23B}", "UID", "Guid")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.UID : FieldBase {
}
[ChoiceFieldAttribute("{8e334549-c2bd-4110-9f61-672971be6504}", "UIVersion")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.UIVersion : FieldBase {
}
[LookupFieldAttribute("{4b7403de-8d94-43e8-9f0f-137a3e298126}", "UniqueId", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.UniqueId : FieldBase {
}
[DateTimeFieldAttribute("{fe3344ab-b468-471f-8fa5-9b506c7d1557}", "Until")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Until : FieldBase {
}
[UrlFieldAttribute("{c29e077d-f466-4d8e-8bbe-72b66c5f205c}", "URL")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.URL : FieldBase {
}
[FieldAttribute("{AEAF07EE-D2FB-448b-A7A3-CF7E062D6C2A}", "URLNoMenu", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.URLNoMenu : FieldBase {
}
[FieldAttribute("{2a9ab6d3-268a-4c1c-9897-e5f018f87e64}", "URLwMenu", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.URLWithMenu : FieldBase {
}
[FieldAttribute("{2a9ab6d3-268a-4c1c-9897-e5f018f87e64}", "URLwMenu", "Computed")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.URLwMenu : FieldBase {
}
[FieldAttribute("{5928ff1f-daa1-406c-b4a9-190485a448cb}", "User", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.User : FieldBase {
}
[TextFieldAttribute("{566656F5-17B3-4291-98A5-5074AADF77B3}", "UserField1")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.UserField1 : FieldBase {
}
[TextFieldAttribute("{182D1B9E-1718-4e11-B279-38F7ED0A20D6}", "UserField2")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.UserField2 : FieldBase {
}
[TextFieldAttribute("{A03EB53E-F123-4af9-9355-F92BD75C00B3}", "UserField3")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.UserField3 : FieldBase {
}
[TextFieldAttribute("{ADEFA4CA-14C3-4694-B531-F51B706EFE9D}", "UserField4")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.UserField4 : FieldBase {
}
[BooleanFieldAttribute("{E8A80787-5F99-459a-AF8D-B830157ED45F}", "UserInfoHidden")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.UserInfoHidden : FieldBase {
}
[UserFieldAttribute("{211a8cfc-93b7-4173-9254-0bfe2d1643da}", "UserName", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.UserName : FieldBase {
}
[NoteFieldAttribute("{6DF9BD52-550E-4a30-BC31-A4366832A87E}", "V3Comments")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.V3Comments : FieldBase {
}
[FieldAttribute("{7111aa1b-e7ae-4b69-acaf-db669b76e03a}", "V4CallTo", "CallTo")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.V4CallTo : FieldBase {
}
[DateTimeFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.V4HolidayDate : FieldBase {
}
[UserFieldAttribute("{e0f298a5-7e3e-4895-9ff8-90d88ec4526d}", "V4SendTo", "False", "ImnName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.V4SendTo : FieldBase {
}
[ChoiceFieldAttribute("{dfd58778-bf8e-4769-8265-09ac03159eed}", "Vacation")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Vacation : FieldBase {
}
[LookupFieldAttribute("{4a389cb9-54dd-4287-a71a-90ff362028bc}", "VirusStatus", "False", "ID", "Docs")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.VirusStatus : FieldBase {
}
[UrlFieldAttribute("{a71affd2-dcc7-4529-81bc-2fe593154a5f}", "WebPage")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WebPage : FieldBase {
}
[BooleanFieldAttribute("{cf68a174-123b-413e-9ec1-b43e3a3175d7}", "WhatsNew")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WhatsNew : FieldBase {
}
[FieldAttribute("{e2a07293-596a-4c59-9089-5c4f9339077f}", "Whereabout", "Whereabout")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Whereabout : FieldBase {
}
[TextFieldAttribute("{F08AB41D-9A03-49ae-9413-6CD284A15625}", "wic_System_Copyright")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.wic_System_Copyright : FieldBase {
}
[NoteFieldAttribute("{C33527B4-D920-4587-B791-45024D00068A}", "WikiField")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WikiField : FieldBase {
}
[NoteFieldAttribute("{fc2e188e-ba91-48c9-9dd3-16431afddd50}", "WorkAddress")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkAddress : FieldBase {
}
[TextFieldAttribute("{6ca7bd7f-b490-402e-af1b-2813cf087b1e}", "WorkCity")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkCity : FieldBase {
}
[TextFieldAttribute("{3f3a5c85-9d5a-4663-b925-8b68a678ea3a}", "WorkCountry")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkCountry : FieldBase {
}
[TextFieldAttribute("{9d1cacc8-f452-4bc1-a751-050595ad96e1}", "WorkFax")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkFax : FieldBase {
}
[FieldAttribute("{8d426880-8d96-459b-ae48-e8b3836d8b9d}", "WorkflowAssociation", "Guid")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkflowAssociation : FieldBase {
}
[TextFieldAttribute("{5263CD09-A770-4549-B012-D9F3DF3D8DF6}", "WorkflowDisplayName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkflowDisplayName : FieldBase {
}
[FieldAttribute("{de21c770-a12b-4f88-af4b-aeebd897c8c2}", "WorkflowInstance", "Guid")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkflowInstance : FieldBase {
}
[FieldAttribute("{de8beacf-5505-47cd-80a6-aa44e7ffe2f4}", "WorkflowInstanceID", "Guid")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkflowInstanceID : FieldBase {
}
[FieldAttribute("{8E234C69-02B0-42d9-8046-D5F49BF0174F}", "WorkflowItemId", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkflowItemId : FieldBase {
}
[UrlFieldAttribute("{58DDDA52-C2A3-4650-9178-3BBC1F6E36DA}", "WorkflowLink")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkflowLink : FieldBase {
}
[FieldAttribute("{1BFEE788-69B7-4765-B109-D4D9C31D1AC1}", "WorkflowListId", "Guid")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkflowListId : FieldBase {
}
[TextFieldAttribute("{E506D6CA-C2DA-4164-B858-306F1C41C9EC}", "WorkflowName")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkflowName : FieldBase {
}
[TextFieldAttribute("{18E1C6FA-AE37-4102-890A-CFB0974EF494}", "WorkflowOutcome")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkflowOutcome : FieldBase {
}
[FieldAttribute("{bfb1589e-2016-4b98-ae62-e91979c3224f}", "WorkflowTemplate", "Guid")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkflowTemplate : FieldBase {
}
[FieldAttribute("{f1e020bc-ba26-443f-bf2f-b68715017bbc}", "WorkflowVersion", "Integer")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkflowVersion : FieldBase {
}
[TextFieldAttribute("{fd630629-c165-4513-b43c-fdb16b86a14d}", "WorkPhone")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkPhone : FieldBase {
}
[UrlFieldAttribute("{881EAC4A-55A5-48b6-A28E-8329D7486120}", "Workspace")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.Workspace : FieldBase {
}
[FieldAttribute("{08FC65F9-48EB-4e99-BD61-5946C439E691}", "WorkspaceLink", "CrossProjectLink")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkspaceLink : FieldBase {
}
[TextFieldAttribute("{ceac61d3-dda9-468b-b276-f4a6bb93f14f}", "WorkState")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkState : FieldBase {
}
[TextFieldAttribute("{9a631556-3dac-49db-8d2f-fb033b0fdc24}", "WorkZip")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.WorkZip : FieldBase {
}
[TextFieldAttribute("{CD1ECB9F-DD4E-4f29-AB9E-E9FF40048D64}", "xd_ProgID")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.xd_ProgID : FieldBase {
}
[BooleanFieldAttribute("{FBF29B2D-CAE5-49aa-8E0A-29955B540122}", "xd_Signature")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.xd_Signature : FieldBase {
}
[NoteFieldAttribute("{C4B72ED6-45AA-4422-BFF1-2B6750D30819}", "XMLTZone")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.XMLTZone : FieldBase {
}
[TextFieldAttribute("{566DA236-762B-4a76-AD1F-B08B3C703FCE}", "XomlUrl")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.XomlUrl : FieldBase {
}
[TextFieldAttribute("{4630E6AC-E543-4667-935A-2CC665E9B755}", "XSLStyleBaseView")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.XSLStyleBaseView : FieldBase {
}
[TextFieldAttribute("{DFFFBBFB-0CC3-4ce7-8CB3-A2958FB726A1}", "XSLStyleCategory")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.XSLStyleCategory : FieldBase {
}
[UrlFieldAttribute]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.XSLStyleIconUrl : FieldBase {
}
[TextFieldAttribute("{ACB9088A-A171-4b99-AA7A-10388586BC74}", "XSLStyleRequiredFields")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.XSLStyleRequiredFields : FieldBase {
}
[ChoiceFieldAttribute("{4499086F-9AC1-41df-86C3-D8C1F8FC769A}", "XSLStyleWPType")]
public class Omnia.Fx.SharePoint.Fields.BuiltIn.XSLStyleWPType : FieldBase {
}
public class Omnia.Fx.SharePoint.Fields.FieldBase : object {
    private FieldAttribute _fieldAttribute;
    public Nullable`1<Guid> Id { get; }
    public FieldAttribute FieldAttribute { get; public set; }
    public Nullable`1<Guid> get_Id();
    public FieldAttribute get_FieldAttribute();
    public void set_FieldAttribute(FieldAttribute value);
    public virtual void OnAdded(Web parent);
    public virtual void OnUpdated(Web parent);
}
public class Omnia.Fx.SharePoint.Fields.FieldReference : object {
    [CompilerGeneratedAttribute]
private int <OrderedIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private FieldBase <Field>k__BackingField;
    public Guid Id { get; }
    public string InternalName { get; }
    public int OrderedIndex { get; public set; }
    internal FieldBase Field { get; }
    internal FieldAttribute FieldAttribute { get; }
    public FieldReference(Type fieldType);
    public FieldReference(FieldAttribute fieldAttribute);
    public FieldReference(string fieldId);
    public Guid get_Id();
    public string get_InternalName();
    [CompilerGeneratedAttribute]
public int get_OrderedIndex();
    [CompilerGeneratedAttribute]
public void set_OrderedIndex(int value);
    [CompilerGeneratedAttribute]
internal FieldBase get_Field();
    internal FieldAttribute get_FieldAttribute();
    private void Init();
}
internal interface Omnia.Fx.SharePoint.Fields.ISharePointFieldHelper {
    public abstract virtual ValueTask`1<Field> GetFieldAsync(Guid id, Action`2<ClientRuntimeContext, Field> loadAction, bool force);
    public abstract virtual ValueTask`1<Field> GetFieldAsync(string internalName, Action`2<ClientRuntimeContext, Field> loadAction);
    public abstract virtual Field AddField(FieldAttribute fieldAttribute);
}
internal interface Omnia.Fx.SharePoint.Fields.ISharePointFieldHelperFull {
    public abstract virtual bool LoadWebFields();
    public abstract virtual Field GetFieldFromWebFields(LoadWebFieldsCallbackParams callbackParams, Boolean& waitForNextExecute);
}
public interface Omnia.Fx.SharePoint.Fields.ISharePointFieldInfo {
    public Field Field { get; }
    public abstract virtual Field get_Field();
    public abstract virtual ISharePointFieldInfo AddToContentType(bool updateChildren);
    public abstract virtual ISharePointFieldInfo AddToContentType(string contentTypeId, bool updateChildren);
    public abstract virtual ISharePointFieldInfo AddToList();
    public abstract virtual ISharePointFieldInfo AddToList(string listRelativeUrl);
}
public interface Omnia.Fx.SharePoint.Fields.ISharePointFieldProvisioningSetup {
    public abstract virtual ISharePointFieldProvisioningSetup Configure(Action`1<FieldAttribute> configureFunction);
    public abstract virtual ISharePointFieldProvisioningSetup OnAdded(Action`1<Web> configureFunction);
    public abstract virtual ISharePointFieldProvisioningSetup OnUpdated(Action`1<Web> configureFunction);
}
public enum Omnia.Fx.SharePoint.Fields.ListItemMenuState : Enum {
    public int value__;
    public static ListItemMenuState Allowed;
    public static ListItemMenuState Required;
    public static ListItemMenuState Prohibited;
}
public enum Omnia.Fx.SharePoint.Fields.RichTextMode : Enum {
    public int value__;
    public static RichTextMode Compatible;
    public static RichTextMode FullHtml;
    public static RichTextMode HtmlAsXml;
    public static RichTextMode ThemeHtml;
}
[BooleanFieldAttribute("24095fb8-9b62-40e2-a8d0-a48de3d5d109", "omfxSampleBooleanField")]
public class Omnia.Fx.SharePoint.Fields.Sample.BooleanField : FieldBase {
}
[CalculatedFieldAttribute("0746cfb6-f57d-4020-a5db-26fc16f76f3c", "omfxSampleCalculatedField")]
public class Omnia.Fx.SharePoint.Fields.Sample.CalculatedField : object {
}
[ChoiceFieldAttribute("96930258-d446-41ca-9566-914c5e241b87", "omfxSampleChoiceField2018071902")]
public class Omnia.Fx.SharePoint.Fields.Sample.ChoiceField : FieldBase {
}
[LookupFieldAttribute("4d7ff903-546f-41d2-873a-d9c789c1c2a9", "omfxSampleLookupField2018071902", "True", "omfxSampleTextField", "Lists/TestLookupList")]
public class Omnia.Fx.SharePoint.Fields.Sample.LookupField : FieldBase {
}
[ManagedMetadataFieldAttribute("6e24b7c9-cef4-4e21-8c4b-497b708f98f0", "omfxSampleManagedMetadataField2018071902", "True", "", "People", "Job Title", "Administrative Assistant")]
public class Omnia.Fx.SharePoint.Fields.Sample.ManagedMetadataField : FieldBase {
}
[NoteFieldAttribute("7f6cd614-b897-4a86-b755-58cf96232eb0", "omfxSampleNoteField")]
public class Omnia.Fx.SharePoint.Fields.Sample.NoteField : object {
}
[TextFieldAttribute("67a3056b-66b6-48f6-842a-dc7a67eeb4a7", "omfxSampleTextField2018071902")]
public class Omnia.Fx.SharePoint.Fields.Sample.TextField : FieldBase {
}
internal class Omnia.Fx.SharePoint.Fields.SharePointFieldHandler : object {
    private SharePointFieldModel _sharePointFieldModel;
    private Dictionary`2<string, bool> _contentTypeIds;
    private List`1<string> _listRelativeUrls;
    private Action`1<Web> _afterAddedFunction;
    private Action`1<Web> _afterUpdatedFunction;
    private Dictionary`2<ContentType, bool> _contentTypes;
    private List`1<List> _lists;
    private Func`2<string, ContentType> _getContentTypeFunc;
    private Func`2<string, List> _getListFunc;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    public Field Field { get; private set; }
    public SharePointFieldHandler(SharePointFieldModel sharePointFieldModel);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
private void set_Field(Field value);
    public sealed virtual ISharePointFieldInfo AddToContentType(bool updateChildren);
    public sealed virtual ISharePointFieldInfo AddToContentType(string contentTypeId, bool updateChildren);
    public sealed virtual ISharePointFieldInfo AddToList(string listRelativeUrl);
    public sealed virtual ISharePointFieldInfo AddToList();
    public sealed virtual ISharePointFieldProvisioningSetup Configure(Action`1<FieldAttribute> configureFunction);
    public sealed virtual ISharePointFieldProvisioningSetup OnAdded(Action`1<Web> configureFunction);
    public sealed virtual ISharePointFieldProvisioningSetup OnUpdated(Action`1<Web> configureFunction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Fields.SharePointFieldHandler/<RetrieveNotEnsureMainEntityAsync>d__21")]
public sealed virtual Task RetrieveNotEnsureMainEntityAsync(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Fields.SharePointFieldHandler/<EnsureMainEntityAsync>d__22")]
public sealed virtual Task EnsureMainEntityAsync(ISharePointEntityHelper sharePointEntityHelper);
    public sealed virtual Task ExecuteRelatedActionsAsync(ISharePointEntityHelper sharePointEntityHelper);
    private bool LoadContentTypes(ISharePointEntityHelper sharePointEntityHelper);
    private bool LoadLists(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Fields.SharePointFieldHandler/<LoadFieldAttributeAsync>d__26")]
private Task LoadFieldAttributeAsync(ISharePointEntityHelper sharePointEntityHelper);
    private Task CheckInitStatusAsync(ISharePointEntityHelper sharePointEntityHelper);
    private void UpdateField(ISharePointEntityHelper sharePointEntityHelper, bool force);
    private Task CheckUpdateFieldDoneAsync(ISharePointEntityHelper sharePointEntityHelper);
    private Task AddFieldToContentTypesAsync(ISharePointEntityHelper sharePointEntityHelper);
    private Task AddFieldToListsAsync(ISharePointEntityHelper sharePointEntityHelper);
}
internal class Omnia.Fx.SharePoint.Fields.SharePointFieldHelper : object {
    private Web _web;
    private Dictionary`2<Guid, Field> _spFieldsDictionary;
    private Dictionary`2<string, Field> _spFieldsDictionaryByInternalName;
    public SharePointFieldHelper(Web web);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Fields.SharePointFieldHelper/<GetFieldAsync>d__4")]
public sealed virtual ValueTask`1<Field> GetFieldAsync(Guid id, Action`2<ClientRuntimeContext, Field> loadAction, bool force);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Fields.SharePointFieldHelper/<GetFieldAsync>d__5")]
public sealed virtual ValueTask`1<Field> GetFieldAsync(string internalName, Action`2<ClientRuntimeContext, Field> loadAction);
    public sealed virtual bool LoadWebFields();
    public sealed virtual Field GetFieldFromWebFields(LoadWebFieldsCallbackParams callbackParams, Boolean& waitForNextExecute);
    public sealed virtual Field AddField(FieldAttribute fieldAttribute);
    public sealed virtual void CleanupState();
    private void InvokeLoadForField(Field field, Action`2<ClientRuntimeContext, Field> loadAction);
    private Dictionary`2<Guid, Field> EnsureFieldDictionary();
    private Dictionary`2<string, Field> EnsureFieldDictionaryByInternalName();
}
internal class Omnia.Fx.SharePoint.Fields.SharePointFieldModel : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalName>k__BackingField;
    [CompilerGeneratedAttribute]
private FieldReference <FieldReference>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<ClientRuntimeContext, Field> <LoadAction>k__BackingField;
    public Guid Id { get; private set; }
    public string InternalName { get; private set; }
    public FieldReference FieldReference { get; private set; }
    public Action`2<ClientRuntimeContext, Field> LoadAction { get; public set; }
    public bool NeedToEnsure { get; }
    public SharePointFieldModel(Type fieldType, bool needToEnsure);
    public SharePointFieldModel(FieldAttribute fieldAttribute);
    public SharePointFieldModel(Guid id);
    public SharePointFieldModel(string internalName);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_InternalName();
    [CompilerGeneratedAttribute]
private void set_InternalName(string value);
    [CompilerGeneratedAttribute]
public FieldReference get_FieldReference();
    [CompilerGeneratedAttribute]
private void set_FieldReference(FieldReference value);
    [CompilerGeneratedAttribute]
public Action`2<ClientRuntimeContext, Field> get_LoadAction();
    [CompilerGeneratedAttribute]
public void set_LoadAction(Action`2<ClientRuntimeContext, Field> value);
    public bool get_NeedToEnsure();
}
internal interface Omnia.Fx.SharePoint.Files.ISharePointFileHelper {
    public abstract virtual ValueTask`1<File> GetFileAsync(string fileServerRelativeUrl, Action`2<ClientRuntimeContext, File> loadAction);
    public abstract virtual ValueTask`1<File> EnsureFileAsync(List list, FileSetting fileSetting, string folderRelativePath);
    public abstract virtual ValueTask`1<File> MoveFileAsync(List list, string oldFileRelativeUrl, string newFileRelativeUrl);
    public abstract virtual ValueTask`1<bool> CheckOutIfNeededAsync(List list, File file);
    public abstract virtual ValueTask`1<bool> CheckInIfNeededAsync(List list, File file, string comment, bool publish, bool approve);
}
public interface Omnia.Fx.SharePoint.Files.ISharePointFileInfo {
    public abstract virtual ISharePointFileInfo AddToList(string folderRelativePath);
    public abstract virtual ISharePointFileInfo AddToList(string listRelativeUrl, string folderRelativePath);
    public abstract virtual ISharePointFileInfo AddToList(ListTemplateType listTemplateType, string folderRelativePath);
    public abstract virtual ISharePointFileInfo Configure(Action`1<FileSetting> configureFunction);
}
internal interface Omnia.Fx.SharePoint.Files.ISharePointFileInfoFull {
    public abstract virtual Task ExecuteActionsAsync(ISharePointEntityHelper sharePointEntityHelper);
}
public class Omnia.Fx.SharePoint.Files.Models.FileSetting : object {
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentString>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <ListItemProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckInComment>k__BackingField;
    public string FileName { get; public set; }
    public string ContentString { get; public set; }
    public Dictionary`2<string, string> ListItemProperties { get; public set; }
    public string CheckInComment { get; public set; }
    public Byte[] Content { get; }
    public FileSetting(string fileName, string content);
    public FileSetting(string fileName, Byte[] content);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_ContentString();
    [CompilerGeneratedAttribute]
public void set_ContentString(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_ListItemProperties();
    [CompilerGeneratedAttribute]
public void set_ListItemProperties(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_CheckInComment();
    [CompilerGeneratedAttribute]
public void set_CheckInComment(string value);
    public Byte[] get_Content();
}
internal class Omnia.Fx.SharePoint.Files.Models.ListToDeploySetting : object {
    [CompilerGeneratedAttribute]
private string <ListRelativeUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private ListTemplateType <TemplateType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FolderRelativePath>k__BackingField;
    public string ListRelativeUrl { get; public set; }
    public ListTemplateType TemplateType { get; public set; }
    public string FolderRelativePath { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ListRelativeUrl();
    [CompilerGeneratedAttribute]
public void set_ListRelativeUrl(string value);
    [CompilerGeneratedAttribute]
public ListTemplateType get_TemplateType();
    [CompilerGeneratedAttribute]
public void set_TemplateType(ListTemplateType value);
    [CompilerGeneratedAttribute]
public string get_FolderRelativePath();
    [CompilerGeneratedAttribute]
public void set_FolderRelativePath(string value);
}
internal class Omnia.Fx.SharePoint.Files.SharePointFileHandler : object {
    private List`1<ListToDeploySetting> _listRelativeUrlSettings;
    private List`1<ListToDeploySetting> _listTemplateTypeSettings;
    private Func`2<string, List> _getListFunc;
    private Dictionary`2<ListToDeploySetting, List> _listsByRelativeUrl;
    [CompilerGeneratedAttribute]
private FileSetting <FileSetting>k__BackingField;
    public FileSetting FileSetting { get; private set; }
    public SharePointFileHandler(FileSetting fileSetting);
    [CompilerGeneratedAttribute]
public FileSetting get_FileSetting();
    [CompilerGeneratedAttribute]
private void set_FileSetting(FileSetting value);
    public sealed virtual ISharePointFileInfo AddToList(string folderRelativePath);
    public sealed virtual ISharePointFileInfo AddToList(string listRelativeUrl, string folderRelativePath);
    public sealed virtual ISharePointFileInfo AddToList(ListTemplateType listTemplateType, string folderRelativePath);
    public sealed virtual ISharePointFileInfo Configure(Action`1<FileSetting> configureFunction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Files.SharePointFileHandler/<ExecuteActionsAsync>d__13")]
public sealed virtual Task ExecuteActionsAsync(ISharePointEntityHelper sharePointEntityHelper);
    private bool LoadWebTemplate(Web web);
    private bool LoadListsByRelativeUrls(ISharePointEntityHelper sharePointEntityHelper);
    private bool IsAddToMasterPageCatalog();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Files.SharePointFileHandler/<EnsureFileInTemplateTypeListsAsync>d__17")]
private Task EnsureFileInTemplateTypeListsAsync(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Files.SharePointFileHandler/<LoadListsByTemplateTypesAsync>d__18")]
private ValueTask`1<Dictionary`2<ListToDeploySetting, List>> LoadListsByTemplateTypesAsync(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Files.SharePointFileHandler/<EnsureFileToListsAsync>d__19")]
private Task EnsureFileToListsAsync(Dictionary`2<ListToDeploySetting, List> lists, ISharePointEntityHelper sharePointEntityHelper);
}
internal class Omnia.Fx.SharePoint.Files.SharePointFileHelper : object {
    private Web _web;
    public SharePointFileHelper(Web web);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Files.SharePointFileHelper/<GetFileAsync>d__2")]
public sealed virtual ValueTask`1<File> GetFileAsync(string fileServerRelativeUrl, Action`2<ClientRuntimeContext, File> loadAction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Files.SharePointFileHelper/<EnsureFileAsync>d__3")]
public sealed virtual ValueTask`1<File> EnsureFileAsync(List list, FileSetting fileSetting, string folderRelativePath);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Files.SharePointFileHelper/<MoveFileAsync>d__4")]
public sealed virtual ValueTask`1<File> MoveFileAsync(List list, string oldFileRelativeUrl, string newFileRelativeUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Files.SharePointFileHelper/<CheckOutIfNeededAsync>d__5")]
public sealed virtual ValueTask`1<bool> CheckOutIfNeededAsync(List list, File file);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Files.SharePointFileHelper/<CheckInIfNeededAsync>d__6")]
public sealed virtual ValueTask`1<bool> CheckInIfNeededAsync(List list, File file, string comment, bool publish, bool approve);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Files.SharePointFileHelper/<EnsureFoldersAsync>d__7")]
private ValueTask`1<Folder> EnsureFoldersAsync(Folder rootFolder, string path);
    private void LoadRequiredInfoForCheckIn(File file);
    private bool UpdateProperties(File file, Dictionary`2<string, string> properties);
    private bool UpdateProperty(ListItem item, string key, string value);
    private void InvokeLoadForFile(File file, Action`2<ClientRuntimeContext, File> loadAction);
}
internal class Omnia.Fx.SharePoint.HostConfiguration.ConfiguredImplementations.AuthorizationConfiguration : OmniaHostConfigurationBase {
    public AuthorizationConfiguration(IOmniaNetStandardConfiguration config);
    public void AddImplementations();
    [CompilerGeneratedAttribute]
private void <AddImplementations>b__1_0(IServiceCollection services);
}
internal class Omnia.Fx.SharePoint.HostConfiguration.ConfiguredImplementations.DefaultConfiguration : OmniaHostConfigurationBase {
    public DefaultConfiguration(IOmniaNetStandardConfiguration config);
    public void AddImplementations();
    private void AddOwnServices(IServiceCollection services);
    [CompilerGeneratedAttribute]
private void <AddImplementations>b__1_0(IServiceCollection services);
}
public interface Omnia.Fx.SharePoint.HostConfiguration.IOmniaFxSharePointEmptyConfigurationOptions {
    public abstract virtual IOmniaFxSharePointEmptyConfigurationOptions AddFxSharePointDefault();
    public abstract virtual IOmniaFxSharePointEmptyConfigurationOptions AddFxSharePointAuthorization();
}
public interface Omnia.Fx.SharePoint.HostConfiguration.IOmniaFxSharePointEmptyOptionsProvider`1 {
    public abstract virtual TReturn AddOmniaFxSharePoint(Action`1<IOmniaFxSharePointRequiredImplementations> requiredImplementations);
    public abstract virtual TReturn AddOmniaFxSharePointWithEmptyOptions(Action`1<IOmniaFxSharePointEmptyConfigurationOptions> configureOptions);
}
public interface Omnia.Fx.SharePoint.HostConfiguration.IOmniaFxSharePointRequiredConfiguration {
    public abstract virtual void AddISharePointRequestContextImpl(IServiceCollection services, Func`2<IServiceProvider, ISharePointScopedContext> implementationFactory);
}
public interface Omnia.Fx.SharePoint.HostConfiguration.IOmniaFxSharePointRequiredImplementations {
}
internal class Omnia.Fx.SharePoint.HostConfiguration.OmniaFxSharePointConfiguration : object {
    [CompilerGeneratedAttribute]
private List`1<Action> <DefaultOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Action> <OptionalOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaNetStandardConfiguration <Config>k__BackingField;
    private List`1<Action> DefaultOptions { get; }
    private List`1<Action> OptionalOptions { get; }
    private IOmniaNetStandardConfiguration Config { get; }
    public OmniaFxSharePointConfiguration(IOmniaNetStandardConfiguration config);
    [CompilerGeneratedAttribute]
private List`1<Action> get_DefaultOptions();
    [CompilerGeneratedAttribute]
private List`1<Action> get_OptionalOptions();
    [CompilerGeneratedAttribute]
private IOmniaNetStandardConfiguration get_Config();
    public sealed virtual IOmniaFxSharePointRequiredImplementations AddOmniaFx(Action`1<IOmniaFxRequiredImplementations> configureOptions, Action`1<IOmniaFxOptionalImplementations> configureOptionalOptions);
    public sealed virtual IOmniaFxSharePointRequiredImplementations AddOmniaFxWithEmptyOptions(Action`1<IOmniaFxEmptyConfigurationOptions> configureOptions);
    private sealed virtual override IOmniaFxSharePointEmptyConfigurationOptions Omnia.Fx.HostConfiguration.IOmniaFxEmptyOptionsProvider<Omnia.Fx.SharePoint.HostConfiguration.IOmniaFxSharePointEmptyConfigurationOptions>.AddOmniaFx(Action`1<IOmniaFxRequiredImplementations> configureOptions, Action`1<IOmniaFxOptionalImplementations> configureOptionalOptions);
    private sealed virtual override IOmniaFxSharePointEmptyConfigurationOptions Omnia.Fx.HostConfiguration.IOmniaFxEmptyOptionsProvider<Omnia.Fx.SharePoint.HostConfiguration.IOmniaFxSharePointEmptyConfigurationOptions>.AddOmniaFxWithEmptyOptions(Action`1<IOmniaFxEmptyConfigurationOptions> configureOptions);
    public sealed virtual IOmniaFxSharePointEmptyConfigurationOptions AddFxSharePointAuthorization();
    public sealed virtual IOmniaFxSharePointEmptyConfigurationOptions AddFxSharePointDefault();
    internal IOmniaNetStandardConfiguration DoDefaultConfigurations();
    internal IOmniaNetStandardConfiguration DoEmptyConfigurations();
    private void DoConfigurations();
    [CompilerGeneratedAttribute]
private void <AddFxSharePointAuthorization>b__14_0();
    [CompilerGeneratedAttribute]
private void <AddFxSharePointDefault>b__15_0();
}
internal class Omnia.Fx.SharePoint.HostConfiguration.OmniaFxSharePointRequiredConfiguration : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<Type, ConfigInfo> <RequiredConfigured>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaNetStandardConfiguration <Config>k__BackingField;
    private Dictionary`2<Type, ConfigInfo> RequiredConfigured { get; private set; }
    private IOmniaNetStandardConfiguration Config { get; }
    public OmniaFxSharePointRequiredConfiguration(IOmniaNetStandardConfiguration config);
    [CompilerGeneratedAttribute]
private Dictionary`2<Type, ConfigInfo> get_RequiredConfigured();
    [CompilerGeneratedAttribute]
private void set_RequiredConfigured(Dictionary`2<Type, ConfigInfo> value);
    [CompilerGeneratedAttribute]
private IOmniaNetStandardConfiguration get_Config();
    public sealed virtual void AddISharePointRequestContextImpl(IServiceCollection services, Func`2<IServiceProvider, ISharePointScopedContext> implementationFactory);
    internal void ValidateConfiguration();
}
public static class Omnia.Fx.SharePoint.Http.Preconfigured.HttpClients.IConfiguredHttpClientSharepointServiceExtensions : object {
}
public interface Omnia.Fx.SharePoint.Http.Preconfigured.HttpClients.IConfiguredSharePointHttpClient {
}
internal interface Omnia.Fx.SharePoint.Http.Preconfigured.HttpClients.ISharePointServiceConfigurationOptions {
    public abstract virtual HttpRequestConfiguration DummyUntilWehaveSomething();
}
public interface Omnia.Fx.SharePoint.Http.Preconfigured.HttpClients.ISharePointServiceHttpClientFactory {
    public abstract virtual IConfiguredSharePointHttpClient CreateForUrl(string forSpUrl, bool elevated, bool ignoreSystemAccount);
    public abstract virtual IConfiguredSharePointHttpClient CreateForCurrentContext(bool elevated, bool ignoreSystemAccount);
}
internal class Omnia.Fx.SharePoint.Http.Preconfigured.HttpClients.SharePointServiceHttpClientFactory : object {
    [CompilerGeneratedAttribute]
private ISharePointTokenProvider <SharePointTokenProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointContextHelper <SharePointContextHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpClientFactoryForGenricServiceFunc <HttpClientFactoryForGenricServiceFunc>k__BackingField;
    public ISharePointTokenProvider SharePointTokenProvider { get; }
    private ISharePointContextHelper SharePointContextHelper { get; }
    private HttpClientFactoryForGenricServiceFunc HttpClientFactoryForGenricServiceFunc { get; }
    public SharePointServiceHttpClientFactory(ISharePointTokenProvider sharePointTokenProvider, ISharePointContextHelper sharePointContextHelper, HttpClientFactoryForGenricServiceFunc httpClientFactoryForGenricServiceFunc);
    [CompilerGeneratedAttribute]
public ISharePointTokenProvider get_SharePointTokenProvider();
    [CompilerGeneratedAttribute]
private ISharePointContextHelper get_SharePointContextHelper();
    [CompilerGeneratedAttribute]
private HttpClientFactoryForGenricServiceFunc get_HttpClientFactoryForGenricServiceFunc();
    public sealed virtual IConfiguredSharePointHttpClient CreateForUrl(string forSpUrl, bool elevated, bool ignoreSystemAccount);
    public sealed virtual IConfiguredSharePointHttpClient CreateForCurrentContext(bool elevated, bool ignoreSystemAccount);
}
public class Omnia.Fx.SharePoint.Http.Preconfigured.HttpRequestConfigurations.SharepointContext : object {
    [CompilerGeneratedAttribute]
private IScopedContextResolver <ScopedContextResolver>k__BackingField;
    private IScopedContextResolver ScopedContextResolver { get; }
    public SharepointContext(IScopedContextResolver scopedContextResolver);
    [CompilerGeneratedAttribute]
private IScopedContextResolver get_ScopedContextResolver();
    public sealed virtual HttpRequestConfiguration GetRequestConfig();
    private string GetSPUrl();
    private Nullable`1<Guid> GetListId();
    private Nullable`1<int> GetListItemId();
}
[ExtensionAttribute]
public static class Omnia.Fx.SharePoint.IdentityExtensions : object {
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.IdentityExtensions/<GetSharePointPrincipalNameAsync>d__0")]
[ExtensionAttribute]
public static ValueTask`1<string> GetSharePointPrincipalNameAsync(IResolvedIdentity identity, IPrincipalService principalService);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.IdentityExtensions/<GetSharePointPrincipalNameAsync>d__1")]
[ExtensionAttribute]
public static ValueTask`1<string> GetSharePointPrincipalNameAsync(ResolvedDynamicGroupIdentity identity, IPrincipalService principalService);
    [ExtensionAttribute]
public static string GetSharePointPrincipalName(ResolvedGroupIdentity identity);
    [ExtensionAttribute]
public static string GetSharePointPrincipalName(ResolvedUserIdentity identity);
}
[SPListAttribute]
public class Omnia.Fx.SharePoint.Lists.Artifact.GroupsPermission : ListBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<FieldBase> <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ContentTypeBase> <ContentTypes>k__BackingField;
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.Title")]
public IEnumerable`1<FieldBase> Fields { get; }
    public IEnumerable`1<FieldBase> DefaultView { get; }
    public IEnumerable`1<ContentTypeBase> ContentTypes { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<FieldBase> get_Fields();
    public sealed virtual IEnumerable`1<FieldBase> get_DefaultView();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ContentTypeBase> get_ContentTypes();
}
[AttributeUsageAttribute("4")]
public class Omnia.Fx.SharePoint.Lists.Attributes.QuickLaunchAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    public string Url { get; public set; }
    public string Title { get; public set; }
    public QuickLaunchAttribute(string url, string title);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
}
[AttributeUsageAttribute("4")]
public class Omnia.Fx.SharePoint.Lists.Attributes.SPListAttribute : EntityAttribute {
    [CompilerGeneratedAttribute]
private string <RelativeUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private ListTemplateType <ListTemplate>k__BackingField;
    private string _title;
    private string _description;
    private bool _enableVersioning;
    private bool _enableMinorVersions;
    private bool _hidden;
    private bool _forceCheckout;
    private DraftVisibilityType _draftVersionVisibility;
    private bool _enableFolderCreation;
    [CompilerGeneratedAttribute]
private IList`1<Guid> <FieldIds>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, bool> <ContentTypeIds>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Guid> <DefaultViewFieldIds>k__BackingField;
    public string RelativeUrl { get; public set; }
    public ListTemplateType ListTemplate { get; public set; }
    public string Title { get; public set; }
    public string Description { get; public set; }
    public bool EnableVersioning { get; public set; }
    public bool EnableMinorVersions { get; public set; }
    public bool Hidden { get; public set; }
    public bool ForceCheckout { get; public set; }
    public DraftVisibilityType DraftVersionVisibility { get; public set; }
    public bool EnableFolderCreation { get; public set; }
    public IList`1<Guid> FieldIds { get; public set; }
    public IDictionary`2<string, bool> ContentTypeIds { get; public set; }
    public IList`1<Guid> DefaultViewFieldIds { get; public set; }
    public SPListAttribute(string relativeUrl);
    [CompilerGeneratedAttribute]
public string get_RelativeUrl();
    [CompilerGeneratedAttribute]
public void set_RelativeUrl(string value);
    [CompilerGeneratedAttribute]
public ListTemplateType get_ListTemplate();
    [CompilerGeneratedAttribute]
public void set_ListTemplate(ListTemplateType value);
    public string get_Title();
    public void set_Title(string value);
    public string get_Description();
    public void set_Description(string value);
    public bool get_EnableVersioning();
    public void set_EnableVersioning(bool value);
    public bool get_EnableMinorVersions();
    public void set_EnableMinorVersions(bool value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public bool get_ForceCheckout();
    public void set_ForceCheckout(bool value);
    public DraftVisibilityType get_DraftVersionVisibility();
    public void set_DraftVersionVisibility(DraftVisibilityType value);
    public bool get_EnableFolderCreation();
    public void set_EnableFolderCreation(bool value);
    [CompilerGeneratedAttribute]
public IList`1<Guid> get_FieldIds();
    [CompilerGeneratedAttribute]
public void set_FieldIds(IList`1<Guid> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, bool> get_ContentTypeIds();
    [CompilerGeneratedAttribute]
public void set_ContentTypeIds(IDictionary`2<string, bool> value);
    [CompilerGeneratedAttribute]
public IList`1<Guid> get_DefaultViewFieldIds();
    [CompilerGeneratedAttribute]
public void set_DefaultViewFieldIds(IList`1<Guid> value);
    internal virtual Task LoadAttributeInfoAsync(ISharePointEntityHelper sharePointEntityHelper);
    internal virtual List OnCreating(ISharePointEntityHelper sharePointEntityHelper, string listServerRelativeUrl);
    internal void OnUpdating(ISharePointEntityHelper sharePointEntityHelper, List list, bool force);
    private bool UpdateListProperties(ISharePointEntityHelper sharePointEntityHelper, List list, bool force);
    [CompilerGeneratedAttribute]
private Task <UpdateListProperties>b__56_0(ISharePointEntityHelperFull entityHelper);
}
[SPListAttribute("$Localize:OMF.Common.PagesLibraryUrl;")]
public class Omnia.Fx.SharePoint.Lists.Builtin.Pages : ListBase {
}
[SPListAttribute("/sitepages")]
public class Omnia.Fx.SharePoint.Lists.Builtin.SitePages : ListBase {
}
public class Omnia.Fx.SharePoint.Lists.Documents.DocumentsList : ListBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ContentTypeBase> <ContentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FieldBase> <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FieldBase> <DefaultView>k__BackingField;
    public IEnumerable`1<ContentTypeBase> ContentTypes { get; }
    public IEnumerable`1<FieldBase> Fields { get; }
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.DocIcon")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.LinkFilename")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.Modified")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.Editor")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn._UIVersionString")]
public IEnumerable`1<FieldBase> DefaultView { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ContentTypeBase> get_ContentTypes();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<FieldBase> get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<FieldBase> get_DefaultView();
}
public interface Omnia.Fx.SharePoint.Lists.IListBase {
    public IEnumerable`1<ContentTypeBase> ContentTypes { get; }
    public IEnumerable`1<FieldBase> Fields { get; }
    public IEnumerable`1<FieldBase> DefaultView { get; }
    public abstract virtual IEnumerable`1<ContentTypeBase> get_ContentTypes();
    public abstract virtual IEnumerable`1<FieldBase> get_Fields();
    public abstract virtual IEnumerable`1<FieldBase> get_DefaultView();
}
internal interface Omnia.Fx.SharePoint.Lists.ISharePointListHelper {
    public abstract virtual ValueTask`1<List> GetListAsync(string listServerRelativeUrl, Action`2<ClientRuntimeContext, List> loadAction, bool force);
    public abstract virtual ValueTask`1<List> GetListAsync(Guid id, Action`2<ClientRuntimeContext, List> loadAction);
    public abstract virtual ValueTask`1<List> GetListByTitleAsync(string title, Action`2<ClientRuntimeContext, List> loadAction);
    public abstract virtual ValueTask`1<List> GetListByTemplateTypeAsync(Site site, ListTemplateType templateType, Action`2<ClientRuntimeContext, List> loadAction, bool force);
    public abstract virtual List AddList(SPListAttribute listAttribute, string listServerRelativeUrl);
    public abstract virtual bool AddContentTypesToList(List list, IList`1<ContentType> siteContentTypes);
    public abstract virtual bool AddContentTypeToList(List list, ContentType contentType);
    public abstract virtual bool AddFieldsToList(List list, IList`1<Field> fields);
    public abstract virtual bool AddFieldToList(List list, Field field);
    public abstract virtual bool SetupDefaultView(List list, IList`1<Field> fields);
    public abstract virtual bool SetDefaultContentType(List list, ContentType siteContentType);
    public abstract virtual void LoadList(List list);
    public abstract virtual bool LoadListForCheckInFile(List list);
}
internal interface Omnia.Fx.SharePoint.Lists.ISharePointListHelperFull {
    public abstract virtual bool LoadWebLists();
    public abstract virtual List GetListFromWebLists(string listServerRelativeUrl, Boolean& waitForNextExecute);
}
public interface Omnia.Fx.SharePoint.Lists.ISharePointListInfo {
    public List List { get; }
    public abstract virtual List get_List();
}
public interface Omnia.Fx.SharePoint.Lists.ISharePointListProvisioningSetup {
    public abstract virtual ISharePointListProvisioningSetup Configure(Action`1<SPListAttribute> configureFunction);
    public abstract virtual ISharePointListProvisioningSetup OnAdded(Action`1<Web> configureFunction);
    public abstract virtual ISharePointListProvisioningSetup OnUpdated(Action`1<Web> configureFunction);
}
public class Omnia.Fx.SharePoint.Lists.ListBase : object {
    private SPListAttribute _listAttribute;
    private QuickLaunchAttribute _quickLaunchAttribute;
    public SPListAttribute ListAttribute { get; public set; }
    public QuickLaunchAttribute QuickLaunchAttribute { get; public set; }
    public virtual void OnAdded(Web parent);
    public virtual void OnUpdated(Web parent);
    public SPListAttribute get_ListAttribute();
    public void set_ListAttribute(SPListAttribute value);
    public QuickLaunchAttribute get_QuickLaunchAttribute();
    public void set_QuickLaunchAttribute(QuickLaunchAttribute value);
    private Dictionary`2<string, bool> GetContentTypeIds();
    private List`1<Guid> GetFieldIds();
    private List`1<Guid> GetDefaultViewFieldIds();
}
public class Omnia.Fx.SharePoint.Lists.ListReference : object {
    [CompilerGeneratedAttribute]
private ListBase <List>k__BackingField;
    public string RelativeUrl { get; }
    internal ListBase List { get; }
    internal SPListAttribute ListAttribute { get; }
    internal QuickLaunchAttribute QuickLaunchAttribute { get; }
    public ListReference(Type type);
    public ListReference(SPListAttribute listAttribute);
    public ListReference(string listRelativeUrl);
    public string get_RelativeUrl();
    [CompilerGeneratedAttribute]
internal ListBase get_List();
    internal SPListAttribute get_ListAttribute();
    internal QuickLaunchAttribute get_QuickLaunchAttribute();
    private void Init();
}
internal class Omnia.Fx.SharePoint.Lists.Models.SharePointListModel : object {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelativeUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private ListReference <ListReference>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<ClientRuntimeContext, List> <LoadAction>k__BackingField;
    public Nullable`1<Guid> Id { get; private set; }
    public string RelativeUrl { get; private set; }
    public string Title { get; private set; }
    public ListReference ListReference { get; private set; }
    public Action`2<ClientRuntimeContext, List> LoadAction { get; public set; }
    public bool NeedToEnsure { get; }
    public SharePointListModel(Type type, bool needToEnsure);
    public SharePointListModel(SPListAttribute listAttribute);
    public SharePointListModel(string relativeUrl);
    public SharePointListModel(Nullable`1<Guid> id, string listTitle);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_RelativeUrl();
    [CompilerGeneratedAttribute]
private void set_RelativeUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
private void set_Title(string value);
    [CompilerGeneratedAttribute]
public ListReference get_ListReference();
    [CompilerGeneratedAttribute]
private void set_ListReference(ListReference value);
    [CompilerGeneratedAttribute]
public Action`2<ClientRuntimeContext, List> get_LoadAction();
    [CompilerGeneratedAttribute]
public void set_LoadAction(Action`2<ClientRuntimeContext, List> value);
    public bool get_NeedToEnsure();
}
[QuickLaunchAttribute("SampleDocumentLibrary2018071902", "Sample DL 20180719-02")]
[SPListAttribute]
public class Omnia.Fx.SharePoint.Lists.Sample.SampleDocumentLibrary : ListBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ContentTypeBase> <ContentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FieldBase> <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FieldBase> <DefaultView>k__BackingField;
    [ContentTypeRefAttribute("Omnia.Fx.SharePoint.ContentTypes.Sample.SampleContentType2")]
public IEnumerable`1<ContentTypeBase> ContentTypes { get; }
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.ChoiceField")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.ManagedMetadataField")]
public IEnumerable`1<FieldBase> Fields { get; }
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.TextField")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.ManagedMetadataField")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.FirstName")]
[FieldRefAttribute("ea8f7ca9-2a0e-4a89-b8bf-c51a6af62c73")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.ChoiceField")]
public IEnumerable`1<FieldBase> DefaultView { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ContentTypeBase> get_ContentTypes();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<FieldBase> get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<FieldBase> get_DefaultView();
}
[SPListAttribute]
public class Omnia.Fx.SharePoint.Lists.Sample.SampleList : ListBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ContentTypeBase> <ContentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FieldBase> <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FieldBase> <DefaultView>k__BackingField;
    [ContentTypeRefAttribute("Omnia.Fx.SharePoint.ContentTypes.Sample.SampleContentType1")]
[ContentTypeRefAttribute("0x0104")]
public IEnumerable`1<ContentTypeBase> ContentTypes { get; }
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.ChoiceField")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.ManagedMetadataField")]
public IEnumerable`1<FieldBase> Fields { get; }
    [FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.TextField")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.ManagedMetadataField")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.BuiltIn.FirstName")]
[FieldRefAttribute("ea8f7ca9-2a0e-4a89-b8bf-c51a6af62c73")]
[FieldRefAttribute("Omnia.Fx.SharePoint.Fields.Sample.ChoiceField")]
public IEnumerable`1<FieldBase> DefaultView { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ContentTypeBase> get_ContentTypes();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<FieldBase> get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<FieldBase> get_DefaultView();
}
internal class Omnia.Fx.SharePoint.Lists.SharePointListHandler : object {
    private SharePointListModel _sharePointListModel;
    private Action`1<Web> _afterAddedFunction;
    private Action`1<Web> _afterUpdatedFunction;
    private Dictionary`2<ContentType, bool> _contentTypes;
    private List`1<Field> _fields;
    private List`1<Field> _defaultViewFields;
    private Func`2<string, string> _getServerRelativeUrlFunc;
    private Func`2<LoadWebFieldsCallbackParams, Field> _getFieldFunc;
    private Func`2<string, ContentType> _getContentTypeFunc;
    [CompilerGeneratedAttribute]
private List <List>k__BackingField;
    public List List { get; private set; }
    public SharePointListHandler(SharePointListModel sharePointListModel);
    [CompilerGeneratedAttribute]
public sealed virtual List get_List();
    [CompilerGeneratedAttribute]
private void set_List(List value);
    public sealed virtual ISharePointListProvisioningSetup Configure(Action`1<SPListAttribute> configureFunction);
    public sealed virtual ISharePointListProvisioningSetup OnAdded(Action`1<Web> configureFunction);
    public sealed virtual ISharePointListProvisioningSetup OnUpdated(Action`1<Web> configureFunction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHandler/<RetrieveNotEnsureMainEntityAsync>d__17")]
public sealed virtual Task RetrieveNotEnsureMainEntityAsync(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHandler/<EnsureMainEntityAsync>d__18")]
public sealed virtual Task EnsureMainEntityAsync(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHandler/<ExecuteRelatedActionsAsync>d__19")]
public sealed virtual Task ExecuteRelatedActionsAsync(ISharePointEntityHelper sharePointEntityHelper);
    private bool LoadContentTypes(ISharePointEntityHelper sharePointEntityHelper);
    private void LoadFields(ISharePointEntityHelper sharePointEntityHelper);
    private void LoadQuickLaunch(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHandler/<CheckInitStatusAsync>d__23")]
private Task CheckInitStatusAsync(ISharePointEntityHelper sharePointEntityHelper);
    private void UpdateList(ISharePointEntityHelper sharePointEntityHelper, bool force);
    private Task CheckUpdateListDoneAsync(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHandler/<AddContentTypesToListAsync>d__26")]
private Task AddContentTypesToListAsync(ISharePointEntityHelper sharePointEntityHelper);
    private void AddFieldsToList(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHandler/<SetupQuickLaunchAsync>d__28")]
private Task SetupQuickLaunchAsync(ISharePointEntityHelper sharePointEntityHelper);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHandler/<AddOrUpdateQuickLaunchAsync>d__29")]
private Task AddOrUpdateQuickLaunchAsync(ISharePointEntityHelper sharePointEntityHelper);
    private Task SetDefaultContentTypeForListAsync(ISharePointEntityHelper sharePointEntityHelper, ContentType defaultContentType);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHandler/<EnsureGetServerRelativeUrlFunc>d__31")]
private ValueTask`1<Func`2<string, string>> EnsureGetServerRelativeUrlFunc(ISharePointEntityHelper sharePointEntityHelper);
}
internal class Omnia.Fx.SharePoint.Lists.SharePointListHelper : object {
    private Web _web;
    private Dictionary`2<string, List> _spListDictionary;
    private Dictionary`2<ListTemplateType, List> _spListByTemplateTypeDictionary;
    private Dictionary`2<Guid, List`1<Guid>> _tempNewFieldsByListId;
    private Dictionary`2<Guid, List`1<string>> _tempNewContentTypesByListId;
    public SharePointListHelper(Web web);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHelper/<GetListAsync>d__6")]
public sealed virtual ValueTask`1<List> GetListAsync(string listServerRelativeUrl, Action`2<ClientRuntimeContext, List> loadAction, bool force);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHelper/<GetListAsync>d__7")]
public sealed virtual ValueTask`1<List> GetListAsync(Guid id, Action`2<ClientRuntimeContext, List> loadAction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHelper/<GetListByTitleAsync>d__8")]
public sealed virtual ValueTask`1<List> GetListByTitleAsync(string title, Action`2<ClientRuntimeContext, List> loadAction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Lists.SharePointListHelper/<GetListByTemplateTypeAsync>d__9")]
public sealed virtual ValueTask`1<List> GetListByTemplateTypeAsync(Site site, ListTemplateType templateType, Action`2<ClientRuntimeContext, List> loadAction, bool force);
    public sealed virtual bool LoadWebLists();
    public sealed virtual List GetListFromWebLists(string listServerRelativeUrl, Boolean& waitForNextExecute);
    public sealed virtual List AddList(SPListAttribute listAttribute, string listServerRelativeUrl);
    public sealed virtual bool AddContentTypesToList(List list, IList`1<ContentType> siteContentTypes);
    public sealed virtual bool AddContentTypeToList(List list, ContentType siteContentType);
    public sealed virtual bool AddFieldsToList(List list, IList`1<Field> fields);
    public sealed virtual bool AddFieldToList(List list, Field field);
    public sealed virtual bool SetupDefaultView(List list, IList`1<Field> fields);
    public sealed virtual bool SetDefaultContentType(List list, ContentType siteContentType);
    public sealed virtual void LoadList(List list);
    public sealed virtual bool LoadListForCheckInFile(List list);
    public sealed virtual void CleanupState();
    private void InvokeLoadForList(List list, Action`2<ClientRuntimeContext, List> loadAction);
    private bool CheckContentTypeExists(List list, string contentTypeId);
    private bool CheckFieldExists(List list, Guid fieldId);
    private Dictionary`2<string, List> EnsureListDictionary();
    [CompilerGeneratedAttribute]
private void <GetListByTemplateTypeAsync>b__9_0(ClientRuntimeContext ctx, List listInstance);
}
public class Omnia.Fx.SharePoint.Models.Apps.AppInstanceWithSharepointOutput : AppInstanceOutput {
    [CompilerGeneratedAttribute]
private string <SPUrl>k__BackingField;
    public string SPUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SPUrl();
    [CompilerGeneratedAttribute]
public void set_SPUrl(string value);
}
public class Omnia.Fx.SharePoint.Models.Apps.AppInstanceWithSharepointPropertiesStorage : AppInstancePropertiesStorage {
    [CompilerGeneratedAttribute]
private string <SPAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsSiteAttached>k__BackingField;
    [JsonPropertyAttribute]
public string SPAlias { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IsSiteAttached { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SPAlias();
    [CompilerGeneratedAttribute]
public void set_SPAlias(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsSiteAttached();
    [CompilerGeneratedAttribute]
public void set_IsSiteAttached(Nullable`1<bool> value);
}
[AppSettingSectionNameAttribute]
public class Omnia.Fx.SharePoint.Models.AppSettings.SharePointAppSettings : object {
    [CompilerGeneratedAttribute]
private string <AuthorityUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MySiteUrl>k__BackingField;
    public string AuthorityUrl { get; public set; }
    public string AdminUrl { get; public set; }
    public string MySiteUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AuthorityUrl();
    [CompilerGeneratedAttribute]
public void set_AuthorityUrl(string value);
    [CompilerGeneratedAttribute]
public string get_AdminUrl();
    [CompilerGeneratedAttribute]
public void set_AdminUrl(string value);
    [CompilerGeneratedAttribute]
public string get_MySiteUrl();
    [CompilerGeneratedAttribute]
public void set_MySiteUrl(string value);
}
public class Omnia.Fx.SharePoint.Models.BusinessProfiles.PropertyBag.TermLookupValue : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    public Guid Id { get; public set; }
    public string Title { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
}
public class Omnia.Fx.SharePoint.Models.BusinessProfiles.PropertyBag.TermSetPropertyBindingSetting : PropertyBindingSetting {
    [CompilerGeneratedAttribute]
private bool <AllowMultipleValues>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<TermLookupValue> <LookupValues>k__BackingField;
    public bool AllowMultipleValues { get; public set; }
    public IEnumerable`1<TermLookupValue> LookupValues { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AllowMultipleValues();
    [CompilerGeneratedAttribute]
public void set_AllowMultipleValues(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<TermLookupValue> get_LookupValues();
    [CompilerGeneratedAttribute]
public void set_LookupValues(IEnumerable`1<TermLookupValue> value);
}
public class Omnia.Fx.SharePoint.Models.BusinessProfiles.SharePointBusinessProfileRelativePathValue : BusinessProfileRelativePathValue {
    protected string PrefixToken { get; }
    public string Value { get; }
    public SharePointBusinessProfileRelativePathValue(string relativePath);
    protected virtual string get_PrefixToken();
    public virtual string get_Value();
}
public class Omnia.Fx.SharePoint.Models.Contexts.SharePointEnvironmentContext : object {
    [CompilerGeneratedAttribute]
private string <AuthorityUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MySiteUrl>k__BackingField;
    public string AuthorityUrl { get; public set; }
    public string AdminUrl { get; public set; }
    public string MySiteUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AuthorityUrl();
    [CompilerGeneratedAttribute]
public void set_AuthorityUrl(string value);
    [CompilerGeneratedAttribute]
public string get_AdminUrl();
    [CompilerGeneratedAttribute]
public void set_AdminUrl(string value);
    [CompilerGeneratedAttribute]
public string get_MySiteUrl();
    [CompilerGeneratedAttribute]
public void set_MySiteUrl(string value);
}
public class Omnia.Fx.SharePoint.Models.Contexts.SharePointListContext : object {
    [CompilerGeneratedAttribute]
private List <SPObject>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ListId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private BasePermissions <EffectiveBasePermissions>k__BackingField;
    public List SPObject { get; }
    public Guid ListId { get; }
    public string Title { get; }
    public BasePermissions EffectiveBasePermissions { get; }
    internal SharePointListContext(List spList);
    [CompilerGeneratedAttribute]
public List get_SPObject();
    [CompilerGeneratedAttribute]
public Guid get_ListId();
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public BasePermissions get_EffectiveBasePermissions();
}
public class Omnia.Fx.SharePoint.Models.Contexts.SharePointListItemContext : object {
    [CompilerGeneratedAttribute]
private ListItem <SPObject>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ItemId>k__BackingField;
    [CompilerGeneratedAttribute]
private BasePermissions <EffectiveBasePermissions>k__BackingField;
    public ListItem SPObject { get; }
    public int ItemId { get; }
    public BasePermissions EffectiveBasePermissions { get; }
    internal SharePointListItemContext(ListItem spListItem);
    [CompilerGeneratedAttribute]
public ListItem get_SPObject();
    [CompilerGeneratedAttribute]
public int get_ItemId();
    [CompilerGeneratedAttribute]
public BasePermissions get_EffectiveBasePermissions();
}
public class Omnia.Fx.SharePoint.Models.Contexts.SharePointSiteContext : object {
    [CompilerGeneratedAttribute]
private Site <SPObject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AbsoluteUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerRelativeUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <GroupId>k__BackingField;
    public Site SPObject { get; }
    public string AbsoluteUrl { get; }
    public string ServerRelativeUrl { get; }
    public Guid GroupId { get; }
    internal SharePointSiteContext(Site site);
    [CompilerGeneratedAttribute]
public Site get_SPObject();
    [CompilerGeneratedAttribute]
public string get_AbsoluteUrl();
    [CompilerGeneratedAttribute]
public string get_ServerRelativeUrl();
    [CompilerGeneratedAttribute]
public Guid get_GroupId();
}
public class Omnia.Fx.SharePoint.Models.Contexts.SharePointUserContext : object {
    [CompilerGeneratedAttribute]
private User <SPObject>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSiteCollectionAdmin>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    public User SPObject { get; }
    public bool IsSiteCollectionAdmin { get; }
    public string LoginName { get; }
    public string Title { get; }
    public string Email { get; }
    internal SharePointUserContext(User user);
    [CompilerGeneratedAttribute]
public User get_SPObject();
    [CompilerGeneratedAttribute]
public bool get_IsSiteCollectionAdmin();
    [CompilerGeneratedAttribute]
public string get_LoginName();
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public string get_Email();
}
public class Omnia.Fx.SharePoint.Models.Contexts.SharePointWebContext : object {
    [CompilerGeneratedAttribute]
private Web <SPObject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AbsoluteUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerRelativeUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private BasePermissions <EffectiveBasePermissions>k__BackingField;
    public Web SPObject { get; }
    public string Title { get; }
    public string Description { get; }
    public string AbsoluteUrl { get; }
    public string ServerRelativeUrl { get; }
    public UInt32 Language { get; }
    public Guid Id { get; public set; }
    public BasePermissions EffectiveBasePermissions { get; }
    internal SharePointWebContext(Web web);
    [CompilerGeneratedAttribute]
public Web get_SPObject();
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public string get_AbsoluteUrl();
    [CompilerGeneratedAttribute]
public string get_ServerRelativeUrl();
    [CompilerGeneratedAttribute]
public UInt32 get_Language();
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public BasePermissions get_EffectiveBasePermissions();
}
public class Omnia.Fx.SharePoint.Models.Features.SharePointFeatureConfiguration : FeatureConfiguration {
    public static Guid SharePointFeatureConfigurationTypeId;
    [CompilerGeneratedAttribute]
private bool <ActivateSiteSelectedPermissions>k__BackingField;
    public Guid TypeId { get; }
    public bool ActivateSiteSelectedPermissions { get; public set; }
    private static SharePointFeatureConfiguration();
    public virtual Guid get_TypeId();
    [CompilerGeneratedAttribute]
public bool get_ActivateSiteSelectedPermissions();
    [CompilerGeneratedAttribute]
public void set_ActivateSiteSelectedPermissions(bool value);
}
internal class Omnia.Fx.SharePoint.Models.GraphPermissions.Application : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string DisplayName { get; public set; }
    public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
internal class Omnia.Fx.SharePoint.Models.GraphPermissions.IdentitySet : object {
    [CompilerGeneratedAttribute]
private Application <Application>k__BackingField;
    public Application Application { get; public set; }
    [CompilerGeneratedAttribute]
public Application get_Application();
    [CompilerGeneratedAttribute]
public void set_Application(Application value);
}
internal class Omnia.Fx.SharePoint.Models.GraphPermissions.Permission : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IdentitySet> <GrantedToIdentitiesV2>k__BackingField;
    public string Id { get; public set; }
    public List`1<string> Roles { get; public set; }
    public List`1<IdentitySet> GrantedToIdentitiesV2 { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<IdentitySet> get_GrantedToIdentitiesV2();
    [CompilerGeneratedAttribute]
public void set_GrantedToIdentitiesV2(List`1<IdentitySet> value);
}
internal class Omnia.Fx.SharePoint.Models.GraphPermissions.PermissionAddRequest : object {
    [CompilerGeneratedAttribute]
private List`1<string> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IdentitySet> <GrantedToIdentities>k__BackingField;
    public List`1<string> Roles { get; public set; }
    public List`1<IdentitySet> GrantedToIdentities { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<IdentitySet> get_GrantedToIdentities();
    [CompilerGeneratedAttribute]
public void set_GrantedToIdentities(List`1<IdentitySet> value);
}
internal class Omnia.Fx.SharePoint.Models.GraphPermissions.PermissionUpdateRequest : object {
    [CompilerGeneratedAttribute]
private List`1<string> <Roles>k__BackingField;
    public List`1<string> Roles { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(List`1<string> value);
}
internal class Omnia.Fx.SharePoint.Models.GraphPermissions.SiteMinimal : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
internal class Omnia.Fx.SharePoint.Models.GraphPermissions.SitePermissionsResult : object {
    [CompilerGeneratedAttribute]
private List`1<Permission> <Value>k__BackingField;
    public List`1<Permission> Value { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<Permission> get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(List`1<Permission> value);
}
public class Omnia.Fx.SharePoint.Models.Helpers.LoadWebFieldsCallbackParams : object {
    [CompilerGeneratedAttribute]
private Guid <FieldId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalName>k__BackingField;
    public Guid FieldId { get; public set; }
    public string InternalName { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_FieldId();
    [CompilerGeneratedAttribute]
public void set_FieldId(Guid value);
    [CompilerGeneratedAttribute]
public string get_InternalName();
    [CompilerGeneratedAttribute]
public void set_InternalName(string value);
}
public enum Omnia.Fx.SharePoint.Models.Lists.DocumentTypeEnum : Enum {
    public int value__;
    public static DocumentTypeEnum None;
    public static DocumentTypeEnum Folder;
    public static DocumentTypeEnum File;
}
public interface Omnia.Fx.SharePoint.Models.Lists.ISiteContent {
    public string WebUrl { get; public set; }
    public string WebTitle { get; public set; }
    public string WebLogo { get; public set; }
    public string WebTemplate { get; public set; }
    public bool IsNew { get; public set; }
    public abstract virtual string get_WebUrl();
    public abstract virtual void set_WebUrl(string value);
    public abstract virtual string get_WebTitle();
    public abstract virtual void set_WebTitle(string value);
    public abstract virtual string get_WebLogo();
    public abstract virtual void set_WebLogo(string value);
    public abstract virtual string get_WebTemplate();
    public abstract virtual void set_WebTemplate(string value);
    public abstract virtual bool get_IsNew();
    public abstract virtual void set_IsNew(bool value);
}
public class Omnia.Fx.SharePoint.Models.Lists.Version : object {
    [CompilerGeneratedAttribute]
private string <VersionLabel>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedAt>k__BackingField;
    public string VersionLabel { get; public set; }
    public DateTimeOffset CreatedAt { get; public set; }
    [CompilerGeneratedAttribute]
public string get_VersionLabel();
    [CompilerGeneratedAttribute]
public void set_VersionLabel(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_CreatedAt();
    [CompilerGeneratedAttribute]
public void set_CreatedAt(DateTimeOffset value);
}
public class Omnia.Fx.SharePoint.Models.Properties.Builtin.TermSetDisplaySettings : BaseDisplaySettings {
}
public class Omnia.Fx.SharePoint.Models.Properties.Builtin.TermSetEditorSettings : BaseEditSettings {
    [CompilerGeneratedAttribute]
private bool <Multiple>k__BackingField;
    public bool Multiple { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Multiple();
    [CompilerGeneratedAttribute]
public void set_Multiple(bool value);
}
public class Omnia.Fx.SharePoint.Models.Properties.Builtin.TermSetExtendedPropertySettings : ExtendedPropertySettings {
    [CompilerGeneratedAttribute]
private Guid <PropertyDefinitionId>k__BackingField;
    [CompilerGeneratedAttribute]
private TermSetSetupSettings <PropertySetupSettings>k__BackingField;
    public Guid PropertyDefinitionId { get; public set; }
    public TermSetSetupSettings PropertySetupSettings { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_PropertyDefinitionId();
    [CompilerGeneratedAttribute]
public void set_PropertyDefinitionId(Guid value);
    [CompilerGeneratedAttribute]
public TermSetSetupSettings get_PropertySetupSettings();
    [CompilerGeneratedAttribute]
public void set_PropertySetupSettings(TermSetSetupSettings value);
}
public class Omnia.Fx.SharePoint.Models.Properties.Builtin.TermSetProperty : PropertyDefinition`4<TermSetPropertyValue, TermSetDisplaySettings, TermSetEditorSettings, TermSetSetupSettings> {
    public Guid Id { get; }
    public string TypeName { get; }
    public virtual Guid get_Id();
    public virtual string get_TypeName();
}
public class Omnia.Fx.SharePoint.Models.Properties.Builtin.TermSetPropertyValue : PropertyValue {
    [CompilerGeneratedAttribute]
private IEnumerable`1<Guid> <TermIds>k__BackingField;
    public IEnumerable`1<Guid> TermIds { get; public set; }
    public TermSetPropertyValue(IEnumerable`1<Guid> termIds);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Guid> get_TermIds();
    [CompilerGeneratedAttribute]
public void set_TermIds(IEnumerable`1<Guid> value);
}
public class Omnia.Fx.SharePoint.Models.Properties.Builtin.TermSetSetupSettings : object {
    [CompilerGeneratedAttribute]
private Guid <TermSetId>k__BackingField;
    public Guid TermSetId { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_TermSetId();
    [CompilerGeneratedAttribute]
public void set_TermSetId(Guid value);
}
public class Omnia.Fx.SharePoint.Models.Properties.PrimitiveCreators.TermSetPropertyPrimitiveCreator : object {
    public sealed virtual Task CreatePrimitiveAsync(PropertyValueBinding`1<TermSetPropertyValue> sourceValue, IPrimitiveWriter primitiveWriter);
}
public class Omnia.Fx.SharePoint.Models.Properties.PropertyConverter.TermSetConverter : PropertyConverterBase`2<TermSetProperty, TermSetPropertyValue> {
    [CompilerGeneratedAttribute]
private IServiceScopeFactory <ServiceScopeFactory>k__BackingField;
    private IServiceScopeFactory ServiceScopeFactory { get; }
    public bool DirectConversionIsAllowed { get; }
    public TermSetConverter(IServiceScopeFactory serviceScopeFactory);
    [CompilerGeneratedAttribute]
private IServiceScopeFactory get_ServiceScopeFactory();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Models.Properties.PropertyConverter.TermSetConverter/<ConvertAsync>d__4")]
public virtual Task`1<PropertyConversionResult`1<TermSetPropertyValue>> ConvertAsync(Guid propertyBindingId, string valueToConvert, Nullable`1<Guid> identityId);
    public virtual bool get_DirectConversionIsAllowed();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Models.Properties.PropertyConverter.TermSetConverter/<AllowToConvertAsync>d__7")]
public virtual ValueTask`1<bool> AllowToConvertAsync();
}
public abstract class Omnia.Fx.SharePoint.Models.Search.BaseSearchResult : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HighlightedProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private SearchContentType <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Rank>k__BackingField;
    public string Title { get; public set; }
    public string HighlightedProperties { get; public set; }
    public string Path { get; public set; }
    public SearchContentType ContentType { get; public set; }
    public double Rank { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_HighlightedProperties();
    [CompilerGeneratedAttribute]
public void set_HighlightedProperties(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public SearchContentType get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(SearchContentType value);
    [CompilerGeneratedAttribute]
public double get_Rank();
    [CompilerGeneratedAttribute]
public void set_Rank(double value);
}
public class Omnia.Fx.SharePoint.Models.Search.ContentSearchQuery : SearchQueryBase {
    [CompilerGeneratedAttribute]
private int <DayLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceToQueryTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ExcludeFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SearchFileNameOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableQueryRules>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableWildcardSearch>k__BackingField;
    public int DayLimit { get; public set; }
    public bool ForceToQueryTemplate { get; public set; }
    public Nullable`1<bool> Container { get; public set; }
    public Nullable`1<bool> ExcludeFolder { get; public set; }
    public string SiteName { get; public set; }
    public Nullable`1<bool> SearchFileNameOnly { get; public set; }
    public Nullable`1<bool> EnableQueryRules { get; public set; }
    public Nullable`1<bool> EnableWildcardSearch { get; public set; }
    [CompilerGeneratedAttribute]
public int get_DayLimit();
    [CompilerGeneratedAttribute]
public void set_DayLimit(int value);
    [CompilerGeneratedAttribute]
public bool get_ForceToQueryTemplate();
    [CompilerGeneratedAttribute]
public void set_ForceToQueryTemplate(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ExcludeFolder();
    [CompilerGeneratedAttribute]
public void set_ExcludeFolder(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_SiteName();
    [CompilerGeneratedAttribute]
public void set_SiteName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SearchFileNameOnly();
    [CompilerGeneratedAttribute]
public void set_SearchFileNameOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_EnableQueryRules();
    [CompilerGeneratedAttribute]
public void set_EnableQueryRules(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_EnableWildcardSearch();
    [CompilerGeneratedAttribute]
public void set_EnableWildcardSearch(Nullable`1<bool> value);
}
public class Omnia.Fx.SharePoint.Models.Search.ContentSearchResult : BaseSearchResult {
    [CompilerGeneratedAttribute]
private string <SPWebUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteLogo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastModifiedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModifiedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Author>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorOWSUSER>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModifiedById>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EditorOWSUSER>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebTemplate>k__BackingField;
    public string SPWebUrl { get; public set; }
    public string FileType { get; public set; }
    public string SiteTitle { get; public set; }
    public string SiteDescription { get; public set; }
    public string SiteLogo { get; public set; }
    public string SiteName { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public Nullable`1<DateTime> Created { get; public set; }
    public string ModifiedBy { get; public set; }
    public string Author { get; public set; }
    public string AuthorOWSUSER { get; public set; }
    public string Description { get; public set; }
    public string ContentTypeId { get; public set; }
    public string ModifiedById { get; public set; }
    public string EditorOWSUSER { get; public set; }
    public string WebTemplate { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SPWebUrl();
    [CompilerGeneratedAttribute]
public void set_SPWebUrl(string value);
    [CompilerGeneratedAttribute]
public string get_FileType();
    [CompilerGeneratedAttribute]
public void set_FileType(string value);
    [CompilerGeneratedAttribute]
public string get_SiteTitle();
    [CompilerGeneratedAttribute]
public void set_SiteTitle(string value);
    [CompilerGeneratedAttribute]
public string get_SiteDescription();
    [CompilerGeneratedAttribute]
public void set_SiteDescription(string value);
    [CompilerGeneratedAttribute]
public string get_SiteLogo();
    [CompilerGeneratedAttribute]
public void set_SiteLogo(string value);
    [CompilerGeneratedAttribute]
public string get_SiteName();
    [CompilerGeneratedAttribute]
public void set_SiteName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastModifiedTime();
    [CompilerGeneratedAttribute]
public void set_LastModifiedTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_ModifiedBy();
    [CompilerGeneratedAttribute]
public void set_ModifiedBy(string value);
    [CompilerGeneratedAttribute]
public string get_Author();
    [CompilerGeneratedAttribute]
public void set_Author(string value);
    [CompilerGeneratedAttribute]
public string get_AuthorOWSUSER();
    [CompilerGeneratedAttribute]
public void set_AuthorOWSUSER(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ContentTypeId();
    [CompilerGeneratedAttribute]
public void set_ContentTypeId(string value);
    [CompilerGeneratedAttribute]
public string get_ModifiedById();
    [CompilerGeneratedAttribute]
public void set_ModifiedById(string value);
    [CompilerGeneratedAttribute]
public string get_EditorOWSUSER();
    [CompilerGeneratedAttribute]
public void set_EditorOWSUSER(string value);
    [CompilerGeneratedAttribute]
public string get_WebTemplate();
    [CompilerGeneratedAttribute]
public void set_WebTemplate(string value);
}
public class Omnia.Fx.SharePoint.Models.Search.Document : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileExtension>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocumentUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerRelativeUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ListUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebLogo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastModifiedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastModifiedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNew>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentTypeEnum <DocumentType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Version> <Versions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastModifiedByAccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImageThumbnailUrl>k__BackingField;
    public int Id { get; public set; }
    public Guid UniqueId { get; public set; }
    public string Title { get; public set; }
    public string FileName { get; public set; }
    public string FileExtension { get; public set; }
    public string DocumentUrl { get; public set; }
    public string ServerRelativeUrl { get; public set; }
    public string ParentUrl { get; public set; }
    public string ListUrl { get; public set; }
    public string WebUrl { get; public set; }
    public string WebTitle { get; public set; }
    public string WebLogo { get; public set; }
    public string WebTemplate { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public string LastModifiedBy { get; public set; }
    public bool IsNew { get; public set; }
    public string Content { get; public set; }
    public DocumentTypeEnum DocumentType { get; public set; }
    public List`1<Version> Versions { get; public set; }
    public string LastModifiedByAccountName { get; public set; }
    public string ImageThumbnailUrl { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Guid get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_FileExtension();
    [CompilerGeneratedAttribute]
public void set_FileExtension(string value);
    [CompilerGeneratedAttribute]
public string get_DocumentUrl();
    [CompilerGeneratedAttribute]
public void set_DocumentUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ServerRelativeUrl();
    [CompilerGeneratedAttribute]
public void set_ServerRelativeUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ParentUrl();
    [CompilerGeneratedAttribute]
public void set_ParentUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ListUrl();
    [CompilerGeneratedAttribute]
public void set_ListUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WebUrl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WebTitle();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebTitle(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WebLogo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebLogo(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WebTemplate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebTemplate(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastModifiedTime();
    [CompilerGeneratedAttribute]
public void set_LastModifiedTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_LastModifiedBy();
    [CompilerGeneratedAttribute]
public void set_LastModifiedBy(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsNew();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsNew(bool value);
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
    [CompilerGeneratedAttribute]
public DocumentTypeEnum get_DocumentType();
    [CompilerGeneratedAttribute]
public void set_DocumentType(DocumentTypeEnum value);
    [CompilerGeneratedAttribute]
public List`1<Version> get_Versions();
    [CompilerGeneratedAttribute]
public void set_Versions(List`1<Version> value);
    [CompilerGeneratedAttribute]
public string get_LastModifiedByAccountName();
    [CompilerGeneratedAttribute]
public void set_LastModifiedByAccountName(string value);
    [CompilerGeneratedAttribute]
public string get_ImageThumbnailUrl();
    [CompilerGeneratedAttribute]
public void set_ImageThumbnailUrl(string value);
}
public class Omnia.Fx.SharePoint.Models.Search.DocumentSearchQuery : SearchQueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SearchFileNameOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <WebUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DayLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SearchFilter> <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ExcludeFileNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ExcludeFileTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ExcludeModifiedByNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteName>k__BackingField;
    public Nullable`1<bool> SearchFileNameOnly { get; public set; }
    public List`1<string> WebUrls { get; public set; }
    public int DayLimit { get; public set; }
    public bool Document { get; public set; }
    public List`1<SearchFilter> Filters { get; public set; }
    public List`1<string> ExcludeFileNames { get; public set; }
    public List`1<string> ExcludeFileTypes { get; public set; }
    public List`1<string> ExcludeModifiedByNames { get; public set; }
    public string SiteName { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SearchFileNameOnly();
    [CompilerGeneratedAttribute]
public void set_SearchFileNameOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_WebUrls();
    [CompilerGeneratedAttribute]
public void set_WebUrls(List`1<string> value);
    [CompilerGeneratedAttribute]
public int get_DayLimit();
    [CompilerGeneratedAttribute]
public void set_DayLimit(int value);
    [CompilerGeneratedAttribute]
public bool get_Document();
    [CompilerGeneratedAttribute]
public void set_Document(bool value);
    [CompilerGeneratedAttribute]
public List`1<SearchFilter> get_Filters();
    [CompilerGeneratedAttribute]
public void set_Filters(List`1<SearchFilter> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ExcludeFileNames();
    [CompilerGeneratedAttribute]
public void set_ExcludeFileNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ExcludeFileTypes();
    [CompilerGeneratedAttribute]
public void set_ExcludeFileTypes(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ExcludeModifiedByNames();
    [CompilerGeneratedAttribute]
public void set_ExcludeModifiedByNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_SiteName();
    [CompilerGeneratedAttribute]
public void set_SiteName(string value);
}
public class Omnia.Fx.SharePoint.Models.Search.DocumentSearchResult : BaseSearchResult {
    [CompilerGeneratedAttribute]
private string <SPWebUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentLink>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteLogo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastModifiedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModifiedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModifiedById>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EditorOWSUSER>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Author>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AlternateTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AlternateModifiedBy>k__BackingField;
    public string SPWebUrl { get; public set; }
    public string FileType { get; public set; }
    public string ParentLink { get; public set; }
    public string SiteTitle { get; public set; }
    public string SiteLogo { get; public set; }
    public string SiteName { get; public set; }
    public Nullable`1<DateTime> Created { get; public set; }
    public Nullable`1<DateTime> LastModifiedTime { get; public set; }
    public string ModifiedBy { get; public set; }
    public string ModifiedById { get; public set; }
    public string EditorOWSUSER { get; public set; }
    public string Author { get; public set; }
    public string AlternateTitle { get; public set; }
    public string AlternateModifiedBy { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SPWebUrl();
    [CompilerGeneratedAttribute]
public void set_SPWebUrl(string value);
    [CompilerGeneratedAttribute]
public string get_FileType();
    [CompilerGeneratedAttribute]
public void set_FileType(string value);
    [CompilerGeneratedAttribute]
public string get_ParentLink();
    [CompilerGeneratedAttribute]
public void set_ParentLink(string value);
    [CompilerGeneratedAttribute]
public string get_SiteTitle();
    [CompilerGeneratedAttribute]
public void set_SiteTitle(string value);
    [CompilerGeneratedAttribute]
public string get_SiteLogo();
    [CompilerGeneratedAttribute]
public void set_SiteLogo(string value);
    [CompilerGeneratedAttribute]
public string get_SiteName();
    [CompilerGeneratedAttribute]
public void set_SiteName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastModifiedTime();
    [CompilerGeneratedAttribute]
public void set_LastModifiedTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_ModifiedBy();
    [CompilerGeneratedAttribute]
public void set_ModifiedBy(string value);
    [CompilerGeneratedAttribute]
public string get_ModifiedById();
    [CompilerGeneratedAttribute]
public void set_ModifiedById(string value);
    [CompilerGeneratedAttribute]
public string get_EditorOWSUSER();
    [CompilerGeneratedAttribute]
public void set_EditorOWSUSER(string value);
    [CompilerGeneratedAttribute]
public string get_Author();
    [CompilerGeneratedAttribute]
public void set_Author(string value);
    [CompilerGeneratedAttribute]
public string get_AlternateTitle();
    [CompilerGeneratedAttribute]
public void set_AlternateTitle(string value);
    [CompilerGeneratedAttribute]
public string get_AlternateModifiedBy();
    [CompilerGeneratedAttribute]
public void set_AlternateModifiedBy(string value);
}
public enum Omnia.Fx.SharePoint.Models.Search.FilterOperator : Enum {
    public int value__;
    public static FilterOperator Equal;
}
public class Omnia.Fx.SharePoint.Models.Search.PeopleSearchQuery : SearchQueryBase {
    [CompilerGeneratedAttribute]
private bool <ForceToQueryTemplate>k__BackingField;
    public bool ForceToQueryTemplate { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ForceToQueryTemplate();
    [CompilerGeneratedAttribute]
public void set_ForceToQueryTemplate(bool value);
}
public class Omnia.Fx.SharePoint.Models.Search.PeopleSearchResult : BaseSearchResult {
    [CompilerGeneratedAttribute]
private string <AboutMe>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    public string AboutMe { get; public set; }
    public string AccountName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AboutMe();
    [CompilerGeneratedAttribute]
public void set_AboutMe(string value);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public void set_AccountName(string value);
}
public enum Omnia.Fx.SharePoint.Models.Search.SearchContentType : Enum {
    public int value__;
    public static SearchContentType Site;
    public static SearchContentType Web;
    public static SearchContentType List;
    public static SearchContentType Document;
    public static SearchContentType DiscussionNewsFeedItem;
    public static SearchContentType AssetItem;
    public static SearchContentType People;
    public static SearchContentType Others;
}
public class Omnia.Fx.SharePoint.Models.Search.SearchFilter : object {
    [CompilerGeneratedAttribute]
private string <FieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeAsString>k__BackingField;
    [CompilerGeneratedAttribute]
private FilterOperator <Operator>k__BackingField;
    public string FieldName { get; public set; }
    public string Value { get; public set; }
    public string TypeAsString { get; public set; }
    public FilterOperator Operator { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FieldName();
    [CompilerGeneratedAttribute]
public void set_FieldName(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_TypeAsString();
    [CompilerGeneratedAttribute]
public void set_TypeAsString(string value);
    [CompilerGeneratedAttribute]
public FilterOperator get_Operator();
    [CompilerGeneratedAttribute]
public void set_Operator(FilterOperator value);
}
public class Omnia.Fx.SharePoint.Models.Search.SearchLimitResult`1 : object {
    [CompilerGeneratedAttribute]
private int <TotalRows>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<T> <LimitResults>k__BackingField;
    public int TotalRows { get; public set; }
    public IEnumerable`1<T> LimitResults { get; public set; }
    [CompilerGeneratedAttribute]
public int get_TotalRows();
    [CompilerGeneratedAttribute]
public void set_TotalRows(int value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<T> get_LimitResults();
    [CompilerGeneratedAttribute]
public void set_LimitResults(IEnumerable`1<T> value);
}
public static class Omnia.Fx.SharePoint.Models.Search.SearchMapper : object {
    public static Document ToDocumentIdentifier(DocumentSearchResult searchResult);
}
public class Omnia.Fx.SharePoint.Models.Search.SearchPropertyValue : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Name { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Omnia.Fx.SharePoint.Models.Search.SearchQueryBase : object {
    [CompilerGeneratedAttribute]
private string <OwnExplicitQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keyword>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RowLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Skip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentClass>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <ResultSourceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SortColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private SortDirection <SortDirection>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Refiners>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <RefinementFilters>k__BackingField;
    public string OwnExplicitQuery { get; public set; }
    public string Keyword { get; public set; }
    public int RowLimit { get; public set; }
    public int Skip { get; public set; }
    public string ContentClass { get; public set; }
    public Nullable`1<Guid> ResultSourceId { get; public set; }
    public string SortColumn { get; public set; }
    public SortDirection SortDirection { get; public set; }
    public string Refiners { get; public set; }
    public List`1<string> RefinementFilters { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OwnExplicitQuery();
    [CompilerGeneratedAttribute]
public void set_OwnExplicitQuery(string value);
    [CompilerGeneratedAttribute]
public string get_Keyword();
    [CompilerGeneratedAttribute]
public void set_Keyword(string value);
    [CompilerGeneratedAttribute]
public int get_RowLimit();
    [CompilerGeneratedAttribute]
public void set_RowLimit(int value);
    [CompilerGeneratedAttribute]
public int get_Skip();
    [CompilerGeneratedAttribute]
public void set_Skip(int value);
    [CompilerGeneratedAttribute]
public string get_ContentClass();
    [CompilerGeneratedAttribute]
public void set_ContentClass(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_ResultSourceId();
    [CompilerGeneratedAttribute]
public void set_ResultSourceId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_SortColumn();
    [CompilerGeneratedAttribute]
public void set_SortColumn(string value);
    [CompilerGeneratedAttribute]
public SortDirection get_SortDirection();
    [CompilerGeneratedAttribute]
public void set_SortDirection(SortDirection value);
    [CompilerGeneratedAttribute]
public string get_Refiners();
    [CompilerGeneratedAttribute]
public void set_Refiners(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_RefinementFilters();
    [CompilerGeneratedAttribute]
public void set_RefinementFilters(List`1<string> value);
}
public class Omnia.Fx.SharePoint.Models.Search.SearchWithCustomProperties`1 : object {
    [CompilerGeneratedAttribute]
private T <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SelectProperties>k__BackingField;
    public T Query { get; public set; }
    public List`1<string> SelectProperties { get; public set; }
    [CompilerGeneratedAttribute]
public T get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(T value);
    [CompilerGeneratedAttribute]
public List`1<string> get_SelectProperties();
    [CompilerGeneratedAttribute]
public void set_SelectProperties(List`1<string> value);
}
public class Omnia.Fx.SharePoint.Models.Search.SiteLogo : object {
    [CompilerGeneratedAttribute]
private string <SiteTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteLogoUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGroup>k__BackingField;
    public string SiteTitle { get; public set; }
    public string SiteLogoUrl { get; public set; }
    public string SiteUrl { get; public set; }
    public bool IsGroup { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SiteTitle();
    [CompilerGeneratedAttribute]
public void set_SiteTitle(string value);
    [CompilerGeneratedAttribute]
public string get_SiteLogoUrl();
    [CompilerGeneratedAttribute]
public void set_SiteLogoUrl(string value);
    [CompilerGeneratedAttribute]
public string get_SiteUrl();
    [CompilerGeneratedAttribute]
public void set_SiteUrl(string value);
    [CompilerGeneratedAttribute]
public bool get_IsGroup();
    [CompilerGeneratedAttribute]
public void set_IsGroup(bool value);
}
public class Omnia.Fx.SharePoint.Models.Search.SiteSearchQuery : SearchQueryBase {
    [CompilerGeneratedAttribute]
private List`1<CustomField> <QueryFieldSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SiteUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UrlMustMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <WebTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ContentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<CustomField>> <ContentTypeFieldSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SearchBytitle>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SearchByDescription>k__BackingField;
    public List`1<CustomField> QueryFieldSettings { get; public set; }
    public string FileName { get; public set; }
    public List`1<string> SiteUrls { get; public set; }
    public bool UrlMustMatch { get; public set; }
    public List`1<string> WebTemplates { get; public set; }
    public List`1<string> ContentTypes { get; public set; }
    public Dictionary`2<string, List`1<CustomField>> ContentTypeFieldSettings { get; public set; }
    public bool SearchBytitle { get; public set; }
    public bool SearchByDescription { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<CustomField> get_QueryFieldSettings();
    [CompilerGeneratedAttribute]
public void set_QueryFieldSettings(List`1<CustomField> value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_SiteUrls();
    [CompilerGeneratedAttribute]
public void set_SiteUrls(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_UrlMustMatch();
    [CompilerGeneratedAttribute]
public void set_UrlMustMatch(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_WebTemplates();
    [CompilerGeneratedAttribute]
public void set_WebTemplates(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ContentTypes();
    [CompilerGeneratedAttribute]
public void set_ContentTypes(List`1<string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, List`1<CustomField>> get_ContentTypeFieldSettings();
    [CompilerGeneratedAttribute]
public void set_ContentTypeFieldSettings(Dictionary`2<string, List`1<CustomField>> value);
    [CompilerGeneratedAttribute]
public bool get_SearchBytitle();
    [CompilerGeneratedAttribute]
public void set_SearchBytitle(bool value);
    [CompilerGeneratedAttribute]
public bool get_SearchByDescription();
    [CompilerGeneratedAttribute]
public void set_SearchByDescription(bool value);
}
public class Omnia.Fx.SharePoint.Models.Search.SiteSearchResult : BaseSearchResult {
    [CompilerGeneratedAttribute]
private string <SiteLogo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SearchPropertyValue> <DynamicProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteTitle>k__BackingField;
    public string SiteLogo { get; public set; }
    public string SiteName { get; public set; }
    public string SiteUrl { get; public set; }
    public string Description { get; public set; }
    public string ContentTypeId { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    public string WebTemplate { get; public set; }
    public string GroupId { get; public set; }
    public bool CanAccess { get; public set; }
    public List`1<SearchPropertyValue> DynamicProperties { get; public set; }
    public string SiteTitle { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SiteLogo();
    [CompilerGeneratedAttribute]
public void set_SiteLogo(string value);
    [CompilerGeneratedAttribute]
public string get_SiteName();
    [CompilerGeneratedAttribute]
public void set_SiteName(string value);
    [CompilerGeneratedAttribute]
public string get_SiteUrl();
    [CompilerGeneratedAttribute]
public void set_SiteUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ContentTypeId();
    [CompilerGeneratedAttribute]
public void set_ContentTypeId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CreatedAt();
    [CompilerGeneratedAttribute]
public void set_CreatedAt(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_WebTemplate();
    [CompilerGeneratedAttribute]
public void set_WebTemplate(string value);
    [CompilerGeneratedAttribute]
public string get_GroupId();
    [CompilerGeneratedAttribute]
public void set_GroupId(string value);
    [CompilerGeneratedAttribute]
public bool get_CanAccess();
    [CompilerGeneratedAttribute]
public void set_CanAccess(bool value);
    [CompilerGeneratedAttribute]
public List`1<SearchPropertyValue> get_DynamicProperties();
    [CompilerGeneratedAttribute]
public void set_DynamicProperties(List`1<SearchPropertyValue> value);
    [CompilerGeneratedAttribute]
public string get_SiteTitle();
    [CompilerGeneratedAttribute]
public void set_SiteTitle(string value);
}
public class Omnia.Fx.SharePoint.Models.Security.SharePointTokenResult : object {
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAppOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthValidationResult <AuthValidationResult>k__BackingField;
    public string AccessToken { get; public set; }
    public bool IsAppOnly { get; public set; }
    public AuthValidationResult AuthValidationResult { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public bool get_IsAppOnly();
    [CompilerGeneratedAttribute]
public void set_IsAppOnly(bool value);
    [CompilerGeneratedAttribute]
public AuthValidationResult get_AuthValidationResult();
    [CompilerGeneratedAttribute]
public void set_AuthValidationResult(AuthValidationResult value);
}
public enum Omnia.Fx.SharePoint.Models.SiteGroups.AssociatedGroup : Enum {
    public int value__;
    public static AssociatedGroup None;
    public static AssociatedGroup Owner;
    public static AssociatedGroup Member;
    public static AssociatedGroup Visitor;
}
public class Omnia.Fx.SharePoint.Models.SiteGroups.SiteGroup : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanCurrentUserViewMembership>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanCurrentUserManageGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanCurrentUserEditMembership>k__BackingField;
    [CompilerGeneratedAttribute]
private AssociatedGroup <AssociatedGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Identity> <Identities>k__BackingField;
    private UserCollection _userCollection;
    public int Id { get; private set; }
    public string Title { get; private set; }
    public bool CanCurrentUserViewMembership { get; private set; }
    public bool CanCurrentUserManageGroup { get; private set; }
    public bool CanCurrentUserEditMembership { get; private set; }
    public AssociatedGroup AssociatedGroup { get; private set; }
    public List`1<Identity> Identities { get; private set; }
    public SiteGroup(Group spGroup, AssociatedGroup associatedGroup, List`1<Identity> identities);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
private void set_Title(string value);
    [CompilerGeneratedAttribute]
public bool get_CanCurrentUserViewMembership();
    [CompilerGeneratedAttribute]
private void set_CanCurrentUserViewMembership(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanCurrentUserManageGroup();
    [CompilerGeneratedAttribute]
private void set_CanCurrentUserManageGroup(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanCurrentUserEditMembership();
    [CompilerGeneratedAttribute]
private void set_CanCurrentUserEditMembership(bool value);
    [CompilerGeneratedAttribute]
public AssociatedGroup get_AssociatedGroup();
    [CompilerGeneratedAttribute]
private void set_AssociatedGroup(AssociatedGroup value);
    [CompilerGeneratedAttribute]
public List`1<Identity> get_Identities();
    [CompilerGeneratedAttribute]
private void set_Identities(List`1<Identity> value);
    public void ValidateCanCurrentUserEditMembership();
    public void Update(List`1<User> newUsers);
    private ValueTuple`2<List`1<User>, HashSet`1<string>> GetAvailableUsersAndAadObjectIdHashSet(List`1<User> users);
}
public class Omnia.Fx.SharePoint.Models.SiteGroups.SiteGroupMembership : object {
    [CompilerGeneratedAttribute]
private string <SPUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<int, List`1<Identity>> <Memberships>k__BackingField;
    public string SPUrl { get; public set; }
    public Dictionary`2<int, List`1<Identity>> Memberships { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SPUrl();
    [CompilerGeneratedAttribute]
public void set_SPUrl(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<int, List`1<Identity>> get_Memberships();
    [CompilerGeneratedAttribute]
public void set_Memberships(Dictionary`2<int, List`1<Identity>> value);
}
public class Omnia.Fx.SharePoint.Models.SiteGroups.SiteGroupQuery : object {
    [CompilerGeneratedAttribute]
private string <SPUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeOwnerGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeMemberGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeVisitorGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <IncludeSharePointGroupIds>k__BackingField;
    public string SPUrl { get; public set; }
    public bool AllGroup { get; public set; }
    public bool IncludeOwnerGroup { get; public set; }
    public bool IncludeMemberGroup { get; public set; }
    public bool IncludeVisitorGroup { get; public set; }
    public List`1<int> IncludeSharePointGroupIds { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SPUrl();
    [CompilerGeneratedAttribute]
public void set_SPUrl(string value);
    [CompilerGeneratedAttribute]
public bool get_AllGroup();
    [CompilerGeneratedAttribute]
public void set_AllGroup(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeOwnerGroup();
    [CompilerGeneratedAttribute]
public void set_IncludeOwnerGroup(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeMemberGroup();
    [CompilerGeneratedAttribute]
public void set_IncludeMemberGroup(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeVisitorGroup();
    [CompilerGeneratedAttribute]
public void set_IncludeVisitorGroup(bool value);
    [CompilerGeneratedAttribute]
public List`1<int> get_IncludeSharePointGroupIds();
    [CompilerGeneratedAttribute]
public void set_IncludeSharePointGroupIds(List`1<int> value);
}
public class Omnia.Fx.SharePoint.Models.SiteGroups.SiteGroupView : object {
    [CompilerGeneratedAttribute]
private bool <HasManagedWebPermission>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SiteGroup> <SiteGroups>k__BackingField;
    public bool HasManagedWebPermission { get; public set; }
    public List`1<SiteGroup> SiteGroups { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_HasManagedWebPermission();
    [CompilerGeneratedAttribute]
public void set_HasManagedWebPermission(bool value);
    [CompilerGeneratedAttribute]
public List`1<SiteGroup> get_SiteGroups();
    [CompilerGeneratedAttribute]
public void set_SiteGroups(List`1<SiteGroup> value);
}
public class Omnia.Fx.SharePoint.Models.Sites.CustomField : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Multiple>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Filterable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Viewable>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <TermStoreId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <TermGroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TermGroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <TermSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TermSetName>k__BackingField;
    [CompilerGeneratedAttribute]
private CustomFieldTypeEnum <FieldType>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public Guid Id { get; public set; }
    public string InternalName { get; public set; }
    public string DisplayName { get; public set; }
    public bool Required { get; public set; }
    public bool Multiple { get; public set; }
    public bool Filterable { get; public set; }
    public bool Viewable { get; public set; }
    public Guid TermStoreId { get; public set; }
    public Guid TermGroupId { get; public set; }
    public string TermGroupName { get; public set; }
    public Guid TermSetId { get; public set; }
    public string TermSetName { get; public set; }
    public CustomFieldTypeEnum FieldType { get; public set; }
    public object Value { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_InternalName();
    [CompilerGeneratedAttribute]
public void set_InternalName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public bool get_Multiple();
    [CompilerGeneratedAttribute]
public void set_Multiple(bool value);
    [CompilerGeneratedAttribute]
public bool get_Filterable();
    [CompilerGeneratedAttribute]
public void set_Filterable(bool value);
    [CompilerGeneratedAttribute]
public bool get_Viewable();
    [CompilerGeneratedAttribute]
public void set_Viewable(bool value);
    [CompilerGeneratedAttribute]
public Guid get_TermStoreId();
    [CompilerGeneratedAttribute]
public void set_TermStoreId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_TermGroupId();
    [CompilerGeneratedAttribute]
public void set_TermGroupId(Guid value);
    [CompilerGeneratedAttribute]
public string get_TermGroupName();
    [CompilerGeneratedAttribute]
public void set_TermGroupName(string value);
    [CompilerGeneratedAttribute]
public Guid get_TermSetId();
    [CompilerGeneratedAttribute]
public void set_TermSetId(Guid value);
    [CompilerGeneratedAttribute]
public string get_TermSetName();
    [CompilerGeneratedAttribute]
public void set_TermSetName(string value);
    [CompilerGeneratedAttribute]
public CustomFieldTypeEnum get_FieldType();
    [CompilerGeneratedAttribute]
public void set_FieldType(CustomFieldTypeEnum value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
}
public enum Omnia.Fx.SharePoint.Models.Sites.CustomFieldTypeEnum : Enum {
    public int value__;
    public static CustomFieldTypeEnum Text;
    public static CustomFieldTypeEnum Boolean;
    public static CustomFieldTypeEnum MetaData;
    public static CustomFieldTypeEnum EnterpriseKeyword;
    public static CustomFieldTypeEnum PeoplePicker;
    public static CustomFieldTypeEnum Date;
}
public class Omnia.Fx.SharePoint.Models.Sites.EnsureSPSiteSelectedPermissionResult : object {
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public bool Success { get; public set; }
    public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
public void set_Success(bool value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
}
public class Omnia.Fx.SharePoint.Models.Sites.FollowSite : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private SharepointIds <SharepointIds>k__BackingField;
    [CompilerGeneratedAttribute]
private SiteCollection <SiteCollection>k__BackingField;
    public string Id { get; public set; }
    public string DisplayName { get; public set; }
    public string WebUrl { get; public set; }
    public SharepointIds SharepointIds { get; public set; }
    public SiteCollection SiteCollection { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_WebUrl();
    [CompilerGeneratedAttribute]
public void set_WebUrl(string value);
    [CompilerGeneratedAttribute]
public SharepointIds get_SharepointIds();
    [CompilerGeneratedAttribute]
public void set_SharepointIds(SharepointIds value);
    [CompilerGeneratedAttribute]
public SiteCollection get_SiteCollection();
    [CompilerGeneratedAttribute]
public void set_SiteCollection(SiteCollection value);
}
public class Omnia.Fx.SharePoint.Models.Sites.GraphSiteIdsRequestSupply : object {
    [CompilerGeneratedAttribute]
private List`1<GraphSiteResource> <Value>k__BackingField;
    public List`1<GraphSiteResource> Value { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<GraphSiteResource> get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(List`1<GraphSiteResource> value);
}
public class Omnia.Fx.SharePoint.Models.Sites.GraphSiteResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
internal class Omnia.Fx.SharePoint.Models.Sites.PollingSiteStatusTimerState : object {
    [CompilerGeneratedAttribute]
private DateTimeOffset <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldStop>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Result>k__BackingField;
    public DateTimeOffset StartTime { get; public set; }
    public bool ShouldStop { get; public set; }
    public bool Result { get; public set; }
    [CompilerGeneratedAttribute]
public DateTimeOffset get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public bool get_ShouldStop();
    [CompilerGeneratedAttribute]
public void set_ShouldStop(bool value);
    [CompilerGeneratedAttribute]
public bool get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(bool value);
}
public class Omnia.Fx.SharePoint.Models.Sites.SharepointIds : object {
    [CompilerGeneratedAttribute]
private Guid <ListId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ListItemId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ListItemUniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SiteId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <WebId>k__BackingField;
    public Guid ListId { get; public set; }
    public int ListItemId { get; public set; }
    public Guid ListItemUniqueId { get; public set; }
    public Guid SiteId { get; public set; }
    public string SiteUrl { get; public set; }
    public Guid WebId { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_ListId();
    [CompilerGeneratedAttribute]
public void set_ListId(Guid value);
    [CompilerGeneratedAttribute]
public int get_ListItemId();
    [CompilerGeneratedAttribute]
public void set_ListItemId(int value);
    [CompilerGeneratedAttribute]
public Guid get_ListItemUniqueId();
    [CompilerGeneratedAttribute]
public void set_ListItemUniqueId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_SiteId();
    [CompilerGeneratedAttribute]
public void set_SiteId(Guid value);
    [CompilerGeneratedAttribute]
public string get_SiteUrl();
    [CompilerGeneratedAttribute]
public void set_SiteUrl(string value);
    [CompilerGeneratedAttribute]
public Guid get_WebId();
    [CompilerGeneratedAttribute]
public void set_WebId(Guid value);
}
public class Omnia.Fx.SharePoint.Models.Sites.Site : object {
    [CompilerGeneratedAttribute]
private string <SiteLogo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SiteUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SearchPropertyValue> <DynamicProperties>k__BackingField;
    public string SiteLogo { get; public set; }
    public string SiteUrl { get; public set; }
    public string Title { get; public set; }
    public string Description { get; public set; }
    public string ContentTypeId { get; public set; }
    public Nullable`1<DateTime> CreatedAt { get; public set; }
    public string WebTemplate { get; public set; }
    public string GroupId { get; public set; }
    public bool CanAccess { get; public set; }
    public List`1<SearchPropertyValue> DynamicProperties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SiteLogo();
    [CompilerGeneratedAttribute]
public void set_SiteLogo(string value);
    [CompilerGeneratedAttribute]
public string get_SiteUrl();
    [CompilerGeneratedAttribute]
public void set_SiteUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ContentTypeId();
    [CompilerGeneratedAttribute]
public void set_ContentTypeId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CreatedAt();
    [CompilerGeneratedAttribute]
public void set_CreatedAt(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_WebTemplate();
    [CompilerGeneratedAttribute]
public void set_WebTemplate(string value);
    [CompilerGeneratedAttribute]
public string get_GroupId();
    [CompilerGeneratedAttribute]
public void set_GroupId(string value);
    [CompilerGeneratedAttribute]
public bool get_CanAccess();
    [CompilerGeneratedAttribute]
public void set_CanAccess(bool value);
    [CompilerGeneratedAttribute]
public List`1<SearchPropertyValue> get_DynamicProperties();
    [CompilerGeneratedAttribute]
public void set_DynamicProperties(List`1<SearchPropertyValue> value);
}
public class Omnia.Fx.SharePoint.Models.Sites.SiteCollection : object {
    [CompilerGeneratedAttribute]
private string <Hostname>k__BackingField;
    public string Hostname { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Hostname();
    [CompilerGeneratedAttribute]
public void set_Hostname(string value);
}
public class Omnia.Fx.SharePoint.Models.Sites.SiteException : Exception {
    private static string Namespace;
    internal SiteException(string errMsg);
    private static SiteException();
    public static SiteException SiteCollectionAdminPermissionMissing();
    public static SiteException UnableToSetSetSiteSelectedPermission();
}
public class Omnia.Fx.SharePoint.Models.Users.SharePointUserProfilePersonPropertyValue : SharePointUserProfilePropertyValueBase {
    [CompilerGeneratedAttribute]
private UserIdentity <User>k__BackingField;
    public SharePointUserPropertyValueTypes Type { get; }
    public UserIdentity User { get; public set; }
    public virtual SharePointUserPropertyValueTypes get_Type();
    [CompilerGeneratedAttribute]
public UserIdentity get_User();
    [CompilerGeneratedAttribute]
public void set_User(UserIdentity value);
}
[JsonConverterAttribute("Omnia.Fx.SharePoint.Models.Users.SharePointUserProfilePropertyValueConverter")]
public abstract class Omnia.Fx.SharePoint.Models.Users.SharePointUserProfilePropertyValueBase : OmniaJsonBase {
    public SharePointUserPropertyValueTypes Type { get; }
    public abstract virtual SharePointUserPropertyValueTypes get_Type();
}
internal class Omnia.Fx.SharePoint.Models.Users.SharePointUserProfilePropertyValueConverter : JsonConverter {
    public bool CanRead { get; }
    public bool CanWrite { get; }
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
}
public class Omnia.Fx.SharePoint.Models.Users.SharePointUserProfileTermSetPropertyValue : SharePointUserProfilePropertyValueBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<Guid> <TermIds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Multiple>k__BackingField;
    public SharePointUserPropertyValueTypes Type { get; }
    public IEnumerable`1<Guid> TermIds { get; public set; }
    public bool Multiple { get; public set; }
    public virtual SharePointUserPropertyValueTypes get_Type();
    [CompilerGeneratedAttribute]
public IEnumerable`1<Guid> get_TermIds();
    [CompilerGeneratedAttribute]
public void set_TermIds(IEnumerable`1<Guid> value);
    [CompilerGeneratedAttribute]
public bool get_Multiple();
    [CompilerGeneratedAttribute]
public void set_Multiple(bool value);
}
public class Omnia.Fx.SharePoint.Models.Users.SharePointUserProfileTextPropertyValue : SharePointUserProfilePropertyValueBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Texts>k__BackingField;
    public SharePointUserPropertyValueTypes Type { get; }
    public IEnumerable`1<string> Texts { get; public set; }
    public virtual SharePointUserPropertyValueTypes get_Type();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Texts();
    [CompilerGeneratedAttribute]
public void set_Texts(IEnumerable`1<string> value);
}
public enum Omnia.Fx.SharePoint.Models.Users.SharePointUserPropertyValueTypes : Enum {
    public int value__;
    public static SharePointUserPropertyValueTypes Text;
    public static SharePointUserPropertyValueTypes TermSet;
    public static SharePointUserPropertyValueTypes Person;
}
public interface Omnia.Fx.SharePoint.Search.ISearchResultResolver {
    public abstract virtual T GetObject(IDictionary`2<string, object> resultRow);
}
public static class Omnia.Fx.SharePoint.Search.SearchProperty : object {
}
[AttributeUsageAttribute("128")]
public class Omnia.Fx.SharePoint.Search.SearchPropertyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; private set; }
    public SearchPropertyAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
}
internal class Omnia.Fx.SharePoint.Search.SearchResultResolver : object {
    public sealed virtual T GetObject(IDictionary`2<string, object> resultRow);
    private bool TryParseToTargetType(IDictionary`2<string, object> resultRow, string paramName, Type targetType, Object& targetValue);
    private string GetStringPropertyFromSearchResult(IDictionary`2<string, object> resultRow, string propName);
    private Nullable`1<DateTime> GetDateTimePropertyFromSearchResult(IDictionary`2<string, object> resultRow, string propName);
    private Nullable`1<DateTimeOffset> GetDateTimeOffsetPropertyFromSearchResult(IDictionary`2<string, object> resultRow, string propName);
    private string GetStringValue(object value);
    private double GetDoublePropertyFromSearchResult(IDictionary`2<string, object> resultRow, string propName);
}
internal abstract class Omnia.Fx.SharePoint.Security.BaseSharePointPermissionEvaluator : object {
    [CompilerGeneratedAttribute]
private ISharePointContext <SharePointContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IScopedContextResolver <ScopedContextResolver>k__BackingField;
    protected ISharePointContext SharePointContext { get; }
    protected IScopedContextResolver ScopedContextResolver { get; }
    public BaseSharePointPermissionEvaluator(ISharePointContext sharePointContext, IScopedContextResolver scopedContextResolver);
    [CompilerGeneratedAttribute]
protected ISharePointContext get_SharePointContext();
    [CompilerGeneratedAttribute]
protected IScopedContextResolver get_ScopedContextResolver();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.BaseSharePointPermissionEvaluator/<EvaluateRoleAsync>d__7")]
public sealed virtual ValueTask`1<bool> EvaluateRoleAsync();
    protected abstract virtual ValueTask`1<bool> EvaluateRoleInternalAsync();
}
internal abstract class Omnia.Fx.SharePoint.Security.BaseSharePointResourceEvaluator : BaseResourceEvaluator {
    [CompilerGeneratedAttribute]
private ISharePointContext <SharePointContext>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SharePointClientContextProvider>k__BackingField;
    protected ISharePointContext SharePointContext { get; }
    protected ISharePointClientContextProvider SharePointClientContextProvider { get; }
    public BaseSharePointResourceEvaluator(ISharePointContext sharePointContext, ISharePointClientContextProvider sharePointClientContextProvider, IScopedContextResolver scopedContextResolver);
    [CompilerGeneratedAttribute]
protected ISharePointContext get_SharePointContext();
    [CompilerGeneratedAttribute]
protected ISharePointClientContextProvider get_SharePointClientContextProvider();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.BaseSharePointResourceEvaluator/<GetRoleResourceAsync>d__7")]
public virtual ValueTask`1<string> GetRoleResourceAsync();
    protected virtual Dictionary`2<string, ServiceParamTypes> GetParamInfo();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.BaseSharePointResourceEvaluator/<GetRoleResourceWithContextAsync>d__9")]
protected virtual ValueTask`1<string> GetRoleResourceWithContextAsync(Dictionary`2<string, string> context);
    protected abstract virtual ValueTask`1<string> GetRoleResourceInternalAsync();
    protected abstract virtual ValueTask`1<string> GetRoleResourceWithContextInternalAsync(Dictionary`2<string, string> context, ClientContext ctx);
}
public interface Omnia.Fx.SharePoint.Security.IListFullControlPermissionEvaluator {
}
public interface Omnia.Fx.SharePoint.Security.IListItemEditorPermissionEvaluator {
}
public interface Omnia.Fx.SharePoint.Security.IListItemFullControlPermissionEvaluator {
}
public interface Omnia.Fx.SharePoint.Security.IListItemResourceEvaluator {
}
public interface Omnia.Fx.SharePoint.Security.IListResourceEvaluator {
}
public interface Omnia.Fx.SharePoint.Security.ISiteAdminPermissionEvaluator {
}
public interface Omnia.Fx.SharePoint.Security.ISiteCollectionAdminPermissionEvaluator {
}
public interface Omnia.Fx.SharePoint.Security.ISiteCollectionResourceEvaluator {
}
public interface Omnia.Fx.SharePoint.Security.ISiteResourceEvaluator {
}
internal class Omnia.Fx.SharePoint.Security.ListFullControlPermissionEvaluator : BaseSharePointPermissionEvaluator {
    public ListFullControlPermissionEvaluator(IScopedContextResolver scopedContextResolver, ISharePointContext sharePointContext);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.ListFullControlPermissionEvaluator/<EvaluateRoleInternalAsync>d__1")]
protected virtual ValueTask`1<bool> EvaluateRoleInternalAsync();
}
internal class Omnia.Fx.SharePoint.Security.ListItemEditorPermissionEvaluator : BaseSharePointPermissionEvaluator {
    public ListItemEditorPermissionEvaluator(IScopedContextResolver scopedContextResolver, ISharePointContext sharePointContext);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.ListItemEditorPermissionEvaluator/<EvaluateRoleInternalAsync>d__1")]
protected virtual ValueTask`1<bool> EvaluateRoleInternalAsync();
}
internal class Omnia.Fx.SharePoint.Security.ListItemFullControlPermissionEvaluator : BaseSharePointPermissionEvaluator {
    public ListItemFullControlPermissionEvaluator(IScopedContextResolver scopedContextResolver, ISharePointContext sharePointContext);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.ListItemFullControlPermissionEvaluator/<EvaluateRoleInternalAsync>d__1")]
protected virtual ValueTask`1<bool> EvaluateRoleInternalAsync();
}
internal class Omnia.Fx.SharePoint.Security.ListItemResourceEvaluator : BaseSharePointResourceEvaluator {
    public ListItemResourceEvaluator(ISharePointContext sharePointContext, ISharePointClientContextProvider sharePointClientContextProvider, IScopedContextResolver scopedContextResolver);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.ListItemResourceEvaluator/<GetRoleResourceInternalAsync>d__1")]
protected virtual ValueTask`1<string> GetRoleResourceInternalAsync();
    protected virtual Dictionary`2<string, ServiceParamTypes> GetParamInfo();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.ListItemResourceEvaluator/<GetRoleResourceWithContextInternalAsync>d__3")]
protected virtual ValueTask`1<string> GetRoleResourceWithContextInternalAsync(Dictionary`2<string, string> context, ClientContext ctx);
    protected static string GetRoleResourceString(string siteRelativeUrl, Guid listId, int listItemId);
    public virtual ValueTask`1<Nullable`1<Guid>> GetConnectedAppInstanceIdAsync();
    protected virtual ValueTask`1<Nullable`1<Guid>> GetConnectedAppInstanceIdWithContextAsync(Dictionary`2<string, string> context);
}
internal class Omnia.Fx.SharePoint.Security.ListResourceEvaluator : BaseSharePointResourceEvaluator {
    public ListResourceEvaluator(ISharePointContext sharePointContext, ISharePointClientContextProvider sharePointClientContextProvider, IScopedContextResolver scopedContextResolver);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.ListResourceEvaluator/<GetRoleResourceInternalAsync>d__1")]
protected virtual ValueTask`1<string> GetRoleResourceInternalAsync();
    protected virtual Dictionary`2<string, ServiceParamTypes> GetParamInfo();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.ListResourceEvaluator/<GetRoleResourceWithContextInternalAsync>d__3")]
protected virtual ValueTask`1<string> GetRoleResourceWithContextInternalAsync(Dictionary`2<string, string> context, ClientContext ctx);
    protected static string GetRoleResourceString(string siteRelativeUrl, Guid listId);
    public virtual ValueTask`1<Nullable`1<Guid>> GetConnectedAppInstanceIdAsync();
    protected virtual ValueTask`1<Nullable`1<Guid>> GetConnectedAppInstanceIdWithContextAsync(Dictionary`2<string, string> context);
}
internal class Omnia.Fx.SharePoint.Security.SiteAdminPermissionEvaluator : BaseSharePointPermissionEvaluator {
    public SiteAdminPermissionEvaluator(IScopedContextResolver scopedContextResolver, ISharePointContext sharePointContext);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.SiteAdminPermissionEvaluator/<EvaluateRoleInternalAsync>d__1")]
protected virtual ValueTask`1<bool> EvaluateRoleInternalAsync();
}
internal class Omnia.Fx.SharePoint.Security.SiteCollectionAdminPermissionEvaluator : BaseSharePointPermissionEvaluator {
    public SiteCollectionAdminPermissionEvaluator(IScopedContextResolver scopedContextResolver, ISharePointContext sharePointContext);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.SiteCollectionAdminPermissionEvaluator/<EvaluateRoleInternalAsync>d__1")]
protected virtual ValueTask`1<bool> EvaluateRoleInternalAsync();
}
internal class Omnia.Fx.SharePoint.Security.SiteCollectionResourceEvaluator : BaseSharePointResourceEvaluator {
    public SiteCollectionResourceEvaluator(ISharePointContext sharePointContext, ISharePointClientContextProvider sharePointClientContextProvider, IScopedContextResolver scopedContextResolver);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.SiteCollectionResourceEvaluator/<GetRoleResourceInternalAsync>d__1")]
protected virtual ValueTask`1<string> GetRoleResourceInternalAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.SiteCollectionResourceEvaluator/<GetRoleResourceWithContextInternalAsync>d__2")]
protected virtual ValueTask`1<string> GetRoleResourceWithContextInternalAsync(Dictionary`2<string, string> context, ClientContext ctx);
    private string GetRoleResourceString(string siteCollectionRelativeUrl);
    public virtual ValueTask`1<Nullable`1<Guid>> GetConnectedAppInstanceIdAsync();
    protected virtual ValueTask`1<Nullable`1<Guid>> GetConnectedAppInstanceIdWithContextAsync(Dictionary`2<string, string> context);
}
internal class Omnia.Fx.SharePoint.Security.SiteResourceEvaluator : BaseSharePointResourceEvaluator {
    public SiteResourceEvaluator(ISharePointContext sharePointContext, ISharePointClientContextProvider sharePointClientContextProvider, IScopedContextResolver scopedContextResolver);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.SiteResourceEvaluator/<GetRoleResourceInternalAsync>d__1")]
protected virtual ValueTask`1<string> GetRoleResourceInternalAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Security.SiteResourceEvaluator/<GetRoleResourceWithContextInternalAsync>d__2")]
protected virtual ValueTask`1<string> GetRoleResourceWithContextInternalAsync(Dictionary`2<string, string> context, ClientContext ctx);
    protected string GetRoleResourceString(string siteRelativeUrl);
    public virtual ValueTask`1<Nullable`1<Guid>> GetConnectedAppInstanceIdAsync();
    protected virtual ValueTask`1<Nullable`1<Guid>> GetConnectedAppInstanceIdWithContextAsync(Dictionary`2<string, string> context);
}
public interface Omnia.Fx.SharePoint.Services.Contexts.ISharePointContext {
    public SharePointSiteContext Site { get; }
    public SharePointWebContext Web { get; }
    public SharePointListContext List { get; }
    public SharePointListItemContext ListItem { get; }
    public SharePointUserContext User { get; }
    public SharePointEnvironmentContext Environment { get; }
    public ClientContext SPClientContext { get; }
    public abstract virtual SharePointSiteContext get_Site();
    public abstract virtual SharePointWebContext get_Web();
    public abstract virtual SharePointListContext get_List();
    public abstract virtual SharePointListItemContext get_ListItem();
    public abstract virtual SharePointUserContext get_User();
    public abstract virtual SharePointEnvironmentContext get_Environment();
    public abstract virtual ClientContext get_SPClientContext();
}
public interface Omnia.Fx.SharePoint.Services.Contexts.ISharePointScopedContext {
    public string SPUrl { get; }
    public Nullable`1<Guid> ListId { get; }
    public Nullable`1<int> ListItemId { get; }
    public abstract virtual string get_SPUrl();
    public abstract virtual Nullable`1<Guid> get_ListId();
    public abstract virtual Nullable`1<int> get_ListItemId();
}
internal class Omnia.Fx.SharePoint.Services.Contexts.SharePointContext : object {
    [CompilerGeneratedAttribute]
private IScopedContextResolver <ScopedContextResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> <SPAppSettingsOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SPClientContextProvider>k__BackingField;
    private ClientContext _spClientContext;
    private SharePointSiteContext _siteContext;
    private SharePointWebContext _webContext;
    private SharePointUserContext _userContext;
    private SharePointListContext _listContext;
    private SharePointListItemContext _listItemContext;
    private IScopedContextResolver ScopedContextResolver { get; }
    private IOptionsMonitor`1<SharePointAppSettings> SPAppSettingsOptions { get; }
    private ISharePointClientContextProvider SPClientContextProvider { get; }
    public ClientContext SPClientContext { get; }
    public SharePointSiteContext Site { get; }
    public SharePointWebContext Web { get; }
    public SharePointListContext List { get; }
    public SharePointListItemContext ListItem { get; }
    public SharePointUserContext User { get; }
    public SharePointEnvironmentContext Environment { get; }
    public SharePointContext(IScopedContextResolver scopedContextResolver, IOptionsMonitor`1<SharePointAppSettings> spAppSettingsOptions, ISharePointClientContextProvider spClientContextProvider);
    [CompilerGeneratedAttribute]
private IScopedContextResolver get_ScopedContextResolver();
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> get_SPAppSettingsOptions();
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider get_SPClientContextProvider();
    public sealed virtual ClientContext get_SPClientContext();
    public sealed virtual SharePointSiteContext get_Site();
    public sealed virtual SharePointWebContext get_Web();
    public sealed virtual SharePointListContext get_List();
    public sealed virtual SharePointListItemContext get_ListItem();
    public sealed virtual SharePointUserContext get_User();
    public sealed virtual SharePointEnvironmentContext get_Environment();
    private Nullable`1<Guid> GetListId();
    private Nullable`1<int> GetListItemId();
    private void EnsureContextInfoLoaded();
    private bool EnsureWebInfoLoaded();
    private bool EnsureSiteInfoLoaded();
    private bool EnsureUserInfoLoaded();
    private ValueTuple`2<List, ListItem> GetListAndListItemInfo();
    private SharePointEnvironmentContext CreateSharePointEnvironmentContext(SharePointAppSettings spAppSettings);
}
internal class Omnia.Fx.SharePoint.Services.Contexts.SharePointScopedContext : object {
    [CompilerGeneratedAttribute]
private string <SPUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <ListId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ListItemId>k__BackingField;
    public string SPUrl { get; public set; }
    public Nullable`1<Guid> ListId { get; public set; }
    public Nullable`1<int> ListItemId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_SPUrl();
    [CompilerGeneratedAttribute]
public void set_SPUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Guid> get_ListId();
    [CompilerGeneratedAttribute]
public void set_ListId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ListItemId();
    [CompilerGeneratedAttribute]
public void set_ListItemId(Nullable`1<int> value);
}
internal class Omnia.Fx.SharePoint.Services.Email.EmailHelper : object {
    [CompilerGeneratedAttribute]
private IIdentityService <IdentityService>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointContextHelper <SharePointContextHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IBusinessProfilesService <BusinessProfilesService>k__BackingField;
    [CompilerGeneratedAttribute]
private ITenantService <TenantService>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SPClientContextProvider>k__BackingField;
    public IIdentityService IdentityService { get; }
    private ISharePointContextHelper SharePointContextHelper { get; }
    private IBusinessProfilesService BusinessProfilesService { get; }
    private ITenantService TenantService { get; }
    private ISharePointClientContextProvider SPClientContextProvider { get; }
    public EmailHelper(IIdentityService identityService, ISharePointContextHelper sharePointContextHelper, IBusinessProfilesService businessProfilesService, ITenantService tenantService);
    [CompilerGeneratedAttribute]
public IIdentityService get_IdentityService();
    [CompilerGeneratedAttribute]
private ISharePointContextHelper get_SharePointContextHelper();
    [CompilerGeneratedAttribute]
private IBusinessProfilesService get_BusinessProfilesService();
    [CompilerGeneratedAttribute]
private ITenantService get_TenantService();
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider get_SPClientContextProvider();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Email.EmailHelper/<GetLanguageAsync>d__16")]
public sealed virtual ValueTask`1<Language> GetLanguageAsync(IEmailLocalizationSetting emailLocalizationSetting, string spUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Email.EmailHelper/<GetLanguageByBusinessProfileAsync>d__17")]
public sealed virtual ValueTask`1<Language> GetLanguageByBusinessProfileAsync(Guid businessProfileId);
}
public interface Omnia.Fx.SharePoint.Services.Email.IEmailHelper {
    public abstract virtual ValueTask`1<Language> GetLanguageAsync(IEmailLocalizationSetting emailLocalizationSetting, string spUrl);
    public abstract virtual ValueTask`1<Language> GetLanguageByBusinessProfileAsync(Guid businessProfileId);
}
public interface Omnia.Fx.SharePoint.Services.Files.ISharePointFileContext {
    public abstract virtual ISharePointFileInfo EnsureFile(string fileName, Byte[] content);
    public abstract virtual ISharePointFileInfo EnsureFile(string fileName, string content);
    public abstract virtual Task ExecuteAsync();
}
public interface Omnia.Fx.SharePoint.Services.Files.ISharePointFileProvider {
    public abstract virtual ValueTask`1<File> GetFileAsync(Web web, string fileServerRelativeUrl, Action`2<ClientRuntimeContext, File> loadAction);
    public abstract virtual ISharePointFileContext CreateContext(Site site, Web web);
}
internal class Omnia.Fx.SharePoint.Services.Files.SharePointFileContext : object {
    private Web _web;
    private ISharePointEntityHelperFull _sharePointEntityHelper;
    private List`1<ISharePointFileInfoFull> _entitiesInfo;
    public SharePointFileContext(Site site, Web web, ISharePointEntityHelperProvider sharePointEntityHelperProvider, ILocalizationProvider localizationProvider);
    public sealed virtual ISharePointFileInfo EnsureFile(string fileName, Byte[] content);
    public sealed virtual ISharePointFileInfo EnsureFile(string fileName, string content);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Files.SharePointFileContext/<ExecuteAsync>d__6")]
public sealed virtual Task ExecuteAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Files.SharePointFileContext/<ExecuteActionsAsync>d__7")]
private Task ExecuteActionsAsync();
}
internal class Omnia.Fx.SharePoint.Services.Files.SharePointFileProvider : object {
    private ISharePointEntityHelperProvider _sharePointEntityHelperProvider;
    private ILocalizationProvider _localizationProvider;
    public SharePointFileProvider(ISharePointEntityHelperProvider sharePointEntityHelperProvider, ILocalizationProvider localizationProvider);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Files.SharePointFileProvider/<GetFileAsync>d__3")]
public sealed virtual ValueTask`1<File> GetFileAsync(Web web, string fileServerRelativeUrl, Action`2<ClientRuntimeContext, File> loadAction);
    public sealed virtual ISharePointFileContext CreateContext(Site site, Web web);
}
public interface Omnia.Fx.SharePoint.Services.Images.ISharepointImageUrlProvider {
    public abstract virtual string GetImagePreviewlUrl(ListItem imageItem);
    public abstract virtual string GetImagePreviewlUrl(File file);
    public abstract virtual ValueTuple`2<string, string> GetImageInformationFromUrl(string webUrl, string imageUrl);
}
internal class Omnia.Fx.SharePoint.Services.Images.SharepointImageUrlProvider : object {
    [CompilerGeneratedAttribute]
private ISharePointContext <SharePointContext>k__BackingField;
    public ISharePointContext SharePointContext { get; }
    public SharepointImageUrlProvider(ISharePointContext sharePointContext);
    [CompilerGeneratedAttribute]
public ISharePointContext get_SharePointContext();
    public sealed virtual string GetImagePreviewlUrl(ListItem imageItem);
    public sealed virtual string GetImagePreviewlUrl(File file);
    public sealed virtual ValueTuple`2<string, string> GetImageInformationFromUrl(string webUrl, string imageUrl);
}
public interface Omnia.Fx.SharePoint.Services.Languages.ILanguageService {
    public abstract virtual ValueTask`1<IEnumerable`1<Language>> GetAllLanguagesAsync();
}
internal class Omnia.Fx.SharePoint.Services.Languages.LanguageService : object {
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> <SPAppSettingsOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SPClientContextProvider>k__BackingField;
    private static List`1<Language> AllLanguages;
    public IOptionsMonitor`1<SharePointAppSettings> SPAppSettingsOptions { get; }
    public ISharePointClientContextProvider SPClientContextProvider { get; }
    public LanguageService(IOptionsMonitor`1<SharePointAppSettings> spAppSettingsOptions, ISharePointClientContextProvider spClientContextProvider);
    [CompilerGeneratedAttribute]
public IOptionsMonitor`1<SharePointAppSettings> get_SPAppSettingsOptions();
    [CompilerGeneratedAttribute]
public ISharePointClientContextProvider get_SPClientContextProvider();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Languages.LanguageService/<GetAllLanguagesAsync>d__8")]
public sealed virtual ValueTask`1<IEnumerable`1<Language>> GetAllLanguagesAsync();
}
internal class Omnia.Fx.SharePoint.Services.Lists.CentralImageLocationProvider : object {
    private List`1<string> ValidImageExtension;
    private List`1<string> ValidVideoExtension;
    private static string VIDEO_CONTENT_TYPE;
    [CompilerGeneratedAttribute]
private ISharePointContext <SharePointContext>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharepointImageUrlProvider <SharepointImagePreviewUrlProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaContext <OmniaContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> <SharePointAppSettings>k__BackingField;
    public ISharePointContext SharePointContext { get; }
    public ISharepointImageUrlProvider SharepointImagePreviewUrlProvider { get; }
    public IOmniaContext OmniaContext { get; }
    public IOptionsMonitor`1<SharePointAppSettings> SharePointAppSettings { get; }
    public CentralImageLocationProvider(ISharePointContext sharePointContext, ISharepointImageUrlProvider sharepointImagePreviewUrlProvider, IOmniaContext omniaContext, IOptionsMonitor`1<SharePointAppSettings> sharePointAppSettings);
    [CompilerGeneratedAttribute]
public ISharePointContext get_SharePointContext();
    [CompilerGeneratedAttribute]
public ISharepointImageUrlProvider get_SharepointImagePreviewUrlProvider();
    [CompilerGeneratedAttribute]
public IOmniaContext get_OmniaContext();
    [CompilerGeneratedAttribute]
public IOptionsMonitor`1<SharePointAppSettings> get_SharePointAppSettings();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Lists.CentralImageLocationProvider/<GetItem>d__16")]
public sealed virtual ValueTask`1<CentralImageLocationItem> GetItem(ListItem item);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Lists.CentralImageLocationProvider/<GetItemForVideoContentType>d__17")]
private ValueTask`1<CentralImageLocationItem> GetItemForVideoContentType(ListItem item);
    private string getDomainUrl();
}
public interface Omnia.Fx.SharePoint.Services.Lists.ICentralImageLocationProvider {
    public abstract virtual ValueTask`1<CentralImageLocationItem> GetItem(ListItem item);
}
public interface Omnia.Fx.SharePoint.Services.Lists.IListsService {
    public abstract virtual ValueTask`1<string> GetImageContent(Guid listId, int id);
    public abstract virtual ValueTask`1<CentralImageLocationResult> GetCentralImageLocationResultAsync(Guid listId, ListQuery listQuery, bool recursive, string folderServerRelativeUrl, bool includeVideos);
    public abstract virtual ValueTask`1<LibraryResolveResult> ResolveLibraryUrl(string libraryUrl);
    public abstract virtual ValueTask`1<LibraryResolveResult> ResolveLibraryFromAbsoluteUrl(string absoluteUrl);
}
internal class Omnia.Fx.SharePoint.Services.Lists.ListsService : object {
    [CompilerGeneratedAttribute]
private ISharePointContext <SharePointContext>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SPClientContextProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ICentralImageLocationProvider <CentralImageLocationProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointServiceHttpClientFactory <SharePointServiceHttpClientFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaContext <OmniaContext>k__BackingField;
    private static string CamlQueryWhereTag;
    private static string CamlQueryTag;
    private static string CamlViewTag;
    private ISharePointContext SharePointContext { get; }
    private ISharePointClientContextProvider SPClientContextProvider { get; }
    public ICentralImageLocationProvider CentralImageLocationProvider { get; }
    public ISharePointServiceHttpClientFactory SharePointServiceHttpClientFactory { get; }
    private IOmniaContext OmniaContext { get; }
    public ListsService(ISharePointContext sharePointContext, ISharePointClientContextProvider spClientContextProvider, ICentralImageLocationProvider centralImageLocationProvider, ISharePointServiceHttpClientFactory sharePointServiceHttpClientFactory, IOmniaContext omniaContext);
    [CompilerGeneratedAttribute]
private ISharePointContext get_SharePointContext();
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider get_SPClientContextProvider();
    [CompilerGeneratedAttribute]
public ICentralImageLocationProvider get_CentralImageLocationProvider();
    [CompilerGeneratedAttribute]
public ISharePointServiceHttpClientFactory get_SharePointServiceHttpClientFactory();
    [CompilerGeneratedAttribute]
private IOmniaContext get_OmniaContext();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Lists.ListsService/<ResolveLibraryUrl>d__19")]
public sealed virtual ValueTask`1<LibraryResolveResult> ResolveLibraryUrl(string libraryUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Lists.ListsService/<ResolveLibraryFromAbsoluteUrl>d__20")]
public sealed virtual ValueTask`1<LibraryResolveResult> ResolveLibraryFromAbsoluteUrl(string absoluteUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Lists.ListsService/<GetImageContent>d__21")]
public sealed virtual ValueTask`1<string> GetImageContent(Guid listId, int id);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Lists.ListsService/<GetCentralImageLocationResultAsync>d__22")]
public sealed virtual ValueTask`1<CentralImageLocationResult> GetCentralImageLocationResultAsync(Guid listId, ListQuery listQuery, bool recursive, string folderServerRelativeUrl, bool includeVideos);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Lists.ListsService/<GetCentralImageLocationDataAsync>d__23")]
private ValueTask`1<Tuple`2<string, List`1<CentralImageLocationItem>>> GetCentralImageLocationDataAsync(Guid listId, ListQuery listQuery, bool recursive, string folderServerRelativeUrl, bool includeVideos);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Lists.ListsService/<GetListBy>d__24")]
private ValueTask`1<List> GetListBy(Guid listId, Nullable`1<BaseType> baseType);
    private CamlQuery BuidDocumentsQuery(ListQuery listQuery);
    private string JoinCamlQueriesWithCustomFilterCaml(string camlQuery, string customFilterCaml);
    private String[] SplitCamlQueryWithWhere(string camlQuery);
    private string PatchAndCamlQueries(String[] camlQueries);
}
public interface Omnia.Fx.SharePoint.Services.Media.ISharepointMediaUrlProvider {
    public abstract virtual ValueTask`1<SharepointVideo> GetVideoEmbedUrl(string webUrl, string videoUrl, bool isSharingUrl);
}
internal class Omnia.Fx.SharePoint.Services.Media.SharepointMediaUrlProvider : object {
    [CompilerGeneratedAttribute]
private IConfiguredHttpClient`1<Office365GraphServiceApi> <GraphService>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharepointImageUrlProvider <SharepointImagePreviewUrlProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SPClientContextProvider>k__BackingField;
    public IConfiguredHttpClient`1<Office365GraphServiceApi> GraphService { get; }
    public ISharepointImageUrlProvider SharepointImagePreviewUrlProvider { get; }
    public ISharePointClientContextProvider SPClientContextProvider { get; }
    public SharepointMediaUrlProvider(IConfiguredHttpClient`1<Office365GraphServiceApi> graphService, ISharepointImageUrlProvider sharepointImagePreviewUrlProvider, ISharePointClientContextProvider spClientContextProvider);
    [CompilerGeneratedAttribute]
public IConfiguredHttpClient`1<Office365GraphServiceApi> get_GraphService();
    [CompilerGeneratedAttribute]
public ISharepointImageUrlProvider get_SharepointImagePreviewUrlProvider();
    [CompilerGeneratedAttribute]
public ISharePointClientContextProvider get_SPClientContextProvider();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Media.SharepointMediaUrlProvider/<GetVideoEmbedUrl>d__10")]
public sealed virtual ValueTask`1<SharepointVideo> GetVideoEmbedUrl(string webUrl, string videoUrl, bool isSharingUrl);
    public string GetSiteCollectionUrlByRequestUrl(string url);
}
public interface Omnia.Fx.SharePoint.Services.Principal.IPrincipalService {
    public abstract virtual ValueTask`1<SiteGroupView> GetSiteGroupViewAsync(SiteGroupQuery request);
    public abstract virtual ValueTask UpdateSiteGroupMembershipAsync(SiteGroupMembership siteGroupMembership);
    public abstract virtual ValueTask`1<List`1<User>> EnsureSharePointUsersAsync(ClientContext ctx, List`1<Identity> identities);
    public abstract virtual ValueTask`1<string> GetEveryoneExceptExternalUsersLoginNameAsync();
    internal abstract virtual ValueTask`1<string> GetSpecialIdentityLoginNameAsync(string identityMappingName);
}
internal class Omnia.Fx.SharePoint.Services.Principal.PrincipalService : object {
    private static string EveryoneExceptionExternalUserPrefix;
    [CompilerGeneratedAttribute]
private IOmniaContext <OmniaContext>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SharePointClientContextProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaCacheWithKeyHelper`1<IOmniaMemoryCache> <CacheHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OmniaAppSettings> <OmniaAppSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private IIdentityService <IdentityService>k__BackingField;
    private IOmniaContext OmniaContext { get; }
    private ISharePointClientContextProvider SharePointClientContextProvider { get; }
    private IOmniaCacheWithKeyHelper`1<IOmniaMemoryCache> CacheHelper { get; }
    private IOptionsMonitor`1<OmniaAppSettings> OmniaAppSettings { get; }
    private IIdentityService IdentityService { get; }
    public PrincipalService(ISharePointClientContextProvider sharePointClientContextProvider, IOptionsMonitor`1<OmniaAppSettings> omniaAppSettings, IOmniaMemoryCache cache, IOmniaContext omniaContext, IIdentityService identityService);
    private static PrincipalService();
    [CompilerGeneratedAttribute]
private IOmniaContext get_OmniaContext();
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider get_SharePointClientContextProvider();
    [CompilerGeneratedAttribute]
private IOmniaCacheWithKeyHelper`1<IOmniaMemoryCache> get_CacheHelper();
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OmniaAppSettings> get_OmniaAppSettings();
    [CompilerGeneratedAttribute]
private IIdentityService get_IdentityService();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<GetSiteGroupViewAsync>d__17")]
public sealed virtual ValueTask`1<SiteGroupView> GetSiteGroupViewAsync(SiteGroupQuery request);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<UpdateSiteGroupMembershipAsync>d__18")]
public sealed virtual ValueTask UpdateSiteGroupMembershipAsync(SiteGroupMembership siteGroupMembership);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<UpdateSiteGroupMembershipAsync>d__19")]
private ValueTask UpdateSiteGroupMembershipAsync(ClientContext ctx, SiteGroupView currentSiteGroupView, SiteGroupMembership siteGroupMembership);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<EnsureSharePointUsersAsync>d__20")]
private ValueTask`1<Dictionary`2<int, List`1<User>>> EnsureSharePointUsersAsync(ClientContext ctx, Dictionary`2<int, List`1<Identity>> sharePointGroupMemberships);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<EnsureSharePointUsersAsync>d__21")]
public sealed virtual ValueTask`1<List`1<User>> EnsureSharePointUsersAsync(ClientContext ctx, List`1<Identity> identities);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<PrepareSharePointUsersAsync>d__22")]
private ValueTask`1<List`1<User>> PrepareSharePointUsersAsync(ClientContext ctx, List`1<Identity> identities);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<ExecuteEnsureUserQueryAsync>d__23")]
private ValueTask ExecuteEnsureUserQueryAsync(ClientContext ctx);
    private void EnsureValidation(SiteGroupView siteGroupView, SiteGroupMembership siteGroupMembership);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<GetSiteGroupViewAsync>d__25")]
private ValueTask`1<SiteGroupView> GetSiteGroupViewAsync(ClientContext ctx, SiteGroupQuery request);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<CheckUserHavePermissionOnWebAsync>d__26")]
private ValueTask`1<bool> CheckUserHavePermissionOnWebAsync(ClientContext ctx, PermissionKind permissionKind);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<GetSiteGroupsAsync>d__27")]
protected virtual ValueTask`1<List`1<SiteGroup>> GetSiteGroupsAsync(ClientContext ctx, SiteGroupQuery request);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<GetEveryoneExceptExternalUsersLoginNameAsync>d__28")]
public virtual ValueTask`1<string> GetEveryoneExceptExternalUsersLoginNameAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<GetSpecialIdentityLoginNameAsync>d__29")]
public virtual ValueTask`1<string> GetSpecialIdentityLoginNameAsync(string identityMappingName);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<GetDynamicGroupsBySPLoginNameAsync>d__30")]
protected virtual ValueTask`1<Dictionary`2<string, ResolvedDynamicGroupIdentity>> GetDynamicGroupsBySPLoginNameAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<TryGetEveryoneExceptExternalUsersLoginNameByWebLanguageAsync>d__31")]
private static ValueTask`1<string> TryGetEveryoneExceptExternalUsersLoginNameByWebLanguageAsync(ClientContext ctx);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<TryGetEveryoneExceptExternalUsersLoginNameByUserLanguageAsync>d__32")]
private static ValueTask`1<string> TryGetEveryoneExceptExternalUsersLoginNameByUserLanguageAsync(ClientContext ctx);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<TryGetEveryoneExceptExternalUsersLoginName>d__33")]
private static ValueTask`1<string> TryGetEveryoneExceptExternalUsersLoginName(ClientContext ctx, UInt32 lcid);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<GetEveryoneExceptExternalUsersClaimName>d__34")]
private static ValueTask`1<string> GetEveryoneExceptExternalUsersClaimName(UInt32 lcid);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Principal.PrincipalService/<<GetEveryoneExceptExternalUsersLoginNameAsync>b__28_0>d")]
[CompilerGeneratedAttribute]
private Task`1<string> <GetEveryoneExceptExternalUsersLoginNameAsync>b__28_0(IOmniaCacheEntry entry);
}
public interface Omnia.Fx.SharePoint.Services.Search.ISearchService {
    public abstract virtual ValueTask`1<SearchLimitResult`1<ContentSearchResult>> GetContentSearchResults(ContentSearchQuery query);
    public abstract virtual ValueTask`1<SearchLimitResult`1<T>> GetLimitContentSearchResults(SearchWithCustomProperties`1<ContentSearchQuery> customQuery, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    public abstract virtual ValueTask`1<IEnumerable`1<T>> GetContentSearchResults(SearchWithCustomProperties`1<ContentSearchQuery> customQuery, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    public abstract virtual ValueTask`1<IEnumerable`1<T>> GetContentSearchResults(SearchWithCustomProperties`1<ContentSearchQuery> customQuery, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    public abstract virtual ValueTask`1<SearchLimitResult`1<PeopleSearchResult>> GetPeopleSearchResults(PeopleSearchQuery query);
    public abstract virtual ValueTask`1<SearchLimitResult`1<T>> GetLimitPeopleSearchResults(SearchWithCustomProperties`1<PeopleSearchQuery> query, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    public abstract virtual ValueTask`1<IEnumerable`1<T>> GetPeopleSearchResults(SearchWithCustomProperties`1<PeopleSearchQuery> customQuery, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    public abstract virtual ValueTask`1<IEnumerable`1<T>> GetPeopleSearchResults(SearchWithCustomProperties`1<PeopleSearchQuery> customQuery, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    public abstract virtual ValueTask`1<IEnumerable`1<SiteSearchResult>> GetSiteSearchResults(SiteSearchQuery query);
    public abstract virtual ValueTask`1<IEnumerable`1<T>> GetSiteSearchResults(SearchWithCustomProperties`1<SiteSearchQuery> customQuery, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    public abstract virtual ValueTask`1<IEnumerable`1<T>> GetSiteSearchResults(SearchWithCustomProperties`1<SiteSearchQuery> customQuery, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    public abstract virtual ValueTask`1<IEnumerable`1<DocumentSearchResult>> GetDocumentsSearchResults(DocumentSearchQuery query);
    public abstract virtual ValueTask`1<IEnumerable`1<T>> GetDocumentsSearchResults(SearchWithCustomProperties`1<DocumentSearchQuery> customQuery, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    public abstract virtual ValueTask`1<IEnumerable`1<T>> GetDocumentsSearchResults(SearchWithCustomProperties`1<DocumentSearchQuery> customQuery, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    public abstract virtual ValueTask`1<SearchLimitResult`1<T>> GetLimitDocumentsSearchResults(SearchWithCustomProperties`1<DocumentSearchQuery> customQuery, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    public abstract virtual ValueTask`1<IEnumerable`1<SiteSearchResult>> GetSitesFromSiteUrls(List`1<string> siteUrls, int searchBatch);
    public abstract virtual ValueTask`1<SearchLimitResult`1<T>> GetSearchLimitResultFromSP(KeywordQuery keywordQuery, Func`2<IDictionary`2<string, object>, T> bindResultRowToObject);
    public abstract virtual ValueTask`1<IEnumerable`1<T>> GetSearchResultFromSP(KeywordQuery keywordQuery, Func`2<IDictionary`2<string, object>, T> bindResultRowToObject);
    public abstract virtual ValueTask`1<ResultTableCollection> GetSearchResultFromSP(KeywordQuery keywordQuery);
}
internal class Omnia.Fx.SharePoint.Services.Search.KeywordQueryProxy : object {
    private Dictionary`2<string, object> _keywordQueryProps;
    private List`1<Sort> _sortProperties;
    [CompilerGeneratedAttribute]
private KeywordQuery <Query>k__BackingField;
    public KeywordQuery Query { get; private set; }
    public IReadOnlyDictionary`2<string, object> KeywordQueryProps { get; }
    public KeywordQueryProxy(ClientContext ctx);
    [CompilerGeneratedAttribute]
public KeywordQuery get_Query();
    [CompilerGeneratedAttribute]
private void set_Query(KeywordQuery value);
    public IReadOnlyDictionary`2<string, object> get_KeywordQueryProps();
    public void UpdateKeywordQueryWithCondition(Expression`1<Func`2<KeywordQuery, object>> prop, Func`2<KeywordQuery, bool> updateAction);
    public void UpdateKeywordQuery(Expression`1<Func`2<KeywordQuery, object>> prop, Action`1<KeywordQuery> updateAction);
    public void UpdateKeywordQuery(Expression`1<Func`2<KeywordQuery, object>> prop, object propValue);
    public void UpdateKeywordQueryStringCollection(Expression`1<Func`2<KeywordQuery, StringCollection>> prop, IEnumerable`1<string> values);
    public void AddSortColumn(string sortColumn, SortDirection direction);
    public void ClearSortColumn();
    public bool SetKeywordQueryProperties(string propertyKey, QueryPropertyValue propertyValue, bool enforce);
    private PropertyInfo EnsurePropertyInfo(LambdaExpression prop);
}
internal class Omnia.Fx.SharePoint.Services.Search.SearchService : object {
    public static string LocalSPSourceId;
    public static string LocalPeopleSourceId;
    public static string DocumentsSourceId;
    public static string SearchDateFormat;
    private ISharePointContext _sharePointContext;
    private ISearchResultResolver _searchResultResolver;
    private ILogFileWriter _logWriter;
    public SearchService(ISharePointContext sharePointContext, ISearchResultResolver searchResultResolver, ILogFileService logFileService);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetContentSearchResults>d__8")]
public sealed virtual ValueTask`1<SearchLimitResult`1<ContentSearchResult>> GetContentSearchResults(ContentSearchQuery query);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetLimitContentSearchResults>d__9`1")]
public sealed virtual ValueTask`1<SearchLimitResult`1<T>> GetLimitContentSearchResults(SearchWithCustomProperties`1<ContentSearchQuery> customQuery, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetContentSearchResults>d__10`1")]
public sealed virtual ValueTask`1<IEnumerable`1<T>> GetContentSearchResults(SearchWithCustomProperties`1<ContentSearchQuery> customQuery, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetContentSearchResults>d__11`1")]
public sealed virtual ValueTask`1<IEnumerable`1<T>> GetContentSearchResults(SearchWithCustomProperties`1<ContentSearchQuery> customQuery, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetPeopleSearchResults>d__12")]
public sealed virtual ValueTask`1<SearchLimitResult`1<PeopleSearchResult>> GetPeopleSearchResults(PeopleSearchQuery query);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetLimitPeopleSearchResults>d__13`1")]
public sealed virtual ValueTask`1<SearchLimitResult`1<T>> GetLimitPeopleSearchResults(SearchWithCustomProperties`1<PeopleSearchQuery> customQuery, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetPeopleSearchResults>d__14`1")]
public sealed virtual ValueTask`1<IEnumerable`1<T>> GetPeopleSearchResults(SearchWithCustomProperties`1<PeopleSearchQuery> customQuery, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetPeopleSearchResults>d__15`1")]
public sealed virtual ValueTask`1<IEnumerable`1<T>> GetPeopleSearchResults(SearchWithCustomProperties`1<PeopleSearchQuery> customQuery, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetSiteSearchResults>d__16")]
public sealed virtual ValueTask`1<IEnumerable`1<SiteSearchResult>> GetSiteSearchResults(SiteSearchQuery query);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetSiteSearchResults>d__17`1")]
public sealed virtual ValueTask`1<IEnumerable`1<T>> GetSiteSearchResults(SearchWithCustomProperties`1<SiteSearchQuery> customQuery, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetSiteSearchResults>d__18`1")]
public sealed virtual ValueTask`1<IEnumerable`1<T>> GetSiteSearchResults(SearchWithCustomProperties`1<SiteSearchQuery> customQuery, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetDocumentsSearchResults>d__19")]
public sealed virtual ValueTask`1<IEnumerable`1<DocumentSearchResult>> GetDocumentsSearchResults(DocumentSearchQuery query);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetDocumentsSearchResults>d__20`1")]
public sealed virtual ValueTask`1<IEnumerable`1<T>> GetDocumentsSearchResults(SearchWithCustomProperties`1<DocumentSearchQuery> customQuery, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetDocumentsSearchResults>d__21`1")]
public sealed virtual ValueTask`1<IEnumerable`1<T>> GetDocumentsSearchResults(SearchWithCustomProperties`1<DocumentSearchQuery> customQuery, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetLimitDocumentsSearchResults>d__22`1")]
public sealed virtual ValueTask`1<SearchLimitResult`1<T>> GetLimitDocumentsSearchResults(SearchWithCustomProperties`1<DocumentSearchQuery> customQuery, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetSitesFromSiteUrls>d__23")]
public sealed virtual ValueTask`1<IEnumerable`1<SiteSearchResult>> GetSitesFromSiteUrls(List`1<string> siteUrls, int searchBatch);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetSearchLimitResultFromSP>d__24`1")]
public sealed virtual ValueTask`1<SearchLimitResult`1<T>> GetSearchLimitResultFromSP(KeywordQuery keywordQuery, Func`2<IDictionary`2<string, object>, T> bindResultRowToObject);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetSearchResultFromSP>d__25`1")]
public sealed virtual ValueTask`1<IEnumerable`1<T>> GetSearchResultFromSP(KeywordQuery keywordQuery, Func`2<IDictionary`2<string, object>, T> bindResultRowToObject);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetSearchResultFromSP>d__26")]
public sealed virtual ValueTask`1<ResultTableCollection> GetSearchResultFromSP(KeywordQuery keywordQuery);
    private KeywordQueryProxy BuildContentSearchQuery(ClientContext ctx, ContentSearchQuery query, List`1<string> selectProperties);
    private KeywordQueryProxy BuildPeopleSearchQuery(ClientContext ctx, PeopleSearchQuery query, List`1<string> selectProperties);
    private KeywordQueryProxy BuildSiteSearchQuery(ClientContext ctx, SiteSearchQuery query, List`1<string> selectProperties);
    private KeywordQueryProxy BuildDocumentSearchQuery(ClientContext ctx, DocumentSearchQuery query, List`1<string> selectProperties);
    private KeywordQueryProxy BuildSearchQuery(ClientContext ctx, SearchQueryBase query, string defaultSourceId);
    private List`1<string> GetContentSelectProperties(List`1<string> properties);
    private List`1<string> GetPeopleSelectProperties(List`1<string> properties);
    private List`1<string> GetSiteSelectProperties(List`1<string> properties);
    private List`1<string> GetDocumentSelectProperties(List`1<string> properties);
    private IEnumerable`1<T> MapToObjectType(ResultTableCollection resultTableCollection, KeywordQueryProxy keywordQueryProxy, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    private IEnumerable`1<T> MapToObjectType(ResultTableCollection resultTableCollection, KeywordQueryProxy keywordQueryProxy, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    private SearchLimitResult`1<T> MapToSearchLimitObjectType(ResultTableCollection resultTableCollection, KeywordQueryProxy keywordQueryProxy, Func`3<IDictionary`2<string, object>, T, T> queryResultToTypeMapperFunc);
    private SearchLimitResult`1<T> MapToSearchLimitObjectType(ResultTableCollection resultTableCollection, KeywordQueryProxy keywordQueryProxy, Func`3<ResultTableCollection, IEnumerable`1<T>, IEnumerable`1<T>> queryResultToTypeMapperFunc);
    private List`1<string> BuildSearchQueryText(SiteSearchQuery query, KeywordQueryProxy keywordQueryProxy);
    private ContentSearchResult BindContentSearchResult(IDictionary`2<string, object> resultRow);
    private PeopleSearchResult BindPeopleSearchResult(IDictionary`2<string, object> resultRow);
    private SiteSearchResult BindSiteSearchResult(IDictionary`2<string, object> resultRow);
    private void GetDynamicProperties(IDictionary`2<string, object> resultRow, SiteSearchResult boundResult, List`1<CustomField> customeFields);
    private DocumentSearchResult BindDocumentContentSearchResult(IDictionary`2<string, object> resultRow);
    private List`1<List`1<T>> SplitListObjectToSubLists(List`1<T> source, int subListMaxValue, Func`2<T, int> itemValuePredicate);
    private string BuildSearchQueryText(string keyword, bool enableWildcardSearch);
    private void BuildCustomFieldQuery(CustomField field, KeywordQueryProxy keywordQueryProxy);
    private List`1<string> BuildFilters(List`1<SearchFilter> filters);
    private void BindBaseSearchResultProperties(BaseSearchResult result, IDictionary`2<string, object> resultRow);
    private string BuildAndOperatorQueryTemplate(string propertyName, List`1<string> values);
    private string BuildAndOperatorQueryTemplate(string propertyName, string value);
    private string GetStringPropertyFromSearchResult(IDictionary`2<string, object> resultRow, string propName);
    private Nullable`1<DateTime> GetDateTimePropertyFromSearchResult(IDictionary`2<string, object> resultRow, string propName);
    private SearchContentType GetSearchContentType(string contentClass);
    private string GetSearchPropertyNameByFieldType(CustomField field);
    private string GetStringValue(object value);
    private string GetTaxonomySearchResultValue(string value);
    private string GetUserFieldSearchResultValue(string value);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetSearchLimitResultFromSPInternal>d__60`1")]
private ValueTask`1<SearchLimitResult`1<T>> GetSearchLimitResultFromSPInternal(KeywordQuery keywordQuery, Func`2<IDictionary`2<string, object>, T> bindResultRowToObject, IReadOnlyDictionary`2<string, object> keywordQueryProps);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Search.SearchService/<GetSearchResultFromSPInternal>d__61`1")]
private ValueTask`1<IEnumerable`1<T>> GetSearchResultFromSPInternal(KeywordQuery keywordQuery, Func`2<IDictionary`2<string, object>, T> bindResultRowToObject, IReadOnlyDictionary`2<string, object> keywordQueryProps);
    private void WriteFileLog(IReadOnlyDictionary`2<string, object> queryProps, ResultTableCollection resultTables, object mappedResult);
    private void WriteErrorFileLog(IReadOnlyDictionary`2<string, object> queryProps, Exception ex);
    private string GetEndString(string additionalContent);
}
public interface Omnia.Fx.SharePoint.Services.SharePointEntities.ISharePointEntityContext {
    public abstract virtual ISharePointFieldInfo GetField(Guid id, Action`2<ClientRuntimeContext, Field> loadAction);
    public abstract virtual ISharePointFieldInfo GetField(string internalName, Action`2<ClientRuntimeContext, Field> loadAction);
    public abstract virtual ISharePointFieldInfo GetField(Action`2<ClientRuntimeContext, Field> loadAction);
    public abstract virtual ISharePointFieldProvisioningSetup EnsureField();
    public abstract virtual ISharePointFieldProvisioningSetup EnsureField(FieldAttribute fieldAttribute);
    public abstract virtual ISharePointContentTypeInfo GetContentType(string id, Action`2<ClientRuntimeContext, ContentType> loadAction);
    public abstract virtual ISharePointContentTypeInfo GetContentType(Action`2<ClientRuntimeContext, ContentType> loadAction);
    public abstract virtual ISharePointContentTypeProvisioningSetup EnsureContentType(bool updateChildren);
    public abstract virtual ISharePointContentTypeProvisioningSetup EnsureContentType(ContentTypeAttribute contentTypeAttribute, bool updateChildren);
    public abstract virtual ISharePointListInfo GetList(Guid id, Action`2<ClientRuntimeContext, List> loadAction);
    public abstract virtual ISharePointListInfo GetList(string listRelativeUrl, Action`2<ClientRuntimeContext, List> loadAction);
    public abstract virtual ISharePointListInfo GetList(Action`2<ClientRuntimeContext, List> loadAction);
    public abstract virtual ISharePointListInfo GetListByTitle(string title, Action`2<ClientRuntimeContext, List> loadAction);
    public abstract virtual ISharePointListProvisioningSetup EnsureList();
    public abstract virtual ISharePointListProvisioningSetup EnsureList(SPListAttribute listAttribute);
    public abstract virtual Task ExecuteAsync();
}
public interface Omnia.Fx.SharePoint.Services.SharePointEntities.ISharePointEntityProvider {
    public abstract virtual ValueTask`1<Field> GetFieldAsync(Web web, Guid id, Action`2<ClientRuntimeContext, Field> loadAction);
    public abstract virtual ValueTask`1<Field> GetFieldAsync(Web web, string internalName, Action`2<ClientRuntimeContext, Field> loadAction);
    public abstract virtual ValueTask`1<ContentType> GetContentTypeAsync(Web web, string id, Action`2<ClientRuntimeContext, ContentType> loadAction);
    public abstract virtual ValueTask`1<List> GetListAsync(Web web, string listServerRelativeUrl, Action`2<ClientRuntimeContext, List> loadAction);
    public abstract virtual ValueTask`1<List> GetListAsync(Web web, Guid id, Action`2<ClientRuntimeContext, List> loadAction);
    public abstract virtual ValueTask`1<List> GetListByTitleAsync(Web web, string title, Action`2<ClientRuntimeContext, List> loadAction);
    public abstract virtual ValueTask`1<List> GetListByRelativeUrlAsync(Web web, string listRelativeUrl, Action`2<ClientRuntimeContext, List> loadAction);
    public abstract virtual ISharePointEntityContext CreateContext(Site site, Web web);
    public abstract virtual ValueTask`1<Folder> EnsureFolders(ClientContext ctx, Folder rootFolder, string path);
}
internal class Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityContext : object {
    private Web _web;
    private ISharePointEntityHelperFull _sharePointEntityHelper;
    private List`1<ISharePointEntityInfo> _entitiesInfo;
    public SharePointEntityContext(Site site, Web web, ISharePointEntityHelperProvider sharePointEntityHelperProvider, ILocalizationProvider localizationProvider);
    public sealed virtual ISharePointFieldInfo GetField(Guid id, Action`2<ClientRuntimeContext, Field> loadAction);
    public sealed virtual ISharePointFieldInfo GetField(string internalName, Action`2<ClientRuntimeContext, Field> loadAction);
    public sealed virtual ISharePointFieldInfo GetField(Action`2<ClientRuntimeContext, Field> loadAction);
    public sealed virtual ISharePointFieldProvisioningSetup EnsureField();
    public sealed virtual ISharePointFieldProvisioningSetup EnsureField(FieldAttribute fieldAttribute);
    public sealed virtual ISharePointContentTypeInfo GetContentType(string id, Action`2<ClientRuntimeContext, ContentType> loadAction);
    public sealed virtual ISharePointContentTypeInfo GetContentType(Action`2<ClientRuntimeContext, ContentType> loadAction);
    public sealed virtual ISharePointContentTypeProvisioningSetup EnsureContentType(bool updateChildren);
    public sealed virtual ISharePointContentTypeProvisioningSetup EnsureContentType(ContentTypeAttribute contentTypeAttribute, bool updateChildren);
    public sealed virtual ISharePointListInfo GetList(Guid id, Action`2<ClientRuntimeContext, List> loadAction);
    public sealed virtual ISharePointListInfo GetList(string listRelativeUrl, Action`2<ClientRuntimeContext, List> loadAction);
    public sealed virtual ISharePointListInfo GetList(Action`2<ClientRuntimeContext, List> loadAction);
    public sealed virtual ISharePointListInfo GetListByTitle(string title, Action`2<ClientRuntimeContext, List> loadAction);
    public sealed virtual ISharePointListProvisioningSetup EnsureList();
    public sealed virtual ISharePointListProvisioningSetup EnsureList(SPListAttribute listAttribute);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityContext/<ExecuteAsync>d__19")]
public sealed virtual Task ExecuteAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityContext/<InitMainEntityAsync>d__20")]
private Task InitMainEntityAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityContext/<EnsureMainEntityAsync>d__21")]
private Task EnsureMainEntityAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityContext/<ExecuteRelatedActionsAsync>d__22")]
private Task ExecuteRelatedActionsAsync();
}
internal class Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityProvider : object {
    private ISharePointEntityHelperProvider _sharePointEntityHelperProvider;
    private ILocalizationProvider _localizationProvider;
    private ISharePointContext SharePointContext;
    public SharePointEntityProvider(ISharePointEntityHelperProvider sharePointEntityHelperProvider, ILocalizationProvider localizationProvider, ISharePointContext sharePointContext);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityProvider/<GetFieldAsync>d__4")]
public sealed virtual ValueTask`1<Field> GetFieldAsync(Web web, Guid id, Action`2<ClientRuntimeContext, Field> loadAction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityProvider/<GetFieldAsync>d__5")]
public sealed virtual ValueTask`1<Field> GetFieldAsync(Web web, string internalName, Action`2<ClientRuntimeContext, Field> loadAction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityProvider/<GetContentTypeAsync>d__6")]
public sealed virtual ValueTask`1<ContentType> GetContentTypeAsync(Web web, string id, Action`2<ClientRuntimeContext, ContentType> loadAction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityProvider/<GetListAsync>d__7")]
public sealed virtual ValueTask`1<List> GetListAsync(Web web, string listServerRelativeUrl, Action`2<ClientRuntimeContext, List> loadAction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityProvider/<GetListByRelativeUrlAsync>d__8")]
public sealed virtual ValueTask`1<List> GetListByRelativeUrlAsync(Web web, string listRelativeUrl, Action`2<ClientRuntimeContext, List> loadAction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityProvider/<GetListAsync>d__9")]
public sealed virtual ValueTask`1<List> GetListAsync(Web web, Guid id, Action`2<ClientRuntimeContext, List> loadAction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityProvider/<GetListByTitleAsync>d__10")]
public sealed virtual ValueTask`1<List> GetListByTitleAsync(Web web, string title, Action`2<ClientRuntimeContext, List> loadAction);
    public sealed virtual ISharePointEntityContext CreateContext(Site site, Web web);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.SharePointEntities.SharePointEntityProvider/<EnsureFolders>d__12")]
public sealed virtual ValueTask`1<Folder> EnsureFolders(ClientContext ctx, Folder rootFolder, string path);
}
internal class Omnia.Fx.SharePoint.Services.Sites.FollowSiteService : object {
    [CompilerGeneratedAttribute]
private IOmniaContext <OmniaContext>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<FollowSiteService> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfiguredHttpClient`1<Office365GraphServiceApi> <GraphService>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> <SharepointSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SharepointHostname>k__BackingField;
    [CompilerGeneratedAttribute]
private IIdentityService <IdentityService>k__BackingField;
    private IOmniaContext OmniaContext { get; }
    private ILogger`1<FollowSiteService> Logger { get; }
    private IConfiguredHttpClient`1<Office365GraphServiceApi> GraphService { get; }
    private IOptionsMonitor`1<SharePointAppSettings> SharepointSettings { get; }
    private string SharepointHostname { get; }
    private IIdentityService IdentityService { get; }
    public FollowSiteService(ILogger`1<FollowSiteService> logger, IConfiguredHttpClient`1<Office365GraphServiceApi> graphService, IOmniaContext omniaContext, IOptionsMonitor`1<SharePointAppSettings> sharepointSettings, IIdentityService identityService);
    [CompilerGeneratedAttribute]
private IOmniaContext get_OmniaContext();
    [CompilerGeneratedAttribute]
private ILogger`1<FollowSiteService> get_Logger();
    [CompilerGeneratedAttribute]
private IConfiguredHttpClient`1<Office365GraphServiceApi> get_GraphService();
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> get_SharepointSettings();
    [CompilerGeneratedAttribute]
private string get_SharepointHostname();
    [CompilerGeneratedAttribute]
private IIdentityService get_IdentityService();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.FollowSiteService/<GetCurrentUserFollowedSitesAsync>d__19")]
public sealed virtual ValueTask`1<IList`1<FollowSite>> GetCurrentUserFollowedSitesAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.FollowSiteService/<FollowSiteBySiteUrl>d__20")]
public sealed virtual ValueTask`1<bool> FollowSiteBySiteUrl(string siteUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.FollowSiteService/<FollowSite>d__21")]
public sealed virtual ValueTask`1<bool> FollowSite(string siteId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.FollowSiteService/<UnfollowSiteBySiteUrl>d__22")]
public sealed virtual ValueTask`1<bool> UnfollowSiteBySiteUrl(string siteUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.FollowSiteService/<UnfollowSite>d__23")]
public sealed virtual ValueTask`1<bool> UnfollowSite(string siteId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.FollowSiteService/<UpdateLastModifiedInUserpropertyBag>d__24")]
private ValueTask UpdateLastModifiedInUserpropertyBag();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.FollowSiteService/<GetSiteIdFromSiteUrl>d__25")]
private ValueTask`1<string> GetSiteIdFromSiteUrl(string siteUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.FollowSiteService/<GetGraphFollowedSites>d__26")]
private ValueTask`1<FollowSitesResult> GetGraphFollowedSites(string url);
}
internal class Omnia.Fx.SharePoint.Services.Sites.FollowSitesResult : object {
    [CompilerGeneratedAttribute]
private string <NextLink>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FollowSite> <Value>k__BackingField;
    [JsonPropertyAttribute("@odata.nextLink")]
public string NextLink { get; public set; }
    public IEnumerable`1<FollowSite> Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_NextLink();
    [CompilerGeneratedAttribute]
public void set_NextLink(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<FollowSite> get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(IEnumerable`1<FollowSite> value);
}
internal class Omnia.Fx.SharePoint.Services.Sites.GraphClientHelper : object {
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.GraphClientHelper/<ExecuteWithRetryAsync>d__0")]
public static ValueTask`1<HttpResponseMessage> ExecuteWithRetryAsync(Func`1<ValueTask`1<HttpResponseMessage>> func, string description, bool throwIfFailed, Func`1<ValueTask`1<bool>> checkIfNeedToRetryAfterDelayFunc);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.GraphClientHelper/<ParseGetErrorMessage>d__1")]
private static ValueTask`1<string> ParseGetErrorMessage(HttpResponseMessage message);
}
public interface Omnia.Fx.SharePoint.Services.Sites.IFollowSiteService {
    public abstract virtual ValueTask`1<bool> UnfollowSite(string siteId);
    public abstract virtual ValueTask`1<bool> UnfollowSiteBySiteUrl(string siteUrl);
    public abstract virtual ValueTask`1<bool> FollowSite(string siteId);
    public abstract virtual ValueTask`1<bool> FollowSiteBySiteUrl(string siteUrl);
    public abstract virtual ValueTask`1<IList`1<FollowSite>> GetCurrentUserFollowedSitesAsync();
}
public interface Omnia.Fx.SharePoint.Services.Sites.IM365SiteService {
    public abstract virtual ValueTask`1<SiteCollectionCreationResult> CreateM365GroupAsync(M365GroupSiteCollectionCreationInformation siteCollectionCreationInformation, int waitForReadySecondsTimeout, bool elevated);
    public abstract virtual ValueTask`1<SiteCollectionCreationResult> CreateMicrosoftTeamAsync(MicrosoftTeamCreationInformation siteCollectionCreationInformation, int waitForReadySecondsTimeout, bool elevated, Func`2<SiteCollectionCreationResult, Task> onTeamsCreatedFuncAsync, Func`3<string, MicrosoftTeamChannel, Task> onChannelCreatedFuncAsync);
    public abstract virtual ValueTask`1<SiteCollectionCreationResult> CloneMicrosoftTeamAsync(MicrosoftTeamCloningInformation microsoftTeamCloningInformation, MicrosoftTeamCloningOverrideProperties additionalCloningProperties, int waitForReadySecondsTimeout, bool elevated);
    public abstract virtual ValueTask`1<Nullable`1<Guid>> PollingForO365GroupToBeReadyAsync(string siteCollectionUrl, int intervalSeconds, int waitForReadySecondsTimeout);
    public abstract virtual ValueTask`1<TeamModel> GetTeamAsync(string teamId);
    public abstract virtual ValueTask`1<M365GroupNamingPolicyValidationResult> ValidateM365GroupNamingPolicyAsync(M365GroupNamingPolicyValidationRequest request);
}
public interface Omnia.Fx.SharePoint.Services.Sites.IModernSiteService {
    public abstract virtual ValueTask DeleteCommunicationSiteAsync(Guid siteId);
    public abstract virtual ValueTask`1<SiteCollectionCreationResult> CreateCommunicationSiteAsync(ModernSiteCollectionCreationInformation siteCollectionCreationInformation, bool everyoneExceptExternalUsersAsDefaultVisitor, int waitForReadySecondsTimeout);
    public abstract virtual ValueTask`1<SiteCollectionCreationResult> CreateTeamSiteAsync(ModernSiteCollectionCreationInformation siteCollectionCreationInformation, int waitForReadySecondsTimeout);
    public abstract virtual ValueTask`1<SiteCollectionCreationResult> CreateModernSiteAsync(ModernSiteCollectionCreationInformation siteCollectionCreationInformation, string siteTemplate, int waitForReadySecondsTimeout);
    public abstract virtual ValueTask`1<bool> PollingForSiteToBeReadyAsync(string siteCollectionUrl, int intervalSeconds, int waitForReadySecondsTimeout);
    public abstract virtual ValueTask UpdateSiteTimezoneAsync(string spUrl, int timezoneId);
    public abstract virtual ValueTask`1<HttpStatusCode> CheckSiteCollectionStatusAsync(string siteCollectionUrl);
    public abstract virtual ValueTask EnsureActiveFeatureAsync(string url, Guid featureId);
    public abstract virtual ValueTask`1<SiteAliasValidationResult> ValidateSiteAliasAsync(SiteAliasValidationRequest request);
    public abstract virtual ValueTask EnsureUserIsSiteAdminAsync(string spSiteUrl, string loginName, bool elevated);
    public abstract virtual ValueTask RemoveUserFromSiteAdminAsync(string spSiteUrl, string loginName, bool elevated);
    public abstract virtual ValueTask`1<SPSiteCollectionAdminInfo> GetSharePointSiteInfoAsync(string spSiteUrl, bool elevated);
    public abstract virtual ValueTask`1<bool> ValidateCurrentUserIsSiteAdminAsync(string spUrl);
}
public interface Omnia.Fx.SharePoint.Services.Sites.ISiteSelectedPermissionService {
    public abstract virtual ValueTask`1<bool> EnsureSitePermissionForApp(string siteUrl);
    public abstract virtual ValueTask`1<bool> RemoveSitePermissionForApp(string siteUrl);
}
internal class Omnia.Fx.SharePoint.Services.Sites.M365SiteService : object {
    private static int IntervalSecondsToCheckSiteReadyStatus;
    private static int MembershipPerRequestInGroupApi;
    private static int MembershipPerRequestInTeamBulkApi;
    [CompilerGeneratedAttribute]
private ILogger`1<M365SiteService> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointServiceHttpClientFactory <SharePointServiceHttpClientFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private IModernSiteService <ModernSiteService>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> <SPAppSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SPClientContextProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IAzureAdUserService <AzureAdService>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfiguredHttpClient`1<Office365GraphServiceApi> <GraphService>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaContext <OmniaContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IIdentityService <IdentityService>k__BackingField;
    private ILogger`1<M365SiteService> Logger { get; }
    private ISharePointServiceHttpClientFactory SharePointServiceHttpClientFactory { get; }
    private IModernSiteService ModernSiteService { get; }
    protected IOptionsMonitor`1<SharePointAppSettings> SPAppSettings { get; }
    protected ISharePointClientContextProvider SPClientContextProvider { get; }
    private IAzureAdUserService AzureAdService { get; }
    private IConfiguredHttpClient`1<Office365GraphServiceApi> GraphService { get; }
    private IOmniaContext OmniaContext { get; }
    private IIdentityService IdentityService { get; }
    public M365SiteService(IOptionsMonitor`1<SharePointAppSettings> spAppSettings, ISharePointServiceHttpClientFactory sharePointServiceHttpClientFactory, IModernSiteService modernSiteService, ILogger`1<M365SiteService> logger, ISharePointClientContextProvider spClientContextProvider, IAzureAdUserService azureAdService, IConfiguredHttpClient`1<Office365GraphServiceApi> graphService, IOmniaContext omniaContext, IIdentityService identityService);
    [CompilerGeneratedAttribute]
private ILogger`1<M365SiteService> get_Logger();
    [CompilerGeneratedAttribute]
private ISharePointServiceHttpClientFactory get_SharePointServiceHttpClientFactory();
    [CompilerGeneratedAttribute]
private IModernSiteService get_ModernSiteService();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<SharePointAppSettings> get_SPAppSettings();
    [CompilerGeneratedAttribute]
protected ISharePointClientContextProvider get_SPClientContextProvider();
    [CompilerGeneratedAttribute]
private IAzureAdUserService get_AzureAdService();
    [CompilerGeneratedAttribute]
private IConfiguredHttpClient`1<Office365GraphServiceApi> get_GraphService();
    [CompilerGeneratedAttribute]
private IOmniaContext get_OmniaContext();
    [CompilerGeneratedAttribute]
private IIdentityService get_IdentityService();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<CreateM365GroupAsync>d__32")]
public virtual ValueTask`1<SiteCollectionCreationResult> CreateM365GroupAsync(M365GroupSiteCollectionCreationInformation siteCollectionCreationInformation, int waitForReadySecondsTimeout, bool elevated);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<CloneMicrosoftTeamAsync>d__33")]
public virtual ValueTask`1<SiteCollectionCreationResult> CloneMicrosoftTeamAsync(MicrosoftTeamCloningInformation microsoftTeamCloningInformation, MicrosoftTeamCloningOverrideProperties additionalCloningProperties, int waitForReadySecondsTimeout, bool elevated);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<CreateMicrosoftTeamAsync>d__34")]
public virtual ValueTask`1<SiteCollectionCreationResult> CreateMicrosoftTeamAsync(MicrosoftTeamCreationInformation siteCollectionCreationInformation, int waitForReadySecondsTimeout, bool elevated, Func`2<SiteCollectionCreationResult, Task> onTeamsCreatedFuncAsync, Func`3<string, MicrosoftTeamChannel, Task> onChannelCreatedFuncAsync);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<ValidateM365GroupNamingPolicyAsync>d__35")]
public sealed virtual ValueTask`1<M365GroupNamingPolicyValidationResult> ValidateM365GroupNamingPolicyAsync(M365GroupNamingPolicyValidationRequest request);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<PollingForO365GroupToBeReadyAsync>d__36")]
public virtual ValueTask`1<Nullable`1<Guid>> PollingForO365GroupToBeReadyAsync(string siteCollectionUrl, int intervalSeconds, int waitForReadySecondsTimeout);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<GetTeamAsync>d__37")]
public virtual ValueTask`1<TeamModel> GetTeamAsync(string teamId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<ValidateM365GroupAsync>d__38")]
private ValueTask`1<ValidateGroupNameRestApiResponse> ValidateM365GroupAsync(string title, string alias);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<CloningMicrosoftTeamAsync>d__39")]
private ValueTask`1<HttpResponseMessage> CloningMicrosoftTeamAsync(MicrosoftTeamCloningInformation siteCollectionCloningInformation, bool elevated);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<CreateTeamRequestAsync>d__40")]
private Task`1<HttpResponseMessage> CreateTeamRequestAsync(MicrosoftTeamCreationInformation siteCollectionCreationInformation, bool elevated);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<GetUserODataBindingsAsync>d__41")]
private ValueTask`1<List`1<string>> GetUserODataBindingsAsync(Identity[] identities);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<EnsureUserToMsTeamAsync>d__42")]
private Task EnsureUserToMsTeamAsync(string teamId, MicrosoftTeamCreationInformation siteCollectionCreationInformation);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<EnsureVisibilityToMsTeamAndGroup>d__43")]
private Task EnsureVisibilityToMsTeamAndGroup(string teamId, MicrosoftTeamCreationInformation siteCollectionCreationInformation);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<EnsureInstallAppsAsync>d__44")]
private Task EnsureInstallAppsAsync(string teamId, MicrosoftTeamCreationInformation siteCollectionCreationInformation);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<GetGeneralChannelIdAsync>d__45")]
private Task`1<string> GetGeneralChannelIdAsync(string teamId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<CreateChannelAsync>d__46")]
private Task`1<string> CreateChannelAsync(string teamId, MicrosoftTeamChannel channel);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<CreateTabAsync>d__47")]
private Task CreateTabAsync(string teamId, string channelId, string channelName, MicrosoftTeamTab tab);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<EnsureChannelAsync>d__48")]
private Task EnsureChannelAsync(string teamId, MicrosoftTeamChannel channel, Func`3<string, MicrosoftTeamChannel, Task> onChannelCreatedFuncAsync);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<GetExistedChannelTabAsync>d__49")]
private Task`1<string> GetExistedChannelTabAsync(string teamId, string channelId, string tabName);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<GetExistedChannelIdAsync>d__50")]
private Task`1<string> GetExistedChannelIdAsync(string teamId, string channelName);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<EnsureChannelsAsync>d__51")]
private Task EnsureChannelsAsync(string teamId, MicrosoftTeamCreationInformation information, Func`3<string, MicrosoftTeamChannel, Task> onChannelCreatedFuncAsync);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<TryInstallAppAsync>d__52")]
private ValueTask`1<HttpResponseMessage> TryInstallAppAsync(string teamId, string app);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<EnsureMembersWithTeamBulkApiAsync>d__53")]
private Task EnsureMembersWithTeamBulkApiAsync(string teamId, List`1<Identity> members, bool isOwner);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<EnsureMembersWithGroupApiAsync>d__54")]
private Task EnsureMembersWithGroupApiAsync(string groupId, List`1<string> membersAsODataBindings, bool isOwner);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<RetryGetSpUrlFromGroupIdAsync>d__55")]
private Task`1<string> RetryGetSpUrlFromGroupIdAsync(string groupId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<LoadSiteCollectionInternalAsync>d__56")]
private ValueTask LoadSiteCollectionInternalAsync(string siteCollectionUrl, Action`1<ClientContext> loadContextCallback, Action`1<ClientContext> onSuccessCallback, Action`1<Exception> onErrorCallback);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.M365SiteService/<ThrowIfInvalidResponseAsync>d__57")]
private Task ThrowIfInvalidResponseAsync(string action, HttpResponseMessage httpResponse);
}
internal class Omnia.Fx.SharePoint.Services.Sites.ModernSiteService : object {
    private static int TimeToRetryEnsureEveryoneExceptExternalUsersAsVisitor;
    private static int TimeToWaitRetryEnsureEveryoneExceptExternalUsersAsVisitor;
    private static int IntervalSecondsToCheckSiteReadyStatus;
    private static string InvalidSiteUrl;
    private static string InvalidUrlExistingAppInstance;
    [CompilerGeneratedAttribute]
private ILogger`1<ModernSiteService> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointServiceHttpClientFactory <SharePointServiceHttpClientFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> <SPAppSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SPClientContextProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaContext <OmniaContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IAppService <AppService>k__BackingField;
    [CompilerGeneratedAttribute]
private IPrincipalService <PrincipalService>k__BackingField;
    [CompilerGeneratedAttribute]
private IIdentityService <IdentityService>k__BackingField;
    [CompilerGeneratedAttribute]
private IBusinessProfilesService <BusinessProfilesService>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointTenantService <SharepointTenantService>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfiguredHttpClient`1<Office365GraphServiceApi> <GraphService>k__BackingField;
    [CompilerGeneratedAttribute]
private ISiteSelectedPermissionService <SelectedPermissionService>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OmniaAppSettings> <OmniaAppSettings>k__BackingField;
    protected ILogger`1<ModernSiteService> Logger { get; }
    protected ISharePointServiceHttpClientFactory SharePointServiceHttpClientFactory { get; }
    protected IOptionsMonitor`1<SharePointAppSettings> SPAppSettings { get; }
    protected ISharePointClientContextProvider SPClientContextProvider { get; }
    protected IOmniaContext OmniaContext { get; }
    protected IAppService AppService { get; }
    protected IPrincipalService PrincipalService { get; }
    protected IIdentityService IdentityService { get; }
    protected IBusinessProfilesService BusinessProfilesService { get; }
    protected ISharePointTenantService SharepointTenantService { get; }
    protected IConfiguredHttpClient`1<Office365GraphServiceApi> GraphService { get; }
    protected ISiteSelectedPermissionService SelectedPermissionService { get; }
    protected IOptionsMonitor`1<OmniaAppSettings> OmniaAppSettings { get; }
    public ModernSiteService(IOptionsMonitor`1<SharePointAppSettings> spAppSettings, ISharePointServiceHttpClientFactory sharePointServiceHttpClientFactory, ILogger`1<ModernSiteService> logger, ISharePointClientContextProvider spClientContextProvider, IOmniaContext omniaContext, IAppService appService, IPrincipalService principalService, IIdentityService identityService, IBusinessProfilesService businessProfilesService, ISharePointTenantService sharepointTenantService, IConfiguredHttpClient`1<Office365GraphServiceApi> graphService, ISiteSelectedPermissionService selectedPermissionService, IOptionsMonitor`1<OmniaAppSettings> omniaAppSettings);
    [CompilerGeneratedAttribute]
protected ILogger`1<ModernSiteService> get_Logger();
    [CompilerGeneratedAttribute]
protected ISharePointServiceHttpClientFactory get_SharePointServiceHttpClientFactory();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<SharePointAppSettings> get_SPAppSettings();
    [CompilerGeneratedAttribute]
protected ISharePointClientContextProvider get_SPClientContextProvider();
    [CompilerGeneratedAttribute]
protected IOmniaContext get_OmniaContext();
    [CompilerGeneratedAttribute]
protected IAppService get_AppService();
    [CompilerGeneratedAttribute]
protected IPrincipalService get_PrincipalService();
    [CompilerGeneratedAttribute]
protected IIdentityService get_IdentityService();
    [CompilerGeneratedAttribute]
protected IBusinessProfilesService get_BusinessProfilesService();
    [CompilerGeneratedAttribute]
protected ISharePointTenantService get_SharepointTenantService();
    [CompilerGeneratedAttribute]
protected IConfiguredHttpClient`1<Office365GraphServiceApi> get_GraphService();
    [CompilerGeneratedAttribute]
protected ISiteSelectedPermissionService get_SelectedPermissionService();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<OmniaAppSettings> get_OmniaAppSettings();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<DeleteCommunicationSiteAsync>d__46")]
public sealed virtual ValueTask DeleteCommunicationSiteAsync(Guid siteId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<CreateCommunicationSiteAsync>d__47")]
public virtual ValueTask`1<SiteCollectionCreationResult> CreateCommunicationSiteAsync(ModernSiteCollectionCreationInformation siteCollectionCreationInformation, bool everyoneExceptExternalUsersAsDefaultVisitor, int waitForReadySecondsTimeout);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<CreateTeamSiteAsync>d__48")]
public virtual ValueTask`1<SiteCollectionCreationResult> CreateTeamSiteAsync(ModernSiteCollectionCreationInformation siteCollectionCreationInformation, int waitForReadySecondsTimeout);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<CreateModernSiteAsync>d__49")]
public virtual ValueTask`1<SiteCollectionCreationResult> CreateModernSiteAsync(ModernSiteCollectionCreationInformation siteCollectionCreationInformation, string siteTemplate, int waitForReadySecondsTimeout);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<ValidateSiteAliasAsync>d__50")]
public virtual ValueTask`1<SiteAliasValidationResult> ValidateSiteAliasAsync(SiteAliasValidationRequest request);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<ValidateReservedUrl>d__51")]
public ValueTask`1<ReservedSiteAliasValidationResult> ValidateReservedUrl(string alias, ReservedSiteAliasValidationOption option);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<CheckSiteCollectionStatusAsync>d__52")]
public virtual ValueTask`1<HttpStatusCode> CheckSiteCollectionStatusAsync(string siteCollectionUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<PollingForSiteToBeReadyAsync>d__53")]
public virtual ValueTask`1<bool> PollingForSiteToBeReadyAsync(string siteCollectionUrl, int intervalSeconds, int waitForReadySecondsTimeout);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<UpdateSiteTimezoneAsync>d__54")]
public virtual ValueTask UpdateSiteTimezoneAsync(string spUrl, int timezoneId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<EnsureUserIsSiteAdminAsync>d__55")]
public virtual ValueTask EnsureUserIsSiteAdminAsync(string spSiteUrl, string loginName, bool elevated);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<ValidateCurrentUserIsSiteAdminAsync>d__56")]
public sealed virtual ValueTask`1<bool> ValidateCurrentUserIsSiteAdminAsync(string spUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<GetSharePointSiteInfoAsync>d__57")]
public virtual ValueTask`1<SPSiteCollectionAdminInfo> GetSharePointSiteInfoAsync(string spSiteUrl, bool elevated);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<RemoveUserFromSiteAdminAsync>d__58")]
public sealed virtual ValueTask RemoveUserFromSiteAdminAsync(string spSiteUrl, string loginName, bool elevated);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<EnsureLegacyIdentitiesLoginName>d__59")]
protected virtual ValueTask`1<List`1<string>> EnsureLegacyIdentitiesLoginName(List`1<User> siteCollectionAdmins);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<GetMembersInGroupOwner>d__60")]
private ValueTask`1<List`1<UserInformation>> GetMembersInGroupOwner(string groupId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<GetSiteCollectionAdminsAsync>d__61")]
protected virtual ValueTask`1<List`1<User>> GetSiteCollectionAdminsAsync(ClientContext ctx);
    private Guid GetSiteDesignId(ModernSiteCollectionCreationInformation siteCollectionCreationInformation);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<EnsureUserPermissionsAsync>d__63")]
private ValueTask EnsureUserPermissionsAsync(ModernSiteCollectionCreationInformation siteCollectionCreationInformation, string url);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<EnsureActiveFeatureAsync>d__64")]
public sealed virtual ValueTask EnsureActiveFeatureAsync(string url, Guid featureId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<RetryEnsureEveryoneExceptExternalUsersAsVisitorAsync>d__65")]
private ValueTask RetryEnsureEveryoneExceptExternalUsersAsVisitorAsync(string siteUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<EnsureEveryoneExceptExternalUsersAsVisitorAsync>d__66")]
protected virtual Task EnsureEveryoneExceptExternalUsersAsVisitorAsync(string siteUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<AddUserToGroupAsync>d__67")]
protected Task AddUserToGroupAsync(string relativeSiteUrl, string loginName, string groupId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<GetDefaultVisitorGroupId>d__68")]
protected ValueTask`1<string> GetDefaultVisitorGroupId(string relativeSiteUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.ModernSiteService/<LoadSiteCollectionInternalAsync>d__69")]
private ValueTask LoadSiteCollectionInternalAsync(string siteCollectionUrl, Action`1<ClientContext> loadContextCallback, Action`1<ClientContext> onSuccessCallback, Action`1<Exception> onErrorCallback);
}
public class Omnia.Fx.SharePoint.Services.Sites.SiteSelectedPermissionService : object {
    private IOptionsMonitor`1<OmniaAppSettings> omniaAppSettings;
    private IConfiguredHttpClient`1<Office365GraphServiceApi> graphService;
    private ILogger`1<SiteSelectedPermissionService> logger;
    private static string OMNIAAPP_NAME;
    private static string PERMISSION_DEFAULT;
    private static string PERMISSION_FULLCONTROL;
    public SiteSelectedPermissionService(IOptionsMonitor`1<OmniaAppSettings> omniaAppSettings, IConfiguredHttpClient`1<Office365GraphServiceApi> graphService, ILogger`1<SiteSelectedPermissionService> logger);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.SiteSelectedPermissionService/<EnsureSitePermissionForApp>d__7")]
public sealed virtual ValueTask`1<bool> EnsureSitePermissionForApp(string siteUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.SiteSelectedPermissionService/<RemoveSitePermissionForApp>d__8")]
public sealed virtual ValueTask`1<bool> RemoveSitePermissionForApp(string siteUrl);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.SiteSelectedPermissionService/<GetSiteId>d__9")]
private ValueTask`1<string> GetSiteId(Uri site);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.SiteSelectedPermissionService/<GetPermissionInfoForApp>d__10")]
private ValueTask`1<ValueTuple`2<string, List`1<string>>> GetPermissionInfoForApp(string siteId, string appId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.SiteSelectedPermissionService/<AddSitePermissionForApp>d__11")]
private ValueTask`1<ValueTuple`2<string, List`1<string>>> AddSitePermissionForApp(string siteId, string appId, string appName);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.SiteSelectedPermissionService/<PatchSitePermissionToFullControl>d__12")]
private ValueTask`1<bool> PatchSitePermissionToFullControl(string siteId, string permissionId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Sites.SiteSelectedPermissionService/<RemoveSitePermissionForApp>d__13")]
private ValueTask`1<bool> RemoveSitePermissionForApp(string siteId, string permissionId);
}
public interface Omnia.Fx.SharePoint.Services.Tenants.ISharePointTenantService {
    public abstract virtual ValueTask`1<SiteCollectionCreationResult> CreateAsync(SiteCollectionCreationInformation siteCollectionCreationInformation, string siteTemplate, bool waitForComplete, bool elevated);
    public abstract virtual ValueTask`1<bool> WaitForSiteCollectionCreatedAsync(string url, Nullable`1<int> tryout);
    public abstract virtual ValueTask`1<bool> IsSiteCollectionExistsAsync(string url);
    public abstract virtual ValueTask SetSiteAdminAsync(string url, string loginName, bool elevated);
}
internal class Omnia.Fx.SharePoint.Services.Tenants.SharePointTenantService : object {
    private static int PoolingSiteCollectionExistsMilliseconds;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SPClientContextProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> <SPAppSettingsOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<SharePointTenantService> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IIdentityService <IdentityService>k__BackingField;
    [CompilerGeneratedAttribute]
private IPrincipalService <PrincipalService>k__BackingField;
    private ISharePointClientContextProvider SPClientContextProvider { get; }
    private IOptionsMonitor`1<SharePointAppSettings> SPAppSettingsOptions { get; }
    private ILogger`1<SharePointTenantService> Logger { get; }
    private IIdentityService IdentityService { get; }
    private IPrincipalService PrincipalService { get; }
    public SharePointTenantService(ISharePointClientContextProvider sharePointClientContextProvider, IOptionsMonitor`1<SharePointAppSettings> spAppSettingsOptions, ILogger`1<SharePointTenantService> logger, IIdentityService identityService, IPrincipalService principalService);
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider get_SPClientContextProvider();
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> get_SPAppSettingsOptions();
    [CompilerGeneratedAttribute]
private ILogger`1<SharePointTenantService> get_Logger();
    [CompilerGeneratedAttribute]
private IIdentityService get_IdentityService();
    [CompilerGeneratedAttribute]
private IPrincipalService get_PrincipalService();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Tenants.SharePointTenantService/<CreateAsync>d__17")]
public sealed virtual ValueTask`1<SiteCollectionCreationResult> CreateAsync(SiteCollectionCreationInformation siteCollectionCreationInformation, string siteTemplate, bool waitForComplete, bool elevated);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Tenants.SharePointTenantService/<WaitForSiteCollectionCreatedAsync>d__18")]
public sealed virtual ValueTask`1<bool> WaitForSiteCollectionCreatedAsync(string url, Nullable`1<int> tryout);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Tenants.SharePointTenantService/<IsSiteCollectionExistsAsync>d__19")]
public sealed virtual ValueTask`1<bool> IsSiteCollectionExistsAsync(string url);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Tenants.SharePointTenantService/<SetSiteAdminAsync>d__20")]
public sealed virtual ValueTask SetSiteAdminAsync(string url, string loginName, bool elevated);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Tenants.SharePointTenantService/<IsSiteCollectionExistsAsync>d__21")]
private ValueTask`1<bool> IsSiteCollectionExistsAsync(string url, ClientContext adminContext);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Tenants.SharePointTenantService/<SetSiteAdminAsync>d__22")]
private ValueTask SetSiteAdminAsync(string url, string loginName, ClientContext adminContext);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Tenants.SharePointTenantService/<WaitForSiteCollectionCreatedAsync>d__23")]
private Task WaitForSiteCollectionCreatedAsync(SpoOperation operation, ClientContext adminContext);
    private ClientContext GetClientContext(bool elevated);
}
public interface Omnia.Fx.SharePoint.Services.Terms.ITermService {
    public abstract virtual ValueTask`1<IEnumerable`1<TermGroup>> GetAllTermGroupsAsync(bool includeTermSets);
    public abstract virtual ValueTask`1<TermSet> GetTermSetByIdAsync(Guid termSetId, bool includeTerms);
    public abstract virtual ValueTask`1<TermSet> GetKeywordsTermSet(bool includeTerms);
    public abstract virtual ValueTask`1<IEnumerable`1<Term>> GetTermByIdsAsync(Guid[] termIds, bool elevated);
    public abstract virtual ValueTask`1<IEnumerable`1<Term>> GetTermByIdsWithUserContextAsync(Guid[] termIds);
    public abstract virtual ValueTask`1<IEnumerable`1<Term>> GetTermByIdsInTermSetAsync(Guid termSetId, Guid[] termIds);
    public abstract virtual ValueTask`1<Term> AddTermAsync(Guid termSetId, string termName, Guid parentTermId);
    public abstract virtual ValueTask`1<List`1<Term>> SearchTermsInTermSetAsync(Guid termSetId, string searchText, int lcid);
    public abstract virtual ValueTask`1<IEnumerable`1<Term>> GetChildrenAsync(Guid termId, bool isTermSet);
    public abstract virtual ValueTask`1<List`1<TermCache>> GetTermsByLabelsAsync(Guid termSetId, List`1<string> termLabels, int lcid, bool defaultLabelOnly);
    public abstract virtual ValueTask`1<List`1<TermCache>> GetTermsByIdsAsync(Guid termSetId, Guid[] termIds);
    public abstract virtual ValueTask`1<List`1<Language>> GetTermStoreWorkingLanguagesAsync();
    public abstract virtual ValueTask FlushTermCacheByLabelsAsync(Guid termSetId, List`1<string> termLabels, int lcid);
    public abstract virtual ValueTask FlushTermCacheByIdsAsync(Guid termSetId, List`1<Guid> termIds);
    public abstract virtual ValueTask`1<TermCollection> GetTermCollection(Guid termSetId);
    public abstract virtual ValueTask`1<int> GetTermStoreDefaultLanguageAsync();
    public abstract virtual ValueTask FlushTermStoreDefaultLanguageCacheAsync();
    public abstract virtual ValueTask`1<Term> AddOrUpdateTermCustomPropertyAsync(Guid termId, IDictionary`2<string, string> customProperties);
    public abstract virtual ValueTask`1<Term> RemoveTermCustomPropertiesAsync(Guid termId, IList`1<string> propertyNames);
    public abstract virtual ValueTask`1<bool> CanRunElevatedAsync();
}
public static class Omnia.Fx.SharePoint.Services.Terms.TermMapper : object {
    private static List`1<Language> availableLanguages;
    private static TermMapper();
    public static TermSet MapToTermSet(TermSet termSet);
    public static Term MapToTerm(Term term);
    public static TermGroup MapToTermGroup(TermGroup termGroup);
    public static List`1<Term> MapToTerms(List`1<Term> terms);
    public static TermCache MapToTermCache(Term term);
    public static TermCache MapToTermCache(Term term);
    private static List`1<TermLabel> MapToTermLabels(LabelCollection labelCollection);
}
internal class Omnia.Fx.SharePoint.Services.Terms.TermService : object {
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <_spClientContextProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointContext <_sharePointContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaCacheWithKeyHelper`1<IOmniaSynchronizedMemoryCache> <_cacheHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<TermService> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IFeatureService <FeatureService>k__BackingField;
    private ISharePointClientContextProvider _spClientContextProvider { get; }
    private ISharePointContext _sharePointContext { get; }
    private IOmniaCacheWithKeyHelper`1<IOmniaSynchronizedMemoryCache> _cacheHelper { get; }
    private ILogger`1<TermService> Logger { get; }
    private IFeatureService FeatureService { get; }
    public TermService(ISharePointClientContextProvider spClientContextProvider, ISharePointContext sharePointContext, OmniaTargetedSynchronizedMemoryCache omniaSynchronizedCache, IFeatureService featureService, ILogger`1<TermService> logger);
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider get__spClientContextProvider();
    [CompilerGeneratedAttribute]
private ISharePointContext get__sharePointContext();
    [CompilerGeneratedAttribute]
private IOmniaCacheWithKeyHelper`1<IOmniaSynchronizedMemoryCache> get__cacheHelper();
    [CompilerGeneratedAttribute]
private ILogger`1<TermService> get_Logger();
    [CompilerGeneratedAttribute]
private IFeatureService get_FeatureService();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetAllTerms>d__16")]
private ValueTask`1<IList`1<Term>> GetAllTerms(TermSet termSet, ClientContext elevatedCtx);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermSetByIdAsync>d__17")]
public sealed virtual ValueTask`1<TermSet> GetTermSetByIdAsync(Guid termSetId, bool includeTerms);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetKeywordsTermSet>d__18")]
public sealed virtual ValueTask`1<TermSet> GetKeywordsTermSet(bool includeTerms);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermByIdsAsync>d__19")]
public sealed virtual ValueTask`1<IEnumerable`1<Term>> GetTermByIdsAsync(Guid[] termIds, bool elevated);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermByIdsWithUserContextAsync>d__20")]
public sealed virtual ValueTask`1<IEnumerable`1<Term>> GetTermByIdsWithUserContextAsync(Guid[] termIds);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermByIdsInTermSetAsync>d__21")]
public sealed virtual ValueTask`1<IEnumerable`1<Term>> GetTermByIdsInTermSetAsync(Guid termSetId, Guid[] termIds);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetAllTermGroupsAsync>d__22")]
public sealed virtual ValueTask`1<IEnumerable`1<TermGroup>> GetAllTermGroupsAsync(bool includeTermSets);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<AddTermAsync>d__23")]
public sealed virtual ValueTask`1<Term> AddTermAsync(Guid termSetId, string termName, Guid parentTermId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<SearchTermsInTermSetAsync>d__24")]
public sealed virtual ValueTask`1<List`1<Term>> SearchTermsInTermSetAsync(Guid termSetId, string searchText, int lcid);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermCollection>d__25")]
public sealed virtual ValueTask`1<TermCollection> GetTermCollection(Guid termSetId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetChildrenAsync>d__26")]
public sealed virtual ValueTask`1<IEnumerable`1<Term>> GetChildrenAsync(Guid termId, bool isTermSet);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermStoreWorkingLanguagesAsync>d__27")]
public sealed virtual ValueTask`1<List`1<Language>> GetTermStoreWorkingLanguagesAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermsByIdsAsync>d__28")]
public sealed virtual ValueTask`1<List`1<TermCache>> GetTermsByIdsAsync(Guid termSetId, Guid[] termIds);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermsByLabelsAsync>d__29")]
public sealed virtual ValueTask`1<List`1<TermCache>> GetTermsByLabelsAsync(Guid termSetId, List`1<string> termLabels, int lcid, bool defaultLabelOnly);
    public sealed virtual ValueTask FlushTermCacheByLabelsAsync(Guid termSetId, List`1<string> termLabels, int lcid);
    public sealed virtual ValueTask FlushTermCacheByIdsAsync(Guid termSetId, List`1<Guid> termIds);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermStoreDefaultLanguageAsync>d__32")]
public sealed virtual ValueTask`1<int> GetTermStoreDefaultLanguageAsync();
    public sealed virtual ValueTask FlushTermStoreDefaultLanguageCacheAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<AddOrUpdateTermCustomPropertyAsync>d__34")]
public sealed virtual ValueTask`1<Term> AddOrUpdateTermCustomPropertyAsync(Guid termId, IDictionary`2<string, string> customProperties);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<RemoveTermCustomPropertiesAsync>d__35")]
public sealed virtual ValueTask`1<Term> RemoveTermCustomPropertiesAsync(Guid termId, IList`1<string> propertyNames);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<CanRunElevatedAsync>d__36")]
public sealed virtual ValueTask`1<bool> CanRunElevatedAsync();
    private ClientContext EnsureClientContext(bool elevated);
    private IEnumerable`1<Term> GetQueryTermIncludeProperties(TermStore termStore, Guid termId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<CacheTermByTermId>d__39")]
private ValueTask`1<List`1<TermCache>> CacheTermByTermId(Guid termSetId, List`1<Guid> cacheNeededIds);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<CacheTermLabels>d__40")]
private ValueTask`1<List`1<TermCache>> CacheTermLabels(Guid termSetId, List`1<string> termLabels, int lcid, bool defaultLabelOnly);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermLanguageCode>d__41")]
private ValueTask`1<int> GetTermLanguageCode(int lcid, ClientContext elevatedCtx);
    private TermSet GetTermSet(Guid termSetId, ClientContext elevatedCtx);
    private TermStore GetTermStore(ClientContext elevatedCtx);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetParentTerm>d__44")]
private ValueTask`1<Dictionary`2<Guid, TermCache>> GetParentTerm(ClientContext elevatedCtx, TermSet termSet, List`1<string> parentTermPath);
    private IEnumerable`1<Term> CreateTermQuery(ClientContext elevatedCtx, TermSet termSet, int searchLCID, string label, bool defaultLabelOnly);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermStoreDefaultLanguage>d__46")]
private ValueTask`1<int> GetTermStoreDefaultLanguage(ClientContext Ctx);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermStoreDefaultLanguageByElevatedContext>d__47")]
private ValueTask`1<int> GetTermStoreDefaultLanguageByElevatedContext();
    private TermCache GetCacheByTermId(Guid termSetId, Guid termId);
    private void SetTermCache(string key, List`1<TermCache> values);
    private void SetTermCache(string key, TermCache value);
    private string GetTermStoreDefaultLanguageCacheKey();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<GetTermByIdsAsync>d__52")]
private ValueTask`1<IEnumerable`1<Term>> GetTermByIdsAsync(Guid[] termIds, ClientContext spCtx);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Terms.TermService/<<GetTermStoreDefaultLanguageAsync>b__32_0>d")]
[CompilerGeneratedAttribute]
private Task`1<int> <GetTermStoreDefaultLanguageAsync>b__32_0(IOmniaDependencyCacheEntry cacheEntry);
}
public interface Omnia.Fx.SharePoint.Services.Users.ISharePointUserService {
    public abstract virtual ValueTask UpdateUserProfilePropertiesAsync(IDictionary`2<string, SharePointUserProfilePropertyValueBase> properties);
    public abstract virtual ValueTask`1<IDictionary`2<string, string>> GetUserProfilePropertiesAsync(UserIdentity user);
    public abstract virtual ValueTask`1<IDictionary`2<string, string>> GetUserProfilePropertiesAsync(ResolvedUserIdentity resolvedUserIdentity, string spUserName);
    public abstract virtual ValueTask`1<IDictionary`2<string, string>> GetUserProfilePropertiesAsync(ClientContext ctx, ResolvedUserIdentity resolvedUserIdentity, string spUserName);
    public abstract virtual ValueTask`1<Language> GetLanguageAsync(ClientContext ctx, ResolvedUserIdentity resolvedUserIdentity, bool forceWebLanguage);
    public abstract virtual ValueTask`1<TimeZoneInfo> GetTimeZoneAsync(ClientContext ctx, ResolvedUserIdentity resolvedUserIdentity, bool forceUseWebTimeZone);
    public abstract virtual ValueTask`1<string> GetSharePointUserNameAsync(ClientContext ctx, ResolvedUserIdentity resolvedUserIdentity);
    public abstract virtual ValueTask`1<string> GetSharePointUserNameAsync(ResolvedUserIdentity resolvedUserIdentity);
    public abstract virtual ValueTask InvalidateUserProfilePropertiesCacheAsync(UserIdentity userIdentity);
    public abstract virtual double GetUserProfilePropertiesCacheHours();
}
internal class Omnia.Fx.SharePoint.Services.Users.PeoplePickerPrincipal : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsResolved>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <EntityData>k__BackingField;
    [DynamicAttribute]
[CompilerGeneratedAttribute]
private object <MultipleMatches>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnauthenticatedExternalEmail>k__BackingField;
    public string Key { get; public set; }
    public string Description { get; public set; }
    public string DisplayText { get; public set; }
    public string EntityType { get; public set; }
    public string ProviderDisplayName { get; public set; }
    public string ProviderName { get; public set; }
    public bool IsResolved { get; public set; }
    public Dictionary`2<string, string> EntityData { get; public set; }
    [DynamicAttribute]
public object MultipleMatches { get; public set; }
    public bool IsUnauthenticatedExternalEmail { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayText();
    [CompilerGeneratedAttribute]
public void set_DisplayText(string value);
    [CompilerGeneratedAttribute]
public string get_EntityType();
    [CompilerGeneratedAttribute]
public void set_EntityType(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderDisplayName();
    [CompilerGeneratedAttribute]
public void set_ProviderDisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderName();
    [CompilerGeneratedAttribute]
public void set_ProviderName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsResolved();
    [CompilerGeneratedAttribute]
public void set_IsResolved(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_EntityData();
    [CompilerGeneratedAttribute]
public void set_EntityData(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public object get_MultipleMatches();
    [CompilerGeneratedAttribute]
public void set_MultipleMatches(object value);
    [CompilerGeneratedAttribute]
public bool get_IsUnauthenticatedExternalEmail();
    [CompilerGeneratedAttribute]
public void set_IsUnauthenticatedExternalEmail(bool value);
}
internal class Omnia.Fx.SharePoint.Services.Users.SharePointUserService : object {
    [CompilerGeneratedAttribute]
private IIdentityService <IdentityService>k__BackingField;
    private static double UserProfilePropertiesCacheHours;
    [CompilerGeneratedAttribute]
private ISharePointContext <SharePointContext>k__BackingField;
    [CompilerGeneratedAttribute]
private UserServiceCacheHandler <CacheHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessageBus <MessageBus>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> <SpAppSettingsOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SharePointClientContextProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<SharePointUserService> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaContext <OmniaContext>k__BackingField;
    [CompilerGeneratedAttribute]
private ITermService <TermService>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OmniaAppSettings> <OmniaAppSettings>k__BackingField;
    private IIdentityService IdentityService { get; }
    private ISharePointContext SharePointContext { get; }
    private UserServiceCacheHandler CacheHandler { get; }
    private IMessageBus MessageBus { get; }
    private IOptionsMonitor`1<SharePointAppSettings> SpAppSettingsOptions { get; }
    private ISharePointClientContextProvider SharePointClientContextProvider { get; }
    private ILogger`1<SharePointUserService> Logger { get; }
    private IOmniaContext OmniaContext { get; }
    private ITermService TermService { get; }
    private IOptionsMonitor`1<OmniaAppSettings> OmniaAppSettings { get; }
    public SharePointUserService(ITermService termService, IIdentityService identityService, ISharePointContext sharePointContext, UserServiceCacheHandler cacheHandler, IMessageBus messageBus, IOptionsMonitor`1<SharePointAppSettings> spAppSettingsOptions, ISharePointClientContextProvider sharePointClientContextProvider, ILogger`1<SharePointUserService> logger, IOmniaContext omniaContext, IOptionsMonitor`1<OmniaAppSettings> omniaAppSettings);
    private static SharePointUserService();
    [CompilerGeneratedAttribute]
private IIdentityService get_IdentityService();
    [CompilerGeneratedAttribute]
private ISharePointContext get_SharePointContext();
    [CompilerGeneratedAttribute]
private UserServiceCacheHandler get_CacheHandler();
    [CompilerGeneratedAttribute]
private IMessageBus get_MessageBus();
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<SharePointAppSettings> get_SpAppSettingsOptions();
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider get_SharePointClientContextProvider();
    [CompilerGeneratedAttribute]
private ILogger`1<SharePointUserService> get_Logger();
    [CompilerGeneratedAttribute]
private IOmniaContext get_OmniaContext();
    [CompilerGeneratedAttribute]
private ITermService get_TermService();
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OmniaAppSettings> get_OmniaAppSettings();
    public sealed virtual double GetUserProfilePropertiesCacheHours();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<UpdateUserProfilePropertiesAsync>d__33")]
public virtual ValueTask UpdateUserProfilePropertiesAsync(IDictionary`2<string, SharePointUserProfilePropertyValueBase> properties);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<GetUserProfilePropertiesAsync>d__34")]
public sealed virtual ValueTask`1<IDictionary`2<string, string>> GetUserProfilePropertiesAsync(UserIdentity user);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<GetUserProfilePropertiesAsync>d__35")]
public sealed virtual ValueTask`1<IDictionary`2<string, string>> GetUserProfilePropertiesAsync(ResolvedUserIdentity resolvedUserIdentity, string spUserName);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<GetUserProfilePropertiesAsync>d__36")]
public sealed virtual ValueTask`1<IDictionary`2<string, string>> GetUserProfilePropertiesAsync(ClientContext ctx, ResolvedUserIdentity resolvedUserIdentity, string spUserName);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<EnsureUserProfilePropertiesLCID>d__37")]
private ValueTask`1<IDictionary`2<string, string>> EnsureUserProfilePropertiesLCID(ClientContext ctx, IDictionary`2<string, string> userProfileProperties);
    private string GetDateFormat(int localeId);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<GetLanguageAsync>d__39")]
public sealed virtual ValueTask`1<Language> GetLanguageAsync(ClientContext ctx, ResolvedUserIdentity resolvedUserIdentity, bool forceUseWebLanguage);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<GetTimeZoneAsync>d__40")]
public sealed virtual ValueTask`1<TimeZoneInfo> GetTimeZoneAsync(ClientContext ctx, ResolvedUserIdentity resolvedUserIdentity, bool forceUseWebTimeZone);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<GetSharePointUserNameAsync>d__41")]
public sealed virtual ValueTask`1<string> GetSharePointUserNameAsync(ResolvedUserIdentity resolvedUserIdentity);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<GetSharePointUserNameAsync>d__42")]
public sealed virtual ValueTask`1<string> GetSharePointUserNameAsync(ClientContext ctx, ResolvedUserIdentity resolvedUserIdentity);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<GetSharePointUserNameAsync>d__43")]
private ValueTask`1<string> GetSharePointUserNameAsync(ClientContext ctx, ResolvedUserIdentity resolvedUserIdentity, bool requiredEnsureUser);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<InvalidateUserProfilePropertiesCacheAsync>d__44")]
public sealed virtual ValueTask InvalidateUserProfilePropertiesCacheAsync(UserIdentity userIdentity);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<GetSelectedTermLabels>d__45")]
protected ValueTask`1<List`1<string>> GetSelectedTermLabels(IEnumerable`1<Guid> termIdValues);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.SharePointUserService/<ResolvePersonValue>d__46")]
protected ValueTask`1<string> ResolvePersonValue(string userPrincipalName);
    [CompilerGeneratedAttribute]
private bool <GetSelectedTermLabels>b__45_1(TermLabel l);
}
internal class Omnia.Fx.SharePoint.Services.Users.UserServiceCacheHandler : object {
    [CompilerGeneratedAttribute]
private IMessageBus <MessageBus>k__BackingField;
    [CompilerGeneratedAttribute]
private IOmniaCacheWithKeyHelper`1<IOmniaMemoryDependencyCache> <CacheHelper>k__BackingField;
    private IMessageBus MessageBus { get; }
    private IOmniaCacheWithKeyHelper`1<IOmniaMemoryDependencyCache> CacheHelper { get; }
    public IOmniaMemoryDependencyCache Instance { get; }
    public UserServiceCacheHandler(IMessageBus messageBus, IOmniaMemoryDependencyCache cache);
    [CompilerGeneratedAttribute]
private IMessageBus get_MessageBus();
    [CompilerGeneratedAttribute]
private IOmniaCacheWithKeyHelper`1<IOmniaMemoryDependencyCache> get_CacheHelper();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.UserServiceCacheHandler/<RunAsStartupAsync>d__7")]
public sealed virtual ValueTask RunAsStartupAsync();
    public IOmniaMemoryDependencyCache get_Instance();
    public void RemoveUserProfilePropertiesCache(UserIdentity[] userIdentities);
    public string GetUserProfilePropertiesCacheKey(UserIdentity userIdentity);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.Services.Users.UserServiceCacheHandler/<<RunAsStartupAsync>b__7_0>d")]
[CompilerGeneratedAttribute]
private Task <RunAsStartupAsync>b__7_0(List`1<UserIdentity> userIdentities);
}
internal class Omnia.Fx.SharePoint.SharePointEntities.CallbackRequestTransaction : object {
    [CompilerGeneratedAttribute]
private List`1<Func`2<ISharePointEntityHelperFull, Task>> <OnQueryExecutedCallbacks>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Func`2<Func`2<LoadWebFieldsCallbackParams, Field>, Task>> <LoadWebFieldsCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Func`2<Func`2<string, ContentType>, Task>> <LoadWebContentTypesCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Func`2<Func`2<string, List>, Task>> <LoadListsCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Func`2<TermStore, Task>> <GetTermStoreCallbacks>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<Func`2<TermSet, Task>>> <GetTermSetCallbacks>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<Func`3<TermSet, Term, Task>>> <GetTermCallbacks>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Func`2<Func`2<string, string>, Task>> <LoadWebRelativeUrlCallbacks>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Func`2<UInt32, Task>> <LoadWebLanguageCallbacks>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ExecuteQueryRequests>k__BackingField;
    public List`1<Func`2<ISharePointEntityHelperFull, Task>> OnQueryExecutedCallbacks { get; }
    public List`1<Func`2<Func`2<LoadWebFieldsCallbackParams, Field>, Task>> LoadWebFieldsCallback { get; }
    public List`1<Func`2<Func`2<string, ContentType>, Task>> LoadWebContentTypesCallback { get; }
    public List`1<Func`2<Func`2<string, List>, Task>> LoadListsCallback { get; }
    public List`1<Func`2<TermStore, Task>> GetTermStoreCallbacks { get; }
    public Dictionary`2<string, List`1<Func`2<TermSet, Task>>> GetTermSetCallbacks { get; }
    public Dictionary`2<string, List`1<Func`3<TermSet, Term, Task>>> GetTermCallbacks { get; }
    public List`1<Func`2<Func`2<string, string>, Task>> LoadWebRelativeUrlCallbacks { get; }
    public List`1<Func`2<UInt32, Task>> LoadWebLanguageCallbacks { get; }
    public List`1<string> ExecuteQueryRequests { get; public set; }
    public bool NeedToExecute { get; }
    [CompilerGeneratedAttribute]
public List`1<Func`2<ISharePointEntityHelperFull, Task>> get_OnQueryExecutedCallbacks();
    [CompilerGeneratedAttribute]
public List`1<Func`2<Func`2<LoadWebFieldsCallbackParams, Field>, Task>> get_LoadWebFieldsCallback();
    [CompilerGeneratedAttribute]
public List`1<Func`2<Func`2<string, ContentType>, Task>> get_LoadWebContentTypesCallback();
    [CompilerGeneratedAttribute]
public List`1<Func`2<Func`2<string, List>, Task>> get_LoadListsCallback();
    [CompilerGeneratedAttribute]
public List`1<Func`2<TermStore, Task>> get_GetTermStoreCallbacks();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, List`1<Func`2<TermSet, Task>>> get_GetTermSetCallbacks();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, List`1<Func`3<TermSet, Term, Task>>> get_GetTermCallbacks();
    [CompilerGeneratedAttribute]
public List`1<Func`2<Func`2<string, string>, Task>> get_LoadWebRelativeUrlCallbacks();
    [CompilerGeneratedAttribute]
public List`1<Func`2<UInt32, Task>> get_LoadWebLanguageCallbacks();
    [CompilerGeneratedAttribute]
public List`1<string> get_ExecuteQueryRequests();
    [CompilerGeneratedAttribute]
public void set_ExecuteQueryRequests(List`1<string> value);
    public bool get_NeedToExecute();
}
public abstract class Omnia.Fx.SharePoint.SharePointEntities.EntityAttribute : Attribute {
    protected bool _localizedCompleted;
    protected bool _loadCompleted;
    protected bool _ensuringCompleted;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, bool> <UpdatedProperties>k__BackingField;
    internal Dictionary`2<string, bool> UpdatedProperties { get; }
    internal bool LocalizedCompleted { get; }
    internal bool LoadCompleted { get; }
    internal bool EnsuringCompleted { get; }
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, bool> get_UpdatedProperties();
    internal bool get_LocalizedCompleted();
    internal bool get_LoadCompleted();
    internal bool get_EnsuringCompleted();
    internal virtual bool UpdateProperties(ClientObject clientObject, bool force);
    internal virtual void OnUpdated(ISharePointEntityHelper sharePointEntityHelper);
    protected void NotifyPropertyChanged(string propertyName);
}
internal interface Omnia.Fx.SharePoint.SharePointEntities.ISharePointEntityHelper {
    public Site Site { get; }
    public Web Web { get; }
    public ILocalizationProvider LocalizationProvider { get; }
    public ISharePointFieldHelper FieldHelper { get; }
    public ISharePointContentTypeHelper ContentTypeHelper { get; }
    public ISharePointListHelper ListHelper { get; }
    public ISharePointFileHelper FileHelper { get; }
    public abstract virtual Site get_Site();
    public abstract virtual Web get_Web();
    public abstract virtual ILocalizationProvider get_LocalizationProvider();
    public abstract virtual ISharePointFieldHelper get_FieldHelper();
    public abstract virtual ISharePointContentTypeHelper get_ContentTypeHelper();
    public abstract virtual ISharePointListHelper get_ListHelper();
    public abstract virtual ISharePointFileHelper get_FileHelper();
    public abstract virtual void RegisterGetTermStoreRequest(Func`2<TermStore, Task> callback);
    public abstract virtual void RegisterGetTermSetRequest(string termGroupName, string termSetName, Func`2<TermSet, Task> callback);
    public abstract virtual void RegisterGetTermRequest(string termGroupName, string termSetName, string termName, Func`3<TermSet, Term, Task> callback);
    public abstract virtual void RegisterLoadWebFieldsRequest(Func`2<Func`2<LoadWebFieldsCallbackParams, Field>, Task> callback);
    public abstract virtual void RegisterLoadWebContentTypesRequest(Func`2<Func`2<string, ContentType>, Task> callback);
    public abstract virtual void RegisterLoadWebListsRequest(Func`2<Func`2<string, List>, Task> callback);
    public abstract virtual void RegisterLoadWebRelativeUrlRequest(Func`2<Func`2<string, string>, Task> callback);
    public abstract virtual void RegisterLoadWebLanguageRequest(Func`2<UInt32, Task> callback);
    public abstract virtual void OnQueryExecuted(Func`2<ISharePointEntityHelperFull, Task> callback);
    public abstract virtual void RequestExecuteQuery(string memberName, string sourceFilePath, int sourceLineNumber);
    public abstract virtual ValueTask`1<Func`2<string, string>> ForceLoadWebRelativeUrlAsync();
}
internal interface Omnia.Fx.SharePoint.SharePointEntities.ISharePointEntityHelperBase {
    public abstract virtual void CleanupState();
}
internal interface Omnia.Fx.SharePoint.SharePointEntities.ISharePointEntityHelperFull {
    public abstract virtual Task ExecuteAsync();
}
internal interface Omnia.Fx.SharePoint.SharePointEntities.ISharePointEntityHelperProvider {
    public abstract virtual ISharePointEntityHelperFull CreateSharePointEntityHelper(Site site, Web web, ILocalizationProvider localizationProvider);
    public abstract virtual ISharePointFieldHelperFull CreateSharePointFieldHelper(Web web);
    public abstract virtual ISharePointContentTypeHelperFull CreateSharePointContentTypeHelper(Web web);
    public abstract virtual ISharePointListHelperFull CreateSharePointListHelper(Web web);
    public abstract virtual ISharePointTaxonomyHelper CreateSharePointTaxonomyHelper(Web web);
    public abstract virtual ISharePointFileHelper CreateSharePointFileHelper(Web web);
}
internal interface Omnia.Fx.SharePoint.SharePointEntities.ISharePointEntityInfo {
    public abstract virtual Task RetrieveNotEnsureMainEntityAsync(ISharePointEntityHelper sharePointEntityHelper);
    public abstract virtual Task EnsureMainEntityAsync(ISharePointEntityHelper sharePointEntityHelper);
    public abstract virtual Task ExecuteRelatedActionsAsync(ISharePointEntityHelper sharePointEntityHelper);
}
internal class Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper : object {
    private static string TermKeySeparator;
    private List`1<string> _resultLog;
    private ISharePointFieldHelperFull _fieldHelper;
    private ISharePointContentTypeHelperFull _contentTypeHelper;
    private ISharePointListHelperFull _listHelper;
    private ISharePointTaxonomyHelper _sharePointTaxonomyHelper;
    private List`1<CallbackRequestTransaction> _callbackRequestTransactions;
    [CompilerGeneratedAttribute]
private Site <Site>k__BackingField;
    [CompilerGeneratedAttribute]
private Web <Web>k__BackingField;
    [CompilerGeneratedAttribute]
private ILocalizationProvider <LocalizationProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ISharePointFileHelper <FileHelper>k__BackingField;
    public Site Site { get; private set; }
    public Web Web { get; private set; }
    public ILocalizationProvider LocalizationProvider { get; }
    public ISharePointFieldHelper FieldHelper { get; }
    public ISharePointContentTypeHelper ContentTypeHelper { get; }
    public ISharePointListHelper ListHelper { get; }
    public ISharePointFileHelper FileHelper { get; private set; }
    protected CallbackRequestTransaction LatestCallbackTransaction { get; }
    public SharePointEntityHelper(Site site, Web web, ISharePointEntityHelperProvider sharePointEntityHelperProvider, ILocalizationProvider localizationProvider);
    [CompilerGeneratedAttribute]
public sealed virtual Site get_Site();
    [CompilerGeneratedAttribute]
private void set_Site(Site value);
    [CompilerGeneratedAttribute]
public sealed virtual Web get_Web();
    [CompilerGeneratedAttribute]
private void set_Web(Web value);
    [CompilerGeneratedAttribute]
public sealed virtual ILocalizationProvider get_LocalizationProvider();
    public sealed virtual ISharePointFieldHelper get_FieldHelper();
    public sealed virtual ISharePointContentTypeHelper get_ContentTypeHelper();
    public sealed virtual ISharePointListHelper get_ListHelper();
    [CompilerGeneratedAttribute]
public sealed virtual ISharePointFileHelper get_FileHelper();
    [CompilerGeneratedAttribute]
private void set_FileHelper(ISharePointFileHelper value);
    protected CallbackRequestTransaction get_LatestCallbackTransaction();
    public sealed virtual void OnQueryExecuted(Func`2<ISharePointEntityHelperFull, Task> callback);
    public sealed virtual void RequestExecuteQuery(string memberName, string sourceFilePath, int sourceLineNumber);
    public sealed virtual void RegisterLoadWebFieldsRequest(Func`2<Func`2<LoadWebFieldsCallbackParams, Field>, Task> callback);
    public sealed virtual void RegisterLoadWebContentTypesRequest(Func`2<Func`2<string, ContentType>, Task> callback);
    public sealed virtual void RegisterLoadWebListsRequest(Func`2<Func`2<string, List>, Task> callback);
    public sealed virtual void RegisterGetTermStoreRequest(Func`2<TermStore, Task> callback);
    public sealed virtual void RegisterGetTermSetRequest(string termGroupName, string termSetName, Func`2<TermSet, Task> callback);
    public sealed virtual void RegisterGetTermRequest(string termGroupName, string termSetName, string termName, Func`3<TermSet, Term, Task> callback);
    public sealed virtual void RegisterLoadWebRelativeUrlRequest(Func`2<Func`2<string, string>, Task> callback);
    public sealed virtual void RegisterLoadWebLanguageRequest(Func`2<UInt32, Task> callback);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<ForceLoadWebRelativeUrlAsync>d__41")]
public sealed virtual ValueTask`1<Func`2<string, string>> ForceLoadWebRelativeUrlAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<ForceLoadWebRelativeUrlAsync>d__42")]
public static ValueTask`1<Func`3<Web, string, string>> ForceLoadWebRelativeUrlAsync(Web web);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<ExecuteAsync>d__43")]
public sealed virtual Task ExecuteAsync();
    private static bool LoadWebInfo(Web web);
    private static string GetWebServerRelativeUrl(Web web, string relativeUrl);
    private string GetTermKey(string termGroupName, string termSetName, string termName);
    private string GetTermSetKey(string termGroupName, string termSetName);
    private ValueTuple`3<string, string, string> GetTermInfoByTermKey(string termKey);
    private ValueTuple`2<string, string> GetTermInfoByTermSetKey(string termSetKey);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<TriggerGetTermStoreRequestCallbackAsync>d__50")]
private Task TriggerGetTermStoreRequestCallbackAsync(CallbackRequestTransaction transaction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<TriggerGetTermSetRequestCallbackAsync>d__51")]
private Task TriggerGetTermSetRequestCallbackAsync(CallbackRequestTransaction transaction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<TriggerGetTermRequestCallbackAsync>d__52")]
private Task TriggerGetTermRequestCallbackAsync(CallbackRequestTransaction transaction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<TriggerLoadWebFieldsRequestCallbackAsync>d__53")]
private Task TriggerLoadWebFieldsRequestCallbackAsync(CallbackRequestTransaction transaction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<TriggerLoadWebContentTypesRequestCallbackAsync>d__54")]
private Task TriggerLoadWebContentTypesRequestCallbackAsync(CallbackRequestTransaction transaction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<TriggerLoadWebListsRequestCallbackAsync>d__55")]
private Task TriggerLoadWebListsRequestCallbackAsync(CallbackRequestTransaction transaction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<TriggerLoadWebRelativeUrlRequestCallbackAsync>d__56")]
private Task TriggerLoadWebRelativeUrlRequestCallbackAsync(CallbackRequestTransaction transaction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<TriggerLoadWebLanguageRequestCallbackAsync>d__57")]
private Task TriggerLoadWebLanguageRequestCallbackAsync(CallbackRequestTransaction transaction);
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelper/<TriggerOnQueryExecutedCallbackAsync>d__58")]
private Task TriggerOnQueryExecutedCallbackAsync(CallbackRequestTransaction transaction);
    private string GetServerRelativeUrl(string relativeUrl);
    private Field GetFieldFromWebFields(LoadWebFieldsCallbackParams loadParams);
    private ContentType GetContentTypeFromWebContentTypes(string contentTypeId);
    private List GetListFromWebLists(string listRelativeUrl);
    private void LogCurrentTransaction(CallbackRequestTransaction transaction);
}
internal class Omnia.Fx.SharePoint.SharePointEntities.SharePointEntityHelperProvider : object {
    public sealed virtual ISharePointFieldHelperFull CreateSharePointFieldHelper(Web web);
    public sealed virtual ISharePointContentTypeHelperFull CreateSharePointContentTypeHelper(Web web);
    public sealed virtual ISharePointListHelperFull CreateSharePointListHelper(Web web);
    public sealed virtual ISharePointTaxonomyHelper CreateSharePointTaxonomyHelper(Web web);
    public sealed virtual ISharePointEntityHelperFull CreateSharePointEntityHelper(Site site, Web web, ILocalizationProvider localizationProvider);
    public sealed virtual ISharePointFileHelper CreateSharePointFileHelper(Web web);
}
public interface Omnia.Fx.SharePoint.SharePointEntities.Testing.IProvisioningSampleTestService {
    public abstract virtual Task ProvisionAsync();
    public abstract virtual Task ProvisionFileAsync();
    public abstract virtual ValueTask`1<List`1<string>> GetAsync();
    public abstract virtual Task SetPermissionAsync();
}
internal class Omnia.Fx.SharePoint.SharePointEntities.Testing.ProvisioningSampleTestService : object {
    private ISharePointContext _sharePointContext;
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider <SharePointClientContextProvider>k__BackingField;
    private ISharePointEntityProvider _sharePointEntityProvider;
    private ISharePointEntityHelperProvider _sharePointEntityHelperProvider;
    private ISharePointFileProvider _sharePointFileProvider;
    private ISharePointClientContextProvider SharePointClientContextProvider { get; }
    public ProvisioningSampleTestService(ISharePointContext sharePointContext, ISharePointEntityProvider sharePointEntityProvider, ISharePointEntityHelperProvider sharePointEntityHelperProvider, ISharePointFileProvider sharePointFileProvider, ISharePointClientContextProvider sharePointClientContextProvider);
    [CompilerGeneratedAttribute]
private ISharePointClientContextProvider get_SharePointClientContextProvider();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.Testing.ProvisioningSampleTestService/<ProvisionAsync>d__8")]
public sealed virtual Task ProvisionAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.Testing.ProvisioningSampleTestService/<ProvisionFileAsync>d__9")]
public sealed virtual Task ProvisionFileAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.Testing.ProvisioningSampleTestService/<GetAsync>d__10")]
public sealed virtual ValueTask`1<List`1<string>> GetAsync();
    [AsyncStateMachineAttribute("Omnia.Fx.SharePoint.SharePointEntities.Testing.ProvisioningSampleTestService/<SetPermissionAsync>d__11")]
public sealed virtual Task SetPermissionAsync();
    private void SetupProvisionFields(ISharePointEntityContext context, List`1<string> resultLog);
    private void SetupProvisionContentTypes(ISharePointEntityContext context, List`1<string> resultLog);
    private void SetupProvisionLists(ISharePointEntityContext context, List`1<string> resultLog);
    private string GetDurationMessage(long duration);
}
public enum Omnia.Fx.SharePoint.Sites.Models.CommunicationSiteDesign : Enum {
    public int value__;
    public static CommunicationSiteDesign Topic;
    public static CommunicationSiteDesign Showcase;
    public static CommunicationSiteDesign Blank;
}
public class Omnia.Fx.SharePoint.Sites.Models.GroupMembers : object {
    [CompilerGeneratedAttribute]
private List`1<UserInformation> <Value>k__BackingField;
    public List`1<UserInformation> Value { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<UserInformation> get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(List`1<UserInformation> value);
}
public class Omnia.Fx.SharePoint.Sites.Models.M365GroupAliasValidationErrors : object {
    [CompilerGeneratedAttribute]
private string <BlockedWord>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsExist>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInvalid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SuggestedAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Suffix>k__BackingField;
    public string BlockedWord { get; public set; }
    public bool IsExist { get; public set; }
    public bool IsInvalid { get; public set; }
    public string SuggestedAlias { get; public set; }
    public string Prefix { get; public set; }
    public string Suffix { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BlockedWord();
    [CompilerGeneratedAttribute]
public void set_BlockedWord(string value);
    [CompilerGeneratedAttribute]
public bool get_IsExist();
    [CompilerGeneratedAttribute]
public void set_IsExist(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsInvalid();
    [CompilerGeneratedAttribute]
public void set_IsInvalid(bool value);
    [CompilerGeneratedAttribute]
public string get_SuggestedAlias();
    [CompilerGeneratedAttribute]
public void set_SuggestedAlias(string value);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public string get_Suffix();
    [CompilerGeneratedAttribute]
public void set_Suffix(string value);
}
public class Omnia.Fx.SharePoint.Sites.Models.M365GroupNamingPolicyValidationRequest : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private ReservedSiteAliasValidationOption <ReservedAliasValidationOption>k__BackingField;
    public string Title { get; public set; }
    public string Alias { get; public set; }
    public ReservedSiteAliasValidationOption ReservedAliasValidationOption { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public ReservedSiteAliasValidationOption get_ReservedAliasValidationOption();
    [CompilerGeneratedAttribute]
public void set_ReservedAliasValidationOption(ReservedSiteAliasValidationOption value);
}
public class Omnia.Fx.SharePoint.Sites.Models.M365GroupNamingPolicyValidationResult : object {
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [CompilerGeneratedAttribute]
private M365GroupTitleValidationErrors <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private M365GroupAliasValidationErrors <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private ReservedSiteAliasValidationResult <ReservedAliasValidationResult>k__BackingField;
    public bool IsValid { get; public set; }
    public M365GroupTitleValidationErrors Title { get; public set; }
    public M365GroupAliasValidationErrors Alias { get; public set; }
    public ReservedSiteAliasValidationResult ReservedAliasValidationResult { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [CompilerGeneratedAttribute]
public M365GroupTitleValidationErrors get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(M365GroupTitleValidationErrors value);
    [CompilerGeneratedAttribute]
public M365GroupAliasValidationErrors get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(M365GroupAliasValidationErrors value);
    [CompilerGeneratedAttribute]
public ReservedSiteAliasValidationResult get_ReservedAliasValidationResult();
    [CompilerGeneratedAttribute]
public void set_ReservedAliasValidationResult(ReservedSiteAliasValidationResult value);
}
public class Omnia.Fx.SharePoint.Sites.Models.M365GroupSiteCollectionCreationInformation : SiteCreationInformation {
    [CompilerGeneratedAttribute]
private Identity[] <Owners>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity[] <Members>k__BackingField;
    public Identity[] Owners { get; public set; }
    public Identity[] Members { get; public set; }
    public M365GroupSiteCollectionCreationInformation(string alias, string displayName, string description);
    [CompilerGeneratedAttribute]
public Identity[] get_Owners();
    [CompilerGeneratedAttribute]
public void set_Owners(Identity[] value);
    [CompilerGeneratedAttribute]
public Identity[] get_Members();
    [CompilerGeneratedAttribute]
public void set_Members(Identity[] value);
}
public class Omnia.Fx.SharePoint.Sites.Models.M365GroupTitleValidationErrors : object {
    [CompilerGeneratedAttribute]
private string <BlockedWord>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInvalid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Suffix>k__BackingField;
    public string BlockedWord { get; public set; }
    public bool IsInvalid { get; public set; }
    public string Prefix { get; public set; }
    public string Suffix { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BlockedWord();
    [CompilerGeneratedAttribute]
public void set_BlockedWord(string value);
    [CompilerGeneratedAttribute]
public bool get_IsInvalid();
    [CompilerGeneratedAttribute]
public void set_IsInvalid(bool value);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public string get_Suffix();
    [CompilerGeneratedAttribute]
public void set_Suffix(string value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamAppConfig : OmniaJsonBase {
    [CompilerGeneratedAttribute]
private string <EntityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebsiteUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RemoveUrl>k__BackingField;
    public string EntityId { get; public set; }
    public string ContentUrl { get; public set; }
    public string WebsiteUrl { get; public set; }
    public string RemoveUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_EntityId();
    [CompilerGeneratedAttribute]
public void set_EntityId(string value);
    [CompilerGeneratedAttribute]
public string get_ContentUrl();
    [CompilerGeneratedAttribute]
public void set_ContentUrl(string value);
    [CompilerGeneratedAttribute]
public string get_WebsiteUrl();
    [CompilerGeneratedAttribute]
public void set_WebsiteUrl(string value);
    [CompilerGeneratedAttribute]
public string get_RemoveUrl();
    [CompilerGeneratedAttribute]
public void set_RemoveUrl(string value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamChannel : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFavoriteByDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGeneral>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<MicrosoftTeamTab> <Tabs>k__BackingField;
    public string DisplayName { get; public set; }
    public string Description { get; public set; }
    public bool IsFavoriteByDefault { get; public set; }
    public bool IsGeneral { get; public set; }
    public List`1<MicrosoftTeamTab> Tabs { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsFavoriteByDefault();
    [CompilerGeneratedAttribute]
public void set_IsFavoriteByDefault(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsGeneral();
    [CompilerGeneratedAttribute]
public void set_IsGeneral(bool value);
    [CompilerGeneratedAttribute]
public List`1<MicrosoftTeamTab> get_Tabs();
    [CompilerGeneratedAttribute]
public void set_Tabs(List`1<MicrosoftTeamTab> value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamCloningInformation : MicrosoftTeamCloningProperties {
    [CompilerGeneratedAttribute]
private Guid <MSTeamAppId>k__BackingField;
    public Guid MSTeamAppId { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_MSTeamAppId();
    [CompilerGeneratedAttribute]
public void set_MSTeamAppId(Guid value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamCloningOverrideProperties : object {
    [CompilerGeneratedAttribute]
private Identity[] <Owners>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity[] <Members>k__BackingField;
    public Identity[] Owners { get; public set; }
    public Identity[] Members { get; public set; }
    [CompilerGeneratedAttribute]
public Identity[] get_Owners();
    [CompilerGeneratedAttribute]
public void set_Owners(Identity[] value);
    [CompilerGeneratedAttribute]
public Identity[] get_Members();
    [CompilerGeneratedAttribute]
public void set_Members(Identity[] value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamCloningProperties : MicrosoftTeamGeneralProperties {
    [CompilerGeneratedAttribute]
private string <PartsToClone>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MailNickName>k__BackingField;
    public string PartsToClone { get; public set; }
    public string MailNickName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PartsToClone();
    [CompilerGeneratedAttribute]
public void set_PartsToClone(string value);
    [CompilerGeneratedAttribute]
public string get_MailNickName();
    [CompilerGeneratedAttribute]
public void set_MailNickName(string value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamCreationInformation : MicrosoftTeamGeneralProperties {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <MSTeamTemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity[] <Owners>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity[] <Members>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<MicrosoftTeamChannel> <Channels>k__BackingField;
    [CompilerGeneratedAttribute]
private MicrosoftTeamMemberSetting <MemberSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private MicrosoftTeamGuestSetting <GuestSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private MicrosoftTeamFunSetting <FunSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private MicrosoftTeamMessagingSetting <MessagingSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private MicrosoftTeamDiscoverySetting <DiscoverySettings>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<MicrosoftTeamInstalledApp> <InstalledApps>k__BackingField;
    [NullableAttribute("2")]
public string MSTeamTemplateId { get; public set; }
    public Identity[] Owners { get; public set; }
    public Identity[] Members { get; public set; }
    public List`1<MicrosoftTeamChannel> Channels { get; public set; }
    public MicrosoftTeamMemberSetting MemberSettings { get; public set; }
    public MicrosoftTeamGuestSetting GuestSettings { get; public set; }
    public MicrosoftTeamFunSetting FunSettings { get; public set; }
    public MicrosoftTeamMessagingSetting MessagingSettings { get; public set; }
    public MicrosoftTeamDiscoverySetting DiscoverySettings { get; public set; }
    public List`1<MicrosoftTeamInstalledApp> InstalledApps { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_MSTeamTemplateId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_MSTeamTemplateId(string value);
    [CompilerGeneratedAttribute]
public Identity[] get_Owners();
    [CompilerGeneratedAttribute]
public void set_Owners(Identity[] value);
    [CompilerGeneratedAttribute]
public Identity[] get_Members();
    [CompilerGeneratedAttribute]
public void set_Members(Identity[] value);
    [CompilerGeneratedAttribute]
public List`1<MicrosoftTeamChannel> get_Channels();
    [CompilerGeneratedAttribute]
public void set_Channels(List`1<MicrosoftTeamChannel> value);
    [CompilerGeneratedAttribute]
public MicrosoftTeamMemberSetting get_MemberSettings();
    [CompilerGeneratedAttribute]
public void set_MemberSettings(MicrosoftTeamMemberSetting value);
    [CompilerGeneratedAttribute]
public MicrosoftTeamGuestSetting get_GuestSettings();
    [CompilerGeneratedAttribute]
public void set_GuestSettings(MicrosoftTeamGuestSetting value);
    [CompilerGeneratedAttribute]
public MicrosoftTeamFunSetting get_FunSettings();
    [CompilerGeneratedAttribute]
public void set_FunSettings(MicrosoftTeamFunSetting value);
    [CompilerGeneratedAttribute]
public MicrosoftTeamMessagingSetting get_MessagingSettings();
    [CompilerGeneratedAttribute]
public void set_MessagingSettings(MicrosoftTeamMessagingSetting value);
    [CompilerGeneratedAttribute]
public MicrosoftTeamDiscoverySetting get_DiscoverySettings();
    [CompilerGeneratedAttribute]
public void set_DiscoverySettings(MicrosoftTeamDiscoverySetting value);
    [CompilerGeneratedAttribute]
public List`1<MicrosoftTeamInstalledApp> get_InstalledApps();
    [CompilerGeneratedAttribute]
public void set_InstalledApps(List`1<MicrosoftTeamInstalledApp> value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamDiscoverySetting : object {
    [CompilerGeneratedAttribute]
private bool <ShowInTeamsSearchAndSuggestions>k__BackingField;
    public bool ShowInTeamsSearchAndSuggestions { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ShowInTeamsSearchAndSuggestions();
    [CompilerGeneratedAttribute]
public void set_ShowInTeamsSearchAndSuggestions(bool value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamFunSetting : object {
    [CompilerGeneratedAttribute]
private bool <AllowGiphy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowStickersAndMemes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowCustomMemes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GiphyContentRating>k__BackingField;
    public bool AllowGiphy { get; public set; }
    public bool AllowStickersAndMemes { get; public set; }
    public bool AllowCustomMemes { get; public set; }
    public string GiphyContentRating { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AllowGiphy();
    [CompilerGeneratedAttribute]
public void set_AllowGiphy(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowStickersAndMemes();
    [CompilerGeneratedAttribute]
public void set_AllowStickersAndMemes(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowCustomMemes();
    [CompilerGeneratedAttribute]
public void set_AllowCustomMemes(bool value);
    [CompilerGeneratedAttribute]
public string get_GiphyContentRating();
    [CompilerGeneratedAttribute]
public void set_GiphyContentRating(string value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamGeneralProperties : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Visibility>k__BackingField;
    public string DisplayName { get; public set; }
    public string Description { get; public set; }
    public string Visibility { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Visibility();
    [CompilerGeneratedAttribute]
public void set_Visibility(string value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamGuestSetting : object {
    [CompilerGeneratedAttribute]
private bool <AllowCreateUpdateChannels>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowDeleteChannels>k__BackingField;
    public bool AllowCreateUpdateChannels { get; public set; }
    public bool AllowDeleteChannels { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AllowCreateUpdateChannels();
    [CompilerGeneratedAttribute]
public void set_AllowCreateUpdateChannels(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowDeleteChannels();
    [CompilerGeneratedAttribute]
public void set_AllowDeleteChannels(bool value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamInstalledApp : object {
    [CompilerGeneratedAttribute]
private string <TeamsApp>k__BackingField;
    [CompilerGeneratedAttribute]
private MicrosoftTeamAppConfig <Configuration>k__BackingField;
    [JsonPropertyAttribute("teamsApp@odata.bind")]
public string TeamsApp { get; public set; }
    public MicrosoftTeamAppConfig Configuration { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TeamsApp();
    [CompilerGeneratedAttribute]
public void set_TeamsApp(string value);
    [CompilerGeneratedAttribute]
public MicrosoftTeamAppConfig get_Configuration();
    [CompilerGeneratedAttribute]
public void set_Configuration(MicrosoftTeamAppConfig value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamMemberSetting : object {
    [CompilerGeneratedAttribute]
private bool <AllowCreateUpdateChannels>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowDeleteChannels>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAddRemoveApps>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowCreateUpdateRemoveTabs>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowCreateUpdateRemoveConnectors>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowCreatePrivateChannels>k__BackingField;
    public bool AllowCreateUpdateChannels { get; public set; }
    public bool AllowDeleteChannels { get; public set; }
    public bool AllowAddRemoveApps { get; public set; }
    public bool AllowCreateUpdateRemoveTabs { get; public set; }
    public bool AllowCreateUpdateRemoveConnectors { get; public set; }
    public bool AllowCreatePrivateChannels { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AllowCreateUpdateChannels();
    [CompilerGeneratedAttribute]
public void set_AllowCreateUpdateChannels(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowDeleteChannels();
    [CompilerGeneratedAttribute]
public void set_AllowDeleteChannels(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowAddRemoveApps();
    [CompilerGeneratedAttribute]
public void set_AllowAddRemoveApps(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowCreateUpdateRemoveTabs();
    [CompilerGeneratedAttribute]
public void set_AllowCreateUpdateRemoveTabs(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowCreateUpdateRemoveConnectors();
    [CompilerGeneratedAttribute]
public void set_AllowCreateUpdateRemoveConnectors(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowCreatePrivateChannels();
    [CompilerGeneratedAttribute]
public void set_AllowCreatePrivateChannels(bool value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamMessagingSetting : object {
    [CompilerGeneratedAttribute]
private bool <AllowUserEditMessages>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowUserDeleteMessages>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowOwnerDeleteMessages>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowTeamMentions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowChannelMentions>k__BackingField;
    public bool AllowUserEditMessages { get; public set; }
    public bool AllowUserDeleteMessages { get; public set; }
    public bool AllowOwnerDeleteMessages { get; public set; }
    public bool AllowTeamMentions { get; public set; }
    public bool AllowChannelMentions { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AllowUserEditMessages();
    [CompilerGeneratedAttribute]
public void set_AllowUserEditMessages(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowUserDeleteMessages();
    [CompilerGeneratedAttribute]
public void set_AllowUserDeleteMessages(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowOwnerDeleteMessages();
    [CompilerGeneratedAttribute]
public void set_AllowOwnerDeleteMessages(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowTeamMentions();
    [CompilerGeneratedAttribute]
public void set_AllowTeamMentions(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowChannelMentions();
    [CompilerGeneratedAttribute]
public void set_AllowChannelMentions(bool value);
}
public class Omnia.Fx.SharePoint.Sites.Models.MicrosoftTeamTab : OmniaJsonBase {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TeamsApp>k__BackingField;
    [CompilerGeneratedAttribute]
private MicrosoftTeamAppConfig <Configuration>k__BackingField;
    public string Name { get; public set; }
    [JsonPropertyAttribute("teamsApp@odata.bind")]
public string TeamsApp { get; public set; }
    public MicrosoftTeamAppConfig Configuration { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_TeamsApp();
    [CompilerGeneratedAttribute]
public void set_TeamsApp(string value);
    [CompilerGeneratedAttribute]
public MicrosoftTeamAppConfig get_Configuration();
    [CompilerGeneratedAttribute]
public void set_Configuration(MicrosoftTeamAppConfig value);
}
public class Omnia.Fx.SharePoint.Sites.Models.ModernSiteCollectionCreationInformation : object {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SiteDesignId>k__BackingField;
    [CompilerGeneratedAttribute]
private CommunicationSiteDesign <SiteDesign>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShareByEmailEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Classification>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<UInt32> <Lcid>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity[] <DefaultAdministrator>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity[] <SecondAdministrator>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity[] <Visitors>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity[] <Members>k__BackingField;
    public string Alias { get; public set; }
    public string Title { get; public set; }
    public Identity Owner { get; public set; }
    public Guid SiteDesignId { get; public set; }
    public CommunicationSiteDesign SiteDesign { get; public set; }
    public bool ShareByEmailEnabled { get; public set; }
    public string Classification { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<UInt32> Lcid { get; public set; }
    public Identity[] DefaultAdministrator { get; public set; }
    public Identity[] SecondAdministrator { get; public set; }
    public Identity[] Visitors { get; public set; }
    public Identity[] Members { get; public set; }
    public ModernSiteCollectionCreationInformation(string alias, string title, string description);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public Identity get_Owner();
    [CompilerGeneratedAttribute]
public void set_Owner(Identity value);
    [CompilerGeneratedAttribute]
public Guid get_SiteDesignId();
    [CompilerGeneratedAttribute]
public void set_SiteDesignId(Guid value);
    [CompilerGeneratedAttribute]
public CommunicationSiteDesign get_SiteDesign();
    [CompilerGeneratedAttribute]
public void set_SiteDesign(CommunicationSiteDesign value);
    [CompilerGeneratedAttribute]
public bool get_ShareByEmailEnabled();
    [CompilerGeneratedAttribute]
public void set_ShareByEmailEnabled(bool value);
    [CompilerGeneratedAttribute]
public string get_Classification();
    [CompilerGeneratedAttribute]
public void set_Classification(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<UInt32> get_Lcid();
    [CompilerGeneratedAttribute]
public void set_Lcid(Nullable`1<UInt32> value);
    [CompilerGeneratedAttribute]
public Identity[] get_DefaultAdministrator();
    [CompilerGeneratedAttribute]
public void set_DefaultAdministrator(Identity[] value);
    [CompilerGeneratedAttribute]
public Identity[] get_SecondAdministrator();
    [CompilerGeneratedAttribute]
public void set_SecondAdministrator(Identity[] value);
    [CompilerGeneratedAttribute]
public Identity[] get_Visitors();
    [CompilerGeneratedAttribute]
public void set_Visitors(Identity[] value);
    [CompilerGeneratedAttribute]
public Identity[] get_Members();
    [CompilerGeneratedAttribute]
public void set_Members(Identity[] value);
}
public class Omnia.Fx.SharePoint.Sites.Models.ReservedSiteAliasValidationOption : object {
    [CompilerGeneratedAttribute]
private bool <Enable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <IgnoreFromAppId>k__BackingField;
    public bool Enable { get; public set; }
    public Nullable`1<Guid> IgnoreFromAppId { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_IgnoreFromAppId();
    [CompilerGeneratedAttribute]
public void set_IgnoreFromAppId(Nullable`1<Guid> value);
}
public class Omnia.Fx.SharePoint.Sites.Models.ReservedSiteAliasValidationResult : object {
    [CompilerGeneratedAttribute]
private bool <IsReserved>k__BackingField;
    [CompilerGeneratedAttribute]
private AppInstance <AppInstance>k__BackingField;
    public bool IsReserved { get; public set; }
    public AppInstance AppInstance { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsReserved();
    [CompilerGeneratedAttribute]
public void set_IsReserved(bool value);
    [CompilerGeneratedAttribute]
public AppInstance get_AppInstance();
    [CompilerGeneratedAttribute]
public void set_AppInstance(AppInstance value);
}
public class Omnia.Fx.SharePoint.Sites.Models.SiteAliasValidationRequest : object {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private ReservedSiteAliasValidationOption <ReservedAliasValidationOption>k__BackingField;
    public string Alias { get; public set; }
    public ReservedSiteAliasValidationOption ReservedAliasValidationOption { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public ReservedSiteAliasValidationOption get_ReservedAliasValidationOption();
    [CompilerGeneratedAttribute]
public void set_ReservedAliasValidationOption(ReservedSiteAliasValidationOption value);
}
public class Omnia.Fx.SharePoint.Sites.Models.SiteAliasValidationResult : object {
    [CompilerGeneratedAttribute]
private string <InputAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SuggestedUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private ReservedSiteAliasValidationResult <ReservedAliasValidationResult>k__BackingField;
    public string InputAlias { get; public set; }
    public string SuggestedUrl { get; public set; }
    public ReservedSiteAliasValidationResult ReservedAliasValidationResult { get; public set; }
    public bool IsInputAliasValid { get; }
    public string SuggestedAlias { get; }
    [CompilerGeneratedAttribute]
public string get_InputAlias();
    [CompilerGeneratedAttribute]
public void set_InputAlias(string value);
    [CompilerGeneratedAttribute]
public string get_SuggestedUrl();
    [CompilerGeneratedAttribute]
public void set_SuggestedUrl(string value);
    [CompilerGeneratedAttribute]
public ReservedSiteAliasValidationResult get_ReservedAliasValidationResult();
    [CompilerGeneratedAttribute]
public void set_ReservedAliasValidationResult(ReservedSiteAliasValidationResult value);
    public bool get_IsInputAliasValid();
    public string get_SuggestedAlias();
}
public class Omnia.Fx.SharePoint.Sites.Models.SiteCollectionCreationInformation : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Lcid>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TimezoneId>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity <SiteCollectionAdmin>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <StorageMaximumLevel>k__BackingField;
    public string Title { get; public set; }
    public string Alias { get; public set; }
    public int Lcid { get; public set; }
    public int TimezoneId { get; public set; }
    public Identity SiteCollectionAdmin { get; public set; }
    public Nullable`1<long> StorageMaximumLevel { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public int get_Lcid();
    [CompilerGeneratedAttribute]
public void set_Lcid(int value);
    [CompilerGeneratedAttribute]
public int get_TimezoneId();
    [CompilerGeneratedAttribute]
public void set_TimezoneId(int value);
    [CompilerGeneratedAttribute]
public Identity get_SiteCollectionAdmin();
    [CompilerGeneratedAttribute]
public void set_SiteCollectionAdmin(Identity value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_StorageMaximumLevel();
    [CompilerGeneratedAttribute]
public void set_StorageMaximumLevel(Nullable`1<long> value);
}
public class Omnia.Fx.SharePoint.Sites.Models.SiteCollectionCreationResult : object {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string Url { get; public set; }
    public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public abstract class Omnia.Fx.SharePoint.Sites.Models.SiteCreationInformation : object {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPublic>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Classification>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<UInt32> <Lcid>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TimezoneId>k__BackingField;
    public string Alias { get; public set; }
    public string DisplayName { get; public set; }
    public bool IsPublic { get; public set; }
    public string Description { get; public set; }
    public string Classification { get; public set; }
    public Nullable`1<UInt32> Lcid { get; public set; }
    public Nullable`1<int> TimezoneId { get; public set; }
    public SiteCreationInformation(string alias, string displayName, string description);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsPublic();
    [CompilerGeneratedAttribute]
public void set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Classification();
    [CompilerGeneratedAttribute]
public void set_Classification(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<UInt32> get_Lcid();
    [CompilerGeneratedAttribute]
public void set_Lcid(Nullable`1<UInt32> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TimezoneId();
    [CompilerGeneratedAttribute]
public void set_TimezoneId(Nullable`1<int> value);
}
public class Omnia.Fx.SharePoint.Sites.Models.SPSiteCollectionAdminInfo : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Lcid>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TimezoneId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SiteCollectionAdmins>k__BackingField;
    public string Title { get; public set; }
    public string Description { get; public set; }
    public string Url { get; public set; }
    public UInt32 Lcid { get; public set; }
    public int TimezoneId { get; public set; }
    public List`1<string> SiteCollectionAdmins { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public UInt32 get_Lcid();
    [CompilerGeneratedAttribute]
public void set_Lcid(UInt32 value);
    [CompilerGeneratedAttribute]
public int get_TimezoneId();
    [CompilerGeneratedAttribute]
public void set_TimezoneId(int value);
    [CompilerGeneratedAttribute]
public List`1<string> get_SiteCollectionAdmins();
    [CompilerGeneratedAttribute]
public void set_SiteCollectionAdmins(List`1<string> value);
}
public class Omnia.Fx.SharePoint.Sites.Models.TeamSiteCollectionGroupifyInformation : SiteCreationInformation {
    [CompilerGeneratedAttribute]
private bool <KeepOldHomePage>k__BackingField;
    public bool KeepOldHomePage { get; public set; }
    public TeamSiteCollectionGroupifyInformation(string alias, string displayName, string description);
    [CompilerGeneratedAttribute]
public bool get_KeepOldHomePage();
    [CompilerGeneratedAttribute]
public void set_KeepOldHomePage(bool value);
}
internal interface Omnia.Fx.SharePoint.Taxonomy.ISharePointTaxonomyHelper {
    public abstract virtual TermStore GetDefaultTermStore(Boolean& waitForNextExecute);
    public abstract virtual TermSet GetTermSet(string termGroupName, string termSetName, Boolean& waitForNextExecute);
    public abstract virtual ValueTuple`2<TermSet, Term> GetTerm(string termGroupName, string termSetName, string termName, Boolean& waitForNextExecute);
}
internal class Omnia.Fx.SharePoint.Taxonomy.SharePointTaxonomyHelper : object {
    private Web _web;
    private TermStore _defaultTermStore;
    private Dictionary`2<string, TermSetCollection> _termSetsByName;
    private Dictionary`2<string, IEnumerable`1<Term>> _termsByTermSetKey;
    private TaxonomySession _taxonomySession;
    protected TaxonomySession TaxonomySession { get; }
    public SharePointTaxonomyHelper(Web web);
    protected TaxonomySession get_TaxonomySession();
    public sealed virtual TermStore GetDefaultTermStore(Boolean& waitForNextExecute);
    public sealed virtual TermSet GetTermSet(string termGroupName, string termSetName, Boolean& waitForNextExecute);
    public sealed virtual ValueTuple`2<TermSet, Term> GetTerm(string termGroupName, string termSetName, string termName, Boolean& waitForNextExecute);
    private bool LoadDefaultTermStore();
    private bool LoadTermSet(string termSetName);
    private bool LoadTerm(string termGroupName, string termSetName, string termName);
    private TermSet GetTermSet(string termGroupName, string termSetName);
    private string GetTermSetKey(string termGroupName, string termSetName);
}
[ExtensionAttribute]
public static class Omnia.Fx.SharePoint.Utils.UserUtils : object {
    [ExtensionAttribute]
public static string GetUniversalLoginName(User user, IOmniaContext omniaContext);
}
