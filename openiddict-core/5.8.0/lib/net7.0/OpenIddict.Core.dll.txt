[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.DependencyInjection.OpenIddictCoreBuilder : object {
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    [EditorBrowsableAttribute("1")]
public IServiceCollection Services { get; }
    public OpenIddictCoreBuilder(IServiceCollection services);
    [CompilerGeneratedAttribute]
public IServiceCollection get_Services();
    public OpenIddictCoreBuilder Configure(Action`1<OpenIddictCoreOptions> configuration);
    public OpenIddictCoreBuilder AddApplicationStore(ServiceLifetime lifetime);
    public OpenIddictCoreBuilder AddApplicationStore(Type type, ServiceLifetime lifetime);
    public OpenIddictCoreBuilder AddAuthorizationStore(ServiceLifetime lifetime);
    public OpenIddictCoreBuilder AddAuthorizationStore(Type type, ServiceLifetime lifetime);
    public OpenIddictCoreBuilder AddScopeStore(ServiceLifetime lifetime);
    public OpenIddictCoreBuilder AddScopeStore(Type type, ServiceLifetime lifetime);
    public OpenIddictCoreBuilder AddTokenStore(ServiceLifetime lifetime);
    public OpenIddictCoreBuilder AddTokenStore(Type type, ServiceLifetime lifetime);
    public OpenIddictCoreBuilder ReplaceApplicationManager();
    public OpenIddictCoreBuilder ReplaceApplicationManager(Type type);
    public OpenIddictCoreBuilder ReplaceApplicationStoreResolver(ServiceLifetime lifetime);
    public OpenIddictCoreBuilder ReplaceApplicationStoreResolver(Type type, ServiceLifetime lifetime);
    public OpenIddictCoreBuilder ReplaceAuthorizationManager();
    public OpenIddictCoreBuilder ReplaceAuthorizationManager(Type type);
    public OpenIddictCoreBuilder ReplaceAuthorizationStoreResolver(ServiceLifetime lifetime);
    public OpenIddictCoreBuilder ReplaceAuthorizationStoreResolver(Type type, ServiceLifetime lifetime);
    public OpenIddictCoreBuilder ReplaceScopeManager();
    public OpenIddictCoreBuilder ReplaceScopeManager(Type type);
    public OpenIddictCoreBuilder ReplaceScopeStoreResolver(ServiceLifetime lifetime);
    public OpenIddictCoreBuilder ReplaceScopeStoreResolver(Type type, ServiceLifetime lifetime);
    public OpenIddictCoreBuilder ReplaceTokenManager();
    public OpenIddictCoreBuilder ReplaceTokenManager(Type type);
    public OpenIddictCoreBuilder ReplaceTokenStoreResolver(ServiceLifetime lifetime);
    public OpenIddictCoreBuilder ReplaceTokenStoreResolver(Type type, ServiceLifetime lifetime);
    public OpenIddictCoreBuilder DisableAdditionalFiltering();
    public OpenIddictCoreBuilder DisableEntityCaching();
    public OpenIddictCoreBuilder SetDefaultApplicationEntity();
    public OpenIddictCoreBuilder SetDefaultApplicationEntity(Type type);
    public OpenIddictCoreBuilder SetDefaultAuthorizationEntity();
    public OpenIddictCoreBuilder SetDefaultAuthorizationEntity(Type type);
    public OpenIddictCoreBuilder SetDefaultScopeEntity();
    public OpenIddictCoreBuilder SetDefaultScopeEntity(Type type);
    public OpenIddictCoreBuilder SetDefaultTokenEntity();
    public OpenIddictCoreBuilder SetDefaultTokenEntity(Type type);
    public OpenIddictCoreBuilder SetEntityCacheLimit(int limit);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.OpenIddictCoreExtensions : object {
    [ExtensionAttribute]
public static OpenIddictCoreBuilder AddCore(OpenIddictBuilder builder);
    [ExtensionAttribute]
public static OpenIddictBuilder AddCore(OpenIddictBuilder builder, Action`1<OpenIddictCoreBuilder> configuration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictApplicationCache`1 : object {
    private MemoryCache _cache;
    private ConcurrentDictionary`2<string, CancellationTokenSource> _signals;
    private IOpenIddictApplicationStore`1<TApplication> _store;
    public OpenIddictApplicationCache`1(IOptionsMonitor`1<OpenIddictCoreOptions> options, IOpenIddictApplicationStoreResolver resolver);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationCache`1/<AddAsync>d__4")]
public sealed virtual ValueTask AddAsync(TApplication application, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    public sealed virtual ValueTask`1<TApplication> FindByClientIdAsync(string identifier, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<TApplication> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TApplication> FindByPostLogoutRedirectUriAsync(string uri, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TApplication> FindByRedirectUriAsync(string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationCache`1/<RemoveAsync>d__10")]
public sealed virtual ValueTask RemoveAsync(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationCache`1/<CreateEntryAsync>d__11")]
private ValueTask CreateEntryAsync(object key, TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationCache`1/<CreateEntryAsync>d__12")]
private ValueTask CreateEntryAsync(object key, ImmutableArray`1<TApplication> applications, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationCache`1/<CreateExpirationSignalAsync>d__13")]
private ValueTask`1<IChangeToken> CreateExpirationSignalAsync(TApplication application, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictApplicationManager`1 : object {
    [CompilerGeneratedAttribute]
private IOpenIddictApplicationCache`1<TApplication> <Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OpenIddictCoreOptions> <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IOpenIddictApplicationStore`1<TApplication> <Store>k__BackingField;
    protected IOpenIddictApplicationCache`1<TApplication> Cache { get; }
    protected ILogger Logger { get; }
    protected IOptionsMonitor`1<OpenIddictCoreOptions> Options { get; }
    protected IOpenIddictApplicationStore`1<TApplication> Store { get; }
    public OpenIddictApplicationManager`1(IOpenIddictApplicationCache`1<TApplication> cache, ILogger`1<OpenIddictApplicationManager`1<TApplication>> logger, IOptionsMonitor`1<OpenIddictCoreOptions> options, IOpenIddictApplicationStoreResolver resolver);
    [CompilerGeneratedAttribute]
protected IOpenIddictApplicationCache`1<TApplication> get_Cache();
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<OpenIddictCoreOptions> get_Options();
    [CompilerGeneratedAttribute]
protected IOpenIddictApplicationStore`1<TApplication> get_Store();
    [NullableContextAttribute("0")]
public virtual ValueTask`1<long> CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<long> CountAsync(Func`2<IQueryable`1<TApplication>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    public virtual ValueTask CreateAsync(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<CreateAsync>d__16")]
public virtual ValueTask CreateAsync(TApplication application, string secret, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<CreateAsync>d__17")]
public virtual ValueTask`1<TApplication> CreateAsync(OpenIddictApplicationDescriptor descriptor, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<DeleteAsync>d__18")]
public virtual ValueTask DeleteAsync(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<FindByClientIdAsync>d__19")]
public virtual ValueTask`1<TApplication> FindByClientIdAsync(string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<FindByIdAsync>d__20")]
public virtual ValueTask`1<TApplication> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TApplication> FindByPostLogoutRedirectUriAsync(string uri, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TApplication> FindByRedirectUriAsync(string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<GetApplicationTypeAsync>d__23")]
public virtual ValueTask`1<string> GetApplicationTypeAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<TResult> GetAsync(Func`2<IQueryable`1<TApplication>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    public virtual ValueTask`1<TResult> GetAsync(Func`3<IQueryable`1<TApplication>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetClientIdAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetClientTypeAsync(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<GetConsentTypeAsync>d__28")]
public virtual ValueTask`1<string> GetConsentTypeAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetDisplayNameAsync(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<GetDisplayNamesAsync>d__30")]
public virtual ValueTask`1<ImmutableDictionary`2<CultureInfo, string>> GetDisplayNamesAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetIdAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<JsonWebKeySet> GetJsonWebKeySetAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetLocalizedDisplayNameAsync(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<GetLocalizedDisplayNameAsync>d__34")]
public virtual ValueTask`1<string> GetLocalizedDisplayNameAsync(TApplication application, CultureInfo culture, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetPermissionsAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetPostLogoutRedirectUrisAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<string, JsonElement>> GetPropertiesAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetRedirectUrisAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetRequirementsAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<string, string>> GetSettingsAsync(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<HasApplicationTypeAsync>d__41")]
public virtual ValueTask`1<bool> HasApplicationTypeAsync(TApplication application, string type, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<HasClientTypeAsync>d__42")]
public virtual ValueTask`1<bool> HasClientTypeAsync(TApplication application, string type, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<HasConsentTypeAsync>d__43")]
public virtual ValueTask`1<bool> HasConsentTypeAsync(TApplication application, string type, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<HasPermissionAsync>d__44")]
public virtual ValueTask`1<bool> HasPermissionAsync(TApplication application, string permission, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<HasRequirementAsync>d__45")]
public virtual ValueTask`1<bool> HasRequirementAsync(TApplication application, string requirement, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TApplication> ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`2<IQueryable`1<TApplication>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`3<IQueryable`1<TApplication>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<PopulateAsync>d__49")]
public virtual ValueTask PopulateAsync(TApplication application, OpenIddictApplicationDescriptor descriptor, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<PopulateAsync>d__50")]
public virtual ValueTask PopulateAsync(OpenIddictApplicationDescriptor descriptor, TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<UpdateAsync>d__51")]
public virtual ValueTask UpdateAsync(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<UpdateAsync>d__52")]
public virtual ValueTask UpdateAsync(TApplication application, string secret, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<UpdateAsync>d__53")]
public virtual ValueTask UpdateAsync(TApplication application, OpenIddictApplicationDescriptor descriptor, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<ValidationResult> ValidateAsync(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<ValidateClientSecretAsync>d__55")]
public virtual ValueTask`1<bool> ValidateClientSecretAsync(TApplication application, string secret, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<ValidatePostLogoutRedirectUriAsync>d__56")]
public virtual ValueTask`1<bool> ValidatePostLogoutRedirectUriAsync(TApplication application, string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<ValidateRedirectUriAsync>d__57")]
public virtual ValueTask`1<bool> ValidateRedirectUriAsync(TApplication application, string uri, CancellationToken cancellationToken);
    protected virtual ValueTask`1<string> ObfuscateClientSecretAsync(string secret, CancellationToken cancellationToken);
    protected virtual ValueTask`1<bool> ValidateClientSecretAsync(string secret, string comparand, CancellationToken cancellationToken);
    private static Byte[] DeriveKey(string secret, Byte[] salt, HashAlgorithmName algorithm, int iterations, int length);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<long> OpenIddict.Abstractions.IOpenIddictApplicationManager.CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<long> OpenIddict.Abstractions.IOpenIddictApplicationManager.CountAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<OpenIddict-Abstractions-IOpenIddictApplicationManager-CreateAsync>d__63")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictApplicationManager.CreateAsync(OpenIddictApplicationDescriptor descriptor, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictApplicationManager.CreateAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictApplicationManager.CreateAsync(object application, string secret, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictApplicationManager.DeleteAsync(object application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<OpenIddict-Abstractions-IOpenIddictApplicationManager-FindByClientIdAsync>d__67")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictApplicationManager.FindByClientIdAsync(string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<OpenIddict-Abstractions-IOpenIddictApplicationManager-FindByIdAsync>d__68")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictApplicationManager.FindByIdAsync(string identifier, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictApplicationManager.FindByPostLogoutRedirectUriAsync(string uri, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictApplicationManager.FindByRedirectUriAsync(string uri, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetApplicationTypeAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<TResult> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<TResult> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetAsync(Func`3<IQueryable`1<object>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetClientIdAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetClientTypeAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetConsentTypeAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetDisplayNameAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableDictionary`2<CultureInfo, string>> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetDisplayNamesAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetIdAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<JsonWebKeySet> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetJsonWebKeySetAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetLocalizedDisplayNameAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetLocalizedDisplayNameAsync(object application, CultureInfo culture, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableArray`1<string>> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetPermissionsAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableArray`1<string>> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetPostLogoutRedirectUrisAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableDictionary`2<string, JsonElement>> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetPropertiesAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableArray`1<string>> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetRedirectUrisAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableArray`1<string>> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetRequirementsAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableDictionary`2<string, string>> OpenIddict.Abstractions.IOpenIddictApplicationManager.GetSettingsAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictApplicationManager.HasApplicationTypeAsync(object application, string type, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictApplicationManager.HasClientTypeAsync(object application, string type, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictApplicationManager.HasConsentTypeAsync(object application, string type, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictApplicationManager.HasPermissionAsync(object application, string permission, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictApplicationManager.HasRequirementAsync(object application, string requirement, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictApplicationManager.ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<TResult> OpenIddict.Abstractions.IOpenIddictApplicationManager.ListAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<TResult> OpenIddict.Abstractions.IOpenIddictApplicationManager.ListAsync(Func`3<IQueryable`1<object>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictApplicationManager.PopulateAsync(OpenIddictApplicationDescriptor descriptor, object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictApplicationManager.PopulateAsync(object application, OpenIddictApplicationDescriptor descriptor, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictApplicationManager.UpdateAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictApplicationManager.UpdateAsync(object application, OpenIddictApplicationDescriptor descriptor, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictApplicationManager.UpdateAsync(object application, string secret, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<ValidationResult> OpenIddict.Abstractions.IOpenIddictApplicationManager.ValidateAsync(object application, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictApplicationManager.ValidateClientSecretAsync(object application, string secret, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictApplicationManager.ValidatePostLogoutRedirectUriAsync(object application, string uri, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictApplicationManager.ValidateRedirectUriAsync(object application, string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<<CreateAsync>g__GetValidationResultsAsync|16_1>d")]
[CompilerGeneratedAttribute]
private Task`1<ImmutableArray`1<ValidationResult>> <CreateAsync>g__GetValidationResultsAsync|16_1(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictApplicationManager`1/<<UpdateAsync>g__GetValidationResultsAsync|51_1>d")]
[CompilerGeneratedAttribute]
private Task`1<ImmutableArray`1<ValidationResult>> <UpdateAsync>g__GetValidationResultsAsync|51_1(TApplication application, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static Byte[] <ObfuscateClientSecretAsync>g__HashSecret|58_0(string secret, Byte[] salt, HashAlgorithmName algorithm, int iterations, int length);
    [CompilerGeneratedAttribute]
internal static bool <ValidateClientSecretAsync>g__VerifyHashedSecret|59_0(string hash, string secret);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictApplicationStoreResolver : object {
    private IServiceProvider _provider;
    public OpenIddictApplicationStoreResolver(IServiceProvider provider);
    public sealed virtual IOpenIddictApplicationStore`1<TApplication> Get();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictAuthorizationCache`1 : object {
    private MemoryCache _cache;
    private ConcurrentDictionary`2<string, CancellationTokenSource> _signals;
    private IOpenIddictAuthorizationStore`1<TAuthorization> _store;
    public OpenIddictAuthorizationCache`1(IOptionsMonitor`1<OpenIddictCoreOptions> options, IOpenIddictAuthorizationStoreResolver resolver);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationCache`1/<AddAsync>d__4")]
public sealed virtual ValueTask AddAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    public sealed virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, string status, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, string status, string type, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, string status, string type, ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TAuthorization> FindByApplicationIdAsync(string identifier, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<TAuthorization> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TAuthorization> FindBySubjectAsync(string subject, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationCache`1/<RemoveAsync>d__13")]
public sealed virtual ValueTask RemoveAsync(TAuthorization authorization, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationCache`1/<CreateEntryAsync>d__14")]
private ValueTask CreateEntryAsync(object key, TAuthorization authorization, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationCache`1/<CreateEntryAsync>d__15")]
private ValueTask CreateEntryAsync(object key, ImmutableArray`1<TAuthorization> authorizations, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationCache`1/<CreateExpirationSignalAsync>d__16")]
private ValueTask`1<IChangeToken> CreateExpirationSignalAsync(TAuthorization authorization, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictAuthorizationManager`1 : object {
    [CompilerGeneratedAttribute]
private IOpenIddictAuthorizationCache`1<TAuthorization> <Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OpenIddictCoreOptions> <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IOpenIddictAuthorizationStore`1<TAuthorization> <Store>k__BackingField;
    protected IOpenIddictAuthorizationCache`1<TAuthorization> Cache { get; }
    protected ILogger Logger { get; }
    protected IOptionsMonitor`1<OpenIddictCoreOptions> Options { get; }
    protected IOpenIddictAuthorizationStore`1<TAuthorization> Store { get; }
    public OpenIddictAuthorizationManager`1(IOpenIddictAuthorizationCache`1<TAuthorization> cache, ILogger`1<OpenIddictAuthorizationManager`1<TAuthorization>> logger, IOptionsMonitor`1<OpenIddictCoreOptions> options, IOpenIddictAuthorizationStoreResolver resolver);
    [CompilerGeneratedAttribute]
protected IOpenIddictAuthorizationCache`1<TAuthorization> get_Cache();
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<OpenIddictCoreOptions> get_Options();
    [CompilerGeneratedAttribute]
protected IOpenIddictAuthorizationStore`1<TAuthorization> get_Store();
    [NullableContextAttribute("0")]
public virtual ValueTask`1<long> CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<long> CountAsync(Func`2<IQueryable`1<TAuthorization>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<CreateAsync>d__15")]
public virtual ValueTask CreateAsync(TAuthorization authorization, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<CreateAsync>d__16")]
public virtual ValueTask`1<TAuthorization> CreateAsync(OpenIddictAuthorizationDescriptor descriptor, CancellationToken cancellationToken);
    public virtual ValueTask`1<TAuthorization> CreateAsync(ClaimsIdentity identity, string subject, string client, string type, ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    public virtual ValueTask`1<TAuthorization> CreateAsync(ClaimsPrincipal principal, string subject, string client, string type, ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<DeleteAsync>d__19")]
public virtual ValueTask DeleteAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, string status, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, string status, string type, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, string status, string type, ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindByApplicationIdAsync(string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<FindByIdAsync>d__25")]
public virtual ValueTask`1<TAuthorization> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindBySubjectAsync(string subject, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetApplicationIdAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<TResult> GetAsync(Func`2<IQueryable`1<TAuthorization>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    public virtual ValueTask`1<TResult> GetAsync(Func`3<IQueryable`1<TAuthorization>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<Nullable`1<DateTimeOffset>> GetCreationDateAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetIdAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<string, JsonElement>> GetPropertiesAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetScopesAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetStatusAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetSubjectAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetTypeAsync(TAuthorization authorization, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<HasScopesAsync>d__37")]
public virtual ValueTask`1<bool> HasScopesAsync(TAuthorization authorization, ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<HasStatusAsync>d__38")]
public virtual ValueTask`1<bool> HasStatusAsync(TAuthorization authorization, string status, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<HasTypeAsync>d__39")]
public virtual ValueTask`1<bool> HasTypeAsync(TAuthorization authorization, string type, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`2<IQueryable`1<TAuthorization>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`3<IQueryable`1<TAuthorization>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<PopulateAsync>d__43")]
public virtual ValueTask PopulateAsync(TAuthorization authorization, OpenIddictAuthorizationDescriptor descriptor, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<PopulateAsync>d__44")]
public virtual ValueTask PopulateAsync(OpenIddictAuthorizationDescriptor descriptor, TAuthorization authorization, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<long> PruneAsync(DateTimeOffset threshold, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<TryRevokeAsync>d__46")]
public virtual ValueTask`1<bool> TryRevokeAsync(TAuthorization authorization, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<UpdateAsync>d__47")]
public virtual ValueTask UpdateAsync(TAuthorization authorization, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<UpdateAsync>d__48")]
public virtual ValueTask UpdateAsync(TAuthorization authorization, OpenIddictAuthorizationDescriptor descriptor, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<ValidationResult> ValidateAsync(TAuthorization authorization, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<long> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<long> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.CountAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<OpenIddict-Abstractions-IOpenIddictAuthorizationManager-CreateAsync>d__52")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.CreateAsync(ClaimsIdentity identity, string subject, string client, string type, ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<OpenIddict-Abstractions-IOpenIddictAuthorizationManager-CreateAsync>d__53")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.CreateAsync(ClaimsPrincipal principal, string subject, string client, string type, ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<OpenIddict-Abstractions-IOpenIddictAuthorizationManager-CreateAsync>d__54")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.CreateAsync(OpenIddictAuthorizationDescriptor descriptor, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictAuthorizationManager.CreateAsync(object authorization, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictAuthorizationManager.DeleteAsync(object authorization, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindAsync(string subject, string client, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindAsync(string subject, string client, string status, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindAsync(string subject, string client, string status, string type, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindAsync(string subject, string client, string status, string type, ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindByApplicationIdAsync(string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<OpenIddict-Abstractions-IOpenIddictAuthorizationManager-FindByIdAsync>d__62")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindByIdAsync(string identifier, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.FindBySubjectAsync(string subject, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetApplicationIdAsync(object authorization, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<TResult> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<TResult> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetAsync(Func`3<IQueryable`1<object>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<Nullable`1<DateTimeOffset>> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetCreationDateAsync(object authorization, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetIdAsync(object authorization, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableDictionary`2<string, JsonElement>> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetPropertiesAsync(object authorization, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableArray`1<string>> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetScopesAsync(object authorization, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetStatusAsync(object authorization, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetSubjectAsync(object authorization, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.GetTypeAsync(object authorization, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.HasScopesAsync(object authorization, ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.HasStatusAsync(object authorization, string status, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.HasTypeAsync(object authorization, string type, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<TResult> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.ListAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<TResult> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.ListAsync(Func`3<IQueryable`1<object>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictAuthorizationManager.PopulateAsync(OpenIddictAuthorizationDescriptor descriptor, object authorization, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictAuthorizationManager.PopulateAsync(object authorization, OpenIddictAuthorizationDescriptor descriptor, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<long> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.PruneAsync(DateTimeOffset threshold, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.TryRevokeAsync(object authorization, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictAuthorizationManager.UpdateAsync(object authorization, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictAuthorizationManager.UpdateAsync(object authorization, OpenIddictAuthorizationDescriptor descriptor, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<ValidationResult> OpenIddict.Abstractions.IOpenIddictAuthorizationManager.ValidateAsync(object authorization, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<<CreateAsync>g__GetValidationResultsAsync|15_1>d")]
[CompilerGeneratedAttribute]
private Task`1<ImmutableArray`1<ValidationResult>> <CreateAsync>g__GetValidationResultsAsync|15_1(TAuthorization authorization, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictAuthorizationManager`1/<<UpdateAsync>g__GetValidationResultsAsync|47_1>d")]
[CompilerGeneratedAttribute]
private Task`1<ImmutableArray`1<ValidationResult>> <UpdateAsync>g__GetValidationResultsAsync|47_1(TAuthorization authorization, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictAuthorizationStoreResolver : object {
    private IServiceProvider _provider;
    public OpenIddictAuthorizationStoreResolver(IServiceProvider provider);
    public sealed virtual IOpenIddictAuthorizationStore`1<TAuthorization> Get();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictCoreConfiguration : object {
    private IServiceProvider _provider;
    public OpenIddictCoreConfiguration(IServiceProvider provider);
    public sealed virtual void PostConfigure(string name, OpenIddictCoreOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictCoreOptions : object {
    [CompilerGeneratedAttribute]
private Type <DefaultApplicationType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DefaultAuthorizationType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DefaultScopeType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DefaultTokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableAdditionalFiltering>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableEntityCaching>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EntityCacheLimit>k__BackingField;
    public Type DefaultApplicationType { get; public set; }
    public Type DefaultAuthorizationType { get; public set; }
    public Type DefaultScopeType { get; public set; }
    public Type DefaultTokenType { get; public set; }
    public bool DisableAdditionalFiltering { get; public set; }
    public bool DisableEntityCaching { get; public set; }
    public int EntityCacheLimit { get; public set; }
    [CompilerGeneratedAttribute]
public Type get_DefaultApplicationType();
    [CompilerGeneratedAttribute]
public void set_DefaultApplicationType(Type value);
    [CompilerGeneratedAttribute]
public Type get_DefaultAuthorizationType();
    [CompilerGeneratedAttribute]
public void set_DefaultAuthorizationType(Type value);
    [CompilerGeneratedAttribute]
public Type get_DefaultScopeType();
    [CompilerGeneratedAttribute]
public void set_DefaultScopeType(Type value);
    [CompilerGeneratedAttribute]
public Type get_DefaultTokenType();
    [CompilerGeneratedAttribute]
public void set_DefaultTokenType(Type value);
    [CompilerGeneratedAttribute]
public bool get_DisableAdditionalFiltering();
    [CompilerGeneratedAttribute]
public void set_DisableAdditionalFiltering(bool value);
    [CompilerGeneratedAttribute]
public bool get_DisableEntityCaching();
    [CompilerGeneratedAttribute]
public void set_DisableEntityCaching(bool value);
    [CompilerGeneratedAttribute]
public int get_EntityCacheLimit();
    [CompilerGeneratedAttribute]
public void set_EntityCacheLimit(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictScopeCache`1 : object {
    private MemoryCache _cache;
    private ConcurrentDictionary`2<string, CancellationTokenSource> _signals;
    private IOpenIddictScopeStore`1<TScope> _store;
    public OpenIddictScopeCache`1(IOptionsMonitor`1<OpenIddictCoreOptions> options, IOpenIddictScopeStoreResolver resolver);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeCache`1/<AddAsync>d__4")]
public sealed virtual ValueTask AddAsync(TScope scope, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    public sealed virtual ValueTask`1<TScope> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<TScope> FindByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TScope> FindByNamesAsync(ImmutableArray`1<string> names, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TScope> FindByResourceAsync(string resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeCache`1/<RemoveAsync>d__10")]
public sealed virtual ValueTask RemoveAsync(TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeCache`1/<CreateEntryAsync>d__11")]
private ValueTask CreateEntryAsync(object key, TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeCache`1/<CreateEntryAsync>d__12")]
private ValueTask CreateEntryAsync(object key, ImmutableArray`1<TScope> scopes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeCache`1/<CreateExpirationSignalAsync>d__13")]
private ValueTask`1<IChangeToken> CreateExpirationSignalAsync(TScope scope, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictScopeManager`1 : object {
    [CompilerGeneratedAttribute]
private IOpenIddictScopeCache`1<TScope> <Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OpenIddictCoreOptions> <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IOpenIddictScopeStore`1<TScope> <Store>k__BackingField;
    protected IOpenIddictScopeCache`1<TScope> Cache { get; }
    protected ILogger Logger { get; }
    protected IOptionsMonitor`1<OpenIddictCoreOptions> Options { get; }
    protected IOpenIddictScopeStore`1<TScope> Store { get; }
    public OpenIddictScopeManager`1(IOpenIddictScopeCache`1<TScope> cache, ILogger`1<OpenIddictScopeManager`1<TScope>> logger, IOptionsMonitor`1<OpenIddictCoreOptions> options, IOpenIddictScopeStoreResolver resolver);
    [CompilerGeneratedAttribute]
protected IOpenIddictScopeCache`1<TScope> get_Cache();
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<OpenIddictCoreOptions> get_Options();
    [CompilerGeneratedAttribute]
protected IOpenIddictScopeStore`1<TScope> get_Store();
    [NullableContextAttribute("0")]
public virtual ValueTask`1<long> CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<long> CountAsync(Func`2<IQueryable`1<TScope>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<CreateAsync>d__15")]
public virtual ValueTask CreateAsync(TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<CreateAsync>d__16")]
public virtual ValueTask`1<TScope> CreateAsync(OpenIddictScopeDescriptor descriptor, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<DeleteAsync>d__17")]
public virtual ValueTask DeleteAsync(TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<FindByIdAsync>d__18")]
public virtual ValueTask`1<TScope> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<FindByNameAsync>d__19")]
public virtual ValueTask`1<TScope> FindByNameAsync(string name, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TScope> FindByNamesAsync(ImmutableArray`1<string> names, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TScope> FindByResourceAsync(string resource, CancellationToken cancellationToken);
    public virtual ValueTask`1<TResult> GetAsync(Func`2<IQueryable`1<TScope>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    public virtual ValueTask`1<TResult> GetAsync(Func`3<IQueryable`1<TScope>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetDescriptionAsync(TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<GetDescriptionsAsync>d__25")]
public virtual ValueTask`1<ImmutableDictionary`2<CultureInfo, string>> GetDescriptionsAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetDisplayNameAsync(TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<GetDisplayNamesAsync>d__27")]
public virtual ValueTask`1<ImmutableDictionary`2<CultureInfo, string>> GetDisplayNamesAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetIdAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetLocalizedDisplayNameAsync(TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<GetLocalizedDisplayNameAsync>d__30")]
public virtual ValueTask`1<string> GetLocalizedDisplayNameAsync(TScope scope, CultureInfo culture, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetLocalizedDescriptionAsync(TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<GetLocalizedDescriptionAsync>d__32")]
public virtual ValueTask`1<string> GetLocalizedDescriptionAsync(TScope scope, CultureInfo culture, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetNameAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<string, JsonElement>> GetPropertiesAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetResourcesAsync(TScope scope, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TScope> ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`2<IQueryable`1<TScope>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`3<IQueryable`1<TScope>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<ListResourcesAsync>d__39")]
public virtual IAsyncEnumerable`1<string> ListResourcesAsync(ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<PopulateAsync>d__40")]
public virtual ValueTask PopulateAsync(TScope scope, OpenIddictScopeDescriptor descriptor, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<PopulateAsync>d__41")]
public virtual ValueTask PopulateAsync(OpenIddictScopeDescriptor descriptor, TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<UpdateAsync>d__42")]
public virtual ValueTask UpdateAsync(TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<UpdateAsync>d__43")]
public virtual ValueTask UpdateAsync(TScope scope, OpenIddictScopeDescriptor descriptor, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<ValidationResult> ValidateAsync(TScope scope, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<long> OpenIddict.Abstractions.IOpenIddictScopeManager.CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<long> OpenIddict.Abstractions.IOpenIddictScopeManager.CountAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<OpenIddict-Abstractions-IOpenIddictScopeManager-CreateAsync>d__47")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictScopeManager.CreateAsync(OpenIddictScopeDescriptor descriptor, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictScopeManager.CreateAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictScopeManager.DeleteAsync(object scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<OpenIddict-Abstractions-IOpenIddictScopeManager-FindByIdAsync>d__50")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictScopeManager.FindByIdAsync(string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<OpenIddict-Abstractions-IOpenIddictScopeManager-FindByNameAsync>d__51")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictScopeManager.FindByNameAsync(string name, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictScopeManager.FindByNamesAsync(ImmutableArray`1<string> names, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictScopeManager.FindByResourceAsync(string resource, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<TResult> OpenIddict.Abstractions.IOpenIddictScopeManager.GetAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<TResult> OpenIddict.Abstractions.IOpenIddictScopeManager.GetAsync(Func`3<IQueryable`1<object>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictScopeManager.GetDescriptionAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableDictionary`2<CultureInfo, string>> OpenIddict.Abstractions.IOpenIddictScopeManager.GetDescriptionsAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictScopeManager.GetDisplayNameAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableDictionary`2<CultureInfo, string>> OpenIddict.Abstractions.IOpenIddictScopeManager.GetDisplayNamesAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictScopeManager.GetIdAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictScopeManager.GetLocalizedDescriptionAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictScopeManager.GetLocalizedDescriptionAsync(object scope, CultureInfo culture, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictScopeManager.GetLocalizedDisplayNameAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictScopeManager.GetLocalizedDisplayNameAsync(object scope, CultureInfo culture, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictScopeManager.GetNameAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableDictionary`2<string, JsonElement>> OpenIddict.Abstractions.IOpenIddictScopeManager.GetPropertiesAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableArray`1<string>> OpenIddict.Abstractions.IOpenIddictScopeManager.GetResourcesAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictScopeManager.ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<TResult> OpenIddict.Abstractions.IOpenIddictScopeManager.ListAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<TResult> OpenIddict.Abstractions.IOpenIddictScopeManager.ListAsync(Func`3<IQueryable`1<object>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<string> OpenIddict.Abstractions.IOpenIddictScopeManager.ListResourcesAsync(ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictScopeManager.PopulateAsync(OpenIddictScopeDescriptor descriptor, object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictScopeManager.PopulateAsync(object scope, OpenIddictScopeDescriptor descriptor, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictScopeManager.UpdateAsync(object scope, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictScopeManager.UpdateAsync(object scope, OpenIddictScopeDescriptor descriptor, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<ValidationResult> OpenIddict.Abstractions.IOpenIddictScopeManager.ValidateAsync(object scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<<CreateAsync>g__GetValidationResultsAsync|15_1>d")]
[CompilerGeneratedAttribute]
private Task`1<ImmutableArray`1<ValidationResult>> <CreateAsync>g__GetValidationResultsAsync|15_1(TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictScopeManager`1/<<UpdateAsync>g__GetValidationResultsAsync|42_1>d")]
[CompilerGeneratedAttribute]
private Task`1<ImmutableArray`1<ValidationResult>> <UpdateAsync>g__GetValidationResultsAsync|42_1(TScope scope, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictScopeStoreResolver : object {
    private IServiceProvider _provider;
    public OpenIddictScopeStoreResolver(IServiceProvider provider);
    public sealed virtual IOpenIddictScopeStore`1<TScope> Get();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictTokenCache`1 : object {
    private MemoryCache _cache;
    private ConcurrentDictionary`2<string, CancellationTokenSource> _signals;
    private IOpenIddictTokenStore`1<TToken> _store;
    public OpenIddictTokenCache`1(IOptionsMonitor`1<OpenIddictCoreOptions> options, IOpenIddictTokenStoreResolver resolver);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenCache`1/<AddAsync>d__4")]
public sealed virtual ValueTask AddAsync(TToken token, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    public sealed virtual IAsyncEnumerable`1<TToken> FindAsync(string subject, string client, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TToken> FindAsync(string subject, string client, string status, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TToken> FindAsync(string subject, string client, string status, string type, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TToken> FindByApplicationIdAsync(string identifier, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TToken> FindByAuthorizationIdAsync(string identifier, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<TToken> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<TToken> FindByReferenceIdAsync(string identifier, CancellationToken cancellationToken);
    public sealed virtual IAsyncEnumerable`1<TToken> FindBySubjectAsync(string subject, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenCache`1/<RemoveAsync>d__14")]
public sealed virtual ValueTask RemoveAsync(TToken token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenCache`1/<CreateEntryAsync>d__15")]
private ValueTask CreateEntryAsync(object key, TToken token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenCache`1/<CreateEntryAsync>d__16")]
private ValueTask CreateEntryAsync(object key, ImmutableArray`1<TToken> tokens, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenCache`1/<CreateExpirationSignalAsync>d__17")]
private ValueTask`1<IChangeToken> CreateExpirationSignalAsync(TToken token, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictTokenManager`1 : object {
    [CompilerGeneratedAttribute]
private IOpenIddictTokenCache`1<TToken> <Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OpenIddictCoreOptions> <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IOpenIddictTokenStore`1<TToken> <Store>k__BackingField;
    protected IOpenIddictTokenCache`1<TToken> Cache { get; }
    protected ILogger Logger { get; }
    protected IOptionsMonitor`1<OpenIddictCoreOptions> Options { get; }
    protected IOpenIddictTokenStore`1<TToken> Store { get; }
    public OpenIddictTokenManager`1(IOpenIddictTokenCache`1<TToken> cache, ILogger`1<OpenIddictTokenManager`1<TToken>> logger, IOptionsMonitor`1<OpenIddictCoreOptions> options, IOpenIddictTokenStoreResolver resolver);
    [CompilerGeneratedAttribute]
protected IOpenIddictTokenCache`1<TToken> get_Cache();
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<OpenIddictCoreOptions> get_Options();
    [CompilerGeneratedAttribute]
protected IOpenIddictTokenStore`1<TToken> get_Store();
    [NullableContextAttribute("0")]
public virtual ValueTask`1<long> CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<long> CountAsync(Func`2<IQueryable`1<TToken>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<CreateAsync>d__15")]
public virtual ValueTask CreateAsync(TToken token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<CreateAsync>d__16")]
public virtual ValueTask`1<TToken> CreateAsync(OpenIddictTokenDescriptor descriptor, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<DeleteAsync>d__17")]
public virtual ValueTask DeleteAsync(TToken token, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindAsync(string subject, string client, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindAsync(string subject, string client, string status, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindAsync(string subject, string client, string status, string type, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindByApplicationIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindByAuthorizationIdAsync(string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<FindByIdAsync>d__23")]
public virtual ValueTask`1<TToken> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<FindByReferenceIdAsync>d__24")]
public virtual ValueTask`1<TToken> FindByReferenceIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindBySubjectAsync(string subject, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetApplicationIdAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<TResult> GetAsync(Func`2<IQueryable`1<TToken>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    public virtual ValueTask`1<TResult> GetAsync(Func`3<IQueryable`1<TToken>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetAuthorizationIdAsync(TToken token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<Nullable`1<DateTimeOffset>> GetCreationDateAsync(TToken token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<Nullable`1<DateTimeOffset>> GetExpirationDateAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetIdAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetPayloadAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<string, JsonElement>> GetPropertiesAsync(TToken token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<Nullable`1<DateTimeOffset>> GetRedemptionDateAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetReferenceIdAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetStatusAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetSubjectAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetTypeAsync(TToken token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<HasStatusAsync>d__40")]
public virtual ValueTask`1<bool> HasStatusAsync(TToken token, string status, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<HasTypeAsync>d__41")]
public virtual ValueTask`1<bool> HasTypeAsync(TToken token, string type, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<HasTypeAsync>d__42")]
public virtual ValueTask`1<bool> HasTypeAsync(TToken token, ImmutableArray`1<string> types, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`2<IQueryable`1<TToken>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`3<IQueryable`1<TToken>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<PopulateAsync>d__46")]
public virtual ValueTask PopulateAsync(TToken token, OpenIddictTokenDescriptor descriptor, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<PopulateAsync>d__47")]
public virtual ValueTask PopulateAsync(OpenIddictTokenDescriptor descriptor, TToken token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<long> PruneAsync(DateTimeOffset threshold, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<long> RevokeByAuthorizationIdAsync(string identifier, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<TryRedeemAsync>d__50")]
public virtual ValueTask`1<bool> TryRedeemAsync(TToken token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<TryRejectAsync>d__51")]
public virtual ValueTask`1<bool> TryRejectAsync(TToken token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<TryRevokeAsync>d__52")]
public virtual ValueTask`1<bool> TryRevokeAsync(TToken token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<UpdateAsync>d__53")]
public virtual ValueTask UpdateAsync(TToken token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<UpdateAsync>d__54")]
public virtual ValueTask UpdateAsync(TToken token, OpenIddictTokenDescriptor descriptor, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<ValidationResult> ValidateAsync(TToken token, CancellationToken cancellationToken);
    protected virtual ValueTask`1<string> ObfuscateReferenceIdAsync(string identifier, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<long> OpenIddict.Abstractions.IOpenIddictTokenManager.CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<long> OpenIddict.Abstractions.IOpenIddictTokenManager.CountAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<OpenIddict-Abstractions-IOpenIddictTokenManager-CreateAsync>d__59")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictTokenManager.CreateAsync(OpenIddictTokenDescriptor descriptor, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictTokenManager.CreateAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictTokenManager.DeleteAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictTokenManager.FindAsync(string subject, string client, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictTokenManager.FindAsync(string subject, string client, string status, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictTokenManager.FindAsync(string subject, string client, string status, string type, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictTokenManager.FindByApplicationIdAsync(string identifier, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictTokenManager.FindByAuthorizationIdAsync(string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<OpenIddict-Abstractions-IOpenIddictTokenManager-FindByIdAsync>d__67")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictTokenManager.FindByIdAsync(string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<OpenIddict-Abstractions-IOpenIddictTokenManager-FindByReferenceIdAsync>d__68")]
private sealed virtual override ValueTask`1<object> OpenIddict.Abstractions.IOpenIddictTokenManager.FindByReferenceIdAsync(string identifier, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictTokenManager.FindBySubjectAsync(string subject, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictTokenManager.GetApplicationIdAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<TResult> OpenIddict.Abstractions.IOpenIddictTokenManager.GetAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<TResult> OpenIddict.Abstractions.IOpenIddictTokenManager.GetAsync(Func`3<IQueryable`1<object>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictTokenManager.GetAuthorizationIdAsync(object token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<Nullable`1<DateTimeOffset>> OpenIddict.Abstractions.IOpenIddictTokenManager.GetCreationDateAsync(object token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<Nullable`1<DateTimeOffset>> OpenIddict.Abstractions.IOpenIddictTokenManager.GetExpirationDateAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictTokenManager.GetIdAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictTokenManager.GetPayloadAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<ImmutableDictionary`2<string, JsonElement>> OpenIddict.Abstractions.IOpenIddictTokenManager.GetPropertiesAsync(object token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<Nullable`1<DateTimeOffset>> OpenIddict.Abstractions.IOpenIddictTokenManager.GetRedemptionDateAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictTokenManager.GetReferenceIdAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictTokenManager.GetStatusAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictTokenManager.GetSubjectAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<string> OpenIddict.Abstractions.IOpenIddictTokenManager.GetTypeAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictTokenManager.HasStatusAsync(object token, string status, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictTokenManager.HasTypeAsync(object token, string type, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictTokenManager.HasTypeAsync(object token, ImmutableArray`1<string> types, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<object> OpenIddict.Abstractions.IOpenIddictTokenManager.ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<TResult> OpenIddict.Abstractions.IOpenIddictTokenManager.ListAsync(Func`2<IQueryable`1<object>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<TResult> OpenIddict.Abstractions.IOpenIddictTokenManager.ListAsync(Func`3<IQueryable`1<object>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictTokenManager.PopulateAsync(OpenIddictTokenDescriptor descriptor, object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictTokenManager.PopulateAsync(object token, OpenIddictTokenDescriptor descriptor, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<long> OpenIddict.Abstractions.IOpenIddictTokenManager.PruneAsync(DateTimeOffset threshold, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<long> OpenIddict.Abstractions.IOpenIddictTokenManager.RevokeByAuthorizationIdAsync(string identifier, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictTokenManager.TryRedeemAsync(object token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictTokenManager.TryRejectAsync(object token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private sealed virtual override ValueTask`1<bool> OpenIddict.Abstractions.IOpenIddictTokenManager.TryRevokeAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictTokenManager.UpdateAsync(object token, CancellationToken cancellationToken);
    private sealed virtual override ValueTask OpenIddict.Abstractions.IOpenIddictTokenManager.UpdateAsync(object token, OpenIddictTokenDescriptor descriptor, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerable`1<ValidationResult> OpenIddict.Abstractions.IOpenIddictTokenManager.ValidateAsync(object token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<<CreateAsync>g__GetValidationResultsAsync|15_1>d")]
[CompilerGeneratedAttribute]
private Task`1<ImmutableArray`1<ValidationResult>> <CreateAsync>g__GetValidationResultsAsync|15_1(TToken token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.Core.OpenIddictTokenManager`1/<<UpdateAsync>g__GetValidationResultsAsync|53_1>d")]
[CompilerGeneratedAttribute]
private Task`1<ImmutableArray`1<ValidationResult>> <UpdateAsync>g__GetValidationResultsAsync|53_1(TToken token, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.Core.OpenIddictTokenStoreResolver : object {
    private IServiceProvider _provider;
    public OpenIddictTokenStoreResolver(IServiceProvider provider);
    public sealed virtual IOpenIddictTokenStore`1<TToken> Get();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class OpenIddict.Extensions.OpenIddictHelpers : object {
    [IteratorStateMachineAttribute("OpenIddict.Extensions.OpenIddictHelpers/<Buffer>d__0`1")]
[ExtensionAttribute]
public static IEnumerable`1<List`1<TSource>> Buffer(IEnumerable`1<TSource> source, int count);
    public static Type FindGenericBaseType(Type type, Type definition);
    [IteratorStateMachineAttribute("OpenIddict.Extensions.OpenIddictHelpers/<FindGenericBaseTypes>d__2")]
public static IEnumerable`1<Type> FindGenericBaseTypes(Type type, Type definition);
    public static bool IsFatal(Exception exception);
    [NullableContextAttribute("2")]
public static Uri CreateAbsoluteUri(Uri left, string right);
    [NullableContextAttribute("2")]
public static Uri CreateAbsoluteUri(Uri left, Uri right);
    public static bool IsBaseOf(Uri left, Uri right);
    public static bool IsImplicitFileUri(Uri uri);
    public static Uri AddQueryStringParameter(Uri uri, string name, string value);
    public static Uri AddQueryStringParameters(Uri uri, IReadOnlyDictionary`2<string, StringValues> parameters);
    public static IReadOnlyDictionary`2<string, StringValues> ParseQuery(string query);
    public static IReadOnlyDictionary`2<string, StringValues> ParseFragment(string fragment);
    [AsyncStateMachineAttribute("OpenIddict.Extensions.OpenIddictHelpers/<ParseFormAsync>d__12")]
public static ValueTask`1<IReadOnlyDictionary`2<string, StringValues>> ParseFormAsync(Stream stream, Encoding encoding, CancellationToken cancellationToken);
    public static ECDsa CreateEcdsaKey();
    public static ECDsa CreateEcdsaKey(ECCurve curve);
    public static RSA CreateRsaKey(int size);
    public static Byte[] ComputeSha256MessageAuthenticationCode(Byte[] key, Byte[] data);
    public static Byte[] ComputeSha256Hash(Byte[] data);
    public static Byte[] ComputeSha384Hash(Byte[] data);
    public static Byte[] ComputeSha512Hash(Byte[] data);
    public static Byte[] CreateRandomArray(int size);
    public static string CreateRandomString(ReadOnlySpan`1<string> charset, int count);
    [NullableContextAttribute("0")]
public static bool FixedTimeEquals(ReadOnlySpan`1<byte> left, ReadOnlySpan`1<byte> right);
    public static Byte[] ConvertFromHexadecimalString(string value);
    [NullableContextAttribute("2")]
public static string RemoveDisallowedCharacters(string value, IReadOnlyCollection`1<string> charset);
    public static Byte[] DeriveKey(string secret, Byte[] salt, HashAlgorithmName algorithm, int iterations, int length);
    public static bool IsEcCurve(ECParameters parameters, ECCurve curve);
    public static bool ValidateArrayElements(JsonElement element, JsonValueKind kind);
    [CompilerGeneratedAttribute]
internal static bool <IsFatal>g__IsAnyFatal|3_0(ReadOnlyCollection`1<Exception> exceptions);
    [CompilerGeneratedAttribute]
internal static int <CreateRandomString>g__GetInt32|21_0(RandomNumberGenerator algorithm, Range range);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
