[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.EntityFrameworkCore.OpenIddictEntityFrameworkCoreHelpers : object {
    [ExtensionAttribute]
public static DbContextOptionsBuilder UseOpenIddict(DbContextOptionsBuilder builder);
    [ExtensionAttribute]
public static DbContextOptionsBuilder`1<TContext> UseOpenIddict(DbContextOptionsBuilder`1<TContext> builder);
    [ExtensionAttribute]
public static DbContextOptionsBuilder UseOpenIddict(DbContextOptionsBuilder builder);
    [ExtensionAttribute]
public static DbContextOptionsBuilder`1<TContext> UseOpenIddict(DbContextOptionsBuilder`1<TContext> builder);
    [ExtensionAttribute]
public static DbContextOptionsBuilder UseOpenIddict(DbContextOptionsBuilder builder);
    [ExtensionAttribute]
public static DbContextOptionsBuilder`1<TContext> UseOpenIddict(DbContextOptionsBuilder`1<TContext> builder);
    [ExtensionAttribute]
public static ModelBuilder UseOpenIddict(ModelBuilder builder);
    [ExtensionAttribute]
public static ModelBuilder UseOpenIddict(ModelBuilder builder);
    [ExtensionAttribute]
public static ModelBuilder UseOpenIddict(ModelBuilder builder);
    [ExtensionAttribute]
internal static IAsyncEnumerable`1<T> AsAsyncEnumerable(IQueryable`1<T> source, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.EntityFrameworkCore.OpenIddictEntityFrameworkCoreHelpers/<CreateTransactionAsync>d__10")]
[ExtensionAttribute]
internal static ValueTask`1<IDbContextTransaction> CreateTransactionAsync(DbContext context, IsolationLevel level, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Microsoft.EntityFrameworkCore.OpenIddictEntityFrameworkCoreHelpers/<<AsAsyncEnumerable>g__ExecuteAsync|9_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<T> <AsAsyncEnumerable>g__ExecuteAsync|9_0(IQueryable`1<T> source, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.DependencyInjection.OpenIddictEntityFrameworkCoreBuilder : object {
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    [EditorBrowsableAttribute("1")]
public IServiceCollection Services { get; }
    public OpenIddictEntityFrameworkCoreBuilder(IServiceCollection services);
    [CompilerGeneratedAttribute]
public IServiceCollection get_Services();
    public OpenIddictEntityFrameworkCoreBuilder Configure(Action`1<OpenIddictEntityFrameworkCoreOptions> configuration);
    public OpenIddictEntityFrameworkCoreBuilder DisableBulkOperations();
    public OpenIddictEntityFrameworkCoreBuilder ReplaceDefaultEntities();
    public OpenIddictEntityFrameworkCoreBuilder ReplaceDefaultEntities();
    public OpenIddictEntityFrameworkCoreBuilder UseDbContext();
    public OpenIddictEntityFrameworkCoreBuilder UseDbContext(Type type);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.OpenIddictEntityFrameworkCoreExtensions : object {
    [ExtensionAttribute]
public static OpenIddictEntityFrameworkCoreBuilder UseEntityFrameworkCore(OpenIddictCoreBuilder builder);
    [ExtensionAttribute]
public static OpenIddictCoreBuilder UseEntityFrameworkCore(OpenIddictCoreBuilder builder, Action`1<OpenIddictEntityFrameworkCoreBuilder> configuration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EditorBrowsableAttribute("1")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreApplicationConfiguration`4 : object {
    public sealed virtual void Configure(EntityTypeBuilder`1<TApplication> builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreApplicationStore`1 : OpenIddictEntityFrameworkCoreApplicationStore`5<OpenIddictEntityFrameworkCoreApplication, OpenIddictEntityFrameworkCoreAuthorization, OpenIddictEntityFrameworkCoreToken, TContext, string> {
    public OpenIddictEntityFrameworkCoreApplicationStore`1(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreApplicationStore`2 : OpenIddictEntityFrameworkCoreApplicationStore`5<OpenIddictEntityFrameworkCoreApplication`1<TKey>, OpenIddictEntityFrameworkCoreAuthorization`1<TKey>, OpenIddictEntityFrameworkCoreToken`1<TKey>, TContext, TKey> {
    public OpenIddictEntityFrameworkCoreApplicationStore`2(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreApplicationStore`5 : object {
    [CompilerGeneratedAttribute]
private IMemoryCache <Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private TContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> <Options>k__BackingField;
    protected IMemoryCache Cache { get; }
    protected TContext Context { get; }
    protected IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> Options { get; }
    private DbSet`1<TApplication> Applications { get; }
    private DbSet`1<TAuthorization> Authorizations { get; }
    private DbSet`1<TToken> Tokens { get; }
    public OpenIddictEntityFrameworkCoreApplicationStore`5(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
    [CompilerGeneratedAttribute]
protected IMemoryCache get_Cache();
    [CompilerGeneratedAttribute]
protected TContext get_Context();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> get_Options();
    private DbSet`1<TApplication> get_Applications();
    private DbSet`1<TAuthorization> get_Authorizations();
    private DbSet`1<TToken> get_Tokens();
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreApplicationStore`5/<CountAsync>d__16")]
public virtual ValueTask`1<long> CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreApplicationStore`5/<CountAsync>d__17`1")]
public virtual ValueTask`1<long> CountAsync(Func`2<IQueryable`1<TApplication>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreApplicationStore`5/<CreateAsync>d__18")]
public virtual ValueTask CreateAsync(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreApplicationStore`5/<DeleteAsync>d__19")]
public virtual ValueTask DeleteAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<TApplication> FindByClientIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual ValueTask`1<TApplication> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TApplication> FindByPostLogoutRedirectUriAsync(string uri, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TApplication> FindByRedirectUriAsync(string uri, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetApplicationTypeAsync(TApplication application, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreApplicationStore`5/<GetAsync>d__25`2")]
public virtual ValueTask`1<TResult> GetAsync(Func`3<IQueryable`1<TApplication>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetClientIdAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetClientSecretAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetClientTypeAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetConsentTypeAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetDisplayNameAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<CultureInfo, string>> GetDisplayNamesAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetIdAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<JsonWebKeySet> GetJsonWebKeySetAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetPermissionsAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetPostLogoutRedirectUrisAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<string, JsonElement>> GetPropertiesAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetRedirectUrisAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetRequirementsAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<string, string>> GetSettingsAsync(TApplication application, CancellationToken cancellationToken);
    public virtual ValueTask`1<TApplication> InstantiateAsync(CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TApplication> ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`3<IQueryable`1<TApplication>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    public virtual ValueTask SetApplicationTypeAsync(TApplication application, string type, CancellationToken cancellationToken);
    public virtual ValueTask SetClientIdAsync(TApplication application, string identifier, CancellationToken cancellationToken);
    public virtual ValueTask SetClientSecretAsync(TApplication application, string secret, CancellationToken cancellationToken);
    public virtual ValueTask SetClientTypeAsync(TApplication application, string type, CancellationToken cancellationToken);
    public virtual ValueTask SetConsentTypeAsync(TApplication application, string type, CancellationToken cancellationToken);
    public virtual ValueTask SetDisplayNameAsync(TApplication application, string name, CancellationToken cancellationToken);
    public virtual ValueTask SetDisplayNamesAsync(TApplication application, ImmutableDictionary`2<CultureInfo, string> names, CancellationToken cancellationToken);
    public virtual ValueTask SetJsonWebKeySetAsync(TApplication application, JsonWebKeySet set, CancellationToken cancellationToken);
    public virtual ValueTask SetPermissionsAsync(TApplication application, ImmutableArray`1<string> permissions, CancellationToken cancellationToken);
    public virtual ValueTask SetPostLogoutRedirectUrisAsync(TApplication application, ImmutableArray`1<string> uris, CancellationToken cancellationToken);
    public virtual ValueTask SetPropertiesAsync(TApplication application, ImmutableDictionary`2<string, JsonElement> properties, CancellationToken cancellationToken);
    public virtual ValueTask SetRedirectUrisAsync(TApplication application, ImmutableArray`1<string> uris, CancellationToken cancellationToken);
    public virtual ValueTask SetRequirementsAsync(TApplication application, ImmutableArray`1<string> requirements, CancellationToken cancellationToken);
    public virtual ValueTask SetSettingsAsync(TApplication application, ImmutableDictionary`2<string, string> settings, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreApplicationStore`5/<UpdateAsync>d__57")]
public virtual ValueTask UpdateAsync(TApplication application, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public virtual TKey ConvertIdentifierFromString(string identifier);
    [NullableContextAttribute("2")]
public virtual string ConvertIdentifierToString(TKey identifier);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreApplicationStoreResolver : object {
    private TypeResolutionCache _cache;
    private IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> _options;
    private IServiceProvider _provider;
    public OpenIddictEntityFrameworkCoreApplicationStoreResolver(TypeResolutionCache cache, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options, IServiceProvider provider);
    public sealed virtual IOpenIddictApplicationStore`1<TApplication> Get();
    [CompilerGeneratedAttribute]
private Type <Get>b__4_0(Type key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EditorBrowsableAttribute("1")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationConfiguration`4 : object {
    public sealed virtual void Configure(EntityTypeBuilder`1<TAuthorization> builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`1 : OpenIddictEntityFrameworkCoreAuthorizationStore`5<OpenIddictEntityFrameworkCoreAuthorization, OpenIddictEntityFrameworkCoreApplication, OpenIddictEntityFrameworkCoreToken, TContext, string> {
    public OpenIddictEntityFrameworkCoreAuthorizationStore`1(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`2 : OpenIddictEntityFrameworkCoreAuthorizationStore`5<OpenIddictEntityFrameworkCoreAuthorization`1<TKey>, OpenIddictEntityFrameworkCoreApplication`1<TKey>, OpenIddictEntityFrameworkCoreToken`1<TKey>, TContext, TKey> {
    public OpenIddictEntityFrameworkCoreAuthorizationStore`2(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`5 : object {
    [CompilerGeneratedAttribute]
private IMemoryCache <Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private TContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> <Options>k__BackingField;
    protected IMemoryCache Cache { get; }
    protected TContext Context { get; }
    protected IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> Options { get; }
    private DbSet`1<TApplication> Applications { get; }
    private DbSet`1<TAuthorization> Authorizations { get; }
    private DbSet`1<TToken> Tokens { get; }
    public OpenIddictEntityFrameworkCoreAuthorizationStore`5(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
    [CompilerGeneratedAttribute]
protected IMemoryCache get_Cache();
    [CompilerGeneratedAttribute]
protected TContext get_Context();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> get_Options();
    private DbSet`1<TApplication> get_Applications();
    private DbSet`1<TAuthorization> get_Authorizations();
    private DbSet`1<TToken> get_Tokens();
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`5/<CountAsync>d__16")]
public virtual ValueTask`1<long> CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`5/<CountAsync>d__17`1")]
public virtual ValueTask`1<long> CountAsync(Func`2<IQueryable`1<TAuthorization>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`5/<CreateAsync>d__18")]
public virtual ValueTask CreateAsync(TAuthorization authorization, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`5/<DeleteAsync>d__19")]
public virtual ValueTask DeleteAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, string status, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, string status, string type, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindAsync(string subject, string client, string status, string type, ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindByApplicationIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual ValueTask`1<TAuthorization> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> FindBySubjectAsync(string subject, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`5/<GetApplicationIdAsync>d__27")]
public virtual ValueTask`1<string> GetApplicationIdAsync(TAuthorization authorization, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`5/<GetAsync>d__28`2")]
public virtual ValueTask`1<TResult> GetAsync(Func`3<IQueryable`1<TAuthorization>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<Nullable`1<DateTimeOffset>> GetCreationDateAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetIdAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<string, JsonElement>> GetPropertiesAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetScopesAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetStatusAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetSubjectAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetTypeAsync(TAuthorization authorization, CancellationToken cancellationToken);
    public virtual ValueTask`1<TAuthorization> InstantiateAsync(CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TAuthorization> ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`3<IQueryable`1<TAuthorization>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`5/<PruneAsync>d__39")]
public virtual ValueTask`1<long> PruneAsync(DateTimeOffset threshold, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`5/<SetApplicationIdAsync>d__40")]
public virtual ValueTask SetApplicationIdAsync(TAuthorization authorization, string identifier, CancellationToken cancellationToken);
    public virtual ValueTask SetCreationDateAsync(TAuthorization authorization, Nullable`1<DateTimeOffset> date, CancellationToken cancellationToken);
    public virtual ValueTask SetPropertiesAsync(TAuthorization authorization, ImmutableDictionary`2<string, JsonElement> properties, CancellationToken cancellationToken);
    public virtual ValueTask SetScopesAsync(TAuthorization authorization, ImmutableArray`1<string> scopes, CancellationToken cancellationToken);
    public virtual ValueTask SetStatusAsync(TAuthorization authorization, string status, CancellationToken cancellationToken);
    public virtual ValueTask SetSubjectAsync(TAuthorization authorization, string subject, CancellationToken cancellationToken);
    public virtual ValueTask SetTypeAsync(TAuthorization authorization, string type, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStore`5/<UpdateAsync>d__47")]
public virtual ValueTask UpdateAsync(TAuthorization authorization, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public virtual TKey ConvertIdentifierFromString(string identifier);
    [NullableContextAttribute("2")]
public virtual string ConvertIdentifierToString(TKey identifier);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreAuthorizationStoreResolver : object {
    private TypeResolutionCache _cache;
    private IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> _options;
    private IServiceProvider _provider;
    public OpenIddictEntityFrameworkCoreAuthorizationStoreResolver(TypeResolutionCache cache, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options, IServiceProvider provider);
    public sealed virtual IOpenIddictAuthorizationStore`1<TAuthorization> Get();
    [CompilerGeneratedAttribute]
private Type <Get>b__4_0(Type key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreCustomizer`5 : RelationalModelCustomizer {
    public OpenIddictEntityFrameworkCoreCustomizer`5(ModelCustomizerDependencies dependencies);
    public virtual void Customize(ModelBuilder modelBuilder, DbContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreOptions : object {
    [CompilerGeneratedAttribute]
private Type <DbContextType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableBulkOperations>k__BackingField;
    public Type DbContextType { get; public set; }
    public bool DisableBulkOperations { get; public set; }
    [CompilerGeneratedAttribute]
public Type get_DbContextType();
    [CompilerGeneratedAttribute]
public void set_DbContextType(Type value);
    [CompilerGeneratedAttribute]
public bool get_DisableBulkOperations();
    [CompilerGeneratedAttribute]
public void set_DisableBulkOperations(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EditorBrowsableAttribute("1")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreScopeConfiguration`2 : object {
    public sealed virtual void Configure(EntityTypeBuilder`1<TScope> builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreScopeStore`1 : OpenIddictEntityFrameworkCoreScopeStore`3<OpenIddictEntityFrameworkCoreScope, TContext, string> {
    public OpenIddictEntityFrameworkCoreScopeStore`1(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreScopeStore`2 : OpenIddictEntityFrameworkCoreScopeStore`3<OpenIddictEntityFrameworkCoreScope`1<TKey>, TContext, TKey> {
    public OpenIddictEntityFrameworkCoreScopeStore`2(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreScopeStore`3 : object {
    [CompilerGeneratedAttribute]
private IMemoryCache <Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private TContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> <Options>k__BackingField;
    protected IMemoryCache Cache { get; }
    protected TContext Context { get; }
    protected IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> Options { get; }
    private DbSet`1<TScope> Scopes { get; }
    public OpenIddictEntityFrameworkCoreScopeStore`3(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
    [CompilerGeneratedAttribute]
protected IMemoryCache get_Cache();
    [CompilerGeneratedAttribute]
protected TContext get_Context();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> get_Options();
    private DbSet`1<TScope> get_Scopes();
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreScopeStore`3/<CountAsync>d__12")]
public virtual ValueTask`1<long> CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreScopeStore`3/<CountAsync>d__13`1")]
public virtual ValueTask`1<long> CountAsync(Func`2<IQueryable`1<TScope>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreScopeStore`3/<CreateAsync>d__14")]
public virtual ValueTask CreateAsync(TScope scope, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreScopeStore`3/<DeleteAsync>d__15")]
public virtual ValueTask DeleteAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<TScope> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual ValueTask`1<TScope> FindByNameAsync(string name, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TScope> FindByNamesAsync(ImmutableArray`1<string> names, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TScope> FindByResourceAsync(string resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreScopeStore`3/<GetAsync>d__20`2")]
public virtual ValueTask`1<TResult> GetAsync(Func`3<IQueryable`1<TScope>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetDescriptionAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<CultureInfo, string>> GetDescriptionsAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetDisplayNameAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<CultureInfo, string>> GetDisplayNamesAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetIdAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetNameAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<string, JsonElement>> GetPropertiesAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableArray`1<string>> GetResourcesAsync(TScope scope, CancellationToken cancellationToken);
    public virtual ValueTask`1<TScope> InstantiateAsync(CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TScope> ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`3<IQueryable`1<TScope>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    public virtual ValueTask SetDescriptionAsync(TScope scope, string description, CancellationToken cancellationToken);
    public virtual ValueTask SetDescriptionsAsync(TScope scope, ImmutableDictionary`2<CultureInfo, string> descriptions, CancellationToken cancellationToken);
    public virtual ValueTask SetDisplayNameAsync(TScope scope, string name, CancellationToken cancellationToken);
    public virtual ValueTask SetDisplayNamesAsync(TScope scope, ImmutableDictionary`2<CultureInfo, string> names, CancellationToken cancellationToken);
    public virtual ValueTask SetNameAsync(TScope scope, string name, CancellationToken cancellationToken);
    public virtual ValueTask SetPropertiesAsync(TScope scope, ImmutableDictionary`2<string, JsonElement> properties, CancellationToken cancellationToken);
    public virtual ValueTask SetResourcesAsync(TScope scope, ImmutableArray`1<string> resources, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreScopeStore`3/<UpdateAsync>d__39")]
public virtual ValueTask UpdateAsync(TScope scope, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public virtual TKey ConvertIdentifierFromString(string identifier);
    [NullableContextAttribute("2")]
public virtual string ConvertIdentifierToString(TKey identifier);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreScopeStoreResolver : object {
    private TypeResolutionCache _cache;
    private IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> _options;
    private IServiceProvider _provider;
    public OpenIddictEntityFrameworkCoreScopeStoreResolver(TypeResolutionCache cache, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options, IServiceProvider provider);
    public sealed virtual IOpenIddictScopeStore`1<TScope> Get();
    [CompilerGeneratedAttribute]
private Type <Get>b__4_0(Type key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EditorBrowsableAttribute("1")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenConfiguration`4 : object {
    public sealed virtual void Configure(EntityTypeBuilder`1<TToken> builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`1 : OpenIddictEntityFrameworkCoreTokenStore`5<OpenIddictEntityFrameworkCoreToken, OpenIddictEntityFrameworkCoreApplication, OpenIddictEntityFrameworkCoreAuthorization, TContext, string> {
    public OpenIddictEntityFrameworkCoreTokenStore`1(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`2 : OpenIddictEntityFrameworkCoreTokenStore`5<OpenIddictEntityFrameworkCoreToken`1<TKey>, OpenIddictEntityFrameworkCoreApplication`1<TKey>, OpenIddictEntityFrameworkCoreAuthorization`1<TKey>, TContext, TKey> {
    public OpenIddictEntityFrameworkCoreTokenStore`2(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5 : object {
    [CompilerGeneratedAttribute]
private IMemoryCache <Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private TContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> <Options>k__BackingField;
    protected IMemoryCache Cache { get; }
    protected TContext Context { get; }
    protected IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> Options { get; }
    private DbSet`1<TApplication> Applications { get; }
    private DbSet`1<TAuthorization> Authorizations { get; }
    private DbSet`1<TToken> Tokens { get; }
    public OpenIddictEntityFrameworkCoreTokenStore`5(IMemoryCache cache, TContext context, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options);
    [CompilerGeneratedAttribute]
protected IMemoryCache get_Cache();
    [CompilerGeneratedAttribute]
protected TContext get_Context();
    [CompilerGeneratedAttribute]
protected IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> get_Options();
    private DbSet`1<TApplication> get_Applications();
    private DbSet`1<TAuthorization> get_Authorizations();
    private DbSet`1<TToken> get_Tokens();
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<CountAsync>d__16")]
public virtual ValueTask`1<long> CountAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<CountAsync>d__17`1")]
public virtual ValueTask`1<long> CountAsync(Func`2<IQueryable`1<TToken>, IQueryable`1<TResult>> query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<CreateAsync>d__18")]
public virtual ValueTask CreateAsync(TToken token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<DeleteAsync>d__19")]
public virtual ValueTask DeleteAsync(TToken token, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindAsync(string subject, string client, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindAsync(string subject, string client, string status, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindAsync(string subject, string client, string status, string type, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindByApplicationIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindByAuthorizationIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual ValueTask`1<TToken> FindByIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual ValueTask`1<TToken> FindByReferenceIdAsync(string identifier, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> FindBySubjectAsync(string subject, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<GetApplicationIdAsync>d__28")]
public virtual ValueTask`1<string> GetApplicationIdAsync(TToken token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<GetAsync>d__29`2")]
public virtual ValueTask`1<TResult> GetAsync(Func`3<IQueryable`1<TToken>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<GetAuthorizationIdAsync>d__30")]
public virtual ValueTask`1<string> GetAuthorizationIdAsync(TToken token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<Nullable`1<DateTimeOffset>> GetCreationDateAsync(TToken token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<Nullable`1<DateTimeOffset>> GetExpirationDateAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetIdAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetPayloadAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<ImmutableDictionary`2<string, JsonElement>> GetPropertiesAsync(TToken token, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<Nullable`1<DateTimeOffset>> GetRedemptionDateAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetReferenceIdAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetStatusAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetSubjectAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<string> GetTypeAsync(TToken token, CancellationToken cancellationToken);
    public virtual ValueTask`1<TToken> InstantiateAsync(CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TToken> ListAsync(Nullable`1<int> count, Nullable`1<int> offset, CancellationToken cancellationToken);
    public virtual IAsyncEnumerable`1<TResult> ListAsync(Func`3<IQueryable`1<TToken>, TState, IQueryable`1<TResult>> query, TState state, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<PruneAsync>d__44")]
public virtual ValueTask`1<long> PruneAsync(DateTimeOffset threshold, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<RevokeByAuthorizationIdAsync>d__45")]
public virtual ValueTask`1<long> RevokeByAuthorizationIdAsync(string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<SetApplicationIdAsync>d__46")]
public virtual ValueTask SetApplicationIdAsync(TToken token, string identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<SetAuthorizationIdAsync>d__47")]
public virtual ValueTask SetAuthorizationIdAsync(TToken token, string identifier, CancellationToken cancellationToken);
    public virtual ValueTask SetCreationDateAsync(TToken token, Nullable`1<DateTimeOffset> date, CancellationToken cancellationToken);
    public virtual ValueTask SetExpirationDateAsync(TToken token, Nullable`1<DateTimeOffset> date, CancellationToken cancellationToken);
    public virtual ValueTask SetPayloadAsync(TToken token, string payload, CancellationToken cancellationToken);
    public virtual ValueTask SetPropertiesAsync(TToken token, ImmutableDictionary`2<string, JsonElement> properties, CancellationToken cancellationToken);
    public virtual ValueTask SetRedemptionDateAsync(TToken token, Nullable`1<DateTimeOffset> date, CancellationToken cancellationToken);
    public virtual ValueTask SetReferenceIdAsync(TToken token, string identifier, CancellationToken cancellationToken);
    public virtual ValueTask SetStatusAsync(TToken token, string status, CancellationToken cancellationToken);
    public virtual ValueTask SetSubjectAsync(TToken token, string subject, CancellationToken cancellationToken);
    public virtual ValueTask SetTypeAsync(TToken token, string type, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStore`5/<UpdateAsync>d__57")]
public virtual ValueTask UpdateAsync(TToken token, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public virtual TKey ConvertIdentifierFromString(string identifier);
    [NullableContextAttribute("2")]
public virtual string ConvertIdentifierToString(TKey identifier);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class OpenIddict.EntityFrameworkCore.OpenIddictEntityFrameworkCoreTokenStoreResolver : object {
    private TypeResolutionCache _cache;
    private IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> _options;
    private IServiceProvider _provider;
    public OpenIddictEntityFrameworkCoreTokenStoreResolver(TypeResolutionCache cache, IOptionsMonitor`1<OpenIddictEntityFrameworkCoreOptions> options, IServiceProvider provider);
    public sealed virtual IOpenIddictTokenStore`1<TToken> Get();
    [CompilerGeneratedAttribute]
private Type <Get>b__4_0(Type key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class OpenIddict.Extensions.OpenIddictHelpers : object {
    [IteratorStateMachineAttribute("OpenIddict.Extensions.OpenIddictHelpers/<Buffer>d__0`1")]
[ExtensionAttribute]
public static IEnumerable`1<List`1<TSource>> Buffer(IEnumerable`1<TSource> source, int count);
    public static Type FindGenericBaseType(Type type, Type definition);
    [IteratorStateMachineAttribute("OpenIddict.Extensions.OpenIddictHelpers/<FindGenericBaseTypes>d__2")]
public static IEnumerable`1<Type> FindGenericBaseTypes(Type type, Type definition);
    public static bool IsFatal(Exception exception);
    [NullableContextAttribute("2")]
public static Uri CreateAbsoluteUri(Uri left, string right);
    [NullableContextAttribute("2")]
public static Uri CreateAbsoluteUri(Uri left, Uri right);
    public static bool IsBaseOf(Uri left, Uri right);
    public static bool IsImplicitFileUri(Uri uri);
    public static Uri AddQueryStringParameter(Uri uri, string name, string value);
    public static Uri AddQueryStringParameters(Uri uri, IReadOnlyDictionary`2<string, StringValues> parameters);
    public static IReadOnlyDictionary`2<string, StringValues> ParseQuery(string query);
    public static IReadOnlyDictionary`2<string, StringValues> ParseFragment(string fragment);
    [AsyncStateMachineAttribute("OpenIddict.Extensions.OpenIddictHelpers/<ParseFormAsync>d__12")]
public static ValueTask`1<IReadOnlyDictionary`2<string, StringValues>> ParseFormAsync(Stream stream, Encoding encoding, CancellationToken cancellationToken);
    public static ECDsa CreateEcdsaKey();
    public static ECDsa CreateEcdsaKey(ECCurve curve);
    public static RSA CreateRsaKey(int size);
    public static Byte[] ComputeSha256MessageAuthenticationCode(Byte[] key, Byte[] data);
    public static Byte[] ComputeSha256Hash(Byte[] data);
    public static Byte[] ComputeSha384Hash(Byte[] data);
    public static Byte[] ComputeSha512Hash(Byte[] data);
    public static Byte[] CreateRandomArray(int size);
    public static string CreateRandomString(ReadOnlySpan`1<string> charset, int count);
    [NullableContextAttribute("0")]
public static bool FixedTimeEquals(ReadOnlySpan`1<byte> left, ReadOnlySpan`1<byte> right);
    public static Byte[] ConvertFromHexadecimalString(string value);
    [NullableContextAttribute("2")]
public static string RemoveDisallowedCharacters(string value, IReadOnlyCollection`1<string> charset);
    public static Byte[] DeriveKey(string secret, Byte[] salt, HashAlgorithmName algorithm, int iterations, int length);
    public static bool IsEcCurve(ECParameters parameters, ECCurve curve);
    public static bool ValidateArrayElements(JsonElement element, JsonValueKind kind);
    [CompilerGeneratedAttribute]
internal static bool <IsFatal>g__IsAnyFatal|3_0(ReadOnlyCollection`1<Exception> exceptions);
    [CompilerGeneratedAttribute]
internal static int <CreateRandomString>g__GetInt32|21_0(RandomNumberGenerator algorithm, Range range);
}
