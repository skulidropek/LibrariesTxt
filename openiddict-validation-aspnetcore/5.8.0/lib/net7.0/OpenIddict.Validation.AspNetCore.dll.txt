[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.OpenIddictValidationAspNetCoreHelpers : object {
    [ExtensionAttribute]
public static HttpRequest GetHttpRequest(OpenIddictValidationTransaction transaction);
    [ExtensionAttribute]
public static OpenIddictValidationEndpointType GetOpenIddictValidationEndpointType(HttpContext context);
    [ExtensionAttribute]
public static OpenIddictRequest GetOpenIddictValidationRequest(HttpContext context);
    [ExtensionAttribute]
public static OpenIddictResponse GetOpenIddictValidationResponse(HttpContext context);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.DependencyInjection.OpenIddictValidationAspNetCoreBuilder : object {
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    [EditorBrowsableAttribute("1")]
public IServiceCollection Services { get; }
    public OpenIddictValidationAspNetCoreBuilder(IServiceCollection services);
    [CompilerGeneratedAttribute]
public IServiceCollection get_Services();
    public OpenIddictValidationAspNetCoreBuilder Configure(Action`1<OpenIddictValidationAspNetCoreOptions> configuration);
    public OpenIddictValidationAspNetCoreBuilder DisableAccessTokenExtractionFromAuthorizationHeader();
    public OpenIddictValidationAspNetCoreBuilder DisableAccessTokenExtractionFromBodyForm();
    public OpenIddictValidationAspNetCoreBuilder DisableAccessTokenExtractionFromQueryString();
    public OpenIddictValidationAspNetCoreBuilder SetRealm(string realm);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.OpenIddictValidationAspNetCoreExtensions : object {
    [ExtensionAttribute]
public static OpenIddictValidationAspNetCoreBuilder UseAspNetCore(OpenIddictValidationBuilder builder);
    [ExtensionAttribute]
public static OpenIddictValidationBuilder UseAspNetCore(OpenIddictValidationBuilder builder, Action`1<OpenIddictValidationAspNetCoreBuilder> configuration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class OpenIddict.Extensions.OpenIddictHelpers : object {
    [IteratorStateMachineAttribute("OpenIddict.Extensions.OpenIddictHelpers/<Buffer>d__0`1")]
[ExtensionAttribute]
public static IEnumerable`1<List`1<TSource>> Buffer(IEnumerable`1<TSource> source, int count);
    public static Type FindGenericBaseType(Type type, Type definition);
    [IteratorStateMachineAttribute("OpenIddict.Extensions.OpenIddictHelpers/<FindGenericBaseTypes>d__2")]
public static IEnumerable`1<Type> FindGenericBaseTypes(Type type, Type definition);
    public static bool IsFatal(Exception exception);
    [NullableContextAttribute("2")]
public static Uri CreateAbsoluteUri(Uri left, string right);
    [NullableContextAttribute("2")]
public static Uri CreateAbsoluteUri(Uri left, Uri right);
    public static bool IsBaseOf(Uri left, Uri right);
    public static bool IsImplicitFileUri(Uri uri);
    public static Uri AddQueryStringParameter(Uri uri, string name, string value);
    public static Uri AddQueryStringParameters(Uri uri, IReadOnlyDictionary`2<string, StringValues> parameters);
    public static IReadOnlyDictionary`2<string, StringValues> ParseQuery(string query);
    public static IReadOnlyDictionary`2<string, StringValues> ParseFragment(string fragment);
    [AsyncStateMachineAttribute("OpenIddict.Extensions.OpenIddictHelpers/<ParseFormAsync>d__12")]
public static ValueTask`1<IReadOnlyDictionary`2<string, StringValues>> ParseFormAsync(Stream stream, Encoding encoding, CancellationToken cancellationToken);
    public static ECDsa CreateEcdsaKey();
    public static ECDsa CreateEcdsaKey(ECCurve curve);
    public static RSA CreateRsaKey(int size);
    public static Byte[] ComputeSha256MessageAuthenticationCode(Byte[] key, Byte[] data);
    public static Byte[] ComputeSha256Hash(Byte[] data);
    public static Byte[] ComputeSha384Hash(Byte[] data);
    public static Byte[] ComputeSha512Hash(Byte[] data);
    public static Byte[] CreateRandomArray(int size);
    public static string CreateRandomString(ReadOnlySpan`1<string> charset, int count);
    [NullableContextAttribute("0")]
public static bool FixedTimeEquals(ReadOnlySpan`1<byte> left, ReadOnlySpan`1<byte> right);
    public static Byte[] ConvertFromHexadecimalString(string value);
    [NullableContextAttribute("2")]
public static string RemoveDisallowedCharacters(string value, IReadOnlyCollection`1<string> charset);
    public static Byte[] DeriveKey(string secret, Byte[] salt, HashAlgorithmName algorithm, int iterations, int length);
    public static bool IsEcCurve(ECParameters parameters, ECCurve curve);
    public static bool ValidateArrayElements(JsonElement element, JsonValueKind kind);
    [CompilerGeneratedAttribute]
internal static bool <IsFatal>g__IsAnyFatal|3_0(ReadOnlyCollection`1<Exception> exceptions);
    [CompilerGeneratedAttribute]
internal static int <CreateRandomString>g__GetInt32|21_0(RandomNumberGenerator algorithm, Range range);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EditorBrowsableAttribute("2")]
public class OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreConfiguration : object {
    public sealed virtual void Configure(AuthenticationOptions options);
    public sealed virtual void Configure(OpenIddictValidationOptions options);
    public sealed virtual void PostConfigure(string name, AuthenticationOptions options);
    [CompilerGeneratedAttribute]
internal static bool <PostConfigure>g__TryValidate|2_0(IDictionary`2<string, AuthenticationSchemeBuilder> map, string scheme);
}
public static class OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreConstants : object {
}
public static class OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreDefaults : object {
    [NullableAttribute("1")]
public static string AuthenticationScheme;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[EditorBrowsableAttribute("2")]
public class OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreFeature : object {
    [CompilerGeneratedAttribute]
private OpenIddictValidationTransaction <Transaction>k__BackingField;
    public OpenIddictValidationTransaction Transaction { get; public set; }
    [CompilerGeneratedAttribute]
public OpenIddictValidationTransaction get_Transaction();
    [CompilerGeneratedAttribute]
public void set_Transaction(OpenIddictValidationTransaction value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[EditorBrowsableAttribute("2")]
public class OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandler : AuthenticationHandler`1<OpenIddictValidationAspNetCoreOptions> {
    private IOpenIddictValidationDispatcher _dispatcher;
    private IOpenIddictValidationFactory _factory;
    public OpenIddictValidationAspNetCoreHandler(IOpenIddictValidationDispatcher dispatcher, IOpenIddictValidationFactory factory, IOptionsMonitor`1<OpenIddictValidationAspNetCoreOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock);
    [AsyncStateMachineAttribute("OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandler/<HandleRequestAsync>d__3")]
public sealed virtual Task`1<bool> HandleRequestAsync();
    [AsyncStateMachineAttribute("OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandler/<HandleAuthenticateAsync>d__4")]
protected virtual Task`1<AuthenticateResult> HandleAuthenticateAsync();
    [AsyncStateMachineAttribute("OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandler/<HandleChallengeAsync>d__5")]
protected virtual Task HandleChallengeAsync(AuthenticationProperties properties);
    protected virtual Task HandleForbiddenAsync(AuthenticationProperties properties);
}
[EditorBrowsableAttribute("2")]
public static class OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlerFilters : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EditorBrowsableAttribute("1")]
public static class OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandlers : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static ImmutableArray`1<OpenIddictValidationHandlerDescriptor> <DefaultHandlers>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ImmutableArray`1<OpenIddictValidationHandlerDescriptor> DefaultHandlers { get; }
    private static OpenIddictValidationAspNetCoreHandlers();
    [CompilerGeneratedAttribute]
public static ImmutableArray`1<OpenIddictValidationHandlerDescriptor> get_DefaultHandlers();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreOptions : AuthenticationSchemeOptions {
    [CompilerGeneratedAttribute]
private bool <DisableAccessTokenExtractionFromAuthorizationHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableAccessTokenExtractionFromBodyForm>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableAccessTokenExtractionFromQueryString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Realm>k__BackingField;
    public bool DisableAccessTokenExtractionFromAuthorizationHeader { get; public set; }
    public bool DisableAccessTokenExtractionFromBodyForm { get; public set; }
    public bool DisableAccessTokenExtractionFromQueryString { get; public set; }
    public string Realm { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_DisableAccessTokenExtractionFromAuthorizationHeader();
    [CompilerGeneratedAttribute]
public void set_DisableAccessTokenExtractionFromAuthorizationHeader(bool value);
    [CompilerGeneratedAttribute]
public bool get_DisableAccessTokenExtractionFromBodyForm();
    [CompilerGeneratedAttribute]
public void set_DisableAccessTokenExtractionFromBodyForm(bool value);
    [CompilerGeneratedAttribute]
public bool get_DisableAccessTokenExtractionFromQueryString();
    [CompilerGeneratedAttribute]
public void set_DisableAccessTokenExtractionFromQueryString(bool value);
    [CompilerGeneratedAttribute]
public string get_Realm();
    [CompilerGeneratedAttribute]
public void set_Realm(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
