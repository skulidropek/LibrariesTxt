[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public abstract class OpenSearch.Client.AcknowledgedResponseBase : ResponseBase {
    [CompilerGeneratedAttribute]
private bool <Acknowledged>k__BackingField;
    [DataMemberAttribute]
public bool Acknowledged { get; internal set; }
    public bool IsValid { get; }
    [CompilerGeneratedAttribute]
public bool get_Acknowledged();
    [CompilerGeneratedAttribute]
internal void set_Acknowledged(bool value);
    public virtual bool get_IsValid();
}
[DataContractAttribute]
public class OpenSearch.Client.AdaptiveSelectionStats : object {
    [CompilerGeneratedAttribute]
private long <AverageQueueSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <AverageResponseTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <AverageResponseTimeInNanoseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AverageServiceTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <AverageServiceTimeInNanoseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <OutgoingSearches>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Rank>k__BackingField;
    [DataMemberAttribute]
public long AverageQueueSize { get; internal set; }
    [DataMemberAttribute]
public long AverageResponseTime { get; internal set; }
    [DataMemberAttribute]
public long AverageResponseTimeInNanoseconds { get; internal set; }
    [DataMemberAttribute]
public string AverageServiceTime { get; internal set; }
    [DataMemberAttribute]
public long AverageServiceTimeInNanoseconds { get; internal set; }
    [DataMemberAttribute]
public long OutgoingSearches { get; internal set; }
    [DataMemberAttribute]
public string Rank { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_AverageQueueSize();
    [CompilerGeneratedAttribute]
internal void set_AverageQueueSize(long value);
    [CompilerGeneratedAttribute]
public long get_AverageResponseTime();
    [CompilerGeneratedAttribute]
internal void set_AverageResponseTime(long value);
    [CompilerGeneratedAttribute]
public long get_AverageResponseTimeInNanoseconds();
    [CompilerGeneratedAttribute]
internal void set_AverageResponseTimeInNanoseconds(long value);
    [CompilerGeneratedAttribute]
public string get_AverageServiceTime();
    [CompilerGeneratedAttribute]
internal void set_AverageServiceTime(string value);
    [CompilerGeneratedAttribute]
public long get_AverageServiceTimeInNanoseconds();
    [CompilerGeneratedAttribute]
internal void set_AverageServiceTimeInNanoseconds(long value);
    [CompilerGeneratedAttribute]
public long get_OutgoingSearches();
    [CompilerGeneratedAttribute]
internal void set_OutgoingSearches(long value);
    [CompilerGeneratedAttribute]
public string get_Rank();
    [CompilerGeneratedAttribute]
internal void set_Rank(string value);
}
public class OpenSearch.Client.AddIndexBlockDescriptor : RequestDescriptorBase`3<AddIndexBlockDescriptor, AddIndexBlockRequestParameters, IAddIndexBlockRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IAddIndexBlockRequest.Index { get; }
    private IndexBlock OpenSearch.Client.IAddIndexBlockRequest.Block { get; }
    public AddIndexBlockDescriptor(Indices index, IndexBlock block);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IAddIndexBlockRequest.get_Index();
    private sealed virtual override IndexBlock OpenSearch.Client.IAddIndexBlockRequest.get_Block();
    public AddIndexBlockDescriptor Index(Indices index);
    public AddIndexBlockDescriptor Index();
    public AddIndexBlockDescriptor AllIndices();
    public AddIndexBlockDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public AddIndexBlockDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public AddIndexBlockDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public AddIndexBlockDescriptor MasterTimeout(Time mastertimeout);
    public AddIndexBlockDescriptor ClusterManagerTimeout(Time timeout);
    public AddIndexBlockDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.AddIndexBlockRequest : PlainRequestBase`1<AddIndexBlockRequestParameters> {
    protected IAddIndexBlockRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IAddIndexBlockRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private IndexBlock OpenSearch.Client.IAddIndexBlockRequest.Block { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public AddIndexBlockRequest(Indices index, IndexBlock block);
    protected IAddIndexBlockRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IAddIndexBlockRequest.get_Index();
    private sealed virtual override IndexBlock OpenSearch.Client.IAddIndexBlockRequest.get_Block();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.AddIndexBlockResponse : AcknowledgedResponseBase {
    [CompilerGeneratedAttribute]
private bool <ShardsAcknowledged>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<BlockedIndex> <Indices>k__BackingField;
    [DataMemberAttribute]
public bool ShardsAcknowledged { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<BlockedIndex> Indices { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_ShardsAcknowledged();
    [CompilerGeneratedAttribute]
internal void set_ShardsAcknowledged(bool value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<BlockedIndex> get_Indices();
    [CompilerGeneratedAttribute]
internal void set_Indices(IReadOnlyCollection`1<BlockedIndex> value);
}
public class OpenSearch.Client.AdjacencyMatrixAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private INamedFiltersContainer <Filters>k__BackingField;
    public INamedFiltersContainer Filters { get; public set; }
    public AdjacencyMatrixAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual INamedFiltersContainer get_Filters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filters(INamedFiltersContainer value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.AdjacencyMatrixAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<AdjacencyMatrixAggregationDescriptor`1<T>, IAdjacencyMatrixAggregation, T> {
    [CompilerGeneratedAttribute]
private INamedFiltersContainer <OpenSearch.Client.IAdjacencyMatrixAggregation.Filters>k__BackingField;
    private INamedFiltersContainer OpenSearch.Client.IAdjacencyMatrixAggregation.Filters { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override INamedFiltersContainer OpenSearch.Client.IAdjacencyMatrixAggregation.get_Filters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAdjacencyMatrixAggregation.set_Filters(INamedFiltersContainer value);
    public AdjacencyMatrixAggregationDescriptor`1<T> Filters(Func`2<NamedFiltersContainerDescriptor`1<T>, IPromise`1<INamedFiltersContainer>> selector);
}
public class OpenSearch.Client.AggregatedDanglingIndexInfo : object {
    private Nullable`1<DateTimeOffset> _creationDate;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexUUID>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CreationDateInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <NodeIds>k__BackingField;
    [DataMemberAttribute]
public string IndexName { get; internal set; }
    [DataMemberAttribute]
public string IndexUUID { get; internal set; }
    [DataMemberAttribute]
public long CreationDateInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public DateTimeOffset CreationDate { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> NodeIds { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
internal void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public string get_IndexUUID();
    [CompilerGeneratedAttribute]
internal void set_IndexUUID(string value);
    [CompilerGeneratedAttribute]
public long get_CreationDateInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_CreationDateInMilliseconds(long value);
    public DateTimeOffset get_CreationDate();
    internal void set_CreationDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_NodeIds();
    [CompilerGeneratedAttribute]
internal void set_NodeIds(IReadOnlyCollection`1<string> value);
}
[JsonFormatterAttribute("OpenSearch.Client.AggregateDictionaryFormatter")]
public class OpenSearch.Client.AggregateDictionary : IsAReadOnlyDictionaryBase`2<string, IAggregate> {
    internal static Char[] TypedKeysSeparator;
    [CompilerGeneratedAttribute]
private static AggregateDictionary <Default>k__BackingField;
    public static AggregateDictionary Default { get; }
    [SerializationConstructorAttribute]
public AggregateDictionary(IReadOnlyDictionary`2<string, IAggregate> backingDictionary);
    private static AggregateDictionary();
    [CompilerGeneratedAttribute]
public static AggregateDictionary get_Default();
    protected virtual string Sanitize(string key);
    internal static String[] TypedKeyTokens(string key);
    public ValueAggregate Min(string key);
    public ValueAggregate Max(string key);
    public ValueAggregate Sum(string key);
    public ValueAggregate Cardinality(string key);
    public ValueAggregate Average(string key);
    public ValueAggregate ValueCount(string key);
    public ValueAggregate AverageBucket(string key);
    public ValueAggregate Derivative(string key);
    public ValueAggregate SumBucket(string key);
    public ValueAggregate MovingAverage(string key);
    public ValueAggregate CumulativeSum(string key);
    public ValueAggregate BucketScript(string key);
    public ValueAggregate SerialDifferencing(string key);
    public ValueAggregate WeightedAverage(string key);
    public KeyedValueAggregate MaxBucket(string key);
    public KeyedValueAggregate MinBucket(string key);
    public ScriptedMetricAggregate ScriptedMetric(string key);
    public StatsAggregate Stats(string key);
    public StatsAggregate StatsBucket(string key);
    public ExtendedStatsAggregate ExtendedStats(string key);
    public ExtendedStatsAggregate ExtendedStatsBucket(string key);
    public GeoBoundsAggregate GeoBounds(string key);
    public GeoLineAggregate GeoLine(string key);
    public PercentilesAggregate Percentiles(string key);
    public PercentilesAggregate PercentilesBucket(string key);
    public PercentilesAggregate PercentileRanks(string key);
    public TopHitsAggregate TopHits(string key);
    public FiltersAggregate Filters(string key);
    public SingleBucketAggregate Global(string key);
    public SingleBucketAggregate Filter(string key);
    public SingleBucketAggregate Missing(string key);
    public SingleBucketAggregate Nested(string key);
    public ValueAggregate Normalize(string key);
    public SingleBucketAggregate ReverseNested(string key);
    public SingleBucketAggregate Children(string key);
    public SingleBucketAggregate Parent(string key);
    public SingleBucketAggregate Sampler(string key);
    public SingleBucketAggregate DiversifiedSampler(string key);
    public GeoCentroidAggregate GeoCentroid(string key);
    public SignificantTermsAggregate`1<TKey> SignificantTerms(string key);
    public SignificantTermsAggregate`1<string> SignificantTerms(string key);
    public SignificantTermsAggregate`1<TKey> SignificantText(string key);
    public SignificantTermsAggregate`1<string> SignificantText(string key);
    public TermsAggregate`1<TKey> Terms(string key);
    public TermsAggregate`1<string> Terms(string key);
    public MultiBucketAggregate`1<KeyedBucket`1<double>> Histogram(string key);
    public MultiBucketAggregate`1<KeyedBucket`1<string>> GeoHash(string key);
    public MultiBucketAggregate`1<KeyedBucket`1<string>> GeoTile(string key);
    public MultiBucketAggregate`1<KeyedBucket`1<string>> AdjacencyMatrix(string key);
    public MultiBucketAggregate`1<RareTermsBucket`1<TKey>> RareTerms(string key);
    public MultiBucketAggregate`1<RareTermsBucket`1<string>> RareTerms(string key);
    public MultiBucketAggregate`1<RangeBucket> Range(string key);
    public MultiBucketAggregate`1<RangeBucket> DateRange(string key);
    public MultiBucketAggregate`1<IpRangeBucket> IpRange(string key);
    public MultiBucketAggregate`1<RangeBucket> GeoDistance(string key);
    public MultiBucketAggregate`1<DateHistogramBucket> DateHistogram(string key);
    public MultiBucketAggregate`1<VariableWidthHistogramBucket> VariableWidthHistogram(string key);
    public MultiTermsAggregate`1<string> MultiTerms(string key);
    public MultiTermsAggregate`1<TKey> MultiTerms(string key);
    public AutoDateHistogramAggregate AutoDateHistogram(string key);
    public CompositeBucketAggregate Composite(string key);
    public MatrixStatsAggregate MatrixStats(string key);
    public ValueAggregate MedianAbsoluteDeviation(string key);
    private TAggregate TryGet(string key);
    private MultiBucketAggregate`1<TBucket> GetMultiBucketAggregate(string key);
    private MultiBucketAggregate`1<KeyedBucket`1<TKey>> GetMultiKeyedBucketAggregate(string key);
    [IteratorStateMachineAttribute("OpenSearch.Client.AggregateDictionary/<GetKeyedBuckets>d__73`1")]
private IEnumerable`1<KeyedBucket`1<TKey>> GetKeyedBuckets(IEnumerable`1<IBucket> items);
    [IteratorStateMachineAttribute("OpenSearch.Client.AggregateDictionary/<GetSignificantTermsBuckets>d__74`1")]
private IEnumerable`1<SignificantTermsBucket`1<TKey>> GetSignificantTermsBuckets(IEnumerable`1<IBucket> items);
    [IteratorStateMachineAttribute("OpenSearch.Client.AggregateDictionary/<GetRareTermsBuckets>d__75`1")]
private IEnumerable`1<RareTermsBucket`1<TKey>> GetRareTermsBuckets(IEnumerable`1<IBucket> items);
    [IteratorStateMachineAttribute("OpenSearch.Client.AggregateDictionary/<GetMultiTermsBuckets>d__76`1")]
private static IEnumerable`1<MultiTermsBucket`1<TKey>> GetMultiTermsBuckets(IEnumerable`1<IBucket> items);
    private static TKey GetKeyFromBucketKey(object key);
}
internal class OpenSearch.Client.AggregateDictionaryFormatter : object {
    private static AggregateFormatter Formatter;
    private static AggregateDictionaryFormatter();
    public sealed virtual AggregateDictionary Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, AggregateDictionary value, IJsonFormatterResolver formatterResolver);
    private static void ReadAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, String[] tokens, Dictionary`2<string, IAggregate> dictionary);
    private static void ReadAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, string name, Dictionary`2<string, IAggregate> dictionary);
    private static void ParseAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, string name, Dictionary`2<string, IAggregate> dictionary);
}
internal class OpenSearch.Client.AggregateFormatter : object {
    private static Byte[] BgCountField;
    private static AutomataDictionary BucketFields;
    private static Byte[] BucketsField;
    private static Byte[] DocCountErrorUpperBound;
    private static Byte[] FieldsField;
    private static AutomataDictionary GeoBoundsFields;
    private static AutomataDictionary GeoLineFields;
    private static Byte[] KeysField;
    private static Byte[] MetaField;
    private static Byte[] MinLengthField;
    private static AutomataDictionary RootFields;
    private static Byte[] SumOtherDocCount;
    private static AutomataDictionary TopHitsFields;
    private static AutomataDictionary ExtendedStatsFields;
    private static Byte[] ValueAsStringField;
    [CompilerGeneratedAttribute]
private static String[] <AllReservedAggregationNames>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <UsingReservedAggNameFormat>k__BackingField;
    public static String[] AllReservedAggregationNames { get; }
    public static string UsingReservedAggNameFormat { get; }
    private static AggregateFormatter();
    [CompilerGeneratedAttribute]
public static String[] get_AllReservedAggregationNames();
    [CompilerGeneratedAttribute]
public static string get_UsingReservedAggNameFormat();
    public sealed virtual IAggregate Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IAggregate value, IJsonFormatterResolver formatterResolver);
    private IAggregate ReadAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private IBucket ReadBucket(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private Dictionary`2<string, object> GetMetadata(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private IAggregate GetMatrixStatsAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, IReadOnlyDictionary`2<string, object> meta, Nullable`1<long> docCount);
    private IAggregate GetTopHitsAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, IReadOnlyDictionary`2<string, object> meta);
    private IAggregate GetGeoCentroidAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, IReadOnlyDictionary`2<string, object> meta);
    private IAggregate GetGeoBoundsAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, IReadOnlyDictionary`2<string, object> meta);
    private IAggregate GetGeoLineAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, IReadOnlyDictionary`2<string, object> meta);
    private IAggregate GetPercentilesAggregate(JsonReader& reader, IReadOnlyDictionary`2<string, object> meta);
    private IAggregate GetSingleBucketAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, IReadOnlyDictionary`2<string, object> meta);
    private IAggregate GetStatsAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, IReadOnlyDictionary`2<string, object> meta);
    private IAggregate GetExtendedStatsAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, StatsAggregate statsMetric, IReadOnlyDictionary`2<string, object> meta);
    private Dictionary`2<string, IAggregate> GetSubAggregates(JsonReader& reader, string name, IJsonFormatterResolver formatterResolver);
    private IAggregate GetMultiBucketAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, ArraySegment`1& propertyName, IReadOnlyDictionary`2<string, object> meta);
    private IAggregate GetValueAggregate(JsonReader& reader, IJsonFormatterResolver formatterResolver, IReadOnlyDictionary`2<string, object> meta);
    public IBucket GetRangeBucket(JsonReader& reader, IJsonFormatterResolver formatterResolver, string key, string propertyName);
    private IBucket GetDateHistogramBucket(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private IBucket GetVariableWidthHistogramBucket(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private IBucket GetKeyedBucket(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private IBucket GetCompositeBucket(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private IBucket GetSignificantTermsBucket(JsonReader& reader, IJsonFormatterResolver formatterResolver, object key, Nullable`1<long> docCount);
    private IBucket GetFiltersBucket(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public abstract class OpenSearch.Client.AggregationBase : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAggregation.Name>k__BackingField;
    public IDictionary`2<string, object> Meta { get; public set; }
    private string OpenSearch.Client.IAggregation.Name { get; private set; }
    protected AggregationBase(string name);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAggregation.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Name(string value);
    internal abstract virtual void WrapInContainer(AggregationContainer container);
    public static bool op_False(AggregationBase a);
    public static bool op_True(AggregationBase a);
    public static AggregationBase op_BitwiseAnd(AggregationBase left, AggregationBase right);
}
public class OpenSearch.Client.AggregationBreakdown : object {
    [CompilerGeneratedAttribute]
private long <BuildAggregation>k__BackingField;
    [CompilerGeneratedAttribute]
private long <BuildAggregationCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Collect>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CollectCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Initialize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <InitializeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Reduce>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ReduceCount>k__BackingField;
    [DataMemberAttribute]
public long BuildAggregation { get; internal set; }
    [DataMemberAttribute]
public long BuildAggregationCount { get; internal set; }
    [DataMemberAttribute]
public long Collect { get; internal set; }
    [DataMemberAttribute]
public long CollectCount { get; internal set; }
    [DataMemberAttribute]
public long Initialize { get; internal set; }
    [DataMemberAttribute]
public long InitializeCount { get; internal set; }
    [DataMemberAttribute]
public long Reduce { get; internal set; }
    [DataMemberAttribute]
public long ReduceCount { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_BuildAggregation();
    [CompilerGeneratedAttribute]
internal void set_BuildAggregation(long value);
    [CompilerGeneratedAttribute]
public long get_BuildAggregationCount();
    [CompilerGeneratedAttribute]
internal void set_BuildAggregationCount(long value);
    [CompilerGeneratedAttribute]
public long get_Collect();
    [CompilerGeneratedAttribute]
internal void set_Collect(long value);
    [CompilerGeneratedAttribute]
public long get_CollectCount();
    [CompilerGeneratedAttribute]
internal void set_CollectCount(long value);
    [CompilerGeneratedAttribute]
public long get_Initialize();
    [CompilerGeneratedAttribute]
internal void set_Initialize(long value);
    [CompilerGeneratedAttribute]
public long get_InitializeCount();
    [CompilerGeneratedAttribute]
internal void set_InitializeCount(long value);
    [CompilerGeneratedAttribute]
public long get_Reduce();
    [CompilerGeneratedAttribute]
internal void set_Reduce(long value);
    [CompilerGeneratedAttribute]
public long get_ReduceCount();
    [CompilerGeneratedAttribute]
internal void set_ReduceCount(long value);
}
internal class OpenSearch.Client.AggregationCombinator : AggregationBase {
    [CompilerGeneratedAttribute]
private List`1<AggregationBase> <Aggregations>k__BackingField;
    internal List`1<AggregationBase> Aggregations { get; }
    public AggregationCombinator(string name, AggregationBase left, AggregationBase right);
    [CompilerGeneratedAttribute]
internal List`1<AggregationBase> get_Aggregations();
    internal virtual void WrapInContainer(AggregationContainer container);
    private void AddAggregation(AggregationBase agg);
}
public class OpenSearch.Client.AggregationContainer : object {
    [CompilerGeneratedAttribute]
private IAdjacencyMatrixAggregation <AdjacencyMatrix>k__BackingField;
    [DataMemberAttribute]
private AggregationDictionary _aggs;
    [CompilerGeneratedAttribute]
private IAverageAggregation <Average>k__BackingField;
    [CompilerGeneratedAttribute]
private IAverageBucketAggregation <AverageBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private IBucketScriptAggregation <BucketScript>k__BackingField;
    [CompilerGeneratedAttribute]
private IBucketSelectorAggregation <BucketSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IBucketSortAggregation <BucketSort>k__BackingField;
    [CompilerGeneratedAttribute]
private ICardinalityAggregation <Cardinality>k__BackingField;
    [CompilerGeneratedAttribute]
private IChildrenAggregation <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private ICompositeAggregation <Composite>k__BackingField;
    [CompilerGeneratedAttribute]
private ICumulativeSumAggregation <CumulativeSum>k__BackingField;
    [CompilerGeneratedAttribute]
private IDateHistogramAggregation <DateHistogram>k__BackingField;
    [CompilerGeneratedAttribute]
private IAutoDateHistogramAggregation <AutoDateHistogram>k__BackingField;
    [CompilerGeneratedAttribute]
private IDateRangeAggregation <DateRange>k__BackingField;
    [CompilerGeneratedAttribute]
private IDerivativeAggregation <Derivative>k__BackingField;
    [CompilerGeneratedAttribute]
private IDiversifiedSamplerAggregation <DiversifiedSampler>k__BackingField;
    [CompilerGeneratedAttribute]
private IExtendedStatsAggregation <ExtendedStats>k__BackingField;
    [CompilerGeneratedAttribute]
private IExtendedStatsBucketAggregation <ExtendedStatsBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private IFilterAggregation <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private IFiltersAggregation <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoBoundsAggregation <GeoBounds>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoCentroidAggregation <GeoCentroid>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoDistanceAggregation <GeoDistance>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoHashGridAggregation <GeoHash>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoLineAggregation <GeoLine>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoTileGridAggregation <GeoTile>k__BackingField;
    [CompilerGeneratedAttribute]
private IGlobalAggregation <Global>k__BackingField;
    [CompilerGeneratedAttribute]
private IHistogramAggregation <Histogram>k__BackingField;
    [CompilerGeneratedAttribute]
private IIpRangeAggregation <IpRange>k__BackingField;
    [CompilerGeneratedAttribute]
private IMatrixStatsAggregation <MatrixStats>k__BackingField;
    [CompilerGeneratedAttribute]
private IMaxAggregation <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private IMaxBucketAggregation <MaxBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private IMinAggregation <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private IMinBucketAggregation <MinBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private IMissingAggregation <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private IMovingAverageAggregation <MovingAverage>k__BackingField;
    [CompilerGeneratedAttribute]
private IMovingFunctionAggregation <MovingFunction>k__BackingField;
    [CompilerGeneratedAttribute]
private INestedAggregation <Nested>k__BackingField;
    [CompilerGeneratedAttribute]
private IParentAggregation <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private IPercentileRanksAggregation <PercentileRanks>k__BackingField;
    [CompilerGeneratedAttribute]
private IPercentilesAggregation <Percentiles>k__BackingField;
    [CompilerGeneratedAttribute]
private IPercentilesBucketAggregation <PercentilesBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private IRangeAggregation <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private IRareTermsAggregation <RareTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private IReverseNestedAggregation <ReverseNested>k__BackingField;
    [CompilerGeneratedAttribute]
private ISamplerAggregation <Sampler>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptedMetricAggregation <ScriptedMetric>k__BackingField;
    [CompilerGeneratedAttribute]
private ISerialDifferencingAggregation <SerialDifferencing>k__BackingField;
    [CompilerGeneratedAttribute]
private ISignificantTermsAggregation <SignificantTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private ISignificantTextAggregation <SignificantText>k__BackingField;
    [CompilerGeneratedAttribute]
private IStatsAggregation <Stats>k__BackingField;
    [CompilerGeneratedAttribute]
private IStatsBucketAggregation <StatsBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private ISumAggregation <Sum>k__BackingField;
    [CompilerGeneratedAttribute]
private ISumBucketAggregation <SumBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private ITermsAggregation <Terms>k__BackingField;
    [CompilerGeneratedAttribute]
private ITopHitsAggregation <TopHits>k__BackingField;
    [CompilerGeneratedAttribute]
private IValueCountAggregation <ValueCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IWeightedAverageAggregation <WeightedAverage>k__BackingField;
    [CompilerGeneratedAttribute]
private IMedianAbsoluteDeviationAggregation <MedianAbsoluteDeviation>k__BackingField;
    [CompilerGeneratedAttribute]
private IMultiTermsAggregation <MultiTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private IVariableWidthHistogramAggregation <VariableWidthHistogram>k__BackingField;
    public IAdjacencyMatrixAggregation AdjacencyMatrix { get; public set; }
    public AggregationDictionary Aggregations { get; public set; }
    public IAverageAggregation Average { get; public set; }
    public IAverageBucketAggregation AverageBucket { get; public set; }
    public IBucketScriptAggregation BucketScript { get; public set; }
    public IBucketSelectorAggregation BucketSelector { get; public set; }
    public IBucketSortAggregation BucketSort { get; public set; }
    public ICardinalityAggregation Cardinality { get; public set; }
    public IChildrenAggregation Children { get; public set; }
    public ICompositeAggregation Composite { get; public set; }
    public ICumulativeSumAggregation CumulativeSum { get; public set; }
    public IDateHistogramAggregation DateHistogram { get; public set; }
    public IAutoDateHistogramAggregation AutoDateHistogram { get; public set; }
    public IDateRangeAggregation DateRange { get; public set; }
    public IDerivativeAggregation Derivative { get; public set; }
    public IDiversifiedSamplerAggregation DiversifiedSampler { get; public set; }
    public IExtendedStatsAggregation ExtendedStats { get; public set; }
    public IExtendedStatsBucketAggregation ExtendedStatsBucket { get; public set; }
    public IFilterAggregation Filter { get; public set; }
    public IFiltersAggregation Filters { get; public set; }
    public IGeoBoundsAggregation GeoBounds { get; public set; }
    public IGeoCentroidAggregation GeoCentroid { get; public set; }
    public IGeoDistanceAggregation GeoDistance { get; public set; }
    public IGeoHashGridAggregation GeoHash { get; public set; }
    public IGeoLineAggregation GeoLine { get; public set; }
    public IGeoTileGridAggregation GeoTile { get; public set; }
    public IGlobalAggregation Global { get; public set; }
    public IHistogramAggregation Histogram { get; public set; }
    public IIpRangeAggregation IpRange { get; public set; }
    public IMatrixStatsAggregation MatrixStats { get; public set; }
    public IMaxAggregation Max { get; public set; }
    public IMaxBucketAggregation MaxBucket { get; public set; }
    public IDictionary`2<string, object> Meta { get; public set; }
    public IMinAggregation Min { get; public set; }
    public IMinBucketAggregation MinBucket { get; public set; }
    public IMissingAggregation Missing { get; public set; }
    public IMovingAverageAggregation MovingAverage { get; public set; }
    public IMovingFunctionAggregation MovingFunction { get; public set; }
    public INestedAggregation Nested { get; public set; }
    public IParentAggregation Parent { get; public set; }
    public IPercentileRanksAggregation PercentileRanks { get; public set; }
    public IPercentilesAggregation Percentiles { get; public set; }
    public IPercentilesBucketAggregation PercentilesBucket { get; public set; }
    public IRangeAggregation Range { get; public set; }
    public IRareTermsAggregation RareTerms { get; public set; }
    public IReverseNestedAggregation ReverseNested { get; public set; }
    public ISamplerAggregation Sampler { get; public set; }
    public IScriptedMetricAggregation ScriptedMetric { get; public set; }
    public ISerialDifferencingAggregation SerialDifferencing { get; public set; }
    public ISignificantTermsAggregation SignificantTerms { get; public set; }
    public ISignificantTextAggregation SignificantText { get; public set; }
    public IStatsAggregation Stats { get; public set; }
    public IStatsBucketAggregation StatsBucket { get; public set; }
    public ISumAggregation Sum { get; public set; }
    public ISumBucketAggregation SumBucket { get; public set; }
    public ITermsAggregation Terms { get; public set; }
    public ITopHitsAggregation TopHits { get; public set; }
    public IValueCountAggregation ValueCount { get; public set; }
    public IWeightedAverageAggregation WeightedAverage { get; public set; }
    public IMedianAbsoluteDeviationAggregation MedianAbsoluteDeviation { get; public set; }
    public IMultiTermsAggregation MultiTerms { get; public set; }
    public IVariableWidthHistogramAggregation VariableWidthHistogram { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IAdjacencyMatrixAggregation get_AdjacencyMatrix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdjacencyMatrix(IAdjacencyMatrixAggregation value);
    public sealed virtual AggregationDictionary get_Aggregations();
    public sealed virtual void set_Aggregations(AggregationDictionary value);
    [CompilerGeneratedAttribute]
public sealed virtual IAverageAggregation get_Average();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Average(IAverageAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IAverageBucketAggregation get_AverageBucket();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AverageBucket(IAverageBucketAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IBucketScriptAggregation get_BucketScript();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BucketScript(IBucketScriptAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IBucketSelectorAggregation get_BucketSelector();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BucketSelector(IBucketSelectorAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IBucketSortAggregation get_BucketSort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BucketSort(IBucketSortAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual ICardinalityAggregation get_Cardinality();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Cardinality(ICardinalityAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IChildrenAggregation get_Children();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Children(IChildrenAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual ICompositeAggregation get_Composite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Composite(ICompositeAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual ICumulativeSumAggregation get_CumulativeSum();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CumulativeSum(ICumulativeSumAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IDateHistogramAggregation get_DateHistogram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateHistogram(IDateHistogramAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IAutoDateHistogramAggregation get_AutoDateHistogram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AutoDateHistogram(IAutoDateHistogramAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IDateRangeAggregation get_DateRange();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateRange(IDateRangeAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IDerivativeAggregation get_Derivative();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Derivative(IDerivativeAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IDiversifiedSamplerAggregation get_DiversifiedSampler();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DiversifiedSampler(IDiversifiedSamplerAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IExtendedStatsAggregation get_ExtendedStats();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExtendedStats(IExtendedStatsAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IExtendedStatsBucketAggregation get_ExtendedStatsBucket();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExtendedStatsBucket(IExtendedStatsBucketAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IFilterAggregation get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(IFilterAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IFiltersAggregation get_Filters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filters(IFiltersAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IGeoBoundsAggregation get_GeoBounds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GeoBounds(IGeoBoundsAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IGeoCentroidAggregation get_GeoCentroid();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GeoCentroid(IGeoCentroidAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IGeoDistanceAggregation get_GeoDistance();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GeoDistance(IGeoDistanceAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IGeoHashGridAggregation get_GeoHash();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GeoHash(IGeoHashGridAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IGeoLineAggregation get_GeoLine();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GeoLine(IGeoLineAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IGeoTileGridAggregation get_GeoTile();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GeoTile(IGeoTileGridAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IGlobalAggregation get_Global();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Global(IGlobalAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IHistogramAggregation get_Histogram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Histogram(IHistogramAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IIpRangeAggregation get_IpRange();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IpRange(IIpRangeAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IMatrixStatsAggregation get_MatrixStats();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MatrixStats(IMatrixStatsAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IMaxAggregation get_Max();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Max(IMaxAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IMaxBucketAggregation get_MaxBucket();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxBucket(IMaxBucketAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual IMinAggregation get_Min();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Min(IMinAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IMinBucketAggregation get_MinBucket();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinBucket(IMinBucketAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IMissingAggregation get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(IMissingAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IMovingAverageAggregation get_MovingAverage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MovingAverage(IMovingAverageAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IMovingFunctionAggregation get_MovingFunction();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MovingFunction(IMovingFunctionAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual INestedAggregation get_Nested();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Nested(INestedAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IParentAggregation get_Parent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Parent(IParentAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IPercentileRanksAggregation get_PercentileRanks();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PercentileRanks(IPercentileRanksAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IPercentilesAggregation get_Percentiles();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Percentiles(IPercentilesAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IPercentilesBucketAggregation get_PercentilesBucket();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PercentilesBucket(IPercentilesBucketAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IRangeAggregation get_Range();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Range(IRangeAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IRareTermsAggregation get_RareTerms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RareTerms(IRareTermsAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IReverseNestedAggregation get_ReverseNested();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ReverseNested(IReverseNestedAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual ISamplerAggregation get_Sampler();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sampler(ISamplerAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IScriptedMetricAggregation get_ScriptedMetric();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScriptedMetric(IScriptedMetricAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual ISerialDifferencingAggregation get_SerialDifferencing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SerialDifferencing(ISerialDifferencingAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual ISignificantTermsAggregation get_SignificantTerms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SignificantTerms(ISignificantTermsAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual ISignificantTextAggregation get_SignificantText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SignificantText(ISignificantTextAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IStatsAggregation get_Stats();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Stats(IStatsAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IStatsBucketAggregation get_StatsBucket();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StatsBucket(IStatsBucketAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual ISumAggregation get_Sum();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sum(ISumAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual ISumBucketAggregation get_SumBucket();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SumBucket(ISumBucketAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual ITermsAggregation get_Terms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Terms(ITermsAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual ITopHitsAggregation get_TopHits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TopHits(ITopHitsAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IValueCountAggregation get_ValueCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ValueCount(IValueCountAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IWeightedAverageAggregation get_WeightedAverage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WeightedAverage(IWeightedAverageAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IMedianAbsoluteDeviationAggregation get_MedianAbsoluteDeviation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MedianAbsoluteDeviation(IMedianAbsoluteDeviationAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IMultiTermsAggregation get_MultiTerms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MultiTerms(IMultiTermsAggregation value);
    [CompilerGeneratedAttribute]
public sealed virtual IVariableWidthHistogramAggregation get_VariableWidthHistogram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_VariableWidthHistogram(IVariableWidthHistogramAggregation value);
    public sealed virtual void Accept(IAggregationVisitor visitor);
    public static AggregationContainer op_Implicit(AggregationBase aggregator);
}
public class OpenSearch.Client.AggregationContainerDescriptor`1 : DescriptorBase`2<AggregationContainerDescriptor`1<T>, IAggregationContainer> {
    [CompilerGeneratedAttribute]
private IAdjacencyMatrixAggregation <OpenSearch.Client.IAggregationContainer.AdjacencyMatrix>k__BackingField;
    [CompilerGeneratedAttribute]
private AggregationDictionary <OpenSearch.Client.IAggregationContainer.Aggregations>k__BackingField;
    [CompilerGeneratedAttribute]
private IAverageAggregation <OpenSearch.Client.IAggregationContainer.Average>k__BackingField;
    [CompilerGeneratedAttribute]
private IAverageBucketAggregation <OpenSearch.Client.IAggregationContainer.AverageBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private IBucketScriptAggregation <OpenSearch.Client.IAggregationContainer.BucketScript>k__BackingField;
    [CompilerGeneratedAttribute]
private IBucketSelectorAggregation <OpenSearch.Client.IAggregationContainer.BucketSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IBucketSortAggregation <OpenSearch.Client.IAggregationContainer.BucketSort>k__BackingField;
    [CompilerGeneratedAttribute]
private ICardinalityAggregation <OpenSearch.Client.IAggregationContainer.Cardinality>k__BackingField;
    [CompilerGeneratedAttribute]
private IChildrenAggregation <OpenSearch.Client.IAggregationContainer.Children>k__BackingField;
    [CompilerGeneratedAttribute]
private ICompositeAggregation <OpenSearch.Client.IAggregationContainer.Composite>k__BackingField;
    [CompilerGeneratedAttribute]
private ICumulativeSumAggregation <OpenSearch.Client.IAggregationContainer.CumulativeSum>k__BackingField;
    [CompilerGeneratedAttribute]
private IDateHistogramAggregation <OpenSearch.Client.IAggregationContainer.DateHistogram>k__BackingField;
    [CompilerGeneratedAttribute]
private IAutoDateHistogramAggregation <OpenSearch.Client.IAggregationContainer.AutoDateHistogram>k__BackingField;
    [CompilerGeneratedAttribute]
private IDateRangeAggregation <OpenSearch.Client.IAggregationContainer.DateRange>k__BackingField;
    [CompilerGeneratedAttribute]
private IDerivativeAggregation <OpenSearch.Client.IAggregationContainer.Derivative>k__BackingField;
    [CompilerGeneratedAttribute]
private IDiversifiedSamplerAggregation <OpenSearch.Client.IAggregationContainer.DiversifiedSampler>k__BackingField;
    [CompilerGeneratedAttribute]
private IExtendedStatsAggregation <OpenSearch.Client.IAggregationContainer.ExtendedStats>k__BackingField;
    [CompilerGeneratedAttribute]
private IExtendedStatsBucketAggregation <OpenSearch.Client.IAggregationContainer.ExtendedStatsBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private IFilterAggregation <OpenSearch.Client.IAggregationContainer.Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private IFiltersAggregation <OpenSearch.Client.IAggregationContainer.Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoBoundsAggregation <OpenSearch.Client.IAggregationContainer.GeoBounds>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoCentroidAggregation <OpenSearch.Client.IAggregationContainer.GeoCentroid>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoDistanceAggregation <OpenSearch.Client.IAggregationContainer.GeoDistance>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoHashGridAggregation <OpenSearch.Client.IAggregationContainer.GeoHash>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoLineAggregation <OpenSearch.Client.IAggregationContainer.GeoLine>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoTileGridAggregation <OpenSearch.Client.IAggregationContainer.GeoTile>k__BackingField;
    [CompilerGeneratedAttribute]
private IGlobalAggregation <OpenSearch.Client.IAggregationContainer.Global>k__BackingField;
    [CompilerGeneratedAttribute]
private IHistogramAggregation <OpenSearch.Client.IAggregationContainer.Histogram>k__BackingField;
    [CompilerGeneratedAttribute]
private IIpRangeAggregation <OpenSearch.Client.IAggregationContainer.IpRange>k__BackingField;
    [CompilerGeneratedAttribute]
private IMatrixStatsAggregation <OpenSearch.Client.IAggregationContainer.MatrixStats>k__BackingField;
    [CompilerGeneratedAttribute]
private IMaxAggregation <OpenSearch.Client.IAggregationContainer.Max>k__BackingField;
    [CompilerGeneratedAttribute]
private IMaxBucketAggregation <OpenSearch.Client.IAggregationContainer.MaxBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IAggregationContainer.Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private IMinAggregation <OpenSearch.Client.IAggregationContainer.Min>k__BackingField;
    [CompilerGeneratedAttribute]
private IMinBucketAggregation <OpenSearch.Client.IAggregationContainer.MinBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private IMissingAggregation <OpenSearch.Client.IAggregationContainer.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private IMovingAverageAggregation <OpenSearch.Client.IAggregationContainer.MovingAverage>k__BackingField;
    [CompilerGeneratedAttribute]
private IMovingFunctionAggregation <OpenSearch.Client.IAggregationContainer.MovingFunction>k__BackingField;
    [CompilerGeneratedAttribute]
private IMultiTermsAggregation <OpenSearch.Client.IAggregationContainer.MultiTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private INestedAggregation <OpenSearch.Client.IAggregationContainer.Nested>k__BackingField;
    [CompilerGeneratedAttribute]
private IParentAggregation <OpenSearch.Client.IAggregationContainer.Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private IPercentileRanksAggregation <OpenSearch.Client.IAggregationContainer.PercentileRanks>k__BackingField;
    [CompilerGeneratedAttribute]
private IPercentilesAggregation <OpenSearch.Client.IAggregationContainer.Percentiles>k__BackingField;
    [CompilerGeneratedAttribute]
private IPercentilesBucketAggregation <OpenSearch.Client.IAggregationContainer.PercentilesBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private IRangeAggregation <OpenSearch.Client.IAggregationContainer.Range>k__BackingField;
    [CompilerGeneratedAttribute]
private IRareTermsAggregation <OpenSearch.Client.IAggregationContainer.RareTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private IReverseNestedAggregation <OpenSearch.Client.IAggregationContainer.ReverseNested>k__BackingField;
    [CompilerGeneratedAttribute]
private ISamplerAggregation <OpenSearch.Client.IAggregationContainer.Sampler>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptedMetricAggregation <OpenSearch.Client.IAggregationContainer.ScriptedMetric>k__BackingField;
    [CompilerGeneratedAttribute]
private ISerialDifferencingAggregation <OpenSearch.Client.IAggregationContainer.SerialDifferencing>k__BackingField;
    [CompilerGeneratedAttribute]
private ISignificantTermsAggregation <OpenSearch.Client.IAggregationContainer.SignificantTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private ISignificantTextAggregation <OpenSearch.Client.IAggregationContainer.SignificantText>k__BackingField;
    [CompilerGeneratedAttribute]
private IStatsAggregation <OpenSearch.Client.IAggregationContainer.Stats>k__BackingField;
    [CompilerGeneratedAttribute]
private IStatsBucketAggregation <OpenSearch.Client.IAggregationContainer.StatsBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private ISumAggregation <OpenSearch.Client.IAggregationContainer.Sum>k__BackingField;
    [CompilerGeneratedAttribute]
private ISumBucketAggregation <OpenSearch.Client.IAggregationContainer.SumBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private ITermsAggregation <OpenSearch.Client.IAggregationContainer.Terms>k__BackingField;
    [CompilerGeneratedAttribute]
private ITopHitsAggregation <OpenSearch.Client.IAggregationContainer.TopHits>k__BackingField;
    [CompilerGeneratedAttribute]
private IValueCountAggregation <OpenSearch.Client.IAggregationContainer.ValueCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IWeightedAverageAggregation <OpenSearch.Client.IAggregationContainer.WeightedAverage>k__BackingField;
    [CompilerGeneratedAttribute]
private IMedianAbsoluteDeviationAggregation <OpenSearch.Client.IAggregationContainer.MedianAbsoluteDeviation>k__BackingField;
    [CompilerGeneratedAttribute]
private IVariableWidthHistogramAggregation <OpenSearch.Client.IAggregationContainer.VariableWidthHistogram>k__BackingField;
    private IAdjacencyMatrixAggregation OpenSearch.Client.IAggregationContainer.AdjacencyMatrix { get; private set; }
    private AggregationDictionary OpenSearch.Client.IAggregationContainer.Aggregations { get; private set; }
    private IAverageAggregation OpenSearch.Client.IAggregationContainer.Average { get; private set; }
    private IAverageBucketAggregation OpenSearch.Client.IAggregationContainer.AverageBucket { get; private set; }
    private IBucketScriptAggregation OpenSearch.Client.IAggregationContainer.BucketScript { get; private set; }
    private IBucketSelectorAggregation OpenSearch.Client.IAggregationContainer.BucketSelector { get; private set; }
    private IBucketSortAggregation OpenSearch.Client.IAggregationContainer.BucketSort { get; private set; }
    private ICardinalityAggregation OpenSearch.Client.IAggregationContainer.Cardinality { get; private set; }
    private IChildrenAggregation OpenSearch.Client.IAggregationContainer.Children { get; private set; }
    private ICompositeAggregation OpenSearch.Client.IAggregationContainer.Composite { get; private set; }
    private ICumulativeSumAggregation OpenSearch.Client.IAggregationContainer.CumulativeSum { get; private set; }
    private IDateHistogramAggregation OpenSearch.Client.IAggregationContainer.DateHistogram { get; private set; }
    private IAutoDateHistogramAggregation OpenSearch.Client.IAggregationContainer.AutoDateHistogram { get; private set; }
    private IDateRangeAggregation OpenSearch.Client.IAggregationContainer.DateRange { get; private set; }
    private IDerivativeAggregation OpenSearch.Client.IAggregationContainer.Derivative { get; private set; }
    private IDiversifiedSamplerAggregation OpenSearch.Client.IAggregationContainer.DiversifiedSampler { get; private set; }
    private IExtendedStatsAggregation OpenSearch.Client.IAggregationContainer.ExtendedStats { get; private set; }
    private IExtendedStatsBucketAggregation OpenSearch.Client.IAggregationContainer.ExtendedStatsBucket { get; private set; }
    private IFilterAggregation OpenSearch.Client.IAggregationContainer.Filter { get; private set; }
    private IFiltersAggregation OpenSearch.Client.IAggregationContainer.Filters { get; private set; }
    private IGeoBoundsAggregation OpenSearch.Client.IAggregationContainer.GeoBounds { get; private set; }
    private IGeoCentroidAggregation OpenSearch.Client.IAggregationContainer.GeoCentroid { get; private set; }
    private IGeoDistanceAggregation OpenSearch.Client.IAggregationContainer.GeoDistance { get; private set; }
    private IGeoHashGridAggregation OpenSearch.Client.IAggregationContainer.GeoHash { get; private set; }
    private IGeoLineAggregation OpenSearch.Client.IAggregationContainer.GeoLine { get; private set; }
    private IGeoTileGridAggregation OpenSearch.Client.IAggregationContainer.GeoTile { get; private set; }
    private IGlobalAggregation OpenSearch.Client.IAggregationContainer.Global { get; private set; }
    private IHistogramAggregation OpenSearch.Client.IAggregationContainer.Histogram { get; private set; }
    private IIpRangeAggregation OpenSearch.Client.IAggregationContainer.IpRange { get; private set; }
    private IMatrixStatsAggregation OpenSearch.Client.IAggregationContainer.MatrixStats { get; private set; }
    private IMaxAggregation OpenSearch.Client.IAggregationContainer.Max { get; private set; }
    private IMaxBucketAggregation OpenSearch.Client.IAggregationContainer.MaxBucket { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IAggregationContainer.Meta { get; private set; }
    private IMinAggregation OpenSearch.Client.IAggregationContainer.Min { get; private set; }
    private IMinBucketAggregation OpenSearch.Client.IAggregationContainer.MinBucket { get; private set; }
    private IMissingAggregation OpenSearch.Client.IAggregationContainer.Missing { get; private set; }
    private IMovingAverageAggregation OpenSearch.Client.IAggregationContainer.MovingAverage { get; private set; }
    private IMovingFunctionAggregation OpenSearch.Client.IAggregationContainer.MovingFunction { get; private set; }
    private IMultiTermsAggregation OpenSearch.Client.IAggregationContainer.MultiTerms { get; private set; }
    private INestedAggregation OpenSearch.Client.IAggregationContainer.Nested { get; private set; }
    private IParentAggregation OpenSearch.Client.IAggregationContainer.Parent { get; private set; }
    private IPercentileRanksAggregation OpenSearch.Client.IAggregationContainer.PercentileRanks { get; private set; }
    private IPercentilesAggregation OpenSearch.Client.IAggregationContainer.Percentiles { get; private set; }
    private IPercentilesBucketAggregation OpenSearch.Client.IAggregationContainer.PercentilesBucket { get; private set; }
    private IRangeAggregation OpenSearch.Client.IAggregationContainer.Range { get; private set; }
    private IRareTermsAggregation OpenSearch.Client.IAggregationContainer.RareTerms { get; private set; }
    private IReverseNestedAggregation OpenSearch.Client.IAggregationContainer.ReverseNested { get; private set; }
    private ISamplerAggregation OpenSearch.Client.IAggregationContainer.Sampler { get; private set; }
    private IScriptedMetricAggregation OpenSearch.Client.IAggregationContainer.ScriptedMetric { get; private set; }
    private ISerialDifferencingAggregation OpenSearch.Client.IAggregationContainer.SerialDifferencing { get; private set; }
    private ISignificantTermsAggregation OpenSearch.Client.IAggregationContainer.SignificantTerms { get; private set; }
    private ISignificantTextAggregation OpenSearch.Client.IAggregationContainer.SignificantText { get; private set; }
    private IStatsAggregation OpenSearch.Client.IAggregationContainer.Stats { get; private set; }
    private IStatsBucketAggregation OpenSearch.Client.IAggregationContainer.StatsBucket { get; private set; }
    private ISumAggregation OpenSearch.Client.IAggregationContainer.Sum { get; private set; }
    private ISumBucketAggregation OpenSearch.Client.IAggregationContainer.SumBucket { get; private set; }
    private ITermsAggregation OpenSearch.Client.IAggregationContainer.Terms { get; private set; }
    private ITopHitsAggregation OpenSearch.Client.IAggregationContainer.TopHits { get; private set; }
    private IValueCountAggregation OpenSearch.Client.IAggregationContainer.ValueCount { get; private set; }
    private IWeightedAverageAggregation OpenSearch.Client.IAggregationContainer.WeightedAverage { get; private set; }
    private IMedianAbsoluteDeviationAggregation OpenSearch.Client.IAggregationContainer.MedianAbsoluteDeviation { get; private set; }
    private IVariableWidthHistogramAggregation OpenSearch.Client.IAggregationContainer.VariableWidthHistogram { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IAdjacencyMatrixAggregation OpenSearch.Client.IAggregationContainer.get_AdjacencyMatrix();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_AdjacencyMatrix(IAdjacencyMatrixAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override AggregationDictionary OpenSearch.Client.IAggregationContainer.get_Aggregations();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Aggregations(AggregationDictionary value);
    [CompilerGeneratedAttribute]
private sealed virtual override IAverageAggregation OpenSearch.Client.IAggregationContainer.get_Average();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Average(IAverageAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IAverageBucketAggregation OpenSearch.Client.IAggregationContainer.get_AverageBucket();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_AverageBucket(IAverageBucketAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IBucketScriptAggregation OpenSearch.Client.IAggregationContainer.get_BucketScript();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_BucketScript(IBucketScriptAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IBucketSelectorAggregation OpenSearch.Client.IAggregationContainer.get_BucketSelector();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_BucketSelector(IBucketSelectorAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IBucketSortAggregation OpenSearch.Client.IAggregationContainer.get_BucketSort();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_BucketSort(IBucketSortAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override ICardinalityAggregation OpenSearch.Client.IAggregationContainer.get_Cardinality();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Cardinality(ICardinalityAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IChildrenAggregation OpenSearch.Client.IAggregationContainer.get_Children();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Children(IChildrenAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override ICompositeAggregation OpenSearch.Client.IAggregationContainer.get_Composite();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Composite(ICompositeAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override ICumulativeSumAggregation OpenSearch.Client.IAggregationContainer.get_CumulativeSum();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_CumulativeSum(ICumulativeSumAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDateHistogramAggregation OpenSearch.Client.IAggregationContainer.get_DateHistogram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_DateHistogram(IDateHistogramAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IAutoDateHistogramAggregation OpenSearch.Client.IAggregationContainer.get_AutoDateHistogram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_AutoDateHistogram(IAutoDateHistogramAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDateRangeAggregation OpenSearch.Client.IAggregationContainer.get_DateRange();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_DateRange(IDateRangeAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDerivativeAggregation OpenSearch.Client.IAggregationContainer.get_Derivative();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Derivative(IDerivativeAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDiversifiedSamplerAggregation OpenSearch.Client.IAggregationContainer.get_DiversifiedSampler();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_DiversifiedSampler(IDiversifiedSamplerAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IExtendedStatsAggregation OpenSearch.Client.IAggregationContainer.get_ExtendedStats();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_ExtendedStats(IExtendedStatsAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IExtendedStatsBucketAggregation OpenSearch.Client.IAggregationContainer.get_ExtendedStatsBucket();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_ExtendedStatsBucket(IExtendedStatsBucketAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFilterAggregation OpenSearch.Client.IAggregationContainer.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Filter(IFilterAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFiltersAggregation OpenSearch.Client.IAggregationContainer.get_Filters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Filters(IFiltersAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IGeoBoundsAggregation OpenSearch.Client.IAggregationContainer.get_GeoBounds();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_GeoBounds(IGeoBoundsAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IGeoCentroidAggregation OpenSearch.Client.IAggregationContainer.get_GeoCentroid();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_GeoCentroid(IGeoCentroidAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IGeoDistanceAggregation OpenSearch.Client.IAggregationContainer.get_GeoDistance();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_GeoDistance(IGeoDistanceAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IGeoHashGridAggregation OpenSearch.Client.IAggregationContainer.get_GeoHash();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_GeoHash(IGeoHashGridAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IGeoLineAggregation OpenSearch.Client.IAggregationContainer.get_GeoLine();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_GeoLine(IGeoLineAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IGeoTileGridAggregation OpenSearch.Client.IAggregationContainer.get_GeoTile();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_GeoTile(IGeoTileGridAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IGlobalAggregation OpenSearch.Client.IAggregationContainer.get_Global();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Global(IGlobalAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IHistogramAggregation OpenSearch.Client.IAggregationContainer.get_Histogram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Histogram(IHistogramAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIpRangeAggregation OpenSearch.Client.IAggregationContainer.get_IpRange();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_IpRange(IIpRangeAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMatrixStatsAggregation OpenSearch.Client.IAggregationContainer.get_MatrixStats();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_MatrixStats(IMatrixStatsAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMaxAggregation OpenSearch.Client.IAggregationContainer.get_Max();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Max(IMaxAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMaxBucketAggregation OpenSearch.Client.IAggregationContainer.get_MaxBucket();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_MaxBucket(IMaxBucketAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IAggregationContainer.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMinAggregation OpenSearch.Client.IAggregationContainer.get_Min();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Min(IMinAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMinBucketAggregation OpenSearch.Client.IAggregationContainer.get_MinBucket();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_MinBucket(IMinBucketAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMissingAggregation OpenSearch.Client.IAggregationContainer.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Missing(IMissingAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMovingAverageAggregation OpenSearch.Client.IAggregationContainer.get_MovingAverage();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_MovingAverage(IMovingAverageAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMovingFunctionAggregation OpenSearch.Client.IAggregationContainer.get_MovingFunction();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_MovingFunction(IMovingFunctionAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMultiTermsAggregation OpenSearch.Client.IAggregationContainer.get_MultiTerms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_MultiTerms(IMultiTermsAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override INestedAggregation OpenSearch.Client.IAggregationContainer.get_Nested();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Nested(INestedAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IParentAggregation OpenSearch.Client.IAggregationContainer.get_Parent();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Parent(IParentAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPercentileRanksAggregation OpenSearch.Client.IAggregationContainer.get_PercentileRanks();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_PercentileRanks(IPercentileRanksAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPercentilesAggregation OpenSearch.Client.IAggregationContainer.get_Percentiles();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Percentiles(IPercentilesAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPercentilesBucketAggregation OpenSearch.Client.IAggregationContainer.get_PercentilesBucket();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_PercentilesBucket(IPercentilesBucketAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IRangeAggregation OpenSearch.Client.IAggregationContainer.get_Range();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Range(IRangeAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IRareTermsAggregation OpenSearch.Client.IAggregationContainer.get_RareTerms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_RareTerms(IRareTermsAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IReverseNestedAggregation OpenSearch.Client.IAggregationContainer.get_ReverseNested();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_ReverseNested(IReverseNestedAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISamplerAggregation OpenSearch.Client.IAggregationContainer.get_Sampler();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Sampler(ISamplerAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScriptedMetricAggregation OpenSearch.Client.IAggregationContainer.get_ScriptedMetric();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_ScriptedMetric(IScriptedMetricAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISerialDifferencingAggregation OpenSearch.Client.IAggregationContainer.get_SerialDifferencing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_SerialDifferencing(ISerialDifferencingAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISignificantTermsAggregation OpenSearch.Client.IAggregationContainer.get_SignificantTerms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_SignificantTerms(ISignificantTermsAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISignificantTextAggregation OpenSearch.Client.IAggregationContainer.get_SignificantText();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_SignificantText(ISignificantTextAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IStatsAggregation OpenSearch.Client.IAggregationContainer.get_Stats();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Stats(IStatsAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IStatsBucketAggregation OpenSearch.Client.IAggregationContainer.get_StatsBucket();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_StatsBucket(IStatsBucketAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISumAggregation OpenSearch.Client.IAggregationContainer.get_Sum();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Sum(ISumAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISumBucketAggregation OpenSearch.Client.IAggregationContainer.get_SumBucket();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_SumBucket(ISumBucketAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITermsAggregation OpenSearch.Client.IAggregationContainer.get_Terms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_Terms(ITermsAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITopHitsAggregation OpenSearch.Client.IAggregationContainer.get_TopHits();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_TopHits(ITopHitsAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IValueCountAggregation OpenSearch.Client.IAggregationContainer.get_ValueCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_ValueCount(IValueCountAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IWeightedAverageAggregation OpenSearch.Client.IAggregationContainer.get_WeightedAverage();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_WeightedAverage(IWeightedAverageAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMedianAbsoluteDeviationAggregation OpenSearch.Client.IAggregationContainer.get_MedianAbsoluteDeviation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_MedianAbsoluteDeviation(IMedianAbsoluteDeviationAggregation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IVariableWidthHistogramAggregation OpenSearch.Client.IAggregationContainer.get_VariableWidthHistogram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationContainer.set_VariableWidthHistogram(IVariableWidthHistogramAggregation value);
    public sealed virtual void Accept(IAggregationVisitor visitor);
    public AggregationContainerDescriptor`1<T> Average(string name, Func`2<AverageAggregationDescriptor`1<T>, IAverageAggregation> selector);
    public AggregationContainerDescriptor`1<T> DateHistogram(string name, Func`2<DateHistogramAggregationDescriptor`1<T>, IDateHistogramAggregation> selector);
    public AggregationContainerDescriptor`1<T> AutoDateHistogram(string name, Func`2<AutoDateHistogramAggregationDescriptor`1<T>, IAutoDateHistogramAggregation> selector);
    public AggregationContainerDescriptor`1<T> Percentiles(string name, Func`2<PercentilesAggregationDescriptor`1<T>, IPercentilesAggregation> selector);
    public AggregationContainerDescriptor`1<T> PercentileRanks(string name, Func`2<PercentileRanksAggregationDescriptor`1<T>, IPercentileRanksAggregation> selector);
    public AggregationContainerDescriptor`1<T> DateRange(string name, Func`2<DateRangeAggregationDescriptor`1<T>, IDateRangeAggregation> selector);
    public AggregationContainerDescriptor`1<T> ExtendedStats(string name, Func`2<ExtendedStatsAggregationDescriptor`1<T>, IExtendedStatsAggregation> selector);
    public AggregationContainerDescriptor`1<T> Filter(string name, Func`2<FilterAggregationDescriptor`1<T>, IFilterAggregation> selector);
    public AggregationContainerDescriptor`1<T> Filters(string name, Func`2<FiltersAggregationDescriptor`1<T>, IFiltersAggregation> selector);
    public AggregationContainerDescriptor`1<T> GeoDistance(string name, Func`2<GeoDistanceAggregationDescriptor`1<T>, IGeoDistanceAggregation> selector);
    public AggregationContainerDescriptor`1<T> GeoHash(string name, Func`2<GeoHashGridAggregationDescriptor`1<T>, IGeoHashGridAggregation> selector);
    public AggregationContainerDescriptor`1<T> GeoLine(string name, Func`2<GeoLineAggregationDescriptor`1<T>, IGeoLineAggregation> selector);
    public AggregationContainerDescriptor`1<T> GeoTile(string name, Func`2<GeoTileGridAggregationDescriptor`1<T>, IGeoTileGridAggregation> selector);
    public AggregationContainerDescriptor`1<T> GeoBounds(string name, Func`2<GeoBoundsAggregationDescriptor`1<T>, IGeoBoundsAggregation> selector);
    public AggregationContainerDescriptor`1<T> Histogram(string name, Func`2<HistogramAggregationDescriptor`1<T>, IHistogramAggregation> selector);
    public AggregationContainerDescriptor`1<T> Global(string name, Func`2<GlobalAggregationDescriptor`1<T>, IGlobalAggregation> selector);
    public AggregationContainerDescriptor`1<T> IpRange(string name, Func`2<IpRangeAggregationDescriptor`1<T>, IIpRangeAggregation> selector);
    public AggregationContainerDescriptor`1<T> Max(string name, Func`2<MaxAggregationDescriptor`1<T>, IMaxAggregation> selector);
    public AggregationContainerDescriptor`1<T> Min(string name, Func`2<MinAggregationDescriptor`1<T>, IMinAggregation> selector);
    public AggregationContainerDescriptor`1<T> Cardinality(string name, Func`2<CardinalityAggregationDescriptor`1<T>, ICardinalityAggregation> selector);
    public AggregationContainerDescriptor`1<T> Missing(string name, Func`2<MissingAggregationDescriptor`1<T>, IMissingAggregation> selector);
    public AggregationContainerDescriptor`1<T> MultiTerms(string name, Func`2<MultiTermsAggregationDescriptor`1<T>, IMultiTermsAggregation> selector);
    public AggregationContainerDescriptor`1<T> Nested(string name, Func`2<NestedAggregationDescriptor`1<T>, INestedAggregation> selector);
    public AggregationContainerDescriptor`1<T> Parent(string name, Func`2<ParentAggregationDescriptor`2<T, TParent>, IParentAggregation> selector);
    public AggregationContainerDescriptor`1<T> ReverseNested(string name, Func`2<ReverseNestedAggregationDescriptor`1<T>, IReverseNestedAggregation> selector);
    public AggregationContainerDescriptor`1<T> Range(string name, Func`2<RangeAggregationDescriptor`1<T>, IRangeAggregation> selector);
    public AggregationContainerDescriptor`1<T> RareTerms(string name, Func`2<RareTermsAggregationDescriptor`1<T>, IRareTermsAggregation> selector);
    public AggregationContainerDescriptor`1<T> Stats(string name, Func`2<StatsAggregationDescriptor`1<T>, IStatsAggregation> selector);
    public AggregationContainerDescriptor`1<T> Sum(string name, Func`2<SumAggregationDescriptor`1<T>, ISumAggregation> selector);
    public AggregationContainerDescriptor`1<T> Terms(string name, Func`2<TermsAggregationDescriptor`1<T>, ITermsAggregation> selector);
    public AggregationContainerDescriptor`1<T> SignificantTerms(string name, Func`2<SignificantTermsAggregationDescriptor`1<T>, ISignificantTermsAggregation> selector);
    public AggregationContainerDescriptor`1<T> SignificantText(string name, Func`2<SignificantTextAggregationDescriptor`1<T>, ISignificantTextAggregation> selector);
    public AggregationContainerDescriptor`1<T> ValueCount(string name, Func`2<ValueCountAggregationDescriptor`1<T>, IValueCountAggregation> selector);
    public AggregationContainerDescriptor`1<T> TopHits(string name, Func`2<TopHitsAggregationDescriptor`1<T>, ITopHitsAggregation> selector);
    public AggregationContainerDescriptor`1<T> Children(string name, Func`2<ChildrenAggregationDescriptor`1<TChild>, IChildrenAggregation> selector);
    public AggregationContainerDescriptor`1<T> ScriptedMetric(string name, Func`2<ScriptedMetricAggregationDescriptor`1<T>, IScriptedMetricAggregation> selector);
    public AggregationContainerDescriptor`1<T> AverageBucket(string name, Func`2<AverageBucketAggregationDescriptor, IAverageBucketAggregation> selector);
    public AggregationContainerDescriptor`1<T> Derivative(string name, Func`2<DerivativeAggregationDescriptor, IDerivativeAggregation> selector);
    public AggregationContainerDescriptor`1<T> MaxBucket(string name, Func`2<MaxBucketAggregationDescriptor, IMaxBucketAggregation> selector);
    public AggregationContainerDescriptor`1<T> MinBucket(string name, Func`2<MinBucketAggregationDescriptor, IMinBucketAggregation> selector);
    public AggregationContainerDescriptor`1<T> SumBucket(string name, Func`2<SumBucketAggregationDescriptor, ISumBucketAggregation> selector);
    public AggregationContainerDescriptor`1<T> StatsBucket(string name, Func`2<StatsBucketAggregationDescriptor, IStatsBucketAggregation> selector);
    public AggregationContainerDescriptor`1<T> ExtendedStatsBucket(string name, Func`2<ExtendedStatsBucketAggregationDescriptor, IExtendedStatsBucketAggregation> selector);
    public AggregationContainerDescriptor`1<T> PercentilesBucket(string name, Func`2<PercentilesBucketAggregationDescriptor, IPercentilesBucketAggregation> selector);
    public AggregationContainerDescriptor`1<T> MovingAverage(string name, Func`2<MovingAverageAggregationDescriptor, IMovingAverageAggregation> selector);
    public AggregationContainerDescriptor`1<T> MovingFunction(string name, Func`2<MovingFunctionAggregationDescriptor, IMovingFunctionAggregation> selector);
    public AggregationContainerDescriptor`1<T> CumulativeSum(string name, Func`2<CumulativeSumAggregationDescriptor, ICumulativeSumAggregation> selector);
    public AggregationContainerDescriptor`1<T> SerialDifferencing(string name, Func`2<SerialDifferencingAggregationDescriptor, ISerialDifferencingAggregation> selector);
    public AggregationContainerDescriptor`1<T> BucketScript(string name, Func`2<BucketScriptAggregationDescriptor, IBucketScriptAggregation> selector);
    public AggregationContainerDescriptor`1<T> BucketSelector(string name, Func`2<BucketSelectorAggregationDescriptor, IBucketSelectorAggregation> selector);
    public AggregationContainerDescriptor`1<T> BucketSort(string name, Func`2<BucketSortAggregationDescriptor`1<T>, IBucketSortAggregation> selector);
    public AggregationContainerDescriptor`1<T> Sampler(string name, Func`2<SamplerAggregationDescriptor`1<T>, ISamplerAggregation> selector);
    public AggregationContainerDescriptor`1<T> DiversifiedSampler(string name, Func`2<DiversifiedSamplerAggregationDescriptor`1<T>, IDiversifiedSamplerAggregation> selector);
    public AggregationContainerDescriptor`1<T> GeoCentroid(string name, Func`2<GeoCentroidAggregationDescriptor`1<T>, IGeoCentroidAggregation> selector);
    public AggregationContainerDescriptor`1<T> MatrixStats(string name, Func`2<MatrixStatsAggregationDescriptor`1<T>, IMatrixStatsAggregation> selector);
    public AggregationContainerDescriptor`1<T> AdjacencyMatrix(string name, Func`2<AdjacencyMatrixAggregationDescriptor`1<T>, IAdjacencyMatrixAggregation> selector);
    public AggregationContainerDescriptor`1<T> Composite(string name, Func`2<CompositeAggregationDescriptor`1<T>, ICompositeAggregation> selector);
    public AggregationContainerDescriptor`1<T> WeightedAverage(string name, Func`2<WeightedAverageAggregationDescriptor`1<T>, IWeightedAverageAggregation> selector);
    public AggregationContainerDescriptor`1<T> MedianAbsoluteDeviation(string name, Func`2<MedianAbsoluteDeviationAggregationDescriptor`1<T>, IMedianAbsoluteDeviationAggregation> selector);
    public AggregationContainerDescriptor`1<T> VariableWidthHistogram(string name, Func`2<VariableWidthHistogramAggregationDescriptor`1<T>, IVariableWidthHistogramAggregation> selector);
    private AggregationContainerDescriptor`1<T> _SetInnerAggregation(string key, Func`2<TAggregator, TAggregatorInterface> selector, Action`2<IAggregationContainer, TAggregatorInterface> assignToProperty);
    public static bool op_False(AggregationContainerDescriptor`1<T> a);
    public static bool op_True(AggregationContainerDescriptor`1<T> a);
    public static AggregationContainerDescriptor`1<T> op_BitwiseAnd(AggregationContainerDescriptor`1<T> left, AggregationContainerDescriptor`1<T> right);
}
[JsonFormatterAttribute("OpenSearch.Client.AggregationDictionaryFormatter")]
public class OpenSearch.Client.AggregationDictionary : IsADictionaryBase`2<string, IAggregationContainer> {
    public AggregationDictionary(IDictionary`2<string, IAggregationContainer> container);
    public AggregationDictionary(Dictionary`2<string, AggregationContainer> container);
    public static AggregationDictionary op_Implicit(Dictionary`2<string, IAggregationContainer> container);
    public static AggregationDictionary op_Implicit(Dictionary`2<string, AggregationContainer> container);
    public static AggregationDictionary op_Implicit(AggregationBase aggregator);
    public void Add(string key, AggregationContainer value);
    protected virtual string ValidateKey(string key);
}
internal class OpenSearch.Client.AggregationDictionaryFormatter : object {
    private static VerbatimDictionaryInterfaceKeysFormatter`2<string, IAggregationContainer> DictionaryKeysFormatter;
    private static AggregationDictionaryFormatter();
    public sealed virtual AggregationDictionary Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, AggregationDictionary value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.AggregationProfile : object {
    [CompilerGeneratedAttribute]
private AggregationBreakdown <Breakdown>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TimeInNanoseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public AggregationBreakdown Breakdown { get; internal set; }
    [DataMemberAttribute]
public string Description { get; internal set; }
    [DataMemberAttribute]
public long TimeInNanoseconds { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public AggregationBreakdown get_Breakdown();
    [CompilerGeneratedAttribute]
internal void set_Breakdown(AggregationBreakdown value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
internal void set_Description(string value);
    [CompilerGeneratedAttribute]
public long get_TimeInNanoseconds();
    [CompilerGeneratedAttribute]
internal void set_TimeInNanoseconds(long value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
public class OpenSearch.Client.AggregationRange : object {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <To>k__BackingField;
    public Nullable`1<double> From { get; public set; }
    public string Key { get; public set; }
    public Nullable`1<double> To { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_From();
    [CompilerGeneratedAttribute]
public sealed virtual void set_From(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Key();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Key(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_To();
    [CompilerGeneratedAttribute]
public sealed virtual void set_To(Nullable`1<double> value);
}
public class OpenSearch.Client.AggregationRangeDescriptor : DescriptorBase`2<AggregationRangeDescriptor, IAggregationRange> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IAggregationRange.From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAggregationRange.Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IAggregationRange.To>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IAggregationRange.From { get; private set; }
    private string OpenSearch.Client.IAggregationRange.Key { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IAggregationRange.To { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IAggregationRange.get_From();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationRange.set_From(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAggregationRange.get_Key();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationRange.set_Key(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IAggregationRange.get_To();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregationRange.set_To(Nullable`1<double> value);
    public AggregationRangeDescriptor Key(string key);
    public AggregationRangeDescriptor From(Nullable`1<double> from);
    public AggregationRangeDescriptor To(Nullable`1<double> to);
}
public class OpenSearch.Client.AggregationVisitor : object {
    [CompilerGeneratedAttribute]
private int <Depth>k__BackingField;
    [CompilerGeneratedAttribute]
private AggregationVisitorScope <Scope>k__BackingField;
    public int Depth { get; public set; }
    public AggregationVisitorScope Scope { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Depth();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Depth(int value);
    [CompilerGeneratedAttribute]
public sealed virtual AggregationVisitorScope get_Scope();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Scope(AggregationVisitorScope value);
    public virtual void Visit(IValueCountAggregation aggregation);
    public virtual void Visit(IMinAggregation aggregation);
    public virtual void Visit(ISumAggregation aggregation);
    public virtual void Visit(IDateHistogramAggregation aggregation);
    public virtual void Visit(IDateRangeAggregation aggregation);
    public virtual void Visit(IFiltersAggregation aggregation);
    public virtual void Visit(IGeoHashGridAggregation aggregation);
    public virtual void Visit(IGeoLineAggregation aggregation);
    public virtual void Visit(IGeoTileGridAggregation aggregation);
    public virtual void Visit(IHistogramAggregation aggregation);
    public virtual void Visit(IIpRangeAggregation aggregation);
    public virtual void Visit(IMissingAggregation aggregation);
    public virtual void Visit(IReverseNestedAggregation aggregation);
    public virtual void Visit(ITermsAggregation aggregation);
    public virtual void Visit(ISignificantTextAggregation aggregation);
    public virtual void Visit(IPercentileRanksAggregation aggregation);
    public virtual void Visit(IChildrenAggregation aggregation);
    public virtual void Visit(IAverageBucketAggregation aggregation);
    public virtual void Visit(IMaxBucketAggregation aggregation);
    public virtual void Visit(ISumBucketAggregation aggregation);
    public virtual void Visit(IStatsBucketAggregation aggregation);
    public virtual void Visit(IExtendedStatsBucketAggregation aggregation);
    public virtual void Visit(IPercentilesBucketAggregation aggregation);
    public virtual void Visit(ICumulativeSumAggregation aggregation);
    public virtual void Visit(IBucketScriptAggregation aggregation);
    public virtual void Visit(ISamplerAggregation aggregation);
    public virtual void Visit(IDiversifiedSamplerAggregation aggregation);
    public virtual void Visit(IBucketSelectorAggregation aggregation);
    public virtual void Visit(IBucketSortAggregation aggregation);
    public virtual void Visit(ISerialDifferencingAggregation aggregation);
    public virtual void Visit(IMovingAverageAggregation aggregation);
    public virtual void Visit(IMinBucketAggregation aggregation);
    public virtual void Visit(IDerivativeAggregation aggregation);
    public virtual void Visit(IScriptedMetricAggregation aggregation);
    public virtual void Visit(ITopHitsAggregation aggregation);
    public virtual void Visit(ISignificantTermsAggregation aggregation);
    public virtual void Visit(IRangeAggregation aggregation);
    public virtual void Visit(IRareTermsAggregation aggregation);
    public virtual void Visit(INestedAggregation aggregation);
    public virtual void Visit(IParentAggregation aggregation);
    public virtual void Visit(ICardinalityAggregation aggregation);
    public virtual void Visit(IGlobalAggregation aggregation);
    public virtual void Visit(IGeoBoundsAggregation aggregation);
    public virtual void Visit(IGeoDistanceAggregation aggregation);
    public virtual void Visit(IFilterAggregation aggregation);
    public virtual void Visit(IPercentilesAggregation aggregation);
    public virtual void Visit(IExtendedStatsAggregation aggregation);
    public virtual void Visit(IStatsAggregation aggregation);
    public virtual void Visit(IMaxAggregation aggregation);
    public virtual void Visit(IAverageAggregation aggregation);
    public virtual void Visit(IGeoCentroidAggregation aggregation);
    public virtual void Visit(ICompositeAggregation aggregation);
    public virtual void Visit(IMedianAbsoluteDeviationAggregation aggregation);
    public virtual void Visit(IAdjacencyMatrixAggregation aggregation);
    public virtual void Visit(IAutoDateHistogramAggregation aggregation);
    public virtual void Visit(IMatrixStatsAggregation aggregation);
    public virtual void Visit(IWeightedAverageAggregation aggregation);
    public virtual void Visit(IMovingFunctionAggregation aggregation);
    public virtual void Visit(IMultiTermsAggregation aggregationContainer);
    public virtual void Visit(IAggregation aggregation);
    public virtual void Visit(IAggregationContainer aggregationContainer);
    public virtual void Visit(IVariableWidthHistogramAggregation aggregationContainer);
}
public enum OpenSearch.Client.AggregationVisitorScope : Enum {
    public int value__;
    public static AggregationVisitorScope Unknown;
    public static AggregationVisitorScope Aggregation;
    public static AggregationVisitorScope Bucket;
}
public class OpenSearch.Client.AggregationWalker : object {
    private void Accept(IAggregationVisitor visitor, AggregationDictionary aggregations);
    private void Accept(IAggregationVisitor visitor, IAggregationContainer aggregation, AggregationVisitorScope scope);
    private static void AcceptAggregation(T aggregation, IAggregationVisitor visitor, Action`2<IAggregationVisitor, T> scoped);
    public void Walk(IAggregationContainer aggregation, IAggregationVisitor visitor);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_6(IAggregationVisitor v, IChildrenAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_8(IAggregationVisitor v, IDateHistogramAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_9(IAggregationVisitor v, IDateRangeAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_12(IAggregationVisitor v, IFilterAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_13(IAggregationVisitor v, IFiltersAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_15(IAggregationVisitor v, IGeoDistanceAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_16(IAggregationVisitor v, IGeoHashGridAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_18(IAggregationVisitor v, IGeoTileGridAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_19(IAggregationVisitor v, IGlobalAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_20(IAggregationVisitor v, IHistogramAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_21(IAggregationVisitor v, IIpRangeAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_26(IAggregationVisitor v, IMissingAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_28(IAggregationVisitor v, IMultiTermsAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_29(IAggregationVisitor v, INestedAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_30(IAggregationVisitor v, IParentAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_33(IAggregationVisitor v, IRangeAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_34(IAggregationVisitor v, IRareTermsAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_35(IAggregationVisitor v, IReverseNestedAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_36(IAggregationVisitor v, ISamplerAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_39(IAggregationVisitor v, ISignificantTermsAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_40(IAggregationVisitor v, ISignificantTextAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_47(IAggregationVisitor v, ITermsAggregation d);
    [CompilerGeneratedAttribute]
private void <Walk>b__3_53(IAggregationVisitor v, IVariableWidthHistogramAggregation d);
}
public class OpenSearch.Client.Alias : object {
    [CompilerGeneratedAttribute]
private QueryContainer <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <IndexRouting>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsWriteIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsHidden>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <SearchRouting>k__BackingField;
    public QueryContainer Filter { get; public set; }
    public Routing IndexRouting { get; public set; }
    public Nullable`1<bool> IsWriteIndex { get; public set; }
    public Nullable`1<bool> IsHidden { get; public set; }
    public Routing Routing { get; public set; }
    public Routing SearchRouting { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Routing get_IndexRouting();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexRouting(Routing value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IsWriteIndex();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsWriteIndex(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IsHidden();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsHidden(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Routing get_Routing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Routing(Routing value);
    [CompilerGeneratedAttribute]
public sealed virtual Routing get_SearchRouting();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchRouting(Routing value);
}
internal class OpenSearch.Client.AliasActionFormatter : object {
    private static AutomataDictionary Actions;
    private static AliasActionFormatter();
    public sealed virtual IAliasAction Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IAliasAction value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, TAliasAction action, IJsonFormatterResolver formatterResolver);
    private static TAliasAction Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.AliasAddAction : object {
    [CompilerGeneratedAttribute]
private AliasAddOperation <Add>k__BackingField;
    public AliasAddOperation Add { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual AliasAddOperation get_Add();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Add(AliasAddOperation value);
}
public class OpenSearch.Client.AliasAddDescriptor : DescriptorBase`2<AliasAddDescriptor, IAliasAddAction> {
    [CompilerGeneratedAttribute]
private AliasAddOperation <OpenSearch.Client.IAliasAddAction.Add>k__BackingField;
    private AliasAddOperation OpenSearch.Client.IAliasAddAction.Add { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override AliasAddOperation OpenSearch.Client.IAliasAddAction.get_Add();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAliasAddAction.set_Add(AliasAddOperation value);
    public AliasAddDescriptor Index(string index);
    public AliasAddDescriptor Index(Type index);
    public AliasAddDescriptor Index();
    public AliasAddDescriptor Indices(Indices indices);
    public AliasAddDescriptor Alias(string alias);
    public AliasAddDescriptor Aliases(IEnumerable`1<string> aliases);
    public AliasAddDescriptor Aliases(String[] aliases);
    public AliasAddDescriptor Routing(string routing);
    public AliasAddDescriptor IndexRouting(string indexRouting);
    public AliasAddDescriptor SearchRouting(string searchRouting);
    public AliasAddDescriptor IsWriteIndex(Nullable`1<bool> isWriteIndex);
    public AliasAddDescriptor IsHidden(Nullable`1<bool> isHidden);
    public AliasAddDescriptor Filter(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> filterSelector);
}
public class OpenSearch.Client.AliasAddOperation : object {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Indices <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexRouting>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsWriteIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsHidden>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchRouting>k__BackingField;
    [DataMemberAttribute]
public string Alias { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Aliases { get; public set; }
    [DataMemberAttribute]
public QueryContainer Filter { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.IndicesFormatter")]
public Indices Indices { get; public set; }
    [DataMemberAttribute]
public string IndexRouting { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IsWriteIndex { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IsHidden { get; public set; }
    [DataMemberAttribute]
public string Routing { get; public set; }
    [DataMemberAttribute]
public string SearchRouting { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Aliases();
    [CompilerGeneratedAttribute]
public void set_Aliases(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public QueryContainer get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(QueryContainer value);
    [CompilerGeneratedAttribute]
public IndexName get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public Indices get_Indices();
    [CompilerGeneratedAttribute]
public void set_Indices(Indices value);
    [CompilerGeneratedAttribute]
public string get_IndexRouting();
    [CompilerGeneratedAttribute]
public void set_IndexRouting(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsWriteIndex();
    [CompilerGeneratedAttribute]
public void set_IsWriteIndex(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsHidden();
    [CompilerGeneratedAttribute]
public void set_IsHidden(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Routing();
    [CompilerGeneratedAttribute]
public void set_Routing(string value);
    [CompilerGeneratedAttribute]
public string get_SearchRouting();
    [CompilerGeneratedAttribute]
public void set_SearchRouting(string value);
}
public class OpenSearch.Client.AliasDefinition : object {
    [CompilerGeneratedAttribute]
private IQueryContainer <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexRouting>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsWriteIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchRouting>k__BackingField;
    [DataMemberAttribute]
public IQueryContainer Filter { get; internal set; }
    [DataMemberAttribute]
public string IndexRouting { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<bool> IsWriteIndex { get; internal set; }
    [DataMemberAttribute]
public string Routing { get; internal set; }
    [DataMemberAttribute]
public string SearchRouting { get; internal set; }
    [CompilerGeneratedAttribute]
public IQueryContainer get_Filter();
    [CompilerGeneratedAttribute]
internal void set_Filter(IQueryContainer value);
    [CompilerGeneratedAttribute]
public string get_IndexRouting();
    [CompilerGeneratedAttribute]
internal void set_IndexRouting(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsWriteIndex();
    [CompilerGeneratedAttribute]
internal void set_IsWriteIndex(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Routing();
    [CompilerGeneratedAttribute]
internal void set_Routing(string value);
    [CompilerGeneratedAttribute]
public string get_SearchRouting();
    [CompilerGeneratedAttribute]
internal void set_SearchRouting(string value);
}
public class OpenSearch.Client.AliasDescriptor : DescriptorBase`2<AliasDescriptor, IAlias> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IAlias.Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <OpenSearch.Client.IAlias.IndexRouting>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IAlias.IsWriteIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <OpenSearch.Client.IAlias.Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <OpenSearch.Client.IAlias.SearchRouting>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IAlias.IsHidden>k__BackingField;
    private QueryContainer OpenSearch.Client.IAlias.Filter { get; private set; }
    private Routing OpenSearch.Client.IAlias.IndexRouting { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IAlias.IsWriteIndex { get; private set; }
    private Routing OpenSearch.Client.IAlias.Routing { get; private set; }
    private Routing OpenSearch.Client.IAlias.SearchRouting { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IAlias.IsHidden { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IAlias.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAlias.set_Filter(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Routing OpenSearch.Client.IAlias.get_IndexRouting();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAlias.set_IndexRouting(Routing value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IAlias.get_IsWriteIndex();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAlias.set_IsWriteIndex(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Routing OpenSearch.Client.IAlias.get_Routing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAlias.set_Routing(Routing value);
    [CompilerGeneratedAttribute]
private sealed virtual override Routing OpenSearch.Client.IAlias.get_SearchRouting();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAlias.set_SearchRouting(Routing value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IAlias.get_IsHidden();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAlias.set_IsHidden(Nullable`1<bool> value);
    public AliasDescriptor Filter(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> filterSelector);
    public AliasDescriptor IndexRouting(Routing indexRouting);
    public AliasDescriptor IsWriteIndex(Nullable`1<bool> isWriteIndex);
    public AliasDescriptor IsHidden(Nullable`1<bool> isHidden);
    public AliasDescriptor Routing(Routing routing);
    public AliasDescriptor SearchRouting(Routing searchRouting);
}
public class OpenSearch.Client.Aliases : IsADictionaryBase`2<IndexName, IAlias> {
    public Aliases(IDictionary`2<IndexName, IAlias> container);
    public Aliases(Dictionary`2<IndexName, IAlias> container);
    public sealed virtual void Add(IndexName index, IAlias alias);
}
public class OpenSearch.Client.AliasesDescriptor : IsADictionaryDescriptorBase`4<AliasesDescriptor, IAliases, IndexName, IAlias> {
    public AliasesDescriptor Alias(string alias, Func`2<AliasDescriptor, IAlias> selector);
}
public class OpenSearch.Client.AliasExistsDescriptor : RequestDescriptorBase`3<AliasExistsDescriptor, AliasExistsRequestParameters, IAliasExistsRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.IAliasExistsRequest.Name { get; }
    private Indices OpenSearch.Client.IAliasExistsRequest.Index { get; }
    public AliasExistsDescriptor(Names name);
    public AliasExistsDescriptor(Indices index, Names name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IAliasExistsRequest.get_Name();
    private sealed virtual override Indices OpenSearch.Client.IAliasExistsRequest.get_Index();
    public AliasExistsDescriptor Index(Indices index);
    public AliasExistsDescriptor Index();
    public AliasExistsDescriptor AllIndices();
    public AliasExistsDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public AliasExistsDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public AliasExistsDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public AliasExistsDescriptor Local(Nullable`1<bool> local);
}
public class OpenSearch.Client.AliasExistsRequest : PlainRequestBase`1<AliasExistsRequestParameters> {
    protected IAliasExistsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IAliasExistsRequest.Name { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IAliasExistsRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public AliasExistsRequest(Names name);
    public AliasExistsRequest(Indices index, Names name);
    protected IAliasExistsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IAliasExistsRequest.get_Name();
    private sealed virtual override Indices OpenSearch.Client.IAliasExistsRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
}
[ExtensionAttribute]
public static class OpenSearch.Client.AliasPointingToIndexExtensions : object {
    [ExtensionAttribute]
public static IReadOnlyDictionary`2<string, AliasDefinition> GetAliasesPointingToIndex(IOpenSearchClient client, IndexName index);
    [AsyncStateMachineAttribute("OpenSearch.Client.AliasPointingToIndexExtensions/<GetAliasesPointingToIndexAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IReadOnlyDictionary`2<string, AliasDefinition>> GetAliasesPointingToIndexAsync(IOpenSearchClient client, IndexName index);
    private static IReadOnlyDictionary`2<string, AliasDefinition> AliasesPointingToIndex(IndexName index, GetAliasResponse response);
}
public class OpenSearch.Client.AliasRemoveAction : object {
    [CompilerGeneratedAttribute]
private AliasRemoveOperation <Remove>k__BackingField;
    public AliasRemoveOperation Remove { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual AliasRemoveOperation get_Remove();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Remove(AliasRemoveOperation value);
}
public class OpenSearch.Client.AliasRemoveDescriptor : DescriptorBase`2<AliasRemoveDescriptor, IAliasRemoveAction> {
    [CompilerGeneratedAttribute]
private AliasRemoveOperation <OpenSearch.Client.IAliasRemoveAction.Remove>k__BackingField;
    private AliasRemoveOperation OpenSearch.Client.IAliasRemoveAction.Remove { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override AliasRemoveOperation OpenSearch.Client.IAliasRemoveAction.get_Remove();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAliasRemoveAction.set_Remove(AliasRemoveOperation value);
    public AliasRemoveDescriptor Index(string index);
    public AliasRemoveDescriptor Index(Type index);
    public AliasRemoveDescriptor Index();
    public AliasRemoveDescriptor Indices(Indices indices);
    public AliasRemoveDescriptor Alias(string alias);
    public AliasRemoveDescriptor Aliases(IEnumerable`1<string> aliases);
    public AliasRemoveDescriptor Aliases(String[] aliases);
}
public class OpenSearch.Client.AliasRemoveIndexAction : object {
    [CompilerGeneratedAttribute]
private AliasRemoveIndexOperation <RemoveIndex>k__BackingField;
    public AliasRemoveIndexOperation RemoveIndex { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual AliasRemoveIndexOperation get_RemoveIndex();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RemoveIndex(AliasRemoveIndexOperation value);
}
public class OpenSearch.Client.AliasRemoveIndexDescriptor : DescriptorBase`2<AliasRemoveIndexDescriptor, IAliasRemoveIndexAction> {
    [CompilerGeneratedAttribute]
private AliasRemoveIndexOperation <OpenSearch.Client.IAliasRemoveIndexAction.RemoveIndex>k__BackingField;
    private AliasRemoveIndexOperation OpenSearch.Client.IAliasRemoveIndexAction.RemoveIndex { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override AliasRemoveIndexOperation OpenSearch.Client.IAliasRemoveIndexAction.get_RemoveIndex();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAliasRemoveIndexAction.set_RemoveIndex(AliasRemoveIndexOperation value);
    public AliasRemoveIndexDescriptor Index(IndexName index);
    public AliasRemoveIndexDescriptor Index(Type index);
    public AliasRemoveIndexDescriptor Index();
}
public class OpenSearch.Client.AliasRemoveIndexOperation : object {
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [CompilerGeneratedAttribute]
public IndexName get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(IndexName value);
}
public class OpenSearch.Client.AliasRemoveOperation : object {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Indices <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <MustExist>k__BackingField;
    [DataMemberAttribute]
public string Alias { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Aliases { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.IndicesFormatter")]
public Indices Indices { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> MustExist { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Aliases();
    [CompilerGeneratedAttribute]
public void set_Aliases(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IndexName get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public Indices get_Indices();
    [CompilerGeneratedAttribute]
public void set_Indices(Indices value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_MustExist();
    [CompilerGeneratedAttribute]
public void set_MustExist(Nullable`1<bool> value);
}
[DataContractAttribute]
public class OpenSearch.Client.AllIndicesStats : object {
    [CompilerGeneratedAttribute]
private IndexStats <Primaries>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexStats <Total>k__BackingField;
    [DataMemberAttribute]
public IndexStats Primaries { get; internal set; }
    [DataMemberAttribute]
public IndexStats Total { get; internal set; }
    [CompilerGeneratedAttribute]
public IndexStats get_Primaries();
    [CompilerGeneratedAttribute]
internal void set_Primaries(IndexStats value);
    [CompilerGeneratedAttribute]
public IndexStats get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(IndexStats value);
}
public abstract class OpenSearch.Client.AllocateClusterRerouteCommandBase : object {
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Shard>k__BackingField;
    public IndexName Index { get; public set; }
    public string Name { get; }
    public string Node { get; public set; }
    public Nullable`1<int> Shard { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    public abstract virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Node();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Node(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Shard();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Shard(Nullable`1<int> value);
}
public abstract class OpenSearch.Client.AllocateClusterRerouteCommandDescriptorBase`2 : DescriptorBase`2<TDescriptor, TInterface> {
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IAllocateClusterRerouteCommand.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAllocateClusterRerouteCommand.Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IAllocateClusterRerouteCommand.Shard>k__BackingField;
    public string Name { get; }
    private IndexName OpenSearch.Client.IAllocateClusterRerouteCommand.Index { get; private set; }
    private string OpenSearch.Client.IClusterRerouteCommand.Name { get; }
    private string OpenSearch.Client.IAllocateClusterRerouteCommand.Node { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IAllocateClusterRerouteCommand.Shard { get; private set; }
    public abstract virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IAllocateClusterRerouteCommand.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAllocateClusterRerouteCommand.set_Index(IndexName value);
    private sealed virtual override string OpenSearch.Client.IClusterRerouteCommand.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAllocateClusterRerouteCommand.get_Node();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAllocateClusterRerouteCommand.set_Node(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IAllocateClusterRerouteCommand.get_Shard();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAllocateClusterRerouteCommand.set_Shard(Nullable`1<int> value);
    public TDescriptor Index(IndexName index);
    public TDescriptor Index();
    public TDescriptor Shard(Nullable`1<int> shard);
    public TDescriptor Node(string node);
}
public class OpenSearch.Client.AllocateEmptyPrimaryRerouteCommand : AllocateClusterRerouteCommandBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AcceptDataLoss>k__BackingField;
    public Nullable`1<bool> AcceptDataLoss { get; public set; }
    public string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AcceptDataLoss();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AcceptDataLoss(Nullable`1<bool> value);
    public virtual string get_Name();
}
public class OpenSearch.Client.AllocateEmptyPrimaryRerouteCommandDescriptor : AllocateClusterRerouteCommandDescriptorBase`2<AllocateEmptyPrimaryRerouteCommandDescriptor, IAllocateEmptyPrimaryRerouteCommand> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IAllocateEmptyPrimaryRerouteCommand.AcceptDataLoss>k__BackingField;
    public string Name { get; }
    private Nullable`1<bool> OpenSearch.Client.IAllocateEmptyPrimaryRerouteCommand.AcceptDataLoss { get; private set; }
    public virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IAllocateEmptyPrimaryRerouteCommand.get_AcceptDataLoss();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAllocateEmptyPrimaryRerouteCommand.set_AcceptDataLoss(Nullable`1<bool> value);
    public AllocateEmptyPrimaryRerouteCommandDescriptor AcceptDataLoss(Nullable`1<bool> acceptDataLoss);
}
public class OpenSearch.Client.AllocateReplicaClusterRerouteCommand : AllocateClusterRerouteCommandBase {
    public string Name { get; }
    public virtual string get_Name();
}
public class OpenSearch.Client.AllocateReplicaClusterRerouteCommandDescriptor : AllocateClusterRerouteCommandDescriptorBase`2<AllocateReplicaClusterRerouteCommandDescriptor, IAllocateReplicaClusterRerouteCommand> {
    public string Name { get; }
    public virtual string get_Name();
}
public class OpenSearch.Client.AllocateStalePrimaryRerouteCommand : AllocateClusterRerouteCommandBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AcceptDataLoss>k__BackingField;
    public Nullable`1<bool> AcceptDataLoss { get; public set; }
    public string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AcceptDataLoss();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AcceptDataLoss(Nullable`1<bool> value);
    public virtual string get_Name();
}
public class OpenSearch.Client.AllocateStalePrimaryRerouteCommandDescriptor : AllocateClusterRerouteCommandDescriptorBase`2<AllocateStalePrimaryRerouteCommandDescriptor, IAllocateStalePrimaryRerouteCommand> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IAllocateStalePrimaryRerouteCommand.AcceptDataLoss>k__BackingField;
    public string Name { get; }
    private Nullable`1<bool> OpenSearch.Client.IAllocateStalePrimaryRerouteCommand.AcceptDataLoss { get; private set; }
    public virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IAllocateStalePrimaryRerouteCommand.get_AcceptDataLoss();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAllocateStalePrimaryRerouteCommand.set_AcceptDataLoss(Nullable`1<bool> value);
    public AllocateStalePrimaryRerouteCommandDescriptor AcceptDataLoss(Nullable`1<bool> acceptDataLoss);
}
public class OpenSearch.Client.AllocationAttributes : IsADictionaryBase`2<string, IList`1<string>> {
    private IDictionary`2<string, IList`1<string>> OpenSearch.Client.IAllocationAttributes.Attributes { get; }
    private sealed virtual override IDictionary`2<string, IList`1<string>> OpenSearch.Client.IAllocationAttributes.get_Attributes();
    public void Add(string attribute, String[] values);
    public void Add(string attribute, IEnumerable`1<string> values);
}
public class OpenSearch.Client.AllocationAttributesDescriptor : IsADictionaryDescriptorBase`4<AllocationAttributesDescriptor, IAllocationAttributes, string, IList`1<string>> {
}
public class OpenSearch.Client.AllocationAwarenessSettings : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private IAllocationAttributes <Forced>k__BackingField;
    public IEnumerable`1<string> Attributes { get; public set; }
    public IAllocationAttributes Forced { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Attributes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Attributes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IAllocationAttributes get_Forced();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Forced(IAllocationAttributes value);
}
public class OpenSearch.Client.AllocationAwarenessSettingsDescriptor : DescriptorBase`2<AllocationAwarenessSettingsDescriptor, IAllocationAwarenessSettings> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IAllocationAwarenessSettings.Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private IAllocationAttributes <OpenSearch.Client.IAllocationAwarenessSettings.Forced>k__BackingField;
    private IEnumerable`1<string> OpenSearch.Client.IAllocationAwarenessSettings.Attributes { get; private set; }
    private IAllocationAttributes OpenSearch.Client.IAllocationAwarenessSettings.Forced { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IAllocationAwarenessSettings.get_Attributes();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAllocationAwarenessSettings.set_Attributes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IAllocationAttributes OpenSearch.Client.IAllocationAwarenessSettings.get_Forced();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAllocationAwarenessSettings.set_Forced(IAllocationAttributes value);
    public AllocationAwarenessSettingsDescriptor Attributes(IEnumerable`1<string> attributes);
    public AllocationAwarenessSettingsDescriptor Attributes(String[] attributes);
    public AllocationAwarenessSettingsDescriptor Force(IAllocationAttributes forceValues);
    public AllocationAwarenessSettingsDescriptor Force(Func`2<AllocationAttributesDescriptor, IAllocationAttributes> selector);
}
[DataContractAttribute]
public class OpenSearch.Client.AllocationDecision : object {
    [CompilerGeneratedAttribute]
private string <Decider>k__BackingField;
    [CompilerGeneratedAttribute]
private AllocationExplainDecision <Decision>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Explanation>k__BackingField;
    [DataMemberAttribute]
public string Decider { get; public set; }
    [DataMemberAttribute]
public AllocationExplainDecision Decision { get; public set; }
    [DataMemberAttribute]
public string Explanation { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Decider();
    [CompilerGeneratedAttribute]
public void set_Decider(string value);
    [CompilerGeneratedAttribute]
public AllocationExplainDecision get_Decision();
    [CompilerGeneratedAttribute]
public void set_Decision(AllocationExplainDecision value);
    [CompilerGeneratedAttribute]
public string get_Explanation();
    [CompilerGeneratedAttribute]
public void set_Explanation(string value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.AllocationEnable : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AllocationEnable All;
    [EnumMemberAttribute]
public static AllocationEnable Primaries;
    [EnumMemberAttribute]
public static AllocationEnable NewPrimaries;
    [EnumMemberAttribute]
public static AllocationEnable None;
}
[StringEnumAttribute]
public enum OpenSearch.Client.AllocationExplainDecision : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AllocationExplainDecision No;
    [EnumMemberAttribute]
public static AllocationExplainDecision Yes;
    [EnumMemberAttribute]
public static AllocationExplainDecision Throttle;
    [EnumMemberAttribute]
public static AllocationExplainDecision Always;
}
public class OpenSearch.Client.AllocationFilteringSettings : object {
    [CompilerGeneratedAttribute]
private IAllocationAttributes <Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private IAllocationAttributes <Include>k__BackingField;
    [CompilerGeneratedAttribute]
private IAllocationAttributes <Require>k__BackingField;
    public IAllocationAttributes Exclude { get; public set; }
    public IAllocationAttributes Include { get; public set; }
    public IAllocationAttributes Require { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IAllocationAttributes get_Exclude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Exclude(IAllocationAttributes value);
    [CompilerGeneratedAttribute]
public sealed virtual IAllocationAttributes get_Include();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Include(IAllocationAttributes value);
    [CompilerGeneratedAttribute]
public sealed virtual IAllocationAttributes get_Require();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Require(IAllocationAttributes value);
}
public class OpenSearch.Client.AllocationFilteringSettingsDescriptor : DescriptorBase`2<AllocationFilteringSettingsDescriptor, IAllocationFilteringSettings> {
    [CompilerGeneratedAttribute]
private IAllocationAttributes <OpenSearch.Client.IAllocationFilteringSettings.Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private IAllocationAttributes <OpenSearch.Client.IAllocationFilteringSettings.Include>k__BackingField;
    [CompilerGeneratedAttribute]
private IAllocationAttributes <OpenSearch.Client.IAllocationFilteringSettings.Require>k__BackingField;
    private IAllocationAttributes OpenSearch.Client.IAllocationFilteringSettings.Exclude { get; private set; }
    private IAllocationAttributes OpenSearch.Client.IAllocationFilteringSettings.Include { get; private set; }
    private IAllocationAttributes OpenSearch.Client.IAllocationFilteringSettings.Require { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IAllocationAttributes OpenSearch.Client.IAllocationFilteringSettings.get_Exclude();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAllocationFilteringSettings.set_Exclude(IAllocationAttributes value);
    [CompilerGeneratedAttribute]
private sealed virtual override IAllocationAttributes OpenSearch.Client.IAllocationFilteringSettings.get_Include();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAllocationFilteringSettings.set_Include(IAllocationAttributes value);
    [CompilerGeneratedAttribute]
private sealed virtual override IAllocationAttributes OpenSearch.Client.IAllocationFilteringSettings.get_Require();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAllocationFilteringSettings.set_Require(IAllocationAttributes value);
    public AllocationFilteringSettingsDescriptor Include(IAllocationAttributes include);
    public AllocationFilteringSettingsDescriptor Include(Func`2<AllocationAttributesDescriptor, IAllocationAttributes> selector);
    public AllocationFilteringSettingsDescriptor Exlude(IAllocationAttributes include);
    public AllocationFilteringSettingsDescriptor Exclude(Func`2<AllocationAttributesDescriptor, IAllocationAttributes> selector);
    public AllocationFilteringSettingsDescriptor Require(IAllocationAttributes include);
    public AllocationFilteringSettingsDescriptor Require(Func`2<AllocationAttributesDescriptor, IAllocationAttributes> selector);
}
[DataContractAttribute]
public class OpenSearch.Client.AllocationStore : object {
    [CompilerGeneratedAttribute]
private string <AllocationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Found>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <InSync>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MatchingSizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <MatchingSyncId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StoreException>k__BackingField;
    [DataMemberAttribute]
public string AllocationId { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Found { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> InSync { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> MatchingSizeInBytes { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> MatchingSyncId { get; public set; }
    [DataMemberAttribute]
public string StoreException { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AllocationId();
    [CompilerGeneratedAttribute]
public void set_AllocationId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Found();
    [CompilerGeneratedAttribute]
public void set_Found(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_InSync();
    [CompilerGeneratedAttribute]
public void set_InSync(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MatchingSizeInBytes();
    [CompilerGeneratedAttribute]
public void set_MatchingSizeInBytes(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_MatchingSyncId();
    [CompilerGeneratedAttribute]
public void set_MatchingSyncId(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_StoreException();
    [CompilerGeneratedAttribute]
public void set_StoreException(string value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.AllowRebalance : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AllowRebalance All;
    [EnumMemberAttribute]
public static AllowRebalance Primaries;
    [EnumMemberAttribute]
public static AllowRebalance Replicas;
}
[AttributeUsageAttribute("256")]
public class OpenSearch.Client.AlternativeEnumMemberAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; }
    public AlternativeEnumMemberAttribute(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
}
public class OpenSearch.Client.Analysis : object {
    [CompilerGeneratedAttribute]
private IAnalyzers <Analyzers>k__BackingField;
    [CompilerGeneratedAttribute]
private ICharFilters <CharFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private INormalizers <Normalizers>k__BackingField;
    [CompilerGeneratedAttribute]
private ITokenFilters <TokenFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private ITokenizers <Tokenizers>k__BackingField;
    public IAnalyzers Analyzers { get; public set; }
    public ICharFilters CharFilters { get; public set; }
    public INormalizers Normalizers { get; public set; }
    public ITokenFilters TokenFilters { get; public set; }
    public ITokenizers Tokenizers { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IAnalyzers get_Analyzers();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzers(IAnalyzers value);
    [CompilerGeneratedAttribute]
public sealed virtual ICharFilters get_CharFilters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CharFilters(ICharFilters value);
    [CompilerGeneratedAttribute]
public sealed virtual INormalizers get_Normalizers();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Normalizers(INormalizers value);
    [CompilerGeneratedAttribute]
public sealed virtual ITokenFilters get_TokenFilters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TokenFilters(ITokenFilters value);
    [CompilerGeneratedAttribute]
public sealed virtual ITokenizers get_Tokenizers();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tokenizers(ITokenizers value);
}
[DataContractAttribute]
public class OpenSearch.Client.AnalysisDescriptor : DescriptorBase`2<AnalysisDescriptor, IAnalysis> {
    [CompilerGeneratedAttribute]
private IAnalyzers <OpenSearch.Client.IAnalysis.Analyzers>k__BackingField;
    [CompilerGeneratedAttribute]
private ICharFilters <OpenSearch.Client.IAnalysis.CharFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private INormalizers <OpenSearch.Client.IAnalysis.Normalizers>k__BackingField;
    [CompilerGeneratedAttribute]
private ITokenFilters <OpenSearch.Client.IAnalysis.TokenFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private ITokenizers <OpenSearch.Client.IAnalysis.Tokenizers>k__BackingField;
    private IAnalyzers OpenSearch.Client.IAnalysis.Analyzers { get; private set; }
    private ICharFilters OpenSearch.Client.IAnalysis.CharFilters { get; private set; }
    private INormalizers OpenSearch.Client.IAnalysis.Normalizers { get; private set; }
    private ITokenFilters OpenSearch.Client.IAnalysis.TokenFilters { get; private set; }
    private ITokenizers OpenSearch.Client.IAnalysis.Tokenizers { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IAnalyzers OpenSearch.Client.IAnalysis.get_Analyzers();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalysis.set_Analyzers(IAnalyzers value);
    [CompilerGeneratedAttribute]
private sealed virtual override ICharFilters OpenSearch.Client.IAnalysis.get_CharFilters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalysis.set_CharFilters(ICharFilters value);
    [CompilerGeneratedAttribute]
private sealed virtual override INormalizers OpenSearch.Client.IAnalysis.get_Normalizers();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalysis.set_Normalizers(INormalizers value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITokenFilters OpenSearch.Client.IAnalysis.get_TokenFilters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalysis.set_TokenFilters(ITokenFilters value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITokenizers OpenSearch.Client.IAnalysis.get_Tokenizers();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalysis.set_Tokenizers(ITokenizers value);
    public AnalysisDescriptor Analyzers(Func`2<AnalyzersDescriptor, IPromise`1<IAnalyzers>> selector);
    public AnalysisDescriptor CharFilters(Func`2<CharFiltersDescriptor, IPromise`1<ICharFilters>> selector);
    public AnalysisDescriptor TokenFilters(Func`2<TokenFiltersDescriptor, IPromise`1<ITokenFilters>> selector);
    public AnalysisDescriptor Tokenizers(Func`2<TokenizersDescriptor, IPromise`1<ITokenizers>> selector);
    public AnalysisDescriptor Normalizers(Func`2<NormalizersDescriptor, IPromise`1<INormalizers>> selector);
}
[JsonFormatterAttribute("OpenSearch.Client.UnionListFormatter`3<OpenSearch.Client.AnalyzeCharFilters,System.String,OpenSearch.Client.ICharFilter>")]
public class OpenSearch.Client.AnalyzeCharFilters : List`1<Union`2<string, ICharFilter>> {
    public AnalyzeCharFilters(List`1<Union`2<string, ICharFilter>> tokenFilters);
    public AnalyzeCharFilters(String[] tokenFilters);
    public void Add(ICharFilter filter);
    public void Add(string filter);
    public static AnalyzeCharFilters op_Implicit(CharFilterBase tokenFilter);
    public static AnalyzeCharFilters op_Implicit(string tokenFilter);
    public static AnalyzeCharFilters op_Implicit(String[] tokenFilters);
}
public class OpenSearch.Client.AnalyzeCharFiltersDescriptor : DescriptorPromiseBase`2<AnalyzeCharFiltersDescriptor, AnalyzeCharFilters> {
    public AnalyzeCharFiltersDescriptor Name(string tokenFilter);
    private AnalyzeCharFiltersDescriptor AssignIfNotNull(ICharFilter filter);
    public AnalyzeCharFiltersDescriptor PatternReplace(Func`2<PatternReplaceCharFilterDescriptor, IPatternReplaceCharFilter> selector);
    public AnalyzeCharFiltersDescriptor HtmlStrip(Func`2<HtmlStripCharFilterDescriptor, IHtmlStripCharFilter> selector);
    public AnalyzeCharFiltersDescriptor Mapping(Func`2<MappingCharFilterDescriptor, IMappingCharFilter> selector);
    public AnalyzeCharFiltersDescriptor KuromojiIterationMark(Func`2<KuromojiIterationMarkCharFilterDescriptor, IKuromojiIterationMarkCharFilter> selector);
    public AnalyzeCharFiltersDescriptor IcuNormalization(Func`2<IcuNormalizationCharFilterDescriptor, IIcuNormalizationCharFilter> selector);
}
public class OpenSearch.Client.AnalyzeDescriptor : RequestDescriptorBase`3<AnalyzeDescriptor, AnalyzeRequestParameters, IAnalyzeRequest> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAnalyzeRequest.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IAnalyzeRequest.Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyzeCharFilters <OpenSearch.Client.IAnalyzeRequest.CharFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IAnalyzeRequest.Explain>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IAnalyzeRequest.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyzeTokenFilters <OpenSearch.Client.IAnalyzeRequest.Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAnalyzeRequest.Normalizer>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IAnalyzeRequest.Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<string, ITokenizer> <OpenSearch.Client.IAnalyzeRequest.Tokenizer>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.IAnalyzeRequest.Index { get; }
    private string OpenSearch.Client.IAnalyzeRequest.Analyzer { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IAnalyzeRequest.Attributes { get; private set; }
    private AnalyzeCharFilters OpenSearch.Client.IAnalyzeRequest.CharFilter { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IAnalyzeRequest.Explain { get; private set; }
    private Field OpenSearch.Client.IAnalyzeRequest.Field { get; private set; }
    private AnalyzeTokenFilters OpenSearch.Client.IAnalyzeRequest.Filter { get; private set; }
    private string OpenSearch.Client.IAnalyzeRequest.Normalizer { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IAnalyzeRequest.Text { get; private set; }
    private Union`2<string, ITokenizer> OpenSearch.Client.IAnalyzeRequest.Tokenizer { get; private set; }
    public AnalyzeDescriptor(IndexName index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IAnalyzeRequest.get_Index();
    public AnalyzeDescriptor Index(IndexName index);
    public AnalyzeDescriptor Index();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAnalyzeRequest.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalyzeRequest.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IAnalyzeRequest.get_Attributes();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalyzeRequest.set_Attributes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override AnalyzeCharFilters OpenSearch.Client.IAnalyzeRequest.get_CharFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalyzeRequest.set_CharFilter(AnalyzeCharFilters value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IAnalyzeRequest.get_Explain();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalyzeRequest.set_Explain(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IAnalyzeRequest.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalyzeRequest.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override AnalyzeTokenFilters OpenSearch.Client.IAnalyzeRequest.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalyzeRequest.set_Filter(AnalyzeTokenFilters value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAnalyzeRequest.get_Normalizer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalyzeRequest.set_Normalizer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IAnalyzeRequest.get_Text();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalyzeRequest.set_Text(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<string, ITokenizer> OpenSearch.Client.IAnalyzeRequest.get_Tokenizer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalyzeRequest.set_Tokenizer(Union`2<string, ITokenizer> value);
    public AnalyzeDescriptor Tokenizer(string tokenizer);
    public AnalyzeDescriptor Tokenizer(Func`2<AnalyzeTokenizersSelector, ITokenizer> tokenizer);
    public AnalyzeDescriptor Analyzer(string analyser);
    public AnalyzeDescriptor CharFilter(String[] charFilter);
    public AnalyzeDescriptor CharFilter(IEnumerable`1<string> charFilter);
    public AnalyzeDescriptor CharFilter(Func`2<AnalyzeCharFiltersDescriptor, IPromise`1<AnalyzeCharFilters>> charFilters);
    public AnalyzeDescriptor Filter(String[] filter);
    public AnalyzeDescriptor Filter(IEnumerable`1<string> filter);
    public AnalyzeDescriptor Filter(Func`2<AnalyzeTokenFiltersDescriptor, IPromise`1<AnalyzeTokenFilters>> tokenFilters);
    public AnalyzeDescriptor Normalizer(string normalizer);
    public AnalyzeDescriptor Field(Field field);
    public AnalyzeDescriptor Field(Expression`1<Func`2<T, TValue>> field);
    public AnalyzeDescriptor Field(Expression`1<Func`2<T, object>> field);
    public AnalyzeDescriptor Text(String[] text);
    public AnalyzeDescriptor Text(IEnumerable`1<string> text);
    public AnalyzeDescriptor Explain(Nullable`1<bool> explain);
    public AnalyzeDescriptor Attributes(String[] attributes);
    public AnalyzeDescriptor Attributes(IEnumerable`1<string> attributes);
}
[DataContractAttribute]
public class OpenSearch.Client.AnalyzeDetail : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<CharFilterDetail> <CharFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CustomAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<TokenDetail> <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenDetail <Tokenizer>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<CharFilterDetail> CharFilters { get; internal set; }
    [DataMemberAttribute]
public bool CustomAnalyzer { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<TokenDetail> Filters { get; internal set; }
    [DataMemberAttribute]
public TokenDetail Tokenizer { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<CharFilterDetail> get_CharFilters();
    [CompilerGeneratedAttribute]
internal void set_CharFilters(IReadOnlyCollection`1<CharFilterDetail> value);
    [CompilerGeneratedAttribute]
public bool get_CustomAnalyzer();
    [CompilerGeneratedAttribute]
internal void set_CustomAnalyzer(bool value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<TokenDetail> get_Filters();
    [CompilerGeneratedAttribute]
internal void set_Filters(IReadOnlyCollection`1<TokenDetail> value);
    [CompilerGeneratedAttribute]
public TokenDetail get_Tokenizer();
    [CompilerGeneratedAttribute]
internal void set_Tokenizer(TokenDetail value);
}
public abstract class OpenSearch.Client.AnalyzerBase : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    public string Type { get; protected set; }
    public string Version { get; public set; }
    protected AnalyzerBase(string type);
    [CompilerGeneratedAttribute]
public virtual string get_Type();
    [CompilerGeneratedAttribute]
protected virtual void set_Type(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(string value);
}
public abstract class OpenSearch.Client.AnalyzerDescriptorBase`2 : DescriptorBase`2<TAnalyzer, TAnalyzerInterface> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAnalyzer.Version>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.IAnalyzer.Type { get; }
    private string OpenSearch.Client.IAnalyzer.Version { get; private set; }
    protected abstract virtual string get_Type();
    private sealed virtual override string OpenSearch.Client.IAnalyzer.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAnalyzer.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAnalyzer.set_Version(string value);
    public TAnalyzer Version(string version);
}
public class OpenSearch.Client.AnalyzeRequest : PlainRequestBase`1<AnalyzeRequestParameters> {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyzeCharFilters <CharFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Explain>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyzeTokenFilters <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Normalizer>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<string, ITokenizer> <Tokenizer>k__BackingField;
    public string Analyzer { get; public set; }
    public IEnumerable`1<string> Attributes { get; public set; }
    public AnalyzeCharFilters CharFilter { get; public set; }
    public Nullable`1<bool> Explain { get; public set; }
    public Field Field { get; public set; }
    public AnalyzeTokenFilters Filter { get; public set; }
    public string Normalizer { get; public set; }
    public IEnumerable`1<string> Text { get; public set; }
    public Union`2<string, ITokenizer> Tokenizer { get; public set; }
    protected IAnalyzeRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IAnalyzeRequest.Index { get; }
    public AnalyzeRequest(IndexName indices, string textToAnalyze);
    public AnalyzeRequest(IndexName index);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Attributes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Attributes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual AnalyzeCharFilters get_CharFilter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CharFilter(AnalyzeCharFilters value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Explain();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Explain(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual AnalyzeTokenFilters get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(AnalyzeTokenFilters value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Normalizer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Normalizer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Text(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<string, ITokenizer> get_Tokenizer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tokenizer(Union`2<string, ITokenizer> value);
    protected IAnalyzeRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IAnalyzeRequest.get_Index();
}
[DataContractAttribute]
public class OpenSearch.Client.AnalyzeResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private AnalyzeDetail <Detail>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<AnalyzeToken> <Tokens>k__BackingField;
    [DataMemberAttribute]
public AnalyzeDetail Detail { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<AnalyzeToken> Tokens { get; internal set; }
    [CompilerGeneratedAttribute]
public AnalyzeDetail get_Detail();
    [CompilerGeneratedAttribute]
internal void set_Detail(AnalyzeDetail value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<AnalyzeToken> get_Tokens();
    [CompilerGeneratedAttribute]
internal void set_Tokens(IReadOnlyCollection`1<AnalyzeToken> value);
}
internal class OpenSearch.Client.AnalyzerFormatter : object {
    public sealed virtual IAnalyzer Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IAnalyzer value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, IAnalyzer value, IJsonFormatterResolver formatterResolver);
    private static TAnalyzer Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.Analyzers : IsADictionaryBase`2<string, IAnalyzer> {
    public Analyzers(IDictionary`2<string, IAnalyzer> container);
    public Analyzers(Dictionary`2<string, IAnalyzer> container);
    public sealed virtual void Add(string name, IAnalyzer analyzer);
}
public class OpenSearch.Client.AnalyzersDescriptor : IsADictionaryDescriptorBase`4<AnalyzersDescriptor, IAnalyzers, string, IAnalyzer> {
    public AnalyzersDescriptor UserDefined(string name, IAnalyzer analyzer);
    public AnalyzersDescriptor Custom(string name, Func`2<CustomAnalyzerDescriptor, ICustomAnalyzer> selector);
    public AnalyzersDescriptor Keyword(string name, Func`2<KeywordAnalyzerDescriptor, IKeywordAnalyzer> selector);
    public AnalyzersDescriptor Language(string name, Func`2<LanguageAnalyzerDescriptor, ILanguageAnalyzer> selector);
    public AnalyzersDescriptor Pattern(string name, Func`2<PatternAnalyzerDescriptor, IPatternAnalyzer> selector);
    public AnalyzersDescriptor Simple(string name, Func`2<SimpleAnalyzerDescriptor, ISimpleAnalyzer> selector);
    public AnalyzersDescriptor Snowball(string name, Func`2<SnowballAnalyzerDescriptor, ISnowballAnalyzer> selector);
    public AnalyzersDescriptor Standard(string name, Func`2<StandardAnalyzerDescriptor, IStandardAnalyzer> selector);
    public AnalyzersDescriptor Stop(string name, Func`2<StopAnalyzerDescriptor, IStopAnalyzer> selector);
    public AnalyzersDescriptor Whitespace(string name, Func`2<WhitespaceAnalyzerDescriptor, IWhitespaceAnalyzer> selector);
    public AnalyzersDescriptor Fingerprint(string name, Func`2<FingerprintAnalyzerDescriptor, IFingerprintAnalyzer> selector);
    public AnalyzersDescriptor Kuromoji(string name, Func`2<KuromojiAnalyzerDescriptor, IKuromojiAnalyzer> selector);
    public AnalyzersDescriptor Nori(string name, Func`2<NoriAnalyzerDescriptor, INoriAnalyzer> selector);
    public AnalyzersDescriptor Icu(string name, Func`2<IcuAnalyzerDescriptor, IIcuAnalyzer> selector);
}
[DataContractAttribute]
public class OpenSearch.Client.AnalyzeToken : object {
    [CompilerGeneratedAttribute]
private long <EndOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <PositionLength>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StartOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public long EndOffset { get; internal set; }
    [DataMemberAttribute]
public long Position { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<long> PositionLength { get; internal set; }
    [DataMemberAttribute]
public long StartOffset { get; internal set; }
    [DataMemberAttribute]
public string Token { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_EndOffset();
    [CompilerGeneratedAttribute]
internal void set_EndOffset(long value);
    [CompilerGeneratedAttribute]
public long get_Position();
    [CompilerGeneratedAttribute]
internal void set_Position(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_PositionLength();
    [CompilerGeneratedAttribute]
internal void set_PositionLength(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public long get_StartOffset();
    [CompilerGeneratedAttribute]
internal void set_StartOffset(long value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
internal void set_Token(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.UnionListFormatter`3<OpenSearch.Client.AnalyzeTokenFilters,System.String,OpenSearch.Client.ITokenFilter>")]
public class OpenSearch.Client.AnalyzeTokenFilters : List`1<Union`2<string, ITokenFilter>> {
    public AnalyzeTokenFilters(List`1<Union`2<string, ITokenFilter>> tokenFilters);
    public AnalyzeTokenFilters(String[] tokenFilters);
    public void Add(ITokenFilter filter);
    public static AnalyzeTokenFilters op_Implicit(TokenFilterBase tokenFilter);
    public static AnalyzeTokenFilters op_Implicit(string tokenFilter);
    public static AnalyzeTokenFilters op_Implicit(String[] tokenFilters);
}
public class OpenSearch.Client.AnalyzeTokenFiltersDescriptor : DescriptorPromiseBase`2<AnalyzeTokenFiltersDescriptor, AnalyzeTokenFilters> {
    public AnalyzeTokenFiltersDescriptor Name(string tokenFilter);
    private AnalyzeTokenFiltersDescriptor AssignIfNotNull(ITokenFilter filter);
    public AnalyzeTokenFiltersDescriptor DictionaryDecompounder(Func`2<DictionaryDecompounderTokenFilterDescriptor, IDictionaryDecompounderTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor HyphenationDecompounder(Func`2<HyphenationDecompounderTokenFilterDescriptor, IHyphenationDecompounderTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor EdgeNGram(Func`2<EdgeNGramTokenFilterDescriptor, IEdgeNGramTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Phonetic(Func`2<PhoneticTokenFilterDescriptor, IPhoneticTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Shingle(Func`2<ShingleTokenFilterDescriptor, IShingleTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Stop(Func`2<StopTokenFilterDescriptor, IStopTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Synonym(Func`2<SynonymTokenFilterDescriptor, ISynonymTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor SynonymGraph(Func`2<SynonymGraphTokenFilterDescriptor, ISynonymGraphTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor WordDelimiter(Func`2<WordDelimiterTokenFilterDescriptor, IWordDelimiterTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor WordDelimiterGraph(Func`2<WordDelimiterGraphTokenFilterDescriptor, IWordDelimiterGraphTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor AsciiFolding(Func`2<AsciiFoldingTokenFilterDescriptor, IAsciiFoldingTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor CommonGrams(Func`2<CommonGramsTokenFilterDescriptor, ICommonGramsTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor DelimitedPayload(Func`2<DelimitedPayloadTokenFilterDescriptor, IDelimitedPayloadTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Elision(Func`2<ElisionTokenFilterDescriptor, IElisionTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Hunspell(Func`2<HunspellTokenFilterDescriptor, IHunspellTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor KeepTypes(Func`2<KeepTypesTokenFilterDescriptor, IKeepTypesTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor KeepWords(Func`2<KeepWordsTokenFilterDescriptor, IKeepWordsTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor KeywordMarker(Func`2<KeywordMarkerTokenFilterDescriptor, IKeywordMarkerTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor KStem(Func`2<KStemTokenFilterDescriptor, IKStemTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Length(Func`2<LengthTokenFilterDescriptor, ILengthTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor LimitTokenCount(Func`2<LimitTokenCountTokenFilterDescriptor, ILimitTokenCountTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Lowercase(Func`2<LowercaseTokenFilterDescriptor, ILowercaseTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor NGram(Func`2<NGramTokenFilterDescriptor, INGramTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor PatternCapture(Func`2<PatternCaptureTokenFilterDescriptor, IPatternCaptureTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor PatternReplace(Func`2<PatternReplaceTokenFilterDescriptor, IPatternReplaceTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor PorterStem(Func`2<PorterStemTokenFilterDescriptor, IPorterStemTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Reverse(Func`2<ReverseTokenFilterDescriptor, IReverseTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Snowball(Func`2<SnowballTokenFilterDescriptor, ISnowballTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Condition(Func`2<ConditionTokenFilterDescriptor, IConditionTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Stemmer(Func`2<StemmerTokenFilterDescriptor, IStemmerTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Predicate(Func`2<PredicateTokenFilterDescriptor, IPredicateTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor StemmerOverride(Func`2<StemmerOverrideTokenFilterDescriptor, IStemmerOverrideTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Trim(Func`2<TrimTokenFilterDescriptor, ITrimTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Truncate(Func`2<TruncateTokenFilterDescriptor, ITruncateTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Unique(Func`2<UniqueTokenFilterDescriptor, IUniqueTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Uppercase(Func`2<UppercaseTokenFilterDescriptor, IUppercaseTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Fingerprint(Func`2<FingerprintTokenFilterDescriptor, IFingerprintTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor KuromojiStemmer(Func`2<KuromojiStemmerTokenFilterDescriptor, IKuromojiStemmerTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor KuromojiReadingForm(Func`2<KuromojiReadingFormTokenFilterDescriptor, IKuromojiReadingFormTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor KuromojiPartOfSpeech(Func`2<KuromojiPartOfSpeechTokenFilterDescriptor, IKuromojiPartOfSpeechTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor IcuCollation(Func`2<IcuCollationTokenFilterDescriptor, IIcuCollationTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor IcuFolding(Func`2<IcuFoldingTokenFilterDescriptor, IIcuFoldingTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor IcuNormalization(Func`2<IcuNormalizationTokenFilterDescriptor, IIcuNormalizationTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor IcuTransform(Func`2<IcuTransformTokenFilterDescriptor, IIcuTransformTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor NoriPartOfSpeech(Func`2<NoriPartOfSpeechTokenFilterDescriptor, INoriPartOfSpeechTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor Multiplexer(Func`2<MultiplexerTokenFilterDescriptor, IMultiplexerTokenFilter> selector);
    public AnalyzeTokenFiltersDescriptor RemoveDuplicates(Func`2<RemoveDuplicatesTokenFilterDescriptor, IRemoveDuplicatesTokenFilter> selector);
}
public class OpenSearch.Client.AnalyzeTokenizersSelector : SelectorBase {
    public ITokenizer EdgeNGram(Func`2<EdgeNGramTokenizerDescriptor, IEdgeNGramTokenizer> selector);
    public ITokenizer NGram(Func`2<NGramTokenizerDescriptor, INGramTokenizer> selector);
    public ITokenizer Keyword(Func`2<KeywordTokenizerDescriptor, IKeywordTokenizer> selector);
    public ITokenizer Letter(Func`2<LetterTokenizerDescriptor, ILetterTokenizer> selector);
    public ITokenizer Lowercase(Func`2<LowercaseTokenizerDescriptor, ILowercaseTokenizer> selector);
    public ITokenizer PathHierarchy(Func`2<PathHierarchyTokenizerDescriptor, IPathHierarchyTokenizer> selector);
    public ITokenizer Pattern(Func`2<PatternTokenizerDescriptor, IPatternTokenizer> selector);
    public ITokenizer Standard(Func`2<StandardTokenizerDescriptor, IStandardTokenizer> selector);
    public ITokenizer UaxEmailUrl(Func`2<UaxEmailUrlTokenizerDescriptor, IUaxEmailUrlTokenizer> selector);
    public ITokenizer Whitespace(Func`2<WhitespaceTokenizerDescriptor, IWhitespaceTokenizer> selector);
    public ITokenizer Kuromoji(Func`2<KuromojiTokenizerDescriptor, IKuromojiTokenizer> selector);
    public ITokenizer Icu(Func`2<IcuTokenizerDescriptor, IIcuTokenizer> selector);
    public ITokenizer Nori(Func`2<NoriTokenizerDescriptor, INoriTokenizer> selector);
    public ITokenizer CharGroup(Func`2<CharGroupTokenizerDescriptor, ICharGroupTokenizer> selector);
}
internal class OpenSearch.Client.ApiUrls : object {
    private static RouteValues EmptyRouteValues;
    private string _errorMessageSuffix;
    private string _fixedUrl;
    [CompilerGeneratedAttribute]
private Dictionary`2<int, List`1<UrlLookup>> <Routes>k__BackingField;
    public Dictionary`2<int, List`1<UrlLookup>> Routes { get; }
    internal ApiUrls(String[] routes);
    private static ApiUrls();
    [CompilerGeneratedAttribute]
public Dictionary`2<int, List`1<UrlLookup>> get_Routes();
    public string Resolve(RouteValues routeValues, IConnectionSettingsValues settings);
}
internal static class OpenSearch.Client.ApiUrlsLookups : object {
    internal static ApiUrls NoNamespaceBulk;
    internal static ApiUrls CatAliases;
    internal static ApiUrls CatAllocation;
    internal static ApiUrls CatCount;
    internal static ApiUrls CatClusterManager;
    internal static ApiUrls CatFielddata;
    internal static ApiUrls CatHealth;
    internal static ApiUrls CatHelp;
    internal static ApiUrls CatIndices;
    internal static ApiUrls CatMaster;
    internal static ApiUrls CatNodeAttributes;
    internal static ApiUrls CatNodes;
    internal static ApiUrls CatPendingTasks;
    internal static ApiUrls CatPlugins;
    internal static ApiUrls CatRecovery;
    internal static ApiUrls CatRepositories;
    internal static ApiUrls CatSegments;
    internal static ApiUrls CatShards;
    internal static ApiUrls CatSnapshots;
    internal static ApiUrls CatTasks;
    internal static ApiUrls CatTemplates;
    internal static ApiUrls CatThreadPool;
    internal static ApiUrls NoNamespaceClearScroll;
    internal static ApiUrls ClusterAllocationExplain;
    internal static ApiUrls ClusterDeleteVotingConfigExclusions;
    internal static ApiUrls ClusterGetSettings;
    internal static ApiUrls ClusterHealth;
    internal static ApiUrls ClusterPendingTasks;
    internal static ApiUrls ClusterPostVotingConfigExclusions;
    internal static ApiUrls ClusterPutSettings;
    internal static ApiUrls ClusterRemoteInfo;
    internal static ApiUrls ClusterReroute;
    internal static ApiUrls ClusterState;
    internal static ApiUrls ClusterStats;
    internal static ApiUrls NoNamespaceCount;
    internal static ApiUrls NoNamespaceCreate;
    internal static ApiUrls DanglingIndicesDeleteDanglingIndex;
    internal static ApiUrls DanglingIndicesImportDanglingIndex;
    internal static ApiUrls DanglingIndicesList;
    internal static ApiUrls NoNamespaceDelete;
    internal static ApiUrls NoNamespaceDeleteByQuery;
    internal static ApiUrls NoNamespaceDeleteByQueryRethrottle;
    internal static ApiUrls NoNamespaceDeleteScript;
    internal static ApiUrls NoNamespaceDocumentExists;
    internal static ApiUrls NoNamespaceSourceExists;
    internal static ApiUrls NoNamespaceExplain;
    internal static ApiUrls NoNamespaceFieldCapabilities;
    internal static ApiUrls NoNamespaceGet;
    internal static ApiUrls NoNamespaceGetScript;
    internal static ApiUrls NoNamespaceSource;
    internal static ApiUrls NoNamespaceIndex;
    internal static ApiUrls IndicesAddBlock;
    internal static ApiUrls IndicesAnalyze;
    internal static ApiUrls IndicesClearCache;
    internal static ApiUrls IndicesClone;
    internal static ApiUrls IndicesClose;
    internal static ApiUrls IndicesCreate;
    internal static ApiUrls IndicesDelete;
    internal static ApiUrls IndicesDeleteAlias;
    internal static ApiUrls IndicesDeleteTemplate;
    internal static ApiUrls IndicesExists;
    internal static ApiUrls IndicesAliasExists;
    internal static ApiUrls IndicesTemplateExists;
    internal static ApiUrls IndicesTypeExists;
    internal static ApiUrls IndicesFlush;
    internal static ApiUrls IndicesForceMerge;
    internal static ApiUrls IndicesGet;
    internal static ApiUrls IndicesGetAlias;
    internal static ApiUrls IndicesGetFieldMapping;
    internal static ApiUrls IndicesGetMapping;
    internal static ApiUrls IndicesGetSettings;
    internal static ApiUrls IndicesGetTemplate;
    internal static ApiUrls IndicesOpen;
    internal static ApiUrls IndicesPutAlias;
    internal static ApiUrls IndicesPutMapping;
    internal static ApiUrls IndicesUpdateSettings;
    internal static ApiUrls IndicesPutTemplate;
    internal static ApiUrls IndicesRecoveryStatus;
    internal static ApiUrls IndicesRefresh;
    internal static ApiUrls IndicesResolve;
    internal static ApiUrls IndicesRollover;
    internal static ApiUrls IndicesSegments;
    internal static ApiUrls IndicesShardStores;
    internal static ApiUrls IndicesShrink;
    internal static ApiUrls IndicesSplit;
    internal static ApiUrls IndicesBulkAlias;
    internal static ApiUrls IndicesValidateQuery;
    internal static ApiUrls NoNamespaceRootNodeInfo;
    internal static ApiUrls IngestDeletePipeline;
    internal static ApiUrls IngestGetPipeline;
    internal static ApiUrls IngestGrokProcessorPatterns;
    internal static ApiUrls IngestPutPipeline;
    internal static ApiUrls IngestSimulatePipeline;
    internal static ApiUrls NoNamespaceMultiGet;
    internal static ApiUrls NoNamespaceMultiSearch;
    internal static ApiUrls NoNamespaceMultiSearchTemplate;
    internal static ApiUrls NoNamespaceMultiTermVectors;
    internal static ApiUrls NodesHotThreads;
    internal static ApiUrls NodesInfo;
    internal static ApiUrls NodesReloadSecureSettings;
    internal static ApiUrls NodesStats;
    internal static ApiUrls NodesUsage;
    internal static ApiUrls NoNamespacePing;
    internal static ApiUrls NoNamespacePutScript;
    internal static ApiUrls NoNamespaceReindexOnServer;
    internal static ApiUrls NoNamespaceReindexRethrottle;
    internal static ApiUrls NoNamespaceRenderSearchTemplate;
    internal static ApiUrls NoNamespaceExecutePainlessScript;
    internal static ApiUrls NoNamespaceScroll;
    internal static ApiUrls NoNamespaceSearch;
    internal static ApiUrls NoNamespaceSearchShards;
    internal static ApiUrls NoNamespaceSearchTemplate;
    internal static ApiUrls SnapshotCleanupRepository;
    internal static ApiUrls SnapshotClone;
    internal static ApiUrls SnapshotSnapshot;
    internal static ApiUrls SnapshotCreateRepository;
    internal static ApiUrls SnapshotDelete;
    internal static ApiUrls SnapshotDeleteRepository;
    internal static ApiUrls SnapshotGet;
    internal static ApiUrls SnapshotGetRepository;
    internal static ApiUrls SnapshotRestore;
    internal static ApiUrls SnapshotStatus;
    internal static ApiUrls SnapshotVerifyRepository;
    internal static ApiUrls TasksCancel;
    internal static ApiUrls TasksGetTask;
    internal static ApiUrls TasksList;
    internal static ApiUrls NoNamespaceTermVectors;
    internal static ApiUrls NoNamespaceUpdate;
    internal static ApiUrls NoNamespaceUpdateByQuery;
    internal static ApiUrls NoNamespaceUpdateByQueryRethrottle;
    internal static ApiUrls CatAllPitSegments;
    internal static ApiUrls CatPitSegments;
    internal static ApiUrls CatSegmentReplication;
    internal static ApiUrls ClusterDeleteComponentTemplate;
    internal static ApiUrls ClusterComponentTemplateExists;
    internal static ApiUrls ClusterGetComponentTemplate;
    internal static ApiUrls ClusterPutComponentTemplate;
    internal static ApiUrls NoNamespaceCreatePit;
    internal static ApiUrls NoNamespaceDeleteAllPits;
    internal static ApiUrls NoNamespaceDeletePit;
    internal static ApiUrls NoNamespaceGetAllPits;
    internal static ApiUrls IndicesDeleteComposableTemplate;
    internal static ApiUrls IndicesComposableTemplateExists;
    internal static ApiUrls IndicesGetComposableTemplate;
    internal static ApiUrls IndicesPutComposableTemplate;
    internal static ApiUrls IndicesStats;
    private static ApiUrlsLookups();
}
public class OpenSearch.Client.AppendProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowDuplicates>k__BackingField;
    public Field Field { get; public set; }
    public IEnumerable`1<object> Value { get; public set; }
    public Nullable`1<bool> AllowDuplicates { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<object> get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(IEnumerable`1<object> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AllowDuplicates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowDuplicates(Nullable`1<bool> value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.AppendProcessorDescriptor`1 : ProcessorDescriptorBase`2<AppendProcessorDescriptor`1<T>, IAppendProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IAppendProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <OpenSearch.Client.IAppendProcessor.Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IAppendProcessor.AllowDuplicates>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IAppendProcessor.Field { get; private set; }
    private IEnumerable`1<object> OpenSearch.Client.IAppendProcessor.Value { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IAppendProcessor.AllowDuplicates { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IAppendProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAppendProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<object> OpenSearch.Client.IAppendProcessor.get_Value();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAppendProcessor.set_Value(IEnumerable`1<object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IAppendProcessor.get_AllowDuplicates();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAppendProcessor.set_AllowDuplicates(Nullable`1<bool> value);
    public AppendProcessorDescriptor`1<T> Field(Field field);
    public AppendProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public AppendProcessorDescriptor`1<T> Value(IEnumerable`1<TValue> values);
    public AppendProcessorDescriptor`1<T> Value(TValue[] values);
    public AppendProcessorDescriptor`1<T> AllowDuplicates(Nullable`1<bool> allowDuplicates);
}
public abstract class OpenSearch.Client.ArbitraryBodyHttpRequestBase`1 : ArbitraryHttpRequestBase`1<TParams> {
    [CompilerGeneratedAttribute]
private PostData <Body>k__BackingField;
    public PostData Body { get; public set; }
    protected ArbitraryBodyHttpRequestBase`1(string path);
    [CompilerGeneratedAttribute]
public sealed virtual PostData get_Body();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Body(PostData value);
}
public abstract class OpenSearch.Client.ArbitraryBodyHttpRequestDescriptorBase`3 : ArbitraryHttpRequestDescriptorBase`3<TSelf, TParams, TInterface> {
    [CompilerGeneratedAttribute]
private PostData <OpenSearch.Client.IArbitraryBodyHttpRequest<TParams>.Body>k__BackingField;
    private PostData OpenSearch.Client.IArbitraryBodyHttpRequest<TParams>.Body { get; private set; }
    protected ArbitraryBodyHttpRequestDescriptorBase`3(string path);
    [CompilerGeneratedAttribute]
private sealed virtual override PostData OpenSearch.Client.IArbitraryBodyHttpRequest<TParams>.get_Body();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IArbitraryBodyHttpRequest<TParams>.set_Body(PostData value);
    public TSelf Body(PostData body);
    private TSelf Body(T data, Func`2<T, PostData> factory);
    private TSelf Body(Nullable`1<T> data, Func`2<T, PostData> factory);
    public TSelf Body(Byte[] bytes);
    public TSelf Body(string body);
    public TSelf MultiJsonBody(IEnumerable`1<string> items);
    public TSelf MultiJsonBody(IEnumerable`1<object> items);
    public TSelf StreamableBody(T state, Action`2<T, Stream> syncWriter, Func`4<T, Stream, CancellationToken, Task> asyncWriter);
    public TSelf SerializableBody(T o);
}
public abstract class OpenSearch.Client.ArbitraryHttpRequestBase`1 : PlainRequestBase`1<TParams> {
    private string _path;
    public string Path { get; public set; }
    public Dictionary`2<string, object> QueryString { get; public set; }
    internal ApiUrls ApiUrls { get; }
    protected ArbitraryHttpRequestBase`1(string path);
    public sealed virtual string get_Path();
    public sealed virtual void set_Path(string value);
    public Dictionary`2<string, object> get_QueryString();
    public void set_QueryString(Dictionary`2<string, object> value);
    internal virtual ApiUrls get_ApiUrls();
    protected virtual string ResolveUrl(RouteValues routeValues, IConnectionSettingsValues settings);
    private sealed virtual override string OpenSearch.Client.IRequest.GetUrl(IConnectionSettingsValues settings);
}
public abstract class OpenSearch.Client.ArbitraryHttpRequestDescriptorBase`3 : RequestDescriptorBase`3<TSelf, TParams, TInterface> {
    private string _path;
    public string Path { get; public set; }
    internal ApiUrls ApiUrls { get; }
    protected ArbitraryHttpRequestDescriptorBase`3(string path);
    public sealed virtual string get_Path();
    public sealed virtual void set_Path(string value);
    public TSelf QueryString(Dictionary`2<string, object> queryString);
    public TSelf QueryString(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
    internal virtual ApiUrls get_ApiUrls();
    protected virtual string ResolveUrl(RouteValues routeValues, IConnectionSettingsValues settings);
    private sealed virtual override string OpenSearch.Client.IRequest.GetUrl(IConnectionSettingsValues settings);
}
[DataContractAttribute]
public class OpenSearch.Client.ArchitectureStats : object {
    [CompilerGeneratedAttribute]
private string <Architecture>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [DataMemberAttribute]
public string Architecture { get; public set; }
    [DataMemberAttribute]
public int Count { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Architecture();
    [CompilerGeneratedAttribute]
public void set_Architecture(string value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
}
public class OpenSearch.Client.AsciiFoldingTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreserveOriginal>k__BackingField;
    public Nullable`1<bool> PreserveOriginal { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PreserveOriginal();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreserveOriginal(Nullable`1<bool> value);
}
public class OpenSearch.Client.AsciiFoldingTokenFilterDescriptor : TokenFilterDescriptorBase`2<AsciiFoldingTokenFilterDescriptor, IAsciiFoldingTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IAsciiFoldingTokenFilter.PreserveOriginal>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.IAsciiFoldingTokenFilter.PreserveOriginal { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IAsciiFoldingTokenFilter.get_PreserveOriginal();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAsciiFoldingTokenFilter.set_PreserveOriginal(Nullable`1<bool> value);
    public AsciiFoldingTokenFilterDescriptor PreserveOriginal(Nullable`1<bool> preserve);
}
[JsonFormatterAttribute("OpenSearch.Client.AttachmentFormatter")]
public class OpenSearch.Client.Attachment : object {
    [CompilerGeneratedAttribute]
private string <Author>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ContentLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Date>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DetectLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IndexedCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keywords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [DataMemberAttribute]
public string Author { get; public set; }
    [IgnoreDataMemberAttribute]
[IgnoreAttribute]
public bool ContainsMetadata { get; }
    [DataMemberAttribute]
public string Content { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> ContentLength { get; public set; }
    [DataMemberAttribute]
public string ContentType { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> Date { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> DetectLanguage { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> IndexedCharacters { get; public set; }
    [DataMemberAttribute]
public string Keywords { get; public set; }
    [DataMemberAttribute]
public string Language { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Title { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Author();
    [CompilerGeneratedAttribute]
public void set_Author(string value);
    public bool get_ContainsMetadata();
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ContentLength();
    [CompilerGeneratedAttribute]
public void set_ContentLength(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Date();
    [CompilerGeneratedAttribute]
public void set_Date(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DetectLanguage();
    [CompilerGeneratedAttribute]
public void set_DetectLanguage(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IndexedCharacters();
    [CompilerGeneratedAttribute]
public void set_IndexedCharacters(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Keywords();
    [CompilerGeneratedAttribute]
public void set_Keywords(string value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
}
internal class OpenSearch.Client.AttachmentFormatter : object {
    private static AutomataDictionary AutomataDictionary;
    private static AttachmentFormatter();
    public sealed virtual Attachment Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Attachment value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.AttachmentProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IndexedCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <IndexedCharactersField>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <ResourceName>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public Nullable`1<long> IndexedCharacters { get; public set; }
    public Field IndexedCharactersField { get; public set; }
    public IEnumerable`1<string> Properties { get; public set; }
    public Field TargetField { get; public set; }
    public Field ResourceName { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_IndexedCharacters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexedCharacters(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_IndexedCharactersField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexedCharactersField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Properties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Properties(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_ResourceName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ResourceName(Field value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.AttachmentProcessorDescriptor`1 : ProcessorDescriptorBase`2<AttachmentProcessorDescriptor`1<T>, IAttachmentProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IAttachmentProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IAttachmentProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IAttachmentProcessor.IndexedCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IAttachmentProcessor.IndexedCharactersField>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IAttachmentProcessor.Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IAttachmentProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IAttachmentProcessor.ResourceName>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IAttachmentProcessor.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IAttachmentProcessor.IgnoreMissing { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IAttachmentProcessor.IndexedCharacters { get; private set; }
    private Field OpenSearch.Client.IAttachmentProcessor.IndexedCharactersField { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IAttachmentProcessor.Properties { get; private set; }
    private Field OpenSearch.Client.IAttachmentProcessor.TargetField { get; private set; }
    private Field OpenSearch.Client.IAttachmentProcessor.ResourceName { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IAttachmentProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAttachmentProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IAttachmentProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAttachmentProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IAttachmentProcessor.get_IndexedCharacters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAttachmentProcessor.set_IndexedCharacters(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IAttachmentProcessor.get_IndexedCharactersField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAttachmentProcessor.set_IndexedCharactersField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IAttachmentProcessor.get_Properties();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAttachmentProcessor.set_Properties(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IAttachmentProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAttachmentProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IAttachmentProcessor.get_ResourceName();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAttachmentProcessor.set_ResourceName(Field value);
    public AttachmentProcessorDescriptor`1<T> Field(Field field);
    public AttachmentProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public AttachmentProcessorDescriptor`1<T> TargetField(Field field);
    public AttachmentProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public AttachmentProcessorDescriptor`1<T> IndexedCharacters(Nullable`1<long> indexedCharacters);
    public AttachmentProcessorDescriptor`1<T> IndexedCharactersField(Field field);
    public AttachmentProcessorDescriptor`1<T> IndexedCharactersField(Expression`1<Func`2<T, TValue>> objectPath);
    public AttachmentProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
    public AttachmentProcessorDescriptor`1<T> Properties(IEnumerable`1<string> properties);
    public AttachmentProcessorDescriptor`1<T> Properties(String[] properties);
    public AttachmentProcessorDescriptor`1<T> ResourceName(Field field);
    public AttachmentProcessorDescriptor`1<T> ResourceName(Expression`1<Func`2<T, TValue>> objectPath);
}
public class OpenSearch.Client.AutoDateHistogramAggregate : MultiBucketAggregate`1<DateHistogramBucket> {
    [CompilerGeneratedAttribute]
private DateMathTime <AutoInterval>k__BackingField;
    public DateMathTime AutoInterval { get; internal set; }
    [CompilerGeneratedAttribute]
public DateMathTime get_AutoInterval();
    [CompilerGeneratedAttribute]
internal void set_AutoInterval(DateMathTime value);
}
public class OpenSearch.Client.AutoDateHistogramAggregation : BucketAggregationBase {
    private string _format;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Buckets>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Params>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeZone>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MinimumInterval> <MinimumInterval>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<int> Buckets { get; public set; }
    public string Format { get; public set; }
    public Nullable`1<DateTime> Missing { get; public set; }
    public string Offset { get; public set; }
    public IDictionary`2<string, object> Params { get; public set; }
    public IScript Script { get; public set; }
    public string TimeZone { get; public set; }
    public Nullable`1<MinimumInterval> MinimumInterval { get; public set; }
    public AutoDateHistogramAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Buckets();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Buckets(Nullable`1<int> value);
    public sealed virtual string get_Format();
    public sealed virtual void set_Format(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Offset();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Offset(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Params();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Params(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TimeZone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeZone(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<MinimumInterval> get_MinimumInterval();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumInterval(Nullable`1<MinimumInterval> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.AutoDateHistogramAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<AutoDateHistogramAggregationDescriptor`1<T>, IAutoDateHistogramAggregation, T> {
    private string _format;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IAutoDateHistogramAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IAutoDateHistogramAggregation.Buckets>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <OpenSearch.Client.IAutoDateHistogramAggregation.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAutoDateHistogramAggregation.Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IAutoDateHistogramAggregation.Params>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IAutoDateHistogramAggregation.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAutoDateHistogramAggregation.TimeZone>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MinimumInterval> <OpenSearch.Client.IAutoDateHistogramAggregation.MinimumInterval>k__BackingField;
    private Field OpenSearch.Client.IAutoDateHistogramAggregation.Field { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IAutoDateHistogramAggregation.Buckets { get; private set; }
    private string OpenSearch.Client.IAutoDateHistogramAggregation.Format { get; private set; }
    private Nullable`1<DateTime> OpenSearch.Client.IAutoDateHistogramAggregation.Missing { get; private set; }
    private string OpenSearch.Client.IAutoDateHistogramAggregation.Offset { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IAutoDateHistogramAggregation.Params { get; private set; }
    private IScript OpenSearch.Client.IAutoDateHistogramAggregation.Script { get; private set; }
    private string OpenSearch.Client.IAutoDateHistogramAggregation.TimeZone { get; private set; }
    private Nullable`1<MinimumInterval> OpenSearch.Client.IAutoDateHistogramAggregation.MinimumInterval { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IAutoDateHistogramAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAutoDateHistogramAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IAutoDateHistogramAggregation.get_Buckets();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAutoDateHistogramAggregation.set_Buckets(Nullable`1<int> value);
    private sealed virtual override string OpenSearch.Client.IAutoDateHistogramAggregation.get_Format();
    private sealed virtual override void OpenSearch.Client.IAutoDateHistogramAggregation.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DateTime> OpenSearch.Client.IAutoDateHistogramAggregation.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAutoDateHistogramAggregation.set_Missing(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAutoDateHistogramAggregation.get_Offset();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAutoDateHistogramAggregation.set_Offset(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IAutoDateHistogramAggregation.get_Params();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAutoDateHistogramAggregation.set_Params(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IAutoDateHistogramAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAutoDateHistogramAggregation.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAutoDateHistogramAggregation.get_TimeZone();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAutoDateHistogramAggregation.set_TimeZone(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<MinimumInterval> OpenSearch.Client.IAutoDateHistogramAggregation.get_MinimumInterval();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAutoDateHistogramAggregation.set_MinimumInterval(Nullable`1<MinimumInterval> value);
    public AutoDateHistogramAggregationDescriptor`1<T> Field(Field field);
    public AutoDateHistogramAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public AutoDateHistogramAggregationDescriptor`1<T> Buckets(Nullable`1<int> buckets);
    public AutoDateHistogramAggregationDescriptor`1<T> Script(string script);
    public AutoDateHistogramAggregationDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public AutoDateHistogramAggregationDescriptor`1<T> Format(string format);
    public AutoDateHistogramAggregationDescriptor`1<T> TimeZone(string timeZone);
    public AutoDateHistogramAggregationDescriptor`1<T> Offset(string offset);
    public AutoDateHistogramAggregationDescriptor`1<T> Missing(Nullable`1<DateTime> missing);
    public AutoDateHistogramAggregationDescriptor`1<T> MinimumInterval(Nullable`1<MinimumInterval> minimumInterval);
}
[JsonFormatterAttribute("OpenSearch.Client.AutoExpandReplicasFormatter")]
public class OpenSearch.Client.AutoExpandReplicas : object {
    private static string AllMaxReplicas;
    private Union`2<Nullable`1<int>, string> _maxReplicas;
    private Nullable`1<int> _minReplicas;
    [CompilerGeneratedAttribute]
private static AutoExpandReplicas <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    public static AutoExpandReplicas Disabled { get; }
    public bool Enabled { get; private set; }
    public Union`2<Nullable`1<int>, string> MaxReplicas { get; private set; }
    public Nullable`1<int> MinReplicas { get; private set; }
    private static AutoExpandReplicas();
    [CompilerGeneratedAttribute]
public static AutoExpandReplicas get_Disabled();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
private void set_Enabled(bool value);
    public Union`2<Nullable`1<int>, string> get_MaxReplicas();
    private void set_MaxReplicas(Union`2<Nullable`1<int>, string> value);
    public Nullable`1<int> get_MinReplicas();
    private void set_MinReplicas(Nullable`1<int> value);
    public static AutoExpandReplicas Create(int minReplicas, int maxReplicas);
    public static AutoExpandReplicas Create(int minReplicas);
    public static AutoExpandReplicas Create(string value);
    public static AutoExpandReplicas op_Implicit(string value);
    public virtual string ToString();
}
internal class OpenSearch.Client.AutoExpandReplicasFormatter : object {
    public sealed virtual AutoExpandReplicas Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, AutoExpandReplicas value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.AverageAggregation : FormattableMetricAggregationBase {
    public AverageAggregation(string name, Field field);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.AverageAggregationDescriptor`1 : FormattableMetricAggregationDescriptorBase`3<AverageAggregationDescriptor`1<T>, IAverageAggregation, T> {
}
public class OpenSearch.Client.AverageBucketAggregation : PipelineAggregationBase {
    public AverageBucketAggregation(string name, SingleBucketsPath bucketsPath);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.AverageBucketAggregationDescriptor : PipelineAggregationDescriptorBase`3<AverageBucketAggregationDescriptor, IAverageBucketAggregation, SingleBucketsPath> {
}
public class OpenSearch.Client.AzureRepository : object {
    [CompilerGeneratedAttribute]
private IAzureRepositorySettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public IAzureRepositorySettings Settings { get; public set; }
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    public string Type { get; }
    public AzureRepository(IAzureRepositorySettings settings);
    [CompilerGeneratedAttribute]
public sealed virtual IAzureRepositorySettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IAzureRepositorySettings value);
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
}
public class OpenSearch.Client.AzureRepositoryDescriptor : DescriptorBase`2<AzureRepositoryDescriptor, IAzureRepository> {
    [CompilerGeneratedAttribute]
private IAzureRepositorySettings <OpenSearch.Client.IRepository<OpenSearch.Client.IAzureRepositorySettings>.Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISnapshotRepository.Type>k__BackingField;
    private IAzureRepositorySettings OpenSearch.Client.IRepository<OpenSearch.Client.IAzureRepositorySettings>.Settings { get; private set; }
    private string OpenSearch.Client.ISnapshotRepository.Type { get; }
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IAzureRepositorySettings OpenSearch.Client.IRepository<OpenSearch.Client.IAzureRepositorySettings>.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRepository<OpenSearch.Client.IAzureRepositorySettings>.set_Settings(IAzureRepositorySettings value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISnapshotRepository.get_Type();
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    public AzureRepositoryDescriptor Settings(Func`2<AzureRepositorySettingsDescriptor, IAzureRepositorySettings> settingsSelector);
}
public class OpenSearch.Client.AzureRepositorySettings : object {
    [CompilerGeneratedAttribute]
private string <BasePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Container>k__BackingField;
    [DataMemberAttribute]
public string BasePath { get; public set; }
    [DataMemberAttribute]
public string ChunkSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Compress { get; public set; }
    [DataMemberAttribute]
public string Container { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_BasePath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BasePath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChunkSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChunkSize(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Compress();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Container();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Container(string value);
}
public class OpenSearch.Client.AzureRepositorySettingsDescriptor : DescriptorBase`2<AzureRepositorySettingsDescriptor, IAzureRepositorySettings> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAzureRepositorySettings.BasePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAzureRepositorySettings.ChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IAzureRepositorySettings.Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAzureRepositorySettings.Container>k__BackingField;
    private string OpenSearch.Client.IAzureRepositorySettings.BasePath { get; private set; }
    private string OpenSearch.Client.IAzureRepositorySettings.ChunkSize { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IAzureRepositorySettings.Compress { get; private set; }
    private string OpenSearch.Client.IAzureRepositorySettings.Container { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAzureRepositorySettings.get_BasePath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAzureRepositorySettings.set_BasePath(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAzureRepositorySettings.get_ChunkSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAzureRepositorySettings.set_ChunkSize(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IAzureRepositorySettings.get_Compress();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAzureRepositorySettings.set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAzureRepositorySettings.get_Container();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAzureRepositorySettings.set_Container(string value);
    public AzureRepositorySettingsDescriptor Container(string container);
    public AzureRepositorySettingsDescriptor BasePath(string basePath);
    public AzureRepositorySettingsDescriptor Compress(Nullable`1<bool> compress);
    public AzureRepositorySettingsDescriptor ChunkSize(string chunkSize);
}
[DataContractAttribute]
public class OpenSearch.Client.BinaryAttribute : OpenSearchDocValuesPropertyAttributeBase {
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.BinaryProperty : DocValuesPropertyBase {
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.BinaryPropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<BinaryPropertyDescriptor`1<T>, IBinaryProperty, T> {
}
public class OpenSearch.Client.BlockedIndex : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Blocked>k__BackingField;
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public bool Blocked { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Blocked();
    [CompilerGeneratedAttribute]
internal void set_Blocked(bool value);
}
[ExtensionAttribute]
public static class OpenSearch.Client.BlockingSubscribeExtensions : object {
    [ExtensionAttribute]
public static BulkAllObserver Wait(BulkAllObservable`1<T> observable, TimeSpan maximumRunTime, Action`1<BulkAllResponse> onNext);
    [ExtensionAttribute]
public static ScrollAllObserver`1<T> Wait(IObservable`1<IScrollAllResponse`1<T>> observable, TimeSpan maximumRunTime, Action`1<IScrollAllResponse`1<T>> onNext);
    [ExtensionAttribute]
public static ReindexObserver Wait(IObservable`1<BulkAllResponse> observable, TimeSpan maximumRunTime, Action`1<BulkAllResponse> onNext);
    private static TObserver WaitOnObservable(TObservable observable, TimeSpan maximumRunTime, Func`3<Action`1<Exception>, Action, TObserver> factory);
}
public class OpenSearch.Client.BM25Similarity : object {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <B>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DiscountOverlaps>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <K1>k__BackingField;
    public Nullable`1<double> B { get; public set; }
    public Nullable`1<bool> DiscountOverlaps { get; public set; }
    public Nullable`1<double> K1 { get; public set; }
    public string Type { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_B();
    [CompilerGeneratedAttribute]
public sealed virtual void set_B(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DiscountOverlaps();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DiscountOverlaps(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_K1();
    [CompilerGeneratedAttribute]
public sealed virtual void set_K1(Nullable`1<double> value);
    public sealed virtual string get_Type();
}
public class OpenSearch.Client.BM25SimilarityDescriptor : DescriptorBase`2<BM25SimilarityDescriptor, IBM25Similarity> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IBM25Similarity.B>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IBM25Similarity.DiscountOverlaps>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IBM25Similarity.K1>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IBM25Similarity.B { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IBM25Similarity.DiscountOverlaps { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IBM25Similarity.K1 { get; private set; }
    private string OpenSearch.Client.ISimilarity.Type { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IBM25Similarity.get_B();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBM25Similarity.set_B(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IBM25Similarity.get_DiscountOverlaps();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBM25Similarity.set_DiscountOverlaps(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IBM25Similarity.get_K1();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBM25Similarity.set_K1(Nullable`1<double> value);
    private sealed virtual override string OpenSearch.Client.ISimilarity.get_Type();
    public BM25SimilarityDescriptor DiscountOverlaps(Nullable`1<bool> discount);
    public BM25SimilarityDescriptor K1(Nullable`1<double> k1);
    public BM25SimilarityDescriptor B(Nullable`1<double> b);
}
public class OpenSearch.Client.BooleanAttribute : OpenSearchDocValuesPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IBooleanProperty.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private INumericFielddata <OpenSearch.Client.IBooleanProperty.Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IBooleanProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IBooleanProperty.NullValue>k__BackingField;
    public double Boost { get; public set; }
    public bool Index { get; public set; }
    public bool NullValue { get; public set; }
    private Nullable`1<double> OpenSearch.Client.IBooleanProperty.Boost { get; private set; }
    private INumericFielddata OpenSearch.Client.IBooleanProperty.Fielddata { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IBooleanProperty.Index { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IBooleanProperty.NullValue { get; private set; }
    private IBooleanProperty Self { get; }
    public double get_Boost();
    public void set_Boost(double value);
    public bool get_Index();
    public void set_Index(bool value);
    public bool get_NullValue();
    public void set_NullValue(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IBooleanProperty.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBooleanProperty.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override INumericFielddata OpenSearch.Client.IBooleanProperty.get_Fielddata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBooleanProperty.set_Fielddata(INumericFielddata value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IBooleanProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBooleanProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IBooleanProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBooleanProperty.set_NullValue(Nullable`1<bool> value);
    private IBooleanProperty get_Self();
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.BooleanProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private INumericFielddata <Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <NullValue>k__BackingField;
    public Nullable`1<double> Boost { get; public set; }
    public INumericFielddata Fielddata { get; public set; }
    public Nullable`1<bool> Index { get; public set; }
    public Nullable`1<bool> NullValue { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Boost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual INumericFielddata get_Fielddata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fielddata(INumericFielddata value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_NullValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NullValue(Nullable`1<bool> value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.BooleanPropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<BooleanPropertyDescriptor`1<T>, IBooleanProperty, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IBooleanProperty.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private INumericFielddata <OpenSearch.Client.IBooleanProperty.Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IBooleanProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IBooleanProperty.NullValue>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IBooleanProperty.Boost { get; private set; }
    private INumericFielddata OpenSearch.Client.IBooleanProperty.Fielddata { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IBooleanProperty.Index { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IBooleanProperty.NullValue { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IBooleanProperty.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBooleanProperty.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override INumericFielddata OpenSearch.Client.IBooleanProperty.get_Fielddata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBooleanProperty.set_Fielddata(INumericFielddata value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IBooleanProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBooleanProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IBooleanProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBooleanProperty.set_NullValue(Nullable`1<bool> value);
    public BooleanPropertyDescriptor`1<T> Boost(Nullable`1<double> boost);
    public BooleanPropertyDescriptor`1<T> Index(Nullable`1<bool> index);
    public BooleanPropertyDescriptor`1<T> NullValue(Nullable`1<bool> nullValue);
    public BooleanPropertyDescriptor`1<T> Fielddata(Func`2<NumericFielddataDescriptor, INumericFielddata> selector);
}
public class OpenSearch.Client.BoolQuery : QueryBase {
    private IList`1<QueryContainer> _filter;
    private IList`1<QueryContainer> _must;
    private IList`1<QueryContainer> _mustNot;
    private IList`1<QueryContainer> _should;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <MinimumShouldMatch>k__BackingField;
    public IEnumerable`1<QueryContainer> Filter { get; public set; }
    public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    public IEnumerable`1<QueryContainer> Must { get; public set; }
    public IEnumerable`1<QueryContainer> MustNot { get; public set; }
    public IEnumerable`1<QueryContainer> Should { get; public set; }
    protected bool Conditionless { get; }
    private bool OpenSearch.Client.IBoolQuery.Locked { get; }
    public sealed virtual IEnumerable`1<QueryContainer> get_Filter();
    public sealed virtual void set_Filter(IEnumerable`1<QueryContainer> value);
    [CompilerGeneratedAttribute]
public sealed virtual MinimumShouldMatch get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    public sealed virtual IEnumerable`1<QueryContainer> get_Must();
    public sealed virtual void set_Must(IEnumerable`1<QueryContainer> value);
    public sealed virtual IEnumerable`1<QueryContainer> get_MustNot();
    public sealed virtual void set_MustNot(IEnumerable`1<QueryContainer> value);
    public sealed virtual IEnumerable`1<QueryContainer> get_Should();
    public sealed virtual void set_Should(IEnumerable`1<QueryContainer> value);
    protected virtual bool get_Conditionless();
    private sealed virtual override bool OpenSearch.Client.IBoolQuery.get_Locked();
    internal static bool Locked(IBoolQuery q);
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IBoolQuery q);
    internal static bool ShouldSerialize(IEnumerable`1<QueryContainer> queries);
    private sealed virtual override bool OpenSearch.Client.IBoolQuery.ShouldSerializeShould();
    private sealed virtual override bool OpenSearch.Client.IBoolQuery.ShouldSerializeMust();
    private sealed virtual override bool OpenSearch.Client.IBoolQuery.ShouldSerializeMustNot();
    private sealed virtual override bool OpenSearch.Client.IBoolQuery.ShouldSerializeFilter();
}
[ExtensionAttribute]
internal static class OpenSearch.Client.BoolQueryAndExtensions : object {
    [ExtensionAttribute]
internal static QueryContainer CombineAsMust(QueryContainer leftContainer, QueryContainer rightContainer);
    private static bool TryHandleUnmergableBools(QueryContainer leftContainer, QueryContainer rightContainer, IBoolQuery leftBool, IBoolQuery rightBool, QueryContainer& c);
    private static bool TryHandleBoolsWithOnlyShouldClauses(QueryContainer leftContainer, QueryContainer rightContainer, IBoolQuery leftBool, IBoolQuery rightBool, QueryContainer& c);
    private static QueryContainer CreateMustContainer(QueryContainer left, QueryContainer right);
    private static QueryContainer CreateMustContainer(List`1<QueryContainer> mustClauses);
    private static QueryContainer CreateMustContainer(List`1<QueryContainer> mustClauses, List`1<QueryContainer> mustNotClauses, List`1<QueryContainer> filters);
    [ExtensionAttribute]
private static bool CanMergeAnd(IBoolQuery boolQuery);
    private static IEnumerable`1<QueryContainer> OrphanMusts(QueryContainer container);
    private static IEnumerable`1<QueryContainer> OrphanMustNots(IQueryContainer container);
    private static IEnumerable`1<QueryContainer> OrphanFilters(IQueryContainer container);
}
public class OpenSearch.Client.BoolQueryDescriptor`1 : QueryDescriptorBase`2<BoolQueryDescriptor`1<T>, IBoolQuery> {
    private IList`1<QueryContainer> _filter;
    private IList`1<QueryContainer> _must;
    private IList`1<QueryContainer> _mustNot;
    private IList`1<QueryContainer> _should;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <OpenSearch.Client.IBoolQuery.MinimumShouldMatch>k__BackingField;
    protected bool Conditionless { get; }
    private IEnumerable`1<QueryContainer> OpenSearch.Client.IBoolQuery.Filter { get; private set; }
    private bool OpenSearch.Client.IBoolQuery.Locked { get; }
    private MinimumShouldMatch OpenSearch.Client.IBoolQuery.MinimumShouldMatch { get; private set; }
    private IEnumerable`1<QueryContainer> OpenSearch.Client.IBoolQuery.Must { get; private set; }
    private IEnumerable`1<QueryContainer> OpenSearch.Client.IBoolQuery.MustNot { get; private set; }
    private IEnumerable`1<QueryContainer> OpenSearch.Client.IBoolQuery.Should { get; private set; }
    protected virtual bool get_Conditionless();
    private sealed virtual override IEnumerable`1<QueryContainer> OpenSearch.Client.IBoolQuery.get_Filter();
    private sealed virtual override void OpenSearch.Client.IBoolQuery.set_Filter(IEnumerable`1<QueryContainer> value);
    private sealed virtual override bool OpenSearch.Client.IBoolQuery.get_Locked();
    [CompilerGeneratedAttribute]
private sealed virtual override MinimumShouldMatch OpenSearch.Client.IBoolQuery.get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBoolQuery.set_MinimumShouldMatch(MinimumShouldMatch value);
    private sealed virtual override IEnumerable`1<QueryContainer> OpenSearch.Client.IBoolQuery.get_Must();
    private sealed virtual override void OpenSearch.Client.IBoolQuery.set_Must(IEnumerable`1<QueryContainer> value);
    private sealed virtual override IEnumerable`1<QueryContainer> OpenSearch.Client.IBoolQuery.get_MustNot();
    private sealed virtual override void OpenSearch.Client.IBoolQuery.set_MustNot(IEnumerable`1<QueryContainer> value);
    private sealed virtual override IEnumerable`1<QueryContainer> OpenSearch.Client.IBoolQuery.get_Should();
    private sealed virtual override void OpenSearch.Client.IBoolQuery.set_Should(IEnumerable`1<QueryContainer> value);
    private sealed virtual override bool OpenSearch.Client.IBoolQuery.ShouldSerializeShould();
    private sealed virtual override bool OpenSearch.Client.IBoolQuery.ShouldSerializeMust();
    private sealed virtual override bool OpenSearch.Client.IBoolQuery.ShouldSerializeMustNot();
    private sealed virtual override bool OpenSearch.Client.IBoolQuery.ShouldSerializeFilter();
    public BoolQueryDescriptor`1<T> MinimumShouldMatch(MinimumShouldMatch minimumShouldMatches);
    public BoolQueryDescriptor`1<T> Must(Func`2[] queries);
    public BoolQueryDescriptor`1<T> Must(IEnumerable`1<Func`2<QueryContainerDescriptor`1<T>, QueryContainer>> queries);
    public BoolQueryDescriptor`1<T> Must(QueryContainer[] queries);
    public BoolQueryDescriptor`1<T> MustNot(Func`2[] queries);
    public BoolQueryDescriptor`1<T> MustNot(IEnumerable`1<Func`2<QueryContainerDescriptor`1<T>, QueryContainer>> queries);
    public BoolQueryDescriptor`1<T> MustNot(QueryContainer[] queries);
    public BoolQueryDescriptor`1<T> Should(Func`2[] queries);
    public BoolQueryDescriptor`1<T> Should(IEnumerable`1<Func`2<QueryContainerDescriptor`1<T>, QueryContainer>> queries);
    public BoolQueryDescriptor`1<T> Should(QueryContainer[] queries);
    public BoolQueryDescriptor`1<T> Filter(Func`2[] queries);
    public BoolQueryDescriptor`1<T> Filter(IEnumerable`1<Func`2<QueryContainerDescriptor`1<T>, QueryContainer>> queries);
    public BoolQueryDescriptor`1<T> Filter(QueryContainer[] queries);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.BoolQueryExtensions : object {
    [ExtensionAttribute]
internal static IQueryContainer Self(QueryContainer q);
    [ExtensionAttribute]
internal static bool HasOnlyShouldClauses(IBoolQuery boolQuery);
    [ExtensionAttribute]
internal static bool HasOnlyFilterClauses(IBoolQuery boolQuery);
    [ExtensionAttribute]
internal static bool HasOnlyMustNotClauses(IBoolQuery boolQuery);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.BoolQueryOrExtensions : object {
    [ExtensionAttribute]
internal static QueryContainer CombineAsShould(QueryContainer leftContainer, QueryContainer rightContainer);
    private static bool TryFlattenShould(QueryContainer leftContainer, QueryContainer rightContainer, IBoolQuery leftBool, IBoolQuery rightBool, QueryContainer& c);
    [ExtensionAttribute]
private static bool CanMergeShould(IQueryContainer container);
    [ExtensionAttribute]
private static bool CanMergeShould(IBoolQuery boolQuery);
    private static QueryContainer CreateShouldContainer(List`1<QueryContainer> shouldClauses);
}
public class OpenSearch.Client.BoostingQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <NegativeBoost>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <NegativeQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <PositiveQuery>k__BackingField;
    public Nullable`1<double> NegativeBoost { get; public set; }
    public QueryContainer NegativeQuery { get; public set; }
    public QueryContainer PositiveQuery { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_NegativeBoost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NegativeBoost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_NegativeQuery();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NegativeQuery(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_PositiveQuery();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PositiveQuery(QueryContainer value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IBoostingQuery q);
}
public class OpenSearch.Client.BoostingQueryDescriptor`1 : QueryDescriptorBase`2<BoostingQueryDescriptor`1<T>, IBoostingQuery> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IBoostingQuery.NegativeBoost>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IBoostingQuery.NegativeQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IBoostingQuery.PositiveQuery>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<double> OpenSearch.Client.IBoostingQuery.NegativeBoost { get; private set; }
    private QueryContainer OpenSearch.Client.IBoostingQuery.NegativeQuery { get; private set; }
    private QueryContainer OpenSearch.Client.IBoostingQuery.PositiveQuery { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IBoostingQuery.get_NegativeBoost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBoostingQuery.set_NegativeBoost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IBoostingQuery.get_NegativeQuery();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBoostingQuery.set_NegativeQuery(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IBoostingQuery.get_PositiveQuery();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBoostingQuery.set_PositiveQuery(QueryContainer value);
    public BoostingQueryDescriptor`1<T> NegativeBoost(Nullable`1<double> boost);
    public BoostingQueryDescriptor`1<T> Positive(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
    public BoostingQueryDescriptor`1<T> Negative(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
}
[StringEnumAttribute]
public enum OpenSearch.Client.BoundaryScanner : Enum {
    public int value__;
    [EnumMemberAttribute]
public static BoundaryScanner Characters;
    [EnumMemberAttribute]
public static BoundaryScanner Sentence;
    [EnumMemberAttribute]
public static BoundaryScanner Word;
}
public class OpenSearch.Client.BoundingBox : object {
    [CompilerGeneratedAttribute]
private GeoLocation <BottomRight>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLocation <TopLeft>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WellKnownText>k__BackingField;
    public GeoLocation BottomRight { get; public set; }
    public GeoLocation TopLeft { get; public set; }
    public string WellKnownText { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual GeoLocation get_BottomRight();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BottomRight(GeoLocation value);
    [CompilerGeneratedAttribute]
public sealed virtual GeoLocation get_TopLeft();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TopLeft(GeoLocation value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WellKnownText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WellKnownText(string value);
}
public class OpenSearch.Client.BoundingBoxDescriptor : DescriptorBase`2<BoundingBoxDescriptor, IBoundingBox> {
    [CompilerGeneratedAttribute]
private GeoLocation <OpenSearch.Client.IBoundingBox.BottomRight>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLocation <OpenSearch.Client.IBoundingBox.TopLeft>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IBoundingBox.WellKnownText>k__BackingField;
    private GeoLocation OpenSearch.Client.IBoundingBox.BottomRight { get; private set; }
    private GeoLocation OpenSearch.Client.IBoundingBox.TopLeft { get; private set; }
    private string OpenSearch.Client.IBoundingBox.WellKnownText { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override GeoLocation OpenSearch.Client.IBoundingBox.get_BottomRight();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBoundingBox.set_BottomRight(GeoLocation value);
    [CompilerGeneratedAttribute]
private sealed virtual override GeoLocation OpenSearch.Client.IBoundingBox.get_TopLeft();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBoundingBox.set_TopLeft(GeoLocation value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IBoundingBox.get_WellKnownText();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBoundingBox.set_WellKnownText(string value);
    public BoundingBoxDescriptor TopLeft(GeoLocation topLeft);
    public BoundingBoxDescriptor TopLeft(double lat, double lon);
    public BoundingBoxDescriptor BottomRight(GeoLocation bottomRight);
    public BoundingBoxDescriptor BottomRight(double lat, double lon);
    public BoundingBoxDescriptor WellKnownText(string wkt);
}
[DataContractAttribute]
public class OpenSearch.Client.BreakerStats : object {
    [CompilerGeneratedAttribute]
private string <EstimatedSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <EstimatedSizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LimitSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <LimitSizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Overhead>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Tripped>k__BackingField;
    [DataMemberAttribute]
public string EstimatedSize { get; internal set; }
    [DataMemberAttribute]
public long EstimatedSizeInBytes { get; internal set; }
    [DataMemberAttribute]
public string LimitSize { get; internal set; }
    [DataMemberAttribute]
public long LimitSizeInBytes { get; internal set; }
    [DataMemberAttribute]
public float Overhead { get; internal set; }
    [DataMemberAttribute]
public float Tripped { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_EstimatedSize();
    [CompilerGeneratedAttribute]
internal void set_EstimatedSize(string value);
    [CompilerGeneratedAttribute]
public long get_EstimatedSizeInBytes();
    [CompilerGeneratedAttribute]
internal void set_EstimatedSizeInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_LimitSize();
    [CompilerGeneratedAttribute]
internal void set_LimitSize(string value);
    [CompilerGeneratedAttribute]
public long get_LimitSizeInBytes();
    [CompilerGeneratedAttribute]
internal void set_LimitSizeInBytes(long value);
    [CompilerGeneratedAttribute]
public float get_Overhead();
    [CompilerGeneratedAttribute]
internal void set_Overhead(float value);
    [CompilerGeneratedAttribute]
public float get_Tripped();
    [CompilerGeneratedAttribute]
internal void set_Tripped(float value);
}
public class OpenSearch.Client.BucketAggregate : object {
    [CompilerGeneratedAttribute]
private CompositeKey <AfterKey>k__BackingField;
    [CompilerGeneratedAttribute]
private long <BgCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DocCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <DocCountErrorUpperBound>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<IBucket> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SumOtherDocCount>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMathTime <AutoInterval>k__BackingField;
    public CompositeKey AfterKey { get; public set; }
    public long BgCount { get; public set; }
    public long DocCount { get; public set; }
    public Nullable`1<long> DocCountErrorUpperBound { get; public set; }
    public IReadOnlyCollection`1<IBucket> Items { get; public set; }
    public IReadOnlyDictionary`2<string, object> Meta { get; public set; }
    public Nullable`1<long> SumOtherDocCount { get; public set; }
    public DateMathTime AutoInterval { get; public set; }
    [CompilerGeneratedAttribute]
public CompositeKey get_AfterKey();
    [CompilerGeneratedAttribute]
public void set_AfterKey(CompositeKey value);
    [CompilerGeneratedAttribute]
public long get_BgCount();
    [CompilerGeneratedAttribute]
public void set_BgCount(long value);
    [CompilerGeneratedAttribute]
public long get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_DocCountErrorUpperBound();
    [CompilerGeneratedAttribute]
public void set_DocCountErrorUpperBound(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<IBucket> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IReadOnlyCollection`1<IBucket> value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(IReadOnlyDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SumOtherDocCount();
    [CompilerGeneratedAttribute]
public void set_SumOtherDocCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public DateMathTime get_AutoInterval();
    [CompilerGeneratedAttribute]
public void set_AutoInterval(DateMathTime value);
}
public abstract class OpenSearch.Client.BucketAggregateBase : AggregateDictionary {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Meta>k__BackingField;
    public IReadOnlyDictionary`2<string, object> Meta { get; public set; }
    protected BucketAggregateBase(IReadOnlyDictionary`2<string, IAggregate> aggregations);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(IReadOnlyDictionary`2<string, object> value);
}
public abstract class OpenSearch.Client.BucketAggregationBase : AggregationBase {
    [CompilerGeneratedAttribute]
private AggregationDictionary <Aggregations>k__BackingField;
    public AggregationDictionary Aggregations { get; public set; }
    protected BucketAggregationBase(string name);
    [CompilerGeneratedAttribute]
public sealed virtual AggregationDictionary get_Aggregations();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Aggregations(AggregationDictionary value);
}
public abstract class OpenSearch.Client.BucketAggregationDescriptorBase`3 : object {
    [CompilerGeneratedAttribute]
private AggregationDictionary <OpenSearch.Client.IBucketAggregation.Aggregations>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IAggregation.Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAggregation.Name>k__BackingField;
    protected TBucketAggregationInterface Self { get; }
    private AggregationDictionary OpenSearch.Client.IBucketAggregation.Aggregations { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IAggregation.Meta { get; private set; }
    private string OpenSearch.Client.IAggregation.Name { get; private set; }
    protected TBucketAggregationInterface get_Self();
    [CompilerGeneratedAttribute]
private sealed virtual override AggregationDictionary OpenSearch.Client.IBucketAggregation.get_Aggregations();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBucketAggregation.set_Aggregations(AggregationDictionary value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IAggregation.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAggregation.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Name(string value);
    protected TBucketAggregation Assign(TValue value, Action`2<TBucketAggregationInterface, TValue> assigner);
    public TBucketAggregation Aggregations(Func`2<AggregationContainerDescriptor`1<T>, IAggregationContainer> selector);
    public TBucketAggregation Aggregations(AggregationDictionary aggregations);
    public TBucketAggregation Meta(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
}
public abstract class OpenSearch.Client.BucketBase : AggregateDictionary {
    protected BucketBase(IReadOnlyDictionary`2<string, IAggregate> aggregations);
}
public class OpenSearch.Client.BucketScriptAggregation : PipelineAggregationBase {
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public IScript Script { get; public set; }
    public BucketScriptAggregation(string name, MultiBucketsPath bucketsPath);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.BucketScriptAggregationDescriptor : PipelineAggregationDescriptorBase`3<BucketScriptAggregationDescriptor, IBucketScriptAggregation, MultiBucketsPath> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IBucketScriptAggregation.Script>k__BackingField;
    private IScript OpenSearch.Client.IBucketScriptAggregation.Script { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IBucketScriptAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBucketScriptAggregation.set_Script(IScript value);
    public BucketScriptAggregationDescriptor Script(string script);
    public BucketScriptAggregationDescriptor Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public BucketScriptAggregationDescriptor BucketsPath(Func`2<MultiBucketsPathDescriptor, IPromise`1<IBucketsPath>> selector);
}
public class OpenSearch.Client.BucketSelectorAggregation : PipelineAggregationBase {
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public IScript Script { get; public set; }
    public BucketSelectorAggregation(string name, MultiBucketsPath bucketsPath);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.BucketSelectorAggregationDescriptor : PipelineAggregationDescriptorBase`3<BucketSelectorAggregationDescriptor, IBucketSelectorAggregation, MultiBucketsPath> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IBucketSelectorAggregation.Script>k__BackingField;
    private IScript OpenSearch.Client.IBucketSelectorAggregation.Script { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IBucketSelectorAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBucketSelectorAggregation.set_Script(IScript value);
    public BucketSelectorAggregationDescriptor Script(string script);
    public BucketSelectorAggregationDescriptor Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public BucketSelectorAggregationDescriptor BucketsPath(Func`2<MultiBucketsPathDescriptor, IPromise`1<IBucketsPath>> selector);
}
public class OpenSearch.Client.BucketSortAggregation : AggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <From>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GapPolicy> <GapPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISort> <Sort>k__BackingField;
    public Nullable`1<int> From { get; public set; }
    public Nullable`1<GapPolicy> GapPolicy { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public IList`1<ISort> Sort { get; public set; }
    public BucketSortAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_From();
    [CompilerGeneratedAttribute]
public sealed virtual void set_From(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GapPolicy> get_GapPolicy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GapPolicy(Nullable`1<GapPolicy> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<ISort> get_Sort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sort(IList`1<ISort> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.BucketSortAggregationDescriptor`1 : DescriptorBase`2<BucketSortAggregationDescriptor`1<T>, IBucketSortAggregation> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IBucketSortAggregation.From>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GapPolicy> <OpenSearch.Client.IBucketSortAggregation.GapPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IAggregation.Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAggregation.Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IBucketSortAggregation.Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISort> <OpenSearch.Client.IBucketSortAggregation.Sort>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.IBucketSortAggregation.From { get; private set; }
    private Nullable`1<GapPolicy> OpenSearch.Client.IBucketSortAggregation.GapPolicy { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IAggregation.Meta { get; private set; }
    private string OpenSearch.Client.IAggregation.Name { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IBucketSortAggregation.Size { get; private set; }
    private IList`1<ISort> OpenSearch.Client.IBucketSortAggregation.Sort { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IBucketSortAggregation.get_From();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBucketSortAggregation.set_From(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GapPolicy> OpenSearch.Client.IBucketSortAggregation.get_GapPolicy();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBucketSortAggregation.set_GapPolicy(Nullable`1<GapPolicy> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IAggregation.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAggregation.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Name(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IBucketSortAggregation.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBucketSortAggregation.set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<ISort> OpenSearch.Client.IBucketSortAggregation.get_Sort();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBucketSortAggregation.set_Sort(IList`1<ISort> value);
    public BucketSortAggregationDescriptor`1<T> Sort(Func`2<SortDescriptor`1<T>, IPromise`1<IList`1<ISort>>> selector);
    public BucketSortAggregationDescriptor`1<T> From(Nullable`1<int> from);
    public BucketSortAggregationDescriptor`1<T> Size(Nullable`1<int> size);
    public BucketSortAggregationDescriptor`1<T> GapPolicy(Nullable`1<GapPolicy> gapPolicy);
    public BucketSortAggregationDescriptor`1<T> Meta(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
}
internal class OpenSearch.Client.BucketsPathFormatter : object {
    public sealed virtual IBucketsPath Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IBucketsPath value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.BulkAliasDescriptor : RequestDescriptorBase`3<BulkAliasDescriptor, BulkAliasRequestParameters, IBulkAliasRequest> {
    [CompilerGeneratedAttribute]
private IList`1<IAliasAction> <OpenSearch.Client.IBulkAliasRequest.Actions>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IList`1<IAliasAction> OpenSearch.Client.IBulkAliasRequest.Actions { get; private set; }
    internal virtual ApiUrls get_ApiUrls();
    public BulkAliasDescriptor MasterTimeout(Time mastertimeout);
    public BulkAliasDescriptor ClusterManagerTimeout(Time timeout);
    public BulkAliasDescriptor Timeout(Time timeout);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<IAliasAction> OpenSearch.Client.IBulkAliasRequest.get_Actions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAliasRequest.set_Actions(IList`1<IAliasAction> value);
    public BulkAliasDescriptor Add(IAliasAction action);
    public BulkAliasDescriptor Add(Func`2<AliasAddDescriptor, IAliasAddAction> addSelector);
    public BulkAliasDescriptor Remove(Func`2<AliasRemoveDescriptor, IAliasRemoveAction> removeSelector);
    public BulkAliasDescriptor RemoveIndex(Func`2<AliasRemoveIndexDescriptor, IAliasRemoveIndexAction> removeIndexSelector);
}
public class OpenSearch.Client.BulkAliasRequest : PlainRequestBase`1<BulkAliasRequestParameters> {
    [CompilerGeneratedAttribute]
private IList`1<IAliasAction> <Actions>k__BackingField;
    public IList`1<IAliasAction> Actions { get; public set; }
    protected IBulkAliasRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<IAliasAction> get_Actions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Actions(IList`1<IAliasAction> value);
    protected IBulkAliasRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.BulkAliasResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.BulkAllDescriptor`1 : DescriptorBase`2<BulkAllDescriptor`1<T>, IBulkAllRequest`1<T>> {
    private IEnumerable`1<T> _documents;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IBulkAllRequest<T>.BackOffRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IBulkAllRequest<T>.BackOffTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ProducerConsumerBackPressure <OpenSearch.Client.IBulkAllRequest<T>.BackPressure>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<BulkDescriptor, IList`1<T>> <OpenSearch.Client.IBulkAllRequest<T>.BufferToBulk>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IBulkAllRequest<T>.ContinueAfterDroppedDocuments>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<BulkResponseItemBase, T> <OpenSearch.Client.IBulkAllRequest<T>.DroppedDocumentCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IBulkAllRequest<T>.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IBulkAllRequest<T>.MaxDegreeOfParallelism>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IBulkAllRequest<T>.Pipeline>k__BackingField;
    [CompilerGeneratedAttribute]
private Indices <OpenSearch.Client.IBulkAllRequest<T>.RefreshIndices>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IBulkAllRequest<T>.RefreshOnCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<BulkResponseItemBase, T, bool> <OpenSearch.Client.IBulkAllRequest<T>.RetryDocumentPredicate>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <OpenSearch.Client.IBulkAllRequest<T>.Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IBulkAllRequest<T>.Size>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IBulkAllRequest<T>.Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IBulkAllRequest<T>.WaitForActiveShards>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<BulkResponse> <OpenSearch.Client.IBulkAllRequest<T>.BulkResponseCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMetaData <OpenSearch.Client.IHelperCallable.ParentMetaData>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.IBulkAllRequest<T>.BackOffRetries { get; private set; }
    private Time OpenSearch.Client.IBulkAllRequest<T>.BackOffTime { get; private set; }
    private ProducerConsumerBackPressure OpenSearch.Client.IBulkAllRequest<T>.BackPressure { get; private set; }
    private Action`2<BulkDescriptor, IList`1<T>> OpenSearch.Client.IBulkAllRequest<T>.BufferToBulk { get; private set; }
    private bool OpenSearch.Client.IBulkAllRequest<T>.ContinueAfterDroppedDocuments { get; private set; }
    private IEnumerable`1<T> OpenSearch.Client.IBulkAllRequest<T>.Documents { get; }
    private Action`2<BulkResponseItemBase, T> OpenSearch.Client.IBulkAllRequest<T>.DroppedDocumentCallback { get; private set; }
    private IndexName OpenSearch.Client.IBulkAllRequest<T>.Index { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IBulkAllRequest<T>.MaxDegreeOfParallelism { get; private set; }
    private string OpenSearch.Client.IBulkAllRequest<T>.Pipeline { get; private set; }
    private Indices OpenSearch.Client.IBulkAllRequest<T>.RefreshIndices { get; private set; }
    private bool OpenSearch.Client.IBulkAllRequest<T>.RefreshOnCompleted { get; private set; }
    private Func`3<BulkResponseItemBase, T, bool> OpenSearch.Client.IBulkAllRequest<T>.RetryDocumentPredicate { get; private set; }
    private Routing OpenSearch.Client.IBulkAllRequest<T>.Routing { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IBulkAllRequest<T>.Size { get; private set; }
    private Time OpenSearch.Client.IBulkAllRequest<T>.Timeout { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IBulkAllRequest<T>.WaitForActiveShards { get; private set; }
    private Action`1<BulkResponse> OpenSearch.Client.IBulkAllRequest<T>.BulkResponseCallback { get; private set; }
    private RequestMetaData OpenSearch.Client.IHelperCallable.ParentMetaData { get; private set; }
    public BulkAllDescriptor`1(IEnumerable`1<T> documents);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IBulkAllRequest<T>.get_BackOffRetries();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_BackOffRetries(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IBulkAllRequest<T>.get_BackOffTime();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_BackOffTime(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override ProducerConsumerBackPressure OpenSearch.Client.IBulkAllRequest<T>.get_BackPressure();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_BackPressure(ProducerConsumerBackPressure value);
    [CompilerGeneratedAttribute]
private sealed virtual override Action`2<BulkDescriptor, IList`1<T>> OpenSearch.Client.IBulkAllRequest<T>.get_BufferToBulk();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_BufferToBulk(Action`2<BulkDescriptor, IList`1<T>> value);
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IBulkAllRequest<T>.get_ContinueAfterDroppedDocuments();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_ContinueAfterDroppedDocuments(bool value);
    private sealed virtual override IEnumerable`1<T> OpenSearch.Client.IBulkAllRequest<T>.get_Documents();
    [CompilerGeneratedAttribute]
private sealed virtual override Action`2<BulkResponseItemBase, T> OpenSearch.Client.IBulkAllRequest<T>.get_DroppedDocumentCallback();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_DroppedDocumentCallback(Action`2<BulkResponseItemBase, T> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IBulkAllRequest<T>.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_Index(IndexName value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IBulkAllRequest<T>.get_MaxDegreeOfParallelism();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_MaxDegreeOfParallelism(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IBulkAllRequest<T>.get_Pipeline();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_Pipeline(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Indices OpenSearch.Client.IBulkAllRequest<T>.get_RefreshIndices();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_RefreshIndices(Indices value);
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IBulkAllRequest<T>.get_RefreshOnCompleted();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_RefreshOnCompleted(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override Func`3<BulkResponseItemBase, T, bool> OpenSearch.Client.IBulkAllRequest<T>.get_RetryDocumentPredicate();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_RetryDocumentPredicate(Func`3<BulkResponseItemBase, T, bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Routing OpenSearch.Client.IBulkAllRequest<T>.get_Routing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_Routing(Routing value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IBulkAllRequest<T>.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IBulkAllRequest<T>.get_Timeout();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_Timeout(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IBulkAllRequest<T>.get_WaitForActiveShards();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_WaitForActiveShards(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Action`1<BulkResponse> OpenSearch.Client.IBulkAllRequest<T>.get_BulkResponseCallback();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkAllRequest<T>.set_BulkResponseCallback(Action`1<BulkResponse> value);
    [CompilerGeneratedAttribute]
private sealed virtual override RequestMetaData OpenSearch.Client.IHelperCallable.get_ParentMetaData();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHelperCallable.set_ParentMetaData(RequestMetaData value);
    public BulkAllDescriptor`1<T> MaxDegreeOfParallelism(Nullable`1<int> parallelism);
    public BulkAllDescriptor`1<T> Size(Nullable`1<int> size);
    public BulkAllDescriptor`1<T> BackOffRetries(Nullable`1<int> backoffs);
    public BulkAllDescriptor`1<T> BackOffTime(Time time);
    public BulkAllDescriptor`1<T> Index(IndexName index);
    public BulkAllDescriptor`1<T> Index();
    public BulkAllDescriptor`1<T> RefreshOnCompleted(bool refresh);
    public BulkAllDescriptor`1<T> RefreshIndices(Indices indicesToRefresh);
    public BulkAllDescriptor`1<T> Routing(Routing routing);
    public BulkAllDescriptor`1<T> Timeout(Time timeout);
    public BulkAllDescriptor`1<T> Pipeline(string pipeline);
    public BulkAllDescriptor`1<T> BufferToBulk(Action`2<BulkDescriptor, IList`1<T>> modifier);
    public BulkAllDescriptor`1<T> RetryDocumentPredicate(Func`3<BulkResponseItemBase, T, bool> predicate);
    public BulkAllDescriptor`1<T> BackPressure(int maxConcurrency, Nullable`1<int> backPressureFactor);
    public BulkAllDescriptor`1<T> ContinueAfterDroppedDocuments(bool proceed);
    public BulkAllDescriptor`1<T> DroppedDocumentCallback(Action`2<BulkResponseItemBase, T> callback);
    public BulkAllDescriptor`1<T> BulkResponseCallback(Action`1<BulkResponse> callback);
}
public class OpenSearch.Client.BulkAllObservable`1 : object {
    private int _backOffRetries;
    private TimeSpan _backOffTime;
    private int _bulkSize;
    private IOpenSearchClient _client;
    private CancellationToken _compositeCancelToken;
    private CancellationTokenSource _compositeCancelTokenSource;
    private Action`2<BulkResponseItemBase, T> _droppedDocumentCallBack;
    private int _maxDegreeOfParallelism;
    private IBulkAllRequest`1<T> _partitionedBulkRequest;
    private Func`3<BulkResponseItemBase, T, bool> _retryPredicate;
    private Action _incrementFailed;
    private Action _incrementRetries;
    private Action`1<BulkResponse> _bulkResponseCallback;
    public BulkAllObservable`1(IOpenSearchClient client, IBulkAllRequest`1<T> partitionedBulkRequest, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    public sealed virtual IDisposable Subscribe(IObserver`1<BulkAllResponse> observer);
    public IDisposable Subscribe(BulkAllObserver observer);
    private void BulkAll(IObserver`1<BulkAllResponse> observer);
    private void OnCompleted(Exception exception, IObserver`1<BulkAllResponse> observer);
    private void RefreshOnCompleted();
    [AsyncStateMachineAttribute("OpenSearch.Client.BulkAllObservable`1/<BulkAsync>d__20")]
private Task`1<BulkAllResponse> BulkAsync(IList`1<T> buffer, long page, int backOffRetries);
    private void HandleDroppedDocuments(List`1<Tuple`2<BulkResponseItemBase, T>> droppedDocuments, BulkResponse response);
    [AsyncStateMachineAttribute("OpenSearch.Client.BulkAllObservable`1/<HandleBulkRequest>d__22")]
private Task`1<BulkAllResponse> HandleBulkRequest(IList`1<T> buffer, long page, int backOffRetries, BulkResponse response);
    [AsyncStateMachineAttribute("OpenSearch.Client.BulkAllObservable`1/<RetryDocuments>d__23")]
private Task`1<BulkAllResponse> RetryDocuments(long page, int backOffRetries, IList`1<T> retryDocuments);
    private Exception ThrowOnBadBulk(IOpenSearchResponse response, string message);
    private static OpenSearchClientException Throw(string message, IApiCallDetails details);
    private static bool RetryBulkActionPredicate(BulkResponseItemBase bulkResponseItem, T d);
    private static void DroppedDocumentCallbackDefault(BulkResponseItemBase bulkResponseItem, T d);
    [CompilerGeneratedAttribute]
private IRefreshRequest <RefreshOnCompleted>b__19_0(RefreshDescriptor r);
    [CompilerGeneratedAttribute]
private IRequestConfiguration <RefreshOnCompleted>b__19_1(RequestConfigurationDescriptor rc);
    [CompilerGeneratedAttribute]
private void <HandleBulkRequest>g__ThrowOnExhaustedRetries|22_0(<>c__DisplayClass22_0& );
}
public class OpenSearch.Client.BulkAllObserver : CoordinatedRequestObserverBase`1<BulkAllResponse> {
    private long _totalNumberOfFailedBuffers;
    private long _totalNumberOfRetries;
    public long TotalNumberOfFailedBuffers { get; }
    public long TotalNumberOfRetries { get; }
    public BulkAllObserver(Action`1<BulkAllResponse> onNext, Action`1<Exception> onError, Action onCompleted);
    public long get_TotalNumberOfFailedBuffers();
    public long get_TotalNumberOfRetries();
    internal void IncrementTotalNumberOfRetries();
    internal void IncrementTotalNumberOfFailedBuffers();
}
public class OpenSearch.Client.BulkAllRequest`1 : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BackOffRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <BackOffTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ProducerConsumerBackPressure <BackPressure>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<BulkDescriptor, IList`1<T>> <BufferToBulk>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ContinueAfterDroppedDocuments>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<T> <Documents>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<BulkResponseItemBase, T> <DroppedDocumentCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxDegreeOfParallelism>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pipeline>k__BackingField;
    [CompilerGeneratedAttribute]
private Indices <RefreshIndices>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RefreshOnCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<BulkResponseItemBase, T, bool> <RetryDocumentPredicate>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <WaitForActiveShards>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<BulkResponse> <BulkResponseCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMetaData <ParentMetaData>k__BackingField;
    public Nullable`1<int> BackOffRetries { get; public set; }
    public Time BackOffTime { get; public set; }
    public ProducerConsumerBackPressure BackPressure { get; public set; }
    public Action`2<BulkDescriptor, IList`1<T>> BufferToBulk { get; public set; }
    public bool ContinueAfterDroppedDocuments { get; public set; }
    public IEnumerable`1<T> Documents { get; }
    public Action`2<BulkResponseItemBase, T> DroppedDocumentCallback { get; public set; }
    public IndexName Index { get; public set; }
    public Nullable`1<int> MaxDegreeOfParallelism { get; public set; }
    public string Pipeline { get; public set; }
    public Indices RefreshIndices { get; public set; }
    public bool RefreshOnCompleted { get; public set; }
    public Func`3<BulkResponseItemBase, T, bool> RetryDocumentPredicate { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public Time Timeout { get; public set; }
    public Nullable`1<int> WaitForActiveShards { get; public set; }
    public Action`1<BulkResponse> BulkResponseCallback { get; public set; }
    internal RequestMetaData ParentMetaData { get; internal set; }
    private RequestMetaData OpenSearch.Client.IHelperCallable.ParentMetaData { get; private set; }
    public BulkAllRequest`1(IEnumerable`1<T> documents);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_BackOffRetries();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BackOffRetries(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_BackOffTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BackOffTime(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual ProducerConsumerBackPressure get_BackPressure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BackPressure(ProducerConsumerBackPressure value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`2<BulkDescriptor, IList`1<T>> get_BufferToBulk();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BufferToBulk(Action`2<BulkDescriptor, IList`1<T>> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ContinueAfterDroppedDocuments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContinueAfterDroppedDocuments(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<T> get_Documents();
    [CompilerGeneratedAttribute]
public sealed virtual Action`2<BulkResponseItemBase, T> get_DroppedDocumentCallback();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DroppedDocumentCallback(Action`2<BulkResponseItemBase, T> value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxDegreeOfParallelism();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxDegreeOfParallelism(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pipeline();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pipeline(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Indices get_RefreshIndices();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RefreshIndices(Indices value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_RefreshOnCompleted();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RefreshOnCompleted(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Func`3<BulkResponseItemBase, T, bool> get_RetryDocumentPredicate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RetryDocumentPredicate(Func`3<BulkResponseItemBase, T, bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Routing get_Routing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Routing(Routing value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_WaitForActiveShards();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WaitForActiveShards(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<BulkResponse> get_BulkResponseCallback();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BulkResponseCallback(Action`1<BulkResponse> value);
    [CompilerGeneratedAttribute]
internal RequestMetaData get_ParentMetaData();
    [CompilerGeneratedAttribute]
internal void set_ParentMetaData(RequestMetaData value);
    private sealed virtual override RequestMetaData OpenSearch.Client.IHelperCallable.get_ParentMetaData();
    private sealed virtual override void OpenSearch.Client.IHelperCallable.set_ParentMetaData(RequestMetaData value);
}
[DataContractAttribute]
public class OpenSearch.Client.BulkAllResponse : object {
    [CompilerGeneratedAttribute]
private long <Page>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Retries>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<BulkResponseItemBase> <Items>k__BackingField;
    public long Page { get; internal set; }
    public int Retries { get; internal set; }
    public IReadOnlyCollection`1<BulkResponseItemBase> Items { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Page();
    [CompilerGeneratedAttribute]
internal void set_Page(long value);
    [CompilerGeneratedAttribute]
public int get_Retries();
    [CompilerGeneratedAttribute]
internal void set_Retries(int value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<BulkResponseItemBase> get_Items();
    [CompilerGeneratedAttribute]
internal void set_Items(IReadOnlyCollection`1<BulkResponseItemBase> value);
}
[DataContractAttribute]
public class OpenSearch.Client.BulkCreateDescriptor`1 : BulkOperationDescriptorBase`2<BulkCreateDescriptor`1<T>, IBulkCreateOperation`1<T>> {
    [CompilerGeneratedAttribute]
private T <OpenSearch.Client.IBulkCreateOperation<T>.Document>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IBulkCreateOperation<T>.Pipeline>k__BackingField;
    protected Type BulkOperationClrType { get; }
    protected string BulkOperationType { get; }
    private T OpenSearch.Client.IBulkCreateOperation<T>.Document { get; private set; }
    private string OpenSearch.Client.IBulkCreateOperation<T>.Pipeline { get; private set; }
    protected virtual Type get_BulkOperationClrType();
    protected virtual string get_BulkOperationType();
    [CompilerGeneratedAttribute]
private sealed virtual override T OpenSearch.Client.IBulkCreateOperation<T>.get_Document();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkCreateOperation<T>.set_Document(T value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IBulkCreateOperation<T>.get_Pipeline();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkCreateOperation<T>.set_Pipeline(string value);
    protected virtual object GetBulkOperationBody();
    protected virtual Id GetIdForOperation(Inferrer inferrer);
    protected virtual Routing GetRoutingForOperation(Inferrer inferrer);
    public BulkCreateDescriptor`1<T> Document(T object);
    public BulkCreateDescriptor`1<T> Pipeline(string pipeline);
}
[DataContractAttribute]
public class OpenSearch.Client.BulkCreateOperation`1 : BulkOperationBase {
    [CompilerGeneratedAttribute]
private T <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pipeline>k__BackingField;
    public T Document { get; public set; }
    public string Pipeline { get; public set; }
    protected Type ClrType { get; }
    protected string Operation { get; }
    public BulkCreateOperation`1(T document);
    [CompilerGeneratedAttribute]
public sealed virtual T get_Document();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Document(T value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pipeline();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pipeline(string value);
    protected virtual Type get_ClrType();
    protected virtual string get_Operation();
    protected virtual object GetBody();
    protected virtual Id GetIdForOperation(Inferrer inferrer);
    protected virtual Routing GetRoutingForOperation(Inferrer inferrer);
}
[DataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.ConcreteBulkIndexResponseItemFormatter`1<OpenSearch.Client.BulkCreateResponseItem>")]
public class OpenSearch.Client.BulkCreateResponseItem : BulkResponseItemBase {
    [CompilerGeneratedAttribute]
private string <Operation>k__BackingField;
    public string Operation { get; }
    [CompilerGeneratedAttribute]
public virtual string get_Operation();
}
[DataContractAttribute]
public class OpenSearch.Client.BulkDeleteDescriptor`1 : BulkOperationDescriptorBase`2<BulkDeleteDescriptor`1<T>, IBulkDeleteOperation`1<T>> {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IBulkDeleteOperation<T>.IfSequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IBulkDeleteOperation<T>.IfPrimaryTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private T <OpenSearch.Client.IBulkDeleteOperation<T>.Document>k__BackingField;
    protected Type BulkOperationClrType { get; }
    protected string BulkOperationType { get; }
    private Nullable`1<long> OpenSearch.Client.IBulkDeleteOperation<T>.IfSequenceNumber { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IBulkDeleteOperation<T>.IfPrimaryTerm { get; private set; }
    private T OpenSearch.Client.IBulkDeleteOperation<T>.Document { get; private set; }
    protected virtual Type get_BulkOperationClrType();
    protected virtual string get_BulkOperationType();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IBulkDeleteOperation<T>.get_IfSequenceNumber();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkDeleteOperation<T>.set_IfSequenceNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IBulkDeleteOperation<T>.get_IfPrimaryTerm();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkDeleteOperation<T>.set_IfPrimaryTerm(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override T OpenSearch.Client.IBulkDeleteOperation<T>.get_Document();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkDeleteOperation<T>.set_Document(T value);
    protected virtual object GetBulkOperationBody();
    protected virtual Id GetIdForOperation(Inferrer inferrer);
    protected virtual Routing GetRoutingForOperation(Inferrer inferrer);
    public BulkDeleteDescriptor`1<T> Document(T object);
    public BulkDeleteDescriptor`1<T> IfSequenceNumber(Nullable`1<long> sequenceNumber);
    public BulkDeleteDescriptor`1<T> IfPrimaryTerm(Nullable`1<long> primaryTerm);
}
[DataContractAttribute]
public class OpenSearch.Client.BulkDeleteOperation`1 : BulkOperationBase {
    [CompilerGeneratedAttribute]
private T <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfSequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfPrimaryTerm>k__BackingField;
    public T Document { get; public set; }
    public Nullable`1<long> IfSequenceNumber { get; public set; }
    public Nullable`1<long> IfPrimaryTerm { get; public set; }
    protected Type ClrType { get; }
    protected string Operation { get; }
    public BulkDeleteOperation`1(T document);
    public BulkDeleteOperation`1(Id id);
    [CompilerGeneratedAttribute]
public sealed virtual T get_Document();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Document(T value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_IfSequenceNumber();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IfSequenceNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_IfPrimaryTerm();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IfPrimaryTerm(Nullable`1<long> value);
    protected virtual Type get_ClrType();
    protected virtual string get_Operation();
    protected virtual object GetBody();
    protected virtual Id GetIdForOperation(Inferrer inferrer);
    protected virtual Routing GetRoutingForOperation(Inferrer inferrer);
}
[DataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.ConcreteBulkIndexResponseItemFormatter`1<OpenSearch.Client.BulkDeleteResponseItem>")]
public class OpenSearch.Client.BulkDeleteResponseItem : BulkResponseItemBase {
    [CompilerGeneratedAttribute]
private string <Operation>k__BackingField;
    public string Operation { get; }
    [CompilerGeneratedAttribute]
public virtual string get_Operation();
}
public class OpenSearch.Client.BulkDescriptor : RequestDescriptorBase`3<BulkDescriptor, BulkRequestParameters, IBulkRequest> {
    [CompilerGeneratedAttribute]
private BulkOperationsCollection`1<IBulkOperation> <OpenSearch.Client.IBulkRequest.Operations>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.IBulkRequest.Index { get; }
    private BulkOperationsCollection`1<IBulkOperation> OpenSearch.Client.IBulkRequest.Operations { get; private set; }
    public BulkDescriptor(IndexName index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IBulkRequest.get_Index();
    public BulkDescriptor Index(IndexName index);
    public BulkDescriptor Index();
    public BulkDescriptor Pipeline(string pipeline);
    public BulkDescriptor Refresh(Nullable`1<Refresh> refresh);
    public BulkDescriptor RequireAlias(Nullable`1<bool> requirealias);
    public BulkDescriptor Routing(Routing routing);
    public BulkDescriptor SourceEnabled(Nullable`1<bool> sourceenabled);
    public BulkDescriptor SourceExcludes(Fields sourceexcludes);
    public BulkDescriptor SourceExcludes(Expression`1[] fields);
    public BulkDescriptor SourceIncludes(Fields sourceincludes);
    public BulkDescriptor SourceIncludes(Expression`1[] fields);
    public BulkDescriptor Timeout(Time timeout);
    public BulkDescriptor TypeQueryString(string typequerystring);
    public BulkDescriptor WaitForActiveShards(string waitforactiveshards);
    [CompilerGeneratedAttribute]
private sealed virtual override BulkOperationsCollection`1<IBulkOperation> OpenSearch.Client.IBulkRequest.get_Operations();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkRequest.set_Operations(BulkOperationsCollection`1<IBulkOperation> value);
    public BulkDescriptor Create(Func`2<BulkCreateDescriptor`1<T>, IBulkCreateOperation`1<T>> bulkCreateSelector);
    public BulkDescriptor CreateMany(IEnumerable`1<T> objects, Func`3<BulkCreateDescriptor`1<T>, T, IBulkCreateOperation`1<T>> bulkCreateSelector);
    public BulkDescriptor Index(Func`2<BulkIndexDescriptor`1<T>, IBulkIndexOperation`1<T>> bulkIndexSelector);
    public BulkDescriptor IndexMany(IEnumerable`1<T> objects, Func`3<BulkIndexDescriptor`1<T>, T, IBulkIndexOperation`1<T>> bulkIndexSelector);
    public BulkDescriptor DeleteMany(IEnumerable`1<T> objects, Func`3<BulkDeleteDescriptor`1<T>, T, IBulkDeleteOperation`1<T>> bulkDeleteSelector);
    public BulkDescriptor DeleteMany(IEnumerable`1<string> ids, Func`3<BulkDeleteDescriptor`1<T>, string, IBulkDeleteOperation`1<T>> bulkDeleteSelector);
    public BulkDescriptor DeleteMany(IEnumerable`1<long> ids, Func`3<BulkDeleteDescriptor`1<T>, long, IBulkDeleteOperation`1<T>> bulkDeleteSelector);
    public BulkDescriptor Delete(T obj, Func`2<BulkDeleteDescriptor`1<T>, IBulkDeleteOperation`1<T>> bulkDeleteSelector);
    public BulkDescriptor Delete(Func`2<BulkDeleteDescriptor`1<T>, IBulkDeleteOperation`1<T>> bulkDeleteSelector);
    public BulkDescriptor UpdateMany(IEnumerable`1<T> objects, Func`3<BulkUpdateDescriptor`2<T, T>, T, IBulkUpdateOperation`2<T, T>> bulkUpdateSelector);
    public BulkDescriptor UpdateMany(IEnumerable`1<T> objects, Func`3<BulkUpdateDescriptor`2<T, TPartialDocument>, T, IBulkUpdateOperation`2<T, TPartialDocument>> bulkUpdateSelector);
    public BulkDescriptor Update(Func`2<BulkUpdateDescriptor`2<T, T>, IBulkUpdateOperation`2<T, T>> bulkUpdateSelector);
    public BulkDescriptor Update(Func`2<BulkUpdateDescriptor`2<T, TPartialDocument>, IBulkUpdateOperation`2<T, TPartialDocument>> bulkUpdateSelector);
    public BulkDescriptor AddOperation(IBulkOperation operation);
    private BulkDescriptor AddOperations(IEnumerable`1<T> objects, Func`3<TDescriptor, T, TInterface> bulkIndexSelector, Func`2<T, TDescriptor> defaultSelector);
}
[DataContractAttribute]
public class OpenSearch.Client.BulkIndexByScrollFailure : object {
    [CompilerGeneratedAttribute]
private Error <Cause>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public Error Cause { get; public set; }
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public string Index { get; public set; }
    [DataMemberAttribute]
public int Status { get; public set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public Error get_Cause();
    [CompilerGeneratedAttribute]
public void set_Cause(Error value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
    [CompilerGeneratedAttribute]
public int get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(int value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.BulkIndexDescriptor`1 : BulkOperationDescriptorBase`2<BulkIndexDescriptor`1<T>, IBulkIndexOperation`1<T>> {
    [CompilerGeneratedAttribute]
private T <OpenSearch.Client.IBulkIndexOperation<T>.Document>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IBulkIndexOperation<T>.Percolate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IBulkIndexOperation<T>.Pipeline>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IBulkIndexOperation<T>.IfSequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IBulkIndexOperation<T>.IfPrimaryTerm>k__BackingField;
    protected Type BulkOperationClrType { get; }
    protected string BulkOperationType { get; }
    private T OpenSearch.Client.IBulkIndexOperation<T>.Document { get; private set; }
    private string OpenSearch.Client.IBulkIndexOperation<T>.Percolate { get; private set; }
    private string OpenSearch.Client.IBulkIndexOperation<T>.Pipeline { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IBulkIndexOperation<T>.IfSequenceNumber { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IBulkIndexOperation<T>.IfPrimaryTerm { get; private set; }
    protected virtual Type get_BulkOperationClrType();
    protected virtual string get_BulkOperationType();
    [CompilerGeneratedAttribute]
private sealed virtual override T OpenSearch.Client.IBulkIndexOperation<T>.get_Document();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkIndexOperation<T>.set_Document(T value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IBulkIndexOperation<T>.get_Percolate();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkIndexOperation<T>.set_Percolate(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IBulkIndexOperation<T>.get_Pipeline();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkIndexOperation<T>.set_Pipeline(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IBulkIndexOperation<T>.get_IfSequenceNumber();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkIndexOperation<T>.set_IfSequenceNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IBulkIndexOperation<T>.get_IfPrimaryTerm();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkIndexOperation<T>.set_IfPrimaryTerm(Nullable`1<long> value);
    protected virtual object GetBulkOperationBody();
    protected virtual Id GetIdForOperation(Inferrer inferrer);
    protected virtual Routing GetRoutingForOperation(Inferrer inferrer);
    public BulkIndexDescriptor`1<T> Document(T object);
    public BulkIndexDescriptor`1<T> Pipeline(string pipeline);
    public BulkIndexDescriptor`1<T> Percolate(string percolate);
    public BulkIndexDescriptor`1<T> IfSequenceNumber(Nullable`1<long> seqNo);
    public BulkIndexDescriptor`1<T> IfPrimaryTerm(Nullable`1<long> primaryTerm);
}
[DataContractAttribute]
public class OpenSearch.Client.BulkIndexOperation`1 : BulkOperationBase {
    [CompilerGeneratedAttribute]
private T <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Percolate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pipeline>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfSequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfPrimaryTerm>k__BackingField;
    public T Document { get; public set; }
    public string Percolate { get; public set; }
    public string Pipeline { get; public set; }
    public Nullable`1<long> IfSequenceNumber { get; public set; }
    public Nullable`1<long> IfPrimaryTerm { get; public set; }
    protected Type ClrType { get; }
    protected string Operation { get; }
    public BulkIndexOperation`1(T document);
    [CompilerGeneratedAttribute]
public sealed virtual T get_Document();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Document(T value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Percolate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Percolate(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pipeline();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pipeline(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_IfSequenceNumber();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IfSequenceNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_IfPrimaryTerm();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IfPrimaryTerm(Nullable`1<long> value);
    protected virtual Type get_ClrType();
    protected virtual string get_Operation();
    protected virtual object GetBody();
    protected virtual Id GetIdForOperation(Inferrer inferrer);
    protected virtual Routing GetRoutingForOperation(Inferrer inferrer);
}
[DataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.ConcreteBulkIndexResponseItemFormatter`1<OpenSearch.Client.BulkIndexResponseItem>")]
public class OpenSearch.Client.BulkIndexResponseItem : BulkResponseItemBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Matches>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Operation>k__BackingField;
    [DataMemberAttribute]
public IEnumerable`1<string> Matches { get; internal set; }
    public string Operation { get; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Matches();
    [CompilerGeneratedAttribute]
internal void set_Matches(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public virtual string get_Operation();
}
public abstract class OpenSearch.Client.BulkOperationBase : object {
    [CompilerGeneratedAttribute]
private Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RetriesOnConflict>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VersionType> <VersionType>k__BackingField;
    public Id Id { get; public set; }
    public IndexName Index { get; public set; }
    public Nullable`1<int> RetriesOnConflict { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    protected Type ClrType { get; }
    protected string Operation { get; }
    private Type OpenSearch.Client.IBulkOperation.ClrType { get; }
    private string OpenSearch.Client.IBulkOperation.Operation { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Id get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Id value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_RetriesOnConflict();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RetriesOnConflict(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Routing get_Routing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Routing(Routing value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<VersionType> get_VersionType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_VersionType(Nullable`1<VersionType> value);
    protected abstract virtual Type get_ClrType();
    protected abstract virtual string get_Operation();
    private sealed virtual override Type OpenSearch.Client.IBulkOperation.get_ClrType();
    private sealed virtual override string OpenSearch.Client.IBulkOperation.get_Operation();
    private sealed virtual override object OpenSearch.Client.IBulkOperation.GetBody();
    private sealed virtual override Id OpenSearch.Client.IBulkOperation.GetIdForOperation(Inferrer inferrer);
    private sealed virtual override Routing OpenSearch.Client.IBulkOperation.GetRoutingForOperation(Inferrer inferrer);
    protected abstract virtual object GetBody();
    protected virtual Id GetIdForOperation(Inferrer inferrer);
    protected virtual Routing GetRoutingForOperation(Inferrer inferrer);
}
public abstract class OpenSearch.Client.BulkOperationDescriptorBase`2 : DescriptorBase`2<TDescriptor, TInterface> {
    [CompilerGeneratedAttribute]
private Id <OpenSearch.Client.IBulkOperation.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IBulkOperation.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IBulkOperation.RetriesOnConflict>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <OpenSearch.Client.IBulkOperation.Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IBulkOperation.Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VersionType> <OpenSearch.Client.IBulkOperation.VersionType>k__BackingField;
    protected Type BulkOperationClrType { get; }
    protected string BulkOperationType { get; }
    private Type OpenSearch.Client.IBulkOperation.ClrType { get; }
    private Id OpenSearch.Client.IBulkOperation.Id { get; private set; }
    private IndexName OpenSearch.Client.IBulkOperation.Index { get; private set; }
    private string OpenSearch.Client.IBulkOperation.Operation { get; }
    private Nullable`1<int> OpenSearch.Client.IBulkOperation.RetriesOnConflict { get; private set; }
    private Routing OpenSearch.Client.IBulkOperation.Routing { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IBulkOperation.Version { get; private set; }
    private Nullable`1<VersionType> OpenSearch.Client.IBulkOperation.VersionType { get; private set; }
    protected abstract virtual Type get_BulkOperationClrType();
    protected abstract virtual string get_BulkOperationType();
    private sealed virtual override Type OpenSearch.Client.IBulkOperation.get_ClrType();
    [CompilerGeneratedAttribute]
private sealed virtual override Id OpenSearch.Client.IBulkOperation.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkOperation.set_Id(Id value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IBulkOperation.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkOperation.set_Index(IndexName value);
    private sealed virtual override string OpenSearch.Client.IBulkOperation.get_Operation();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IBulkOperation.get_RetriesOnConflict();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkOperation.set_RetriesOnConflict(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Routing OpenSearch.Client.IBulkOperation.get_Routing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkOperation.set_Routing(Routing value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IBulkOperation.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkOperation.set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<VersionType> OpenSearch.Client.IBulkOperation.get_VersionType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkOperation.set_VersionType(Nullable`1<VersionType> value);
    private sealed virtual override object OpenSearch.Client.IBulkOperation.GetBody();
    private sealed virtual override Id OpenSearch.Client.IBulkOperation.GetIdForOperation(Inferrer inferrer);
    private sealed virtual override Routing OpenSearch.Client.IBulkOperation.GetRoutingForOperation(Inferrer inferrer);
    protected abstract virtual object GetBulkOperationBody();
    protected virtual Id GetIdForOperation(Inferrer inferrer);
    protected virtual Routing GetRoutingForOperation(Inferrer inferrer);
    public TDescriptor Index(IndexName index);
    public TDescriptor Index();
    public TDescriptor Id(Id id);
    public TDescriptor Version(Nullable`1<long> version);
    public TDescriptor VersionType(Nullable`1<VersionType> versionType);
    public TDescriptor Routing(Routing routing);
}
[DefaultMemberAttribute("Item")]
[ComVisibleAttribute("False")]
public class OpenSearch.Client.BulkOperationsCollection`1 : object {
    private object _lock;
    [CompilerGeneratedAttribute]
private List`1<TOperation> <Items>k__BackingField;
    public int Count { get; }
    public TOperation Item { get; public set; }
    private bool System.Collections.IList.IsFixedSize { get; }
    private bool System.Collections.Generic.ICollection<TOperation>.IsReadOnly { get; }
    private bool System.Collections.IList.IsReadOnly { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.IList.Item { get; private set; }
    private List`1<TOperation> Items { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    public BulkOperationsCollection`1(IEnumerable`1<TOperation> operations);
    public sealed virtual int get_Count();
    public sealed virtual TOperation get_Item(int index);
    public sealed virtual void set_Item(int index, TOperation value);
    private sealed virtual override bool System.Collections.IList.get_IsFixedSize();
    private sealed virtual override bool System.Collections.Generic.ICollection<TOperation>.get_IsReadOnly();
    private sealed virtual override bool System.Collections.IList.get_IsReadOnly();
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.IList.get_Item(int index);
    private sealed virtual override void System.Collections.IList.set_Item(int index, object value);
    [CompilerGeneratedAttribute]
private List`1<TOperation> get_Items();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public sealed virtual void Add(TOperation item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(TOperation item);
    public sealed virtual void CopyTo(TOperation[] array, int index);
    public sealed virtual bool Remove(TOperation item);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<TOperation> GetEnumerator();
    private sealed virtual override int System.Collections.IList.Add(object value);
    private sealed virtual override bool System.Collections.IList.Contains(object value);
    private sealed virtual override int System.Collections.IList.IndexOf(object value);
    private sealed virtual override void System.Collections.IList.Insert(int index, object value);
    private sealed virtual override void System.Collections.IList.Remove(object value);
    public static BulkOperationsCollection`1<TOperation> op_Implicit(List`1<TOperation> items);
    public sealed virtual int IndexOf(TOperation item);
    public sealed virtual void Insert(int index, TOperation item);
    public sealed virtual void RemoveAt(int index);
    public void AddRange(IEnumerable`1<TOperation> items);
    private int InternalIndexOf(TOperation item);
    private void InsertItem(int index, TOperation item);
    private void RemoveItem(int index);
    private static void VerifyValueType(object value);
}
public class OpenSearch.Client.BulkRequest : PlainRequestBase`1<BulkRequestParameters> {
    [CompilerGeneratedAttribute]
private BulkOperationsCollection`1<IBulkOperation> <Operations>k__BackingField;
    public BulkOperationsCollection`1<IBulkOperation> Operations { get; public set; }
    protected IBulkRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IBulkRequest.Index { get; }
    public string Pipeline { get; public set; }
    public Nullable`1<Refresh> Refresh { get; public set; }
    public Nullable`1<bool> RequireAlias { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<bool> SourceEnabled { get; public set; }
    public Fields SourceExcludes { get; public set; }
    public Fields SourceIncludes { get; public set; }
    public Time Timeout { get; public set; }
    public string TypeQueryString { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public BulkRequest(IndexName index);
    [CompilerGeneratedAttribute]
public sealed virtual BulkOperationsCollection`1<IBulkOperation> get_Operations();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Operations(BulkOperationsCollection`1<IBulkOperation> value);
    protected IBulkRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IBulkRequest.get_Index();
    public string get_Pipeline();
    public void set_Pipeline(string value);
    public Nullable`1<Refresh> get_Refresh();
    public void set_Refresh(Nullable`1<Refresh> value);
    public Nullable`1<bool> get_RequireAlias();
    public void set_RequireAlias(Nullable`1<bool> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Nullable`1<bool> get_SourceEnabled();
    public void set_SourceEnabled(Nullable`1<bool> value);
    public Fields get_SourceExcludes();
    public void set_SourceExcludes(Fields value);
    public Fields get_SourceIncludes();
    public void set_SourceIncludes(Fields value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public string get_TypeQueryString();
    public void set_TypeQueryString(string value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
internal class OpenSearch.Client.BulkRequestFormatter : object {
    private static byte Newline;
    [CompilerGeneratedAttribute]
private static SourceWriteFormatter`1<object> <SourceWriter>k__BackingField;
    private static SourceWriteFormatter`1<object> SourceWriter { get; }
    private static BulkRequestFormatter();
    [CompilerGeneratedAttribute]
private static SourceWriteFormatter`1<object> get_SourceWriter();
    public sealed virtual IBulkRequest Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IBulkRequest value, IJsonFormatterResolver formatterResolver);
}
[DataContractAttribute]
public class OpenSearch.Client.BulkResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private bool <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<BulkResponseItemBase> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Took>k__BackingField;
    [DataMemberAttribute]
public bool Errors { get; internal set; }
    public bool IsValid { get; }
    [DataMemberAttribute]
public IReadOnlyList`1<BulkResponseItemBase> Items { get; internal set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<BulkResponseItemBase> ItemsWithErrors { get; }
    [DataMemberAttribute]
public long Took { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_Errors();
    [CompilerGeneratedAttribute]
internal void set_Errors(bool value);
    public virtual bool get_IsValid();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<BulkResponseItemBase> get_Items();
    [CompilerGeneratedAttribute]
internal void set_Items(IReadOnlyList`1<BulkResponseItemBase> value);
    public IEnumerable`1<BulkResponseItemBase> get_ItemsWithErrors();
    [CompilerGeneratedAttribute]
public long get_Took();
    [CompilerGeneratedAttribute]
internal void set_Took(long value);
    protected virtual void DebugIsValid(StringBuilder sb);
}
[JsonFormatterAttribute("OpenSearch.Client.BulkResponseItemFormatter")]
public abstract class OpenSearch.Client.BulkResponseItemBase : object {
    [CompilerGeneratedAttribute]
private Error <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private long <PrimaryTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private LazyDocument <Get>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardStatistics <Shards>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    [DataMemberAttribute]
public Error Error { get; internal set; }
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public string Index { get; internal set; }
    public string Operation { get; }
    [DataMemberAttribute]
public long PrimaryTerm { get; internal set; }
    [DataMemberAttribute]
internal LazyDocument Get { get; internal set; }
    [DataMemberAttribute]
public string Result { get; internal set; }
    [DataMemberAttribute]
public long SequenceNumber { get; internal set; }
    [DataMemberAttribute]
public ShardStatistics Shards { get; internal set; }
    [DataMemberAttribute]
public int Status { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [DataMemberAttribute]
public long Version { get; internal set; }
    public bool IsValid { get; }
    [CompilerGeneratedAttribute]
public Error get_Error();
    [CompilerGeneratedAttribute]
internal void set_Error(Error value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    public abstract virtual string get_Operation();
    [CompilerGeneratedAttribute]
public long get_PrimaryTerm();
    [CompilerGeneratedAttribute]
internal void set_PrimaryTerm(long value);
    [CompilerGeneratedAttribute]
internal LazyDocument get_Get();
    [CompilerGeneratedAttribute]
internal void set_Get(LazyDocument value);
    public GetResponse`1<TDocument> GetResponse();
    [CompilerGeneratedAttribute]
public string get_Result();
    [CompilerGeneratedAttribute]
internal void set_Result(string value);
    [CompilerGeneratedAttribute]
public long get_SequenceNumber();
    [CompilerGeneratedAttribute]
internal void set_SequenceNumber(long value);
    [CompilerGeneratedAttribute]
public ShardStatistics get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ShardStatistics value);
    [CompilerGeneratedAttribute]
public int get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(int value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
    [CompilerGeneratedAttribute]
public long get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(long value);
    public bool get_IsValid();
    public virtual string ToString();
}
internal class OpenSearch.Client.BulkResponseItemFormatter : object {
    private static AutomataDictionary Operations;
    private static BulkResponseItemFormatter();
    public sealed virtual BulkResponseItemBase Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, BulkResponseItemBase value, IJsonFormatterResolver formatterResolver);
}
[DataContractAttribute]
internal class OpenSearch.Client.BulkUpdateBody`2 : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DocAsUpsert>k__BackingField;
    [CompilerGeneratedAttribute]
private TPartialUpdate <PartialUpdate>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ScriptedUpsert>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <Upsert>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfSequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfPrimaryTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <Source>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<bool> DocAsUpsert { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.CollapsedSourceFormatter`1")]
internal TPartialUpdate PartialUpdate { get; internal set; }
    [DataMemberAttribute]
internal IScript Script { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<bool> ScriptedUpsert { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.CollapsedSourceFormatter`1")]
internal TDocument Upsert { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<long> IfSequenceNumber { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<long> IfPrimaryTerm { get; internal set; }
    [DataMemberAttribute]
internal Union`2<bool, ISourceFilter> Source { get; internal set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DocAsUpsert();
    [CompilerGeneratedAttribute]
public void set_DocAsUpsert(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal TPartialUpdate get_PartialUpdate();
    [CompilerGeneratedAttribute]
internal void set_PartialUpdate(TPartialUpdate value);
    [CompilerGeneratedAttribute]
internal IScript get_Script();
    [CompilerGeneratedAttribute]
internal void set_Script(IScript value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_ScriptedUpsert();
    [CompilerGeneratedAttribute]
internal void set_ScriptedUpsert(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal TDocument get_Upsert();
    [CompilerGeneratedAttribute]
internal void set_Upsert(TDocument value);
    [CompilerGeneratedAttribute]
internal Nullable`1<long> get_IfSequenceNumber();
    [CompilerGeneratedAttribute]
internal void set_IfSequenceNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<long> get_IfPrimaryTerm();
    [CompilerGeneratedAttribute]
internal void set_IfPrimaryTerm(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
internal Union`2<bool, ISourceFilter> get_Source();
    [CompilerGeneratedAttribute]
internal void set_Source(Union`2<bool, ISourceFilter> value);
}
[DataContractAttribute]
public class OpenSearch.Client.BulkUpdateDescriptor`2 : BulkOperationDescriptorBase`2<BulkUpdateDescriptor`2<TDocument, TPartialDocument>, IBulkUpdateOperation`2<TDocument, TPartialDocument>> {
    [CompilerGeneratedAttribute]
private TPartialDocument <OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.Doc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.DocAsUpsert>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.IdFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.ScriptedUpsert>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.Upsert>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.IfSequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.IfPrimaryTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.Source>k__BackingField;
    protected Type BulkOperationClrType { get; }
    protected string BulkOperationType { get; }
    private TPartialDocument OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.Doc { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.DocAsUpsert { get; private set; }
    private TDocument OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.IdFrom { get; private set; }
    private IScript OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.Script { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.ScriptedUpsert { get; private set; }
    private TDocument OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.Upsert { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.IfSequenceNumber { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.IfPrimaryTerm { get; private set; }
    private Union`2<bool, ISourceFilter> OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.Source { get; private set; }
    protected virtual Type get_BulkOperationClrType();
    protected virtual string get_BulkOperationType();
    [CompilerGeneratedAttribute]
private sealed virtual override TPartialDocument OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.get_Doc();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.set_Doc(TPartialDocument value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.get_DocAsUpsert();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.set_DocAsUpsert(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override TDocument OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.get_IdFrom();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.set_IdFrom(TDocument value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.get_ScriptedUpsert();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.set_ScriptedUpsert(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override TDocument OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.get_Upsert();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.set_Upsert(TDocument value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.get_IfSequenceNumber();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.set_IfSequenceNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.get_IfPrimaryTerm();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.set_IfPrimaryTerm(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<bool, ISourceFilter> OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBulkUpdateOperation<TDocument,TPartialDocument>.set_Source(Union`2<bool, ISourceFilter> value);
    protected virtual object GetBulkOperationBody();
    protected virtual Id GetIdForOperation(Inferrer inferrer);
    protected virtual Routing GetRoutingForOperation(Inferrer inferrer);
    public BulkUpdateDescriptor`2<TDocument, TPartialDocument> IdFrom(TDocument object, bool useAsUpsert);
    public BulkUpdateDescriptor`2<TDocument, TPartialDocument> Upsert(TDocument object);
    public BulkUpdateDescriptor`2<TDocument, TPartialDocument> Doc(TPartialDocument object);
    public BulkUpdateDescriptor`2<TDocument, TPartialDocument> DocAsUpsert(Nullable`1<bool> partialDocumentAsUpsert);
    public BulkUpdateDescriptor`2<TDocument, TPartialDocument> ScriptedUpsert(Nullable`1<bool> scriptedUpsert);
    public BulkUpdateDescriptor`2<TDocument, TPartialDocument> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public BulkUpdateDescriptor`2<TDocument, TPartialDocument> RetriesOnConflict(Nullable`1<int> retriesOnConflict);
    public BulkUpdateDescriptor`2<TDocument, TPartialDocument> IfSequenceNumber(Nullable`1<long> seqNo);
    public BulkUpdateDescriptor`2<TDocument, TPartialDocument> IfPrimaryTerm(Nullable`1<long> primaryTerm);
    public BulkUpdateDescriptor`2<TDocument, TPartialDocument> Source(Union`2<bool, ISourceFilter> source);
}
[DataContractAttribute]
public class OpenSearch.Client.BulkUpdateOperation`2 : BulkOperationBase {
    [CompilerGeneratedAttribute]
private TPartialDocument <Doc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DocAsUpsert>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <IdFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ScriptedUpsert>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <Upsert>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfSequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfPrimaryTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <Source>k__BackingField;
    public TPartialDocument Doc { get; public set; }
    public Nullable`1<bool> DocAsUpsert { get; public set; }
    public TDocument IdFrom { get; public set; }
    public IScript Script { get; public set; }
    public Nullable`1<bool> ScriptedUpsert { get; public set; }
    public TDocument Upsert { get; public set; }
    public Nullable`1<long> IfSequenceNumber { get; public set; }
    public Nullable`1<long> IfPrimaryTerm { get; public set; }
    public Union`2<bool, ISourceFilter> Source { get; public set; }
    protected Type ClrType { get; }
    protected string Operation { get; }
    public BulkUpdateOperation`2(Id id);
    public BulkUpdateOperation`2(TDocument idFrom, bool useIdFromAsUpsert);
    public BulkUpdateOperation`2(TDocument idFrom, TPartialDocument update, bool useIdFromAsUpsert);
    [CompilerGeneratedAttribute]
public sealed virtual TPartialDocument get_Doc();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Doc(TPartialDocument value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DocAsUpsert();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DocAsUpsert(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_IdFrom();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdFrom(TDocument value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ScriptedUpsert();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScriptedUpsert(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_Upsert();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Upsert(TDocument value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_IfSequenceNumber();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IfSequenceNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_IfPrimaryTerm();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IfPrimaryTerm(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<bool, ISourceFilter> get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(Union`2<bool, ISourceFilter> value);
    protected virtual Type get_ClrType();
    protected virtual string get_Operation();
    protected virtual Id GetIdForOperation(Inferrer inferrer);
    protected virtual Routing GetRoutingForOperation(Inferrer inferrer);
    protected virtual object GetBody();
}
[DataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.ConcreteBulkIndexResponseItemFormatter`1<OpenSearch.Client.BulkUpdateResponseItem>")]
public class OpenSearch.Client.BulkUpdateResponseItem : BulkResponseItemBase {
    [CompilerGeneratedAttribute]
private string <Operation>k__BackingField;
    public string Operation { get; }
    [CompilerGeneratedAttribute]
public virtual string get_Operation();
}
public class OpenSearch.Client.BytesProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.BytesProcessorDescriptor`1 : ProcessorDescriptorBase`2<BytesProcessorDescriptor`1<T>, IBytesProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IBytesProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IBytesProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IBytesProcessor.TargetField>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IBytesProcessor.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IBytesProcessor.IgnoreMissing { get; private set; }
    private Field OpenSearch.Client.IBytesProcessor.TargetField { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IBytesProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBytesProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IBytesProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBytesProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IBytesProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IBytesProcessor.set_TargetField(Field value);
    public BytesProcessorDescriptor`1<T> Field(Field field);
    public BytesProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public BytesProcessorDescriptor`1<T> TargetField(Field field);
    public BytesProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public BytesProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
}
public class OpenSearch.Client.CancelClusterRerouteCommand : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowPrimary>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Shard>k__BackingField;
    public Nullable`1<bool> AllowPrimary { get; public set; }
    public IndexName Index { get; public set; }
    public string Name { get; }
    public string Node { get; public set; }
    public Nullable`1<int> Shard { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AllowPrimary();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowPrimary(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Node();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Node(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Shard();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Shard(Nullable`1<int> value);
}
public class OpenSearch.Client.CancelClusterRerouteCommandDescriptor : DescriptorBase`2<CancelClusterRerouteCommandDescriptor, ICancelClusterRerouteCommand> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICancelClusterRerouteCommand.AllowPrimary>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.ICancelClusterRerouteCommand.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICancelClusterRerouteCommand.Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ICancelClusterRerouteCommand.Shard>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.ICancelClusterRerouteCommand.AllowPrimary { get; private set; }
    private IndexName OpenSearch.Client.ICancelClusterRerouteCommand.Index { get; private set; }
    private string OpenSearch.Client.IClusterRerouteCommand.Name { get; }
    private string OpenSearch.Client.ICancelClusterRerouteCommand.Node { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ICancelClusterRerouteCommand.Shard { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICancelClusterRerouteCommand.get_AllowPrimary();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICancelClusterRerouteCommand.set_AllowPrimary(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.ICancelClusterRerouteCommand.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICancelClusterRerouteCommand.set_Index(IndexName value);
    private sealed virtual override string OpenSearch.Client.IClusterRerouteCommand.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICancelClusterRerouteCommand.get_Node();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICancelClusterRerouteCommand.set_Node(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ICancelClusterRerouteCommand.get_Shard();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICancelClusterRerouteCommand.set_Shard(Nullable`1<int> value);
    public CancelClusterRerouteCommandDescriptor Index(IndexName index);
    public CancelClusterRerouteCommandDescriptor Index();
    public CancelClusterRerouteCommandDescriptor Shard(Nullable`1<int> shard);
    public CancelClusterRerouteCommandDescriptor Node(string node);
    public CancelClusterRerouteCommandDescriptor AllowPrimary(Nullable`1<bool> allowPrimary);
}
public class OpenSearch.Client.CancelTasksDescriptor : RequestDescriptorBase`3<CancelTasksDescriptor, CancelTasksRequestParameters, ICancelTasksRequest> {
    internal ApiUrls ApiUrls { get; }
    private TaskId OpenSearch.Client.ICancelTasksRequest.TaskId { get; }
    public CancelTasksDescriptor(TaskId taskId);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override TaskId OpenSearch.Client.ICancelTasksRequest.get_TaskId();
    public CancelTasksDescriptor TaskId(TaskId taskId);
    public CancelTasksDescriptor Actions(String[] actions);
    public CancelTasksDescriptor Nodes(String[] nodes);
    public CancelTasksDescriptor ParentTaskId(string parenttaskid);
    public CancelTasksDescriptor WaitForCompletion(Nullable`1<bool> waitforcompletion);
}
public class OpenSearch.Client.CancelTasksRequest : PlainRequestBase`1<CancelTasksRequestParameters> {
    protected ICancelTasksRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private TaskId OpenSearch.Client.ICancelTasksRequest.TaskId { get; }
    public String[] Actions { get; public set; }
    public String[] Nodes { get; public set; }
    public string ParentTaskId { get; public set; }
    public Nullable`1<bool> WaitForCompletion { get; public set; }
    public CancelTasksRequest(TaskId taskId);
    protected ICancelTasksRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override TaskId OpenSearch.Client.ICancelTasksRequest.get_TaskId();
    public String[] get_Actions();
    public void set_Actions(String[] value);
    public String[] get_Nodes();
    public void set_Nodes(String[] value);
    public string get_ParentTaskId();
    public void set_ParentTaskId(string value);
    public Nullable`1<bool> get_WaitForCompletion();
    public void set_WaitForCompletion(Nullable`1<bool> value);
}
public class OpenSearch.Client.CancelTasksResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ErrorCause> <NodeFailures>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, TaskExecutingNode> <Nodes>k__BackingField;
    public bool IsValid { get; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ErrorCause> NodeFailures { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, TaskExecutingNode> Nodes { get; internal set; }
    public virtual bool get_IsValid();
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ErrorCause> get_NodeFailures();
    [CompilerGeneratedAttribute]
internal void set_NodeFailures(IReadOnlyCollection`1<ErrorCause> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, TaskExecutingNode> get_Nodes();
    [CompilerGeneratedAttribute]
internal void set_Nodes(IReadOnlyDictionary`2<string, TaskExecutingNode> value);
}
public class OpenSearch.Client.CardinalityAggregation : MetricAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrecisionThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Rehash>k__BackingField;
    public Nullable`1<int> PrecisionThreshold { get; public set; }
    public Nullable`1<bool> Rehash { get; public set; }
    public CardinalityAggregation(string name, Field field);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PrecisionThreshold();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrecisionThreshold(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Rehash();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Rehash(Nullable`1<bool> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.CardinalityAggregationDescriptor`1 : MetricAggregationDescriptorBase`3<CardinalityAggregationDescriptor`1<T>, ICardinalityAggregation, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ICardinalityAggregation.PrecisionThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICardinalityAggregation.Rehash>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.ICardinalityAggregation.PrecisionThreshold { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICardinalityAggregation.Rehash { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ICardinalityAggregation.get_PrecisionThreshold();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICardinalityAggregation.set_PrecisionThreshold(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICardinalityAggregation.get_Rehash();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICardinalityAggregation.set_Rehash(Nullable`1<bool> value);
    public CardinalityAggregationDescriptor`1<T> PrecisionThreshold(Nullable`1<int> precisionThreshold);
    public CardinalityAggregationDescriptor`1<T> Rehash(Nullable`1<bool> rehash);
}
[JsonFormatterAttribute("OpenSearch.Client.CartesianPointFormatter")]
public class OpenSearch.Client.CartesianPoint : object {
    internal ShapeFormat Format;
    [CompilerGeneratedAttribute]
private float <X>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Y>k__BackingField;
    public float X { get; public set; }
    public float Y { get; public set; }
    public CartesianPoint(float x, float y);
    [CompilerGeneratedAttribute]
public float get_X();
    [CompilerGeneratedAttribute]
public void set_X(float value);
    [CompilerGeneratedAttribute]
public float get_Y();
    [CompilerGeneratedAttribute]
public void set_Y(float value);
    public sealed virtual bool Equals(CartesianPoint other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static CartesianPoint FromCoordinates(string coordinates);
    public static CartesianPoint FromWellKnownText(string wkt);
    public static CartesianPoint op_Implicit(string value);
    public static bool op_Equality(CartesianPoint left, CartesianPoint right);
    public static bool op_Inequality(CartesianPoint left, CartesianPoint right);
}
internal class OpenSearch.Client.CartesianPointFormatter : object {
    private static AutomataDictionary Fields;
    private static CartesianPointFormatter();
    public sealed virtual void Serialize(JsonWriter& writer, CartesianPoint value, IJsonFormatterResolver formatterResolver);
    public sealed virtual CartesianPoint Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.CatAliasesDescriptor : RequestDescriptorBase`3<CatAliasesDescriptor, CatAliasesRequestParameters, ICatAliasesRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.ICatAliasesRequest.Name { get; }
    public CatAliasesDescriptor(Names name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.ICatAliasesRequest.get_Name();
    public CatAliasesDescriptor Name(Names name);
    public CatAliasesDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public CatAliasesDescriptor Format(string format);
    public CatAliasesDescriptor Headers(String[] headers);
    public CatAliasesDescriptor Help(Nullable`1<bool> help);
    public CatAliasesDescriptor Local(Nullable`1<bool> local);
    public CatAliasesDescriptor SortByColumns(String[] sortbycolumns);
    public CatAliasesDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatAliasesRecord : object {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexRouting>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchRouting>k__BackingField;
    [DataMemberAttribute]
public string Alias { get; public set; }
    [DataMemberAttribute]
public string Filter { get; public set; }
    [DataMemberAttribute]
public string Index { get; public set; }
    [DataMemberAttribute]
public string IndexRouting { get; public set; }
    [DataMemberAttribute]
public string SearchRouting { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public string get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_IndexRouting();
    [CompilerGeneratedAttribute]
public void set_IndexRouting(string value);
    [CompilerGeneratedAttribute]
public string get_SearchRouting();
    [CompilerGeneratedAttribute]
public void set_SearchRouting(string value);
}
public class OpenSearch.Client.CatAliasesRequest : PlainRequestBase`1<CatAliasesRequestParameters> {
    protected ICatAliasesRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.ICatAliasesRequest.Name { get; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatAliasesRequest(Names name);
    protected ICatAliasesRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.ICatAliasesRequest.get_Name();
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatAllocationDescriptor : RequestDescriptorBase`3<CatAllocationDescriptor, CatAllocationRequestParameters, ICatAllocationRequest> {
    internal ApiUrls ApiUrls { get; }
    private NodeIds OpenSearch.Client.ICatAllocationRequest.NodeId { get; }
    public CatAllocationDescriptor(NodeIds nodeId);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.ICatAllocationRequest.get_NodeId();
    public CatAllocationDescriptor NodeId(NodeIds nodeId);
    public CatAllocationDescriptor Bytes(Nullable`1<Bytes> bytes);
    public CatAllocationDescriptor Format(string format);
    public CatAllocationDescriptor Headers(String[] headers);
    public CatAllocationDescriptor Help(Nullable`1<bool> help);
    public CatAllocationDescriptor Local(Nullable`1<bool> local);
    public CatAllocationDescriptor MasterTimeout(Time mastertimeout);
    public CatAllocationDescriptor ClusterManagerTimeout(Time timeout);
    public CatAllocationDescriptor SortByColumns(String[] sortbycolumns);
    public CatAllocationDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatAllocationRecord : object {
    [CompilerGeneratedAttribute]
private string <DiskAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DiskIndices>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DiskPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DiskTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DiskUsed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Shards>k__BackingField;
    [DataMemberAttribute]
public string DiskAvailable { get; public set; }
    [DataMemberAttribute]
public string DiskIndices { get; public set; }
    [DataMemberAttribute]
public string DiskPercent { get; public set; }
    [DataMemberAttribute]
public string DiskTotal { get; public set; }
    [DataMemberAttribute]
public string DiskUsed { get; public set; }
    [DataMemberAttribute]
public string Host { get; public set; }
    [DataMemberAttribute]
public string Ip { get; public set; }
    [DataMemberAttribute]
public string Node { get; public set; }
    [DataMemberAttribute]
public string Shards { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DiskAvailable();
    [CompilerGeneratedAttribute]
public void set_DiskAvailable(string value);
    [CompilerGeneratedAttribute]
public string get_DiskIndices();
    [CompilerGeneratedAttribute]
public void set_DiskIndices(string value);
    [CompilerGeneratedAttribute]
public string get_DiskPercent();
    [CompilerGeneratedAttribute]
public void set_DiskPercent(string value);
    [CompilerGeneratedAttribute]
public string get_DiskTotal();
    [CompilerGeneratedAttribute]
public void set_DiskTotal(string value);
    [CompilerGeneratedAttribute]
public string get_DiskUsed();
    [CompilerGeneratedAttribute]
public void set_DiskUsed(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_Shards();
    [CompilerGeneratedAttribute]
public void set_Shards(string value);
}
public class OpenSearch.Client.CatAllocationRequest : PlainRequestBase`1<CatAllocationRequestParameters> {
    protected ICatAllocationRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private NodeIds OpenSearch.Client.ICatAllocationRequest.NodeId { get; }
    public Nullable`1<Bytes> Bytes { get; public set; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatAllocationRequest(NodeIds nodeId);
    protected ICatAllocationRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.ICatAllocationRequest.get_NodeId();
    public Nullable`1<Bytes> get_Bytes();
    public void set_Bytes(Nullable`1<Bytes> value);
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatAllPitSegmentsDescriptor : RequestDescriptorBase`3<CatAllPitSegmentsDescriptor, CatAllPitSegmentsRequestParameters, ICatAllPitSegmentsRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public CatAllPitSegmentsDescriptor Bytes(Nullable`1<Bytes> bytes);
    public CatAllPitSegmentsDescriptor Format(string format);
    public CatAllPitSegmentsDescriptor Headers(String[] headers);
    public CatAllPitSegmentsDescriptor Help(Nullable`1<bool> help);
    public CatAllPitSegmentsDescriptor SortByColumns(String[] sortbycolumns);
    public CatAllPitSegmentsDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatAllPitSegmentsRecord : CatPitSegmentsRecord {
}
public class OpenSearch.Client.CatAllPitSegmentsRequest : PlainRequestBase`1<CatAllPitSegmentsRequestParameters> {
    protected ICatAllPitSegmentsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<Bytes> Bytes { get; public set; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    protected ICatAllPitSegmentsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<Bytes> get_Bytes();
    public void set_Bytes(Nullable`1<Bytes> value);
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatClusterManagerDescriptor : RequestDescriptorBase`3<CatClusterManagerDescriptor, CatClusterManagerRequestParameters, ICatClusterManagerRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public CatClusterManagerDescriptor Format(string format);
    public CatClusterManagerDescriptor Headers(String[] headers);
    public CatClusterManagerDescriptor Help(Nullable`1<bool> help);
    public CatClusterManagerDescriptor Local(Nullable`1<bool> local);
    public CatClusterManagerDescriptor ClusterManagerTimeout(Time timeout);
    public CatClusterManagerDescriptor SortByColumns(String[] sortbycolumns);
    public CatClusterManagerDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatClusterManagerRecord : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Ip { get; public set; }
    [DataMemberAttribute]
public string Host { get; public set; }
    [DataMemberAttribute]
public string Node { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
}
public class OpenSearch.Client.CatClusterManagerRequest : PlainRequestBase`1<CatClusterManagerRequestParameters> {
    protected ICatClusterManagerRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    protected ICatClusterManagerRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatCountDescriptor : RequestDescriptorBase`3<CatCountDescriptor, CatCountRequestParameters, ICatCountRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ICatCountRequest.Index { get; }
    public CatCountDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatCountRequest.get_Index();
    public CatCountDescriptor Index(Indices index);
    public CatCountDescriptor Index();
    public CatCountDescriptor AllIndices();
    public CatCountDescriptor Format(string format);
    public CatCountDescriptor Headers(String[] headers);
    public CatCountDescriptor Help(Nullable`1<bool> help);
    public CatCountDescriptor SortByColumns(String[] sortbycolumns);
    public CatCountDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatCountRecord : object {
    [CompilerGeneratedAttribute]
private string <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Epoch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Timestamp>k__BackingField;
    [DataMemberAttribute]
public string Count { get; public set; }
    [DataMemberAttribute]
public string Epoch { get; public set; }
    [DataMemberAttribute]
public string Timestamp { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(string value);
    [CompilerGeneratedAttribute]
public string get_Epoch();
    [CompilerGeneratedAttribute]
public void set_Epoch(string value);
    [CompilerGeneratedAttribute]
public string get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(string value);
}
public class OpenSearch.Client.CatCountRequest : PlainRequestBase`1<CatCountRequestParameters> {
    protected ICatCountRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ICatCountRequest.Index { get; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatCountRequest(Indices index);
    protected ICatCountRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatCountRequest.get_Index();
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
[DataContractAttribute]
public class OpenSearch.Client.CategorySuggestContext : SuggestContextBase {
    public string Type { get; }
    public virtual string get_Type();
}
[DataContractAttribute]
public class OpenSearch.Client.CategorySuggestContextDescriptor`1 : SuggestContextDescriptorBase`3<CategorySuggestContextDescriptor`1<T>, ICategorySuggestContext, T> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public class OpenSearch.Client.CatFielddataDescriptor : RequestDescriptorBase`3<CatFielddataDescriptor, CatFielddataRequestParameters, ICatFielddataRequest> {
    internal ApiUrls ApiUrls { get; }
    private Fields OpenSearch.Client.ICatFielddataRequest.Fields { get; }
    public CatFielddataDescriptor(Fields fields);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Fields OpenSearch.Client.ICatFielddataRequest.get_Fields();
    public CatFielddataDescriptor Fields(Fields fields);
    public CatFielddataDescriptor Fields(Expression`1[] fields);
    public CatFielddataDescriptor Bytes(Nullable`1<Bytes> bytes);
    public CatFielddataDescriptor Format(string format);
    public CatFielddataDescriptor Headers(String[] headers);
    public CatFielddataDescriptor Help(Nullable`1<bool> help);
    public CatFielddataDescriptor SortByColumns(String[] sortbycolumns);
    public CatFielddataDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.CatFielddataRecordFormatter")]
public class OpenSearch.Client.CatFielddataRecord : object {
    [CompilerGeneratedAttribute]
private string <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Size>k__BackingField;
    public string Field { get; public set; }
    public string Host { get; public set; }
    public string Id { get; public set; }
    public string Ip { get; public set; }
    public string Node { get; public set; }
    public string Size { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Field();
    [CompilerGeneratedAttribute]
public void set_Field(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(string value);
}
internal class OpenSearch.Client.CatFielddataRecordFormatter : object {
    private static AutomataDictionary AutomataDictionary;
    private static CatFielddataRecordFormatter();
    public sealed virtual CatFielddataRecord Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, CatFielddataRecord value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.CatFielddataRequest : PlainRequestBase`1<CatFielddataRequestParameters> {
    protected ICatFielddataRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Fields OpenSearch.Client.ICatFielddataRequest.Fields { get; }
    public Nullable`1<Bytes> Bytes { get; public set; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatFielddataRequest(Fields fields);
    protected ICatFielddataRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Fields OpenSearch.Client.ICatFielddataRequest.get_Fields();
    public Nullable`1<Bytes> get_Bytes();
    public void set_Bytes(Nullable`1<Bytes> value);
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatHealthDescriptor : RequestDescriptorBase`3<CatHealthDescriptor, CatHealthRequestParameters, ICatHealthRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public CatHealthDescriptor Format(string format);
    public CatHealthDescriptor Headers(String[] headers);
    public CatHealthDescriptor Help(Nullable`1<bool> help);
    public CatHealthDescriptor IncludeTimestamp(Nullable`1<bool> includetimestamp);
    public CatHealthDescriptor SortByColumns(String[] sortbycolumns);
    public CatHealthDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatHealthRecord : object {
    [CompilerGeneratedAttribute]
private string <Cluster>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Epoch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Initializing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PendingTasks>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Primary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Relocating>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Shards>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Unassigned>k__BackingField;
    [DataMemberAttribute]
public string Cluster { get; public set; }
    [DataMemberAttribute]
public string Epoch { get; public set; }
    [DataMemberAttribute]
public string Initializing { get; public set; }
    [DataMemberAttribute]
public string NodeData { get; public set; }
    [DataMemberAttribute]
public string NodeTotal { get; public set; }
    [DataMemberAttribute]
public string PendingTasks { get; public set; }
    [DataMemberAttribute]
public string Primary { get; public set; }
    [DataMemberAttribute]
public string Relocating { get; public set; }
    [DataMemberAttribute]
public string Shards { get; public set; }
    [DataMemberAttribute]
public string Status { get; public set; }
    [DataMemberAttribute]
public string Timestamp { get; public set; }
    [DataMemberAttribute]
public string Unassigned { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Cluster();
    [CompilerGeneratedAttribute]
public void set_Cluster(string value);
    [CompilerGeneratedAttribute]
public string get_Epoch();
    [CompilerGeneratedAttribute]
public void set_Epoch(string value);
    [CompilerGeneratedAttribute]
public string get_Initializing();
    [CompilerGeneratedAttribute]
public void set_Initializing(string value);
    [CompilerGeneratedAttribute]
public string get_NodeData();
    [CompilerGeneratedAttribute]
public void set_NodeData(string value);
    [CompilerGeneratedAttribute]
public string get_NodeTotal();
    [CompilerGeneratedAttribute]
public void set_NodeTotal(string value);
    [CompilerGeneratedAttribute]
public string get_PendingTasks();
    [CompilerGeneratedAttribute]
public void set_PendingTasks(string value);
    [CompilerGeneratedAttribute]
public string get_Primary();
    [CompilerGeneratedAttribute]
public void set_Primary(string value);
    [CompilerGeneratedAttribute]
public string get_Relocating();
    [CompilerGeneratedAttribute]
public void set_Relocating(string value);
    [CompilerGeneratedAttribute]
public string get_Shards();
    [CompilerGeneratedAttribute]
public void set_Shards(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(string value);
    [CompilerGeneratedAttribute]
public string get_Unassigned();
    [CompilerGeneratedAttribute]
public void set_Unassigned(string value);
}
public class OpenSearch.Client.CatHealthRequest : PlainRequestBase`1<CatHealthRequestParameters> {
    protected ICatHealthRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> IncludeTimestamp { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    protected ICatHealthRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeTimestamp();
    public void set_IncludeTimestamp(Nullable`1<bool> value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatHelpDescriptor : RequestDescriptorBase`3<CatHelpDescriptor, CatHelpRequestParameters, ICatHelpRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public CatHelpDescriptor Help(Nullable`1<bool> help);
    public CatHelpDescriptor SortByColumns(String[] sortbycolumns);
}
[DataContractAttribute]
public class OpenSearch.Client.CatHelpRecord : object {
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [DataMemberAttribute]
public string Endpoint { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
}
public class OpenSearch.Client.CatHelpRequest : PlainRequestBase`1<CatHelpRequestParameters> {
    protected ICatHelpRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<bool> Help { get; public set; }
    public String[] SortByColumns { get; public set; }
    protected ICatHelpRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
}
internal class OpenSearch.Client.CatHelpResponseBuilder : CustomResponseBuilderBase {
    [CompilerGeneratedAttribute]
private static CatHelpResponseBuilder <Instance>k__BackingField;
    public static CatHelpResponseBuilder Instance { get; }
    private static CatHelpResponseBuilder();
    [CompilerGeneratedAttribute]
public static CatHelpResponseBuilder get_Instance();
    public virtual object DeserializeResponse(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream);
    [AsyncStateMachineAttribute("OpenSearch.Client.CatHelpResponseBuilder/<DeserializeResponseAsync>d__4")]
public virtual Task`1<object> DeserializeResponseAsync(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream, CancellationToken ctx);
    private static void Parse(CatResponse`1<CatHelpRecord> catResponse, string body);
}
public class OpenSearch.Client.CatIndicesDescriptor : RequestDescriptorBase`3<CatIndicesDescriptor, CatIndicesRequestParameters, ICatIndicesRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ICatIndicesRequest.Index { get; }
    public CatIndicesDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatIndicesRequest.get_Index();
    public CatIndicesDescriptor Index(Indices index);
    public CatIndicesDescriptor Index();
    public CatIndicesDescriptor AllIndices();
    public CatIndicesDescriptor Bytes(Nullable`1<Bytes> bytes);
    public CatIndicesDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public CatIndicesDescriptor Format(string format);
    public CatIndicesDescriptor Headers(String[] headers);
    public CatIndicesDescriptor Health(Nullable`1<Health> health);
    public CatIndicesDescriptor Help(Nullable`1<bool> help);
    public CatIndicesDescriptor IncludeUnloadedSegments(Nullable`1<bool> includeunloadedsegments);
    public CatIndicesDescriptor Local(Nullable`1<bool> local);
    public CatIndicesDescriptor MasterTimeout(Time mastertimeout);
    public CatIndicesDescriptor ClusterManagerTimeout(Time timeout);
    public CatIndicesDescriptor Pri(Nullable`1<bool> pri);
    public CatIndicesDescriptor SortByColumns(String[] sortbycolumns);
    public CatIndicesDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatIndicesRecord : object {
    [CompilerGeneratedAttribute]
private string <DocsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Health>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UUID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Primary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrimaryStoreSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Replica>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StoreSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TotalMemory>k__BackingField;
    [DataMemberAttribute]
public string DocsCount { get; public set; }
    [DataMemberAttribute]
public string DocsDeleted { get; public set; }
    [DataMemberAttribute]
public string Health { get; public set; }
    [DataMemberAttribute]
public string Index { get; public set; }
    [DataMemberAttribute]
public string UUID { get; public set; }
    [DataMemberAttribute]
public string Primary { get; public set; }
    [DataMemberAttribute]
public string PrimaryStoreSize { get; public set; }
    [DataMemberAttribute]
public string Replica { get; public set; }
    [DataMemberAttribute]
public string Status { get; public set; }
    [DataMemberAttribute]
public string StoreSize { get; public set; }
    [DataMemberAttribute]
public string TotalMemory { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DocsCount();
    [CompilerGeneratedAttribute]
public void set_DocsCount(string value);
    [CompilerGeneratedAttribute]
public string get_DocsDeleted();
    [CompilerGeneratedAttribute]
public void set_DocsDeleted(string value);
    [CompilerGeneratedAttribute]
public string get_Health();
    [CompilerGeneratedAttribute]
public void set_Health(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_UUID();
    [CompilerGeneratedAttribute]
public void set_UUID(string value);
    [CompilerGeneratedAttribute]
public string get_Primary();
    [CompilerGeneratedAttribute]
public void set_Primary(string value);
    [CompilerGeneratedAttribute]
public string get_PrimaryStoreSize();
    [CompilerGeneratedAttribute]
public void set_PrimaryStoreSize(string value);
    [CompilerGeneratedAttribute]
public string get_Replica();
    [CompilerGeneratedAttribute]
public void set_Replica(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_StoreSize();
    [CompilerGeneratedAttribute]
public void set_StoreSize(string value);
    [CompilerGeneratedAttribute]
public string get_TotalMemory();
    [CompilerGeneratedAttribute]
public void set_TotalMemory(string value);
}
public class OpenSearch.Client.CatIndicesRequest : PlainRequestBase`1<CatIndicesRequestParameters> {
    protected ICatIndicesRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ICatIndicesRequest.Index { get; }
    public Nullable`1<Bytes> Bytes { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<Health> Health { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> IncludeUnloadedSegments { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<bool> Pri { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatIndicesRequest(Indices index);
    protected ICatIndicesRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatIndicesRequest.get_Index();
    public Nullable`1<Bytes> get_Bytes();
    public void set_Bytes(Nullable`1<Bytes> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<Health> get_Health();
    public void set_Health(Nullable`1<Health> value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeUnloadedSegments();
    public void set_IncludeUnloadedSegments(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<bool> get_Pri();
    public void set_Pri(Nullable`1<bool> value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatMasterDescriptor : RequestDescriptorBase`3<CatMasterDescriptor, CatMasterRequestParameters, ICatMasterRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public CatMasterDescriptor Format(string format);
    public CatMasterDescriptor Headers(String[] headers);
    public CatMasterDescriptor Help(Nullable`1<bool> help);
    public CatMasterDescriptor Local(Nullable`1<bool> local);
    public CatMasterDescriptor MasterTimeout(Time mastertimeout);
    public CatMasterDescriptor SortByColumns(String[] sortbycolumns);
    public CatMasterDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatMasterRecord : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Ip { get; public set; }
    [DataMemberAttribute]
public string Host { get; public set; }
    [DataMemberAttribute]
public string Node { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
}
public class OpenSearch.Client.CatMasterRequest : PlainRequestBase`1<CatMasterRequestParameters> {
    protected ICatMasterRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    protected ICatMasterRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatNodeAttributesDescriptor : RequestDescriptorBase`3<CatNodeAttributesDescriptor, CatNodeAttributesRequestParameters, ICatNodeAttributesRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public CatNodeAttributesDescriptor Format(string format);
    public CatNodeAttributesDescriptor Headers(String[] headers);
    public CatNodeAttributesDescriptor Help(Nullable`1<bool> help);
    public CatNodeAttributesDescriptor Local(Nullable`1<bool> local);
    public CatNodeAttributesDescriptor MasterTimeout(Time mastertimeout);
    public CatNodeAttributesDescriptor ClusterManagerTimeout(Time timeout);
    public CatNodeAttributesDescriptor SortByColumns(String[] sortbycolumns);
    public CatNodeAttributesDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatNodeAttributesRecord : object {
    [CompilerGeneratedAttribute]
private string <Attribute>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [DataMemberAttribute]
public string Attribute { get; public set; }
    [DataMemberAttribute]
public string Host { get; public set; }
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Ip { get; public set; }
    [DataMemberAttribute]
public string Node { get; public set; }
    [DataMemberAttribute]
public long Port { get; public set; }
    [DataMemberAttribute]
public long ProcessId { get; public set; }
    [DataMemberAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Attribute();
    [CompilerGeneratedAttribute]
public void set_Attribute(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public long get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(long value);
    [CompilerGeneratedAttribute]
public long get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(long value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class OpenSearch.Client.CatNodeAttributesRequest : PlainRequestBase`1<CatNodeAttributesRequestParameters> {
    protected ICatNodeAttributesRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    protected ICatNodeAttributesRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatNodesDescriptor : RequestDescriptorBase`3<CatNodesDescriptor, CatNodesRequestParameters, ICatNodesRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public CatNodesDescriptor Bytes(Nullable`1<Bytes> bytes);
    public CatNodesDescriptor Format(string format);
    public CatNodesDescriptor FullId(Nullable`1<bool> fullid);
    public CatNodesDescriptor Headers(String[] headers);
    public CatNodesDescriptor Help(Nullable`1<bool> help);
    public CatNodesDescriptor MasterTimeout(Time mastertimeout);
    public CatNodesDescriptor ClusterManagerTimeout(Time timeout);
    public CatNodesDescriptor SortByColumns(String[] sortbycolumns);
    public CatNodesDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatNodesRecord : object {
    [CompilerGeneratedAttribute]
private string <CPU>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoadFifteenMinute>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoadFiveMinute>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoadOneMinute>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_b>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_build>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_cm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_cluster_manager>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_completion_size>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_completionSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_cs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_d>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_data_client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_dc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_disk>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_disk_avail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_diskAvail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_fce>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_fcm>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <_fdc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <_fdm>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <_fdp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_fe>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_fielddata_evictions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_fielddata_memory_size>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_fielddataEvictions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_fielddataMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <_file_desc_current>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <_file_desc_max>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <_file_desc_percent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <_fileDescriptorCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <_fileDescriptorMax>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <_fileDescriptorPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_filter_cache_evictions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_filter_cache_memory_size>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_filterCacheEvictions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_filterCacheMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_flush_total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_flush_total_time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_flushTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_flushTotalTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_fm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_ft>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_ftt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_gc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_get_current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_get_exists_time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_get_exists_total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_get_missing_time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_get_missing_total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_get_time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_get_total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_getCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_getExistsTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_getExistsTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_geti>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_getMissingTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_getMissingTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_geto>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_getTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_getTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_gmti>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_gmto>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_gti>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_gto>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_hc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_heap_current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_heap_max>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_heap_percent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_heapCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_heapMax>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_heapPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_hm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_hp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_i>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_id_cache_memory_size>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_idCacheMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_idcs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_idti>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_idto>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_iic>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_iiti>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_iito>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_im>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexing_delete_current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexing_delete_time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexing_delete_total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexing_index_current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexing_index_time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexing_index_total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexingDeleteCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexingDeleteTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexingDeleteTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexingIndexCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexingIndexTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_indexingIndexTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_j>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_jdk>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_m>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_master>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mcd>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mcs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_merges_current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_merges_current_docs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_merges_current_size>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_merges_total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_merges_total_docs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_merges_total_time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mergesCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mergesCurrentDocs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mergesCurrentSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mergesTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mergesTotalDocs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mergesTotalTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mtd>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_mtt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_n>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_node_role>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_nodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_nodeRole>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_p>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_pc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_percolate_current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_percolate_memory_size>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_percolate_queries>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_percolate_time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_percolate_total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_percolateCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_percolateMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_percolateQueries>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_percolateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_percolateTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_pid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_pm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_po>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_pq>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_pti>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_pto>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_query_cache_memory_size>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_qcm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_queryCacheMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_query_cache_evictions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_qce>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_queryCacheEvictions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_query_cache_hit_count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_qchc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_queryCacheHitCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_query_cache_miss_count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_qcmc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_queryCacheMissCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_r>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_ram_current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_ram_max>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_ram_percent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_ramCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_ramMax>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_ramPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_rc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_refresh_time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_refresh_total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_refreshTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_refreshTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_rm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_rp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_rti>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_rto>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_sc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_search_fetch_current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_search_fetch_time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_search_fetch_total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_search_open_contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_search_query_current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_search_query_time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_search_query_total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_searchFetchCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_searchFetchTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_searchFetchTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_searchOpenContexts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_searchQueryCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_searchQueryTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_searchQueryTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_segments_count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_segments_index_writer_max_memory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_segments_index_writer_memory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_segments_memory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_segments_version_map_memory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_segmentsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_segmentsIndexWriterMaxMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_segmentsIndexWriterMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_segmentsMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_segmentsVersionMapMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_sfc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_sfti>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_sfto>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_siwm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_siwmx>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_sm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_so>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_sqc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_sqti>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_sqto>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_svmm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_u>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_uptime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_v>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_version>k__BackingField;
    public string Build { get; }
    public string ClusterManager { get; }
    public string CompletionSize { get; }
    [DataMemberAttribute]
public string CPU { get; internal set; }
    public string DiskAvailable { get; }
    public string FielddataEvictions { get; }
    public string FielddataMemory { get; }
    public Nullable`1<int> FileDescriptorCurrent { get; }
    public Nullable`1<int> FileDescriptorMax { get; }
    public Nullable`1<int> FileDescriptorPercent { get; }
    public string FilterCacheEvictions { get; }
    public string FilterCacheMemory { get; }
    public string FlushTotal { get; }
    public string FlushTotalTime { get; }
    public string GetCurrent { get; }
    public string GetExistsTime { get; }
    public string GetExistsTotal { get; }
    public string GetMissingTime { get; }
    public string GetMissingTotal { get; }
    public string GetTime { get; }
    public string GetTotal { get; }
    public string HeapCurrent { get; }
    public string HeapMax { get; }
    public string HeapPercent { get; }
    public string IdCacheMemory { get; }
    public string IndexingDeleteCurrent { get; }
    public string IndexingDeleteTime { get; }
    public string IndexingDeleteTotal { get; }
    public string IndexingIndexCurrent { get; }
    public string IndexingIndexTime { get; }
    public string IndexingIndexTotal { get; }
    public string Ip { get; }
    public string Jdk { get; }
    [DataMemberAttribute]
public string LoadFifteenMinute { get; internal set; }
    [DataMemberAttribute]
public string LoadFiveMinute { get; internal set; }
    [DataMemberAttribute]
public string LoadOneMinute { get; internal set; }
    public string Master { get; }
    public string MergesCurrent { get; }
    public string MergesCurrentDocs { get; }
    public string MergesCurrentSize { get; }
    public string MergesTotal { get; }
    public string MergesTotalDocs { get; }
    public string MergesTotalTime { get; }
    public string Name { get; }
    public string NodeId { get; }
    public string NodeRole { get; }
    public string PercolateCurrent { get; }
    public string PercolateMemory { get; }
    public string PercolateQueries { get; }
    public string PercolateTime { get; }
    public string PercolateTotal { get; }
    public string Pid { get; }
    public string Port { get; }
    public string QueryCacheMemorySize { get; }
    public string QueryCacheEvictions { get; }
    public string QueryCacheHitCount { get; }
    public string QueryCacheMissCount { get; }
    public string RamCurrent { get; }
    public string RamMax { get; }
    public string RamPercent { get; }
    public string RefreshTime { get; }
    public string RefreshTotal { get; }
    public string SearchFetchCurrent { get; }
    public string SearchFetchTime { get; }
    public string SearchFetchTotal { get; }
    public string SearchOpenContexts { get; }
    public string SearchQueryCurrent { get; }
    public string SearchQueryTime { get; }
    public string SearchQueryTotal { get; }
    public string SegmentsCount { get; }
    public string SegmentsIndexWriterMaxMemory { get; }
    public string SegmentsIndexWriterMemory { get; }
    public string SegmentsMemory { get; }
    public string SegmentsVersionMapMemory { get; }
    public string Uptime { get; }
    public string Version { get; }
    [DataMemberAttribute]
internal string _b { get; internal set; }
    [DataMemberAttribute]
internal string _build { get; internal set; }
    [DataMemberAttribute]
internal string _cm { get; internal set; }
    [DataMemberAttribute]
internal string _cluster_manager { get; internal set; }
    [DataMemberAttribute]
internal string _completion_size { get; internal set; }
    [DataMemberAttribute]
internal string _completionSize { get; internal set; }
    [DataMemberAttribute]
internal string _cs { get; internal set; }
    [DataMemberAttribute]
internal string _d { get; internal set; }
    [DataMemberAttribute]
internal string _data_client { get; internal set; }
    [DataMemberAttribute]
internal string _dc { get; internal set; }
    [DataMemberAttribute]
internal string _disk { get; internal set; }
    [DataMemberAttribute]
internal string _disk_avail { get; internal set; }
    [DataMemberAttribute]
internal string _diskAvail { get; internal set; }
    [DataMemberAttribute]
internal string _fce { get; internal set; }
    [DataMemberAttribute]
internal string _fcm { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<int> _fdc { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<int> _fdm { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<int> _fdp { get; internal set; }
    [DataMemberAttribute]
internal string _fe { get; internal set; }
    [DataMemberAttribute]
internal string _fielddata_evictions { get; internal set; }
    [DataMemberAttribute]
internal string _fielddata_memory_size { get; internal set; }
    [DataMemberAttribute]
internal string _fielddataEvictions { get; internal set; }
    [DataMemberAttribute]
internal string _fielddataMemory { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<int> _file_desc_current { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<int> _file_desc_max { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<int> _file_desc_percent { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<int> _fileDescriptorCurrent { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<int> _fileDescriptorMax { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<int> _fileDescriptorPercent { get; internal set; }
    [DataMemberAttribute]
internal string _filter_cache_evictions { get; internal set; }
    [DataMemberAttribute]
internal string _filter_cache_memory_size { get; internal set; }
    [DataMemberAttribute]
internal string _filterCacheEvictions { get; internal set; }
    [DataMemberAttribute]
internal string _filterCacheMemory { get; internal set; }
    [DataMemberAttribute]
internal string _flush_total { get; internal set; }
    [DataMemberAttribute]
internal string _flush_total_time { get; internal set; }
    [DataMemberAttribute]
internal string _flushTotal { get; internal set; }
    [DataMemberAttribute]
internal string _flushTotalTime { get; internal set; }
    [DataMemberAttribute]
internal string _fm { get; internal set; }
    [DataMemberAttribute]
internal string _ft { get; internal set; }
    [DataMemberAttribute]
internal string _ftt { get; internal set; }
    [DataMemberAttribute]
internal string _gc { get; internal set; }
    [DataMemberAttribute]
internal string _get_current { get; internal set; }
    [DataMemberAttribute]
internal string _get_exists_time { get; internal set; }
    [DataMemberAttribute]
internal string _get_exists_total { get; internal set; }
    [DataMemberAttribute]
internal string _get_missing_time { get; internal set; }
    [DataMemberAttribute]
internal string _get_missing_total { get; internal set; }
    [DataMemberAttribute]
internal string _get_time { get; internal set; }
    [DataMemberAttribute]
internal string _get_total { get; internal set; }
    [DataMemberAttribute]
internal string _getCurrent { get; internal set; }
    [DataMemberAttribute]
internal string _getExistsTime { get; internal set; }
    [DataMemberAttribute]
internal string _getExistsTotal { get; internal set; }
    [DataMemberAttribute]
internal string _geti { get; internal set; }
    [DataMemberAttribute]
internal string _getMissingTime { get; internal set; }
    [DataMemberAttribute]
internal string _getMissingTotal { get; internal set; }
    [DataMemberAttribute]
internal string _geto { get; internal set; }
    [DataMemberAttribute]
internal string _getTime { get; internal set; }
    [DataMemberAttribute]
internal string _getTotal { get; internal set; }
    [DataMemberAttribute]
internal string _gmti { get; internal set; }
    [DataMemberAttribute]
internal string _gmto { get; internal set; }
    [DataMemberAttribute]
internal string _gti { get; internal set; }
    [DataMemberAttribute]
internal string _gto { get; internal set; }
    [DataMemberAttribute]
internal string _hc { get; internal set; }
    [DataMemberAttribute]
internal string _heap_current { get; internal set; }
    [DataMemberAttribute]
internal string _heap_max { get; internal set; }
    [DataMemberAttribute]
internal string _heap_percent { get; internal set; }
    [DataMemberAttribute]
internal string _heapCurrent { get; internal set; }
    [DataMemberAttribute]
internal string _heapMax { get; internal set; }
    [DataMemberAttribute]
internal string _heapPercent { get; internal set; }
    [DataMemberAttribute]
internal string _hm { get; internal set; }
    [DataMemberAttribute]
internal string _hp { get; internal set; }
    [DataMemberAttribute]
internal string _i { get; internal set; }
    [DataMemberAttribute]
internal string _id { get; internal set; }
    [DataMemberAttribute]
internal string _id_cache_memory_size { get; internal set; }
    [DataMemberAttribute]
internal string _idCacheMemory { get; internal set; }
    [DataMemberAttribute]
internal string _idcs { get; internal set; }
    [DataMemberAttribute]
internal string _idti { get; internal set; }
    [DataMemberAttribute]
internal string _idto { get; internal set; }
    [DataMemberAttribute]
internal string _iic { get; internal set; }
    [DataMemberAttribute]
internal string _iiti { get; internal set; }
    [DataMemberAttribute]
internal string _iito { get; internal set; }
    [DataMemberAttribute]
internal string _im { get; internal set; }
    [DataMemberAttribute]
internal string _indexing_delete_current { get; internal set; }
    [DataMemberAttribute]
internal string _indexing_delete_time { get; internal set; }
    [DataMemberAttribute]
internal string _indexing_delete_total { get; internal set; }
    [DataMemberAttribute]
internal string _indexing_index_current { get; internal set; }
    [DataMemberAttribute]
internal string _indexing_index_time { get; internal set; }
    [DataMemberAttribute]
internal string _indexing_index_total { get; internal set; }
    [DataMemberAttribute]
internal string _indexingDeleteCurrent { get; internal set; }
    [DataMemberAttribute]
internal string _indexingDeleteTime { get; internal set; }
    [DataMemberAttribute]
internal string _indexingDeleteTotal { get; internal set; }
    [DataMemberAttribute]
internal string _indexingIndexCurrent { get; internal set; }
    [DataMemberAttribute]
internal string _indexingIndexTime { get; internal set; }
    [DataMemberAttribute]
internal string _indexingIndexTotal { get; internal set; }
    [DataMemberAttribute]
internal string _ip { get; internal set; }
    [DataMemberAttribute]
internal string _j { get; internal set; }
    [DataMemberAttribute]
internal string _jdk { get; internal set; }
    [DataMemberAttribute]
internal string _m { get; internal set; }
    [DataMemberAttribute]
internal string _master { get; internal set; }
    [DataMemberAttribute]
internal string _mc { get; internal set; }
    [DataMemberAttribute]
internal string _mcd { get; internal set; }
    [DataMemberAttribute]
internal string _mcs { get; internal set; }
    [DataMemberAttribute]
internal string _merges_current { get; internal set; }
    [DataMemberAttribute]
internal string _merges_current_docs { get; internal set; }
    [DataMemberAttribute]
internal string _merges_current_size { get; internal set; }
    [DataMemberAttribute]
internal string _merges_total { get; internal set; }
    [DataMemberAttribute]
internal string _merges_total_docs { get; internal set; }
    [DataMemberAttribute]
internal string _merges_total_time { get; internal set; }
    [DataMemberAttribute]
internal string _mergesCurrent { get; internal set; }
    [DataMemberAttribute]
internal string _mergesCurrentDocs { get; internal set; }
    [DataMemberAttribute]
internal string _mergesCurrentSize { get; internal set; }
    [DataMemberAttribute]
internal string _mergesTotal { get; internal set; }
    [DataMemberAttribute]
internal string _mergesTotalDocs { get; internal set; }
    [DataMemberAttribute]
internal string _mergesTotalTime { get; internal set; }
    [DataMemberAttribute]
internal string _mt { get; internal set; }
    [DataMemberAttribute]
internal string _mtd { get; internal set; }
    [DataMemberAttribute]
internal string _mtt { get; internal set; }
    [DataMemberAttribute]
internal string _n { get; internal set; }
    [DataMemberAttribute]
internal string _name { get; internal set; }
    [DataMemberAttribute]
internal string _node_role { get; internal set; }
    [DataMemberAttribute]
internal string _nodeId { get; internal set; }
    [DataMemberAttribute]
internal string _nodeRole { get; internal set; }
    [DataMemberAttribute]
internal string _p { get; internal set; }
    [DataMemberAttribute]
internal string _pc { get; internal set; }
    [DataMemberAttribute]
internal string _percolate_current { get; internal set; }
    [DataMemberAttribute]
internal string _percolate_memory_size { get; internal set; }
    [DataMemberAttribute]
internal string _percolate_queries { get; internal set; }
    [DataMemberAttribute]
internal string _percolate_time { get; internal set; }
    [DataMemberAttribute]
internal string _percolate_total { get; internal set; }
    [DataMemberAttribute]
internal string _percolateCurrent { get; internal set; }
    [DataMemberAttribute]
internal string _percolateMemory { get; internal set; }
    [DataMemberAttribute]
internal string _percolateQueries { get; internal set; }
    [DataMemberAttribute]
internal string _percolateTime { get; internal set; }
    [DataMemberAttribute]
internal string _percolateTotal { get; internal set; }
    [DataMemberAttribute]
internal string _pid { get; internal set; }
    [DataMemberAttribute]
internal string _pm { get; internal set; }
    [DataMemberAttribute]
internal string _po { get; internal set; }
    [DataMemberAttribute]
internal string _port { get; internal set; }
    [DataMemberAttribute]
internal string _pq { get; internal set; }
    [DataMemberAttribute]
internal string _pti { get; internal set; }
    [DataMemberAttribute]
internal string _pto { get; internal set; }
    [DataMemberAttribute]
internal string _query_cache_memory_size { get; internal set; }
    [DataMemberAttribute]
internal string _qcm { get; internal set; }
    [DataMemberAttribute]
internal string _queryCacheMemory { get; internal set; }
    [DataMemberAttribute]
internal string _query_cache_evictions { get; internal set; }
    [DataMemberAttribute]
internal string _qce { get; internal set; }
    [DataMemberAttribute]
internal string _queryCacheEvictions { get; internal set; }
    [DataMemberAttribute]
internal string _query_cache_hit_count { get; internal set; }
    [DataMemberAttribute]
internal string _qchc { get; internal set; }
    [DataMemberAttribute]
internal string _queryCacheHitCount { get; internal set; }
    [DataMemberAttribute]
internal string _query_cache_miss_count { get; internal set; }
    [DataMemberAttribute]
internal string _qcmc { get; internal set; }
    [DataMemberAttribute]
internal string _queryCacheMissCount { get; internal set; }
    [DataMemberAttribute]
internal string _r { get; internal set; }
    [DataMemberAttribute]
internal string _ram_current { get; internal set; }
    [DataMemberAttribute]
internal string _ram_max { get; internal set; }
    [DataMemberAttribute]
internal string _ram_percent { get; internal set; }
    [DataMemberAttribute]
internal string _ramCurrent { get; internal set; }
    [DataMemberAttribute]
internal string _ramMax { get; internal set; }
    [DataMemberAttribute]
internal string _ramPercent { get; internal set; }
    [DataMemberAttribute]
internal string _rc { get; internal set; }
    [DataMemberAttribute]
internal string _refresh_time { get; internal set; }
    [DataMemberAttribute]
internal string _refresh_total { get; internal set; }
    [DataMemberAttribute]
internal string _refreshTime { get; internal set; }
    [DataMemberAttribute]
internal string _refreshTotal { get; internal set; }
    [DataMemberAttribute]
internal string _rm { get; internal set; }
    [DataMemberAttribute]
internal string _rp { get; internal set; }
    [DataMemberAttribute]
internal string _rti { get; internal set; }
    [DataMemberAttribute]
internal string _rto { get; internal set; }
    [DataMemberAttribute]
internal string _sc { get; internal set; }
    [DataMemberAttribute]
internal string _search_fetch_current { get; internal set; }
    [DataMemberAttribute]
internal string _search_fetch_time { get; internal set; }
    [DataMemberAttribute]
internal string _search_fetch_total { get; internal set; }
    [DataMemberAttribute]
internal string _search_open_contexts { get; internal set; }
    [DataMemberAttribute]
internal string _search_query_current { get; internal set; }
    [DataMemberAttribute]
internal string _search_query_time { get; internal set; }
    [DataMemberAttribute]
internal string _search_query_total { get; internal set; }
    [DataMemberAttribute]
internal string _searchFetchCurrent { get; internal set; }
    [DataMemberAttribute]
internal string _searchFetchTime { get; internal set; }
    [DataMemberAttribute]
internal string _searchFetchTotal { get; internal set; }
    [DataMemberAttribute]
internal string _searchOpenContexts { get; internal set; }
    [DataMemberAttribute]
internal string _searchQueryCurrent { get; internal set; }
    [DataMemberAttribute]
internal string _searchQueryTime { get; internal set; }
    [DataMemberAttribute]
internal string _searchQueryTotal { get; internal set; }
    [DataMemberAttribute]
internal string _segments_count { get; internal set; }
    [DataMemberAttribute]
internal string _segments_index_writer_max_memory { get; internal set; }
    [DataMemberAttribute]
internal string _segments_index_writer_memory { get; internal set; }
    [DataMemberAttribute]
internal string _segments_memory { get; internal set; }
    [DataMemberAttribute]
internal string _segments_version_map_memory { get; internal set; }
    [DataMemberAttribute]
internal string _segmentsCount { get; internal set; }
    [DataMemberAttribute]
internal string _segmentsIndexWriterMaxMemory { get; internal set; }
    [DataMemberAttribute]
internal string _segmentsIndexWriterMemory { get; internal set; }
    [DataMemberAttribute]
internal string _segmentsMemory { get; internal set; }
    [DataMemberAttribute]
internal string _segmentsVersionMapMemory { get; internal set; }
    [DataMemberAttribute]
internal string _sfc { get; internal set; }
    [DataMemberAttribute]
internal string _sfti { get; internal set; }
    [DataMemberAttribute]
internal string _sfto { get; internal set; }
    [DataMemberAttribute]
internal string _siwm { get; internal set; }
    [DataMemberAttribute]
internal string _siwmx { get; internal set; }
    [DataMemberAttribute]
internal string _sm { get; internal set; }
    [DataMemberAttribute]
internal string _so { get; internal set; }
    [DataMemberAttribute]
internal string _sqc { get; internal set; }
    [DataMemberAttribute]
internal string _sqti { get; internal set; }
    [DataMemberAttribute]
internal string _sqto { get; internal set; }
    [DataMemberAttribute]
internal string _svmm { get; internal set; }
    [DataMemberAttribute]
internal string _u { get; internal set; }
    [DataMemberAttribute]
internal string _uptime { get; internal set; }
    [DataMemberAttribute]
internal string _v { get; internal set; }
    [DataMemberAttribute]
internal string _version { get; internal set; }
    public string get_Build();
    public string get_ClusterManager();
    public string get_CompletionSize();
    [CompilerGeneratedAttribute]
public string get_CPU();
    [CompilerGeneratedAttribute]
internal void set_CPU(string value);
    public string get_DiskAvailable();
    public string get_FielddataEvictions();
    public string get_FielddataMemory();
    public Nullable`1<int> get_FileDescriptorCurrent();
    public Nullable`1<int> get_FileDescriptorMax();
    public Nullable`1<int> get_FileDescriptorPercent();
    public string get_FilterCacheEvictions();
    public string get_FilterCacheMemory();
    public string get_FlushTotal();
    public string get_FlushTotalTime();
    public string get_GetCurrent();
    public string get_GetExistsTime();
    public string get_GetExistsTotal();
    public string get_GetMissingTime();
    public string get_GetMissingTotal();
    public string get_GetTime();
    public string get_GetTotal();
    public string get_HeapCurrent();
    public string get_HeapMax();
    public string get_HeapPercent();
    public string get_IdCacheMemory();
    public string get_IndexingDeleteCurrent();
    public string get_IndexingDeleteTime();
    public string get_IndexingDeleteTotal();
    public string get_IndexingIndexCurrent();
    public string get_IndexingIndexTime();
    public string get_IndexingIndexTotal();
    public string get_Ip();
    public string get_Jdk();
    [CompilerGeneratedAttribute]
public string get_LoadFifteenMinute();
    [CompilerGeneratedAttribute]
internal void set_LoadFifteenMinute(string value);
    [CompilerGeneratedAttribute]
public string get_LoadFiveMinute();
    [CompilerGeneratedAttribute]
internal void set_LoadFiveMinute(string value);
    [CompilerGeneratedAttribute]
public string get_LoadOneMinute();
    [CompilerGeneratedAttribute]
internal void set_LoadOneMinute(string value);
    public string get_Master();
    public string get_MergesCurrent();
    public string get_MergesCurrentDocs();
    public string get_MergesCurrentSize();
    public string get_MergesTotal();
    public string get_MergesTotalDocs();
    public string get_MergesTotalTime();
    public string get_Name();
    public string get_NodeId();
    public string get_NodeRole();
    public string get_PercolateCurrent();
    public string get_PercolateMemory();
    public string get_PercolateQueries();
    public string get_PercolateTime();
    public string get_PercolateTotal();
    public string get_Pid();
    public string get_Port();
    public string get_QueryCacheMemorySize();
    public string get_QueryCacheEvictions();
    public string get_QueryCacheHitCount();
    public string get_QueryCacheMissCount();
    public string get_RamCurrent();
    public string get_RamMax();
    public string get_RamPercent();
    public string get_RefreshTime();
    public string get_RefreshTotal();
    public string get_SearchFetchCurrent();
    public string get_SearchFetchTime();
    public string get_SearchFetchTotal();
    public string get_SearchOpenContexts();
    public string get_SearchQueryCurrent();
    public string get_SearchQueryTime();
    public string get_SearchQueryTotal();
    public string get_SegmentsCount();
    public string get_SegmentsIndexWriterMaxMemory();
    public string get_SegmentsIndexWriterMemory();
    public string get_SegmentsMemory();
    public string get_SegmentsVersionMapMemory();
    public string get_Uptime();
    public string get_Version();
    [CompilerGeneratedAttribute]
internal string get__b();
    [CompilerGeneratedAttribute]
internal void set__b(string value);
    [CompilerGeneratedAttribute]
internal string get__build();
    [CompilerGeneratedAttribute]
internal void set__build(string value);
    [CompilerGeneratedAttribute]
internal string get__cm();
    [CompilerGeneratedAttribute]
internal void set__cm(string value);
    [CompilerGeneratedAttribute]
internal string get__cluster_manager();
    [CompilerGeneratedAttribute]
internal void set__cluster_manager(string value);
    [CompilerGeneratedAttribute]
internal string get__completion_size();
    [CompilerGeneratedAttribute]
internal void set__completion_size(string value);
    [CompilerGeneratedAttribute]
internal string get__completionSize();
    [CompilerGeneratedAttribute]
internal void set__completionSize(string value);
    [CompilerGeneratedAttribute]
internal string get__cs();
    [CompilerGeneratedAttribute]
internal void set__cs(string value);
    [CompilerGeneratedAttribute]
internal string get__d();
    [CompilerGeneratedAttribute]
internal void set__d(string value);
    [CompilerGeneratedAttribute]
internal string get__data_client();
    [CompilerGeneratedAttribute]
internal void set__data_client(string value);
    [CompilerGeneratedAttribute]
internal string get__dc();
    [CompilerGeneratedAttribute]
internal void set__dc(string value);
    [CompilerGeneratedAttribute]
internal string get__disk();
    [CompilerGeneratedAttribute]
internal void set__disk(string value);
    [CompilerGeneratedAttribute]
internal string get__disk_avail();
    [CompilerGeneratedAttribute]
internal void set__disk_avail(string value);
    [CompilerGeneratedAttribute]
internal string get__diskAvail();
    [CompilerGeneratedAttribute]
internal void set__diskAvail(string value);
    [CompilerGeneratedAttribute]
internal string get__fce();
    [CompilerGeneratedAttribute]
internal void set__fce(string value);
    [CompilerGeneratedAttribute]
internal string get__fcm();
    [CompilerGeneratedAttribute]
internal void set__fcm(string value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get__fdc();
    [CompilerGeneratedAttribute]
internal void set__fdc(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get__fdm();
    [CompilerGeneratedAttribute]
internal void set__fdm(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get__fdp();
    [CompilerGeneratedAttribute]
internal void set__fdp(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal string get__fe();
    [CompilerGeneratedAttribute]
internal void set__fe(string value);
    [CompilerGeneratedAttribute]
internal string get__fielddata_evictions();
    [CompilerGeneratedAttribute]
internal void set__fielddata_evictions(string value);
    [CompilerGeneratedAttribute]
internal string get__fielddata_memory_size();
    [CompilerGeneratedAttribute]
internal void set__fielddata_memory_size(string value);
    [CompilerGeneratedAttribute]
internal string get__fielddataEvictions();
    [CompilerGeneratedAttribute]
internal void set__fielddataEvictions(string value);
    [CompilerGeneratedAttribute]
internal string get__fielddataMemory();
    [CompilerGeneratedAttribute]
internal void set__fielddataMemory(string value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get__file_desc_current();
    [CompilerGeneratedAttribute]
internal void set__file_desc_current(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get__file_desc_max();
    [CompilerGeneratedAttribute]
internal void set__file_desc_max(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get__file_desc_percent();
    [CompilerGeneratedAttribute]
internal void set__file_desc_percent(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get__fileDescriptorCurrent();
    [CompilerGeneratedAttribute]
internal void set__fileDescriptorCurrent(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get__fileDescriptorMax();
    [CompilerGeneratedAttribute]
internal void set__fileDescriptorMax(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get__fileDescriptorPercent();
    [CompilerGeneratedAttribute]
internal void set__fileDescriptorPercent(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal string get__filter_cache_evictions();
    [CompilerGeneratedAttribute]
internal void set__filter_cache_evictions(string value);
    [CompilerGeneratedAttribute]
internal string get__filter_cache_memory_size();
    [CompilerGeneratedAttribute]
internal void set__filter_cache_memory_size(string value);
    [CompilerGeneratedAttribute]
internal string get__filterCacheEvictions();
    [CompilerGeneratedAttribute]
internal void set__filterCacheEvictions(string value);
    [CompilerGeneratedAttribute]
internal string get__filterCacheMemory();
    [CompilerGeneratedAttribute]
internal void set__filterCacheMemory(string value);
    [CompilerGeneratedAttribute]
internal string get__flush_total();
    [CompilerGeneratedAttribute]
internal void set__flush_total(string value);
    [CompilerGeneratedAttribute]
internal string get__flush_total_time();
    [CompilerGeneratedAttribute]
internal void set__flush_total_time(string value);
    [CompilerGeneratedAttribute]
internal string get__flushTotal();
    [CompilerGeneratedAttribute]
internal void set__flushTotal(string value);
    [CompilerGeneratedAttribute]
internal string get__flushTotalTime();
    [CompilerGeneratedAttribute]
internal void set__flushTotalTime(string value);
    [CompilerGeneratedAttribute]
internal string get__fm();
    [CompilerGeneratedAttribute]
internal void set__fm(string value);
    [CompilerGeneratedAttribute]
internal string get__ft();
    [CompilerGeneratedAttribute]
internal void set__ft(string value);
    [CompilerGeneratedAttribute]
internal string get__ftt();
    [CompilerGeneratedAttribute]
internal void set__ftt(string value);
    [CompilerGeneratedAttribute]
internal string get__gc();
    [CompilerGeneratedAttribute]
internal void set__gc(string value);
    [CompilerGeneratedAttribute]
internal string get__get_current();
    [CompilerGeneratedAttribute]
internal void set__get_current(string value);
    [CompilerGeneratedAttribute]
internal string get__get_exists_time();
    [CompilerGeneratedAttribute]
internal void set__get_exists_time(string value);
    [CompilerGeneratedAttribute]
internal string get__get_exists_total();
    [CompilerGeneratedAttribute]
internal void set__get_exists_total(string value);
    [CompilerGeneratedAttribute]
internal string get__get_missing_time();
    [CompilerGeneratedAttribute]
internal void set__get_missing_time(string value);
    [CompilerGeneratedAttribute]
internal string get__get_missing_total();
    [CompilerGeneratedAttribute]
internal void set__get_missing_total(string value);
    [CompilerGeneratedAttribute]
internal string get__get_time();
    [CompilerGeneratedAttribute]
internal void set__get_time(string value);
    [CompilerGeneratedAttribute]
internal string get__get_total();
    [CompilerGeneratedAttribute]
internal void set__get_total(string value);
    [CompilerGeneratedAttribute]
internal string get__getCurrent();
    [CompilerGeneratedAttribute]
internal void set__getCurrent(string value);
    [CompilerGeneratedAttribute]
internal string get__getExistsTime();
    [CompilerGeneratedAttribute]
internal void set__getExistsTime(string value);
    [CompilerGeneratedAttribute]
internal string get__getExistsTotal();
    [CompilerGeneratedAttribute]
internal void set__getExistsTotal(string value);
    [CompilerGeneratedAttribute]
internal string get__geti();
    [CompilerGeneratedAttribute]
internal void set__geti(string value);
    [CompilerGeneratedAttribute]
internal string get__getMissingTime();
    [CompilerGeneratedAttribute]
internal void set__getMissingTime(string value);
    [CompilerGeneratedAttribute]
internal string get__getMissingTotal();
    [CompilerGeneratedAttribute]
internal void set__getMissingTotal(string value);
    [CompilerGeneratedAttribute]
internal string get__geto();
    [CompilerGeneratedAttribute]
internal void set__geto(string value);
    [CompilerGeneratedAttribute]
internal string get__getTime();
    [CompilerGeneratedAttribute]
internal void set__getTime(string value);
    [CompilerGeneratedAttribute]
internal string get__getTotal();
    [CompilerGeneratedAttribute]
internal void set__getTotal(string value);
    [CompilerGeneratedAttribute]
internal string get__gmti();
    [CompilerGeneratedAttribute]
internal void set__gmti(string value);
    [CompilerGeneratedAttribute]
internal string get__gmto();
    [CompilerGeneratedAttribute]
internal void set__gmto(string value);
    [CompilerGeneratedAttribute]
internal string get__gti();
    [CompilerGeneratedAttribute]
internal void set__gti(string value);
    [CompilerGeneratedAttribute]
internal string get__gto();
    [CompilerGeneratedAttribute]
internal void set__gto(string value);
    [CompilerGeneratedAttribute]
internal string get__hc();
    [CompilerGeneratedAttribute]
internal void set__hc(string value);
    [CompilerGeneratedAttribute]
internal string get__heap_current();
    [CompilerGeneratedAttribute]
internal void set__heap_current(string value);
    [CompilerGeneratedAttribute]
internal string get__heap_max();
    [CompilerGeneratedAttribute]
internal void set__heap_max(string value);
    [CompilerGeneratedAttribute]
internal string get__heap_percent();
    [CompilerGeneratedAttribute]
internal void set__heap_percent(string value);
    [CompilerGeneratedAttribute]
internal string get__heapCurrent();
    [CompilerGeneratedAttribute]
internal void set__heapCurrent(string value);
    [CompilerGeneratedAttribute]
internal string get__heapMax();
    [CompilerGeneratedAttribute]
internal void set__heapMax(string value);
    [CompilerGeneratedAttribute]
internal string get__heapPercent();
    [CompilerGeneratedAttribute]
internal void set__heapPercent(string value);
    [CompilerGeneratedAttribute]
internal string get__hm();
    [CompilerGeneratedAttribute]
internal void set__hm(string value);
    [CompilerGeneratedAttribute]
internal string get__hp();
    [CompilerGeneratedAttribute]
internal void set__hp(string value);
    [CompilerGeneratedAttribute]
internal string get__i();
    [CompilerGeneratedAttribute]
internal void set__i(string value);
    [CompilerGeneratedAttribute]
internal string get__id();
    [CompilerGeneratedAttribute]
internal void set__id(string value);
    [CompilerGeneratedAttribute]
internal string get__id_cache_memory_size();
    [CompilerGeneratedAttribute]
internal void set__id_cache_memory_size(string value);
    [CompilerGeneratedAttribute]
internal string get__idCacheMemory();
    [CompilerGeneratedAttribute]
internal void set__idCacheMemory(string value);
    [CompilerGeneratedAttribute]
internal string get__idcs();
    [CompilerGeneratedAttribute]
internal void set__idcs(string value);
    [CompilerGeneratedAttribute]
internal string get__idti();
    [CompilerGeneratedAttribute]
internal void set__idti(string value);
    [CompilerGeneratedAttribute]
internal string get__idto();
    [CompilerGeneratedAttribute]
internal void set__idto(string value);
    [CompilerGeneratedAttribute]
internal string get__iic();
    [CompilerGeneratedAttribute]
internal void set__iic(string value);
    [CompilerGeneratedAttribute]
internal string get__iiti();
    [CompilerGeneratedAttribute]
internal void set__iiti(string value);
    [CompilerGeneratedAttribute]
internal string get__iito();
    [CompilerGeneratedAttribute]
internal void set__iito(string value);
    [CompilerGeneratedAttribute]
internal string get__im();
    [CompilerGeneratedAttribute]
internal void set__im(string value);
    [CompilerGeneratedAttribute]
internal string get__indexing_delete_current();
    [CompilerGeneratedAttribute]
internal void set__indexing_delete_current(string value);
    [CompilerGeneratedAttribute]
internal string get__indexing_delete_time();
    [CompilerGeneratedAttribute]
internal void set__indexing_delete_time(string value);
    [CompilerGeneratedAttribute]
internal string get__indexing_delete_total();
    [CompilerGeneratedAttribute]
internal void set__indexing_delete_total(string value);
    [CompilerGeneratedAttribute]
internal string get__indexing_index_current();
    [CompilerGeneratedAttribute]
internal void set__indexing_index_current(string value);
    [CompilerGeneratedAttribute]
internal string get__indexing_index_time();
    [CompilerGeneratedAttribute]
internal void set__indexing_index_time(string value);
    [CompilerGeneratedAttribute]
internal string get__indexing_index_total();
    [CompilerGeneratedAttribute]
internal void set__indexing_index_total(string value);
    [CompilerGeneratedAttribute]
internal string get__indexingDeleteCurrent();
    [CompilerGeneratedAttribute]
internal void set__indexingDeleteCurrent(string value);
    [CompilerGeneratedAttribute]
internal string get__indexingDeleteTime();
    [CompilerGeneratedAttribute]
internal void set__indexingDeleteTime(string value);
    [CompilerGeneratedAttribute]
internal string get__indexingDeleteTotal();
    [CompilerGeneratedAttribute]
internal void set__indexingDeleteTotal(string value);
    [CompilerGeneratedAttribute]
internal string get__indexingIndexCurrent();
    [CompilerGeneratedAttribute]
internal void set__indexingIndexCurrent(string value);
    [CompilerGeneratedAttribute]
internal string get__indexingIndexTime();
    [CompilerGeneratedAttribute]
internal void set__indexingIndexTime(string value);
    [CompilerGeneratedAttribute]
internal string get__indexingIndexTotal();
    [CompilerGeneratedAttribute]
internal void set__indexingIndexTotal(string value);
    [CompilerGeneratedAttribute]
internal string get__ip();
    [CompilerGeneratedAttribute]
internal void set__ip(string value);
    [CompilerGeneratedAttribute]
internal string get__j();
    [CompilerGeneratedAttribute]
internal void set__j(string value);
    [CompilerGeneratedAttribute]
internal string get__jdk();
    [CompilerGeneratedAttribute]
internal void set__jdk(string value);
    [CompilerGeneratedAttribute]
internal string get__m();
    [CompilerGeneratedAttribute]
internal void set__m(string value);
    [CompilerGeneratedAttribute]
internal string get__master();
    [CompilerGeneratedAttribute]
internal void set__master(string value);
    [CompilerGeneratedAttribute]
internal string get__mc();
    [CompilerGeneratedAttribute]
internal void set__mc(string value);
    [CompilerGeneratedAttribute]
internal string get__mcd();
    [CompilerGeneratedAttribute]
internal void set__mcd(string value);
    [CompilerGeneratedAttribute]
internal string get__mcs();
    [CompilerGeneratedAttribute]
internal void set__mcs(string value);
    [CompilerGeneratedAttribute]
internal string get__merges_current();
    [CompilerGeneratedAttribute]
internal void set__merges_current(string value);
    [CompilerGeneratedAttribute]
internal string get__merges_current_docs();
    [CompilerGeneratedAttribute]
internal void set__merges_current_docs(string value);
    [CompilerGeneratedAttribute]
internal string get__merges_current_size();
    [CompilerGeneratedAttribute]
internal void set__merges_current_size(string value);
    [CompilerGeneratedAttribute]
internal string get__merges_total();
    [CompilerGeneratedAttribute]
internal void set__merges_total(string value);
    [CompilerGeneratedAttribute]
internal string get__merges_total_docs();
    [CompilerGeneratedAttribute]
internal void set__merges_total_docs(string value);
    [CompilerGeneratedAttribute]
internal string get__merges_total_time();
    [CompilerGeneratedAttribute]
internal void set__merges_total_time(string value);
    [CompilerGeneratedAttribute]
internal string get__mergesCurrent();
    [CompilerGeneratedAttribute]
internal void set__mergesCurrent(string value);
    [CompilerGeneratedAttribute]
internal string get__mergesCurrentDocs();
    [CompilerGeneratedAttribute]
internal void set__mergesCurrentDocs(string value);
    [CompilerGeneratedAttribute]
internal string get__mergesCurrentSize();
    [CompilerGeneratedAttribute]
internal void set__mergesCurrentSize(string value);
    [CompilerGeneratedAttribute]
internal string get__mergesTotal();
    [CompilerGeneratedAttribute]
internal void set__mergesTotal(string value);
    [CompilerGeneratedAttribute]
internal string get__mergesTotalDocs();
    [CompilerGeneratedAttribute]
internal void set__mergesTotalDocs(string value);
    [CompilerGeneratedAttribute]
internal string get__mergesTotalTime();
    [CompilerGeneratedAttribute]
internal void set__mergesTotalTime(string value);
    [CompilerGeneratedAttribute]
internal string get__mt();
    [CompilerGeneratedAttribute]
internal void set__mt(string value);
    [CompilerGeneratedAttribute]
internal string get__mtd();
    [CompilerGeneratedAttribute]
internal void set__mtd(string value);
    [CompilerGeneratedAttribute]
internal string get__mtt();
    [CompilerGeneratedAttribute]
internal void set__mtt(string value);
    [CompilerGeneratedAttribute]
internal string get__n();
    [CompilerGeneratedAttribute]
internal void set__n(string value);
    [CompilerGeneratedAttribute]
internal string get__name();
    [CompilerGeneratedAttribute]
internal void set__name(string value);
    [CompilerGeneratedAttribute]
internal string get__node_role();
    [CompilerGeneratedAttribute]
internal void set__node_role(string value);
    [CompilerGeneratedAttribute]
internal string get__nodeId();
    [CompilerGeneratedAttribute]
internal void set__nodeId(string value);
    [CompilerGeneratedAttribute]
internal string get__nodeRole();
    [CompilerGeneratedAttribute]
internal void set__nodeRole(string value);
    [CompilerGeneratedAttribute]
internal string get__p();
    [CompilerGeneratedAttribute]
internal void set__p(string value);
    [CompilerGeneratedAttribute]
internal string get__pc();
    [CompilerGeneratedAttribute]
internal void set__pc(string value);
    [CompilerGeneratedAttribute]
internal string get__percolate_current();
    [CompilerGeneratedAttribute]
internal void set__percolate_current(string value);
    [CompilerGeneratedAttribute]
internal string get__percolate_memory_size();
    [CompilerGeneratedAttribute]
internal void set__percolate_memory_size(string value);
    [CompilerGeneratedAttribute]
internal string get__percolate_queries();
    [CompilerGeneratedAttribute]
internal void set__percolate_queries(string value);
    [CompilerGeneratedAttribute]
internal string get__percolate_time();
    [CompilerGeneratedAttribute]
internal void set__percolate_time(string value);
    [CompilerGeneratedAttribute]
internal string get__percolate_total();
    [CompilerGeneratedAttribute]
internal void set__percolate_total(string value);
    [CompilerGeneratedAttribute]
internal string get__percolateCurrent();
    [CompilerGeneratedAttribute]
internal void set__percolateCurrent(string value);
    [CompilerGeneratedAttribute]
internal string get__percolateMemory();
    [CompilerGeneratedAttribute]
internal void set__percolateMemory(string value);
    [CompilerGeneratedAttribute]
internal string get__percolateQueries();
    [CompilerGeneratedAttribute]
internal void set__percolateQueries(string value);
    [CompilerGeneratedAttribute]
internal string get__percolateTime();
    [CompilerGeneratedAttribute]
internal void set__percolateTime(string value);
    [CompilerGeneratedAttribute]
internal string get__percolateTotal();
    [CompilerGeneratedAttribute]
internal void set__percolateTotal(string value);
    [CompilerGeneratedAttribute]
internal string get__pid();
    [CompilerGeneratedAttribute]
internal void set__pid(string value);
    [CompilerGeneratedAttribute]
internal string get__pm();
    [CompilerGeneratedAttribute]
internal void set__pm(string value);
    [CompilerGeneratedAttribute]
internal string get__po();
    [CompilerGeneratedAttribute]
internal void set__po(string value);
    [CompilerGeneratedAttribute]
internal string get__port();
    [CompilerGeneratedAttribute]
internal void set__port(string value);
    [CompilerGeneratedAttribute]
internal string get__pq();
    [CompilerGeneratedAttribute]
internal void set__pq(string value);
    [CompilerGeneratedAttribute]
internal string get__pti();
    [CompilerGeneratedAttribute]
internal void set__pti(string value);
    [CompilerGeneratedAttribute]
internal string get__pto();
    [CompilerGeneratedAttribute]
internal void set__pto(string value);
    [CompilerGeneratedAttribute]
internal string get__query_cache_memory_size();
    [CompilerGeneratedAttribute]
internal void set__query_cache_memory_size(string value);
    [CompilerGeneratedAttribute]
internal string get__qcm();
    [CompilerGeneratedAttribute]
internal void set__qcm(string value);
    [CompilerGeneratedAttribute]
internal string get__queryCacheMemory();
    [CompilerGeneratedAttribute]
internal void set__queryCacheMemory(string value);
    [CompilerGeneratedAttribute]
internal string get__query_cache_evictions();
    [CompilerGeneratedAttribute]
internal void set__query_cache_evictions(string value);
    [CompilerGeneratedAttribute]
internal string get__qce();
    [CompilerGeneratedAttribute]
internal void set__qce(string value);
    [CompilerGeneratedAttribute]
internal string get__queryCacheEvictions();
    [CompilerGeneratedAttribute]
internal void set__queryCacheEvictions(string value);
    [CompilerGeneratedAttribute]
internal string get__query_cache_hit_count();
    [CompilerGeneratedAttribute]
internal void set__query_cache_hit_count(string value);
    [CompilerGeneratedAttribute]
internal string get__qchc();
    [CompilerGeneratedAttribute]
internal void set__qchc(string value);
    [CompilerGeneratedAttribute]
internal string get__queryCacheHitCount();
    [CompilerGeneratedAttribute]
internal void set__queryCacheHitCount(string value);
    [CompilerGeneratedAttribute]
internal string get__query_cache_miss_count();
    [CompilerGeneratedAttribute]
internal void set__query_cache_miss_count(string value);
    [CompilerGeneratedAttribute]
internal string get__qcmc();
    [CompilerGeneratedAttribute]
internal void set__qcmc(string value);
    [CompilerGeneratedAttribute]
internal string get__queryCacheMissCount();
    [CompilerGeneratedAttribute]
internal void set__queryCacheMissCount(string value);
    [CompilerGeneratedAttribute]
internal string get__r();
    [CompilerGeneratedAttribute]
internal void set__r(string value);
    [CompilerGeneratedAttribute]
internal string get__ram_current();
    [CompilerGeneratedAttribute]
internal void set__ram_current(string value);
    [CompilerGeneratedAttribute]
internal string get__ram_max();
    [CompilerGeneratedAttribute]
internal void set__ram_max(string value);
    [CompilerGeneratedAttribute]
internal string get__ram_percent();
    [CompilerGeneratedAttribute]
internal void set__ram_percent(string value);
    [CompilerGeneratedAttribute]
internal string get__ramCurrent();
    [CompilerGeneratedAttribute]
internal void set__ramCurrent(string value);
    [CompilerGeneratedAttribute]
internal string get__ramMax();
    [CompilerGeneratedAttribute]
internal void set__ramMax(string value);
    [CompilerGeneratedAttribute]
internal string get__ramPercent();
    [CompilerGeneratedAttribute]
internal void set__ramPercent(string value);
    [CompilerGeneratedAttribute]
internal string get__rc();
    [CompilerGeneratedAttribute]
internal void set__rc(string value);
    [CompilerGeneratedAttribute]
internal string get__refresh_time();
    [CompilerGeneratedAttribute]
internal void set__refresh_time(string value);
    [CompilerGeneratedAttribute]
internal string get__refresh_total();
    [CompilerGeneratedAttribute]
internal void set__refresh_total(string value);
    [CompilerGeneratedAttribute]
internal string get__refreshTime();
    [CompilerGeneratedAttribute]
internal void set__refreshTime(string value);
    [CompilerGeneratedAttribute]
internal string get__refreshTotal();
    [CompilerGeneratedAttribute]
internal void set__refreshTotal(string value);
    [CompilerGeneratedAttribute]
internal string get__rm();
    [CompilerGeneratedAttribute]
internal void set__rm(string value);
    [CompilerGeneratedAttribute]
internal string get__rp();
    [CompilerGeneratedAttribute]
internal void set__rp(string value);
    [CompilerGeneratedAttribute]
internal string get__rti();
    [CompilerGeneratedAttribute]
internal void set__rti(string value);
    [CompilerGeneratedAttribute]
internal string get__rto();
    [CompilerGeneratedAttribute]
internal void set__rto(string value);
    [CompilerGeneratedAttribute]
internal string get__sc();
    [CompilerGeneratedAttribute]
internal void set__sc(string value);
    [CompilerGeneratedAttribute]
internal string get__search_fetch_current();
    [CompilerGeneratedAttribute]
internal void set__search_fetch_current(string value);
    [CompilerGeneratedAttribute]
internal string get__search_fetch_time();
    [CompilerGeneratedAttribute]
internal void set__search_fetch_time(string value);
    [CompilerGeneratedAttribute]
internal string get__search_fetch_total();
    [CompilerGeneratedAttribute]
internal void set__search_fetch_total(string value);
    [CompilerGeneratedAttribute]
internal string get__search_open_contexts();
    [CompilerGeneratedAttribute]
internal void set__search_open_contexts(string value);
    [CompilerGeneratedAttribute]
internal string get__search_query_current();
    [CompilerGeneratedAttribute]
internal void set__search_query_current(string value);
    [CompilerGeneratedAttribute]
internal string get__search_query_time();
    [CompilerGeneratedAttribute]
internal void set__search_query_time(string value);
    [CompilerGeneratedAttribute]
internal string get__search_query_total();
    [CompilerGeneratedAttribute]
internal void set__search_query_total(string value);
    [CompilerGeneratedAttribute]
internal string get__searchFetchCurrent();
    [CompilerGeneratedAttribute]
internal void set__searchFetchCurrent(string value);
    [CompilerGeneratedAttribute]
internal string get__searchFetchTime();
    [CompilerGeneratedAttribute]
internal void set__searchFetchTime(string value);
    [CompilerGeneratedAttribute]
internal string get__searchFetchTotal();
    [CompilerGeneratedAttribute]
internal void set__searchFetchTotal(string value);
    [CompilerGeneratedAttribute]
internal string get__searchOpenContexts();
    [CompilerGeneratedAttribute]
internal void set__searchOpenContexts(string value);
    [CompilerGeneratedAttribute]
internal string get__searchQueryCurrent();
    [CompilerGeneratedAttribute]
internal void set__searchQueryCurrent(string value);
    [CompilerGeneratedAttribute]
internal string get__searchQueryTime();
    [CompilerGeneratedAttribute]
internal void set__searchQueryTime(string value);
    [CompilerGeneratedAttribute]
internal string get__searchQueryTotal();
    [CompilerGeneratedAttribute]
internal void set__searchQueryTotal(string value);
    [CompilerGeneratedAttribute]
internal string get__segments_count();
    [CompilerGeneratedAttribute]
internal void set__segments_count(string value);
    [CompilerGeneratedAttribute]
internal string get__segments_index_writer_max_memory();
    [CompilerGeneratedAttribute]
internal void set__segments_index_writer_max_memory(string value);
    [CompilerGeneratedAttribute]
internal string get__segments_index_writer_memory();
    [CompilerGeneratedAttribute]
internal void set__segments_index_writer_memory(string value);
    [CompilerGeneratedAttribute]
internal string get__segments_memory();
    [CompilerGeneratedAttribute]
internal void set__segments_memory(string value);
    [CompilerGeneratedAttribute]
internal string get__segments_version_map_memory();
    [CompilerGeneratedAttribute]
internal void set__segments_version_map_memory(string value);
    [CompilerGeneratedAttribute]
internal string get__segmentsCount();
    [CompilerGeneratedAttribute]
internal void set__segmentsCount(string value);
    [CompilerGeneratedAttribute]
internal string get__segmentsIndexWriterMaxMemory();
    [CompilerGeneratedAttribute]
internal void set__segmentsIndexWriterMaxMemory(string value);
    [CompilerGeneratedAttribute]
internal string get__segmentsIndexWriterMemory();
    [CompilerGeneratedAttribute]
internal void set__segmentsIndexWriterMemory(string value);
    [CompilerGeneratedAttribute]
internal string get__segmentsMemory();
    [CompilerGeneratedAttribute]
internal void set__segmentsMemory(string value);
    [CompilerGeneratedAttribute]
internal string get__segmentsVersionMapMemory();
    [CompilerGeneratedAttribute]
internal void set__segmentsVersionMapMemory(string value);
    [CompilerGeneratedAttribute]
internal string get__sfc();
    [CompilerGeneratedAttribute]
internal void set__sfc(string value);
    [CompilerGeneratedAttribute]
internal string get__sfti();
    [CompilerGeneratedAttribute]
internal void set__sfti(string value);
    [CompilerGeneratedAttribute]
internal string get__sfto();
    [CompilerGeneratedAttribute]
internal void set__sfto(string value);
    [CompilerGeneratedAttribute]
internal string get__siwm();
    [CompilerGeneratedAttribute]
internal void set__siwm(string value);
    [CompilerGeneratedAttribute]
internal string get__siwmx();
    [CompilerGeneratedAttribute]
internal void set__siwmx(string value);
    [CompilerGeneratedAttribute]
internal string get__sm();
    [CompilerGeneratedAttribute]
internal void set__sm(string value);
    [CompilerGeneratedAttribute]
internal string get__so();
    [CompilerGeneratedAttribute]
internal void set__so(string value);
    [CompilerGeneratedAttribute]
internal string get__sqc();
    [CompilerGeneratedAttribute]
internal void set__sqc(string value);
    [CompilerGeneratedAttribute]
internal string get__sqti();
    [CompilerGeneratedAttribute]
internal void set__sqti(string value);
    [CompilerGeneratedAttribute]
internal string get__sqto();
    [CompilerGeneratedAttribute]
internal void set__sqto(string value);
    [CompilerGeneratedAttribute]
internal string get__svmm();
    [CompilerGeneratedAttribute]
internal void set__svmm(string value);
    [CompilerGeneratedAttribute]
internal string get__u();
    [CompilerGeneratedAttribute]
internal void set__u(string value);
    [CompilerGeneratedAttribute]
internal string get__uptime();
    [CompilerGeneratedAttribute]
internal void set__uptime(string value);
    [CompilerGeneratedAttribute]
internal string get__v();
    [CompilerGeneratedAttribute]
internal void set__v(string value);
    [CompilerGeneratedAttribute]
internal string get__version();
    [CompilerGeneratedAttribute]
internal void set__version(string value);
}
public class OpenSearch.Client.CatNodesRequest : PlainRequestBase`1<CatNodesRequestParameters> {
    protected ICatNodesRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<Bytes> Bytes { get; public set; }
    public string Format { get; public set; }
    public Nullable`1<bool> FullId { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    protected ICatNodesRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<Bytes> get_Bytes();
    public void set_Bytes(Nullable`1<Bytes> value);
    public string get_Format();
    public void set_Format(string value);
    public Nullable`1<bool> get_FullId();
    public void set_FullId(Nullable`1<bool> value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatPendingTasksDescriptor : RequestDescriptorBase`3<CatPendingTasksDescriptor, CatPendingTasksRequestParameters, ICatPendingTasksRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public CatPendingTasksDescriptor Format(string format);
    public CatPendingTasksDescriptor Headers(String[] headers);
    public CatPendingTasksDescriptor Help(Nullable`1<bool> help);
    public CatPendingTasksDescriptor Local(Nullable`1<bool> local);
    public CatPendingTasksDescriptor MasterTimeout(Time mastertimeout);
    public CatPendingTasksDescriptor ClusterManagerTimeout(Time timeout);
    public CatPendingTasksDescriptor SortByColumns(String[] sortbycolumns);
    public CatPendingTasksDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatPendingTasksRecord : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <InsertOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeInQueue>k__BackingField;
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> InsertOrder { get; public set; }
    [DataMemberAttribute]
public string Priority { get; public set; }
    [DataMemberAttribute]
public string Source { get; public set; }
    [DataMemberAttribute]
public string TimeInQueue { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_InsertOrder();
    [CompilerGeneratedAttribute]
public void set_InsertOrder(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(string value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public string get_TimeInQueue();
    [CompilerGeneratedAttribute]
public void set_TimeInQueue(string value);
}
public class OpenSearch.Client.CatPendingTasksRequest : PlainRequestBase`1<CatPendingTasksRequestParameters> {
    protected ICatPendingTasksRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    protected ICatPendingTasksRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatPitSegmentsDescriptor : RequestDescriptorBase`3<CatPitSegmentsDescriptor, CatPitSegmentsRequestParameters, ICatPitSegmentsRequest> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ICatPitSegmentsRequest.PitId>k__BackingField;
    private IEnumerable`1<string> OpenSearch.Client.ICatPitSegmentsRequest.PitId { get; private set; }
    internal ApiUrls ApiUrls { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ICatPitSegmentsRequest.get_PitId();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICatPitSegmentsRequest.set_PitId(IEnumerable`1<string> value);
    public CatPitSegmentsDescriptor PitId(IEnumerable`1<string> pitId);
    public CatPitSegmentsDescriptor PitId(String[] pitId);
    internal virtual ApiUrls get_ApiUrls();
    public CatPitSegmentsDescriptor Bytes(Nullable`1<Bytes> bytes);
    public CatPitSegmentsDescriptor Format(string format);
    public CatPitSegmentsDescriptor Headers(String[] headers);
    public CatPitSegmentsDescriptor Help(Nullable`1<bool> help);
    public CatPitSegmentsDescriptor SortByColumns(String[] sortbycolumns);
    public CatPitSegmentsDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatPitSegmentsRecord : object {
    [CompilerGeneratedAttribute]
private string <Committed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Compound>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Generation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrimaryOrReplica>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Searchable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Segment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Shard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SizeMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [DataMemberAttribute]
public string Committed { get; public set; }
    [DataMemberAttribute]
public string Compound { get; public set; }
    [DataMemberAttribute]
public string DocsCount { get; public set; }
    [DataMemberAttribute]
public string DocsDeleted { get; public set; }
    [DataMemberAttribute]
public string Generation { get; public set; }
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Index { get; public set; }
    [DataMemberAttribute]
public string Ip { get; public set; }
    [DataMemberAttribute]
public string PrimaryOrReplica { get; public set; }
    [DataMemberAttribute]
public string Searchable { get; public set; }
    [DataMemberAttribute]
public string Segment { get; public set; }
    [DataMemberAttribute]
public string Shard { get; public set; }
    [DataMemberAttribute]
public string Size { get; public set; }
    [DataMemberAttribute]
public string SizeMemory { get; public set; }
    [DataMemberAttribute]
public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Committed();
    [CompilerGeneratedAttribute]
public void set_Committed(string value);
    [CompilerGeneratedAttribute]
public string get_Compound();
    [CompilerGeneratedAttribute]
public void set_Compound(string value);
    [CompilerGeneratedAttribute]
public string get_DocsCount();
    [CompilerGeneratedAttribute]
public void set_DocsCount(string value);
    [CompilerGeneratedAttribute]
public string get_DocsDeleted();
    [CompilerGeneratedAttribute]
public void set_DocsDeleted(string value);
    [CompilerGeneratedAttribute]
public string get_Generation();
    [CompilerGeneratedAttribute]
public void set_Generation(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_PrimaryOrReplica();
    [CompilerGeneratedAttribute]
public void set_PrimaryOrReplica(string value);
    [CompilerGeneratedAttribute]
public string get_Searchable();
    [CompilerGeneratedAttribute]
public void set_Searchable(string value);
    [CompilerGeneratedAttribute]
public string get_Segment();
    [CompilerGeneratedAttribute]
public void set_Segment(string value);
    [CompilerGeneratedAttribute]
public string get_Shard();
    [CompilerGeneratedAttribute]
public void set_Shard(string value);
    [CompilerGeneratedAttribute]
public string get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(string value);
    [CompilerGeneratedAttribute]
public string get_SizeMemory();
    [CompilerGeneratedAttribute]
public void set_SizeMemory(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
public class OpenSearch.Client.CatPitSegmentsRequest : PlainRequestBase`1<CatPitSegmentsRequestParameters> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <PitId>k__BackingField;
    public IEnumerable`1<string> PitId { get; public set; }
    protected ICatPitSegmentsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<Bytes> Bytes { get; public set; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatPitSegmentsRequest(IEnumerable`1<string> pitId);
    public CatPitSegmentsRequest(String[] pitId);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_PitId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PitId(IEnumerable`1<string> value);
    protected ICatPitSegmentsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<Bytes> get_Bytes();
    public void set_Bytes(Nullable`1<Bytes> value);
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatPluginsDescriptor : RequestDescriptorBase`3<CatPluginsDescriptor, CatPluginsRequestParameters, ICatPluginsRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public CatPluginsDescriptor Format(string format);
    public CatPluginsDescriptor Headers(String[] headers);
    public CatPluginsDescriptor Help(Nullable`1<bool> help);
    public CatPluginsDescriptor IncludeBootstrap(Nullable`1<bool> includebootstrap);
    public CatPluginsDescriptor Local(Nullable`1<bool> local);
    public CatPluginsDescriptor MasterTimeout(Time mastertimeout);
    public CatPluginsDescriptor ClusterManagerTimeout(Time timeout);
    public CatPluginsDescriptor SortByColumns(String[] sortbycolumns);
    public CatPluginsDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatPluginsRecord : object {
    [CompilerGeneratedAttribute]
private string <Component>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Isolation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [DataMemberAttribute]
public string Component { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Isolation { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Type { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Component();
    [CompilerGeneratedAttribute]
public void set_Component(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Isolation();
    [CompilerGeneratedAttribute]
public void set_Isolation(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
public class OpenSearch.Client.CatPluginsRequest : PlainRequestBase`1<CatPluginsRequestParameters> {
    protected ICatPluginsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> IncludeBootstrap { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    protected ICatPluginsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeBootstrap();
    public void set_IncludeBootstrap(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatRecoveryDescriptor : RequestDescriptorBase`3<CatRecoveryDescriptor, CatRecoveryRequestParameters, ICatRecoveryRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ICatRecoveryRequest.Index { get; }
    public CatRecoveryDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatRecoveryRequest.get_Index();
    public CatRecoveryDescriptor Index(Indices index);
    public CatRecoveryDescriptor Index();
    public CatRecoveryDescriptor AllIndices();
    public CatRecoveryDescriptor ActiveOnly(Nullable`1<bool> activeonly);
    public CatRecoveryDescriptor Bytes(Nullable`1<Bytes> bytes);
    public CatRecoveryDescriptor Detailed(Nullable`1<bool> detailed);
    public CatRecoveryDescriptor Format(string format);
    public CatRecoveryDescriptor Headers(String[] headers);
    public CatRecoveryDescriptor Help(Nullable`1<bool> help);
    public CatRecoveryDescriptor SortByColumns(String[] sortbycolumns);
    public CatRecoveryDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatRecoveryRecord : object {
    [CompilerGeneratedAttribute]
private string <Bytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BytesPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BytesRecovered>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BytesTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Files>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilesPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilesRecovered>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilesTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Repository>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Shard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Snapshot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceHost>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Stage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetHost>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Time>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TranslogOps>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TranslogOpsPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TranslogOpsRecovered>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public string Bytes { get; public set; }
    [DataMemberAttribute]
public string BytesPercent { get; public set; }
    [DataMemberAttribute]
public string BytesRecovered { get; public set; }
    [DataMemberAttribute]
public string BytesTotal { get; public set; }
    [DataMemberAttribute]
public string Files { get; public set; }
    [DataMemberAttribute]
public string FilesPercent { get; public set; }
    [DataMemberAttribute]
public string FilesRecovered { get; public set; }
    [DataMemberAttribute]
public string FilesTotal { get; public set; }
    [DataMemberAttribute]
public string Index { get; public set; }
    [DataMemberAttribute]
public string Repository { get; public set; }
    [DataMemberAttribute]
public string Shard { get; public set; }
    [DataMemberAttribute]
public string Snapshot { get; public set; }
    [DataMemberAttribute]
public string SourceHost { get; public set; }
    [DataMemberAttribute]
public string SourceNode { get; public set; }
    [DataMemberAttribute]
public string Stage { get; public set; }
    [DataMemberAttribute]
public string TargetHost { get; public set; }
    [DataMemberAttribute]
public string TargetNode { get; public set; }
    [DataMemberAttribute]
public string Time { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringLongFormatter")]
public Nullable`1<long> TranslogOps { get; public set; }
    [DataMemberAttribute]
public string TranslogOpsPercent { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringLongFormatter")]
public Nullable`1<long> TranslogOpsRecovered { get; public set; }
    [DataMemberAttribute]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Bytes();
    [CompilerGeneratedAttribute]
public void set_Bytes(string value);
    [CompilerGeneratedAttribute]
public string get_BytesPercent();
    [CompilerGeneratedAttribute]
public void set_BytesPercent(string value);
    [CompilerGeneratedAttribute]
public string get_BytesRecovered();
    [CompilerGeneratedAttribute]
public void set_BytesRecovered(string value);
    [CompilerGeneratedAttribute]
public string get_BytesTotal();
    [CompilerGeneratedAttribute]
public void set_BytesTotal(string value);
    [CompilerGeneratedAttribute]
public string get_Files();
    [CompilerGeneratedAttribute]
public void set_Files(string value);
    [CompilerGeneratedAttribute]
public string get_FilesPercent();
    [CompilerGeneratedAttribute]
public void set_FilesPercent(string value);
    [CompilerGeneratedAttribute]
public string get_FilesRecovered();
    [CompilerGeneratedAttribute]
public void set_FilesRecovered(string value);
    [CompilerGeneratedAttribute]
public string get_FilesTotal();
    [CompilerGeneratedAttribute]
public void set_FilesTotal(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_Repository();
    [CompilerGeneratedAttribute]
public void set_Repository(string value);
    [CompilerGeneratedAttribute]
public string get_Shard();
    [CompilerGeneratedAttribute]
public void set_Shard(string value);
    [CompilerGeneratedAttribute]
public string get_Snapshot();
    [CompilerGeneratedAttribute]
public void set_Snapshot(string value);
    [CompilerGeneratedAttribute]
public string get_SourceHost();
    [CompilerGeneratedAttribute]
public void set_SourceHost(string value);
    [CompilerGeneratedAttribute]
public string get_SourceNode();
    [CompilerGeneratedAttribute]
public void set_SourceNode(string value);
    [CompilerGeneratedAttribute]
public string get_Stage();
    [CompilerGeneratedAttribute]
public void set_Stage(string value);
    [CompilerGeneratedAttribute]
public string get_TargetHost();
    [CompilerGeneratedAttribute]
public void set_TargetHost(string value);
    [CompilerGeneratedAttribute]
public string get_TargetNode();
    [CompilerGeneratedAttribute]
public void set_TargetNode(string value);
    [CompilerGeneratedAttribute]
public string get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TranslogOps();
    [CompilerGeneratedAttribute]
public void set_TranslogOps(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_TranslogOpsPercent();
    [CompilerGeneratedAttribute]
public void set_TranslogOpsPercent(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TranslogOpsRecovered();
    [CompilerGeneratedAttribute]
public void set_TranslogOpsRecovered(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public class OpenSearch.Client.CatRecoveryRequest : PlainRequestBase`1<CatRecoveryRequestParameters> {
    protected ICatRecoveryRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ICatRecoveryRequest.Index { get; }
    public Nullable`1<bool> ActiveOnly { get; public set; }
    public Nullable`1<Bytes> Bytes { get; public set; }
    public Nullable`1<bool> Detailed { get; public set; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatRecoveryRequest(Indices index);
    protected ICatRecoveryRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatRecoveryRequest.get_Index();
    public Nullable`1<bool> get_ActiveOnly();
    public void set_ActiveOnly(Nullable`1<bool> value);
    public Nullable`1<Bytes> get_Bytes();
    public void set_Bytes(Nullable`1<Bytes> value);
    public Nullable`1<bool> get_Detailed();
    public void set_Detailed(Nullable`1<bool> value);
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatRepositoriesDescriptor : RequestDescriptorBase`3<CatRepositoriesDescriptor, CatRepositoriesRequestParameters, ICatRepositoriesRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public CatRepositoriesDescriptor Format(string format);
    public CatRepositoriesDescriptor Headers(String[] headers);
    public CatRepositoriesDescriptor Help(Nullable`1<bool> help);
    public CatRepositoriesDescriptor Local(Nullable`1<bool> local);
    public CatRepositoriesDescriptor MasterTimeout(Time mastertimeout);
    public CatRepositoriesDescriptor ClusterManagerTimeout(Time timeout);
    public CatRepositoriesDescriptor SortByColumns(String[] sortbycolumns);
    public CatRepositoriesDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatRepositoriesRecord : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public class OpenSearch.Client.CatRepositoriesRequest : PlainRequestBase`1<CatRepositoriesRequestParameters> {
    protected ICatRepositoriesRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    protected ICatRepositoriesRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
[DataContractAttribute]
public class OpenSearch.Client.CatResponse`1 : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<TCatRecord> <Records>k__BackingField;
    [IgnoreDataMemberAttribute]
public IReadOnlyCollection`1<TCatRecord> Records { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<TCatRecord> get_Records();
    [CompilerGeneratedAttribute]
internal void set_Records(IReadOnlyCollection`1<TCatRecord> value);
}
internal class OpenSearch.Client.CatResponseBuilder`1 : CustomResponseBuilderBase {
    [CompilerGeneratedAttribute]
private static CatResponseBuilder`1<TCatRecord> <Instance>k__BackingField;
    public static CatResponseBuilder`1<TCatRecord> Instance { get; }
    private static CatResponseBuilder`1();
    [CompilerGeneratedAttribute]
public static CatResponseBuilder`1<TCatRecord> get_Instance();
    public virtual object DeserializeResponse(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream);
    [AsyncStateMachineAttribute("OpenSearch.Client.CatResponseBuilder`1/<DeserializeResponseAsync>d__4")]
public virtual Task`1<object> DeserializeResponseAsync(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream, CancellationToken ctx);
}
public class OpenSearch.Client.CatSegmentReplicationDescriptor : RequestDescriptorBase`3<CatSegmentReplicationDescriptor, CatSegmentReplicationRequestParameters, ICatSegmentReplicationRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ICatSegmentReplicationRequest.Index { get; }
    public CatSegmentReplicationDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatSegmentReplicationRequest.get_Index();
    public CatSegmentReplicationDescriptor Index(Indices index);
    public CatSegmentReplicationDescriptor Index();
    public CatSegmentReplicationDescriptor AllIndices();
    public CatSegmentReplicationDescriptor ActiveOnly(Nullable`1<bool> activeonly);
    public CatSegmentReplicationDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public CatSegmentReplicationDescriptor Bytes(Nullable`1<Bytes> bytes);
    public CatSegmentReplicationDescriptor CompletedOnly(Nullable`1<bool> completedonly);
    public CatSegmentReplicationDescriptor Detailed(Nullable`1<bool> detailed);
    public CatSegmentReplicationDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public CatSegmentReplicationDescriptor Format(string format);
    public CatSegmentReplicationDescriptor Headers(String[] headers);
    public CatSegmentReplicationDescriptor Help(Nullable`1<bool> help);
    public CatSegmentReplicationDescriptor IgnoreThrottled(Nullable`1<bool> ignorethrottled);
    public CatSegmentReplicationDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public CatSegmentReplicationDescriptor Shards(String[] shards);
    public CatSegmentReplicationDescriptor SortByColumns(String[] sortbycolumns);
    public CatSegmentReplicationDescriptor Timeout(Time timeout);
    public CatSegmentReplicationDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatSegmentReplicationRecord : object {
    [CompilerGeneratedAttribute]
private string <ShardId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetHost>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckpointsBehind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BytesBehind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentLag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastCompletedLag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RejectedRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Stage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilesFetched>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilesPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BytesFetched>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BytesPercent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StopTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Files>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilesTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Bytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BytesTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReplicatingStageTimeTaken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GetCheckpointInfoStageTimeTaken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileDiffStageTimeTaken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GetFilesStageTimeTaken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FinalizeReplicationStageTimeTaken>k__BackingField;
    [DataMemberAttribute]
public string ShardId { get; public set; }
    [DataMemberAttribute]
public string TargetNode { get; public set; }
    [DataMemberAttribute]
public string TargetHost { get; public set; }
    [DataMemberAttribute]
public string CheckpointsBehind { get; public set; }
    [DataMemberAttribute]
public string BytesBehind { get; public set; }
    [DataMemberAttribute]
public string CurrentLag { get; public set; }
    [DataMemberAttribute]
public string LastCompletedLag { get; public set; }
    [DataMemberAttribute]
public string RejectedRequests { get; public set; }
    [DataMemberAttribute]
public string Stage { get; public set; }
    [DataMemberAttribute]
public string Time { get; public set; }
    [DataMemberAttribute]
public string FilesFetched { get; public set; }
    [DataMemberAttribute]
public string FilesPercent { get; public set; }
    [DataMemberAttribute]
public string BytesFetched { get; public set; }
    [DataMemberAttribute]
public string BytesPercent { get; public set; }
    [DataMemberAttribute]
public string StartTime { get; public set; }
    [DataMemberAttribute]
public string StopTime { get; public set; }
    [DataMemberAttribute]
public string Files { get; public set; }
    [DataMemberAttribute]
public string FilesTotal { get; public set; }
    [DataMemberAttribute]
public string Bytes { get; public set; }
    [DataMemberAttribute]
public string BytesTotal { get; public set; }
    [DataMemberAttribute]
public string ReplicatingStageTimeTaken { get; public set; }
    [DataMemberAttribute]
public string GetCheckpointInfoStageTimeTaken { get; public set; }
    [DataMemberAttribute]
public string FileDiffStageTimeTaken { get; public set; }
    [DataMemberAttribute]
public string GetFilesStageTimeTaken { get; public set; }
    [DataMemberAttribute]
public string FinalizeReplicationStageTimeTaken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ShardId();
    [CompilerGeneratedAttribute]
public void set_ShardId(string value);
    [CompilerGeneratedAttribute]
public string get_TargetNode();
    [CompilerGeneratedAttribute]
public void set_TargetNode(string value);
    [CompilerGeneratedAttribute]
public string get_TargetHost();
    [CompilerGeneratedAttribute]
public void set_TargetHost(string value);
    [CompilerGeneratedAttribute]
public string get_CheckpointsBehind();
    [CompilerGeneratedAttribute]
public void set_CheckpointsBehind(string value);
    [CompilerGeneratedAttribute]
public string get_BytesBehind();
    [CompilerGeneratedAttribute]
public void set_BytesBehind(string value);
    [CompilerGeneratedAttribute]
public string get_CurrentLag();
    [CompilerGeneratedAttribute]
public void set_CurrentLag(string value);
    [CompilerGeneratedAttribute]
public string get_LastCompletedLag();
    [CompilerGeneratedAttribute]
public void set_LastCompletedLag(string value);
    [CompilerGeneratedAttribute]
public string get_RejectedRequests();
    [CompilerGeneratedAttribute]
public void set_RejectedRequests(string value);
    [CompilerGeneratedAttribute]
public string get_Stage();
    [CompilerGeneratedAttribute]
public void set_Stage(string value);
    [CompilerGeneratedAttribute]
public string get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(string value);
    [CompilerGeneratedAttribute]
public string get_FilesFetched();
    [CompilerGeneratedAttribute]
public void set_FilesFetched(string value);
    [CompilerGeneratedAttribute]
public string get_FilesPercent();
    [CompilerGeneratedAttribute]
public void set_FilesPercent(string value);
    [CompilerGeneratedAttribute]
public string get_BytesFetched();
    [CompilerGeneratedAttribute]
public void set_BytesFetched(string value);
    [CompilerGeneratedAttribute]
public string get_BytesPercent();
    [CompilerGeneratedAttribute]
public void set_BytesPercent(string value);
    [CompilerGeneratedAttribute]
public string get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(string value);
    [CompilerGeneratedAttribute]
public string get_StopTime();
    [CompilerGeneratedAttribute]
public void set_StopTime(string value);
    [CompilerGeneratedAttribute]
public string get_Files();
    [CompilerGeneratedAttribute]
public void set_Files(string value);
    [CompilerGeneratedAttribute]
public string get_FilesTotal();
    [CompilerGeneratedAttribute]
public void set_FilesTotal(string value);
    [CompilerGeneratedAttribute]
public string get_Bytes();
    [CompilerGeneratedAttribute]
public void set_Bytes(string value);
    [CompilerGeneratedAttribute]
public string get_BytesTotal();
    [CompilerGeneratedAttribute]
public void set_BytesTotal(string value);
    [CompilerGeneratedAttribute]
public string get_ReplicatingStageTimeTaken();
    [CompilerGeneratedAttribute]
public void set_ReplicatingStageTimeTaken(string value);
    [CompilerGeneratedAttribute]
public string get_GetCheckpointInfoStageTimeTaken();
    [CompilerGeneratedAttribute]
public void set_GetCheckpointInfoStageTimeTaken(string value);
    [CompilerGeneratedAttribute]
public string get_FileDiffStageTimeTaken();
    [CompilerGeneratedAttribute]
public void set_FileDiffStageTimeTaken(string value);
    [CompilerGeneratedAttribute]
public string get_GetFilesStageTimeTaken();
    [CompilerGeneratedAttribute]
public void set_GetFilesStageTimeTaken(string value);
    [CompilerGeneratedAttribute]
public string get_FinalizeReplicationStageTimeTaken();
    [CompilerGeneratedAttribute]
public void set_FinalizeReplicationStageTimeTaken(string value);
}
public class OpenSearch.Client.CatSegmentReplicationRequest : PlainRequestBase`1<CatSegmentReplicationRequestParameters> {
    protected ICatSegmentReplicationRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ICatSegmentReplicationRequest.Index { get; }
    public Nullable`1<bool> ActiveOnly { get; public set; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<Bytes> Bytes { get; public set; }
    public Nullable`1<bool> CompletedOnly { get; public set; }
    public Nullable`1<bool> Detailed { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> IgnoreThrottled { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public String[] Shards { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Time Timeout { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatSegmentReplicationRequest(Indices index);
    protected ICatSegmentReplicationRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatSegmentReplicationRequest.get_Index();
    public Nullable`1<bool> get_ActiveOnly();
    public void set_ActiveOnly(Nullable`1<bool> value);
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<Bytes> get_Bytes();
    public void set_Bytes(Nullable`1<Bytes> value);
    public Nullable`1<bool> get_CompletedOnly();
    public void set_CompletedOnly(Nullable`1<bool> value);
    public Nullable`1<bool> get_Detailed();
    public void set_Detailed(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreThrottled();
    public void set_IgnoreThrottled(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public String[] get_Shards();
    public void set_Shards(String[] value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatSegmentsDescriptor : RequestDescriptorBase`3<CatSegmentsDescriptor, CatSegmentsRequestParameters, ICatSegmentsRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ICatSegmentsRequest.Index { get; }
    public CatSegmentsDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatSegmentsRequest.get_Index();
    public CatSegmentsDescriptor Index(Indices index);
    public CatSegmentsDescriptor Index();
    public CatSegmentsDescriptor AllIndices();
    public CatSegmentsDescriptor Bytes(Nullable`1<Bytes> bytes);
    public CatSegmentsDescriptor Format(string format);
    public CatSegmentsDescriptor Headers(String[] headers);
    public CatSegmentsDescriptor Help(Nullable`1<bool> help);
    public CatSegmentsDescriptor SortByColumns(String[] sortbycolumns);
    public CatSegmentsDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatSegmentsRecord : object {
    [CompilerGeneratedAttribute]
private string <Committed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Compound>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Generation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrimaryReplica>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Searchable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Segment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Shard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SizeMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [DataMemberAttribute]
public string Committed { get; public set; }
    [DataMemberAttribute]
public string Compound { get; public set; }
    [DataMemberAttribute]
public string DocsCount { get; public set; }
    [DataMemberAttribute]
public string DocsDeleted { get; public set; }
    [DataMemberAttribute]
public string Generation { get; public set; }
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Index { get; public set; }
    [DataMemberAttribute]
public string Ip { get; public set; }
    [DataMemberAttribute]
public string PrimaryReplica { get; public set; }
    [DataMemberAttribute]
public string Searchable { get; public set; }
    [DataMemberAttribute]
public string Segment { get; public set; }
    [DataMemberAttribute]
public string Shard { get; public set; }
    [DataMemberAttribute]
public string Size { get; public set; }
    [DataMemberAttribute]
public string SizeMemory { get; public set; }
    [DataMemberAttribute]
public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Committed();
    [CompilerGeneratedAttribute]
public void set_Committed(string value);
    [CompilerGeneratedAttribute]
public string get_Compound();
    [CompilerGeneratedAttribute]
public void set_Compound(string value);
    [CompilerGeneratedAttribute]
public string get_DocsCount();
    [CompilerGeneratedAttribute]
public void set_DocsCount(string value);
    [CompilerGeneratedAttribute]
public string get_DocsDeleted();
    [CompilerGeneratedAttribute]
public void set_DocsDeleted(string value);
    [CompilerGeneratedAttribute]
public string get_Generation();
    [CompilerGeneratedAttribute]
public void set_Generation(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_PrimaryReplica();
    [CompilerGeneratedAttribute]
public void set_PrimaryReplica(string value);
    [CompilerGeneratedAttribute]
public string get_Searchable();
    [CompilerGeneratedAttribute]
public void set_Searchable(string value);
    [CompilerGeneratedAttribute]
public string get_Segment();
    [CompilerGeneratedAttribute]
public void set_Segment(string value);
    [CompilerGeneratedAttribute]
public string get_Shard();
    [CompilerGeneratedAttribute]
public void set_Shard(string value);
    [CompilerGeneratedAttribute]
public string get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(string value);
    [CompilerGeneratedAttribute]
public string get_SizeMemory();
    [CompilerGeneratedAttribute]
public void set_SizeMemory(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
public class OpenSearch.Client.CatSegmentsRequest : PlainRequestBase`1<CatSegmentsRequestParameters> {
    protected ICatSegmentsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ICatSegmentsRequest.Index { get; }
    public Nullable`1<Bytes> Bytes { get; public set; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatSegmentsRequest(Indices index);
    protected ICatSegmentsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatSegmentsRequest.get_Index();
    public Nullable`1<Bytes> get_Bytes();
    public void set_Bytes(Nullable`1<Bytes> value);
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatShardsDescriptor : RequestDescriptorBase`3<CatShardsDescriptor, CatShardsRequestParameters, ICatShardsRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ICatShardsRequest.Index { get; }
    public CatShardsDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatShardsRequest.get_Index();
    public CatShardsDescriptor Index(Indices index);
    public CatShardsDescriptor Index();
    public CatShardsDescriptor AllIndices();
    public CatShardsDescriptor Bytes(Nullable`1<Bytes> bytes);
    public CatShardsDescriptor Format(string format);
    public CatShardsDescriptor Headers(String[] headers);
    public CatShardsDescriptor Help(Nullable`1<bool> help);
    public CatShardsDescriptor Local(Nullable`1<bool> local);
    public CatShardsDescriptor MasterTimeout(Time mastertimeout);
    public CatShardsDescriptor ClusterManagerTimeout(Time timeout);
    public CatShardsDescriptor SortByColumns(String[] sortbycolumns);
    public CatShardsDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatShardsRecord : object {
    [CompilerGeneratedAttribute]
private string <CompletionSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Docs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FielddataEvictions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FielddataMemorySize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilterCacheMemorySize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FlushTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FlushTotalTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GetCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GetExistsTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GetExistsTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GetMissingTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GetMissingTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GetTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GetTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdCacheMemorySize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexingDeleteCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexingDeleteTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexingDeleteTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexingIndexCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexingIndexTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexingIndexTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MergesCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MergesCurrentDocs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MergesCurrentSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MergesTotalDocs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MergesTotalSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MergesTotalTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PercolateCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PercolateMemorySize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PercolateQueries>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PercolateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PercolateTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrimaryOrReplica>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchFetchCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchFetchTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchFetchTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchOpenContexts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchQueryCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchQueryTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchQueryTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SegmentsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SegmentsFixedBitsetMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SegmentsIndexWriterMaxMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SegmentsIndexWriterMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SegmentsMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SegmentsVersionMapMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Shard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Store>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WarmerCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WarmerTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WarmerTotalTime>k__BackingField;
    [DataMemberAttribute]
public string CompletionSize { get; public set; }
    [DataMemberAttribute]
public string Docs { get; public set; }
    [DataMemberAttribute]
public string FielddataEvictions { get; public set; }
    [DataMemberAttribute]
public string FielddataMemorySize { get; public set; }
    [DataMemberAttribute]
public string FilterCacheMemorySize { get; public set; }
    [DataMemberAttribute]
public string FlushTotal { get; public set; }
    [DataMemberAttribute]
public string FlushTotalTime { get; public set; }
    [DataMemberAttribute]
public string GetCurrent { get; public set; }
    [DataMemberAttribute]
public string GetExistsTime { get; public set; }
    [DataMemberAttribute]
public string GetExistsTotal { get; public set; }
    [DataMemberAttribute]
public string GetMissingTime { get; public set; }
    [DataMemberAttribute]
public string GetMissingTotal { get; public set; }
    [DataMemberAttribute]
public string GetTime { get; public set; }
    [DataMemberAttribute]
public string GetTotal { get; public set; }
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string IdCacheMemorySize { get; public set; }
    [DataMemberAttribute]
public string Index { get; public set; }
    [DataMemberAttribute]
public string IndexingDeleteCurrent { get; public set; }
    [DataMemberAttribute]
public string IndexingDeleteTime { get; public set; }
    [DataMemberAttribute]
public string IndexingDeleteTotal { get; public set; }
    [DataMemberAttribute]
public string IndexingIndexCurrent { get; public set; }
    [DataMemberAttribute]
public string IndexingIndexTime { get; public set; }
    [DataMemberAttribute]
public string IndexingIndexTotal { get; public set; }
    [DataMemberAttribute]
public string Ip { get; public set; }
    [DataMemberAttribute]
public string MergesCurrent { get; public set; }
    [DataMemberAttribute]
public string MergesCurrentDocs { get; public set; }
    [DataMemberAttribute]
public string MergesCurrentSize { get; public set; }
    [DataMemberAttribute]
public string MergesTotalDocs { get; public set; }
    [DataMemberAttribute]
public string MergesTotalSize { get; public set; }
    [DataMemberAttribute]
public string MergesTotalTime { get; public set; }
    [DataMemberAttribute]
public string Node { get; public set; }
    [DataMemberAttribute]
public string PercolateCurrent { get; public set; }
    [DataMemberAttribute]
public string PercolateMemorySize { get; public set; }
    [DataMemberAttribute]
public string PercolateQueries { get; public set; }
    [DataMemberAttribute]
public string PercolateTime { get; public set; }
    [DataMemberAttribute]
public string PercolateTotal { get; public set; }
    [DataMemberAttribute]
public string PrimaryOrReplica { get; public set; }
    [DataMemberAttribute]
public string RefreshTime { get; public set; }
    [DataMemberAttribute]
public string RefreshTotal { get; public set; }
    [DataMemberAttribute]
public string SearchFetchCurrent { get; public set; }
    [DataMemberAttribute]
public string SearchFetchTime { get; public set; }
    [DataMemberAttribute]
public string SearchFetchTotal { get; public set; }
    [DataMemberAttribute]
public string SearchOpenContexts { get; public set; }
    [DataMemberAttribute]
public string SearchQueryCurrent { get; public set; }
    [DataMemberAttribute]
public string SearchQueryTime { get; public set; }
    [DataMemberAttribute]
public string SearchQueryTotal { get; public set; }
    [DataMemberAttribute]
public string SegmentsCount { get; public set; }
    [DataMemberAttribute]
public string SegmentsFixedBitsetMemory { get; public set; }
    [DataMemberAttribute]
public string SegmentsIndexWriterMaxMemory { get; public set; }
    [DataMemberAttribute]
public string SegmentsIndexWriterMemory { get; public set; }
    [DataMemberAttribute]
public string SegmentsMemory { get; public set; }
    [DataMemberAttribute]
public string SegmentsVersionMapMemory { get; public set; }
    [DataMemberAttribute]
public string Shard { get; public set; }
    [DataMemberAttribute]
public string State { get; public set; }
    [DataMemberAttribute]
public string Store { get; public set; }
    [DataMemberAttribute]
public string WarmerCurrent { get; public set; }
    [DataMemberAttribute]
public string WarmerTotal { get; public set; }
    [DataMemberAttribute]
public string WarmerTotalTime { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CompletionSize();
    [CompilerGeneratedAttribute]
public void set_CompletionSize(string value);
    [CompilerGeneratedAttribute]
public string get_Docs();
    [CompilerGeneratedAttribute]
public void set_Docs(string value);
    [CompilerGeneratedAttribute]
public string get_FielddataEvictions();
    [CompilerGeneratedAttribute]
public void set_FielddataEvictions(string value);
    [CompilerGeneratedAttribute]
public string get_FielddataMemorySize();
    [CompilerGeneratedAttribute]
public void set_FielddataMemorySize(string value);
    [CompilerGeneratedAttribute]
public string get_FilterCacheMemorySize();
    [CompilerGeneratedAttribute]
public void set_FilterCacheMemorySize(string value);
    [CompilerGeneratedAttribute]
public string get_FlushTotal();
    [CompilerGeneratedAttribute]
public void set_FlushTotal(string value);
    [CompilerGeneratedAttribute]
public string get_FlushTotalTime();
    [CompilerGeneratedAttribute]
public void set_FlushTotalTime(string value);
    [CompilerGeneratedAttribute]
public string get_GetCurrent();
    [CompilerGeneratedAttribute]
public void set_GetCurrent(string value);
    [CompilerGeneratedAttribute]
public string get_GetExistsTime();
    [CompilerGeneratedAttribute]
public void set_GetExistsTime(string value);
    [CompilerGeneratedAttribute]
public string get_GetExistsTotal();
    [CompilerGeneratedAttribute]
public void set_GetExistsTotal(string value);
    [CompilerGeneratedAttribute]
public string get_GetMissingTime();
    [CompilerGeneratedAttribute]
public void set_GetMissingTime(string value);
    [CompilerGeneratedAttribute]
public string get_GetMissingTotal();
    [CompilerGeneratedAttribute]
public void set_GetMissingTotal(string value);
    [CompilerGeneratedAttribute]
public string get_GetTime();
    [CompilerGeneratedAttribute]
public void set_GetTime(string value);
    [CompilerGeneratedAttribute]
public string get_GetTotal();
    [CompilerGeneratedAttribute]
public void set_GetTotal(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_IdCacheMemorySize();
    [CompilerGeneratedAttribute]
public void set_IdCacheMemorySize(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_IndexingDeleteCurrent();
    [CompilerGeneratedAttribute]
public void set_IndexingDeleteCurrent(string value);
    [CompilerGeneratedAttribute]
public string get_IndexingDeleteTime();
    [CompilerGeneratedAttribute]
public void set_IndexingDeleteTime(string value);
    [CompilerGeneratedAttribute]
public string get_IndexingDeleteTotal();
    [CompilerGeneratedAttribute]
public void set_IndexingDeleteTotal(string value);
    [CompilerGeneratedAttribute]
public string get_IndexingIndexCurrent();
    [CompilerGeneratedAttribute]
public void set_IndexingIndexCurrent(string value);
    [CompilerGeneratedAttribute]
public string get_IndexingIndexTime();
    [CompilerGeneratedAttribute]
public void set_IndexingIndexTime(string value);
    [CompilerGeneratedAttribute]
public string get_IndexingIndexTotal();
    [CompilerGeneratedAttribute]
public void set_IndexingIndexTotal(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_MergesCurrent();
    [CompilerGeneratedAttribute]
public void set_MergesCurrent(string value);
    [CompilerGeneratedAttribute]
public string get_MergesCurrentDocs();
    [CompilerGeneratedAttribute]
public void set_MergesCurrentDocs(string value);
    [CompilerGeneratedAttribute]
public string get_MergesCurrentSize();
    [CompilerGeneratedAttribute]
public void set_MergesCurrentSize(string value);
    [CompilerGeneratedAttribute]
public string get_MergesTotalDocs();
    [CompilerGeneratedAttribute]
public void set_MergesTotalDocs(string value);
    [CompilerGeneratedAttribute]
public string get_MergesTotalSize();
    [CompilerGeneratedAttribute]
public void set_MergesTotalSize(string value);
    [CompilerGeneratedAttribute]
public string get_MergesTotalTime();
    [CompilerGeneratedAttribute]
public void set_MergesTotalTime(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_PercolateCurrent();
    [CompilerGeneratedAttribute]
public void set_PercolateCurrent(string value);
    [CompilerGeneratedAttribute]
public string get_PercolateMemorySize();
    [CompilerGeneratedAttribute]
public void set_PercolateMemorySize(string value);
    [CompilerGeneratedAttribute]
public string get_PercolateQueries();
    [CompilerGeneratedAttribute]
public void set_PercolateQueries(string value);
    [CompilerGeneratedAttribute]
public string get_PercolateTime();
    [CompilerGeneratedAttribute]
public void set_PercolateTime(string value);
    [CompilerGeneratedAttribute]
public string get_PercolateTotal();
    [CompilerGeneratedAttribute]
public void set_PercolateTotal(string value);
    [CompilerGeneratedAttribute]
public string get_PrimaryOrReplica();
    [CompilerGeneratedAttribute]
public void set_PrimaryOrReplica(string value);
    [CompilerGeneratedAttribute]
public string get_RefreshTime();
    [CompilerGeneratedAttribute]
public void set_RefreshTime(string value);
    [CompilerGeneratedAttribute]
public string get_RefreshTotal();
    [CompilerGeneratedAttribute]
public void set_RefreshTotal(string value);
    [CompilerGeneratedAttribute]
public string get_SearchFetchCurrent();
    [CompilerGeneratedAttribute]
public void set_SearchFetchCurrent(string value);
    [CompilerGeneratedAttribute]
public string get_SearchFetchTime();
    [CompilerGeneratedAttribute]
public void set_SearchFetchTime(string value);
    [CompilerGeneratedAttribute]
public string get_SearchFetchTotal();
    [CompilerGeneratedAttribute]
public void set_SearchFetchTotal(string value);
    [CompilerGeneratedAttribute]
public string get_SearchOpenContexts();
    [CompilerGeneratedAttribute]
public void set_SearchOpenContexts(string value);
    [CompilerGeneratedAttribute]
public string get_SearchQueryCurrent();
    [CompilerGeneratedAttribute]
public void set_SearchQueryCurrent(string value);
    [CompilerGeneratedAttribute]
public string get_SearchQueryTime();
    [CompilerGeneratedAttribute]
public void set_SearchQueryTime(string value);
    [CompilerGeneratedAttribute]
public string get_SearchQueryTotal();
    [CompilerGeneratedAttribute]
public void set_SearchQueryTotal(string value);
    [CompilerGeneratedAttribute]
public string get_SegmentsCount();
    [CompilerGeneratedAttribute]
public void set_SegmentsCount(string value);
    [CompilerGeneratedAttribute]
public string get_SegmentsFixedBitsetMemory();
    [CompilerGeneratedAttribute]
public void set_SegmentsFixedBitsetMemory(string value);
    [CompilerGeneratedAttribute]
public string get_SegmentsIndexWriterMaxMemory();
    [CompilerGeneratedAttribute]
public void set_SegmentsIndexWriterMaxMemory(string value);
    [CompilerGeneratedAttribute]
public string get_SegmentsIndexWriterMemory();
    [CompilerGeneratedAttribute]
public void set_SegmentsIndexWriterMemory(string value);
    [CompilerGeneratedAttribute]
public string get_SegmentsMemory();
    [CompilerGeneratedAttribute]
public void set_SegmentsMemory(string value);
    [CompilerGeneratedAttribute]
public string get_SegmentsVersionMapMemory();
    [CompilerGeneratedAttribute]
public void set_SegmentsVersionMapMemory(string value);
    [CompilerGeneratedAttribute]
public string get_Shard();
    [CompilerGeneratedAttribute]
public void set_Shard(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public string get_Store();
    [CompilerGeneratedAttribute]
public void set_Store(string value);
    [CompilerGeneratedAttribute]
public string get_WarmerCurrent();
    [CompilerGeneratedAttribute]
public void set_WarmerCurrent(string value);
    [CompilerGeneratedAttribute]
public string get_WarmerTotal();
    [CompilerGeneratedAttribute]
public void set_WarmerTotal(string value);
    [CompilerGeneratedAttribute]
public string get_WarmerTotalTime();
    [CompilerGeneratedAttribute]
public void set_WarmerTotalTime(string value);
}
public class OpenSearch.Client.CatShardsRequest : PlainRequestBase`1<CatShardsRequestParameters> {
    protected ICatShardsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ICatShardsRequest.Index { get; }
    public Nullable`1<Bytes> Bytes { get; public set; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatShardsRequest(Indices index);
    protected ICatShardsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICatShardsRequest.get_Index();
    public Nullable`1<Bytes> get_Bytes();
    public void set_Bytes(Nullable`1<Bytes> value);
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatSnapshotsDescriptor : RequestDescriptorBase`3<CatSnapshotsDescriptor, CatSnapshotsRequestParameters, ICatSnapshotsRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.ICatSnapshotsRequest.RepositoryName { get; }
    public CatSnapshotsDescriptor(Names repository);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.ICatSnapshotsRequest.get_RepositoryName();
    public CatSnapshotsDescriptor RepositoryName(Names repository);
    public CatSnapshotsDescriptor Format(string format);
    public CatSnapshotsDescriptor Headers(String[] headers);
    public CatSnapshotsDescriptor Help(Nullable`1<bool> help);
    public CatSnapshotsDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public CatSnapshotsDescriptor MasterTimeout(Time mastertimeout);
    public CatSnapshotsDescriptor ClusterManagerTimeout(Time timeout);
    public CatSnapshotsDescriptor SortByColumns(String[] sortbycolumns);
    public CatSnapshotsDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatSnapshotsRecord : object {
    [CompilerGeneratedAttribute]
private Time <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private long <EndEpoch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <FailedShards>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StartEpoch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SuccessfulShards>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalShards>k__BackingField;
    [DataMemberAttribute]
public Time Duration { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.StringLongFormatter")]
public long EndEpoch { get; public set; }
    [DataMemberAttribute]
public string EndTime { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.StringLongFormatter")]
public long FailedShards { get; public set; }
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.StringLongFormatter")]
public long Indices { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.StringLongFormatter")]
public long StartEpoch { get; public set; }
    [DataMemberAttribute]
public string StartTime { get; public set; }
    [DataMemberAttribute]
public string Status { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.StringLongFormatter")]
public long SuccessfulShards { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.StringLongFormatter")]
public long TotalShards { get; public set; }
    [CompilerGeneratedAttribute]
public Time get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(Time value);
    [CompilerGeneratedAttribute]
public long get_EndEpoch();
    [CompilerGeneratedAttribute]
public void set_EndEpoch(long value);
    [CompilerGeneratedAttribute]
public string get_EndTime();
    [CompilerGeneratedAttribute]
public void set_EndTime(string value);
    [CompilerGeneratedAttribute]
public long get_FailedShards();
    [CompilerGeneratedAttribute]
public void set_FailedShards(long value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public long get_Indices();
    [CompilerGeneratedAttribute]
public void set_Indices(long value);
    [CompilerGeneratedAttribute]
public long get_StartEpoch();
    [CompilerGeneratedAttribute]
public void set_StartEpoch(long value);
    [CompilerGeneratedAttribute]
public string get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public long get_SuccessfulShards();
    [CompilerGeneratedAttribute]
public void set_SuccessfulShards(long value);
    [CompilerGeneratedAttribute]
public long get_TotalShards();
    [CompilerGeneratedAttribute]
public void set_TotalShards(long value);
}
public class OpenSearch.Client.CatSnapshotsRequest : PlainRequestBase`1<CatSnapshotsRequestParameters> {
    protected ICatSnapshotsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.ICatSnapshotsRequest.RepositoryName { get; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatSnapshotsRequest(Names repository);
    protected ICatSnapshotsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.ICatSnapshotsRequest.get_RepositoryName();
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatTasksDescriptor : RequestDescriptorBase`3<CatTasksDescriptor, CatTasksRequestParameters, ICatTasksRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public CatTasksDescriptor Actions(String[] actions);
    public CatTasksDescriptor Detailed(Nullable`1<bool> detailed);
    public CatTasksDescriptor Format(string format);
    public CatTasksDescriptor Headers(String[] headers);
    public CatTasksDescriptor Help(Nullable`1<bool> help);
    public CatTasksDescriptor Nodes(String[] nodes);
    public CatTasksDescriptor ParentTaskId(string parenttaskid);
    public CatTasksDescriptor SortByColumns(String[] sortbycolumns);
    public CatTasksDescriptor Verbose(Nullable`1<bool> verbose);
}
public class OpenSearch.Client.CatTasksRecord : object {
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentTaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunningTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public string Action { get; internal set; }
    [DataMemberAttribute]
public string Ip { get; internal set; }
    [DataMemberAttribute]
public string Node { get; internal set; }
    [DataMemberAttribute]
public string ParentTaskId { get; internal set; }
    [DataMemberAttribute]
public string RunningTime { get; internal set; }
    [DataMemberAttribute]
public string StartTime { get; internal set; }
    [DataMemberAttribute]
public string TaskId { get; internal set; }
    [DataMemberAttribute]
public string Timestamp { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
internal void set_Action(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
internal void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
internal void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_ParentTaskId();
    [CompilerGeneratedAttribute]
internal void set_ParentTaskId(string value);
    [CompilerGeneratedAttribute]
public string get_RunningTime();
    [CompilerGeneratedAttribute]
internal void set_RunningTime(string value);
    [CompilerGeneratedAttribute]
public string get_StartTime();
    [CompilerGeneratedAttribute]
internal void set_StartTime(string value);
    [CompilerGeneratedAttribute]
public string get_TaskId();
    [CompilerGeneratedAttribute]
internal void set_TaskId(string value);
    [CompilerGeneratedAttribute]
public string get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
public class OpenSearch.Client.CatTasksRequest : PlainRequestBase`1<CatTasksRequestParameters> {
    protected ICatTasksRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public String[] Actions { get; public set; }
    public Nullable`1<bool> Detailed { get; public set; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public String[] Nodes { get; public set; }
    public string ParentTaskId { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    protected ICatTasksRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public String[] get_Actions();
    public void set_Actions(String[] value);
    public Nullable`1<bool> get_Detailed();
    public void set_Detailed(Nullable`1<bool> value);
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public String[] get_Nodes();
    public void set_Nodes(String[] value);
    public string get_ParentTaskId();
    public void set_ParentTaskId(string value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatTemplatesDescriptor : RequestDescriptorBase`3<CatTemplatesDescriptor, CatTemplatesRequestParameters, ICatTemplatesRequest> {
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.ICatTemplatesRequest.Name { get; }
    public CatTemplatesDescriptor(Name name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ICatTemplatesRequest.get_Name();
    public CatTemplatesDescriptor Name(Name name);
    public CatTemplatesDescriptor Format(string format);
    public CatTemplatesDescriptor Headers(String[] headers);
    public CatTemplatesDescriptor Help(Nullable`1<bool> help);
    public CatTemplatesDescriptor Local(Nullable`1<bool> local);
    public CatTemplatesDescriptor MasterTimeout(Time mastertimeout);
    public CatTemplatesDescriptor ClusterManagerTimeout(Time timeout);
    public CatTemplatesDescriptor SortByColumns(String[] sortbycolumns);
    public CatTemplatesDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatTemplatesRecord : object {
    [CompilerGeneratedAttribute]
private string <IndexPatterns>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Version>k__BackingField;
    [DataMemberAttribute]
public string IndexPatterns { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.StringLongFormatter")]
public long Order { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringLongFormatter")]
public Nullable`1<long> Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_IndexPatterns();
    [CompilerGeneratedAttribute]
public void set_IndexPatterns(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public long get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Nullable`1<long> value);
}
public class OpenSearch.Client.CatTemplatesRequest : PlainRequestBase`1<CatTemplatesRequestParameters> {
    protected ICatTemplatesRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.ICatTemplatesRequest.Name { get; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatTemplatesRequest(Name name);
    protected ICatTemplatesRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ICatTemplatesRequest.get_Name();
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.CatThreadPoolDescriptor : RequestDescriptorBase`3<CatThreadPoolDescriptor, CatThreadPoolRequestParameters, ICatThreadPoolRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.ICatThreadPoolRequest.ThreadPoolPatterns { get; }
    public CatThreadPoolDescriptor(Names threadPoolPatterns);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.ICatThreadPoolRequest.get_ThreadPoolPatterns();
    public CatThreadPoolDescriptor ThreadPoolPatterns(Names threadPoolPatterns);
    public CatThreadPoolDescriptor Format(string format);
    public CatThreadPoolDescriptor Headers(String[] headers);
    public CatThreadPoolDescriptor Help(Nullable`1<bool> help);
    public CatThreadPoolDescriptor Local(Nullable`1<bool> local);
    public CatThreadPoolDescriptor MasterTimeout(Time mastertimeout);
    public CatThreadPoolDescriptor ClusterManagerTimeout(Time timeout);
    public CatThreadPoolDescriptor SortByColumns(String[] sortbycolumns);
    public CatThreadPoolDescriptor Verbose(Nullable`1<bool> verbose);
}
[DataContractAttribute]
public class OpenSearch.Client.CatThreadPoolRecord : object {
    [CompilerGeneratedAttribute]
private int <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Completed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Core>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EphemeralNodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <KeepAlive>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Largest>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Maximum>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PoolSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Queue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <QueueSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Rejected>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.StringIntFormatter")]
public int Active { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringLongFormatter")]
public Nullable`1<long> Completed { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> Core { get; public set; }
    [DataMemberAttribute]
public string EphemeralNodeId { get; public set; }
    [DataMemberAttribute]
public string Host { get; public set; }
    [DataMemberAttribute]
public string Ip { get; public set; }
    [DataMemberAttribute]
public Time KeepAlive { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> Largest { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> Maximum { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string NodeId { get; public set; }
    [DataMemberAttribute]
public string NodeName { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> PoolSize { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> Port { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> ProcessId { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.StringIntFormatter")]
public int Queue { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> QueueSize { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.StringLongFormatter")]
public long Rejected { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> Size { get; public set; }
    [DataMemberAttribute]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Active();
    [CompilerGeneratedAttribute]
public void set_Active(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Completed();
    [CompilerGeneratedAttribute]
public void set_Completed(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Core();
    [CompilerGeneratedAttribute]
public void set_Core(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_EphemeralNodeId();
    [CompilerGeneratedAttribute]
public void set_EphemeralNodeId(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
public void set_Ip(string value);
    [CompilerGeneratedAttribute]
public Time get_KeepAlive();
    [CompilerGeneratedAttribute]
public void set_KeepAlive(Time value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Largest();
    [CompilerGeneratedAttribute]
public void set_Largest(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(string value);
    [CompilerGeneratedAttribute]
public string get_NodeName();
    [CompilerGeneratedAttribute]
public void set_NodeName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PoolSize();
    [CompilerGeneratedAttribute]
public void set_PoolSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_Queue();
    [CompilerGeneratedAttribute]
public void set_Queue(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_QueueSize();
    [CompilerGeneratedAttribute]
public void set_QueueSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public long get_Rejected();
    [CompilerGeneratedAttribute]
public void set_Rejected(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public class OpenSearch.Client.CatThreadPoolRequest : PlainRequestBase`1<CatThreadPoolRequestParameters> {
    protected ICatThreadPoolRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.ICatThreadPoolRequest.ThreadPoolPatterns { get; }
    public string Format { get; public set; }
    public String[] Headers { get; public set; }
    public Nullable`1<bool> Help { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] SortByColumns { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public CatThreadPoolRequest(Names threadPoolPatterns);
    protected ICatThreadPoolRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.ICatThreadPoolRequest.get_ThreadPoolPatterns();
    public string get_Format();
    public void set_Format(string value);
    public String[] get_Headers();
    public void set_Headers(String[] value);
    public Nullable`1<bool> get_Help();
    public void set_Help(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_SortByColumns();
    public void set_SortByColumns(String[] value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
internal enum OpenSearch.Client.CharacterType : Enum {
    public byte value__;
    public static CharacterType Whitespace;
    public static CharacterType Alpha;
    public static CharacterType Comment;
}
public abstract class OpenSearch.Client.CharFilterBase : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    public string Type { get; protected set; }
    public string Version { get; public set; }
    protected CharFilterBase(string type);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
protected void set_Type(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(string value);
}
public abstract class OpenSearch.Client.CharFilterDescriptorBase`2 : DescriptorBase`2<TCharFilter, TCharFilterInterface> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICharFilter.Version>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.ICharFilter.Type { get; }
    private string OpenSearch.Client.ICharFilter.Version { get; private set; }
    protected abstract virtual string get_Type();
    private sealed virtual override string OpenSearch.Client.ICharFilter.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICharFilter.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICharFilter.set_Version(string value);
    public TCharFilter Version(string version);
}
[DataContractAttribute]
public class OpenSearch.Client.CharFilterDetail : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <FilteredText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> FilteredText { get; internal set; }
    [DataMemberAttribute]
public string Name { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_FilteredText();
    [CompilerGeneratedAttribute]
internal void set_FilteredText(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
}
internal class OpenSearch.Client.CharFilterFormatter : object {
    public sealed virtual ICharFilter Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, ICharFilter value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, ICharFilter value, IJsonFormatterResolver formatterResolver);
    private static TCharFilter Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.CharFilters : IsADictionaryBase`2<string, ICharFilter> {
    public CharFilters(IDictionary`2<string, ICharFilter> container);
    public CharFilters(Dictionary`2<string, ICharFilter> container);
    public sealed virtual void Add(string name, ICharFilter analyzer);
}
public class OpenSearch.Client.CharFiltersDescriptor : IsADictionaryDescriptorBase`4<CharFiltersDescriptor, ICharFilters, string, ICharFilter> {
    public CharFiltersDescriptor UserDefined(string name, ICharFilter analyzer);
    public CharFiltersDescriptor PatternReplace(string name, Func`2<PatternReplaceCharFilterDescriptor, IPatternReplaceCharFilter> selector);
    public CharFiltersDescriptor HtmlStrip(string name, Func`2<HtmlStripCharFilterDescriptor, IHtmlStripCharFilter> selector);
    public CharFiltersDescriptor Mapping(string name, Func`2<MappingCharFilterDescriptor, IMappingCharFilter> selector);
    public CharFiltersDescriptor KuromojiIterationMark(string name, Func`2<KuromojiIterationMarkCharFilterDescriptor, IKuromojiIterationMarkCharFilter> selector);
    public CharFiltersDescriptor IcuNormalization(string name, Func`2<IcuNormalizationCharFilterDescriptor, IIcuNormalizationCharFilter> selector);
}
public class OpenSearch.Client.CharGroupTokenizer : TokenizerBase {
    internal static string TokenizerType;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <TokenizeOnCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxTokenLength>k__BackingField;
    public IEnumerable`1<string> TokenizeOnCharacters { get; public set; }
    public Nullable`1<int> MaxTokenLength { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_TokenizeOnCharacters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TokenizeOnCharacters(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxTokenLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxTokenLength(Nullable`1<int> value);
}
public class OpenSearch.Client.CharGroupTokenizerDescriptor : TokenizerDescriptorBase`2<CharGroupTokenizerDescriptor, ICharGroupTokenizer> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ICharGroupTokenizer.TokenizeOnCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ICharGroupTokenizer.MaxTokenLength>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.ICharGroupTokenizer.TokenizeOnCharacters { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ICharGroupTokenizer.MaxTokenLength { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ICharGroupTokenizer.get_TokenizeOnCharacters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICharGroupTokenizer.set_TokenizeOnCharacters(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ICharGroupTokenizer.get_MaxTokenLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICharGroupTokenizer.set_MaxTokenLength(Nullable`1<int> value);
    public CharGroupTokenizerDescriptor TokenizeOnCharacters(String[] characters);
    public CharGroupTokenizerDescriptor TokenizeOnCharacters(IEnumerable`1<string> characters);
    public CharGroupTokenizerDescriptor MaxTokenLength(Nullable`1<int> maxTokenLength);
}
[JsonFormatterAttribute("OpenSearch.Client.ChildrenFormatter")]
public class OpenSearch.Client.Children : List`1<RelationName> {
    public Children(RelationName child, RelationName[] moreChildren);
    public static Children op_Implicit(RelationName child);
    public static Children op_Implicit(Type type);
    public static Children op_Implicit(string type);
}
public class OpenSearch.Client.ChildrenAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private RelationName <Type>k__BackingField;
    public RelationName Type { get; public set; }
    public ChildrenAggregation(string name, RelationName type);
    [CompilerGeneratedAttribute]
public sealed virtual RelationName get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(RelationName value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.ChildrenAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<ChildrenAggregationDescriptor`1<T>, IChildrenAggregation, T> {
    [CompilerGeneratedAttribute]
private RelationName <OpenSearch.Client.IChildrenAggregation.Type>k__BackingField;
    private RelationName OpenSearch.Client.IChildrenAggregation.Type { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override RelationName OpenSearch.Client.IChildrenAggregation.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IChildrenAggregation.set_Type(RelationName value);
    public ChildrenAggregationDescriptor`1<T> Type(RelationName type);
    public ChildrenAggregationDescriptor`1<T> Type();
}
internal class OpenSearch.Client.ChildrenFormatter : object {
    public sealed virtual Children Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Children value, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.ChildScoreMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ChildScoreMode None;
    [EnumMemberAttribute]
public static ChildScoreMode Average;
    [EnumMemberAttribute]
public static ChildScoreMode Sum;
    [EnumMemberAttribute]
public static ChildScoreMode Max;
    [EnumMemberAttribute]
public static ChildScoreMode Min;
}
public class OpenSearch.Client.ChiSquareHeuristic : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BackgroundIsSuperSet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeNegatives>k__BackingField;
    public Nullable`1<bool> BackgroundIsSuperSet { get; public set; }
    public Nullable`1<bool> IncludeNegatives { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_BackgroundIsSuperSet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BackgroundIsSuperSet(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeNegatives();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeNegatives(Nullable`1<bool> value);
}
public class OpenSearch.Client.ChiSquareHeuristicDescriptor : DescriptorBase`2<ChiSquareHeuristicDescriptor, IChiSquareHeuristic> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IChiSquareHeuristic.BackgroundIsSuperSet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IChiSquareHeuristic.IncludeNegatives>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IChiSquareHeuristic.BackgroundIsSuperSet { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IChiSquareHeuristic.IncludeNegatives { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IChiSquareHeuristic.get_BackgroundIsSuperSet();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IChiSquareHeuristic.set_BackgroundIsSuperSet(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IChiSquareHeuristic.get_IncludeNegatives();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IChiSquareHeuristic.set_IncludeNegatives(Nullable`1<bool> value);
    public ChiSquareHeuristicDescriptor BackgroundIsSuperSet(Nullable`1<bool> backgroundIsSuperSet);
    public ChiSquareHeuristicDescriptor IncludeNegatives(Nullable`1<bool> includeNegatives);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.CircleGeoShape>")]
public class OpenSearch.Client.CircleGeoShape : GeoShapeBase {
    [CompilerGeneratedAttribute]
private GeoCoordinate <Coordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Radius>k__BackingField;
    public GeoCoordinate Coordinates { get; public set; }
    public string Radius { get; public set; }
    public CircleGeoShape(GeoCoordinate coordinates, string radius);
    [CompilerGeneratedAttribute]
public sealed virtual GeoCoordinate get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(GeoCoordinate value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Radius();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Radius(string value);
}
public class OpenSearch.Client.CircuitBreakerSettings : object {
    [CompilerGeneratedAttribute]
private string <FielddataLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <FielddataOverhead>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <RequestOverhead>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TotalLimit>k__BackingField;
    public string FielddataLimit { get; public set; }
    public Nullable`1<float> FielddataOverhead { get; public set; }
    public string RequestLimit { get; public set; }
    public Nullable`1<float> RequestOverhead { get; public set; }
    public string TotalLimit { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_FielddataLimit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FielddataLimit(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_FielddataOverhead();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FielddataOverhead(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RequestLimit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequestLimit(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_RequestOverhead();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequestOverhead(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TotalLimit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TotalLimit(string value);
}
public class OpenSearch.Client.CircuitBreakerSettingsDescriptor : DescriptorBase`2<CircuitBreakerSettingsDescriptor, ICircuitBreakerSettings> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICircuitBreakerSettings.FielddataLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.ICircuitBreakerSettings.FielddataOverhead>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICircuitBreakerSettings.RequestLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.ICircuitBreakerSettings.RequestOverhead>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICircuitBreakerSettings.TotalLimit>k__BackingField;
    private string OpenSearch.Client.ICircuitBreakerSettings.FielddataLimit { get; private set; }
    private Nullable`1<float> OpenSearch.Client.ICircuitBreakerSettings.FielddataOverhead { get; private set; }
    private string OpenSearch.Client.ICircuitBreakerSettings.RequestLimit { get; private set; }
    private Nullable`1<float> OpenSearch.Client.ICircuitBreakerSettings.RequestOverhead { get; private set; }
    private string OpenSearch.Client.ICircuitBreakerSettings.TotalLimit { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICircuitBreakerSettings.get_FielddataLimit();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICircuitBreakerSettings.set_FielddataLimit(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.ICircuitBreakerSettings.get_FielddataOverhead();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICircuitBreakerSettings.set_FielddataOverhead(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICircuitBreakerSettings.get_RequestLimit();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICircuitBreakerSettings.set_RequestLimit(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.ICircuitBreakerSettings.get_RequestOverhead();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICircuitBreakerSettings.set_RequestOverhead(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICircuitBreakerSettings.get_TotalLimit();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICircuitBreakerSettings.set_TotalLimit(string value);
    public CircuitBreakerSettingsDescriptor TotalLimit(string limit);
    public CircuitBreakerSettingsDescriptor FielddataLimit(string limit);
    public CircuitBreakerSettingsDescriptor RequestLimit(string limit);
    public CircuitBreakerSettingsDescriptor FielddataOverhead(Nullable`1<float> overhead);
    public CircuitBreakerSettingsDescriptor RequestOverhead(Nullable`1<float> overhead);
}
public class OpenSearch.Client.CleanupRepositoryDescriptor : RequestDescriptorBase`3<CleanupRepositoryDescriptor, CleanupRepositoryRequestParameters, ICleanupRepositoryRequest> {
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.ICleanupRepositoryRequest.RepositoryName { get; }
    public CleanupRepositoryDescriptor(Name repository);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ICleanupRepositoryRequest.get_RepositoryName();
    public CleanupRepositoryDescriptor MasterTimeout(Time mastertimeout);
    public CleanupRepositoryDescriptor ClusterManagerTimeout(Time timeout);
    public CleanupRepositoryDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.CleanupRepositoryRequest : PlainRequestBase`1<CleanupRepositoryRequestParameters> {
    protected ICleanupRepositoryRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.ICleanupRepositoryRequest.RepositoryName { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public CleanupRepositoryRequest(Name repository);
    protected ICleanupRepositoryRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ICleanupRepositoryRequest.get_RepositoryName();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.CleanupRepositoryResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private CleanupRepositoryResults <Results>k__BackingField;
    [DataMemberAttribute]
public CleanupRepositoryResults Results { get; internal set; }
    [CompilerGeneratedAttribute]
public CleanupRepositoryResults get_Results();
    [CompilerGeneratedAttribute]
internal void set_Results(CleanupRepositoryResults value);
}
public class OpenSearch.Client.CleanupRepositoryResults : object {
    [CompilerGeneratedAttribute]
private long <DeletedBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DeletedBlobs>k__BackingField;
    [DataMemberAttribute]
public long DeletedBytes { get; internal set; }
    [DataMemberAttribute]
public long DeletedBlobs { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_DeletedBytes();
    [CompilerGeneratedAttribute]
internal void set_DeletedBytes(long value);
    [CompilerGeneratedAttribute]
public long get_DeletedBlobs();
    [CompilerGeneratedAttribute]
internal void set_DeletedBlobs(long value);
}
public class OpenSearch.Client.ClearCacheDescriptor : RequestDescriptorBase`3<ClearCacheDescriptor, ClearCacheRequestParameters, IClearCacheRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IClearCacheRequest.Index { get; }
    public ClearCacheDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IClearCacheRequest.get_Index();
    public ClearCacheDescriptor Index(Indices index);
    public ClearCacheDescriptor Index();
    public ClearCacheDescriptor AllIndices();
    public ClearCacheDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public ClearCacheDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public ClearCacheDescriptor Fielddata(Nullable`1<bool> fielddata);
    public ClearCacheDescriptor Fields(Fields fields);
    public ClearCacheDescriptor Fields(Expression`1[] fields);
    public ClearCacheDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public ClearCacheDescriptor Query(Nullable`1<bool> query);
    public ClearCacheDescriptor Request(Nullable`1<bool> request);
}
public class OpenSearch.Client.ClearCacheRequest : PlainRequestBase`1<ClearCacheRequestParameters> {
    protected IClearCacheRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IClearCacheRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> Fielddata { get; public set; }
    public Fields Fields { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> Query { get; public set; }
    public Nullable`1<bool> Request { get; public set; }
    public ClearCacheRequest(Indices index);
    protected IClearCacheRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IClearCacheRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_Fielddata();
    public void set_Fielddata(Nullable`1<bool> value);
    public Fields get_Fields();
    public void set_Fields(Fields value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_Query();
    public void set_Query(Nullable`1<bool> value);
    public Nullable`1<bool> get_Request();
    public void set_Request(Nullable`1<bool> value);
}
public class OpenSearch.Client.ClearCacheResponse : ShardsOperationResponseBase {
}
public class OpenSearch.Client.ClearScrollDescriptor : RequestDescriptorBase`3<ClearScrollDescriptor, ClearScrollRequestParameters, IClearScrollRequest> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IClearScrollRequest.ScrollIds>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IEnumerable`1<string> OpenSearch.Client.IClearScrollRequest.ScrollIds { get; private set; }
    internal virtual ApiUrls get_ApiUrls();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IClearScrollRequest.get_ScrollIds();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClearScrollRequest.set_ScrollIds(IEnumerable`1<string> value);
    public ClearScrollDescriptor ScrollId(String[] scrollIds);
}
public class OpenSearch.Client.ClearScrollRequest : PlainRequestBase`1<ClearScrollRequestParameters> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ScrollIds>k__BackingField;
    protected IClearScrollRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public IEnumerable`1<string> ScrollIds { get; public set; }
    public ClearScrollRequest(IEnumerable`1<string> scrollIds);
    public ClearScrollRequest(string scrollId);
    protected IClearScrollRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_ScrollIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScrollIds(IEnumerable`1<string> value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClearScrollResponse : ResponseBase {
}
public class OpenSearch.Client.CloneIndexDescriptor : RequestDescriptorBase`3<CloneIndexDescriptor, CloneIndexRequestParameters, ICloneIndexRequest> {
    [CompilerGeneratedAttribute]
private IAliases <OpenSearch.Client.ICloneIndexRequest.Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <OpenSearch.Client.ICloneIndexRequest.Settings>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.ICloneIndexRequest.Index { get; }
    private IndexName OpenSearch.Client.ICloneIndexRequest.Target { get; }
    private IAliases OpenSearch.Client.ICloneIndexRequest.Aliases { get; private set; }
    private IIndexSettings OpenSearch.Client.ICloneIndexRequest.Settings { get; private set; }
    public CloneIndexDescriptor(IndexName index, IndexName target);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.ICloneIndexRequest.get_Index();
    private sealed virtual override IndexName OpenSearch.Client.ICloneIndexRequest.get_Target();
    public CloneIndexDescriptor Index(IndexName index);
    public CloneIndexDescriptor Index();
    public CloneIndexDescriptor MasterTimeout(Time mastertimeout);
    public CloneIndexDescriptor ClusterManagerTimeout(Time timeout);
    public CloneIndexDescriptor Timeout(Time timeout);
    public CloneIndexDescriptor WaitForActiveShards(string waitforactiveshards);
    [CompilerGeneratedAttribute]
private sealed virtual override IAliases OpenSearch.Client.ICloneIndexRequest.get_Aliases();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICloneIndexRequest.set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIndexSettings OpenSearch.Client.ICloneIndexRequest.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICloneIndexRequest.set_Settings(IIndexSettings value);
    public CloneIndexDescriptor Settings(Func`2<IndexSettingsDescriptor, IPromise`1<IIndexSettings>> selector);
    public CloneIndexDescriptor Aliases(Func`2<AliasesDescriptor, IPromise`1<IAliases>> selector);
}
public class OpenSearch.Client.CloneIndexRequest : PlainRequestBase`1<CloneIndexRequestParameters> {
    [CompilerGeneratedAttribute]
private IAliases <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <Settings>k__BackingField;
    public IAliases Aliases { get; public set; }
    public IIndexSettings Settings { get; public set; }
    protected ICloneIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.ICloneIndexRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.ICloneIndexRequest.Target { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public CloneIndexRequest(IndexName index, IndexName target);
    [CompilerGeneratedAttribute]
public sealed virtual IAliases get_Aliases();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
public sealed virtual IIndexSettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IIndexSettings value);
    protected ICloneIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.ICloneIndexRequest.get_Index();
    private sealed virtual override IndexName OpenSearch.Client.ICloneIndexRequest.get_Target();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
public class OpenSearch.Client.CloneIndexResponse : AcknowledgedResponseBase {
    [CompilerGeneratedAttribute]
private bool <ShardsAcknowledged>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [DataMemberAttribute]
public bool ShardsAcknowledged { get; public set; }
    [DataMemberAttribute]
public string Index { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ShardsAcknowledged();
    [CompilerGeneratedAttribute]
public void set_ShardsAcknowledged(bool value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
}
public class OpenSearch.Client.CloneSnapshotDescriptor : RequestDescriptorBase`3<CloneSnapshotDescriptor, CloneSnapshotRequestParameters, ICloneSnapshotRequest> {
    [CompilerGeneratedAttribute]
private Indices <OpenSearch.Client.ICloneSnapshotRequest.Indices>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.ICloneSnapshotRequest.RepositoryName { get; }
    private Name OpenSearch.Client.ICloneSnapshotRequest.Snapshot { get; }
    private Name OpenSearch.Client.ICloneSnapshotRequest.TargetSnapshot { get; }
    private Indices OpenSearch.Client.ICloneSnapshotRequest.Indices { get; private set; }
    public CloneSnapshotDescriptor(Name repository, Name snapshot, Name targetSnapshot);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ICloneSnapshotRequest.get_RepositoryName();
    private sealed virtual override Name OpenSearch.Client.ICloneSnapshotRequest.get_Snapshot();
    private sealed virtual override Name OpenSearch.Client.ICloneSnapshotRequest.get_TargetSnapshot();
    public CloneSnapshotDescriptor MasterTimeout(Time mastertimeout);
    public CloneSnapshotDescriptor ClusterManagerTimeout(Time timeout);
    [CompilerGeneratedAttribute]
private sealed virtual override Indices OpenSearch.Client.ICloneSnapshotRequest.get_Indices();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICloneSnapshotRequest.set_Indices(Indices value);
    public CloneSnapshotDescriptor Index(IndexName index);
    public CloneSnapshotDescriptor Index();
    public CloneSnapshotDescriptor Indices(Indices indices);
}
public class OpenSearch.Client.CloneSnapshotRequest : PlainRequestBase`1<CloneSnapshotRequestParameters> {
    [CompilerGeneratedAttribute]
private Indices <Indices>k__BackingField;
    public Indices Indices { get; public set; }
    protected ICloneSnapshotRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.ICloneSnapshotRequest.RepositoryName { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.ICloneSnapshotRequest.Snapshot { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.ICloneSnapshotRequest.TargetSnapshot { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public CloneSnapshotRequest(Name repository, Name snapshot, Name targetSnapshot);
    [CompilerGeneratedAttribute]
public sealed virtual Indices get_Indices();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Indices(Indices value);
    protected ICloneSnapshotRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ICloneSnapshotRequest.get_RepositoryName();
    private sealed virtual override Name OpenSearch.Client.ICloneSnapshotRequest.get_Snapshot();
    private sealed virtual override Name OpenSearch.Client.ICloneSnapshotRequest.get_TargetSnapshot();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
public class OpenSearch.Client.CloneSnapshotResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.CloseIndexDescriptor : RequestDescriptorBase`3<CloseIndexDescriptor, CloseIndexRequestParameters, ICloseIndexRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ICloseIndexRequest.Index { get; }
    public CloseIndexDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICloseIndexRequest.get_Index();
    public CloseIndexDescriptor Index(Indices index);
    public CloseIndexDescriptor Index();
    public CloseIndexDescriptor AllIndices();
    public CloseIndexDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public CloseIndexDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public CloseIndexDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public CloseIndexDescriptor MasterTimeout(Time mastertimeout);
    public CloseIndexDescriptor ClusterManagerTimeout(Time timeout);
    public CloseIndexDescriptor Timeout(Time timeout);
    public CloseIndexDescriptor WaitForActiveShards(string waitforactiveshards);
}
public class OpenSearch.Client.CloseIndexRequest : PlainRequestBase`1<CloseIndexRequestParameters> {
    protected ICloseIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ICloseIndexRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public CloseIndexRequest(Indices index);
    protected ICloseIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICloseIndexRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
public class OpenSearch.Client.CloseIndexResponse : AcknowledgedResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, CloseIndexResult> <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShardsAcknowledged>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, CloseIndexResult> Indices { get; internal set; }
    [DataMemberAttribute]
public bool ShardsAcknowledged { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, CloseIndexResult> get_Indices();
    [CompilerGeneratedAttribute]
internal void set_Indices(IReadOnlyDictionary`2<string, CloseIndexResult> value);
    [CompilerGeneratedAttribute]
public bool get_ShardsAcknowledged();
    [CompilerGeneratedAttribute]
internal void set_ShardsAcknowledged(bool value);
}
[DataContractAttribute]
public class OpenSearch.Client.CloseIndexResult : object {
    [CompilerGeneratedAttribute]
private bool <Closed>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, CloseShardResult> <Shards>k__BackingField;
    [DataMemberAttribute]
public bool Closed { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, CloseShardResult> Shards { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_Closed();
    [CompilerGeneratedAttribute]
internal void set_Closed(bool value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, CloseShardResult> get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(IReadOnlyDictionary`2<string, CloseShardResult> value);
}
[DataContractAttribute]
public class OpenSearch.Client.CloseShardResult : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ShardFailure> <Failures>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<ShardFailure> Failures { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ShardFailure> get_Failures();
    [CompilerGeneratedAttribute]
internal void set_Failures(IReadOnlyCollection`1<ShardFailure> value);
}
public abstract class OpenSearch.Client.ClrPropertyMappingBase`1 : object {
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IClrPropertyMapping<TDocument>.Ignore>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IClrPropertyMapping<TDocument>.NewName>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression`1<Func`2<TDocument, object>> <OpenSearch.Client.IClrPropertyMapping<TDocument>.Property>k__BackingField;
    protected IClrPropertyMapping`1<TDocument> Self { get; }
    private bool OpenSearch.Client.IClrPropertyMapping<TDocument>.Ignore { get; private set; }
    private string OpenSearch.Client.IClrPropertyMapping<TDocument>.NewName { get; private set; }
    private Expression`1<Func`2<TDocument, object>> OpenSearch.Client.IClrPropertyMapping<TDocument>.Property { get; private set; }
    protected ClrPropertyMappingBase`1(Expression`1<Func`2<TDocument, object>> property);
    protected IClrPropertyMapping`1<TDocument> get_Self();
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IClrPropertyMapping<TDocument>.get_Ignore();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrPropertyMapping<TDocument>.set_Ignore(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IClrPropertyMapping<TDocument>.get_NewName();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrPropertyMapping<TDocument>.set_NewName(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Expression`1<Func`2<TDocument, object>> OpenSearch.Client.IClrPropertyMapping<TDocument>.get_Property();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrPropertyMapping<TDocument>.set_Property(Expression`1<Func`2<TDocument, object>> value);
    private sealed virtual override IPropertyMapping OpenSearch.Client.IClrPropertyMapping<TDocument>.ToPropertyMapping();
}
public class OpenSearch.Client.ClrTypeMapping : object {
    [CompilerGeneratedAttribute]
private Type <ClrType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelationName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableIdInference>k__BackingField;
    public Type ClrType { get; }
    public string IdPropertyName { get; public set; }
    public string IndexName { get; public set; }
    public string RelationName { get; public set; }
    public bool DisableIdInference { get; public set; }
    public ClrTypeMapping(Type type);
    [CompilerGeneratedAttribute]
public sealed virtual Type get_ClrType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdPropertyName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdPropertyName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IndexName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RelationName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RelationName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DisableIdInference();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisableIdInference(bool value);
}
public class OpenSearch.Client.ClrTypeMapping`1 : ClrTypeMapping {
    [CompilerGeneratedAttribute]
private Expression`1<Func`2<TDocument, object>> <IdProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IClrPropertyMapping`1<TDocument>> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression`1<Func`2<TDocument, object>> <RoutingProperty>k__BackingField;
    public Expression`1<Func`2<TDocument, object>> IdProperty { get; public set; }
    public IList`1<IClrPropertyMapping`1<TDocument>> Properties { get; public set; }
    public Expression`1<Func`2<TDocument, object>> RoutingProperty { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Expression`1<Func`2<TDocument, object>> get_IdProperty();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdProperty(Expression`1<Func`2<TDocument, object>> value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<IClrPropertyMapping`1<TDocument>> get_Properties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Properties(IList`1<IClrPropertyMapping`1<TDocument>> value);
    [CompilerGeneratedAttribute]
public sealed virtual Expression`1<Func`2<TDocument, object>> get_RoutingProperty();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RoutingProperty(Expression`1<Func`2<TDocument, object>> value);
}
public class OpenSearch.Client.ClrTypeMappingDescriptor : DescriptorBase`2<ClrTypeMappingDescriptor, IClrTypeMapping> {
    private Type _type;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IClrTypeMapping.IdPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IClrTypeMapping.IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IClrTypeMapping.RelationName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IClrTypeMapping.DisableIdInference>k__BackingField;
    private Type OpenSearch.Client.IClrTypeMapping.ClrType { get; }
    private string OpenSearch.Client.IClrTypeMapping.IdPropertyName { get; private set; }
    private string OpenSearch.Client.IClrTypeMapping.IndexName { get; private set; }
    private string OpenSearch.Client.IClrTypeMapping.RelationName { get; private set; }
    private bool OpenSearch.Client.IClrTypeMapping.DisableIdInference { get; private set; }
    public ClrTypeMappingDescriptor(Type type);
    private sealed virtual override Type OpenSearch.Client.IClrTypeMapping.get_ClrType();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IClrTypeMapping.get_IdPropertyName();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrTypeMapping.set_IdPropertyName(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IClrTypeMapping.get_IndexName();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrTypeMapping.set_IndexName(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IClrTypeMapping.get_RelationName();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrTypeMapping.set_RelationName(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IClrTypeMapping.get_DisableIdInference();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrTypeMapping.set_DisableIdInference(bool value);
    public ClrTypeMappingDescriptor IndexName(string indexName);
    public ClrTypeMappingDescriptor RelationName(string relationName);
    public ClrTypeMappingDescriptor IdProperty(string idProperty);
    public ClrTypeMappingDescriptor DisableIdInference(bool disable);
}
public class OpenSearch.Client.ClrTypeMappingDescriptor`1 : DescriptorBase`2<ClrTypeMappingDescriptor`1<TDocument>, IClrTypeMapping`1<TDocument>> {
    [CompilerGeneratedAttribute]
private Type <OpenSearch.Client.IClrTypeMapping.ClrType>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression`1<Func`2<TDocument, object>> <OpenSearch.Client.IClrTypeMapping<TDocument>.IdProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IClrTypeMapping.IdPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IClrTypeMapping.IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IClrPropertyMapping`1<TDocument>> <OpenSearch.Client.IClrTypeMapping<TDocument>.Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IClrTypeMapping.RelationName>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression`1<Func`2<TDocument, object>> <OpenSearch.Client.IClrTypeMapping<TDocument>.RoutingProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IClrTypeMapping.DisableIdInference>k__BackingField;
    private Type OpenSearch.Client.IClrTypeMapping.ClrType { get; }
    private Expression`1<Func`2<TDocument, object>> OpenSearch.Client.IClrTypeMapping<TDocument>.IdProperty { get; private set; }
    private string OpenSearch.Client.IClrTypeMapping.IdPropertyName { get; private set; }
    private string OpenSearch.Client.IClrTypeMapping.IndexName { get; private set; }
    private IList`1<IClrPropertyMapping`1<TDocument>> OpenSearch.Client.IClrTypeMapping<TDocument>.Properties { get; private set; }
    private string OpenSearch.Client.IClrTypeMapping.RelationName { get; private set; }
    private Expression`1<Func`2<TDocument, object>> OpenSearch.Client.IClrTypeMapping<TDocument>.RoutingProperty { get; private set; }
    private bool OpenSearch.Client.IClrTypeMapping.DisableIdInference { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Type OpenSearch.Client.IClrTypeMapping.get_ClrType();
    [CompilerGeneratedAttribute]
private sealed virtual override Expression`1<Func`2<TDocument, object>> OpenSearch.Client.IClrTypeMapping<TDocument>.get_IdProperty();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrTypeMapping<TDocument>.set_IdProperty(Expression`1<Func`2<TDocument, object>> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IClrTypeMapping.get_IdPropertyName();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrTypeMapping.set_IdPropertyName(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IClrTypeMapping.get_IndexName();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrTypeMapping.set_IndexName(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<IClrPropertyMapping`1<TDocument>> OpenSearch.Client.IClrTypeMapping<TDocument>.get_Properties();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrTypeMapping<TDocument>.set_Properties(IList`1<IClrPropertyMapping`1<TDocument>> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IClrTypeMapping.get_RelationName();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrTypeMapping.set_RelationName(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Expression`1<Func`2<TDocument, object>> OpenSearch.Client.IClrTypeMapping<TDocument>.get_RoutingProperty();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrTypeMapping<TDocument>.set_RoutingProperty(Expression`1<Func`2<TDocument, object>> value);
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IClrTypeMapping.get_DisableIdInference();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClrTypeMapping.set_DisableIdInference(bool value);
    public ClrTypeMappingDescriptor`1<TDocument> IndexName(string indexName);
    public ClrTypeMappingDescriptor`1<TDocument> RelationName(string relationName);
    public ClrTypeMappingDescriptor`1<TDocument> IdProperty(Expression`1<Func`2<TDocument, object>> property);
    public ClrTypeMappingDescriptor`1<TDocument> IdProperty(string property);
    public ClrTypeMappingDescriptor`1<TDocument> RoutingProperty(Expression`1<Func`2<TDocument, object>> property);
    public ClrTypeMappingDescriptor`1<TDocument> Ignore(Expression`1<Func`2<TDocument, object>> property);
    public ClrTypeMappingDescriptor`1<TDocument> PropertyName(Expression`1<Func`2<TDocument, object>> property, string newName);
    public ClrTypeMappingDescriptor`1<TDocument> DisableIdInference(bool disable);
}
public class OpenSearch.Client.ClusterAllocationExplainDescriptor : RequestDescriptorBase`3<ClusterAllocationExplainDescriptor, ClusterAllocationExplainRequestParameters, IClusterAllocationExplainRequest> {
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IClusterAllocationExplainRequest.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IClusterAllocationExplainRequest.Primary>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IClusterAllocationExplainRequest.Shard>k__BackingField;
    private IndexName OpenSearch.Client.IClusterAllocationExplainRequest.Index { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IClusterAllocationExplainRequest.Primary { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IClusterAllocationExplainRequest.Shard { get; private set; }
    internal ApiUrls ApiUrls { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IClusterAllocationExplainRequest.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterAllocationExplainRequest.set_Index(IndexName value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IClusterAllocationExplainRequest.get_Primary();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterAllocationExplainRequest.set_Primary(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IClusterAllocationExplainRequest.get_Shard();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterAllocationExplainRequest.set_Shard(Nullable`1<int> value);
    public ClusterAllocationExplainDescriptor Index(IndexName index);
    public ClusterAllocationExplainDescriptor Index();
    public ClusterAllocationExplainDescriptor Primary(Nullable`1<bool> primary);
    public ClusterAllocationExplainDescriptor Shard(Nullable`1<int> shard);
    internal virtual ApiUrls get_ApiUrls();
    public ClusterAllocationExplainDescriptor IncludeDiskInfo(Nullable`1<bool> includediskinfo);
    public ClusterAllocationExplainDescriptor IncludeYesDecisions(Nullable`1<bool> includeyesdecisions);
}
public class OpenSearch.Client.ClusterAllocationExplainRequest : PlainRequestBase`1<ClusterAllocationExplainRequestParameters> {
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Primary>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Shard>k__BackingField;
    public IndexName Index { get; public set; }
    public Nullable`1<bool> Primary { get; public set; }
    public Nullable`1<int> Shard { get; public set; }
    protected IClusterAllocationExplainRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<bool> IncludeDiskInfo { get; public set; }
    public Nullable`1<bool> IncludeYesDecisions { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Primary();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Primary(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Shard();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Shard(Nullable`1<int> value);
    protected IClusterAllocationExplainRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<bool> get_IncludeDiskInfo();
    public void set_IncludeDiskInfo(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeYesDecisions();
    public void set_IncludeYesDecisions(Nullable`1<bool> value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterAllocationExplainResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private string <AllocateExplanation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AllocationDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private long <AllocationDelayInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Decision> <CanAllocate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Decision> <CanMoveToOtherNode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Decision> <CanRebalanceCluster>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<AllocationDecision> <CanRebalanceClusterDecisions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Decision> <CanRebalanceToOtherNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<AllocationDecision> <CanRemainDecisions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Decision> <CanRemainOnCurrentNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfiguredDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ConfiguredDelayInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private CurrentNode <CurrentNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MoveExplanation>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<NodeAllocationExplanation> <NodeAllocationDecisions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Primary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RebalanceExplanation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RemainingDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RemainingDelayInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Shard>k__BackingField;
    [CompilerGeneratedAttribute]
private UnassignedInformation <UnassignedInformation>k__BackingField;
    [DataMemberAttribute]
public string AllocateExplanation { get; internal set; }
    [DataMemberAttribute]
public string AllocationDelay { get; internal set; }
    [DataMemberAttribute]
public long AllocationDelayInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<Decision> CanAllocate { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<Decision> CanMoveToOtherNode { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<Decision> CanRebalanceCluster { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<AllocationDecision> CanRebalanceClusterDecisions { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<Decision> CanRebalanceToOtherNode { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<AllocationDecision> CanRemainDecisions { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<Decision> CanRemainOnCurrentNode { get; internal set; }
    [DataMemberAttribute]
public string ConfiguredDelay { get; internal set; }
    [DataMemberAttribute]
public long ConfiguredDelayInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public CurrentNode CurrentNode { get; internal set; }
    [DataMemberAttribute]
public string CurrentState { get; internal set; }
    [DataMemberAttribute]
public string Index { get; internal set; }
    [DataMemberAttribute]
public string MoveExplanation { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<NodeAllocationExplanation> NodeAllocationDecisions { get; internal set; }
    [DataMemberAttribute]
public bool Primary { get; internal set; }
    [DataMemberAttribute]
public string RebalanceExplanation { get; internal set; }
    [DataMemberAttribute]
public string RemainingDelay { get; internal set; }
    [DataMemberAttribute]
public long RemainingDelayInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public int Shard { get; internal set; }
    [DataMemberAttribute]
public UnassignedInformation UnassignedInformation { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_AllocateExplanation();
    [CompilerGeneratedAttribute]
internal void set_AllocateExplanation(string value);
    [CompilerGeneratedAttribute]
public string get_AllocationDelay();
    [CompilerGeneratedAttribute]
internal void set_AllocationDelay(string value);
    [CompilerGeneratedAttribute]
public long get_AllocationDelayInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_AllocationDelayInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<Decision> get_CanAllocate();
    [CompilerGeneratedAttribute]
internal void set_CanAllocate(Nullable`1<Decision> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Decision> get_CanMoveToOtherNode();
    [CompilerGeneratedAttribute]
internal void set_CanMoveToOtherNode(Nullable`1<Decision> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Decision> get_CanRebalanceCluster();
    [CompilerGeneratedAttribute]
internal void set_CanRebalanceCluster(Nullable`1<Decision> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<AllocationDecision> get_CanRebalanceClusterDecisions();
    [CompilerGeneratedAttribute]
internal void set_CanRebalanceClusterDecisions(IReadOnlyCollection`1<AllocationDecision> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Decision> get_CanRebalanceToOtherNode();
    [CompilerGeneratedAttribute]
internal void set_CanRebalanceToOtherNode(Nullable`1<Decision> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<AllocationDecision> get_CanRemainDecisions();
    [CompilerGeneratedAttribute]
internal void set_CanRemainDecisions(IReadOnlyCollection`1<AllocationDecision> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Decision> get_CanRemainOnCurrentNode();
    [CompilerGeneratedAttribute]
internal void set_CanRemainOnCurrentNode(Nullable`1<Decision> value);
    [CompilerGeneratedAttribute]
public string get_ConfiguredDelay();
    [CompilerGeneratedAttribute]
internal void set_ConfiguredDelay(string value);
    [CompilerGeneratedAttribute]
public long get_ConfiguredDelayInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_ConfiguredDelayInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public CurrentNode get_CurrentNode();
    [CompilerGeneratedAttribute]
internal void set_CurrentNode(CurrentNode value);
    [CompilerGeneratedAttribute]
public string get_CurrentState();
    [CompilerGeneratedAttribute]
internal void set_CurrentState(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_MoveExplanation();
    [CompilerGeneratedAttribute]
internal void set_MoveExplanation(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<NodeAllocationExplanation> get_NodeAllocationDecisions();
    [CompilerGeneratedAttribute]
internal void set_NodeAllocationDecisions(IReadOnlyCollection`1<NodeAllocationExplanation> value);
    [CompilerGeneratedAttribute]
public bool get_Primary();
    [CompilerGeneratedAttribute]
internal void set_Primary(bool value);
    [CompilerGeneratedAttribute]
public string get_RebalanceExplanation();
    [CompilerGeneratedAttribute]
internal void set_RebalanceExplanation(string value);
    [CompilerGeneratedAttribute]
public string get_RemainingDelay();
    [CompilerGeneratedAttribute]
internal void set_RemainingDelay(string value);
    [CompilerGeneratedAttribute]
public long get_RemainingDelayInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_RemainingDelayInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public int get_Shard();
    [CompilerGeneratedAttribute]
internal void set_Shard(int value);
    [CompilerGeneratedAttribute]
public UnassignedInformation get_UnassignedInformation();
    [CompilerGeneratedAttribute]
internal void set_UnassignedInformation(UnassignedInformation value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterFileSystem : object {
    [CompilerGeneratedAttribute]
private long <AvailableInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <FreeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalInBytes>k__BackingField;
    [DataMemberAttribute]
public long AvailableInBytes { get; internal set; }
    [DataMemberAttribute]
public long FreeInBytes { get; internal set; }
    [DataMemberAttribute]
public long TotalInBytes { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_AvailableInBytes();
    [CompilerGeneratedAttribute]
internal void set_AvailableInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_FreeInBytes();
    [CompilerGeneratedAttribute]
internal void set_FreeInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_TotalInBytes();
    [CompilerGeneratedAttribute]
internal void set_TotalInBytes(long value);
}
public class OpenSearch.Client.ClusterGetSettingsDescriptor : RequestDescriptorBase`3<ClusterGetSettingsDescriptor, ClusterGetSettingsRequestParameters, IClusterGetSettingsRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public ClusterGetSettingsDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public ClusterGetSettingsDescriptor IncludeDefaults(Nullable`1<bool> includedefaults);
    public ClusterGetSettingsDescriptor MasterTimeout(Time mastertimeout);
    public ClusterGetSettingsDescriptor ClusterManagerTimeout(Time timeout);
    public ClusterGetSettingsDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.ClusterGetSettingsRequest : PlainRequestBase`1<ClusterGetSettingsRequestParameters> {
    protected IClusterGetSettingsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Nullable`1<bool> IncludeDefaults { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    protected IClusterGetSettingsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeDefaults();
    public void set_IncludeDefaults(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterGetSettingsResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Persistent>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Transient>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, object> Persistent { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, object> Transient { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_Persistent();
    [CompilerGeneratedAttribute]
internal void set_Persistent(IReadOnlyDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_Transient();
    [CompilerGeneratedAttribute]
internal void set_Transient(IReadOnlyDictionary`2<string, object> value);
}
public class OpenSearch.Client.ClusterHealthDescriptor : RequestDescriptorBase`3<ClusterHealthDescriptor, ClusterHealthRequestParameters, IClusterHealthRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IClusterHealthRequest.Index { get; }
    public ClusterHealthDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IClusterHealthRequest.get_Index();
    public ClusterHealthDescriptor Index(Indices index);
    public ClusterHealthDescriptor Index();
    public ClusterHealthDescriptor AllIndices();
    public ClusterHealthDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public ClusterHealthDescriptor Level(Nullable`1<Level> level);
    public ClusterHealthDescriptor Local(Nullable`1<bool> local);
    public ClusterHealthDescriptor MasterTimeout(Time mastertimeout);
    public ClusterHealthDescriptor ClusterManagerTimeout(Time timeout);
    public ClusterHealthDescriptor Timeout(Time timeout);
    public ClusterHealthDescriptor WaitForActiveShards(string waitforactiveshards);
    public ClusterHealthDescriptor WaitForEvents(Nullable`1<WaitForEvents> waitforevents);
    public ClusterHealthDescriptor WaitForNoInitializingShards(Nullable`1<bool> waitfornoinitializingshards);
    public ClusterHealthDescriptor WaitForNoRelocatingShards(Nullable`1<bool> waitfornorelocatingshards);
    public ClusterHealthDescriptor WaitForNodes(string waitfornodes);
    public ClusterHealthDescriptor WaitForStatus(Nullable`1<WaitForStatus> waitforstatus);
}
public class OpenSearch.Client.ClusterHealthRequest : PlainRequestBase`1<ClusterHealthRequestParameters> {
    protected IClusterHealthRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IClusterHealthRequest.Index { get; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<Level> Level { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public Nullable`1<WaitForEvents> WaitForEvents { get; public set; }
    public Nullable`1<bool> WaitForNoInitializingShards { get; public set; }
    public Nullable`1<bool> WaitForNoRelocatingShards { get; public set; }
    public string WaitForNodes { get; public set; }
    public Nullable`1<WaitForStatus> WaitForStatus { get; public set; }
    public ClusterHealthRequest(Indices index);
    protected IClusterHealthRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IClusterHealthRequest.get_Index();
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<Level> get_Level();
    public void set_Level(Nullable`1<Level> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
    public Nullable`1<WaitForEvents> get_WaitForEvents();
    public void set_WaitForEvents(Nullable`1<WaitForEvents> value);
    public Nullable`1<bool> get_WaitForNoInitializingShards();
    public void set_WaitForNoInitializingShards(Nullable`1<bool> value);
    public Nullable`1<bool> get_WaitForNoRelocatingShards();
    public void set_WaitForNoRelocatingShards(Nullable`1<bool> value);
    public string get_WaitForNodes();
    public void set_WaitForNodes(string value);
    public Nullable`1<WaitForStatus> get_WaitForStatus();
    public void set_WaitForStatus(Nullable`1<WaitForStatus> value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterHealthResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private int <ActivePrimaryShards>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ActiveShards>k__BackingField;
    [CompilerGeneratedAttribute]
private double <ActiveShardsPercentAsNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DelayedUnassignedShards>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<IndexName, IndexHealthStats> <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private int <InitializingShards>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumberOfDataNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumberOfInFlightFetch>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumberOfNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumberOfPendingTasks>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RelocatingShards>k__BackingField;
    [CompilerGeneratedAttribute]
private Health <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TaskMaxWaitTimeInQueueInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TimedOut>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UnassignedShards>k__BackingField;
    [DataMemberAttribute]
public int ActivePrimaryShards { get; internal set; }
    [DataMemberAttribute]
public int ActiveShards { get; internal set; }
    [DataMemberAttribute]
public double ActiveShardsPercentAsNumber { get; internal set; }
    [DataMemberAttribute]
public string ClusterName { get; internal set; }
    [DataMemberAttribute]
public int DelayedUnassignedShards { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.ResolvableReadOnlyDictionaryFormatter`2<OpenSearch.Client.IndexName,OpenSearch.Client.IndexHealthStats>")]
public IReadOnlyDictionary`2<IndexName, IndexHealthStats> Indices { get; internal set; }
    [DataMemberAttribute]
public int InitializingShards { get; internal set; }
    [DataMemberAttribute]
public int NumberOfDataNodes { get; internal set; }
    [DataMemberAttribute]
public int NumberOfInFlightFetch { get; internal set; }
    [DataMemberAttribute]
public int NumberOfNodes { get; internal set; }
    [DataMemberAttribute]
public int NumberOfPendingTasks { get; internal set; }
    [DataMemberAttribute]
public int RelocatingShards { get; internal set; }
    [DataMemberAttribute]
public Health Status { get; internal set; }
    [DataMemberAttribute]
public long TaskMaxWaitTimeInQueueInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public bool TimedOut { get; internal set; }
    [DataMemberAttribute]
public int UnassignedShards { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_ActivePrimaryShards();
    [CompilerGeneratedAttribute]
internal void set_ActivePrimaryShards(int value);
    [CompilerGeneratedAttribute]
public int get_ActiveShards();
    [CompilerGeneratedAttribute]
internal void set_ActiveShards(int value);
    [CompilerGeneratedAttribute]
public double get_ActiveShardsPercentAsNumber();
    [CompilerGeneratedAttribute]
internal void set_ActiveShardsPercentAsNumber(double value);
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
internal void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public int get_DelayedUnassignedShards();
    [CompilerGeneratedAttribute]
internal void set_DelayedUnassignedShards(int value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<IndexName, IndexHealthStats> get_Indices();
    [CompilerGeneratedAttribute]
internal void set_Indices(IReadOnlyDictionary`2<IndexName, IndexHealthStats> value);
    [CompilerGeneratedAttribute]
public int get_InitializingShards();
    [CompilerGeneratedAttribute]
internal void set_InitializingShards(int value);
    [CompilerGeneratedAttribute]
public int get_NumberOfDataNodes();
    [CompilerGeneratedAttribute]
internal void set_NumberOfDataNodes(int value);
    [CompilerGeneratedAttribute]
public int get_NumberOfInFlightFetch();
    [CompilerGeneratedAttribute]
internal void set_NumberOfInFlightFetch(int value);
    [CompilerGeneratedAttribute]
public int get_NumberOfNodes();
    [CompilerGeneratedAttribute]
internal void set_NumberOfNodes(int value);
    [CompilerGeneratedAttribute]
public int get_NumberOfPendingTasks();
    [CompilerGeneratedAttribute]
internal void set_NumberOfPendingTasks(int value);
    [CompilerGeneratedAttribute]
public int get_RelocatingShards();
    [CompilerGeneratedAttribute]
internal void set_RelocatingShards(int value);
    [CompilerGeneratedAttribute]
public Health get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(Health value);
    [CompilerGeneratedAttribute]
public long get_TaskMaxWaitTimeInQueueInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_TaskMaxWaitTimeInQueueInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public bool get_TimedOut();
    [CompilerGeneratedAttribute]
internal void set_TimedOut(bool value);
    [CompilerGeneratedAttribute]
public int get_UnassignedShards();
    [CompilerGeneratedAttribute]
internal void set_UnassignedShards(int value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterIndicesShardsIndexStats : object {
    [CompilerGeneratedAttribute]
private ClusterShardMetrics <Primaries>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterShardMetrics <Replication>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterShardMetrics <Shards>k__BackingField;
    [DataMemberAttribute]
public ClusterShardMetrics Primaries { get; internal set; }
    [DataMemberAttribute]
public ClusterShardMetrics Replication { get; internal set; }
    [DataMemberAttribute]
public ClusterShardMetrics Shards { get; internal set; }
    [CompilerGeneratedAttribute]
public ClusterShardMetrics get_Primaries();
    [CompilerGeneratedAttribute]
internal void set_Primaries(ClusterShardMetrics value);
    [CompilerGeneratedAttribute]
public ClusterShardMetrics get_Replication();
    [CompilerGeneratedAttribute]
internal void set_Replication(ClusterShardMetrics value);
    [CompilerGeneratedAttribute]
public ClusterShardMetrics get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ClusterShardMetrics value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterIndicesShardsStats : object {
    [CompilerGeneratedAttribute]
private ClusterIndicesShardsIndexStats <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Primaries>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Replication>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Total>k__BackingField;
    [DataMemberAttribute]
public ClusterIndicesShardsIndexStats Index { get; internal set; }
    [DataMemberAttribute]
public double Primaries { get; internal set; }
    [DataMemberAttribute]
public double Replication { get; internal set; }
    [DataMemberAttribute]
public double Total { get; internal set; }
    [CompilerGeneratedAttribute]
public ClusterIndicesShardsIndexStats get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(ClusterIndicesShardsIndexStats value);
    [CompilerGeneratedAttribute]
public double get_Primaries();
    [CompilerGeneratedAttribute]
internal void set_Primaries(double value);
    [CompilerGeneratedAttribute]
public double get_Replication();
    [CompilerGeneratedAttribute]
internal void set_Replication(double value);
    [CompilerGeneratedAttribute]
public double get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(double value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterIndicesStats : object {
    [CompilerGeneratedAttribute]
private CompletionStats <Completion>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private DocStats <Documents>k__BackingField;
    [CompilerGeneratedAttribute]
private FielddataStats <Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryCacheStats <QueryCache>k__BackingField;
    [CompilerGeneratedAttribute]
private SegmentsStats <Segments>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterIndicesShardsStats <Shards>k__BackingField;
    [CompilerGeneratedAttribute]
private StoreStats <Store>k__BackingField;
    [DataMemberAttribute]
public CompletionStats Completion { get; internal set; }
    [DataMemberAttribute]
public long Count { get; internal set; }
    [DataMemberAttribute]
public DocStats Documents { get; internal set; }
    [DataMemberAttribute]
public FielddataStats Fielddata { get; internal set; }
    [DataMemberAttribute]
public QueryCacheStats QueryCache { get; internal set; }
    [DataMemberAttribute]
public SegmentsStats Segments { get; internal set; }
    [DataMemberAttribute]
public ClusterIndicesShardsStats Shards { get; internal set; }
    [DataMemberAttribute]
public StoreStats Store { get; internal set; }
    [CompilerGeneratedAttribute]
public CompletionStats get_Completion();
    [CompilerGeneratedAttribute]
internal void set_Completion(CompletionStats value);
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
internal void set_Count(long value);
    [CompilerGeneratedAttribute]
public DocStats get_Documents();
    [CompilerGeneratedAttribute]
internal void set_Documents(DocStats value);
    [CompilerGeneratedAttribute]
public FielddataStats get_Fielddata();
    [CompilerGeneratedAttribute]
internal void set_Fielddata(FielddataStats value);
    [CompilerGeneratedAttribute]
public QueryCacheStats get_QueryCache();
    [CompilerGeneratedAttribute]
internal void set_QueryCache(QueryCacheStats value);
    [CompilerGeneratedAttribute]
public SegmentsStats get_Segments();
    [CompilerGeneratedAttribute]
internal void set_Segments(SegmentsStats value);
    [CompilerGeneratedAttribute]
public ClusterIndicesShardsStats get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ClusterIndicesShardsStats value);
    [CompilerGeneratedAttribute]
public StoreStats get_Store();
    [CompilerGeneratedAttribute]
internal void set_Store(StoreStats value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterIngestStats : object {
    [CompilerGeneratedAttribute]
private int <NumberOfPipelines>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, ClusterProcessorStats> <ProcessorStats>k__BackingField;
    [DataMemberAttribute]
public int NumberOfPipelines { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, ClusterProcessorStats> ProcessorStats { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_NumberOfPipelines();
    [CompilerGeneratedAttribute]
internal void set_NumberOfPipelines(int value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, ClusterProcessorStats> get_ProcessorStats();
    [CompilerGeneratedAttribute]
internal void set_ProcessorStats(IReadOnlyDictionary`2<string, ClusterProcessorStats> value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterJvm : object {
    [CompilerGeneratedAttribute]
private long <MaxUptimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterJvmMemory <Memory>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Threads>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ClusterJvmVersion> <Versions>k__BackingField;
    [DataMemberAttribute]
public long MaxUptimeInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public ClusterJvmMemory Memory { get; internal set; }
    [DataMemberAttribute]
public long Threads { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ClusterJvmVersion> Versions { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_MaxUptimeInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_MaxUptimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public ClusterJvmMemory get_Memory();
    [CompilerGeneratedAttribute]
internal void set_Memory(ClusterJvmMemory value);
    [CompilerGeneratedAttribute]
public long get_Threads();
    [CompilerGeneratedAttribute]
internal void set_Threads(long value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ClusterJvmVersion> get_Versions();
    [CompilerGeneratedAttribute]
internal void set_Versions(IReadOnlyCollection`1<ClusterJvmVersion> value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterJvmMemory : object {
    [CompilerGeneratedAttribute]
private long <HeapMaxInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HeapUsedInBytes>k__BackingField;
    [DataMemberAttribute]
public long HeapMaxInBytes { get; internal set; }
    [DataMemberAttribute]
public long HeapUsedInBytes { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_HeapMaxInBytes();
    [CompilerGeneratedAttribute]
internal void set_HeapMaxInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_HeapUsedInBytes();
    [CompilerGeneratedAttribute]
internal void set_HeapUsedInBytes(long value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterJvmVersion : object {
    [CompilerGeneratedAttribute]
private bool <BundledJdk>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UsingBundledJdk>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VmName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VmVendor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VmVersion>k__BackingField;
    [DataMemberAttribute]
public bool BundledJdk { get; internal set; }
    [DataMemberAttribute]
public int Count { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<bool> UsingBundledJdk { get; internal set; }
    [DataMemberAttribute]
public string Version { get; internal set; }
    [DataMemberAttribute]
public string VmName { get; internal set; }
    [DataMemberAttribute]
public string VmVendor { get; internal set; }
    [DataMemberAttribute]
public string VmVersion { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_BundledJdk();
    [CompilerGeneratedAttribute]
internal void set_BundledJdk(bool value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
internal void set_Count(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UsingBundledJdk();
    [CompilerGeneratedAttribute]
internal void set_UsingBundledJdk(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_VmName();
    [CompilerGeneratedAttribute]
internal void set_VmName(string value);
    [CompilerGeneratedAttribute]
public string get_VmVendor();
    [CompilerGeneratedAttribute]
internal void set_VmVendor(string value);
    [CompilerGeneratedAttribute]
public string get_VmVersion();
    [CompilerGeneratedAttribute]
internal void set_VmVersion(string value);
}
public class OpenSearch.Client.ClusterModuleSettings : object {
    [CompilerGeneratedAttribute]
private IAllocationAwarenessSettings <AllocationAwareness>k__BackingField;
    [CompilerGeneratedAttribute]
private IAllocationFilteringSettings <AllocationFiltering>k__BackingField;
    [CompilerGeneratedAttribute]
private IDiskBasedShardAllocationSettings <DiskBasedShardAllocation>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, LogLevel> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private IShardAllocationSettings <ShardAllocation>k__BackingField;
    [CompilerGeneratedAttribute]
private IShardBalancingHeuristicsSettings <ShardBalancingHeuristics>k__BackingField;
    [CompilerGeneratedAttribute]
private IShardRebalancingSettings <ShardRebalancing>k__BackingField;
    public IAllocationAwarenessSettings AllocationAwareness { get; public set; }
    public IAllocationFilteringSettings AllocationFiltering { get; public set; }
    public IDiskBasedShardAllocationSettings DiskBasedShardAllocation { get; public set; }
    public IDictionary`2<string, LogLevel> Logger { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    public IShardAllocationSettings ShardAllocation { get; public set; }
    public IShardBalancingHeuristicsSettings ShardBalancingHeuristics { get; public set; }
    public IShardRebalancingSettings ShardRebalancing { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IAllocationAwarenessSettings get_AllocationAwareness();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllocationAwareness(IAllocationAwarenessSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual IAllocationFilteringSettings get_AllocationFiltering();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllocationFiltering(IAllocationFilteringSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual IDiskBasedShardAllocationSettings get_DiskBasedShardAllocation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DiskBasedShardAllocation(IDiskBasedShardAllocationSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, LogLevel> get_Logger();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Logger(IDictionary`2<string, LogLevel> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ReadOnly();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ReadOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IShardAllocationSettings get_ShardAllocation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardAllocation(IShardAllocationSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual IShardBalancingHeuristicsSettings get_ShardBalancingHeuristics();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardBalancingHeuristics(IShardBalancingHeuristicsSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual IShardRebalancingSettings get_ShardRebalancing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardRebalancing(IShardRebalancingSettings value);
}
public class OpenSearch.Client.ClusterModuleSettingsDescriptor : DescriptorBase`2<ClusterModuleSettingsDescriptor, IClusterModuleSettings> {
    [CompilerGeneratedAttribute]
private IAllocationAwarenessSettings <OpenSearch.Client.IClusterModuleSettings.AllocationAwareness>k__BackingField;
    [CompilerGeneratedAttribute]
private IAllocationFilteringSettings <OpenSearch.Client.IClusterModuleSettings.AllocationFiltering>k__BackingField;
    [CompilerGeneratedAttribute]
private IDiskBasedShardAllocationSettings <OpenSearch.Client.IClusterModuleSettings.DiskBasedShardAllocation>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, LogLevel> <OpenSearch.Client.IClusterModuleSettings.Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IClusterModuleSettings.ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private IShardAllocationSettings <OpenSearch.Client.IClusterModuleSettings.ShardAllocation>k__BackingField;
    [CompilerGeneratedAttribute]
private IShardBalancingHeuristicsSettings <OpenSearch.Client.IClusterModuleSettings.ShardBalancingHeuristics>k__BackingField;
    [CompilerGeneratedAttribute]
private IShardRebalancingSettings <OpenSearch.Client.IClusterModuleSettings.ShardRebalancing>k__BackingField;
    private IAllocationAwarenessSettings OpenSearch.Client.IClusterModuleSettings.AllocationAwareness { get; private set; }
    private IAllocationFilteringSettings OpenSearch.Client.IClusterModuleSettings.AllocationFiltering { get; private set; }
    private IDiskBasedShardAllocationSettings OpenSearch.Client.IClusterModuleSettings.DiskBasedShardAllocation { get; private set; }
    private IDictionary`2<string, LogLevel> OpenSearch.Client.IClusterModuleSettings.Logger { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IClusterModuleSettings.ReadOnly { get; private set; }
    private IShardAllocationSettings OpenSearch.Client.IClusterModuleSettings.ShardAllocation { get; private set; }
    private IShardBalancingHeuristicsSettings OpenSearch.Client.IClusterModuleSettings.ShardBalancingHeuristics { get; private set; }
    private IShardRebalancingSettings OpenSearch.Client.IClusterModuleSettings.ShardRebalancing { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IAllocationAwarenessSettings OpenSearch.Client.IClusterModuleSettings.get_AllocationAwareness();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterModuleSettings.set_AllocationAwareness(IAllocationAwarenessSettings value);
    [CompilerGeneratedAttribute]
private sealed virtual override IAllocationFilteringSettings OpenSearch.Client.IClusterModuleSettings.get_AllocationFiltering();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterModuleSettings.set_AllocationFiltering(IAllocationFilteringSettings value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDiskBasedShardAllocationSettings OpenSearch.Client.IClusterModuleSettings.get_DiskBasedShardAllocation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterModuleSettings.set_DiskBasedShardAllocation(IDiskBasedShardAllocationSettings value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, LogLevel> OpenSearch.Client.IClusterModuleSettings.get_Logger();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterModuleSettings.set_Logger(IDictionary`2<string, LogLevel> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IClusterModuleSettings.get_ReadOnly();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterModuleSettings.set_ReadOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IShardAllocationSettings OpenSearch.Client.IClusterModuleSettings.get_ShardAllocation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterModuleSettings.set_ShardAllocation(IShardAllocationSettings value);
    [CompilerGeneratedAttribute]
private sealed virtual override IShardBalancingHeuristicsSettings OpenSearch.Client.IClusterModuleSettings.get_ShardBalancingHeuristics();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterModuleSettings.set_ShardBalancingHeuristics(IShardBalancingHeuristicsSettings value);
    [CompilerGeneratedAttribute]
private sealed virtual override IShardRebalancingSettings OpenSearch.Client.IClusterModuleSettings.get_ShardRebalancing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterModuleSettings.set_ShardRebalancing(IShardRebalancingSettings value);
    public ClusterModuleSettingsDescriptor ShardRebalancing(Nullable`1<bool> readOnly);
    public ClusterModuleSettingsDescriptor Logger(IDictionary`2<string, LogLevel> logger);
    public ClusterModuleSettingsDescriptor Logger(Func`2<FluentDictionary`2<string, LogLevel>, FluentDictionary`2<string, LogLevel>> selector);
    public ClusterModuleSettingsDescriptor AllocationAwareness(Func`2<AllocationAwarenessSettings, IAllocationAwarenessSettings> selector);
    public ClusterModuleSettingsDescriptor AllocationFiltering(Func`2<AllocationFilteringSettingsDescriptor, IAllocationFilteringSettings> selector);
    public ClusterModuleSettingsDescriptor DiskBasedShardAllocation(Func`2<DiskBasedShardAllocationSettingsDescriptor, IDiskBasedShardAllocationSettings> selector);
    public ClusterModuleSettingsDescriptor ShardAllocation(Func`2<ShardAllocationSettingsDescriptor, IShardAllocationSettings> selector);
    public ClusterModuleSettingsDescriptor ShardBalancingHeuristics(Func`2<ShardBalancingHeuristicsSettingsDescriptor, IShardBalancingHeuristicsSettings> selector);
    public ClusterModuleSettingsDescriptor ShardRebalancing(Func`2<ShardRebalancingSettingsDescriptor, IShardRebalancingSettings> selector);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterNetworkTypes : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, int> <HttpTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, int> <TransportTypes>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, int> HttpTypes { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, int> TransportTypes { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, int> get_HttpTypes();
    [CompilerGeneratedAttribute]
internal void set_HttpTypes(IReadOnlyDictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, int> get_TransportTypes();
    [CompilerGeneratedAttribute]
internal void set_TransportTypes(IReadOnlyDictionary`2<string, int> value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterNodeCount : object {
    [CompilerGeneratedAttribute]
private int <ClusterManager>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CoordinatingOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Ingest>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Master>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private int <VotingOnly>k__BackingField;
    [DataMemberAttribute]
public int ClusterManager { get; internal set; }
    [DataMemberAttribute]
public int CoordinatingOnly { get; internal set; }
    [DataMemberAttribute]
public int Data { get; internal set; }
    [DataMemberAttribute]
public int Ingest { get; internal set; }
    [DataMemberAttribute]
public int Master { get; internal set; }
    [DataMemberAttribute]
public int Total { get; internal set; }
    [DataMemberAttribute]
public int VotingOnly { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_ClusterManager();
    [CompilerGeneratedAttribute]
internal void set_ClusterManager(int value);
    [CompilerGeneratedAttribute]
public int get_CoordinatingOnly();
    [CompilerGeneratedAttribute]
internal void set_CoordinatingOnly(int value);
    [CompilerGeneratedAttribute]
public int get_Data();
    [CompilerGeneratedAttribute]
internal void set_Data(int value);
    [CompilerGeneratedAttribute]
public int get_Ingest();
    [CompilerGeneratedAttribute]
internal void set_Ingest(int value);
    [CompilerGeneratedAttribute]
public int get_Master();
    [CompilerGeneratedAttribute]
internal void set_Master(int value);
    [CompilerGeneratedAttribute]
public int get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(int value);
    [CompilerGeneratedAttribute]
public int get_VotingOnly();
    [CompilerGeneratedAttribute]
internal void set_VotingOnly(int value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterNodesStats : object {
    [CompilerGeneratedAttribute]
private ClusterNodeCount <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, int> <DiscoveryTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterFileSystem <FileSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterJvm <Jvm>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterNetworkTypes <NetworkTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterOperatingSystemStats <OperatingSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<NodePackagingType> <PackagingTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<PluginStats> <Plugins>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterProcess <Process>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <Versions>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterIngestStats <Ingest>k__BackingField;
    [DataMemberAttribute]
public ClusterNodeCount Count { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, int> DiscoveryTypes { get; internal set; }
    [DataMemberAttribute]
public ClusterFileSystem FileSystem { get; internal set; }
    [DataMemberAttribute]
public ClusterJvm Jvm { get; internal set; }
    [DataMemberAttribute]
public ClusterNetworkTypes NetworkTypes { get; internal set; }
    [DataMemberAttribute]
public ClusterOperatingSystemStats OperatingSystem { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<NodePackagingType> PackagingTypes { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<PluginStats> Plugins { get; internal set; }
    [DataMemberAttribute]
public ClusterProcess Process { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> Versions { get; internal set; }
    [DataMemberAttribute]
public ClusterIngestStats Ingest { get; internal set; }
    [CompilerGeneratedAttribute]
public ClusterNodeCount get_Count();
    [CompilerGeneratedAttribute]
internal void set_Count(ClusterNodeCount value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, int> get_DiscoveryTypes();
    [CompilerGeneratedAttribute]
internal void set_DiscoveryTypes(IReadOnlyDictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public ClusterFileSystem get_FileSystem();
    [CompilerGeneratedAttribute]
internal void set_FileSystem(ClusterFileSystem value);
    [CompilerGeneratedAttribute]
public ClusterJvm get_Jvm();
    [CompilerGeneratedAttribute]
internal void set_Jvm(ClusterJvm value);
    [CompilerGeneratedAttribute]
public ClusterNetworkTypes get_NetworkTypes();
    [CompilerGeneratedAttribute]
internal void set_NetworkTypes(ClusterNetworkTypes value);
    [CompilerGeneratedAttribute]
public ClusterOperatingSystemStats get_OperatingSystem();
    [CompilerGeneratedAttribute]
internal void set_OperatingSystem(ClusterOperatingSystemStats value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<NodePackagingType> get_PackagingTypes();
    [CompilerGeneratedAttribute]
internal void set_PackagingTypes(IReadOnlyCollection`1<NodePackagingType> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<PluginStats> get_Plugins();
    [CompilerGeneratedAttribute]
internal void set_Plugins(IReadOnlyCollection`1<PluginStats> value);
    [CompilerGeneratedAttribute]
public ClusterProcess get_Process();
    [CompilerGeneratedAttribute]
internal void set_Process(ClusterProcess value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_Versions();
    [CompilerGeneratedAttribute]
internal void set_Versions(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public ClusterIngestStats get_Ingest();
    [CompilerGeneratedAttribute]
internal void set_Ingest(ClusterIngestStats value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterOperatingSystemName : object {
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public int Count { get; internal set; }
    [DataMemberAttribute]
public string Name { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
internal void set_Count(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterOperatingSystemPrettyNane : object {
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrettyName>k__BackingField;
    [DataMemberAttribute]
public int Count { get; internal set; }
    [DataMemberAttribute]
public string PrettyName { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
internal void set_Count(int value);
    [CompilerGeneratedAttribute]
public string get_PrettyName();
    [CompilerGeneratedAttribute]
internal void set_PrettyName(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterOperatingSystemStats : object {
    [CompilerGeneratedAttribute]
private int <AllocatedProcessors>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AvailableProcessors>k__BackingField;
    [CompilerGeneratedAttribute]
private OperatingSystemMemoryInfo <Memory>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ClusterOperatingSystemName> <Names>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ClusterOperatingSystemPrettyNane> <PrettyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ArchitectureStats> <Architectures>k__BackingField;
    [DataMemberAttribute]
public int AllocatedProcessors { get; internal set; }
    [DataMemberAttribute]
public int AvailableProcessors { get; internal set; }
    [DataMemberAttribute]
public OperatingSystemMemoryInfo Memory { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ClusterOperatingSystemName> Names { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ClusterOperatingSystemPrettyNane> PrettyNames { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ArchitectureStats> Architectures { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_AllocatedProcessors();
    [CompilerGeneratedAttribute]
internal void set_AllocatedProcessors(int value);
    [CompilerGeneratedAttribute]
public int get_AvailableProcessors();
    [CompilerGeneratedAttribute]
internal void set_AvailableProcessors(int value);
    [CompilerGeneratedAttribute]
public OperatingSystemMemoryInfo get_Memory();
    [CompilerGeneratedAttribute]
internal void set_Memory(OperatingSystemMemoryInfo value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ClusterOperatingSystemName> get_Names();
    [CompilerGeneratedAttribute]
internal void set_Names(IReadOnlyCollection`1<ClusterOperatingSystemName> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ClusterOperatingSystemPrettyNane> get_PrettyNames();
    [CompilerGeneratedAttribute]
internal void set_PrettyNames(IReadOnlyCollection`1<ClusterOperatingSystemPrettyNane> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ArchitectureStats> get_Architectures();
    [CompilerGeneratedAttribute]
internal void set_Architectures(IReadOnlyCollection`1<ArchitectureStats> value);
}
public class OpenSearch.Client.ClusterPendingTasksDescriptor : RequestDescriptorBase`3<ClusterPendingTasksDescriptor, ClusterPendingTasksRequestParameters, IClusterPendingTasksRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public ClusterPendingTasksDescriptor Local(Nullable`1<bool> local);
    public ClusterPendingTasksDescriptor MasterTimeout(Time mastertimeout);
    public ClusterPendingTasksDescriptor ClusterManagerTimeout(Time timeout);
}
public class OpenSearch.Client.ClusterPendingTasksRequest : PlainRequestBase`1<ClusterPendingTasksRequestParameters> {
    protected IClusterPendingTasksRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    protected IClusterPendingTasksRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterPendingTasksResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<PendingTask> <Tasks>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<PendingTask> Tasks { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<PendingTask> get_Tasks();
    [CompilerGeneratedAttribute]
internal void set_Tasks(IReadOnlyCollection`1<PendingTask> value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterProcess : object {
    [CompilerGeneratedAttribute]
private ClusterProcessCpu <Cpu>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterProcessOpenFileDescriptors <OpenFileDescriptors>k__BackingField;
    [DataMemberAttribute]
public ClusterProcessCpu Cpu { get; internal set; }
    [DataMemberAttribute]
public ClusterProcessOpenFileDescriptors OpenFileDescriptors { get; internal set; }
    [CompilerGeneratedAttribute]
public ClusterProcessCpu get_Cpu();
    [CompilerGeneratedAttribute]
internal void set_Cpu(ClusterProcessCpu value);
    [CompilerGeneratedAttribute]
public ClusterProcessOpenFileDescriptors get_OpenFileDescriptors();
    [CompilerGeneratedAttribute]
internal void set_OpenFileDescriptors(ClusterProcessOpenFileDescriptors value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterProcessCpu : object {
    [CompilerGeneratedAttribute]
private int <Percent>k__BackingField;
    [DataMemberAttribute]
public int Percent { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_Percent();
    [CompilerGeneratedAttribute]
internal void set_Percent(int value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterProcessOpenFileDescriptors : object {
    [CompilerGeneratedAttribute]
private long <Avg>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Min>k__BackingField;
    [DataMemberAttribute]
public long Avg { get; internal set; }
    [DataMemberAttribute]
public long Max { get; internal set; }
    [DataMemberAttribute]
public long Min { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Avg();
    [CompilerGeneratedAttribute]
internal void set_Avg(long value);
    [CompilerGeneratedAttribute]
public long get_Max();
    [CompilerGeneratedAttribute]
internal void set_Max(long value);
    [CompilerGeneratedAttribute]
public long get_Min();
    [CompilerGeneratedAttribute]
internal void set_Min(long value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterProcessorStats : object {
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TimeInMilliseconds>k__BackingField;
    [DataMemberAttribute]
public long Count { get; public set; }
    [DataMemberAttribute]
public long Current { get; public set; }
    [DataMemberAttribute]
public long Failed { get; public set; }
    [DataMemberAttribute]
public long TimeInMilliseconds { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public long get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(long value);
    [CompilerGeneratedAttribute]
public long get_Failed();
    [CompilerGeneratedAttribute]
public void set_Failed(long value);
    [CompilerGeneratedAttribute]
public long get_TimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_TimeInMilliseconds(long value);
}
public class OpenSearch.Client.ClusterPutSettingsDescriptor : RequestDescriptorBase`3<ClusterPutSettingsDescriptor, ClusterPutSettingsRequestParameters, IClusterPutSettingsRequest> {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IClusterPutSettingsRequest.Persistent>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IClusterPutSettingsRequest.Transient>k__BackingField;
    private IDictionary`2<string, object> OpenSearch.Client.IClusterPutSettingsRequest.Persistent { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IClusterPutSettingsRequest.Transient { get; private set; }
    internal ApiUrls ApiUrls { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IClusterPutSettingsRequest.get_Persistent();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterPutSettingsRequest.set_Persistent(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IClusterPutSettingsRequest.get_Transient();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterPutSettingsRequest.set_Transient(IDictionary`2<string, object> value);
    public ClusterPutSettingsDescriptor Persistent(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
    public ClusterPutSettingsDescriptor Transient(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
    internal virtual ApiUrls get_ApiUrls();
    public ClusterPutSettingsDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public ClusterPutSettingsDescriptor MasterTimeout(Time mastertimeout);
    public ClusterPutSettingsDescriptor ClusterManagerTimeout(Time timeout);
    public ClusterPutSettingsDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.ClusterPutSettingsRequest : PlainRequestBase`1<ClusterPutSettingsRequestParameters> {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Persistent>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Transient>k__BackingField;
    public IDictionary`2<string, object> Persistent { get; public set; }
    public IDictionary`2<string, object> Transient { get; public set; }
    protected IClusterPutSettingsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Persistent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Persistent(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Transient();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Transient(IDictionary`2<string, object> value);
    protected IClusterPutSettingsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterPutSettingsResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private bool <Acknowledged>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Persistent>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Transient>k__BackingField;
    [DataMemberAttribute]
public bool Acknowledged { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, object> Persistent { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, object> Transient { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_Acknowledged();
    [CompilerGeneratedAttribute]
internal void set_Acknowledged(bool value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_Persistent();
    [CompilerGeneratedAttribute]
internal void set_Persistent(IReadOnlyDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_Transient();
    [CompilerGeneratedAttribute]
internal void set_Transient(IReadOnlyDictionary`2<string, object> value);
}
internal class OpenSearch.Client.ClusterRerouteCommandFormatter : object {
    private static AutomataDictionary Commands;
    private static ClusterRerouteCommandFormatter();
    public sealed virtual IClusterRerouteCommand Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IClusterRerouteCommand value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, IClusterRerouteCommand value, IJsonFormatterResolver formatterResolver);
    private static TCommand Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterRerouteDecision : object {
    [CompilerGeneratedAttribute]
private string <Decider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Decision>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Explanation>k__BackingField;
    [DataMemberAttribute]
public string Decider { get; public set; }
    [DataMemberAttribute]
public string Decision { get; public set; }
    [DataMemberAttribute]
public string Explanation { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Decider();
    [CompilerGeneratedAttribute]
public void set_Decider(string value);
    [CompilerGeneratedAttribute]
public string get_Decision();
    [CompilerGeneratedAttribute]
public void set_Decision(string value);
    [CompilerGeneratedAttribute]
public string get_Explanation();
    [CompilerGeneratedAttribute]
public void set_Explanation(string value);
}
public class OpenSearch.Client.ClusterRerouteDescriptor : RequestDescriptorBase`3<ClusterRerouteDescriptor, ClusterRerouteRequestParameters, IClusterRerouteRequest> {
    [CompilerGeneratedAttribute]
private IList`1<IClusterRerouteCommand> <OpenSearch.Client.IClusterRerouteRequest.Commands>k__BackingField;
    private IList`1<IClusterRerouteCommand> OpenSearch.Client.IClusterRerouteRequest.Commands { get; private set; }
    internal ApiUrls ApiUrls { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<IClusterRerouteCommand> OpenSearch.Client.IClusterRerouteRequest.get_Commands();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IClusterRerouteRequest.set_Commands(IList`1<IClusterRerouteCommand> value);
    public ClusterRerouteDescriptor Move(Func`2<MoveClusterRerouteCommandDescriptor, IMoveClusterRerouteCommand> selector);
    public ClusterRerouteDescriptor Cancel(Func`2<CancelClusterRerouteCommandDescriptor, ICancelClusterRerouteCommand> selector);
    public ClusterRerouteDescriptor AllocateReplica(Func`2<AllocateReplicaClusterRerouteCommandDescriptor, IAllocateClusterRerouteCommand> selector);
    public ClusterRerouteDescriptor AllocateEmptyPrimary(Func`2<AllocateEmptyPrimaryRerouteCommandDescriptor, IAllocateEmptyPrimaryRerouteCommand> selector);
    public ClusterRerouteDescriptor AllocateStalePrimary(Func`2<AllocateStalePrimaryRerouteCommandDescriptor, IAllocateStalePrimaryRerouteCommand> selector);
    private ClusterRerouteDescriptor AddCommand(IClusterRerouteCommand rerouteCommand);
    internal virtual ApiUrls get_ApiUrls();
    public ClusterRerouteDescriptor DryRun(Nullable`1<bool> dryrun);
    public ClusterRerouteDescriptor Explain(Nullable`1<bool> explain);
    public ClusterRerouteDescriptor MasterTimeout(Time mastertimeout);
    public ClusterRerouteDescriptor ClusterManagerTimeout(Time timeout);
    public ClusterRerouteDescriptor Metric(String[] metric);
    public ClusterRerouteDescriptor RetryFailed(Nullable`1<bool> retryfailed);
    public ClusterRerouteDescriptor Timeout(Time timeout);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterRerouteExplanation : object {
    [CompilerGeneratedAttribute]
private string <Command>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ClusterRerouteDecision> <Decisions>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterRerouteParameters <Parameters>k__BackingField;
    [DataMemberAttribute]
public string Command { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<ClusterRerouteDecision> Decisions { get; public set; }
    [DataMemberAttribute]
public ClusterRerouteParameters Parameters { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ClusterRerouteDecision> get_Decisions();
    [CompilerGeneratedAttribute]
public void set_Decisions(IEnumerable`1<ClusterRerouteDecision> value);
    [CompilerGeneratedAttribute]
public ClusterRerouteParameters get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(ClusterRerouteParameters value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterRerouteParameters : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowPrimary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FromNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Shard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToNode>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<bool> AllowPrimary { get; public set; }
    [DataMemberAttribute]
public string FromNode { get; public set; }
    [DataMemberAttribute]
public string Index { get; public set; }
    [DataMemberAttribute]
public string Node { get; public set; }
    [DataMemberAttribute]
public int Shard { get; public set; }
    [DataMemberAttribute]
public string ToNode { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowPrimary();
    [CompilerGeneratedAttribute]
public void set_AllowPrimary(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_FromNode();
    [CompilerGeneratedAttribute]
public void set_FromNode(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public int get_Shard();
    [CompilerGeneratedAttribute]
public void set_Shard(int value);
    [CompilerGeneratedAttribute]
public string get_ToNode();
    [CompilerGeneratedAttribute]
public void set_ToNode(string value);
}
public class OpenSearch.Client.ClusterRerouteRequest : PlainRequestBase`1<ClusterRerouteRequestParameters> {
    [CompilerGeneratedAttribute]
private IList`1<IClusterRerouteCommand> <Commands>k__BackingField;
    public IList`1<IClusterRerouteCommand> Commands { get; public set; }
    protected IClusterRerouteRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<bool> DryRun { get; public set; }
    public Nullable`1<bool> Explain { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public String[] Metric { get; public set; }
    public Nullable`1<bool> RetryFailed { get; public set; }
    public Time Timeout { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<IClusterRerouteCommand> get_Commands();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Commands(IList`1<IClusterRerouteCommand> value);
    protected IClusterRerouteRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<bool> get_DryRun();
    public void set_DryRun(Nullable`1<bool> value);
    public Nullable`1<bool> get_Explain();
    public void set_Explain(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public String[] get_Metric();
    public void set_Metric(String[] value);
    public Nullable`1<bool> get_RetryFailed();
    public void set_RetryFailed(Nullable`1<bool> value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterRerouteResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ClusterRerouteExplanation> <Explanations>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicDictionary <State>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<ClusterRerouteExplanation> Explanations { get; internal set; }
    [DataMemberAttribute]
public DynamicDictionary State { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ClusterRerouteExplanation> get_Explanations();
    [CompilerGeneratedAttribute]
internal void set_Explanations(IReadOnlyCollection`1<ClusterRerouteExplanation> value);
    [CompilerGeneratedAttribute]
public DynamicDictionary get_State();
    [CompilerGeneratedAttribute]
internal void set_State(DynamicDictionary value);
}
[DataContractAttribute]
public class OpenSearch.Client.ClusterShardMetrics : object {
    [CompilerGeneratedAttribute]
private double <Avg>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Min>k__BackingField;
    [DataMemberAttribute]
public double Avg { get; internal set; }
    [DataMemberAttribute]
public double Max { get; internal set; }
    [DataMemberAttribute]
public double Min { get; internal set; }
    [CompilerGeneratedAttribute]
public double get_Avg();
    [CompilerGeneratedAttribute]
internal void set_Avg(double value);
    [CompilerGeneratedAttribute]
public double get_Max();
    [CompilerGeneratedAttribute]
internal void set_Max(double value);
    [CompilerGeneratedAttribute]
public double get_Min();
    [CompilerGeneratedAttribute]
internal void set_Min(double value);
}
public class OpenSearch.Client.ClusterStateDescriptor : RequestDescriptorBase`3<ClusterStateDescriptor, ClusterStateRequestParameters, IClusterStateRequest> {
    internal ApiUrls ApiUrls { get; }
    private Metrics OpenSearch.Client.IClusterStateRequest.Metric { get; }
    private Indices OpenSearch.Client.IClusterStateRequest.Index { get; }
    public ClusterStateDescriptor(Metrics metric);
    public ClusterStateDescriptor(Metrics metric, Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Metrics OpenSearch.Client.IClusterStateRequest.get_Metric();
    private sealed virtual override Indices OpenSearch.Client.IClusterStateRequest.get_Index();
    public ClusterStateDescriptor Metric(Metrics metric);
    public ClusterStateDescriptor Index(Indices index);
    public ClusterStateDescriptor Index();
    public ClusterStateDescriptor AllIndices();
    public ClusterStateDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public ClusterStateDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public ClusterStateDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public ClusterStateDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public ClusterStateDescriptor Local(Nullable`1<bool> local);
    public ClusterStateDescriptor MasterTimeout(Time mastertimeout);
    public ClusterStateDescriptor ClusterManagerTimeout(Time timeout);
    public ClusterStateDescriptor WaitForMetadataVersion(Nullable`1<long> waitformetadataversion);
    public ClusterStateDescriptor WaitForTimeout(Time waitfortimeout);
}
public class OpenSearch.Client.ClusterStateRequest : PlainRequestBase`1<ClusterStateRequestParameters> {
    protected IClusterStateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Metrics OpenSearch.Client.IClusterStateRequest.Metric { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IClusterStateRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<long> WaitForMetadataVersion { get; public set; }
    public Time WaitForTimeout { get; public set; }
    public ClusterStateRequest(Metrics metric);
    public ClusterStateRequest(Metrics metric, Indices index);
    protected IClusterStateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Metrics OpenSearch.Client.IClusterStateRequest.get_Metric();
    private sealed virtual override Indices OpenSearch.Client.IClusterStateRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<long> get_WaitForMetadataVersion();
    public void set_WaitForMetadataVersion(Nullable`1<long> value);
    public Time get_WaitForTimeout();
    public void set_WaitForTimeout(Time value);
}
[JsonFormatterAttribute("OpenSearch.Client.DynamicResponseFormatter`1<OpenSearch.Client.ClusterStateResponse>")]
public class OpenSearch.Client.ClusterStateResponse : DynamicResponseBase {
    public DynamicDictionary State { get; }
    [DataMemberAttribute]
public string ClusterName { get; }
    [DataMemberAttribute]
public string ClusterUUID { get; }
    [DataMemberAttribute]
public string MasterNode { get; }
    [DataMemberAttribute]
public string ClusterManagerNode { get; }
    [DataMemberAttribute]
public string StateUUID { get; }
    [DataMemberAttribute]
public Nullable`1<long> Version { get; }
    public DynamicDictionary get_State();
    public string get_ClusterName();
    public string get_ClusterUUID();
    public string get_MasterNode();
    public string get_ClusterManagerNode();
    public string get_StateUUID();
    public Nullable`1<long> get_Version();
}
public class OpenSearch.Client.ClusterStatistics : object {
    [CompilerGeneratedAttribute]
private int <Skipped>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Successful>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Total>k__BackingField;
    [DataMemberAttribute]
public int Skipped { get; internal set; }
    [DataMemberAttribute]
public int Successful { get; internal set; }
    [DataMemberAttribute]
public int Total { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_Skipped();
    [CompilerGeneratedAttribute]
internal void set_Skipped(int value);
    [CompilerGeneratedAttribute]
public int get_Successful();
    [CompilerGeneratedAttribute]
internal void set_Successful(int value);
    [CompilerGeneratedAttribute]
public int get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(int value);
}
public class OpenSearch.Client.ClusterStatsDescriptor : RequestDescriptorBase`3<ClusterStatsDescriptor, ClusterStatsRequestParameters, IClusterStatsRequest> {
    internal ApiUrls ApiUrls { get; }
    private NodeIds OpenSearch.Client.IClusterStatsRequest.NodeId { get; }
    public ClusterStatsDescriptor(NodeIds nodeId);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.IClusterStatsRequest.get_NodeId();
    public ClusterStatsDescriptor NodeId(NodeIds nodeId);
    public ClusterStatsDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public ClusterStatsDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.ClusterStatsRequest : PlainRequestBase`1<ClusterStatsRequestParameters> {
    protected IClusterStatsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private NodeIds OpenSearch.Client.IClusterStatsRequest.NodeId { get; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Time Timeout { get; public set; }
    public ClusterStatsRequest(NodeIds nodeId);
    protected IClusterStatsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.IClusterStatsRequest.get_NodeId();
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.ClusterStatsResponse : NodesResponseBase {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterUUID>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterIndicesStats <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterNodesStats <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [DataMemberAttribute]
public string ClusterName { get; internal set; }
    [DataMemberAttribute]
public string ClusterUUID { get; internal set; }
    [DataMemberAttribute]
public ClusterIndicesStats Indices { get; internal set; }
    [DataMemberAttribute]
public ClusterNodesStats Nodes { get; internal set; }
    [DataMemberAttribute]
public ClusterStatus Status { get; internal set; }
    [DataMemberAttribute]
public long Timestamp { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
internal void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public string get_ClusterUUID();
    [CompilerGeneratedAttribute]
internal void set_ClusterUUID(string value);
    [CompilerGeneratedAttribute]
public ClusterIndicesStats get_Indices();
    [CompilerGeneratedAttribute]
internal void set_Indices(ClusterIndicesStats value);
    [CompilerGeneratedAttribute]
public ClusterNodesStats get_Nodes();
    [CompilerGeneratedAttribute]
internal void set_Nodes(ClusterNodesStats value);
    [CompilerGeneratedAttribute]
public ClusterStatus get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(ClusterStatus value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(long value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.ClusterStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ClusterStatus Green;
    [EnumMemberAttribute]
public static ClusterStatus Yellow;
    [EnumMemberAttribute]
public static ClusterStatus Red;
}
internal class OpenSearch.Client.CollapsedSourceFormatter`1 : SourceFormatter`1<T> {
    [CompilerGeneratedAttribute]
private Nullable`1<SerializationFormatting> <ForceFormatting>k__BackingField;
    public Nullable`1<SerializationFormatting> ForceFormatting { get; }
    [CompilerGeneratedAttribute]
public virtual Nullable`1<SerializationFormatting> get_ForceFormatting();
}
public class OpenSearch.Client.Collector : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<Collector> <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TimeInNanoseconds>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<Collector> Children { get; internal set; }
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public string Reason { get; internal set; }
    [DataMemberAttribute]
public long TimeInNanoseconds { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<Collector> get_Children();
    [CompilerGeneratedAttribute]
internal void set_Children(IReadOnlyCollection`1<Collector> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
internal void set_Reason(string value);
    [CompilerGeneratedAttribute]
public long get_TimeInNanoseconds();
    [CompilerGeneratedAttribute]
internal void set_TimeInNanoseconds(long value);
}
public class OpenSearch.Client.CommonGramsTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <CommonWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommonWordsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreCase>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <QueryMode>k__BackingField;
    public IEnumerable`1<string> CommonWords { get; public set; }
    public string CommonWordsPath { get; public set; }
    public Nullable`1<bool> IgnoreCase { get; public set; }
    public Nullable`1<bool> QueryMode { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_CommonWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CommonWords(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CommonWordsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CommonWordsPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreCase();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreCase(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_QueryMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueryMode(Nullable`1<bool> value);
}
public class OpenSearch.Client.CommonGramsTokenFilterDescriptor : TokenFilterDescriptorBase`2<CommonGramsTokenFilterDescriptor, ICommonGramsTokenFilter> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ICommonGramsTokenFilter.CommonWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICommonGramsTokenFilter.CommonWordsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICommonGramsTokenFilter.IgnoreCase>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICommonGramsTokenFilter.QueryMode>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.ICommonGramsTokenFilter.CommonWords { get; private set; }
    private string OpenSearch.Client.ICommonGramsTokenFilter.CommonWordsPath { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICommonGramsTokenFilter.IgnoreCase { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICommonGramsTokenFilter.QueryMode { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ICommonGramsTokenFilter.get_CommonWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICommonGramsTokenFilter.set_CommonWords(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICommonGramsTokenFilter.get_CommonWordsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICommonGramsTokenFilter.set_CommonWordsPath(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICommonGramsTokenFilter.get_IgnoreCase();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICommonGramsTokenFilter.set_IgnoreCase(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICommonGramsTokenFilter.get_QueryMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICommonGramsTokenFilter.set_QueryMode(Nullable`1<bool> value);
    public CommonGramsTokenFilterDescriptor QueryMode(Nullable`1<bool> queryMode);
    public CommonGramsTokenFilterDescriptor IgnoreCase(Nullable`1<bool> ignoreCase);
    public CommonGramsTokenFilterDescriptor CommonWordsPath(string path);
    public CommonGramsTokenFilterDescriptor CommonWords(IEnumerable`1<string> commonWords);
    public CommonGramsTokenFilterDescriptor CommonWords(String[] commonWords);
}
[DataContractAttribute]
public class OpenSearch.Client.CompactNodeInfo : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public string Name { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
}
public class OpenSearch.Client.CompletionAttribute : OpenSearchDocValuesPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICompletionProperty.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISuggestContext> <OpenSearch.Client.ICompletionProperty.Contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ICompletionProperty.MaxInputLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICompletionProperty.PreservePositionIncrements>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICompletionProperty.PreserveSeparators>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICompletionProperty.SearchAnalyzer>k__BackingField;
    public string Analyzer { get; public set; }
    public int MaxInputLength { get; public set; }
    public bool PreservePositionIncrements { get; public set; }
    public bool PreserveSeparators { get; public set; }
    public string SearchAnalyzer { get; public set; }
    private string OpenSearch.Client.ICompletionProperty.Analyzer { get; private set; }
    private IList`1<ISuggestContext> OpenSearch.Client.ICompletionProperty.Contexts { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ICompletionProperty.MaxInputLength { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICompletionProperty.PreservePositionIncrements { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICompletionProperty.PreserveSeparators { get; private set; }
    private string OpenSearch.Client.ICompletionProperty.SearchAnalyzer { get; private set; }
    private ICompletionProperty Self { get; }
    public string get_Analyzer();
    public void set_Analyzer(string value);
    public int get_MaxInputLength();
    public void set_MaxInputLength(int value);
    public bool get_PreservePositionIncrements();
    public void set_PreservePositionIncrements(bool value);
    public bool get_PreserveSeparators();
    public void set_PreserveSeparators(bool value);
    public string get_SearchAnalyzer();
    public void set_SearchAnalyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICompletionProperty.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<ISuggestContext> OpenSearch.Client.ICompletionProperty.get_Contexts();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_Contexts(IList`1<ISuggestContext> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ICompletionProperty.get_MaxInputLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_MaxInputLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICompletionProperty.get_PreservePositionIncrements();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_PreservePositionIncrements(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICompletionProperty.get_PreserveSeparators();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_PreserveSeparators(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICompletionProperty.get_SearchAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_SearchAnalyzer(string value);
    private ICompletionProperty get_Self();
}
public class OpenSearch.Client.CompletionField : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IEnumerable`1<string>> <Contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Input>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Weight>k__BackingField;
    [DataMemberAttribute]
public IDictionary`2<string, IEnumerable`1<string>> Contexts { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Input { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Weight { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, IEnumerable`1<string>> get_Contexts();
    [CompilerGeneratedAttribute]
public void set_Contexts(IDictionary`2<string, IEnumerable`1<string>> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Input();
    [CompilerGeneratedAttribute]
public void set_Input(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Weight();
    [CompilerGeneratedAttribute]
public void set_Weight(Nullable`1<int> value);
}
[DataContractAttribute]
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.CompletionProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISuggestContext> <Contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxInputLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreservePositionIncrements>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreserveSeparators>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchAnalyzer>k__BackingField;
    public string Analyzer { get; public set; }
    public IList`1<ISuggestContext> Contexts { get; public set; }
    public Nullable`1<int> MaxInputLength { get; public set; }
    public Nullable`1<bool> PreservePositionIncrements { get; public set; }
    public Nullable`1<bool> PreserveSeparators { get; public set; }
    public string SearchAnalyzer { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<ISuggestContext> get_Contexts();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Contexts(IList`1<ISuggestContext> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxInputLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxInputLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PreservePositionIncrements();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreservePositionIncrements(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PreserveSeparators();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreserveSeparators(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SearchAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchAnalyzer(string value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.CompletionPropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<CompletionPropertyDescriptor`1<T>, ICompletionProperty, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICompletionProperty.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISuggestContext> <OpenSearch.Client.ICompletionProperty.Contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ICompletionProperty.MaxInputLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICompletionProperty.PreservePositionIncrements>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICompletionProperty.PreserveSeparators>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICompletionProperty.SearchAnalyzer>k__BackingField;
    private string OpenSearch.Client.ICompletionProperty.Analyzer { get; private set; }
    private IList`1<ISuggestContext> OpenSearch.Client.ICompletionProperty.Contexts { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ICompletionProperty.MaxInputLength { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICompletionProperty.PreservePositionIncrements { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICompletionProperty.PreserveSeparators { get; private set; }
    private string OpenSearch.Client.ICompletionProperty.SearchAnalyzer { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICompletionProperty.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<ISuggestContext> OpenSearch.Client.ICompletionProperty.get_Contexts();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_Contexts(IList`1<ISuggestContext> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ICompletionProperty.get_MaxInputLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_MaxInputLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICompletionProperty.get_PreservePositionIncrements();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_PreservePositionIncrements(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICompletionProperty.get_PreserveSeparators();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_PreserveSeparators(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICompletionProperty.get_SearchAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionProperty.set_SearchAnalyzer(string value);
    public CompletionPropertyDescriptor`1<T> SearchAnalyzer(string searchAnalyzer);
    public CompletionPropertyDescriptor`1<T> Analyzer(string analyzer);
    public CompletionPropertyDescriptor`1<T> PreserveSeparators(Nullable`1<bool> preserveSeparators);
    public CompletionPropertyDescriptor`1<T> PreservePositionIncrements(Nullable`1<bool> preservePositionIncrements);
    public CompletionPropertyDescriptor`1<T> MaxInputLength(Nullable`1<int> maxInputLength);
    public CompletionPropertyDescriptor`1<T> Contexts(Func`2<SuggestContextsDescriptor`1<T>, IPromise`1<IList`1<ISuggestContext>>> contexts);
}
[DataContractAttribute]
public class OpenSearch.Client.CompletionStats : object {
    [CompilerGeneratedAttribute]
private long <SizeInBytes>k__BackingField;
    [DataMemberAttribute]
public long SizeInBytes { get; public set; }
    [CompilerGeneratedAttribute]
public long get_SizeInBytes();
    [CompilerGeneratedAttribute]
public void set_SizeInBytes(long value);
}
public class OpenSearch.Client.CompletionSuggester : SuggesterBase {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IList`1<ISuggestContextQuery>> <Contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private ISuggestFuzziness <Fuzzy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Regex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipDuplicates>k__BackingField;
    public IDictionary`2<string, IList`1<ISuggestContextQuery>> Contexts { get; public set; }
    public ISuggestFuzziness Fuzzy { get; public set; }
    public string Prefix { get; public set; }
    public string Regex { get; public set; }
    public Nullable`1<bool> SkipDuplicates { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, IList`1<ISuggestContextQuery>> get_Contexts();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Contexts(IDictionary`2<string, IList`1<ISuggestContextQuery>> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISuggestFuzziness get_Fuzzy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fuzzy(ISuggestFuzziness value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Prefix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Regex();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Regex(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SkipDuplicates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipDuplicates(Nullable`1<bool> value);
}
public class OpenSearch.Client.CompletionSuggesterDescriptor`1 : SuggestDescriptorBase`3<CompletionSuggesterDescriptor`1<T>, ICompletionSuggester, T> {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IList`1<ISuggestContextQuery>> <OpenSearch.Client.ICompletionSuggester.Contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private ISuggestFuzziness <OpenSearch.Client.ICompletionSuggester.Fuzzy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICompletionSuggester.Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICompletionSuggester.Regex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICompletionSuggester.SkipDuplicates>k__BackingField;
    private IDictionary`2<string, IList`1<ISuggestContextQuery>> OpenSearch.Client.ICompletionSuggester.Contexts { get; private set; }
    private ISuggestFuzziness OpenSearch.Client.ICompletionSuggester.Fuzzy { get; private set; }
    private string OpenSearch.Client.ICompletionSuggester.Prefix { get; private set; }
    private string OpenSearch.Client.ICompletionSuggester.Regex { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICompletionSuggester.SkipDuplicates { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, IList`1<ISuggestContextQuery>> OpenSearch.Client.ICompletionSuggester.get_Contexts();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionSuggester.set_Contexts(IDictionary`2<string, IList`1<ISuggestContextQuery>> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISuggestFuzziness OpenSearch.Client.ICompletionSuggester.get_Fuzzy();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionSuggester.set_Fuzzy(ISuggestFuzziness value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICompletionSuggester.get_Prefix();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionSuggester.set_Prefix(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICompletionSuggester.get_Regex();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionSuggester.set_Regex(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICompletionSuggester.get_SkipDuplicates();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompletionSuggester.set_SkipDuplicates(Nullable`1<bool> value);
    public CompletionSuggesterDescriptor`1<T> Prefix(string prefix);
    public CompletionSuggesterDescriptor`1<T> Regex(string regex);
    public CompletionSuggesterDescriptor`1<T> Fuzzy(Func`2<SuggestFuzzinessDescriptor`1<T>, ISuggestFuzziness> selector);
    public CompletionSuggesterDescriptor`1<T> Contexts(Func`2<SuggestContextQueriesDescriptor`1<T>, IPromise`1<IDictionary`2<string, IList`1<ISuggestContextQuery>>>> contexts);
    public CompletionSuggesterDescriptor`1<T> SkipDuplicates(Nullable`1<bool> skipDuplicates);
}
public class OpenSearch.Client.ComponentTemplate : object {
    [CompilerGeneratedAttribute]
private ITemplate <Template>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Meta>k__BackingField;
    public ITemplate Template { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public IDictionary`2<string, object> Meta { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ITemplate get_Template();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Template(ITemplate value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Meta(IDictionary`2<string, object> value);
}
public class OpenSearch.Client.ComponentTemplateExistsDescriptor : RequestDescriptorBase`3<ComponentTemplateExistsDescriptor, ComponentTemplateExistsRequestParameters, IComponentTemplateExistsRequest> {
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IComponentTemplateExistsRequest.Name { get; }
    public ComponentTemplateExistsDescriptor(Name name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IComponentTemplateExistsRequest.get_Name();
    public ComponentTemplateExistsDescriptor ClusterManagerTimeout(Time clustermanagertimeout);
    public ComponentTemplateExistsDescriptor Local(Nullable`1<bool> local);
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public ComponentTemplateExistsDescriptor MasterTimeout(Time mastertimeout);
}
public class OpenSearch.Client.ComponentTemplateExistsRequest : PlainRequestBase`1<ComponentTemplateExistsRequestParameters> {
    protected IComponentTemplateExistsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IComponentTemplateExistsRequest.Name { get; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public Time MasterTimeout { get; public set; }
    public ComponentTemplateExistsRequest(Name name);
    protected IComponentTemplateExistsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IComponentTemplateExistsRequest.get_Name();
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
}
public class OpenSearch.Client.ComposableIndexTemplate : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <ComposedOf>k__BackingField;
    [CompilerGeneratedAttribute]
private IDataStreamTemplate <DataStream>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <IndexPatterns>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private ITemplate <Template>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Meta>k__BackingField;
    public IReadOnlyCollection`1<string> ComposedOf { get; public set; }
    public IDataStreamTemplate DataStream { get; public set; }
    public IReadOnlyCollection`1<string> IndexPatterns { get; public set; }
    public Nullable`1<long> Priority { get; public set; }
    public ITemplate Template { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public IDictionary`2<string, object> Meta { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<string> get_ComposedOf();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ComposedOf(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDataStreamTemplate get_DataStream();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DataStream(IDataStreamTemplate value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<string> get_IndexPatterns();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexPatterns(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual ITemplate get_Template();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Template(ITemplate value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Meta(IDictionary`2<string, object> value);
}
public class OpenSearch.Client.ComposableIndexTemplateExistsDescriptor : RequestDescriptorBase`3<ComposableIndexTemplateExistsDescriptor, ComposableIndexTemplateExistsRequestParameters, IComposableIndexTemplateExistsRequest> {
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IComposableIndexTemplateExistsRequest.Name { get; }
    public ComposableIndexTemplateExistsDescriptor(Name name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IComposableIndexTemplateExistsRequest.get_Name();
    public ComposableIndexTemplateExistsDescriptor ClusterManagerTimeout(Time clustermanagertimeout);
    public ComposableIndexTemplateExistsDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public ComposableIndexTemplateExistsDescriptor Local(Nullable`1<bool> local);
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public ComposableIndexTemplateExistsDescriptor MasterTimeout(Time mastertimeout);
}
public class OpenSearch.Client.ComposableIndexTemplateExistsRequest : PlainRequestBase`1<ComposableIndexTemplateExistsRequestParameters> {
    protected IComposableIndexTemplateExistsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IComposableIndexTemplateExistsRequest.Name { get; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public Time MasterTimeout { get; public set; }
    public ComposableIndexTemplateExistsRequest(Name name);
    protected IComposableIndexTemplateExistsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IComposableIndexTemplateExistsRequest.get_Name();
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
}
public class OpenSearch.Client.CompositeAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private CompositeKey <After>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ICompositeAggregationSource> <Sources>k__BackingField;
    public CompositeKey After { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public IEnumerable`1<ICompositeAggregationSource> Sources { get; public set; }
    public CompositeAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual CompositeKey get_After();
    [CompilerGeneratedAttribute]
public sealed virtual void set_After(CompositeKey value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ICompositeAggregationSource> get_Sources();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sources(IEnumerable`1<ICompositeAggregationSource> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.CompositeAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<CompositeAggregationDescriptor`1<T>, ICompositeAggregation, T> {
    [CompilerGeneratedAttribute]
private CompositeKey <OpenSearch.Client.ICompositeAggregation.After>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ICompositeAggregation.Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ICompositeAggregationSource> <OpenSearch.Client.ICompositeAggregation.Sources>k__BackingField;
    private CompositeKey OpenSearch.Client.ICompositeAggregation.After { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ICompositeAggregation.Size { get; private set; }
    private IEnumerable`1<ICompositeAggregationSource> OpenSearch.Client.ICompositeAggregation.Sources { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override CompositeKey OpenSearch.Client.ICompositeAggregation.get_After();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompositeAggregation.set_After(CompositeKey value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ICompositeAggregation.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompositeAggregation.set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<ICompositeAggregationSource> OpenSearch.Client.ICompositeAggregation.get_Sources();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompositeAggregation.set_Sources(IEnumerable`1<ICompositeAggregationSource> value);
    public CompositeAggregationDescriptor`1<T> Sources(Func`2<CompositeAggregationSourcesDescriptor`1<T>, IPromise`1<IList`1<ICompositeAggregationSource>>> selector);
    public CompositeAggregationDescriptor`1<T> Size(Nullable`1<int> size);
    public CompositeAggregationDescriptor`1<T> After(CompositeKey after);
}
public abstract class OpenSearch.Client.CompositeAggregationSourceBase : object {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <MissingBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SortOrder> <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICompositeAggregationSource.Name>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<bool> MissingBucket { get; public set; }
    public Nullable`1<SortOrder> Order { get; public set; }
    protected string SourceType { get; }
    private string OpenSearch.Client.ICompositeAggregationSource.Name { get; private set; }
    private string OpenSearch.Client.ICompositeAggregationSource.SourceType { get; }
    protected CompositeAggregationSourceBase(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_MissingBucket();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MissingBucket(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SortOrder> get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(Nullable`1<SortOrder> value);
    protected abstract virtual string get_SourceType();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICompositeAggregationSource.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompositeAggregationSource.set_Name(string value);
    private sealed virtual override string OpenSearch.Client.ICompositeAggregationSource.get_SourceType();
}
public abstract class OpenSearch.Client.CompositeAggregationSourceDescriptorBase`3 : DescriptorBase`2<TDescriptor, TInterface> {
    private string _sourceType;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ICompositeAggregationSource.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICompositeAggregationSource.MissingBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICompositeAggregationSource.Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SortOrder> <OpenSearch.Client.ICompositeAggregationSource.Order>k__BackingField;
    private Field OpenSearch.Client.ICompositeAggregationSource.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICompositeAggregationSource.MissingBucket { get; private set; }
    private string OpenSearch.Client.ICompositeAggregationSource.Name { get; private set; }
    private Nullable`1<SortOrder> OpenSearch.Client.ICompositeAggregationSource.Order { get; private set; }
    private string OpenSearch.Client.ICompositeAggregationSource.SourceType { get; }
    protected CompositeAggregationSourceDescriptorBase`3(string name, string sourceType);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ICompositeAggregationSource.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompositeAggregationSource.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICompositeAggregationSource.get_MissingBucket();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompositeAggregationSource.set_MissingBucket(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICompositeAggregationSource.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompositeAggregationSource.set_Name(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SortOrder> OpenSearch.Client.ICompositeAggregationSource.get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompositeAggregationSource.set_Order(Nullable`1<SortOrder> value);
    private sealed virtual override string OpenSearch.Client.ICompositeAggregationSource.get_SourceType();
    public TDescriptor Field(Field field);
    public TDescriptor Field(Expression`1<Func`2<T, TValue>> objectPath);
    public TDescriptor Order(Nullable`1<SortOrder> order);
    public TDescriptor MissingBucket(Nullable`1<bool> includeMissing);
}
internal class OpenSearch.Client.CompositeAggregationSourceFormatter : object {
    private static AutomataDictionary AggregationSource;
    private static CompositeAggregationSourceFormatter();
    public sealed virtual void Serialize(JsonWriter& writer, ICompositeAggregationSource value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, TCompositeAggregationSource value, IJsonFormatterResolver formatterResolver);
    public sealed virtual ICompositeAggregationSource Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.CompositeAggregationSourcesDescriptor`1 : DescriptorPromiseBase`2<CompositeAggregationSourcesDescriptor`1<T>, IList`1<ICompositeAggregationSource>> {
    public CompositeAggregationSourcesDescriptor`1<T> Terms(string name, Func`2<TermsCompositeAggregationSourceDescriptor`1<T>, ITermsCompositeAggregationSource> selector);
    public CompositeAggregationSourcesDescriptor`1<T> Histogram(string name, Func`2<HistogramCompositeAggregationSourceDescriptor`1<T>, IHistogramCompositeAggregationSource> selector);
    public CompositeAggregationSourcesDescriptor`1<T> DateHistogram(string name, Func`2<DateHistogramCompositeAggregationSourceDescriptor`1<T>, IDateHistogramCompositeAggregationSource> selector);
    public CompositeAggregationSourcesDescriptor`1<T> GeoTileGrid(string name, Func`2<GeoTileGridCompositeAggregationSourceDescriptor`1<T>, IGeoTileGridCompositeAggregationSource> selector);
}
public class OpenSearch.Client.CompositeBucket : BucketBase {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <DocCount>k__BackingField;
    [CompilerGeneratedAttribute]
private CompositeKey <Key>k__BackingField;
    public Nullable`1<long> DocCount { get; public set; }
    public CompositeKey Key { get; }
    public CompositeBucket(IReadOnlyDictionary`2<string, IAggregate> dict, CompositeKey key);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public CompositeKey get_Key();
}
public class OpenSearch.Client.CompositeBucketAggregate : MultiBucketAggregate`1<CompositeBucket> {
    [CompilerGeneratedAttribute]
private CompositeKey <AfterKey>k__BackingField;
    public CompositeKey AfterKey { get; public set; }
    [CompilerGeneratedAttribute]
public CompositeKey get_AfterKey();
    [CompilerGeneratedAttribute]
public void set_AfterKey(CompositeKey value);
}
internal class OpenSearch.Client.CompositeFormatter`3 : object {
    [CompilerGeneratedAttribute]
private TRead <Read>k__BackingField;
    [CompilerGeneratedAttribute]
private TWrite <Write>k__BackingField;
    private TRead Read { get; private set; }
    private TWrite Write { get; private set; }
    [CompilerGeneratedAttribute]
private TRead get_Read();
    [CompilerGeneratedAttribute]
private void set_Read(TRead value);
    [CompilerGeneratedAttribute]
private TWrite get_Write();
    [CompilerGeneratedAttribute]
private void set_Write(TWrite value);
    public sealed virtual T Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, T value, IJsonFormatterResolver formatterResolver);
}
[JsonFormatterAttribute("OpenSearch.Client.CompositeKeyFormatter")]
public class OpenSearch.Client.CompositeKey : IsAReadOnlyDictionaryBase`2<string, object> {
    public CompositeKey(IReadOnlyDictionary`2<string, object> backingDictionary);
    public bool TryGetValue(string key, String& value);
    public bool TryGetValue(string key, Double& value);
    public bool TryGetValue(string key, Int32& value);
    public bool TryGetValue(string key, Int64& value);
    public bool TryGetValue(string key, DateTime& value);
    public bool TryGetValue(string key, DateTimeOffset& value);
    private bool TryGetValue(string key, TValue& value);
}
internal class OpenSearch.Client.CompositeKeyFormatter : object {
    private static VerbatimInterfaceReadOnlyDictionaryKeysPreservingNullFormatter`2<string, object> DictionaryFormatter;
    private static CompositeKeyFormatter();
    public sealed virtual void Serialize(JsonWriter& writer, CompositeKey value, IJsonFormatterResolver formatterResolver);
    public sealed virtual CompositeKey Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public abstract class OpenSearch.Client.CompoundWordTokenFilterBase : TokenFilterBase {
    [CompilerGeneratedAttribute]
private string <HyphenationPatternsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxSubwordSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinSubwordSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinWordSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OnlyLongestMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <WordList>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WordListPath>k__BackingField;
    public string HyphenationPatternsPath { get; public set; }
    public Nullable`1<int> MaxSubwordSize { get; public set; }
    public Nullable`1<int> MinSubwordSize { get; public set; }
    public Nullable`1<int> MinWordSize { get; public set; }
    public Nullable`1<bool> OnlyLongestMatch { get; public set; }
    public IEnumerable`1<string> WordList { get; public set; }
    public string WordListPath { get; public set; }
    protected CompoundWordTokenFilterBase(string type);
    [CompilerGeneratedAttribute]
public sealed virtual string get_HyphenationPatternsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HyphenationPatternsPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxSubwordSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxSubwordSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinSubwordSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinSubwordSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinWordSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinWordSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_OnlyLongestMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OnlyLongestMatch(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_WordList();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WordList(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WordListPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WordListPath(string value);
}
public abstract class OpenSearch.Client.CompoundWordTokenFilterDescriptorBase`2 : TokenFilterDescriptorBase`2<TCompound, TCompoundInterface> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICompoundWordTokenFilter.HyphenationPatternsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ICompoundWordTokenFilter.MaxSubwordSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ICompoundWordTokenFilter.MinSubwordSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ICompoundWordTokenFilter.MinWordSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICompoundWordTokenFilter.OnlyLongestMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ICompoundWordTokenFilter.WordList>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICompoundWordTokenFilter.WordListPath>k__BackingField;
    private string OpenSearch.Client.ICompoundWordTokenFilter.HyphenationPatternsPath { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ICompoundWordTokenFilter.MaxSubwordSize { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ICompoundWordTokenFilter.MinSubwordSize { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ICompoundWordTokenFilter.MinWordSize { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICompoundWordTokenFilter.OnlyLongestMatch { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.ICompoundWordTokenFilter.WordList { get; private set; }
    private string OpenSearch.Client.ICompoundWordTokenFilter.WordListPath { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICompoundWordTokenFilter.get_HyphenationPatternsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompoundWordTokenFilter.set_HyphenationPatternsPath(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ICompoundWordTokenFilter.get_MaxSubwordSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompoundWordTokenFilter.set_MaxSubwordSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ICompoundWordTokenFilter.get_MinSubwordSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompoundWordTokenFilter.set_MinSubwordSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ICompoundWordTokenFilter.get_MinWordSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompoundWordTokenFilter.set_MinWordSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICompoundWordTokenFilter.get_OnlyLongestMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompoundWordTokenFilter.set_OnlyLongestMatch(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ICompoundWordTokenFilter.get_WordList();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompoundWordTokenFilter.set_WordList(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICompoundWordTokenFilter.get_WordListPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICompoundWordTokenFilter.set_WordListPath(string value);
    public TCompound WordList(IEnumerable`1<string> wordList);
    public TCompound WordList(String[] wordList);
    public TCompound WordListPath(string path);
    public TCompound HyphenationPatternsPath(string path);
    public TCompound MinWordSize(Nullable`1<int> minWordSize);
    public TCompound MinSubwordSize(Nullable`1<int> minSubwordSize);
    public TCompound MaxSubwordSize(Nullable`1<int> maxSubwordSize);
    public TCompound OnlyLongestMatch(Nullable`1<bool> onlyLongest);
}
internal class OpenSearch.Client.ConcreteBulkIndexResponseItemFormatter`1 : object {
    public sealed virtual void Serialize(JsonWriter& writer, T value, IJsonFormatterResolver formatterResolver);
    public sealed virtual T Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.ConditionlessQueryDescriptor`1 : QueryDescriptorBase`2<ConditionlessQueryDescriptor`1<T>, IConditionlessQuery> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IConditionlessQuery.Fallback>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IConditionlessQuery.Query>k__BackingField;
    protected bool Conditionless { get; }
    private QueryContainer OpenSearch.Client.IConditionlessQuery.Fallback { get; private set; }
    private QueryContainer OpenSearch.Client.IConditionlessQuery.Query { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IConditionlessQuery.get_Fallback();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IConditionlessQuery.set_Fallback(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IConditionlessQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IConditionlessQuery.set_Query(QueryContainer value);
    public ConditionlessQueryDescriptor`1<T> Query(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> querySelector);
    public ConditionlessQueryDescriptor`1<T> Fallback(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> querySelector);
}
public class OpenSearch.Client.ConditionTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Filters>k__BackingField;
    public IScript Script { get; public set; }
    public IEnumerable`1<string> Filters { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Filters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filters(IEnumerable`1<string> value);
}
public class OpenSearch.Client.ConditionTokenFilterDescriptor : TokenFilterDescriptorBase`2<ConditionTokenFilterDescriptor, IConditionTokenFilter> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IConditionTokenFilter.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IConditionTokenFilter.Filters>k__BackingField;
    protected string Type { get; }
    private IScript OpenSearch.Client.IConditionTokenFilter.Script { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IConditionTokenFilter.Filters { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IConditionTokenFilter.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IConditionTokenFilter.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IConditionTokenFilter.get_Filters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IConditionTokenFilter.set_Filters(IEnumerable`1<string> value);
    public ConditionTokenFilterDescriptor Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public ConditionTokenFilterDescriptor Script(string predicate);
    public ConditionTokenFilterDescriptor Filters(String[] filters);
    public ConditionTokenFilterDescriptor Filters(IEnumerable`1<string> filters);
}
public class OpenSearch.Client.ConnectionSettings : ConnectionSettingsBase`1<ConnectionSettings> {
    public static string DefaultUserAgent;
    public ConnectionSettings(Uri uri, IConnection connection);
    public ConnectionSettings(string cloudId, BasicAuthenticationCredentials credentials);
    public ConnectionSettings(string cloudId, ApiKeyAuthenticationCredentials credentials);
    public ConnectionSettings(InMemoryConnection connection);
    public ConnectionSettings(IConnectionPool connectionPool);
    public ConnectionSettings(IConnectionPool connectionPool, SourceSerializerFactory sourceSerializer);
    public ConnectionSettings(IConnectionPool connectionPool, IConnection connection);
    public ConnectionSettings(IConnectionPool connectionPool, IConnection connection, SourceSerializerFactory sourceSerializer);
    public ConnectionSettings(IConnectionPool connectionPool, IConnection connection, SourceSerializerFactory sourceSerializer, IPropertyMappingProvider propertyMappingProvider);
    private static ConnectionSettings();
}
[BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public abstract class OpenSearch.Client.ConnectionSettingsBase`1 : ConnectionConfiguration`1<TConnectionSettings> {
    private FluentDictionary`2<Type, string> _defaultIndices;
    private FluentDictionary`2<Type, string> _defaultRelationNames;
    private HashSet`1<Type> _disableIdInference;
    private FluentDictionary`2<Type, string> _idProperties;
    private Inferrer _inferrer;
    private IPropertyMappingProvider _propertyMappingProvider;
    private FluentDictionary`2<MemberInfo, IPropertyMapping> _propertyMappings;
    private FluentDictionary`2<Type, string> _routeProperties;
    private IOpenSearchSerializer _sourceSerializer;
    private bool _defaultDisableAllInference;
    private Func`2<string, string> _defaultFieldNameInferrer;
    private string _defaultIndex;
    private bool OpenSearch.Client.IConnectionSettingsValues.DefaultDisableIdInference { get; }
    private Func`2<string, string> OpenSearch.Client.IConnectionSettingsValues.DefaultFieldNameInferrer { get; }
    private string OpenSearch.Client.IConnectionSettingsValues.DefaultIndex { get; }
    private FluentDictionary`2<Type, string> OpenSearch.Client.IConnectionSettingsValues.DefaultIndices { get; }
    private HashSet`1<Type> OpenSearch.Client.IConnectionSettingsValues.DisableIdInference { get; }
    private FluentDictionary`2<Type, string> OpenSearch.Client.IConnectionSettingsValues.DefaultRelationNames { get; }
    private FluentDictionary`2<Type, string> OpenSearch.Client.IConnectionSettingsValues.IdProperties { get; }
    private Inferrer OpenSearch.Client.IConnectionSettingsValues.Inferrer { get; }
    private IPropertyMappingProvider OpenSearch.Client.IConnectionSettingsValues.PropertyMappingProvider { get; }
    private FluentDictionary`2<MemberInfo, IPropertyMapping> OpenSearch.Client.IConnectionSettingsValues.PropertyMappings { get; }
    private FluentDictionary`2<Type, string> OpenSearch.Client.IConnectionSettingsValues.RouteProperties { get; }
    private IOpenSearchSerializer OpenSearch.Client.IConnectionSettingsValues.SourceSerializer { get; }
    protected ConnectionSettingsBase`1(IConnectionPool connectionPool, IConnection connection, SourceSerializerFactory sourceSerializerFactory, IPropertyMappingProvider propertyMappingProvider);
    private sealed virtual override bool OpenSearch.Client.IConnectionSettingsValues.get_DefaultDisableIdInference();
    private sealed virtual override Func`2<string, string> OpenSearch.Client.IConnectionSettingsValues.get_DefaultFieldNameInferrer();
    private sealed virtual override string OpenSearch.Client.IConnectionSettingsValues.get_DefaultIndex();
    private sealed virtual override FluentDictionary`2<Type, string> OpenSearch.Client.IConnectionSettingsValues.get_DefaultIndices();
    private sealed virtual override HashSet`1<Type> OpenSearch.Client.IConnectionSettingsValues.get_DisableIdInference();
    private sealed virtual override FluentDictionary`2<Type, string> OpenSearch.Client.IConnectionSettingsValues.get_DefaultRelationNames();
    private sealed virtual override FluentDictionary`2<Type, string> OpenSearch.Client.IConnectionSettingsValues.get_IdProperties();
    private sealed virtual override Inferrer OpenSearch.Client.IConnectionSettingsValues.get_Inferrer();
    private sealed virtual override IPropertyMappingProvider OpenSearch.Client.IConnectionSettingsValues.get_PropertyMappingProvider();
    private sealed virtual override FluentDictionary`2<MemberInfo, IPropertyMapping> OpenSearch.Client.IConnectionSettingsValues.get_PropertyMappings();
    private sealed virtual override FluentDictionary`2<Type, string> OpenSearch.Client.IConnectionSettingsValues.get_RouteProperties();
    private sealed virtual override IOpenSearchSerializer OpenSearch.Client.IConnectionSettingsValues.get_SourceSerializer();
    public TConnectionSettings DefaultIndex(string defaultIndex);
    public TConnectionSettings DefaultFieldNameInferrer(Func`2<string, string> fieldNameInferrer);
    public TConnectionSettings DefaultDisableIdInference(bool disable);
    private void MapIdPropertyFor(Expression`1<Func`2<TDocument, object>> objectPath);
    private void MapRoutePropertyFor(Expression`1<Func`2<TDocument, object>> objectPath);
    private void ApplyPropertyMappings(IList`1<IClrPropertyMapping`1<TDocument>> mappings);
    public TConnectionSettings DefaultMappingFor(Func`2<ClrTypeMappingDescriptor`1<TDocument>, IClrTypeMapping`1<TDocument>> selector);
    public TConnectionSettings DefaultMappingFor(Type documentType, Func`2<ClrTypeMappingDescriptor, IClrTypeMapping> selector);
    public TConnectionSettings DefaultMappingFor(IEnumerable`1<IClrTypeMapping> typeMappings);
    protected virtual bool HttpStatusCodeClassifier(HttpMethod method, int statusCode);
}
[DataContractAttribute]
public class OpenSearch.Client.ConstantScoreQuery : QueryBase {
    [CompilerGeneratedAttribute]
private QueryContainer <Filter>k__BackingField;
    public QueryContainer Filter { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(QueryContainer value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IConstantScoreQuery q);
}
[DataContractAttribute]
public class OpenSearch.Client.ConstantScoreQueryDescriptor`1 : QueryDescriptorBase`2<ConstantScoreQueryDescriptor`1<T>, IConstantScoreQuery> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IConstantScoreQuery.Filter>k__BackingField;
    protected bool Conditionless { get; }
    private QueryContainer OpenSearch.Client.IConstantScoreQuery.Filter { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IConstantScoreQuery.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IConstantScoreQuery.set_Filter(QueryContainer value);
    public ConstantScoreQueryDescriptor`1<T> Filter(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
}
[JsonFormatterAttribute("OpenSearch.Client.ContextFormatter")]
public class OpenSearch.Client.Context : Union`2<string, GeoLocation> {
    public string Category { get; }
    public GeoLocation Geo { get; }
    public Context(string category);
    public Context(GeoLocation geo);
    public string get_Category();
    public GeoLocation get_Geo();
    public static Context op_Implicit(string context);
    public static Context op_Implicit(GeoLocation context);
}
internal class OpenSearch.Client.ContextFormatter : object {
    public sealed virtual Context Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Context value, IJsonFormatterResolver formatterResolver);
}
[DataContractAttribute]
public class OpenSearch.Client.ContextScriptStats : ScriptStats {
    [CompilerGeneratedAttribute]
private string <Context>k__BackingField;
    [DataMemberAttribute]
public string Context { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Context();
    [CompilerGeneratedAttribute]
internal void set_Context(string value);
}
public class OpenSearch.Client.ConvertProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ConvertProcessorType> <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    public Field Field { get; public set; }
    public Field TargetField { get; public set; }
    public Nullable`1<ConvertProcessorType> Type { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ConvertProcessorType> get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(Nullable`1<ConvertProcessorType> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.ConvertProcessorDescriptor`1 : ProcessorDescriptorBase`2<ConvertProcessorDescriptor`1<T>, IConvertProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IConvertProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IConvertProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IConvertProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ConvertProcessorType> <OpenSearch.Client.IConvertProcessor.Type>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IConvertProcessor.Field { get; private set; }
    private Field OpenSearch.Client.IConvertProcessor.TargetField { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IConvertProcessor.IgnoreMissing { get; private set; }
    private Nullable`1<ConvertProcessorType> OpenSearch.Client.IConvertProcessor.Type { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IConvertProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IConvertProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IConvertProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IConvertProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IConvertProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IConvertProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<ConvertProcessorType> OpenSearch.Client.IConvertProcessor.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IConvertProcessor.set_Type(Nullable`1<ConvertProcessorType> value);
    public ConvertProcessorDescriptor`1<T> Field(Field field);
    public ConvertProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public ConvertProcessorDescriptor`1<T> TargetField(Field field);
    public ConvertProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public ConvertProcessorDescriptor`1<T> Type(Nullable`1<ConvertProcessorType> type);
    public ConvertProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
}
[StringEnumAttribute]
public enum OpenSearch.Client.ConvertProcessorType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ConvertProcessorType Integer;
    [EnumMemberAttribute]
public static ConvertProcessorType Long;
    [EnumMemberAttribute]
public static ConvertProcessorType Float;
    [EnumMemberAttribute]
public static ConvertProcessorType Double;
    [EnumMemberAttribute]
public static ConvertProcessorType String;
    [EnumMemberAttribute]
public static ConvertProcessorType Boolean;
    [EnumMemberAttribute]
public static ConvertProcessorType Auto;
}
internal static class OpenSearch.Client.CoordinatedRequestDefaults : object {
    public static int BulkAllBackOffRetriesDefault;
    public static TimeSpan BulkAllBackOffTimeDefault;
    public static int BulkAllMaxDegreeOfParallelismDefault;
    public static int BulkAllSizeDefault;
    public static int ReindexBackPressureFactor;
    public static int ReindexScrollSize;
    private static CoordinatedRequestDefaults();
}
public abstract class OpenSearch.Client.CoordinatedRequestObserverBase`1 : object {
    private Action _completed;
    private Action`1<Exception> _onError;
    private Action`1<T> _onNext;
    protected CoordinatedRequestObserverBase`1(Action`1<T> onNext, Action`1<Exception> onError, Action completed);
    public sealed virtual void OnCompleted();
    public sealed virtual void OnError(Exception error);
    public sealed virtual void OnNext(T value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public abstract class OpenSearch.Client.CorePropertyBase : PropertyBase {
    [CompilerGeneratedAttribute]
private Fields <CopyTo>k__BackingField;
    [CompilerGeneratedAttribute]
private IProperties <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Similarity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Store>k__BackingField;
    public Fields CopyTo { get; public set; }
    public IProperties Fields { get; public set; }
    public string Similarity { get; public set; }
    public Nullable`1<bool> Store { get; public set; }
    protected CorePropertyBase(FieldType type);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_CopyTo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CopyTo(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual IProperties get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(IProperties value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Similarity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Similarity(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Store();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Store(Nullable`1<bool> value);
}
public abstract class OpenSearch.Client.CorePropertyDescriptorBase`3 : PropertyDescriptorBase`3<TDescriptor, TInterface, T> {
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ICoreProperty.CopyTo>k__BackingField;
    [CompilerGeneratedAttribute]
private IProperties <OpenSearch.Client.ICoreProperty.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICoreProperty.Similarity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICoreProperty.Store>k__BackingField;
    private Fields OpenSearch.Client.ICoreProperty.CopyTo { get; private set; }
    private IProperties OpenSearch.Client.ICoreProperty.Fields { get; private set; }
    private string OpenSearch.Client.ICoreProperty.Similarity { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICoreProperty.Store { get; private set; }
    protected CorePropertyDescriptorBase`3(FieldType type);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ICoreProperty.get_CopyTo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICoreProperty.set_CopyTo(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override IProperties OpenSearch.Client.ICoreProperty.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICoreProperty.set_Fields(IProperties value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICoreProperty.get_Similarity();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICoreProperty.set_Similarity(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICoreProperty.get_Store();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICoreProperty.set_Store(Nullable`1<bool> value);
    public TDescriptor Store(Nullable`1<bool> store);
    public TDescriptor Fields(Func`2<PropertiesDescriptor`1<T>, IPromise`1<IProperties>> selector);
    public TDescriptor Similarity(string similarity);
    public TDescriptor CopyTo(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
}
public class OpenSearch.Client.CountDescriptor`1 : RequestDescriptorBase`3<CountDescriptor`1<TDocument>, CountRequestParameters, ICountRequest`1<TDocument>> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.ICountRequest.Query>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ICountRequest.Index { get; }
    protected HttpMethod HttpMethod { get; }
    private QueryContainer OpenSearch.Client.ICountRequest.Query { get; private set; }
    public CountDescriptor`1(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICountRequest.get_Index();
    public CountDescriptor`1<TDocument> Index(Indices index);
    public CountDescriptor`1<TDocument> Index();
    public CountDescriptor`1<TDocument> AllIndices();
    public CountDescriptor`1<TDocument> AllowNoIndices(Nullable`1<bool> allownoindices);
    public CountDescriptor`1<TDocument> AnalyzeWildcard(Nullable`1<bool> analyzewildcard);
    public CountDescriptor`1<TDocument> Analyzer(string analyzer);
    public CountDescriptor`1<TDocument> DefaultOperator(Nullable`1<DefaultOperator> defaultoperator);
    public CountDescriptor`1<TDocument> Df(string df);
    public CountDescriptor`1<TDocument> ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public CountDescriptor`1<TDocument> IgnoreThrottled(Nullable`1<bool> ignorethrottled);
    public CountDescriptor`1<TDocument> IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public CountDescriptor`1<TDocument> Lenient(Nullable`1<bool> lenient);
    public CountDescriptor`1<TDocument> MinScore(Nullable`1<double> minscore);
    public CountDescriptor`1<TDocument> Preference(string preference);
    public CountDescriptor`1<TDocument> QueryOnQueryString(string queryonquerystring);
    public CountDescriptor`1<TDocument> Routing(Routing routing);
    public CountDescriptor`1<TDocument> TerminateAfter(Nullable`1<long> terminateafter);
    protected virtual HttpMethod get_HttpMethod();
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.ICountRequest.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICountRequest.set_Query(QueryContainer value);
    public CountDescriptor`1<TDocument> Query(Func`2<QueryContainerDescriptor`1<TDocument>, QueryContainer> querySelector);
}
public class OpenSearch.Client.CountRequest : PlainRequestBase`1<CountRequestParameters> {
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    protected ICountRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ICountRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<bool> AnalyzeWildcard { get; public set; }
    public string Analyzer { get; public set; }
    public Nullable`1<DefaultOperator> DefaultOperator { get; public set; }
    public string Df { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreThrottled { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public Nullable`1<double> MinScore { get; public set; }
    public string Preference { get; public set; }
    public string QueryOnQueryString { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<long> TerminateAfter { get; public set; }
    public QueryContainer Query { get; public set; }
    protected HttpMethod HttpMethod { get; }
    public CountRequest(Indices index);
    protected ICountRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICountRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<bool> get_AnalyzeWildcard();
    public void set_AnalyzeWildcard(Nullable`1<bool> value);
    public string get_Analyzer();
    public void set_Analyzer(string value);
    public Nullable`1<DefaultOperator> get_DefaultOperator();
    public void set_DefaultOperator(Nullable`1<DefaultOperator> value);
    public string get_Df();
    public void set_Df(string value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreThrottled();
    public void set_IgnoreThrottled(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_Lenient();
    public void set_Lenient(Nullable`1<bool> value);
    public Nullable`1<double> get_MinScore();
    public void set_MinScore(Nullable`1<double> value);
    public string get_Preference();
    public void set_Preference(string value);
    public string get_QueryOnQueryString();
    public void set_QueryOnQueryString(string value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Nullable`1<long> get_TerminateAfter();
    public void set_TerminateAfter(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    protected virtual HttpMethod get_HttpMethod();
}
public class OpenSearch.Client.CountRequest`1 : CountRequest {
    protected ICountRequest`1<TDocument> TypedSelf { get; }
    public CountRequest`1(Indices index);
    protected ICountRequest`1<TDocument> get_TypedSelf();
}
[DataContractAttribute]
public class OpenSearch.Client.CountResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardStatistics <Shards>k__BackingField;
    [DataMemberAttribute]
public long Count { get; internal set; }
    [DataMemberAttribute]
public ShardStatistics Shards { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
internal void set_Count(long value);
    [CompilerGeneratedAttribute]
public ShardStatistics get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ShardStatistics value);
}
public class OpenSearch.Client.CreateDescriptor`1 : RequestDescriptorBase`3<CreateDescriptor`1<TDocument>, CreateRequestParameters, ICreateRequest`1<TDocument>> {
    [CompilerGeneratedAttribute]
private TDocument <OpenSearch.Client.ICreateRequest<TDocument>.Document>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.ICreateRequest<TDocument>.Index { get; }
    private Id OpenSearch.Client.ICreateRequest<TDocument>.Id { get; }
    private TDocument OpenSearch.Client.ICreateRequest<TDocument>.Document { get; private set; }
    public CreateDescriptor`1(IndexName index, Id id);
    public CreateDescriptor`1(Id id);
    public CreateDescriptor`1(TDocument documentWithId, IndexName index, Id id);
    internal virtual ApiUrls get_ApiUrls();
    private void DocumentFromPath(TDocument document);
    private sealed virtual override IndexName OpenSearch.Client.ICreateRequest<TDocument>.get_Index();
    private sealed virtual override Id OpenSearch.Client.ICreateRequest<TDocument>.get_Id();
    public CreateDescriptor`1<TDocument> Index(IndexName index);
    public CreateDescriptor`1<TDocument> Index();
    public CreateDescriptor`1<TDocument> Pipeline(string pipeline);
    public CreateDescriptor`1<TDocument> Refresh(Nullable`1<Refresh> refresh);
    public CreateDescriptor`1<TDocument> Routing(Routing routing);
    public CreateDescriptor`1<TDocument> Timeout(Time timeout);
    public CreateDescriptor`1<TDocument> Version(Nullable`1<long> version);
    public CreateDescriptor`1<TDocument> VersionType(Nullable`1<VersionType> versiontype);
    public CreateDescriptor`1<TDocument> WaitForActiveShards(string waitforactiveshards);
    [CompilerGeneratedAttribute]
private sealed virtual override TDocument OpenSearch.Client.ICreateRequest<TDocument>.get_Document();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICreateRequest<TDocument>.set_Document(TDocument value);
    private sealed virtual override void OpenSearch.Client.IProxyRequest.WriteJson(IOpenSearchSerializer sourceSerializer, Stream stream, SerializationFormatting formatting);
    public CreateDescriptor`1<TDocument> Id(Id id);
}
public class OpenSearch.Client.CreateIndexDescriptor : RequestDescriptorBase`3<CreateIndexDescriptor, CreateIndexRequestParameters, ICreateIndexRequest> {
    [CompilerGeneratedAttribute]
private IAliases <OpenSearch.Client.IIndexState.Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeMapping <OpenSearch.Client.IIndexState.Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <OpenSearch.Client.IIndexState.Settings>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.ICreateIndexRequest.Index { get; }
    private IAliases OpenSearch.Client.IIndexState.Aliases { get; private set; }
    private ITypeMapping OpenSearch.Client.IIndexState.Mappings { get; private set; }
    private IIndexSettings OpenSearch.Client.IIndexState.Settings { get; private set; }
    public CreateIndexDescriptor(IndexName index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.ICreateIndexRequest.get_Index();
    public CreateIndexDescriptor Index(IndexName index);
    public CreateIndexDescriptor Index();
    public CreateIndexDescriptor IncludeTypeName(Nullable`1<bool> includetypename);
    public CreateIndexDescriptor MasterTimeout(Time mastertimeout);
    public CreateIndexDescriptor ClusterManagerTimeout(Time timeout);
    public CreateIndexDescriptor Timeout(Time timeout);
    public CreateIndexDescriptor WaitForActiveShards(string waitforactiveshards);
    [CompilerGeneratedAttribute]
private sealed virtual override IAliases OpenSearch.Client.IIndexState.get_Aliases();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndexState.set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITypeMapping OpenSearch.Client.IIndexState.get_Mappings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndexState.set_Mappings(ITypeMapping value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIndexSettings OpenSearch.Client.IIndexState.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndexState.set_Settings(IIndexSettings value);
    public CreateIndexDescriptor InitializeUsing(IIndexState indexSettings);
    public CreateIndexDescriptor Settings(Func`2<IndexSettingsDescriptor, IPromise`1<IIndexSettings>> selector);
    public CreateIndexDescriptor Map(Func`2<TypeMappingDescriptor`1<T>, ITypeMapping> selector);
    public CreateIndexDescriptor Map(Func`2<TypeMappingDescriptor`1<object>, ITypeMapping> selector);
    [ObsoleteAttribute("Mappings is no longer a dictionary, please use the simplified Map() method on this descriptor instead")]
public CreateIndexDescriptor Mappings(Func`2<MappingsDescriptor, ITypeMapping> selector);
    public CreateIndexDescriptor Aliases(Func`2<AliasesDescriptor, IPromise`1<IAliases>> selector);
}
public class OpenSearch.Client.CreateIndexRequest : PlainRequestBase`1<CreateIndexRequestParameters> {
    private static String[] ReadOnlySettings;
    [CompilerGeneratedAttribute]
private IAliases <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeMapping <Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <Settings>k__BackingField;
    public IAliases Aliases { get; public set; }
    public ITypeMapping Mappings { get; public set; }
    public IIndexSettings Settings { get; public set; }
    protected ICreateIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.ICreateIndexRequest.Index { get; }
    public Nullable`1<bool> IncludeTypeName { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public CreateIndexRequest(IndexName index, IIndexState state);
    public CreateIndexRequest(IndexName index);
    private static CreateIndexRequest();
    [CompilerGeneratedAttribute]
public sealed virtual IAliases get_Aliases();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
public sealed virtual ITypeMapping get_Mappings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mappings(ITypeMapping value);
    [CompilerGeneratedAttribute]
public sealed virtual IIndexSettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IIndexSettings value);
    internal static void RemoveReadOnlySettings(IIndexSettings settings);
    protected ICreateIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.ICreateIndexRequest.get_Index();
    public Nullable`1<bool> get_IncludeTypeName();
    public void set_IncludeTypeName(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
public class OpenSearch.Client.CreateIndexResponse : AcknowledgedResponseBase {
    [CompilerGeneratedAttribute]
private bool <ShardsAcknowledged>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [DataMemberAttribute]
public bool ShardsAcknowledged { get; public set; }
    [DataMemberAttribute]
public string Index { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ShardsAcknowledged();
    [CompilerGeneratedAttribute]
public void set_ShardsAcknowledged(bool value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
}
public class OpenSearch.Client.CreatePitDescriptor : RequestDescriptorBase`3<CreatePitDescriptor, CreatePitRequestParameters, ICreatePitRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ICreatePitRequest.Index { get; }
    public CreatePitDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICreatePitRequest.get_Index();
    public CreatePitDescriptor Index(Indices index);
    public CreatePitDescriptor Index();
    public CreatePitDescriptor AllIndices();
    public CreatePitDescriptor AllowPartialPitCreation(Nullable`1<bool> allowpartialpitcreation);
    public CreatePitDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public CreatePitDescriptor KeepAlive(Time keepalive);
    public CreatePitDescriptor Preference(string preference);
    public CreatePitDescriptor Routing(Routing routing);
}
public class OpenSearch.Client.CreatePitRequest : PlainRequestBase`1<CreatePitRequestParameters> {
    protected ICreatePitRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ICreatePitRequest.Index { get; }
    public Nullable`1<bool> AllowPartialPitCreation { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Time KeepAlive { get; public set; }
    public string Preference { get; public set; }
    public Routing Routing { get; public set; }
    public CreatePitRequest(Indices index);
    protected ICreatePitRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ICreatePitRequest.get_Index();
    public Nullable`1<bool> get_AllowPartialPitCreation();
    public void set_AllowPartialPitCreation(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Time get_KeepAlive();
    public void set_KeepAlive(Time value);
    public string get_Preference();
    public void set_Preference(string value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
}
[DataContractAttribute]
public class OpenSearch.Client.CreatePitResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private string <PitId>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardStatistics <Shards>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CreationTime>k__BackingField;
    [DataMemberAttribute]
public string PitId { get; internal set; }
    [DataMemberAttribute]
public ShardStatistics Shards { get; internal set; }
    [DataMemberAttribute]
public long CreationTime { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_PitId();
    [CompilerGeneratedAttribute]
internal void set_PitId(string value);
    [CompilerGeneratedAttribute]
public ShardStatistics get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ShardStatistics value);
    [CompilerGeneratedAttribute]
public long get_CreationTime();
    [CompilerGeneratedAttribute]
internal void set_CreationTime(long value);
}
public class OpenSearch.Client.CreateRepositoryDescriptor : RequestDescriptorBase`3<CreateRepositoryDescriptor, CreateRepositoryRequestParameters, ICreateRepositoryRequest> {
    [CompilerGeneratedAttribute]
private ISnapshotRepository <OpenSearch.Client.ICreateRepositoryRequest.Repository>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.ICreateRepositoryRequest.RepositoryName { get; }
    private ISnapshotRepository OpenSearch.Client.ICreateRepositoryRequest.Repository { get; private set; }
    public CreateRepositoryDescriptor(Name repository);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ICreateRepositoryRequest.get_RepositoryName();
    public CreateRepositoryDescriptor MasterTimeout(Time mastertimeout);
    public CreateRepositoryDescriptor ClusterManagerTimeout(Time timeout);
    public CreateRepositoryDescriptor Timeout(Time timeout);
    public CreateRepositoryDescriptor Verify(Nullable`1<bool> verify);
    [CompilerGeneratedAttribute]
private sealed virtual override ISnapshotRepository OpenSearch.Client.ICreateRepositoryRequest.get_Repository();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICreateRepositoryRequest.set_Repository(ISnapshotRepository value);
    public CreateRepositoryDescriptor FileSystem(Func`2<FileSystemRepositoryDescriptor, IFileSystemRepository> selector);
    public CreateRepositoryDescriptor ReadOnlyUrl(Func`2<ReadOnlyUrlRepositoryDescriptor, IReadOnlyUrlRepository> selector);
    public CreateRepositoryDescriptor Azure(Func`2<AzureRepositoryDescriptor, IAzureRepository> selector);
    public CreateRepositoryDescriptor Hdfs(Func`2<HdfsRepositoryDescriptor, IHdfsRepository> selector);
    public CreateRepositoryDescriptor S3(Func`2<S3RepositoryDescriptor, IS3Repository> selector);
    public CreateRepositoryDescriptor SourceOnly(Func`2<SourceOnlyRepositoryDescriptor, ISourceOnlyRepository> selector);
    public CreateRepositoryDescriptor Custom(ISnapshotRepository repository);
}
internal class OpenSearch.Client.CreateRepositoryFormatter : object {
    public sealed virtual ICreateRepositoryRequest Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, ICreateRepositoryRequest value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, ISnapshotRepository value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.CreateRepositoryRequest : PlainRequestBase`1<CreateRepositoryRequestParameters> {
    [CompilerGeneratedAttribute]
private ISnapshotRepository <Repository>k__BackingField;
    public ISnapshotRepository Repository { get; public set; }
    protected ICreateRepositoryRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.ICreateRepositoryRequest.RepositoryName { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public Nullable`1<bool> Verify { get; public set; }
    public CreateRepositoryRequest(Name repository);
    [CompilerGeneratedAttribute]
public sealed virtual ISnapshotRepository get_Repository();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Repository(ISnapshotRepository value);
    protected ICreateRepositoryRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ICreateRepositoryRequest.get_RepositoryName();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public Nullable`1<bool> get_Verify();
    public void set_Verify(Nullable`1<bool> value);
}
public class OpenSearch.Client.CreateRepositoryResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.CreateRequest`1 : PlainRequestBase`1<CreateRequestParameters> {
    [CompilerGeneratedAttribute]
private TDocument <Document>k__BackingField;
    public TDocument Document { get; public set; }
    protected ICreateRequest`1<TDocument> Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.ICreateRequest<TDocument>.Index { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.ICreateRequest<TDocument>.Id { get; }
    public string Pipeline { get; public set; }
    public Nullable`1<Refresh> Refresh { get; public set; }
    public Routing Routing { get; public set; }
    public Time Timeout { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public CreateRequest`1(IndexName index, Id id);
    public CreateRequest`1(Id id);
    public CreateRequest`1(TDocument documentWithId, IndexName index, Id id);
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_Document();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Document(TDocument value);
    private sealed virtual override void OpenSearch.Client.IProxyRequest.WriteJson(IOpenSearchSerializer sourceSerializer, Stream stream, SerializationFormatting formatting);
    protected ICreateRequest`1<TDocument> get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private void DocumentFromPath(TDocument document);
    private sealed virtual override IndexName OpenSearch.Client.ICreateRequest<TDocument>.get_Index();
    private sealed virtual override Id OpenSearch.Client.ICreateRequest<TDocument>.get_Id();
    public string get_Pipeline();
    public void set_Pipeline(string value);
    public Nullable`1<Refresh> get_Refresh();
    public void set_Refresh(Nullable`1<Refresh> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    public Nullable`1<VersionType> get_VersionType();
    public void set_VersionType(Nullable`1<VersionType> value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
internal class OpenSearch.Client.CreateRequestFormatter`1 : ProxyRequestFormatterBase`2<ICreateRequest`1<TDocument>, CreateRequest`1<TDocument>> {
}
[DataContractAttribute]
public class OpenSearch.Client.CreateResponse : WriteResponseBase {
    public bool IsValid { get; }
    public virtual bool get_IsValid();
}
public class OpenSearch.Client.CsvProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <TargetFields>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Quote>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Trim>k__BackingField;
    [CompilerGeneratedAttribute]
private object <EmptyValue>k__BackingField;
    public Field Field { get; public set; }
    public Fields TargetFields { get; public set; }
    public string Separator { get; public set; }
    public string Quote { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public Nullable`1<bool> Trim { get; public set; }
    public object EmptyValue { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_TargetFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetFields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Separator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Separator(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Quote();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Quote(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Trim();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Trim(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_EmptyValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EmptyValue(object value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.CsvProcessorDescriptor`1 : ProcessorDescriptorBase`2<CsvProcessorDescriptor`1<T>, ICsvProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ICsvProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ICsvProcessor.TargetFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICsvProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICsvProcessor.Quote>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICsvProcessor.Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICsvProcessor.Trim>k__BackingField;
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.ICsvProcessor.EmptyValue>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.ICsvProcessor.Field { get; private set; }
    private Fields OpenSearch.Client.ICsvProcessor.TargetFields { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICsvProcessor.IgnoreMissing { get; private set; }
    private string OpenSearch.Client.ICsvProcessor.Quote { get; private set; }
    private string OpenSearch.Client.ICsvProcessor.Separator { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICsvProcessor.Trim { get; private set; }
    private object OpenSearch.Client.ICsvProcessor.EmptyValue { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ICsvProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICsvProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ICsvProcessor.get_TargetFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICsvProcessor.set_TargetFields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICsvProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICsvProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICsvProcessor.get_Quote();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICsvProcessor.set_Quote(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICsvProcessor.get_Separator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICsvProcessor.set_Separator(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICsvProcessor.get_Trim();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICsvProcessor.set_Trim(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.ICsvProcessor.get_EmptyValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICsvProcessor.set_EmptyValue(object value);
    public CsvProcessorDescriptor`1<T> Field(Field field);
    public CsvProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public CsvProcessorDescriptor`1<T> TargetFields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> targetFields);
    public CsvProcessorDescriptor`1<T> TargetFields(Fields targetFields);
    public CsvProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
    public CsvProcessorDescriptor`1<T> Trim(Nullable`1<bool> trim);
    public CsvProcessorDescriptor`1<T> Quote(string quote);
    public CsvProcessorDescriptor`1<T> Separator(string separator);
    public CsvProcessorDescriptor`1<T> EmptyValue(object value);
}
public class OpenSearch.Client.CumulativeSumAggregation : PipelineAggregationBase {
    public CumulativeSumAggregation(string name, SingleBucketsPath bucketsPath);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.CumulativeSumAggregationDescriptor : PipelineAggregationDescriptorBase`3<CumulativeSumAggregationDescriptor, ICumulativeSumAggregation, SingleBucketsPath> {
}
[DataContractAttribute]
public class OpenSearch.Client.CurrentNode : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <NodeAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransportAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private int <WeightRanking>k__BackingField;
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, string> NodeAttributes { get; public set; }
    [DataMemberAttribute]
public string TransportAddress { get; internal set; }
    [DataMemberAttribute]
public int WeightRanking { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_NodeAttributes();
    [CompilerGeneratedAttribute]
public void set_NodeAttributes(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_TransportAddress();
    [CompilerGeneratedAttribute]
internal void set_TransportAddress(string value);
    [CompilerGeneratedAttribute]
public int get_WeightRanking();
    [CompilerGeneratedAttribute]
internal void set_WeightRanking(int value);
}
public class OpenSearch.Client.CustomAnalyzer : AnalyzerBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <CharFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PositionIncrementGap>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tokenizer>k__BackingField;
    public IEnumerable`1<string> CharFilter { get; public set; }
    public IEnumerable`1<string> Filter { get; public set; }
    public Nullable`1<int> PositionIncrementGap { get; public set; }
    public string Tokenizer { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_CharFilter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CharFilter(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PositionIncrementGap();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PositionIncrementGap(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Tokenizer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tokenizer(string value);
}
public class OpenSearch.Client.CustomAnalyzerDescriptor : AnalyzerDescriptorBase`2<CustomAnalyzerDescriptor, ICustomAnalyzer> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ICustomAnalyzer.CharFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ICustomAnalyzer.Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ICustomAnalyzer.PositionIncrementGap>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICustomAnalyzer.Tokenizer>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.ICustomAnalyzer.CharFilter { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.ICustomAnalyzer.Filter { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ICustomAnalyzer.PositionIncrementGap { get; private set; }
    private string OpenSearch.Client.ICustomAnalyzer.Tokenizer { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ICustomAnalyzer.get_CharFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICustomAnalyzer.set_CharFilter(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ICustomAnalyzer.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICustomAnalyzer.set_Filter(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ICustomAnalyzer.get_PositionIncrementGap();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICustomAnalyzer.set_PositionIncrementGap(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICustomAnalyzer.get_Tokenizer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICustomAnalyzer.set_Tokenizer(string value);
    public CustomAnalyzerDescriptor Filters(String[] filters);
    public CustomAnalyzerDescriptor Filters(IEnumerable`1<string> filters);
    public CustomAnalyzerDescriptor CharFilters(String[] charFilters);
    public CustomAnalyzerDescriptor CharFilters(IEnumerable`1<string> charFilters);
    public CustomAnalyzerDescriptor Tokenizer(string tokenizer);
    public CustomAnalyzerDescriptor PositionIncrementGap(Nullable`1<int> positionIncrementGap);
}
public class OpenSearch.Client.CustomNormalizer : NormalizerBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <CharFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Filter>k__BackingField;
    public IEnumerable`1<string> CharFilter { get; public set; }
    public IEnumerable`1<string> Filter { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_CharFilter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CharFilter(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(IEnumerable`1<string> value);
}
public class OpenSearch.Client.CustomNormalizerDescriptor : NormalizerDescriptorBase`2<CustomNormalizerDescriptor, ICustomNormalizer> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ICustomNormalizer.CharFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ICustomNormalizer.Filter>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.ICustomNormalizer.CharFilter { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.ICustomNormalizer.Filter { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ICustomNormalizer.get_CharFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICustomNormalizer.set_CharFilter(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ICustomNormalizer.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICustomNormalizer.set_Filter(IEnumerable`1<string> value);
    public CustomNormalizerDescriptor Filters(String[] filters);
    public CustomNormalizerDescriptor Filters(IEnumerable`1<string> filters);
    public CustomNormalizerDescriptor CharFilters(String[] charFilters);
    public CustomNormalizerDescriptor CharFilters(IEnumerable`1<string> charFilters);
}
public class OpenSearch.Client.CustomSimilarity : IsADictionaryBase`2<string, object> {
    public string Type { get; public set; }
    public CustomSimilarity(string type);
    internal CustomSimilarity(IDictionary`2<string, object> container);
    internal CustomSimilarity(Dictionary`2<string, object> container);
    public sealed virtual string get_Type();
    public void set_Type(string value);
    public sealed virtual void Add(string key, object value);
}
public class OpenSearch.Client.CustomSimilarityDescriptor : IsADictionaryDescriptorBase`4<CustomSimilarityDescriptor, ICustomSimilarity, string, object> {
    internal CustomSimilarityDescriptor Type(string type);
    public CustomSimilarityDescriptor Add(string key, object value);
}
public class OpenSearch.Client.DataStreamTemplate : object {
    [CompilerGeneratedAttribute]
private ITimestampField <TimestampField>k__BackingField;
    public ITimestampField TimestampField { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ITimestampField get_TimestampField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimestampField(ITimestampField value);
}
public class OpenSearch.Client.DataStreamTemplateDescriptor : DescriptorBase`2<DataStreamTemplateDescriptor, IDataStreamTemplate> {
    [CompilerGeneratedAttribute]
private ITimestampField <OpenSearch.Client.IDataStreamTemplate.TimestampField>k__BackingField;
    private ITimestampField OpenSearch.Client.IDataStreamTemplate.TimestampField { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override ITimestampField OpenSearch.Client.IDataStreamTemplate.get_TimestampField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDataStreamTemplate.set_TimestampField(ITimestampField value);
    public DataStreamTemplateDescriptor TimestampField(Func`2<TimestampFieldDescriptor, ITimestampField> selector);
}
public class OpenSearch.Client.DateAttribute : OpenSearchDocValuesPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IDateProperty.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private INumericFielddata <OpenSearch.Client.IDateProperty.Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateProperty.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDateProperty.IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDateProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <OpenSearch.Client.IDateProperty.NullValue>k__BackingField;
    public double Boost { get; public set; }
    public string Format { get; public set; }
    public bool IgnoreMalformed { get; public set; }
    public bool Index { get; public set; }
    public DateTime NullValue { get; public set; }
    private Nullable`1<double> OpenSearch.Client.IDateProperty.Boost { get; private set; }
    private INumericFielddata OpenSearch.Client.IDateProperty.Fielddata { get; private set; }
    private string OpenSearch.Client.IDateProperty.Format { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IDateProperty.IgnoreMalformed { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IDateProperty.Index { get; private set; }
    private Nullable`1<DateTime> OpenSearch.Client.IDateProperty.NullValue { get; private set; }
    private IDateProperty Self { get; }
    public double get_Boost();
    public void set_Boost(double value);
    public string get_Format();
    public void set_Format(string value);
    public bool get_IgnoreMalformed();
    public void set_IgnoreMalformed(bool value);
    public bool get_Index();
    public void set_Index(bool value);
    public DateTime get_NullValue();
    public void set_NullValue(DateTime value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IDateProperty.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override INumericFielddata OpenSearch.Client.IDateProperty.get_Fielddata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_Fielddata(INumericFielddata value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateProperty.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDateProperty.get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDateProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DateTime> OpenSearch.Client.IDateProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_NullValue(Nullable`1<DateTime> value);
    private IDateProperty get_Self();
}
public static class OpenSearch.Client.DateFormat : object {
    public static string basic_date;
    public static string basic_date_time;
    public static string basic_date_time_no_millis;
    public static string basic_ordinal_date;
    public static string basic_ordinal_date_time;
    public static string basic_ordinal_date_time_no_millis;
    public static string basic_t_time;
    public static string basic_t_time_no_millis;
    public static string basic_time;
    public static string basic_time_no_millis;
    public static string basic_week_date;
    public static string basic_week_date_time;
    public static string basic_week_date_time_no_millis;
    public static string date;
    public static string date_hour;
    public static string date_hour_minute;
    public static string date_hour_minute_second;
    public static string date_hour_minute_second_fraction;
    public static string date_hour_minute_second_millis;
    public static string date_optional_time;
    public static string date_time;
    public static string date_time_no_millis;
    public static string epoch_millis;
    public static string epoch_second;
    public static string hour;
    public static string hour_minute;
    public static string hour_minute_second;
    public static string hour_minute_second_fraction;
    public static string hour_minute_second_millis;
    public static string ordinal_date;
    public static string ordinal_date_time;
    public static string ordinal_date_time_no_millis;
    public static string strict_basic_week_date;
    public static string strict_basic_week_date_time;
    public static string strict_basic_week_date_time_no_millis;
    public static string strict_date;
    public static string strict_date_hour;
    public static string strict_date_hour_minute;
    public static string strict_date_hour_minute_second;
    public static string strict_date_hour_minute_second_fraction;
    public static string strict_date_hour_minute_second_millis;
    public static string strict_date_time;
    public static string strict_date_time_no_millis;
    public static string strict_hour;
    public static string strict_hour_minute;
    public static string strict_hour_minute_second;
    public static string strict_hour_minute_second_fraction;
    public static string strict_hour_minute_second_millis;
    public static string strict_ordinal_date;
    public static string strict_ordinal_date_time;
    public static string strict_ordinal_date_time_no_millis;
    public static string strict_t_time;
    public static string strict_t_time_no_millis;
    public static string strict_time;
    public static string strict_time_no_millis;
    public static string strict_week_date;
    public static string strict_week_date_time;
    public static string strict_week_date_time_no_millis;
    public static string strict_weekyear;
    public static string strict_weekyear_week;
    public static string strict_weekyear_week_day;
    public static string strict_year;
    public static string strict_year_month;
    public static string strict_year_month_day;
    public static string t_time;
    public static string t_time_no_millis;
    public static string time;
    public static string time_no_millis;
    public static string week_date;
    public static string week_date_time;
    public static string week_date_time_no_millis;
    public static string weekyear;
    public static string weekyear_week;
    public static string weekyear_week_day;
    public static string year;
    public static string year_month;
    public static string year_month_day;
}
public class OpenSearch.Client.DateHistogramAggregation : BucketAggregationBase {
    private string _format;
    [CompilerGeneratedAttribute]
private ExtendedBounds`1<DateMath> <ExtendedBounds>k__BackingField;
    [CompilerGeneratedAttribute]
private HardBounds`1<DateMath> <HardBounds>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<Nullable`1<DateInterval>, DateMathTime> <CalendarInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <FixedInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private HistogramOrder <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeZone>k__BackingField;
    public ExtendedBounds`1<DateMath> ExtendedBounds { get; public set; }
    public HardBounds`1<DateMath> HardBounds { get; public set; }
    public Field Field { get; public set; }
    public string Format { get; public set; }
    public Union`2<Nullable`1<DateInterval>, DateMathTime> CalendarInterval { get; public set; }
    public Time FixedInterval { get; public set; }
    public Nullable`1<int> MinimumDocumentCount { get; public set; }
    public Nullable`1<DateTime> Missing { get; public set; }
    public string Offset { get; public set; }
    public HistogramOrder Order { get; public set; }
    public IScript Script { get; public set; }
    public string TimeZone { get; public set; }
    public DateHistogramAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual ExtendedBounds`1<DateMath> get_ExtendedBounds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExtendedBounds(ExtendedBounds`1<DateMath> value);
    [CompilerGeneratedAttribute]
public sealed virtual HardBounds`1<DateMath> get_HardBounds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HardBounds(HardBounds`1<DateMath> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    public sealed virtual string get_Format();
    public sealed virtual void set_Format(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<Nullable`1<DateInterval>, DateMathTime> get_CalendarInterval();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CalendarInterval(Union`2<Nullable`1<DateInterval>, DateMathTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_FixedInterval();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FixedInterval(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumDocumentCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Offset();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Offset(string value);
    [CompilerGeneratedAttribute]
public sealed virtual HistogramOrder get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(HistogramOrder value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TimeZone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeZone(string value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.DateHistogramAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<DateHistogramAggregationDescriptor`1<T>, IDateHistogramAggregation, T> {
    private string _format;
    [CompilerGeneratedAttribute]
private ExtendedBounds`1<DateMath> <OpenSearch.Client.IDateHistogramAggregation.ExtendedBounds>k__BackingField;
    [CompilerGeneratedAttribute]
private HardBounds`1<DateMath> <OpenSearch.Client.IDateHistogramAggregation.HardBounds>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IDateHistogramAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<Nullable`1<DateInterval>, DateMathTime> <OpenSearch.Client.IDateHistogramAggregation.CalendarInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IDateHistogramAggregation.FixedInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IDateHistogramAggregation.MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <OpenSearch.Client.IDateHistogramAggregation.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateHistogramAggregation.Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private HistogramOrder <OpenSearch.Client.IDateHistogramAggregation.Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IDateHistogramAggregation.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateHistogramAggregation.TimeZone>k__BackingField;
    private ExtendedBounds`1<DateMath> OpenSearch.Client.IDateHistogramAggregation.ExtendedBounds { get; private set; }
    private HardBounds`1<DateMath> OpenSearch.Client.IDateHistogramAggregation.HardBounds { get; private set; }
    private Field OpenSearch.Client.IDateHistogramAggregation.Field { get; private set; }
    private string OpenSearch.Client.IDateHistogramAggregation.Format { get; private set; }
    private Union`2<Nullable`1<DateInterval>, DateMathTime> OpenSearch.Client.IDateHistogramAggregation.CalendarInterval { get; private set; }
    private Time OpenSearch.Client.IDateHistogramAggregation.FixedInterval { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IDateHistogramAggregation.MinimumDocumentCount { get; private set; }
    private Nullable`1<DateTime> OpenSearch.Client.IDateHistogramAggregation.Missing { get; private set; }
    private string OpenSearch.Client.IDateHistogramAggregation.Offset { get; private set; }
    private HistogramOrder OpenSearch.Client.IDateHistogramAggregation.Order { get; private set; }
    private IScript OpenSearch.Client.IDateHistogramAggregation.Script { get; private set; }
    private string OpenSearch.Client.IDateHistogramAggregation.TimeZone { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override ExtendedBounds`1<DateMath> OpenSearch.Client.IDateHistogramAggregation.get_ExtendedBounds();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_ExtendedBounds(ExtendedBounds`1<DateMath> value);
    [CompilerGeneratedAttribute]
private sealed virtual override HardBounds`1<DateMath> OpenSearch.Client.IDateHistogramAggregation.get_HardBounds();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_HardBounds(HardBounds`1<DateMath> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IDateHistogramAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_Field(Field value);
    private sealed virtual override string OpenSearch.Client.IDateHistogramAggregation.get_Format();
    private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<Nullable`1<DateInterval>, DateMathTime> OpenSearch.Client.IDateHistogramAggregation.get_CalendarInterval();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_CalendarInterval(Union`2<Nullable`1<DateInterval>, DateMathTime> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IDateHistogramAggregation.get_FixedInterval();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_FixedInterval(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IDateHistogramAggregation.get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_MinimumDocumentCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DateTime> OpenSearch.Client.IDateHistogramAggregation.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_Missing(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateHistogramAggregation.get_Offset();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_Offset(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override HistogramOrder OpenSearch.Client.IDateHistogramAggregation.get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_Order(HistogramOrder value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IDateHistogramAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateHistogramAggregation.get_TimeZone();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramAggregation.set_TimeZone(string value);
    public DateHistogramAggregationDescriptor`1<T> Field(Field field);
    public DateHistogramAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public DateHistogramAggregationDescriptor`1<T> Script(string script);
    public DateHistogramAggregationDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public DateHistogramAggregationDescriptor`1<T> CalendarInterval(DateMathTime interval);
    public DateHistogramAggregationDescriptor`1<T> CalendarInterval(Nullable`1<DateInterval> interval);
    public DateHistogramAggregationDescriptor`1<T> FixedInterval(Time interval);
    public DateHistogramAggregationDescriptor`1<T> Format(string format);
    public DateHistogramAggregationDescriptor`1<T> MinimumDocumentCount(Nullable`1<int> minimumDocumentCount);
    public DateHistogramAggregationDescriptor`1<T> TimeZone(string timeZone);
    public DateHistogramAggregationDescriptor`1<T> Offset(string offset);
    public DateHistogramAggregationDescriptor`1<T> Order(HistogramOrder order);
    public DateHistogramAggregationDescriptor`1<T> OrderAscending(string key);
    public DateHistogramAggregationDescriptor`1<T> OrderDescending(string key);
    public DateHistogramAggregationDescriptor`1<T> ExtendedBounds(DateMath min, DateMath max);
    public DateHistogramAggregationDescriptor`1<T> HardBounds(DateMath min, DateMath max);
    public DateHistogramAggregationDescriptor`1<T> Missing(Nullable`1<DateTime> missing);
}
public class OpenSearch.Client.DateHistogramBucket : KeyedBucket`1<double> {
    private static long EpochTicks;
    public DateTime Date { get; }
    public DateHistogramBucket(IReadOnlyDictionary`2<string, IAggregate> dict);
    private static DateHistogramBucket();
    public DateTime get_Date();
}
public class OpenSearch.Client.DateHistogramCompositeAggregationSource : CompositeAggregationSourceBase {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<Nullable`1<DateInterval>, DateMathTime> <CalendarInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <FixedInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeZone>k__BackingField;
    public string Format { get; public set; }
    public Union`2<Nullable`1<DateInterval>, DateMathTime> CalendarInterval { get; public set; }
    public Time FixedInterval { get; public set; }
    public string TimeZone { get; public set; }
    protected string SourceType { get; }
    public DateHistogramCompositeAggregationSource(string name);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<Nullable`1<DateInterval>, DateMathTime> get_CalendarInterval();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CalendarInterval(Union`2<Nullable`1<DateInterval>, DateMathTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_FixedInterval();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FixedInterval(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TimeZone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeZone(string value);
    protected virtual string get_SourceType();
}
public class OpenSearch.Client.DateHistogramCompositeAggregationSourceDescriptor`1 : CompositeAggregationSourceDescriptorBase`3<DateHistogramCompositeAggregationSourceDescriptor`1<T>, IDateHistogramCompositeAggregationSource, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateHistogramCompositeAggregationSource.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<Nullable`1<DateInterval>, DateMathTime> <OpenSearch.Client.IDateHistogramCompositeAggregationSource.CalendarInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IDateHistogramCompositeAggregationSource.FixedInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateHistogramCompositeAggregationSource.TimeZone>k__BackingField;
    private string OpenSearch.Client.IDateHistogramCompositeAggregationSource.Format { get; private set; }
    private Union`2<Nullable`1<DateInterval>, DateMathTime> OpenSearch.Client.IDateHistogramCompositeAggregationSource.CalendarInterval { get; private set; }
    private Time OpenSearch.Client.IDateHistogramCompositeAggregationSource.FixedInterval { get; private set; }
    private string OpenSearch.Client.IDateHistogramCompositeAggregationSource.TimeZone { get; private set; }
    public DateHistogramCompositeAggregationSourceDescriptor`1(string name);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateHistogramCompositeAggregationSource.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramCompositeAggregationSource.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<Nullable`1<DateInterval>, DateMathTime> OpenSearch.Client.IDateHistogramCompositeAggregationSource.get_CalendarInterval();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramCompositeAggregationSource.set_CalendarInterval(Union`2<Nullable`1<DateInterval>, DateMathTime> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IDateHistogramCompositeAggregationSource.get_FixedInterval();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramCompositeAggregationSource.set_FixedInterval(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateHistogramCompositeAggregationSource.get_TimeZone();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateHistogramCompositeAggregationSource.set_TimeZone(string value);
    public DateHistogramCompositeAggregationSourceDescriptor`1<T> CalendarInterval(Nullable`1<DateInterval> interval);
    public DateHistogramCompositeAggregationSourceDescriptor`1<T> CalendarInterval(DateMathTime interval);
    public DateHistogramCompositeAggregationSourceDescriptor`1<T> FixedInterval(Time interval);
    public DateHistogramCompositeAggregationSourceDescriptor`1<T> TimeZone(string timezone);
    public DateHistogramCompositeAggregationSourceDescriptor`1<T> Format(string format);
}
public class OpenSearch.Client.DateIndexNameProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <DateFormats>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateRounding> <DateRounding>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexNameFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeZone>k__BackingField;
    public IEnumerable`1<string> DateFormats { get; public set; }
    public Nullable`1<DateRounding> DateRounding { get; public set; }
    public Field Field { get; public set; }
    public string IndexNameFormat { get; public set; }
    public string IndexNamePrefix { get; public set; }
    public string Locale { get; public set; }
    public string TimeZone { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_DateFormats();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateFormats(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateRounding> get_DateRounding();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateRounding(Nullable`1<DateRounding> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IndexNameFormat();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexNameFormat(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IndexNamePrefix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexNamePrefix(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Locale();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Locale(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TimeZone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeZone(string value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.DateIndexNameProcessorDescriptor`1 : ProcessorDescriptorBase`2<DateIndexNameProcessorDescriptor`1<T>, IDateIndexNameProcessor> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IDateIndexNameProcessor.DateFormats>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateRounding> <OpenSearch.Client.IDateIndexNameProcessor.DateRounding>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IDateIndexNameProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateIndexNameProcessor.IndexNameFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateIndexNameProcessor.IndexNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateIndexNameProcessor.Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateIndexNameProcessor.TimeZone>k__BackingField;
    protected string Name { get; }
    private IEnumerable`1<string> OpenSearch.Client.IDateIndexNameProcessor.DateFormats { get; private set; }
    private Nullable`1<DateRounding> OpenSearch.Client.IDateIndexNameProcessor.DateRounding { get; private set; }
    private Field OpenSearch.Client.IDateIndexNameProcessor.Field { get; private set; }
    private string OpenSearch.Client.IDateIndexNameProcessor.IndexNameFormat { get; private set; }
    private string OpenSearch.Client.IDateIndexNameProcessor.IndexNamePrefix { get; private set; }
    private string OpenSearch.Client.IDateIndexNameProcessor.Locale { get; private set; }
    private string OpenSearch.Client.IDateIndexNameProcessor.TimeZone { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IDateIndexNameProcessor.get_DateFormats();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateIndexNameProcessor.set_DateFormats(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DateRounding> OpenSearch.Client.IDateIndexNameProcessor.get_DateRounding();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateIndexNameProcessor.set_DateRounding(Nullable`1<DateRounding> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IDateIndexNameProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateIndexNameProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateIndexNameProcessor.get_IndexNameFormat();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateIndexNameProcessor.set_IndexNameFormat(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateIndexNameProcessor.get_IndexNamePrefix();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateIndexNameProcessor.set_IndexNamePrefix(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateIndexNameProcessor.get_Locale();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateIndexNameProcessor.set_Locale(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateIndexNameProcessor.get_TimeZone();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateIndexNameProcessor.set_TimeZone(string value);
    public DateIndexNameProcessorDescriptor`1<T> Field(Field field);
    public DateIndexNameProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public DateIndexNameProcessorDescriptor`1<T> IndexNamePrefix(string indexNamePrefix);
    public DateIndexNameProcessorDescriptor`1<T> DateRounding(Nullable`1<DateRounding> dateRounding);
    public DateIndexNameProcessorDescriptor`1<T> DateFormats(IEnumerable`1<string> dateFormats);
    public DateIndexNameProcessorDescriptor`1<T> DateFormats(String[] dateFormats);
    public DateIndexNameProcessorDescriptor`1<T> TimeZone(string timeZone);
    public DateIndexNameProcessorDescriptor`1<T> Locale(string locale);
    public DateIndexNameProcessorDescriptor`1<T> IndexNameFormat(string indexNameFormat);
}
[StringEnumAttribute]
public enum OpenSearch.Client.DateInterval : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DateInterval Second;
    [EnumMemberAttribute]
public static DateInterval Minute;
    [EnumMemberAttribute]
public static DateInterval Hour;
    [EnumMemberAttribute]
public static DateInterval Day;
    [EnumMemberAttribute]
public static DateInterval Week;
    [EnumMemberAttribute]
public static DateInterval Month;
    [EnumMemberAttribute]
public static DateInterval Quarter;
    [EnumMemberAttribute]
public static DateInterval Year;
}
[JsonFormatterAttribute("OpenSearch.Client.DateMathFormatter")]
public abstract class OpenSearch.Client.DateMath : object {
    private static Regex DateMathRegex;
    protected Union`2<DateTime, string> Anchor;
    protected Nullable`1<DateMathTimeUnit> Round;
    [CompilerGeneratedAttribute]
private IList`1<Tuple`2<DateMathOperation, DateMathTime>> <OpenSearch.Client.IDateMath.Ranges>k__BackingField;
    public static DateMathExpression Now { get; }
    protected IDateMath Self { get; }
    private Union`2<DateTime, string> OpenSearch.Client.IDateMath.Anchor { get; }
    private IList`1<Tuple`2<DateMathOperation, DateMathTime>> OpenSearch.Client.IDateMath.Ranges { get; }
    private Nullable`1<DateMathTimeUnit> OpenSearch.Client.IDateMath.Round { get; }
    internal bool IsValid { get; }
    private static DateMath();
    public static DateMathExpression get_Now();
    protected IDateMath get_Self();
    private sealed virtual override Union`2<DateTime, string> OpenSearch.Client.IDateMath.get_Anchor();
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<Tuple`2<DateMathOperation, DateMathTime>> OpenSearch.Client.IDateMath.get_Ranges();
    private sealed virtual override Nullable`1<DateMathTimeUnit> OpenSearch.Client.IDateMath.get_Round();
    public static DateMathExpression Anchored(DateTime anchor);
    public static DateMathExpression Anchored(string dateAnchor);
    public static DateMath op_Implicit(DateTime dateTime);
    public static DateMath op_Implicit(string dateMath);
    public static DateMath FromString(string dateMath);
    internal static bool IsValidDateMathString(string dateMath);
    internal bool get_IsValid();
    public virtual string ToString();
    private static string ToMinThreeDecimalPlaces(DateTime dateTime);
    private static void AppendTwoDigitNumber(StringBuilder result, int val);
}
[JsonFormatterAttribute("OpenSearch.Client.DateMathExpressionFormatter")]
public class OpenSearch.Client.DateMathExpression : DateMath {
    public DateMathExpression(string anchor);
    public DateMathExpression(DateTime anchor);
    public DateMathExpression(Union`2<DateTime, string> anchor, DateMathTime range, DateMathOperation operation);
    public DateMathExpression Add(DateMathTime expression);
    public DateMathExpression Subtract(DateMathTime expression);
    public DateMathExpression Operation(DateMathTime expression, DateMathOperation operation);
    public DateMath RoundTo(DateMathTimeUnit round);
}
internal class OpenSearch.Client.DateMathExpressionFormatter : object {
    public sealed virtual DateMathExpression Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, DateMathExpression value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.DateMathFormatter : object {
    public sealed virtual DateMath Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, DateMath value, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.DateMathOperation : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DateMathOperation Add;
    [EnumMemberAttribute]
public static DateMathOperation Subtract;
}
[ExtensionAttribute]
public static class OpenSearch.Client.DateMathOperationExtensions : object {
    [ExtensionAttribute]
public static string GetStringValue(DateMathOperation value);
}
[JsonFormatterAttribute("OpenSearch.Client.DateMathTimeFormatter")]
public class OpenSearch.Client.DateMathTime : object {
    private static double MillisecondsInADay;
    private static double MillisecondsInAMinute;
    private static double MillisecondsInAMonthApproximate;
    private static double MillisecondsInAnHour;
    private static double MillisecondsInASecond;
    private static double MillisecondsInAWeek;
    private static double MillisecondsInAYearApproximate;
    private static int MonthsInAYear;
    private static Regex ExpressionRegex;
    private double _approximateSeconds;
    [CompilerGeneratedAttribute]
private int <Factor>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMathTimeUnit <Interval>k__BackingField;
    public int Factor { get; private set; }
    public DateMathTimeUnit Interval { get; private set; }
    public DateMathTime(TimeSpan timeSpan, MidpointRounding rounding);
    public DateMathTime(double milliseconds, MidpointRounding rounding);
    public DateMathTime(int factor, DateMathTimeUnit interval);
    public DateMathTime(string timeUnit, MidpointRounding rounding);
    private static DateMathTime();
    [CompilerGeneratedAttribute]
public int get_Factor();
    [CompilerGeneratedAttribute]
private void set_Factor(int value);
    [CompilerGeneratedAttribute]
public DateMathTimeUnit get_Interval();
    [CompilerGeneratedAttribute]
private void set_Interval(DateMathTimeUnit value);
    public sealed virtual int CompareTo(DateMathTime other);
    public sealed virtual bool Equals(DateMathTime other);
    public static DateMathTime op_Implicit(TimeSpan span);
    public static DateMathTime op_Implicit(double milliseconds);
    public static DateMathTime op_Implicit(string expression);
    private void SetWholeFactorIntervalAndSeconds(double factor, DateMathTimeUnit interval, MidpointRounding rounding);
    private void SetWholeFactorIntervalAndSeconds(double milliseconds, MidpointRounding rounding);
    private static bool TryGetIntegerGreaterThanZero(double d, Int32& value);
    public static bool op_LessThan(DateMathTime left, DateMathTime right);
    public static bool op_LessThanOrEqual(DateMathTime left, DateMathTime right);
    public static bool op_GreaterThan(DateMathTime left, DateMathTime right);
    public static bool op_GreaterThanOrEqual(DateMathTime left, DateMathTime right);
    public static bool op_Equality(DateMathTime left, DateMathTime right);
    public static bool op_Inequality(DateMathTime left, DateMathTime right);
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal class OpenSearch.Client.DateMathTimeFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, DateMathTime value, IJsonFormatterResolver formatterResolver);
    public sealed virtual DateMathTime Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.DateMathTimeUnit : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DateMathTimeUnit Second;
    [EnumMemberAttribute]
public static DateMathTimeUnit Minute;
    [EnumMemberAttribute]
public static DateMathTimeUnit Hour;
    [EnumMemberAttribute]
public static DateMathTimeUnit Day;
    [EnumMemberAttribute]
public static DateMathTimeUnit Week;
    [EnumMemberAttribute]
public static DateMathTimeUnit Month;
    [EnumMemberAttribute]
public static DateMathTimeUnit Year;
}
[ExtensionAttribute]
public static class OpenSearch.Client.DateMathTimeUnitExtensions : object {
    [ExtensionAttribute]
public static string GetStringValue(DateMathTimeUnit value);
}
public class OpenSearch.Client.DateNanosAttribute : OpenSearchDocValuesPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IDateNanosProperty.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateNanosProperty.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDateNanosProperty.IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDateNanosProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <OpenSearch.Client.IDateNanosProperty.NullValue>k__BackingField;
    public double Boost { get; public set; }
    public string Format { get; public set; }
    public bool IgnoreMalformed { get; public set; }
    public bool Index { get; public set; }
    public DateTime NullValue { get; public set; }
    private Nullable`1<double> OpenSearch.Client.IDateNanosProperty.Boost { get; private set; }
    private string OpenSearch.Client.IDateNanosProperty.Format { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IDateNanosProperty.IgnoreMalformed { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IDateNanosProperty.Index { get; private set; }
    private Nullable`1<DateTime> OpenSearch.Client.IDateNanosProperty.NullValue { get; private set; }
    private IDateNanosProperty Self { get; }
    public double get_Boost();
    public void set_Boost(double value);
    public string get_Format();
    public void set_Format(string value);
    public bool get_IgnoreMalformed();
    public void set_IgnoreMalformed(bool value);
    public bool get_Index();
    public void set_Index(bool value);
    public DateTime get_NullValue();
    public void set_NullValue(DateTime value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IDateNanosProperty.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateNanosProperty.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateNanosProperty.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateNanosProperty.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDateNanosProperty.get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateNanosProperty.set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDateNanosProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateNanosProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DateTime> OpenSearch.Client.IDateNanosProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateNanosProperty.set_NullValue(Nullable`1<DateTime> value);
    private IDateNanosProperty get_Self();
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.DateNanosProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrecisionStep>k__BackingField;
    public Nullable`1<double> Boost { get; public set; }
    public string Format { get; public set; }
    public Nullable`1<bool> IgnoreMalformed { get; public set; }
    public Nullable`1<bool> Index { get; public set; }
    public Nullable`1<DateTime> NullValue { get; public set; }
    public Nullable`1<int> PrecisionStep { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Boost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_NullValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NullValue(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PrecisionStep();
    [CompilerGeneratedAttribute]
public void set_PrecisionStep(Nullable`1<int> value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.DateNanosPropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<DateNanosPropertyDescriptor`1<T>, IDateNanosProperty, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IDateNanosProperty.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateNanosProperty.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDateNanosProperty.IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDateNanosProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <OpenSearch.Client.IDateNanosProperty.NullValue>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IDateNanosProperty.Boost { get; private set; }
    private string OpenSearch.Client.IDateNanosProperty.Format { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IDateNanosProperty.IgnoreMalformed { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IDateNanosProperty.Index { get; private set; }
    private Nullable`1<DateTime> OpenSearch.Client.IDateNanosProperty.NullValue { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IDateNanosProperty.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateNanosProperty.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateNanosProperty.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateNanosProperty.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDateNanosProperty.get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateNanosProperty.set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDateNanosProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateNanosProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DateTime> OpenSearch.Client.IDateNanosProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateNanosProperty.set_NullValue(Nullable`1<DateTime> value);
    public DateNanosPropertyDescriptor`1<T> Index(Nullable`1<bool> index);
    public DateNanosPropertyDescriptor`1<T> Boost(Nullable`1<double> boost);
    public DateNanosPropertyDescriptor`1<T> NullValue(Nullable`1<DateTime> nullValue);
    public DateNanosPropertyDescriptor`1<T> IgnoreMalformed(Nullable`1<bool> ignoreMalformed);
    public DateNanosPropertyDescriptor`1<T> Format(string format);
}
public class OpenSearch.Client.DateProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Formats>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeZone>k__BackingField;
    public Field Field { get; public set; }
    public IEnumerable`1<string> Formats { get; public set; }
    public string Locale { get; public set; }
    public Field TargetField { get; public set; }
    public string TimeZone { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Formats();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Formats(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Locale();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Locale(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TimeZone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeZone(string value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.DateProcessorDescriptor`1 : ProcessorDescriptorBase`2<DateProcessorDescriptor`1<T>, IDateProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IDateProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IDateProcessor.Formats>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateProcessor.Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IDateProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateProcessor.TimeZone>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IDateProcessor.Field { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IDateProcessor.Formats { get; private set; }
    private string OpenSearch.Client.IDateProcessor.Locale { get; private set; }
    private Field OpenSearch.Client.IDateProcessor.TargetField { get; private set; }
    private string OpenSearch.Client.IDateProcessor.TimeZone { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IDateProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IDateProcessor.get_Formats();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProcessor.set_Formats(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateProcessor.get_Locale();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProcessor.set_Locale(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IDateProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateProcessor.get_TimeZone();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProcessor.set_TimeZone(string value);
    public DateProcessorDescriptor`1<T> Field(Field field);
    public DateProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public DateProcessorDescriptor`1<T> TargetField(Field field);
    public DateProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public DateProcessorDescriptor`1<T> Formats(IEnumerable`1<string> matchFormats);
    public DateProcessorDescriptor`1<T> Formats(String[] matchFormats);
    public DateProcessorDescriptor`1<T> TimeZone(string timezone);
    public DateProcessorDescriptor`1<T> Locale(string locale);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.DateProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private INumericFielddata <Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrecisionStep>k__BackingField;
    public Nullable`1<double> Boost { get; public set; }
    public INumericFielddata Fielddata { get; public set; }
    public string Format { get; public set; }
    public Nullable`1<bool> IgnoreMalformed { get; public set; }
    public Nullable`1<bool> Index { get; public set; }
    public Nullable`1<DateTime> NullValue { get; public set; }
    public Nullable`1<int> PrecisionStep { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Boost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual INumericFielddata get_Fielddata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fielddata(INumericFielddata value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_NullValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NullValue(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PrecisionStep();
    [CompilerGeneratedAttribute]
public void set_PrecisionStep(Nullable`1<int> value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.DatePropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<DatePropertyDescriptor`1<T>, IDateProperty, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IDateProperty.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private INumericFielddata <OpenSearch.Client.IDateProperty.Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateProperty.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDateProperty.IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDateProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <OpenSearch.Client.IDateProperty.NullValue>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IDateProperty.Boost { get; private set; }
    private INumericFielddata OpenSearch.Client.IDateProperty.Fielddata { get; private set; }
    private string OpenSearch.Client.IDateProperty.Format { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IDateProperty.IgnoreMalformed { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IDateProperty.Index { get; private set; }
    private Nullable`1<DateTime> OpenSearch.Client.IDateProperty.NullValue { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IDateProperty.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override INumericFielddata OpenSearch.Client.IDateProperty.get_Fielddata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_Fielddata(INumericFielddata value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateProperty.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDateProperty.get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDateProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DateTime> OpenSearch.Client.IDateProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateProperty.set_NullValue(Nullable`1<DateTime> value);
    public DatePropertyDescriptor`1<T> Index(Nullable`1<bool> index);
    public DatePropertyDescriptor`1<T> Boost(Nullable`1<double> boost);
    public DatePropertyDescriptor`1<T> NullValue(Nullable`1<DateTime> nullValue);
    public DatePropertyDescriptor`1<T> IgnoreMalformed(Nullable`1<bool> ignoreMalformed);
    public DatePropertyDescriptor`1<T> Format(string format);
    public DatePropertyDescriptor`1<T> Fielddata(Func`2<NumericFielddataDescriptor, INumericFielddata> selector);
}
public class OpenSearch.Client.DateRange : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LessThanOrEqualTo>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<DateTimeOffset> GreaterThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTimeOffset> GreaterThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTimeOffset> LessThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTimeOffset> LessThanOrEqualTo { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_GreaterThan();
    [CompilerGeneratedAttribute]
public void set_GreaterThan(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_GreaterThanOrEqualTo(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LessThan();
    [CompilerGeneratedAttribute]
public void set_LessThan(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_LessThanOrEqualTo(Nullable`1<DateTimeOffset> value);
}
public class OpenSearch.Client.DateRangeAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IDateRangeExpression> <Ranges>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeZone>k__BackingField;
    public Field Field { get; public set; }
    public string Format { get; public set; }
    public object Missing { get; public set; }
    public IEnumerable`1<IDateRangeExpression> Ranges { get; public set; }
    public string TimeZone { get; public set; }
    public DateRangeAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(string value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(object value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IDateRangeExpression> get_Ranges();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ranges(IEnumerable`1<IDateRangeExpression> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TimeZone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeZone(string value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.DateRangeAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<DateRangeAggregationDescriptor`1<T>, IDateRangeAggregation, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IDateRangeAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateRangeAggregation.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.IDateRangeAggregation.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IDateRangeExpression> <OpenSearch.Client.IDateRangeAggregation.Ranges>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateRangeAggregation.TimeZone>k__BackingField;
    private Field OpenSearch.Client.IDateRangeAggregation.Field { get; private set; }
    private string OpenSearch.Client.IDateRangeAggregation.Format { get; private set; }
    private object OpenSearch.Client.IDateRangeAggregation.Missing { get; private set; }
    private IEnumerable`1<IDateRangeExpression> OpenSearch.Client.IDateRangeAggregation.Ranges { get; private set; }
    private string OpenSearch.Client.IDateRangeAggregation.TimeZone { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IDateRangeAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateRangeAggregation.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeAggregation.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.IDateRangeAggregation.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeAggregation.set_Missing(object value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IDateRangeExpression> OpenSearch.Client.IDateRangeAggregation.get_Ranges();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeAggregation.set_Ranges(IEnumerable`1<IDateRangeExpression> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateRangeAggregation.get_TimeZone();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeAggregation.set_TimeZone(string value);
    public DateRangeAggregationDescriptor`1<T> Field(Field field);
    public DateRangeAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public DateRangeAggregationDescriptor`1<T> Format(string format);
    public DateRangeAggregationDescriptor`1<T> Missing(object missing);
    public DateRangeAggregationDescriptor`1<T> Ranges(IDateRangeExpression[] ranges);
    public DateRangeAggregationDescriptor`1<T> TimeZone(string timeZone);
    public DateRangeAggregationDescriptor`1<T> Ranges(Func`2[] ranges);
    public DateRangeAggregationDescriptor`1<T> Ranges(IEnumerable`1<Func`2<DateRangeExpressionDescriptor, IDateRangeExpression>> ranges);
}
public class OpenSearch.Client.DateRangeAttribute : RangePropertyAttributeBase {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateRangeProperty.Format>k__BackingField;
    public string Format { get; public set; }
    private string OpenSearch.Client.IDateRangeProperty.Format { get; private set; }
    private IDateRangeProperty Self { get; }
    public string get_Format();
    public void set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateRangeProperty.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeProperty.set_Format(string value);
    private IDateRangeProperty get_Self();
}
public class OpenSearch.Client.DateRangeExpression : object {
    [CompilerGeneratedAttribute]
private DateMath <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMath <To>k__BackingField;
    public DateMath From { get; public set; }
    public string Key { get; public set; }
    public DateMath To { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual DateMath get_From();
    [CompilerGeneratedAttribute]
public sealed virtual void set_From(DateMath value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Key();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Key(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateMath get_To();
    [CompilerGeneratedAttribute]
public sealed virtual void set_To(DateMath value);
}
public class OpenSearch.Client.DateRangeExpressionDescriptor : DescriptorBase`2<DateRangeExpressionDescriptor, IDateRangeExpression> {
    [CompilerGeneratedAttribute]
private DateMath <OpenSearch.Client.IDateRangeExpression.From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateRangeExpression.Key>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMath <OpenSearch.Client.IDateRangeExpression.To>k__BackingField;
    private DateMath OpenSearch.Client.IDateRangeExpression.From { get; private set; }
    private string OpenSearch.Client.IDateRangeExpression.Key { get; private set; }
    private DateMath OpenSearch.Client.IDateRangeExpression.To { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override DateMath OpenSearch.Client.IDateRangeExpression.get_From();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeExpression.set_From(DateMath value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateRangeExpression.get_Key();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeExpression.set_Key(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override DateMath OpenSearch.Client.IDateRangeExpression.get_To();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeExpression.set_To(DateMath value);
    public DateRangeExpressionDescriptor From(DateMath from);
    public DateRangeExpressionDescriptor To(DateMath to);
    public DateRangeExpressionDescriptor Key(string key);
}
public class OpenSearch.Client.DateRangeProperty : RangePropertyBase {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    public string Format { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(string value);
}
public class OpenSearch.Client.DateRangePropertyDescriptor`1 : RangePropertyDescriptorBase`3<DateRangePropertyDescriptor`1<T>, IDateRangeProperty, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateRangeProperty.Format>k__BackingField;
    private string OpenSearch.Client.IDateRangeProperty.Format { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateRangeProperty.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeProperty.set_Format(string value);
    public DateRangePropertyDescriptor`1<T> Format(string format);
}
public class OpenSearch.Client.DateRangeQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMath <GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMath <GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMath <LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMath <LessThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RangeRelation> <Relation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeZone>k__BackingField;
    public string Format { get; public set; }
    public DateMath GreaterThan { get; public set; }
    public DateMath GreaterThanOrEqualTo { get; public set; }
    public DateMath LessThan { get; public set; }
    public DateMath LessThanOrEqualTo { get; public set; }
    public Nullable`1<RangeRelation> Relation { get; public set; }
    public string TimeZone { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateMath get_GreaterThan();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GreaterThan(DateMath value);
    [CompilerGeneratedAttribute]
public sealed virtual DateMath get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GreaterThanOrEqualTo(DateMath value);
    [CompilerGeneratedAttribute]
public sealed virtual DateMath get_LessThan();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LessThan(DateMath value);
    [CompilerGeneratedAttribute]
public sealed virtual DateMath get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LessThanOrEqualTo(DateMath value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<RangeRelation> get_Relation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Relation(Nullable`1<RangeRelation> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TimeZone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeZone(string value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IDateRangeQuery q);
}
[DataContractAttribute]
public class OpenSearch.Client.DateRangeQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<DateRangeQueryDescriptor`1<T>, IDateRangeQuery, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateRangeQuery.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMath <OpenSearch.Client.IDateRangeQuery.GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMath <OpenSearch.Client.IDateRangeQuery.GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMath <OpenSearch.Client.IDateRangeQuery.LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private DateMath <OpenSearch.Client.IDateRangeQuery.LessThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RangeRelation> <OpenSearch.Client.IDateRangeQuery.Relation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDateRangeQuery.TimeZone>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.IDateRangeQuery.Format { get; private set; }
    private DateMath OpenSearch.Client.IDateRangeQuery.GreaterThan { get; private set; }
    private DateMath OpenSearch.Client.IDateRangeQuery.GreaterThanOrEqualTo { get; private set; }
    private DateMath OpenSearch.Client.IDateRangeQuery.LessThan { get; private set; }
    private DateMath OpenSearch.Client.IDateRangeQuery.LessThanOrEqualTo { get; private set; }
    private Nullable`1<RangeRelation> OpenSearch.Client.IDateRangeQuery.Relation { get; private set; }
    private string OpenSearch.Client.IDateRangeQuery.TimeZone { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateRangeQuery.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeQuery.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override DateMath OpenSearch.Client.IDateRangeQuery.get_GreaterThan();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeQuery.set_GreaterThan(DateMath value);
    [CompilerGeneratedAttribute]
private sealed virtual override DateMath OpenSearch.Client.IDateRangeQuery.get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeQuery.set_GreaterThanOrEqualTo(DateMath value);
    [CompilerGeneratedAttribute]
private sealed virtual override DateMath OpenSearch.Client.IDateRangeQuery.get_LessThan();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeQuery.set_LessThan(DateMath value);
    [CompilerGeneratedAttribute]
private sealed virtual override DateMath OpenSearch.Client.IDateRangeQuery.get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeQuery.set_LessThanOrEqualTo(DateMath value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<RangeRelation> OpenSearch.Client.IDateRangeQuery.get_Relation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeQuery.set_Relation(Nullable`1<RangeRelation> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDateRangeQuery.get_TimeZone();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDateRangeQuery.set_TimeZone(string value);
    public DateRangeQueryDescriptor`1<T> GreaterThan(DateMath from);
    public DateRangeQueryDescriptor`1<T> GreaterThanOrEquals(DateMath from);
    public DateRangeQueryDescriptor`1<T> LessThan(DateMath to);
    public DateRangeQueryDescriptor`1<T> LessThanOrEquals(DateMath to);
    public DateRangeQueryDescriptor`1<T> TimeZone(string timeZone);
    public DateRangeQueryDescriptor`1<T> Format(string format);
    public DateRangeQueryDescriptor`1<T> Relation(Nullable`1<RangeRelation> relation);
}
[StringEnumAttribute]
public enum OpenSearch.Client.DateRounding : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DateRounding Second;
    [EnumMemberAttribute]
public static DateRounding Minute;
    [EnumMemberAttribute]
public static DateRounding Hour;
    [EnumMemberAttribute]
public static DateRounding Day;
    [EnumMemberAttribute]
public static DateRounding Week;
    [EnumMemberAttribute]
public static DateRounding Month;
    [EnumMemberAttribute]
public static DateRounding Year;
}
internal class OpenSearch.Client.DateTimeOffsetEpochMillisecondsFormatter : EpochDateTimeOffsetFormatter {
    public virtual void Serialize(JsonWriter& writer, DateTimeOffset value, IJsonFormatterResolver formatterResolver);
}
internal static class OpenSearch.Client.DateTimeUtil : object {
    public static DateTimeOffset UnixEpoch;
    private static DateTimeUtil();
}
public abstract class OpenSearch.Client.DecayFunctionBase`2 : FunctionScoreFunctionBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Decay>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MultiValueMode> <MultiValueMode>k__BackingField;
    [CompilerGeneratedAttribute]
private TScale <Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private TOrigin <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private TScale <Scale>k__BackingField;
    public Nullable`1<double> Decay { get; public set; }
    public Field Field { get; public set; }
    public Nullable`1<MultiValueMode> MultiValueMode { get; public set; }
    public TScale Offset { get; public set; }
    public TOrigin Origin { get; public set; }
    public TScale Scale { get; public set; }
    protected string DecayType { get; }
    private string OpenSearch.Client.IDecayFunction.DecayType { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Decay();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Decay(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<MultiValueMode> get_MultiValueMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MultiValueMode(Nullable`1<MultiValueMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual TScale get_Offset();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Offset(TScale value);
    [CompilerGeneratedAttribute]
public sealed virtual TOrigin get_Origin();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Origin(TOrigin value);
    [CompilerGeneratedAttribute]
public sealed virtual TScale get_Scale();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Scale(TScale value);
    protected abstract virtual string get_DecayType();
    private sealed virtual override string OpenSearch.Client.IDecayFunction.get_DecayType();
}
public abstract class OpenSearch.Client.DecayFunctionDescriptorBase`4 : FunctionScoreFunctionDescriptorBase`3<TDescriptor, IDecayFunction`2<TOrigin, TScale>, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IDecayFunction.Decay>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IDecayFunction.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MultiValueMode> <OpenSearch.Client.IDecayFunction.MultiValueMode>k__BackingField;
    [CompilerGeneratedAttribute]
private TScale <OpenSearch.Client.IDecayFunction<TOrigin,TScale>.Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private TOrigin <OpenSearch.Client.IDecayFunction<TOrigin,TScale>.Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private TScale <OpenSearch.Client.IDecayFunction<TOrigin,TScale>.Scale>k__BackingField;
    protected string DecayType { get; }
    private Nullable`1<double> OpenSearch.Client.IDecayFunction.Decay { get; private set; }
    private string OpenSearch.Client.IDecayFunction.DecayType { get; }
    private Field OpenSearch.Client.IDecayFunction.Field { get; private set; }
    private Nullable`1<MultiValueMode> OpenSearch.Client.IDecayFunction.MultiValueMode { get; private set; }
    private TScale OpenSearch.Client.IDecayFunction<TOrigin,TScale>.Offset { get; private set; }
    private TOrigin OpenSearch.Client.IDecayFunction<TOrigin,TScale>.Origin { get; private set; }
    private TScale OpenSearch.Client.IDecayFunction<TOrigin,TScale>.Scale { get; private set; }
    protected abstract virtual string get_DecayType();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IDecayFunction.get_Decay();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDecayFunction.set_Decay(Nullable`1<double> value);
    private sealed virtual override string OpenSearch.Client.IDecayFunction.get_DecayType();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IDecayFunction.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDecayFunction.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<MultiValueMode> OpenSearch.Client.IDecayFunction.get_MultiValueMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDecayFunction.set_MultiValueMode(Nullable`1<MultiValueMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override TScale OpenSearch.Client.IDecayFunction<TOrigin,TScale>.get_Offset();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDecayFunction<TOrigin,TScale>.set_Offset(TScale value);
    [CompilerGeneratedAttribute]
private sealed virtual override TOrigin OpenSearch.Client.IDecayFunction<TOrigin,TScale>.get_Origin();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDecayFunction<TOrigin,TScale>.set_Origin(TOrigin value);
    [CompilerGeneratedAttribute]
private sealed virtual override TScale OpenSearch.Client.IDecayFunction<TOrigin,TScale>.get_Scale();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDecayFunction<TOrigin,TScale>.set_Scale(TScale value);
    public TDescriptor Origin(TOrigin origin);
    public TDescriptor Scale(TScale scale);
    public TDescriptor Offset(TScale offset);
    public TDescriptor Decay(Nullable`1<double> decay);
    public TDescriptor MultiValueMode(Nullable`1<MultiValueMode> mode);
    public TDescriptor Field(Field field);
    public TDescriptor Field(Expression`1<Func`2<T, TValue>> field);
}
[StringEnumAttribute]
public enum OpenSearch.Client.Decision : Enum {
    public int value__;
    [EnumMemberAttribute]
public static Decision Yes;
    [EnumMemberAttribute]
public static Decision No;
    [EnumMemberAttribute]
public static Decision WorseBalance;
    [EnumMemberAttribute]
public static Decision Throttled;
    [EnumMemberAttribute]
public static Decision AwaitingInfo;
    [EnumMemberAttribute]
public static Decision AllocationDelayed;
    [EnumMemberAttribute]
public static Decision NoValidShardCopy;
    [EnumMemberAttribute]
public static Decision NoAttempt;
}
internal class OpenSearch.Client.DefaultHighLevelSerializer : object {
    [CompilerGeneratedAttribute]
private IJsonFormatterResolver <FormatterResolver>k__BackingField;
    private IJsonFormatterResolver FormatterResolver { get; }
    public DefaultHighLevelSerializer(IJsonFormatterResolver formatterResolver);
    [CompilerGeneratedAttribute]
private IJsonFormatterResolver get_FormatterResolver();
    private sealed virtual override bool OpenSearch.Net.IInternalSerializer.TryGetJsonFormatter(IJsonFormatterResolver& formatterResolver);
    public sealed virtual T Deserialize(Stream stream);
    public sealed virtual object Deserialize(Type type, Stream stream);
    public sealed virtual Task`1<T> DeserializeAsync(Stream stream, CancellationToken cancellationToken);
    public sealed virtual Task`1<object> DeserializeAsync(Type type, Stream stream, CancellationToken cancellationToken);
    public virtual void Serialize(T data, Stream writableStream, SerializationFormatting formatting);
    public sealed virtual Task SerializeAsync(T data, Stream stream, SerializationFormatting formatting, CancellationToken cancellationToken);
}
public class OpenSearch.Client.DeleteAliasDescriptor : RequestDescriptorBase`3<DeleteAliasDescriptor, DeleteAliasRequestParameters, IDeleteAliasRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IDeleteAliasRequest.Index { get; }
    private Names OpenSearch.Client.IDeleteAliasRequest.Name { get; }
    public DeleteAliasDescriptor(Indices index, Names name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IDeleteAliasRequest.get_Index();
    private sealed virtual override Names OpenSearch.Client.IDeleteAliasRequest.get_Name();
    public DeleteAliasDescriptor Index(Indices index);
    public DeleteAliasDescriptor Index();
    public DeleteAliasDescriptor AllIndices();
    public DeleteAliasDescriptor MasterTimeout(Time mastertimeout);
    public DeleteAliasDescriptor ClusterManagerTimeout(Time timeout);
    public DeleteAliasDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.DeleteAliasRequest : PlainRequestBase`1<DeleteAliasRequestParameters> {
    protected IDeleteAliasRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IDeleteAliasRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IDeleteAliasRequest.Name { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public DeleteAliasRequest(Indices index, Names name);
    protected IDeleteAliasRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IDeleteAliasRequest.get_Index();
    private sealed virtual override Names OpenSearch.Client.IDeleteAliasRequest.get_Name();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.DeleteAliasResponse : ResponseBase {
}
public class OpenSearch.Client.DeleteAllPitsDescriptor : RequestDescriptorBase`3<DeleteAllPitsDescriptor, DeleteAllPitsRequestParameters, IDeleteAllPitsRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
}
public class OpenSearch.Client.DeleteAllPitsRequest : PlainRequestBase`1<DeleteAllPitsRequestParameters> {
    protected IDeleteAllPitsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    protected IDeleteAllPitsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
}
[DataContractAttribute]
public class OpenSearch.Client.DeleteAllPitsResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<DeletedPit> <Pits>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<DeletedPit> Pits { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<DeletedPit> get_Pits();
    [CompilerGeneratedAttribute]
internal void set_Pits(IReadOnlyCollection`1<DeletedPit> value);
}
public class OpenSearch.Client.DeleteByQueryDescriptor`1 : RequestDescriptorBase`3<DeleteByQueryDescriptor`1<TDocument>, DeleteByQueryRequestParameters, IDeleteByQueryRequest`1<TDocument>> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IDeleteByQueryRequest.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlicedScroll <OpenSearch.Client.IDeleteByQueryRequest.Slice>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IDeleteByQueryRequest.MaximumDocuments>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IDeleteByQueryRequest.Index { get; }
    private QueryContainer OpenSearch.Client.IDeleteByQueryRequest.Query { get; private set; }
    private ISlicedScroll OpenSearch.Client.IDeleteByQueryRequest.Slice { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IDeleteByQueryRequest.MaximumDocuments { get; private set; }
    public DeleteByQueryDescriptor`1(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IDeleteByQueryRequest.get_Index();
    public DeleteByQueryDescriptor`1<TDocument> Index(Indices index);
    public DeleteByQueryDescriptor`1<TDocument> Index();
    public DeleteByQueryDescriptor`1<TDocument> AllIndices();
    public DeleteByQueryDescriptor`1<TDocument> AllowNoIndices(Nullable`1<bool> allownoindices);
    public DeleteByQueryDescriptor`1<TDocument> AnalyzeWildcard(Nullable`1<bool> analyzewildcard);
    public DeleteByQueryDescriptor`1<TDocument> Analyzer(string analyzer);
    public DeleteByQueryDescriptor`1<TDocument> Conflicts(Nullable`1<Conflicts> conflicts);
    public DeleteByQueryDescriptor`1<TDocument> DefaultOperator(Nullable`1<DefaultOperator> defaultoperator);
    public DeleteByQueryDescriptor`1<TDocument> Df(string df);
    public DeleteByQueryDescriptor`1<TDocument> ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public DeleteByQueryDescriptor`1<TDocument> From(Nullable`1<long> from);
    public DeleteByQueryDescriptor`1<TDocument> IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public DeleteByQueryDescriptor`1<TDocument> Lenient(Nullable`1<bool> lenient);
    public DeleteByQueryDescriptor`1<TDocument> Preference(string preference);
    public DeleteByQueryDescriptor`1<TDocument> QueryOnQueryString(string queryonquerystring);
    public DeleteByQueryDescriptor`1<TDocument> Refresh(Nullable`1<bool> refresh);
    public DeleteByQueryDescriptor`1<TDocument> RequestCache(Nullable`1<bool> requestcache);
    public DeleteByQueryDescriptor`1<TDocument> RequestsPerSecond(Nullable`1<long> requestspersecond);
    public DeleteByQueryDescriptor`1<TDocument> Routing(Routing routing);
    public DeleteByQueryDescriptor`1<TDocument> Scroll(Time scroll);
    public DeleteByQueryDescriptor`1<TDocument> ScrollSize(Nullable`1<long> scrollsize);
    public DeleteByQueryDescriptor`1<TDocument> SearchTimeout(Time searchtimeout);
    public DeleteByQueryDescriptor`1<TDocument> SearchType(Nullable`1<SearchType> searchtype);
    public DeleteByQueryDescriptor`1<TDocument> Slices(Slices slices);
    public DeleteByQueryDescriptor`1<TDocument> Sort(String[] sort);
    public DeleteByQueryDescriptor`1<TDocument> SourceEnabled(Nullable`1<bool> sourceenabled);
    public DeleteByQueryDescriptor`1<TDocument> SourceExcludes(Fields sourceexcludes);
    public DeleteByQueryDescriptor`1<TDocument> SourceExcludes(Expression`1[] fields);
    public DeleteByQueryDescriptor`1<TDocument> SourceIncludes(Fields sourceincludes);
    public DeleteByQueryDescriptor`1<TDocument> SourceIncludes(Expression`1[] fields);
    public DeleteByQueryDescriptor`1<TDocument> Stats(String[] stats);
    public DeleteByQueryDescriptor`1<TDocument> TerminateAfter(Nullable`1<long> terminateafter);
    public DeleteByQueryDescriptor`1<TDocument> Timeout(Time timeout);
    public DeleteByQueryDescriptor`1<TDocument> Version(Nullable`1<bool> version);
    public DeleteByQueryDescriptor`1<TDocument> WaitForActiveShards(string waitforactiveshards);
    public DeleteByQueryDescriptor`1<TDocument> WaitForCompletion(Nullable`1<bool> waitforcompletion);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IDeleteByQueryRequest.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDeleteByQueryRequest.set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISlicedScroll OpenSearch.Client.IDeleteByQueryRequest.get_Slice();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDeleteByQueryRequest.set_Slice(ISlicedScroll value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IDeleteByQueryRequest.get_MaximumDocuments();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDeleteByQueryRequest.set_MaximumDocuments(Nullable`1<long> value);
    public DeleteByQueryDescriptor`1<TDocument> MatchAll();
    public DeleteByQueryDescriptor`1<TDocument> Query(Func`2<QueryContainerDescriptor`1<TDocument>, QueryContainer> querySelector);
    public DeleteByQueryDescriptor`1<TDocument> Slice(Func`2<SlicedScrollDescriptor`1<TDocument>, ISlicedScroll> selector);
    public DeleteByQueryDescriptor`1<TDocument> MaximumDocuments(Nullable`1<long> maximumDocuments);
}
public class OpenSearch.Client.DeleteByQueryRequest : PlainRequestBase`1<DeleteByQueryRequestParameters> {
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlicedScroll <Slice>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaximumDocuments>k__BackingField;
    public QueryContainer Query { get; public set; }
    public ISlicedScroll Slice { get; public set; }
    public Nullable`1<long> MaximumDocuments { get; public set; }
    protected IDeleteByQueryRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IDeleteByQueryRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<bool> AnalyzeWildcard { get; public set; }
    public string Analyzer { get; public set; }
    public Nullable`1<Conflicts> Conflicts { get; public set; }
    public Nullable`1<DefaultOperator> DefaultOperator { get; public set; }
    public string Df { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<long> From { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public string Preference { get; public set; }
    public string QueryOnQueryString { get; public set; }
    public Nullable`1<bool> Refresh { get; public set; }
    public Nullable`1<bool> RequestCache { get; public set; }
    public Nullable`1<long> RequestsPerSecond { get; public set; }
    public Routing Routing { get; public set; }
    public Time Scroll { get; public set; }
    public Nullable`1<long> ScrollSize { get; public set; }
    public Time SearchTimeout { get; public set; }
    public Nullable`1<SearchType> SearchType { get; public set; }
    public Slices Slices { get; public set; }
    public String[] Sort { get; public set; }
    public Nullable`1<bool> SourceEnabled { get; public set; }
    public Fields SourceExcludes { get; public set; }
    public Fields SourceIncludes { get; public set; }
    public String[] Stats { get; public set; }
    public Nullable`1<long> TerminateAfter { get; public set; }
    public Time Timeout { get; public set; }
    public Nullable`1<bool> Version { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public Nullable`1<bool> WaitForCompletion { get; public set; }
    public DeleteByQueryRequest(Indices index);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual ISlicedScroll get_Slice();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slice(ISlicedScroll value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MaximumDocuments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumDocuments(Nullable`1<long> value);
    protected IDeleteByQueryRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IDeleteByQueryRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<bool> get_AnalyzeWildcard();
    public void set_AnalyzeWildcard(Nullable`1<bool> value);
    public string get_Analyzer();
    public void set_Analyzer(string value);
    public Nullable`1<Conflicts> get_Conflicts();
    public void set_Conflicts(Nullable`1<Conflicts> value);
    public Nullable`1<DefaultOperator> get_DefaultOperator();
    public void set_DefaultOperator(Nullable`1<DefaultOperator> value);
    public string get_Df();
    public void set_Df(string value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<long> get_From();
    public void set_From(Nullable`1<long> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_Lenient();
    public void set_Lenient(Nullable`1<bool> value);
    public string get_Preference();
    public void set_Preference(string value);
    public string get_QueryOnQueryString();
    public void set_QueryOnQueryString(string value);
    public Nullable`1<bool> get_Refresh();
    public void set_Refresh(Nullable`1<bool> value);
    public Nullable`1<bool> get_RequestCache();
    public void set_RequestCache(Nullable`1<bool> value);
    public Nullable`1<long> get_RequestsPerSecond();
    public void set_RequestsPerSecond(Nullable`1<long> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Time get_Scroll();
    public void set_Scroll(Time value);
    public Nullable`1<long> get_ScrollSize();
    public void set_ScrollSize(Nullable`1<long> value);
    public Time get_SearchTimeout();
    public void set_SearchTimeout(Time value);
    public Nullable`1<SearchType> get_SearchType();
    public void set_SearchType(Nullable`1<SearchType> value);
    public Slices get_Slices();
    public void set_Slices(Slices value);
    public String[] get_Sort();
    public void set_Sort(String[] value);
    public Nullable`1<bool> get_SourceEnabled();
    public void set_SourceEnabled(Nullable`1<bool> value);
    public Fields get_SourceExcludes();
    public void set_SourceExcludes(Fields value);
    public Fields get_SourceIncludes();
    public void set_SourceIncludes(Fields value);
    public String[] get_Stats();
    public void set_Stats(String[] value);
    public Nullable`1<long> get_TerminateAfter();
    public void set_TerminateAfter(Nullable`1<long> value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public Nullable`1<bool> get_Version();
    public void set_Version(Nullable`1<bool> value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
    public Nullable`1<bool> get_WaitForCompletion();
    public void set_WaitForCompletion(Nullable`1<bool> value);
}
public class OpenSearch.Client.DeleteByQueryRequest`1 : DeleteByQueryRequest {
    protected IDeleteByQueryRequest`1<TDocument> TypedSelf { get; }
    public DeleteByQueryRequest`1(Indices index);
    protected IDeleteByQueryRequest`1<TDocument> get_TypedSelf();
}
public class OpenSearch.Client.DeleteByQueryResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private long <Batches>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Deleted>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<BulkIndexByScrollFailure> <Failures>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Noops>k__BackingField;
    [CompilerGeneratedAttribute]
private float <RequestsPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private Retries <Retries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SliceId>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskId <Task>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ThrottledMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ThrottledUntilMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TimedOut>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Took>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private long <VersionConflicts>k__BackingField;
    public bool IsValid { get; }
    [DataMemberAttribute]
public long Batches { get; internal set; }
    [DataMemberAttribute]
public long Deleted { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<BulkIndexByScrollFailure> Failures { get; internal set; }
    [DataMemberAttribute]
public long Noops { get; internal set; }
    [DataMemberAttribute]
public float RequestsPerSecond { get; internal set; }
    [DataMemberAttribute]
public Retries Retries { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<int> SliceId { get; internal set; }
    [DataMemberAttribute]
public TaskId Task { get; internal set; }
    [DataMemberAttribute]
public long ThrottledMilliseconds { get; internal set; }
    [DataMemberAttribute]
public long ThrottledUntilMilliseconds { get; internal set; }
    [DataMemberAttribute]
public bool TimedOut { get; internal set; }
    [DataMemberAttribute]
public long Took { get; internal set; }
    [DataMemberAttribute]
public long Total { get; internal set; }
    [DataMemberAttribute]
public long VersionConflicts { get; internal set; }
    public virtual bool get_IsValid();
    [CompilerGeneratedAttribute]
public long get_Batches();
    [CompilerGeneratedAttribute]
internal void set_Batches(long value);
    [CompilerGeneratedAttribute]
public long get_Deleted();
    [CompilerGeneratedAttribute]
internal void set_Deleted(long value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<BulkIndexByScrollFailure> get_Failures();
    [CompilerGeneratedAttribute]
internal void set_Failures(IReadOnlyCollection`1<BulkIndexByScrollFailure> value);
    [CompilerGeneratedAttribute]
public long get_Noops();
    [CompilerGeneratedAttribute]
internal void set_Noops(long value);
    [CompilerGeneratedAttribute]
public float get_RequestsPerSecond();
    [CompilerGeneratedAttribute]
internal void set_RequestsPerSecond(float value);
    [CompilerGeneratedAttribute]
public Retries get_Retries();
    [CompilerGeneratedAttribute]
internal void set_Retries(Retries value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SliceId();
    [CompilerGeneratedAttribute]
internal void set_SliceId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public TaskId get_Task();
    [CompilerGeneratedAttribute]
internal void set_Task(TaskId value);
    [CompilerGeneratedAttribute]
public long get_ThrottledMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_ThrottledMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_ThrottledUntilMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_ThrottledUntilMilliseconds(long value);
    [CompilerGeneratedAttribute]
public bool get_TimedOut();
    [CompilerGeneratedAttribute]
internal void set_TimedOut(bool value);
    [CompilerGeneratedAttribute]
public long get_Took();
    [CompilerGeneratedAttribute]
internal void set_Took(long value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(long value);
    [CompilerGeneratedAttribute]
public long get_VersionConflicts();
    [CompilerGeneratedAttribute]
internal void set_VersionConflicts(long value);
}
public class OpenSearch.Client.DeleteByQueryRethrottleDescriptor : RequestDescriptorBase`3<DeleteByQueryRethrottleDescriptor, DeleteByQueryRethrottleRequestParameters, IDeleteByQueryRethrottleRequest> {
    internal ApiUrls ApiUrls { get; }
    private TaskId OpenSearch.Client.IDeleteByQueryRethrottleRequest.TaskId { get; }
    public DeleteByQueryRethrottleDescriptor(TaskId taskId);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override TaskId OpenSearch.Client.IDeleteByQueryRethrottleRequest.get_TaskId();
    public DeleteByQueryRethrottleDescriptor RequestsPerSecond(Nullable`1<long> requestspersecond);
}
public class OpenSearch.Client.DeleteByQueryRethrottleRequest : PlainRequestBase`1<DeleteByQueryRethrottleRequestParameters> {
    protected IDeleteByQueryRethrottleRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private TaskId OpenSearch.Client.IDeleteByQueryRethrottleRequest.TaskId { get; }
    public Nullable`1<long> RequestsPerSecond { get; public set; }
    public DeleteByQueryRethrottleRequest(TaskId taskId);
    protected IDeleteByQueryRethrottleRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override TaskId OpenSearch.Client.IDeleteByQueryRethrottleRequest.get_TaskId();
    public Nullable`1<long> get_RequestsPerSecond();
    public void set_RequestsPerSecond(Nullable`1<long> value);
}
public class OpenSearch.Client.DeleteComponentTemplateDescriptor : RequestDescriptorBase`3<DeleteComponentTemplateDescriptor, DeleteComponentTemplateRequestParameters, IDeleteComponentTemplateRequest> {
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IDeleteComponentTemplateRequest.Name { get; }
    public DeleteComponentTemplateDescriptor(Name name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IDeleteComponentTemplateRequest.get_Name();
    public DeleteComponentTemplateDescriptor ClusterManagerTimeout(Time clustermanagertimeout);
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public DeleteComponentTemplateDescriptor MasterTimeout(Time mastertimeout);
    public DeleteComponentTemplateDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.DeleteComponentTemplateRequest : PlainRequestBase`1<DeleteComponentTemplateRequestParameters> {
    protected IDeleteComponentTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IDeleteComponentTemplateRequest.Name { get; }
    public Time ClusterManagerTimeout { get; public set; }
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public Time MasterTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public DeleteComponentTemplateRequest(Name name);
    protected IDeleteComponentTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IDeleteComponentTemplateRequest.get_Name();
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.DeleteComponentTemplateResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.DeleteComposableIndexTemplateDescriptor : RequestDescriptorBase`3<DeleteComposableIndexTemplateDescriptor, DeleteComposableIndexTemplateRequestParameters, IDeleteComposableIndexTemplateRequest> {
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IDeleteComposableIndexTemplateRequest.Name { get; }
    public DeleteComposableIndexTemplateDescriptor(Name name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IDeleteComposableIndexTemplateRequest.get_Name();
    public DeleteComposableIndexTemplateDescriptor ClusterManagerTimeout(Time clustermanagertimeout);
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public DeleteComposableIndexTemplateDescriptor MasterTimeout(Time mastertimeout);
    public DeleteComposableIndexTemplateDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.DeleteComposableIndexTemplateRequest : PlainRequestBase`1<DeleteComposableIndexTemplateRequestParameters> {
    protected IDeleteComposableIndexTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IDeleteComposableIndexTemplateRequest.Name { get; }
    public Time ClusterManagerTimeout { get; public set; }
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public Time MasterTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public DeleteComposableIndexTemplateRequest(Name name);
    protected IDeleteComposableIndexTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IDeleteComposableIndexTemplateRequest.get_Name();
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.DeleteComposableIndexTemplateResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.DeleteDanglingIndexDescriptor : RequestDescriptorBase`3<DeleteDanglingIndexDescriptor, DeleteDanglingIndexRequestParameters, IDeleteDanglingIndexRequest> {
    internal ApiUrls ApiUrls { get; }
    private IndexUuid OpenSearch.Client.IDeleteDanglingIndexRequest.IndexUuid { get; }
    public DeleteDanglingIndexDescriptor(IndexUuid indexUuid);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexUuid OpenSearch.Client.IDeleteDanglingIndexRequest.get_IndexUuid();
    public DeleteDanglingIndexDescriptor AcceptDataLoss(Nullable`1<bool> acceptdataloss);
    public DeleteDanglingIndexDescriptor MasterTimeout(Time mastertimeout);
    public DeleteDanglingIndexDescriptor ClusterManagerTimeout(Time timeout);
    public DeleteDanglingIndexDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.DeleteDanglingIndexRequest : PlainRequestBase`1<DeleteDanglingIndexRequestParameters> {
    protected IDeleteDanglingIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexUuid OpenSearch.Client.IDeleteDanglingIndexRequest.IndexUuid { get; }
    public Nullable`1<bool> AcceptDataLoss { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public DeleteDanglingIndexRequest(IndexUuid indexUuid);
    protected IDeleteDanglingIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexUuid OpenSearch.Client.IDeleteDanglingIndexRequest.get_IndexUuid();
    public Nullable`1<bool> get_AcceptDataLoss();
    public void set_AcceptDataLoss(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.DeleteDanglingIndexResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.DeleteDescriptor`1 : RequestDescriptorBase`3<DeleteDescriptor`1<TDocument>, DeleteRequestParameters, IDeleteRequest`1<TDocument>> {
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.IDeleteRequest.Index { get; }
    private Id OpenSearch.Client.IDeleteRequest.Id { get; }
    public DeleteDescriptor`1(IndexName index, Id id);
    public DeleteDescriptor`1(Id id);
    public DeleteDescriptor`1(TDocument documentWithId, IndexName index, Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IDeleteRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.IDeleteRequest.get_Id();
    public DeleteDescriptor`1<TDocument> Index(IndexName index);
    public DeleteDescriptor`1<TDocument> Index();
    public DeleteDescriptor`1<TDocument> IfPrimaryTerm(Nullable`1<long> ifprimaryterm);
    public DeleteDescriptor`1<TDocument> IfSequenceNumber(Nullable`1<long> ifsequencenumber);
    public DeleteDescriptor`1<TDocument> Refresh(Nullable`1<Refresh> refresh);
    public DeleteDescriptor`1<TDocument> Routing(Routing routing);
    public DeleteDescriptor`1<TDocument> Timeout(Time timeout);
    public DeleteDescriptor`1<TDocument> Version(Nullable`1<long> version);
    public DeleteDescriptor`1<TDocument> VersionType(Nullable`1<VersionType> versiontype);
    public DeleteDescriptor`1<TDocument> WaitForActiveShards(string waitforactiveshards);
}
[DataContractAttribute]
public class OpenSearch.Client.DeletedPit : object {
    [CompilerGeneratedAttribute]
private string <PitId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Successful>k__BackingField;
    [DataMemberAttribute]
public string PitId { get; public set; }
    [DataMemberAttribute]
public bool Successful { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PitId();
    [CompilerGeneratedAttribute]
public void set_PitId(string value);
    [CompilerGeneratedAttribute]
public bool get_Successful();
    [CompilerGeneratedAttribute]
public void set_Successful(bool value);
}
public class OpenSearch.Client.DeleteIndexDescriptor : RequestDescriptorBase`3<DeleteIndexDescriptor, DeleteIndexRequestParameters, IDeleteIndexRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IDeleteIndexRequest.Index { get; }
    public DeleteIndexDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IDeleteIndexRequest.get_Index();
    public DeleteIndexDescriptor Index(Indices index);
    public DeleteIndexDescriptor Index();
    public DeleteIndexDescriptor AllIndices();
    public DeleteIndexDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public DeleteIndexDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public DeleteIndexDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public DeleteIndexDescriptor MasterTimeout(Time mastertimeout);
    public DeleteIndexDescriptor ClusterManagerTimeout(Time timeout);
    public DeleteIndexDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.DeleteIndexRequest : PlainRequestBase`1<DeleteIndexRequestParameters> {
    protected IDeleteIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IDeleteIndexRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public DeleteIndexRequest(Indices index);
    protected IDeleteIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IDeleteIndexRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.DeleteIndexResponse : IndicesResponseBase {
}
public class OpenSearch.Client.DeleteIndexTemplateDescriptor : RequestDescriptorBase`3<DeleteIndexTemplateDescriptor, DeleteIndexTemplateRequestParameters, IDeleteIndexTemplateRequest> {
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IDeleteIndexTemplateRequest.Name { get; }
    public DeleteIndexTemplateDescriptor(Name name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IDeleteIndexTemplateRequest.get_Name();
    public DeleteIndexTemplateDescriptor MasterTimeout(Time mastertimeout);
    public DeleteIndexTemplateDescriptor ClusterManagerTimeout(Time timeout);
    public DeleteIndexTemplateDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.DeleteIndexTemplateRequest : PlainRequestBase`1<DeleteIndexTemplateRequestParameters> {
    protected IDeleteIndexTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IDeleteIndexTemplateRequest.Name { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public DeleteIndexTemplateRequest(Name name);
    protected IDeleteIndexTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IDeleteIndexTemplateRequest.get_Name();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.DeleteIndexTemplateResponse : AcknowledgedResponseBase {
}
[ExtensionAttribute]
public static class OpenSearch.Client.DeleteManyExtensions : object {
    [ExtensionAttribute]
public static BulkResponse DeleteMany(IOpenSearchClient client, IEnumerable`1<T> objects, IndexName index);
    [ExtensionAttribute]
public static Task`1<BulkResponse> DeleteManyAsync(IOpenSearchClient client, IEnumerable`1<T> objects, IndexName index, CancellationToken cancellationToken);
    private static BulkRequest CreateDeleteBulkRequest(IEnumerable`1<T> objects, IndexName index);
}
public class OpenSearch.Client.DeletePipelineDescriptor : RequestDescriptorBase`3<DeletePipelineDescriptor, DeletePipelineRequestParameters, IDeletePipelineRequest> {
    internal ApiUrls ApiUrls { get; }
    private Id OpenSearch.Client.IDeletePipelineRequest.Id { get; }
    public DeletePipelineDescriptor(Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IDeletePipelineRequest.get_Id();
    public DeletePipelineDescriptor MasterTimeout(Time mastertimeout);
    public DeletePipelineDescriptor ClusterManagerTimeout(Time timeout);
    public DeletePipelineDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.DeletePipelineRequest : PlainRequestBase`1<DeletePipelineRequestParameters> {
    protected IDeletePipelineRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IDeletePipelineRequest.Id { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public DeletePipelineRequest(Id id);
    protected IDeletePipelineRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IDeletePipelineRequest.get_Id();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.DeletePipelineResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.DeletePitDescriptor : RequestDescriptorBase`3<DeletePitDescriptor, DeletePitRequestParameters, IDeletePitRequest> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IDeletePitRequest.PitId>k__BackingField;
    private IEnumerable`1<string> OpenSearch.Client.IDeletePitRequest.PitId { get; private set; }
    internal ApiUrls ApiUrls { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IDeletePitRequest.get_PitId();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDeletePitRequest.set_PitId(IEnumerable`1<string> value);
    public DeletePitDescriptor PitId(IEnumerable`1<string> pitId);
    public DeletePitDescriptor PitId(String[] pitId);
    internal virtual ApiUrls get_ApiUrls();
}
public class OpenSearch.Client.DeletePitRequest : PlainRequestBase`1<DeletePitRequestParameters> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <PitId>k__BackingField;
    public IEnumerable`1<string> PitId { get; public set; }
    protected IDeletePitRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public DeletePitRequest(IEnumerable`1<string> pitId);
    public DeletePitRequest(String[] pitId);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_PitId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PitId(IEnumerable`1<string> value);
    protected IDeletePitRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
}
[DataContractAttribute]
public class OpenSearch.Client.DeletePitResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<DeletedPit> <Pits>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<DeletedPit> Pits { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<DeletedPit> get_Pits();
    [CompilerGeneratedAttribute]
internal void set_Pits(IReadOnlyCollection`1<DeletedPit> value);
}
public class OpenSearch.Client.DeleteRepositoryDescriptor : RequestDescriptorBase`3<DeleteRepositoryDescriptor, DeleteRepositoryRequestParameters, IDeleteRepositoryRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.IDeleteRepositoryRequest.RepositoryName { get; }
    public DeleteRepositoryDescriptor(Names repository);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IDeleteRepositoryRequest.get_RepositoryName();
    public DeleteRepositoryDescriptor MasterTimeout(Time mastertimeout);
    public DeleteRepositoryDescriptor ClusterManagerTimeout(Time timeout);
    public DeleteRepositoryDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.DeleteRepositoryRequest : PlainRequestBase`1<DeleteRepositoryRequestParameters> {
    protected IDeleteRepositoryRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IDeleteRepositoryRequest.RepositoryName { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public DeleteRepositoryRequest(Names repository);
    protected IDeleteRepositoryRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IDeleteRepositoryRequest.get_RepositoryName();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.DeleteRepositoryResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.DeleteRequest : PlainRequestBase`1<DeleteRequestParameters> {
    protected IDeleteRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IDeleteRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IDeleteRequest.Id { get; }
    public Nullable`1<long> IfPrimaryTerm { get; public set; }
    public Nullable`1<long> IfSequenceNumber { get; public set; }
    public Nullable`1<Refresh> Refresh { get; public set; }
    public Routing Routing { get; public set; }
    public Time Timeout { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public DeleteRequest(IndexName index, Id id);
    protected IDeleteRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IDeleteRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.IDeleteRequest.get_Id();
    public Nullable`1<long> get_IfPrimaryTerm();
    public void set_IfPrimaryTerm(Nullable`1<long> value);
    public Nullable`1<long> get_IfSequenceNumber();
    public void set_IfSequenceNumber(Nullable`1<long> value);
    public Nullable`1<Refresh> get_Refresh();
    public void set_Refresh(Nullable`1<Refresh> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    public Nullable`1<VersionType> get_VersionType();
    public void set_VersionType(Nullable`1<VersionType> value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
public class OpenSearch.Client.DeleteRequest`1 : DeleteRequest {
    protected IDeleteRequest`1<TDocument> TypedSelf { get; }
    public DeleteRequest`1(IndexName index, Id id);
    public DeleteRequest`1(Id id);
    public DeleteRequest`1(TDocument documentWithId, IndexName index, Id id);
    protected IDeleteRequest`1<TDocument> get_TypedSelf();
}
[DataContractAttribute]
public class OpenSearch.Client.DeleteResponse : WriteResponseBase {
    public bool IsValid { get; }
    public virtual bool get_IsValid();
}
public class OpenSearch.Client.DeleteScriptDescriptor : RequestDescriptorBase`3<DeleteScriptDescriptor, DeleteScriptRequestParameters, IDeleteScriptRequest> {
    internal ApiUrls ApiUrls { get; }
    private Id OpenSearch.Client.IDeleteScriptRequest.Id { get; }
    public DeleteScriptDescriptor(Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IDeleteScriptRequest.get_Id();
    public DeleteScriptDescriptor MasterTimeout(Time mastertimeout);
    public DeleteScriptDescriptor ClusterManagerTimeout(Time timeout);
    public DeleteScriptDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.DeleteScriptRequest : PlainRequestBase`1<DeleteScriptRequestParameters> {
    protected IDeleteScriptRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IDeleteScriptRequest.Id { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public DeleteScriptRequest(Id id);
    protected IDeleteScriptRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IDeleteScriptRequest.get_Id();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.DeleteScriptResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.DeleteSnapshotDescriptor : RequestDescriptorBase`3<DeleteSnapshotDescriptor, DeleteSnapshotRequestParameters, IDeleteSnapshotRequest> {
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IDeleteSnapshotRequest.RepositoryName { get; }
    private Name OpenSearch.Client.IDeleteSnapshotRequest.Snapshot { get; }
    public DeleteSnapshotDescriptor(Name repository, Name snapshot);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IDeleteSnapshotRequest.get_RepositoryName();
    private sealed virtual override Name OpenSearch.Client.IDeleteSnapshotRequest.get_Snapshot();
    public DeleteSnapshotDescriptor MasterTimeout(Time mastertimeout);
    public DeleteSnapshotDescriptor ClusterManagerTimeout(Time timeout);
}
public class OpenSearch.Client.DeleteSnapshotRequest : PlainRequestBase`1<DeleteSnapshotRequestParameters> {
    protected IDeleteSnapshotRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IDeleteSnapshotRequest.RepositoryName { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IDeleteSnapshotRequest.Snapshot { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public DeleteSnapshotRequest(Name repository, Name snapshot);
    protected IDeleteSnapshotRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IDeleteSnapshotRequest.get_RepositoryName();
    private sealed virtual override Name OpenSearch.Client.IDeleteSnapshotRequest.get_Snapshot();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
public class OpenSearch.Client.DeleteSnapshotResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.DeleteVotingConfigExclusionsDescriptor : RequestDescriptorBase`3<DeleteVotingConfigExclusionsDescriptor, DeleteVotingConfigExclusionsRequestParameters, IDeleteVotingConfigExclusionsRequest> {
    internal ApiUrls ApiUrls { get; }
    protected sealed virtual void RequestDefaults(DeleteVotingConfigExclusionsRequestParameters parameters);
    internal virtual ApiUrls get_ApiUrls();
    public DeleteVotingConfigExclusionsDescriptor WaitForRemoval(Nullable`1<bool> waitforremoval);
}
public class OpenSearch.Client.DeleteVotingConfigExclusionsRequest : PlainRequestBase`1<DeleteVotingConfigExclusionsRequestParameters> {
    protected IDeleteVotingConfigExclusionsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<bool> WaitForRemoval { get; public set; }
    protected sealed virtual void RequestDefaults(DeleteVotingConfigExclusionsRequestParameters parameters);
    protected IDeleteVotingConfigExclusionsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<bool> get_WaitForRemoval();
    public void set_WaitForRemoval(Nullable`1<bool> value);
}
public class OpenSearch.Client.DeleteVotingConfigExclusionsResponse : ResponseBase {
}
internal class OpenSearch.Client.DeleteVotingConfigExclusionsResponseBuilder : CustomResponseBuilderBase {
    public virtual object DeserializeResponse(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream);
    public virtual Task`1<object> DeserializeResponseAsync(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream, CancellationToken ctx);
}
[StringEnumAttribute]
public enum OpenSearch.Client.DelimitedPayloadEncoding : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DelimitedPayloadEncoding Integer;
    [EnumMemberAttribute]
public static DelimitedPayloadEncoding Float;
    [EnumMemberAttribute]
public static DelimitedPayloadEncoding Identity;
}
public class OpenSearch.Client.DelimitedPayloadTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<char> <Delimiter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DelimitedPayloadEncoding> <Encoding>k__BackingField;
    public Nullable`1<char> Delimiter { get; public set; }
    public Nullable`1<DelimitedPayloadEncoding> Encoding { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<char> get_Delimiter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Delimiter(Nullable`1<char> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DelimitedPayloadEncoding> get_Encoding();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Encoding(Nullable`1<DelimitedPayloadEncoding> value);
}
public class OpenSearch.Client.DelimitedPayloadTokenFilterDescriptor : TokenFilterDescriptorBase`2<DelimitedPayloadTokenFilterDescriptor, IDelimitedPayloadTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<char> <OpenSearch.Client.IDelimitedPayloadTokenFilter.Delimiter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DelimitedPayloadEncoding> <OpenSearch.Client.IDelimitedPayloadTokenFilter.Encoding>k__BackingField;
    protected string Type { get; }
    private Nullable`1<char> OpenSearch.Client.IDelimitedPayloadTokenFilter.Delimiter { get; private set; }
    private Nullable`1<DelimitedPayloadEncoding> OpenSearch.Client.IDelimitedPayloadTokenFilter.Encoding { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<char> OpenSearch.Client.IDelimitedPayloadTokenFilter.get_Delimiter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDelimitedPayloadTokenFilter.set_Delimiter(Nullable`1<char> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DelimitedPayloadEncoding> OpenSearch.Client.IDelimitedPayloadTokenFilter.get_Encoding();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDelimitedPayloadTokenFilter.set_Encoding(Nullable`1<DelimitedPayloadEncoding> value);
    public DelimitedPayloadTokenFilterDescriptor Delimiter(Nullable`1<char> delimiter);
    public DelimitedPayloadTokenFilterDescriptor Encoding(Nullable`1<DelimitedPayloadEncoding> encoding);
}
public class OpenSearch.Client.DerivativeAggregation : PipelineAggregationBase {
    public DerivativeAggregation(string name, SingleBucketsPath bucketsPath);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.DerivativeAggregationDescriptor : PipelineAggregationDescriptorBase`3<DerivativeAggregationDescriptor, IDerivativeAggregation, SingleBucketsPath> {
}
public abstract class OpenSearch.Client.DescriptorBase`2 : object {
    private TDescriptor _self;
    [IgnoreDataMemberAttribute]
protected TInterface Self { get; }
    protected TInterface get_Self();
    protected TDescriptor Assign(TValue value, Action`2<TInterface, TValue> assigner);
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
}
public abstract class OpenSearch.Client.DescriptorPromiseBase`2 : object {
    internal TValue PromisedValue;
    [CompilerGeneratedAttribute]
private TDescriptor <Self>k__BackingField;
    private TValue OpenSearch.Client.IPromise<TValue>.Value { get; }
    protected TDescriptor Self { get; }
    protected DescriptorPromiseBase`2(TValue instance);
    private sealed virtual override TValue OpenSearch.Client.IPromise<TValue>.get_Value();
    [CompilerGeneratedAttribute]
protected TDescriptor get_Self();
    protected TDescriptor Assign(Action`1<TValue> assigner);
    protected TDescriptor Assign(TNewValue value, Action`2<TValue, TNewValue> assigner);
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
}
[StringEnumAttribute]
public enum OpenSearch.Client.DFIIndependenceMeasure : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DFIIndependenceMeasure Standardized;
    [EnumMemberAttribute]
public static DFIIndependenceMeasure Saturated;
    [EnumMemberAttribute]
public static DFIIndependenceMeasure ChiSquared;
}
public class OpenSearch.Client.DFISimilarity : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DFIIndependenceMeasure> <IndependenceMeasure>k__BackingField;
    public Nullable`1<DFIIndependenceMeasure> IndependenceMeasure { get; public set; }
    public string Type { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DFIIndependenceMeasure> get_IndependenceMeasure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndependenceMeasure(Nullable`1<DFIIndependenceMeasure> value);
    public sealed virtual string get_Type();
}
public class OpenSearch.Client.DFISimilarityDescriptor : DescriptorBase`2<DFISimilarityDescriptor, IDFISimilarity> {
    [CompilerGeneratedAttribute]
private Nullable`1<DFIIndependenceMeasure> <OpenSearch.Client.IDFISimilarity.IndependenceMeasure>k__BackingField;
    private Nullable`1<DFIIndependenceMeasure> OpenSearch.Client.IDFISimilarity.IndependenceMeasure { get; private set; }
    private string OpenSearch.Client.ISimilarity.Type { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DFIIndependenceMeasure> OpenSearch.Client.IDFISimilarity.get_IndependenceMeasure();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDFISimilarity.set_IndependenceMeasure(Nullable`1<DFIIndependenceMeasure> value);
    private sealed virtual override string OpenSearch.Client.ISimilarity.get_Type();
    public DFISimilarityDescriptor IndependenceMeasure(Nullable`1<DFIIndependenceMeasure> independenceMeasure);
}
[StringEnumAttribute]
public enum OpenSearch.Client.DFRAfterEffect : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DFRAfterEffect No;
    [EnumMemberAttribute]
public static DFRAfterEffect B;
    [EnumMemberAttribute]
public static DFRAfterEffect L;
}
[StringEnumAttribute]
public enum OpenSearch.Client.DFRBasicModel : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DFRBasicModel BE;
    [EnumMemberAttribute]
public static DFRBasicModel D;
    [EnumMemberAttribute]
public static DFRBasicModel G;
    [EnumMemberAttribute]
public static DFRBasicModel IF;
    [EnumMemberAttribute]
public static DFRBasicModel IN;
    [EnumMemberAttribute]
public static DFRBasicModel INE;
    [EnumMemberAttribute]
public static DFRBasicModel P;
}
public class OpenSearch.Client.DFRSimilarity : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DFRAfterEffect> <AfterEffect>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DFRBasicModel> <BasicModel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Normalization> <Normalization>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <NormalizationH1C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <NormalizationH2C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <NormalizationH3C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <NormalizationZZ>k__BackingField;
    public Nullable`1<DFRAfterEffect> AfterEffect { get; public set; }
    public Nullable`1<DFRBasicModel> BasicModel { get; public set; }
    public Nullable`1<Normalization> Normalization { get; public set; }
    public Nullable`1<double> NormalizationH1C { get; public set; }
    public Nullable`1<double> NormalizationH2C { get; public set; }
    public Nullable`1<double> NormalizationH3C { get; public set; }
    public Nullable`1<double> NormalizationZZ { get; public set; }
    public string Type { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DFRAfterEffect> get_AfterEffect();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AfterEffect(Nullable`1<DFRAfterEffect> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DFRBasicModel> get_BasicModel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BasicModel(Nullable`1<DFRBasicModel> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Normalization> get_Normalization();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Normalization(Nullable`1<Normalization> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_NormalizationH1C();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormalizationH1C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_NormalizationH2C();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormalizationH2C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_NormalizationH3C();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormalizationH3C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_NormalizationZZ();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormalizationZZ(Nullable`1<double> value);
    public sealed virtual string get_Type();
}
public class OpenSearch.Client.DFRSimilarityDescriptor : DescriptorBase`2<DFRSimilarityDescriptor, IDFRSimilarity> {
    [CompilerGeneratedAttribute]
private Nullable`1<DFRAfterEffect> <OpenSearch.Client.IDFRSimilarity.AfterEffect>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DFRBasicModel> <OpenSearch.Client.IDFRSimilarity.BasicModel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Normalization> <OpenSearch.Client.IDFRSimilarity.Normalization>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IDFRSimilarity.NormalizationH1C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IDFRSimilarity.NormalizationH2C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IDFRSimilarity.NormalizationH3C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IDFRSimilarity.NormalizationZZ>k__BackingField;
    private Nullable`1<DFRAfterEffect> OpenSearch.Client.IDFRSimilarity.AfterEffect { get; private set; }
    private Nullable`1<DFRBasicModel> OpenSearch.Client.IDFRSimilarity.BasicModel { get; private set; }
    private Nullable`1<Normalization> OpenSearch.Client.IDFRSimilarity.Normalization { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IDFRSimilarity.NormalizationH1C { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IDFRSimilarity.NormalizationH2C { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IDFRSimilarity.NormalizationH3C { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IDFRSimilarity.NormalizationZZ { get; private set; }
    private string OpenSearch.Client.ISimilarity.Type { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DFRAfterEffect> OpenSearch.Client.IDFRSimilarity.get_AfterEffect();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDFRSimilarity.set_AfterEffect(Nullable`1<DFRAfterEffect> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DFRBasicModel> OpenSearch.Client.IDFRSimilarity.get_BasicModel();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDFRSimilarity.set_BasicModel(Nullable`1<DFRBasicModel> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<Normalization> OpenSearch.Client.IDFRSimilarity.get_Normalization();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDFRSimilarity.set_Normalization(Nullable`1<Normalization> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IDFRSimilarity.get_NormalizationH1C();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDFRSimilarity.set_NormalizationH1C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IDFRSimilarity.get_NormalizationH2C();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDFRSimilarity.set_NormalizationH2C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IDFRSimilarity.get_NormalizationH3C();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDFRSimilarity.set_NormalizationH3C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IDFRSimilarity.get_NormalizationZZ();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDFRSimilarity.set_NormalizationZZ(Nullable`1<double> value);
    private sealed virtual override string OpenSearch.Client.ISimilarity.get_Type();
    public DFRSimilarityDescriptor BasicModel(Nullable`1<DFRBasicModel> model);
    public DFRSimilarityDescriptor AfterEffect(Nullable`1<DFRAfterEffect> afterEffect);
    public DFRSimilarityDescriptor NoNormalization();
    public DFRSimilarityDescriptor NormalizationH1(Nullable`1<double> c);
    public DFRSimilarityDescriptor NormalizationH2(Nullable`1<double> c);
    public DFRSimilarityDescriptor NormalizationH3(Nullable`1<double> mu);
    public DFRSimilarityDescriptor NormalizationZ(Nullable`1<double> z);
}
public class OpenSearch.Client.DictionaryDecompounderTokenFilter : CompoundWordTokenFilterBase {
}
public class OpenSearch.Client.DictionaryDecompounderTokenFilterDescriptor : CompoundWordTokenFilterDescriptorBase`2<DictionaryDecompounderTokenFilterDescriptor, IDictionaryDecompounderTokenFilter> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public abstract class OpenSearch.Client.DictionaryResponseBase`2 : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<TKey, TValue> <OpenSearch.Client.IDictionaryResponse<TKey,TValue>.BackingDictionary>k__BackingField;
    [IgnoreDataMemberAttribute]
protected IDictionaryResponse`2<TKey, TValue> Self { get; }
    private IReadOnlyDictionary`2<TKey, TValue> OpenSearch.Client.IDictionaryResponse<TKey,TValue>.BackingDictionary { get; private set; }
    protected IDictionaryResponse`2<TKey, TValue> get_Self();
    [CompilerGeneratedAttribute]
private sealed virtual override IReadOnlyDictionary`2<TKey, TValue> OpenSearch.Client.IDictionaryResponse<TKey,TValue>.get_BackingDictionary();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDictionaryResponse<TKey,TValue>.set_BackingDictionary(IReadOnlyDictionary`2<TKey, TValue> value);
}
internal class OpenSearch.Client.DictionaryResponseFormatter`3 : object {
    public sealed virtual TResponse Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TResponse value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.DirectGenerator : object {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxEdits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <MaxInspections>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <MaxTermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <MinDocFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinWordLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PostFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SuggestMode> <SuggestMode>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<int> MaxEdits { get; public set; }
    public Nullable`1<float> MaxInspections { get; public set; }
    public Nullable`1<float> MaxTermFrequency { get; public set; }
    public Nullable`1<float> MinDocFrequency { get; public set; }
    public Nullable`1<int> MinWordLength { get; public set; }
    public string PostFilter { get; public set; }
    public string PreFilter { get; public set; }
    public Nullable`1<int> PrefixLength { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public Nullable`1<SuggestMode> SuggestMode { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxEdits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxEdits(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_MaxInspections();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxInspections(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_MaxTermFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxTermFrequency(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_MinDocFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinDocFrequency(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinWordLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinWordLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PostFilter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PostFilter(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PreFilter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreFilter(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PrefixLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SuggestMode> get_SuggestMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SuggestMode(Nullable`1<SuggestMode> value);
}
public class OpenSearch.Client.DirectGeneratorDescriptor`1 : DescriptorBase`2<DirectGeneratorDescriptor`1<T>, IDirectGenerator> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IDirectGenerator.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IDirectGenerator.MaxEdits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IDirectGenerator.MaxInspections>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IDirectGenerator.MaxTermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IDirectGenerator.MinDocFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IDirectGenerator.MinWordLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDirectGenerator.PostFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDirectGenerator.PreFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IDirectGenerator.PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IDirectGenerator.Size>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SuggestMode> <OpenSearch.Client.IDirectGenerator.SuggestMode>k__BackingField;
    private Field OpenSearch.Client.IDirectGenerator.Field { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IDirectGenerator.MaxEdits { get; private set; }
    private Nullable`1<float> OpenSearch.Client.IDirectGenerator.MaxInspections { get; private set; }
    private Nullable`1<float> OpenSearch.Client.IDirectGenerator.MaxTermFrequency { get; private set; }
    private Nullable`1<float> OpenSearch.Client.IDirectGenerator.MinDocFrequency { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IDirectGenerator.MinWordLength { get; private set; }
    private string OpenSearch.Client.IDirectGenerator.PostFilter { get; private set; }
    private string OpenSearch.Client.IDirectGenerator.PreFilter { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IDirectGenerator.PrefixLength { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IDirectGenerator.Size { get; private set; }
    private Nullable`1<SuggestMode> OpenSearch.Client.IDirectGenerator.SuggestMode { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IDirectGenerator.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDirectGenerator.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IDirectGenerator.get_MaxEdits();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDirectGenerator.set_MaxEdits(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IDirectGenerator.get_MaxInspections();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDirectGenerator.set_MaxInspections(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IDirectGenerator.get_MaxTermFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDirectGenerator.set_MaxTermFrequency(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IDirectGenerator.get_MinDocFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDirectGenerator.set_MinDocFrequency(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IDirectGenerator.get_MinWordLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDirectGenerator.set_MinWordLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDirectGenerator.get_PostFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDirectGenerator.set_PostFilter(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDirectGenerator.get_PreFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDirectGenerator.set_PreFilter(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IDirectGenerator.get_PrefixLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDirectGenerator.set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IDirectGenerator.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDirectGenerator.set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SuggestMode> OpenSearch.Client.IDirectGenerator.get_SuggestMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDirectGenerator.set_SuggestMode(Nullable`1<SuggestMode> value);
    public DirectGeneratorDescriptor`1<T> Field(Field field);
    public DirectGeneratorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public DirectGeneratorDescriptor`1<T> Size(Nullable`1<int> size);
    public DirectGeneratorDescriptor`1<T> SuggestMode(Nullable`1<SuggestMode> mode);
    public DirectGeneratorDescriptor`1<T> MinWordLength(Nullable`1<int> length);
    public DirectGeneratorDescriptor`1<T> PrefixLength(Nullable`1<int> length);
    public DirectGeneratorDescriptor`1<T> MaxEdits(Nullable`1<int> maxEdits);
    public DirectGeneratorDescriptor`1<T> MaxInspections(Nullable`1<float> maxInspections);
    public DirectGeneratorDescriptor`1<T> MinDocFrequency(Nullable`1<float> frequency);
    public DirectGeneratorDescriptor`1<T> MaxTermFrequency(Nullable`1<float> frequency);
    public DirectGeneratorDescriptor`1<T> PreFilter(string preFilter);
    public DirectGeneratorDescriptor`1<T> PostFilter(string postFilter);
}
public class OpenSearch.Client.DiskBasedShardAllocationSettings : object {
    [CompilerGeneratedAttribute]
private string <HighWatermark>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeRelocations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LowWatermark>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ThresholdEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <UpdateInterval>k__BackingField;
    public string HighWatermark { get; public set; }
    public Nullable`1<bool> IncludeRelocations { get; public set; }
    public string LowWatermark { get; public set; }
    public Nullable`1<bool> ThresholdEnabled { get; public set; }
    public Time UpdateInterval { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_HighWatermark();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HighWatermark(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeRelocations();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeRelocations(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LowWatermark();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LowWatermark(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ThresholdEnabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_UpdateInterval();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UpdateInterval(Time value);
}
public class OpenSearch.Client.DiskBasedShardAllocationSettingsDescriptor : DescriptorBase`2<DiskBasedShardAllocationSettingsDescriptor, IDiskBasedShardAllocationSettings> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDiskBasedShardAllocationSettings.HighWatermark>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDiskBasedShardAllocationSettings.IncludeRelocations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDiskBasedShardAllocationSettings.LowWatermark>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDiskBasedShardAllocationSettings.ThresholdEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IDiskBasedShardAllocationSettings.UpdateInterval>k__BackingField;
    private string OpenSearch.Client.IDiskBasedShardAllocationSettings.HighWatermark { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IDiskBasedShardAllocationSettings.IncludeRelocations { get; private set; }
    private string OpenSearch.Client.IDiskBasedShardAllocationSettings.LowWatermark { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IDiskBasedShardAllocationSettings.ThresholdEnabled { get; private set; }
    private Time OpenSearch.Client.IDiskBasedShardAllocationSettings.UpdateInterval { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDiskBasedShardAllocationSettings.get_HighWatermark();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDiskBasedShardAllocationSettings.set_HighWatermark(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDiskBasedShardAllocationSettings.get_IncludeRelocations();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDiskBasedShardAllocationSettings.set_IncludeRelocations(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDiskBasedShardAllocationSettings.get_LowWatermark();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDiskBasedShardAllocationSettings.set_LowWatermark(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDiskBasedShardAllocationSettings.get_ThresholdEnabled();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDiskBasedShardAllocationSettings.set_ThresholdEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IDiskBasedShardAllocationSettings.get_UpdateInterval();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDiskBasedShardAllocationSettings.set_UpdateInterval(Time value);
    public DiskBasedShardAllocationSettingsDescriptor ThresholdEnabled(Nullable`1<bool> enable);
    public DiskBasedShardAllocationSettingsDescriptor LowWatermark(string low);
    public DiskBasedShardAllocationSettingsDescriptor HighWatermark(string high);
    public DiskBasedShardAllocationSettingsDescriptor UpdateInterval(Time time);
    public DiskBasedShardAllocationSettingsDescriptor IncludeRelocations(Nullable`1<bool> include);
}
[DataContractAttribute]
public class OpenSearch.Client.DisMaxQuery : QueryBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<QueryContainer> <Queries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <TieBreaker>k__BackingField;
    public IEnumerable`1<QueryContainer> Queries { get; public set; }
    public Nullable`1<double> TieBreaker { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<QueryContainer> get_Queries();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Queries(IEnumerable`1<QueryContainer> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_TieBreaker();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TieBreaker(Nullable`1<double> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IDisMaxQuery q);
}
[DataContractAttribute]
public class OpenSearch.Client.DisMaxQueryDescriptor`1 : QueryDescriptorBase`2<DisMaxQueryDescriptor`1<T>, IDisMaxQuery> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<QueryContainer> <OpenSearch.Client.IDisMaxQuery.Queries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IDisMaxQuery.TieBreaker>k__BackingField;
    protected bool Conditionless { get; }
    private IEnumerable`1<QueryContainer> OpenSearch.Client.IDisMaxQuery.Queries { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IDisMaxQuery.TieBreaker { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<QueryContainer> OpenSearch.Client.IDisMaxQuery.get_Queries();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDisMaxQuery.set_Queries(IEnumerable`1<QueryContainer> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IDisMaxQuery.get_TieBreaker();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDisMaxQuery.set_TieBreaker(Nullable`1<double> value);
    public DisMaxQueryDescriptor`1<T> Queries(Func`2[] querySelectors);
    public DisMaxQueryDescriptor`1<T> Queries(IEnumerable`1<Func`2<QueryContainerDescriptor`1<T>, QueryContainer>> querySelectors);
    public DisMaxQueryDescriptor`1<T> Queries(QueryContainer[] queries);
    public DisMaxQueryDescriptor`1<T> TieBreaker(Nullable`1<double> tieBreaker);
}
public class OpenSearch.Client.DissectProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppendSeparator>k__BackingField;
    protected string Name { get; }
    public Field Field { get; public set; }
    public string Pattern { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public string AppendSeparator { get; public set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pattern();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AppendSeparator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AppendSeparator(string value);
}
public class OpenSearch.Client.DissectProcessorDescriptor`1 : ProcessorDescriptorBase`2<DissectProcessorDescriptor`1<T>, IDissectProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IDissectProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDissectProcessor.Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDissectProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDissectProcessor.AppendSeparator>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IDissectProcessor.Field { get; private set; }
    private string OpenSearch.Client.IDissectProcessor.Pattern { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IDissectProcessor.IgnoreMissing { get; private set; }
    private string OpenSearch.Client.IDissectProcessor.AppendSeparator { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IDissectProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDissectProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDissectProcessor.get_Pattern();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDissectProcessor.set_Pattern(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDissectProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDissectProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDissectProcessor.get_AppendSeparator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDissectProcessor.set_AppendSeparator(string value);
    public DissectProcessorDescriptor`1<T> Field(Field field);
    public DissectProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public DissectProcessorDescriptor`1<T> Pattern(string pattern);
    public DissectProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> traceMatch);
    public DissectProcessorDescriptor`1<T> AppendSeparator(string appendSeparator);
}
[JsonFormatterAttribute("OpenSearch.Client.DistanceFormatter")]
public class OpenSearch.Client.Distance : object {
    private static Regex DistanceUnitRegex;
    [CompilerGeneratedAttribute]
private double <Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private DistanceUnit <Unit>k__BackingField;
    public double Precision { get; private set; }
    public DistanceUnit Unit { get; private set; }
    public Distance(double distance);
    public Distance(double distance, DistanceUnit unit);
    public Distance(string distanceUnit);
    private static Distance();
    [CompilerGeneratedAttribute]
public double get_Precision();
    [CompilerGeneratedAttribute]
private void set_Precision(double value);
    [CompilerGeneratedAttribute]
public DistanceUnit get_Unit();
    [CompilerGeneratedAttribute]
private void set_Unit(DistanceUnit value);
    public static Distance Inches(double inches);
    public static Distance Yards(double yards);
    public static Distance Miles(double miles);
    public static Distance Kilometers(double kilometers);
    public static Distance Meters(double meters);
    public static Distance Centimeters(double centimeters);
    public static Distance Millimeters(double millimeter);
    public static Distance NauticalMiles(double nauticalMiles);
    public static Distance op_Implicit(string distanceUnit);
    public virtual string ToString();
}
public class OpenSearch.Client.DistanceFeatureQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private Union`2<GeoCoordinate, DateMath> <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<Distance, Time> <Pivot>k__BackingField;
    protected bool Conditionless { get; }
    public Union`2<GeoCoordinate, DateMath> Origin { get; public set; }
    public Union`2<Distance, Time> Pivot { get; public set; }
    protected virtual bool get_Conditionless();
    internal static bool IsConditionless(IDistanceFeatureQuery q);
    internal virtual void InternalWrapInContainer(IQueryContainer container);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<GeoCoordinate, DateMath> get_Origin();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Origin(Union`2<GeoCoordinate, DateMath> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<Distance, Time> get_Pivot();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pivot(Union`2<Distance, Time> value);
}
public class OpenSearch.Client.DistanceFeatureQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<DistanceFeatureQueryDescriptor`1<T>, IDistanceFeatureQuery, T> {
    [CompilerGeneratedAttribute]
private Union`2<GeoCoordinate, DateMath> <OpenSearch.Client.IDistanceFeatureQuery.Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<Distance, Time> <OpenSearch.Client.IDistanceFeatureQuery.Pivot>k__BackingField;
    private Union`2<GeoCoordinate, DateMath> OpenSearch.Client.IDistanceFeatureQuery.Origin { get; private set; }
    private Union`2<Distance, Time> OpenSearch.Client.IDistanceFeatureQuery.Pivot { get; private set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<GeoCoordinate, DateMath> OpenSearch.Client.IDistanceFeatureQuery.get_Origin();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDistanceFeatureQuery.set_Origin(Union`2<GeoCoordinate, DateMath> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<Distance, Time> OpenSearch.Client.IDistanceFeatureQuery.get_Pivot();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDistanceFeatureQuery.set_Pivot(Union`2<Distance, Time> value);
    protected virtual bool get_Conditionless();
    public DistanceFeatureQueryDescriptor`1<T> Origin(DateMath origin);
    public DistanceFeatureQueryDescriptor`1<T> Origin(GeoCoordinate origin);
    public DistanceFeatureQueryDescriptor`1<T> Pivot(Time pivot);
    public DistanceFeatureQueryDescriptor`1<T> Pivot(Distance pivot);
}
internal class OpenSearch.Client.DistanceFeatureQueryFormatter : object {
    private static UnionFormatter`2<GeoCoordinate, DateMath> OriginUnionFormatter;
    private static UnionFormatter`2<Distance, Time> PivotUnionFormatter;
    private static AutomataDictionary Fields;
    private static DistanceFeatureQueryFormatter();
    public sealed virtual void Serialize(JsonWriter& writer, IDistanceFeatureQuery value, IJsonFormatterResolver formatterResolver);
    public sealed virtual IDistanceFeatureQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.DistanceFormatter : object {
    public sealed virtual Distance Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Distance value, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.DistanceUnit : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DistanceUnit Inch;
    [EnumMemberAttribute]
public static DistanceUnit Feet;
    [EnumMemberAttribute]
public static DistanceUnit Yards;
    [EnumMemberAttribute]
public static DistanceUnit Miles;
    [EnumMemberAttribute]
[AlternativeEnumMemberAttribute("NM")]
public static DistanceUnit NauticalMiles;
    [EnumMemberAttribute]
public static DistanceUnit Kilometers;
    [EnumMemberAttribute]
public static DistanceUnit Meters;
    [EnumMemberAttribute]
public static DistanceUnit Centimeters;
    [EnumMemberAttribute]
public static DistanceUnit Millimeters;
}
public class OpenSearch.Client.DiversifiedSamplerAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<DiversifiedSamplerAggregationExecutionHint> <ExecutionHint>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxDocsPerValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardSize>k__BackingField;
    public Nullable`1<DiversifiedSamplerAggregationExecutionHint> ExecutionHint { get; public set; }
    public Field Field { get; public set; }
    public Nullable`1<int> MaxDocsPerValue { get; public set; }
    public IScript Script { get; public set; }
    public Nullable`1<int> ShardSize { get; public set; }
    public DiversifiedSamplerAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DiversifiedSamplerAggregationExecutionHint> get_ExecutionHint();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExecutionHint(Nullable`1<DiversifiedSamplerAggregationExecutionHint> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxDocsPerValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxDocsPerValue(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardSize(Nullable`1<int> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.DiversifiedSamplerAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<DiversifiedSamplerAggregationDescriptor`1<T>, IDiversifiedSamplerAggregation, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<DiversifiedSamplerAggregationExecutionHint> <OpenSearch.Client.IDiversifiedSamplerAggregation.ExecutionHint>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IDiversifiedSamplerAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IDiversifiedSamplerAggregation.MaxDocsPerValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IDiversifiedSamplerAggregation.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IDiversifiedSamplerAggregation.ShardSize>k__BackingField;
    private Nullable`1<DiversifiedSamplerAggregationExecutionHint> OpenSearch.Client.IDiversifiedSamplerAggregation.ExecutionHint { get; private set; }
    private Field OpenSearch.Client.IDiversifiedSamplerAggregation.Field { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IDiversifiedSamplerAggregation.MaxDocsPerValue { get; private set; }
    private IScript OpenSearch.Client.IDiversifiedSamplerAggregation.Script { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IDiversifiedSamplerAggregation.ShardSize { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DiversifiedSamplerAggregationExecutionHint> OpenSearch.Client.IDiversifiedSamplerAggregation.get_ExecutionHint();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDiversifiedSamplerAggregation.set_ExecutionHint(Nullable`1<DiversifiedSamplerAggregationExecutionHint> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IDiversifiedSamplerAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDiversifiedSamplerAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IDiversifiedSamplerAggregation.get_MaxDocsPerValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDiversifiedSamplerAggregation.set_MaxDocsPerValue(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IDiversifiedSamplerAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDiversifiedSamplerAggregation.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IDiversifiedSamplerAggregation.get_ShardSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDiversifiedSamplerAggregation.set_ShardSize(Nullable`1<int> value);
    public DiversifiedSamplerAggregationDescriptor`1<T> ExecutionHint(Nullable`1<DiversifiedSamplerAggregationExecutionHint> executionHint);
    public DiversifiedSamplerAggregationDescriptor`1<T> Field(Field field);
    public DiversifiedSamplerAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public DiversifiedSamplerAggregationDescriptor`1<T> MaxDocsPerValue(Nullable`1<int> maxDocs);
    public DiversifiedSamplerAggregationDescriptor`1<T> Script(string script);
    public DiversifiedSamplerAggregationDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public DiversifiedSamplerAggregationDescriptor`1<T> ShardSize(Nullable`1<int> shardSize);
}
[StringEnumAttribute]
public enum OpenSearch.Client.DiversifiedSamplerAggregationExecutionHint : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DiversifiedSamplerAggregationExecutionHint Map;
    [EnumMemberAttribute]
public static DiversifiedSamplerAggregationExecutionHint GlobalOrdinals;
    [EnumMemberAttribute]
public static DiversifiedSamplerAggregationExecutionHint BytesHash;
}
[DataContractAttribute]
public class OpenSearch.Client.DocStats : object {
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Deleted>k__BackingField;
    [DataMemberAttribute]
public long Count { get; public set; }
    [DataMemberAttribute]
public long Deleted { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public long get_Deleted();
    [CompilerGeneratedAttribute]
public void set_Deleted(long value);
}
public class OpenSearch.Client.DocumentExistsDescriptor`1 : RequestDescriptorBase`3<DocumentExistsDescriptor`1<TDocument>, DocumentExistsRequestParameters, IDocumentExistsRequest`1<TDocument>> {
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.IDocumentExistsRequest.Index { get; }
    private Id OpenSearch.Client.IDocumentExistsRequest.Id { get; }
    public DocumentExistsDescriptor`1(IndexName index, Id id);
    public DocumentExistsDescriptor`1(Id id);
    public DocumentExistsDescriptor`1(TDocument documentWithId, IndexName index, Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IDocumentExistsRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.IDocumentExistsRequest.get_Id();
    public DocumentExistsDescriptor`1<TDocument> Index(IndexName index);
    public DocumentExistsDescriptor`1<TDocument> Index();
    public DocumentExistsDescriptor`1<TDocument> Preference(string preference);
    public DocumentExistsDescriptor`1<TDocument> Realtime(Nullable`1<bool> realtime);
    public DocumentExistsDescriptor`1<TDocument> Refresh(Nullable`1<bool> refresh);
    public DocumentExistsDescriptor`1<TDocument> Routing(Routing routing);
    public DocumentExistsDescriptor`1<TDocument> SourceEnabled(Nullable`1<bool> sourceenabled);
    public DocumentExistsDescriptor`1<TDocument> SourceExcludes(Fields sourceexcludes);
    public DocumentExistsDescriptor`1<TDocument> SourceExcludes(Expression`1[] fields);
    public DocumentExistsDescriptor`1<TDocument> SourceIncludes(Fields sourceincludes);
    public DocumentExistsDescriptor`1<TDocument> SourceIncludes(Expression`1[] fields);
    public DocumentExistsDescriptor`1<TDocument> StoredFields(Fields storedfields);
    public DocumentExistsDescriptor`1<TDocument> StoredFields(Expression`1[] fields);
    public DocumentExistsDescriptor`1<TDocument> Version(Nullable`1<long> version);
    public DocumentExistsDescriptor`1<TDocument> VersionType(Nullable`1<VersionType> versiontype);
}
public class OpenSearch.Client.DocumentExistsRequest : PlainRequestBase`1<DocumentExistsRequestParameters> {
    protected IDocumentExistsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IDocumentExistsRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IDocumentExistsRequest.Id { get; }
    public string Preference { get; public set; }
    public Nullable`1<bool> Realtime { get; public set; }
    public Nullable`1<bool> Refresh { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<bool> SourceEnabled { get; public set; }
    public Fields SourceExcludes { get; public set; }
    public Fields SourceIncludes { get; public set; }
    public Fields StoredFields { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    public DocumentExistsRequest(IndexName index, Id id);
    protected IDocumentExistsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IDocumentExistsRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.IDocumentExistsRequest.get_Id();
    public string get_Preference();
    public void set_Preference(string value);
    public Nullable`1<bool> get_Realtime();
    public void set_Realtime(Nullable`1<bool> value);
    public Nullable`1<bool> get_Refresh();
    public void set_Refresh(Nullable`1<bool> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Nullable`1<bool> get_SourceEnabled();
    public void set_SourceEnabled(Nullable`1<bool> value);
    public Fields get_SourceExcludes();
    public void set_SourceExcludes(Fields value);
    public Fields get_SourceIncludes();
    public void set_SourceIncludes(Fields value);
    public Fields get_StoredFields();
    public void set_StoredFields(Fields value);
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    public Nullable`1<VersionType> get_VersionType();
    public void set_VersionType(Nullable`1<VersionType> value);
}
public class OpenSearch.Client.DocumentExistsRequest`1 : DocumentExistsRequest {
    protected IDocumentExistsRequest`1<TDocument> TypedSelf { get; }
    public DocumentExistsRequest`1(IndexName index, Id id);
    public DocumentExistsRequest`1(Id id);
    public DocumentExistsRequest`1(TDocument documentWithId, IndexName index, Id id);
    protected IDocumentExistsRequest`1<TDocument> get_TypedSelf();
}
public class OpenSearch.Client.DocumentPath`1 : object {
    [CompilerGeneratedAttribute]
private T <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private Id <OpenSearch.Client.IDocumentPath.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IDocumentPath.Index>k__BackingField;
    internal T Document { get; internal set; }
    internal IDocumentPath Self { get; }
    private Id OpenSearch.Client.IDocumentPath.Id { get; private set; }
    private IndexName OpenSearch.Client.IDocumentPath.Index { get; private set; }
    public DocumentPath`1(T document);
    public DocumentPath`1(Id id);
    [CompilerGeneratedAttribute]
internal T get_Document();
    [CompilerGeneratedAttribute]
internal void set_Document(T value);
    internal IDocumentPath get_Self();
    [CompilerGeneratedAttribute]
private sealed virtual override Id OpenSearch.Client.IDocumentPath.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDocumentPath.set_Id(Id value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IDocumentPath.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDocumentPath.set_Index(IndexName value);
    public sealed virtual bool Equals(DocumentPath`1<T> other);
    public static DocumentPath`1<T> Id(Id id);
    public static DocumentPath`1<T> Id(T object);
    public static DocumentPath`1<T> op_Implicit(T object);
    public static DocumentPath`1<T> op_Implicit(Id id);
    public static DocumentPath`1<T> op_Implicit(long id);
    public static DocumentPath`1<T> op_Implicit(string id);
    public static DocumentPath`1<T> op_Implicit(Guid id);
    public DocumentPath`1<T> Index(IndexName index);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public static bool op_Equality(DocumentPath`1<T> x, DocumentPath`1<T> y);
    public static bool op_Inequality(DocumentPath`1<T> x, DocumentPath`1<T> y);
}
[DataContractAttribute]
public class OpenSearch.Client.DocumentSimulation : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Ingest <Ingest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private ILazyDocument <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public string Index { get; internal set; }
    [DataMemberAttribute]
public Ingest Ingest { get; internal set; }
    [DataMemberAttribute]
public string Parent { get; internal set; }
    [DataMemberAttribute]
public string Routing { get; internal set; }
    [DataMemberAttribute]
public ILazyDocument Source { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public Ingest get_Ingest();
    [CompilerGeneratedAttribute]
internal void set_Ingest(Ingest value);
    [CompilerGeneratedAttribute]
public string get_Parent();
    [CompilerGeneratedAttribute]
internal void set_Parent(string value);
    [CompilerGeneratedAttribute]
public string get_Routing();
    [CompilerGeneratedAttribute]
internal void set_Routing(string value);
    [CompilerGeneratedAttribute]
public ILazyDocument get_Source();
    [CompilerGeneratedAttribute]
internal void set_Source(ILazyDocument value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
public abstract class OpenSearch.Client.DocValuesPropertyBase : CorePropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DocValues>k__BackingField;
    public Nullable`1<bool> DocValues { get; public set; }
    protected DocValuesPropertyBase(FieldType type);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DocValues();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DocValues(Nullable`1<bool> value);
}
public abstract class OpenSearch.Client.DocValuesPropertyDescriptorBase`3 : CorePropertyDescriptorBase`3<TDescriptor, TInterface, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDocValuesProperty.DocValues>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IDocValuesProperty.DocValues { get; private set; }
    protected DocValuesPropertyDescriptorBase`3(FieldType type);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDocValuesProperty.get_DocValues();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDocValuesProperty.set_DocValues(Nullable`1<bool> value);
    public TDescriptor DocValues(Nullable`1<bool> docValues);
}
public class OpenSearch.Client.DotExpanderProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public string Path { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Path(string value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.DotExpanderProcessorDescriptor`1 : ProcessorDescriptorBase`2<DotExpanderProcessorDescriptor`1<T>, IDotExpanderProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IDotExpanderProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDotExpanderProcessor.Path>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IDotExpanderProcessor.Field { get; private set; }
    private string OpenSearch.Client.IDotExpanderProcessor.Path { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IDotExpanderProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDotExpanderProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDotExpanderProcessor.get_Path();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDotExpanderProcessor.set_Path(string value);
    public DotExpanderProcessorDescriptor`1<T> Field(Field field);
    public DotExpanderProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public DotExpanderProcessorDescriptor`1<T> Path(string path);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.DotNetCoreTypeExtensions : object {
    [ExtensionAttribute]
internal static bool TryGetGenericDictionaryArguments(Type type, Type[]& genericArguments);
}
public class OpenSearch.Client.DoubleRange : object {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <LessThanOrEqualTo>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<double> GreaterThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> GreaterThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> LessThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> LessThanOrEqualTo { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_GreaterThan();
    [CompilerGeneratedAttribute]
public void set_GreaterThan(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_GreaterThanOrEqualTo(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_LessThan();
    [CompilerGeneratedAttribute]
public void set_LessThan(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_LessThanOrEqualTo(Nullable`1<double> value);
}
public class OpenSearch.Client.DoubleRangeAttribute : RangePropertyAttributeBase {
}
public class OpenSearch.Client.DoubleRangeProperty : RangePropertyBase {
}
public class OpenSearch.Client.DoubleRangePropertyDescriptor`1 : RangePropertyDescriptorBase`3<DoubleRangePropertyDescriptor`1<T>, IDoubleRangeProperty, T> {
}
public class OpenSearch.Client.DropProcessor : ProcessorBase {
    protected string Name { get; }
    protected virtual string get_Name();
}
public class OpenSearch.Client.DropProcessorDescriptor : ProcessorDescriptorBase`2<DropProcessorDescriptor, IDropProcessor> {
    protected string Name { get; }
    protected virtual string get_Name();
}
public class OpenSearch.Client.DslPrettyPrintVisitor : object {
    private Inferrer _infer;
    private StringBuilder _sb;
    private string _final;
    [CompilerGeneratedAttribute]
private int <Depth>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConditionless>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStrict>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVerbatim>k__BackingField;
    [CompilerGeneratedAttribute]
private VisitorScope <Scope>k__BackingField;
    public int Depth { get; public set; }
    public bool IsConditionless { get; public set; }
    public bool IsStrict { get; public set; }
    public bool IsVerbatim { get; public set; }
    public string PrettyPrint { get; }
    public VisitorScope Scope { get; public set; }
    public DslPrettyPrintVisitor(IConnectionSettingsValues settings);
    [CompilerGeneratedAttribute]
public virtual int get_Depth();
    [CompilerGeneratedAttribute]
public virtual void set_Depth(int value);
    [CompilerGeneratedAttribute]
public bool get_IsConditionless();
    [CompilerGeneratedAttribute]
public void set_IsConditionless(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsStrict();
    [CompilerGeneratedAttribute]
public void set_IsStrict(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsVerbatim();
    [CompilerGeneratedAttribute]
public void set_IsVerbatim(bool value);
    public string get_PrettyPrint();
    [CompilerGeneratedAttribute]
public virtual VisitorScope get_Scope();
    [CompilerGeneratedAttribute]
public virtual void set_Scope(VisitorScope value);
    public virtual void Visit(IQueryContainer baseQuery);
    public virtual void Visit(IQuery query);
    public virtual void Visit(IBoolQuery query);
    public virtual void Visit(IBoostingQuery query);
    public virtual void Visit(IConstantScoreQuery query);
    public virtual void Visit(IDisMaxQuery query);
    public virtual void Visit(IDistanceFeatureQuery query);
    public virtual void Visit(ISpanContainingQuery query);
    public virtual void Visit(ISpanWithinQuery query);
    public virtual void Visit(IDateRangeQuery query);
    public virtual void Visit(INumericRangeQuery query);
    public virtual void Visit(ILongRangeQuery query);
    public virtual void Visit(ITermRangeQuery query);
    public virtual void Visit(IFunctionScoreQuery query);
    public virtual void Visit(IFuzzyQuery query);
    public virtual void Visit(IFuzzyNumericQuery query);
    public virtual void Visit(IFuzzyDateQuery query);
    public virtual void Visit(IFuzzyStringQuery query);
    public virtual void Visit(IGeoShapeQuery query);
    public virtual void Visit(IShapeQuery query);
    private void WriteShape(IGeoShape shape, IFieldLookup indexedField, Field field, string queryType);
    public virtual void Visit(IHasChildQuery query);
    public virtual void Visit(IHasParentQuery query);
    public virtual void Visit(IIdsQuery query);
    public virtual void Visit(IIntervalsQuery query);
    public virtual void Visit(IKnnQuery query);
    public virtual void Visit(IMatchQuery query);
    public virtual void Visit(IMatchPhraseQuery query);
    public virtual void Visit(IMatchPhrasePrefixQuery query);
    public virtual void Visit(IMatchAllQuery query);
    public virtual void Visit(IMatchBoolPrefixQuery query);
    public virtual void Visit(IMatchNoneQuery query);
    public virtual void Visit(IMoreLikeThisQuery query);
    public virtual void Visit(IMultiMatchQuery query);
    public virtual void Visit(INestedQuery query);
    public virtual void Visit(INeuralQuery query);
    public virtual void Visit(IPrefixQuery query);
    public virtual void Visit(IQueryStringQuery query);
    public virtual void Visit(IRankFeatureQuery query);
    public virtual void Visit(IRangeQuery query);
    public virtual void Visit(IRegexpQuery query);
    public virtual void Visit(ISimpleQueryStringQuery query);
    public virtual void Visit(ISpanFirstQuery query);
    public virtual void Visit(ISpanNearQuery query);
    public virtual void Visit(ISpanNotQuery query);
    public virtual void Visit(ISpanOrQuery query);
    public virtual void Visit(ISpanTermQuery query);
    public virtual void Visit(ISpanFieldMaskingQuery query);
    public virtual void Visit(ITermQuery query);
    public virtual void Visit(IWildcardQuery query);
    public virtual void Visit(ITermsQuery query);
    public virtual void Visit(IGeoPolygonQuery query);
    public virtual void Visit(IGeoDistanceQuery query);
    public virtual void Visit(ISpanMultiTermQuery query);
    public virtual void Visit(ISpanSubQuery query);
    public virtual void Visit(ISpanQuery query);
    public virtual void Visit(IGeoBoundingBoxQuery query);
    public virtual void Visit(IExistsQuery query);
    public virtual void Visit(IScriptQuery query);
    public virtual void Visit(IScriptScoreQuery query);
    public virtual void Visit(IRawQuery query);
    public virtual void Visit(IPercolateQuery query);
    public virtual void Visit(IParentIdQuery query);
    public virtual void Visit(ITermsSetQuery query);
    private void Write(string queryType, Dictionary`2<string, string> properties);
    private void Write(string queryType, Field field);
    public virtual void Visit(IConditionlessQuery query);
}
public class OpenSearch.Client.DynamicIndexSettings : IsADictionaryBase`2<string, object> {
    private Time _refreshInterval;
    [CompilerGeneratedAttribute]
private IAnalysis <Analysis>k__BackingField;
    [CompilerGeneratedAttribute]
private AutoExpandReplicas <AutoExpandReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BlocksMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BlocksRead>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BlocksReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BlocksWrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BlocksReadOnlyAllowDelete>k__BackingField;
    [CompilerGeneratedAttribute]
private IMergeSettings <Merge>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumberOfReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<int, RecoveryInitialShards> <RecoveryInitialShards>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RequestsCacheEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RoutingAllocationTotalShardsPerNode>k__BackingField;
    [CompilerGeneratedAttribute]
private ISimilarities <Similarity>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlowLog <SlowLog>k__BackingField;
    [CompilerGeneratedAttribute]
private ITranslogSettings <Translog>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <UnassignedNodeLeftDelayedTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultPipeline>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FinalPipeline>k__BackingField;
    public IAnalysis Analysis { get; public set; }
    public AutoExpandReplicas AutoExpandReplicas { get; public set; }
    public Nullable`1<bool> BlocksMetadata { get; public set; }
    public Nullable`1<bool> BlocksRead { get; public set; }
    public Nullable`1<bool> BlocksReadOnly { get; public set; }
    public Nullable`1<bool> BlocksWrite { get; public set; }
    public Nullable`1<bool> BlocksReadOnlyAllowDelete { get; public set; }
    public IMergeSettings Merge { get; public set; }
    public Nullable`1<int> NumberOfReplicas { get; public set; }
    public Nullable`1<int> Priority { get; public set; }
    public Union`2<int, RecoveryInitialShards> RecoveryInitialShards { get; public set; }
    public Time RefreshInterval { get; public set; }
    public Nullable`1<bool> RequestsCacheEnabled { get; public set; }
    public Nullable`1<int> RoutingAllocationTotalShardsPerNode { get; public set; }
    public ISimilarities Similarity { get; public set; }
    public ISlowLog SlowLog { get; public set; }
    public ITranslogSettings Translog { get; public set; }
    public Time UnassignedNodeLeftDelayedTimeout { get; public set; }
    public string DefaultPipeline { get; public set; }
    public string FinalPipeline { get; public set; }
    public DynamicIndexSettings(IDictionary`2<string, object> container);
    [CompilerGeneratedAttribute]
public sealed virtual IAnalysis get_Analysis();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analysis(IAnalysis value);
    [CompilerGeneratedAttribute]
public sealed virtual AutoExpandReplicas get_AutoExpandReplicas();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AutoExpandReplicas(AutoExpandReplicas value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_BlocksMetadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BlocksMetadata(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_BlocksRead();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BlocksRead(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_BlocksReadOnly();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BlocksReadOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_BlocksWrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BlocksWrite(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_BlocksReadOnlyAllowDelete();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BlocksReadOnlyAllowDelete(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IMergeSettings get_Merge();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Merge(IMergeSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NumberOfReplicas();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NumberOfReplicas(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<int, RecoveryInitialShards> get_RecoveryInitialShards();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RecoveryInitialShards(Union`2<int, RecoveryInitialShards> value);
    public sealed virtual Time get_RefreshInterval();
    public sealed virtual void set_RefreshInterval(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_RequestsCacheEnabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequestsCacheEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_RoutingAllocationTotalShardsPerNode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RoutingAllocationTotalShardsPerNode(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISimilarities get_Similarity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Similarity(ISimilarities value);
    [CompilerGeneratedAttribute]
public sealed virtual ISlowLog get_SlowLog();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SlowLog(ISlowLog value);
    [CompilerGeneratedAttribute]
public sealed virtual ITranslogSettings get_Translog();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Translog(ITranslogSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_UnassignedNodeLeftDelayedTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UnassignedNodeLeftDelayedTimeout(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DefaultPipeline();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultPipeline(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_FinalPipeline();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FinalPipeline(string value);
    public sealed virtual void Add(string setting, object value);
}
public class OpenSearch.Client.DynamicIndexSettingsDescriptor : DynamicIndexSettingsDescriptorBase`2<DynamicIndexSettingsDescriptor, DynamicIndexSettings> {
}
public abstract class OpenSearch.Client.DynamicIndexSettingsDescriptorBase`2 : IsADictionaryDescriptorBase`4<TDescriptor, TIndexSettings, string, object> {
    protected DynamicIndexSettingsDescriptorBase`2(TIndexSettings instance);
    public TDescriptor Setting(string setting, object value);
    public TDescriptor NumberOfReplicas(Nullable`1<int> numberOfReplicas);
    public TDescriptor AutoExpandReplicas(AutoExpandReplicas autoExpandReplicas);
    public TDescriptor DefaultPipeline(string defaultPipeline);
    public TDescriptor FinalPipeline(string finalPipeline);
    public TDescriptor BlocksMetadata(Nullable`1<bool> blocksMetadata);
    public TDescriptor BlocksRead(Nullable`1<bool> blocksRead);
    public TDescriptor BlocksReadOnly(Nullable`1<bool> blocksReadOnly);
    public TDescriptor BlocksWrite(Nullable`1<bool> blocksWrite);
    public TDescriptor BlocksReadOnlyAllowDelete(Nullable`1<bool> blocksReadOnlyAllowDelete);
    public TDescriptor Priority(Nullable`1<int> priority);
    public TDescriptor Merge(Func`2<MergeSettingsDescriptor, IMergeSettings> merge);
    public TDescriptor RecoveryInitialShards(Union`2<int, RecoveryInitialShards> initialShards);
    public TDescriptor RequestsCacheEnabled(Nullable`1<bool> enable);
    public TDescriptor RefreshInterval(Time time);
    public TDescriptor RoutingAllocationTotalShardsPerNode(Nullable`1<int> totalShardsPerNode);
    public TDescriptor SlowLog(Func`2<SlowLogDescriptor, ISlowLog> slowLogSelector);
    public TDescriptor Translog(Func`2<TranslogSettingsDescriptor, ITranslogSettings> translogSelector);
    public TDescriptor UnassignedNodeLeftDelayedTimeout(Time time);
    public TDescriptor Analysis(Func`2<AnalysisDescriptor, IAnalysis> selector);
    public TDescriptor Similarity(Func`2<SimilaritiesDescriptor, IPromise`1<ISimilarities>> selector);
}
internal class OpenSearch.Client.DynamicIndexSettingsFormatter : object {
    private static IndexSettingsDictionaryFormatter Formatter;
    private static DynamicIndexSettingsFormatter();
    public sealed virtual IDynamicIndexSettings Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IDynamicIndexSettings value, IJsonFormatterResolver formatterResolver);
    private static object AsArrayOrSingleItem(IEnumerable`1<T> items);
    private static Dictionary`2<string, object> Flatten(Dictionary`2<string, object> original, string prefix, Dictionary`2<string, object> current);
    private static void SetKnownIndexSettings(JsonReader& reader, IJsonFormatterResolver formatterResolver, IIndexSettings s);
    private static T ReserializeAndDeserialize(object setting, IJsonFormatterResolver formatterResolver);
    private static void Set(IIndexSettings s, IDictionary`2<string, object> settings, string key, Action`1<T> assign, IJsonFormatterResolver formatterResolver);
    private static T ConvertToValue(object setting, IJsonFormatterResolver formatterResolver);
    private static void SetArray(IIndexSettings s, IDictionary`2<string, object> settings, string key, Action`1<TArray> assign, Action`1<TItem> assign2, IJsonFormatterResolver formatterResolver);
    [CompilerGeneratedAttribute]
internal static void <Serialize>g__Set|2_0(string knownKey, object newValue, <>c__DisplayClass2_0& );
}
[StringEnumAttribute]
public enum OpenSearch.Client.DynamicMapping : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DynamicMapping Strict;
}
internal class OpenSearch.Client.DynamicMappingFormatter : object {
    private static AutomataDictionary Values;
    private static DynamicMappingFormatter();
    public sealed virtual void Serialize(JsonWriter& writer, Union`2<bool, DynamicMapping> value, IJsonFormatterResolver formatterResolver);
    public sealed virtual Union`2<bool, DynamicMapping> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public abstract class OpenSearch.Client.DynamicResponseBase : ResponseBase {
    [CompilerGeneratedAttribute]
private DynamicDictionary <OpenSearch.Client.IDynamicResponse.BackingDictionary>k__BackingField;
    [IgnoreDataMemberAttribute]
protected IDynamicResponse Self { get; }
    private DynamicDictionary OpenSearch.Client.IDynamicResponse.BackingDictionary { get; private set; }
    protected IDynamicResponse get_Self();
    public T Get(string path);
    [CompilerGeneratedAttribute]
private sealed virtual override DynamicDictionary OpenSearch.Client.IDynamicResponse.get_BackingDictionary();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDynamicResponse.set_BackingDictionary(DynamicDictionary value);
}
internal class OpenSearch.Client.DynamicResponseFormatter`1 : object {
    public sealed virtual TResponse Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TResponse value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.DynamicTemplate : object {
    [CompilerGeneratedAttribute]
private IProperty <Mapping>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Match>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MatchMappingType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MatchType> <MatchPattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathUnmatch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Unmatch>k__BackingField;
    public IProperty Mapping { get; public set; }
    public string Match { get; public set; }
    public string MatchMappingType { get; public set; }
    public Nullable`1<MatchType> MatchPattern { get; public set; }
    public string PathMatch { get; public set; }
    public string PathUnmatch { get; public set; }
    public string Unmatch { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IProperty get_Mapping();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mapping(IProperty value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Match();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Match(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MatchMappingType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MatchMappingType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<MatchType> get_MatchPattern();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MatchPattern(Nullable`1<MatchType> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PathMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PathMatch(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PathUnmatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PathUnmatch(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Unmatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Unmatch(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.DynamicTemplatesFormatter")]
public class OpenSearch.Client.DynamicTemplateContainer : IsADictionaryBase`2<string, IDynamicTemplate> {
    public DynamicTemplateContainer(IDictionary`2<string, IDynamicTemplate> container);
    public DynamicTemplateContainer(Dictionary`2<string, IDynamicTemplate> container);
    public sealed virtual void Add(string name, IDynamicTemplate dynamicTemplate);
}
public class OpenSearch.Client.DynamicTemplateContainerDescriptor`1 : IsADictionaryDescriptorBase`4<DynamicTemplateContainerDescriptor`1<T>, IDynamicTemplateContainer, string, IDynamicTemplate> {
    public DynamicTemplateContainerDescriptor`1<T> DynamicTemplate(string name, Func`2<DynamicTemplateDescriptor`1<T>, IDynamicTemplate> selector);
}
public class OpenSearch.Client.DynamicTemplateDescriptor`1 : DescriptorBase`2<DynamicTemplateDescriptor`1<T>, IDynamicTemplate> {
    [CompilerGeneratedAttribute]
private IProperty <OpenSearch.Client.IDynamicTemplate.Mapping>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDynamicTemplate.Match>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDynamicTemplate.MatchMappingType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MatchType> <OpenSearch.Client.IDynamicTemplate.MatchPattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDynamicTemplate.PathMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDynamicTemplate.PathUnmatch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IDynamicTemplate.Unmatch>k__BackingField;
    private IProperty OpenSearch.Client.IDynamicTemplate.Mapping { get; private set; }
    private string OpenSearch.Client.IDynamicTemplate.Match { get; private set; }
    private string OpenSearch.Client.IDynamicTemplate.MatchMappingType { get; private set; }
    private Nullable`1<MatchType> OpenSearch.Client.IDynamicTemplate.MatchPattern { get; private set; }
    private string OpenSearch.Client.IDynamicTemplate.PathMatch { get; private set; }
    private string OpenSearch.Client.IDynamicTemplate.PathUnmatch { get; private set; }
    private string OpenSearch.Client.IDynamicTemplate.Unmatch { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IProperty OpenSearch.Client.IDynamicTemplate.get_Mapping();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDynamicTemplate.set_Mapping(IProperty value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDynamicTemplate.get_Match();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDynamicTemplate.set_Match(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDynamicTemplate.get_MatchMappingType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDynamicTemplate.set_MatchMappingType(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<MatchType> OpenSearch.Client.IDynamicTemplate.get_MatchPattern();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDynamicTemplate.set_MatchPattern(Nullable`1<MatchType> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDynamicTemplate.get_PathMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDynamicTemplate.set_PathMatch(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDynamicTemplate.get_PathUnmatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDynamicTemplate.set_PathUnmatch(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IDynamicTemplate.get_Unmatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDynamicTemplate.set_Unmatch(string value);
    public DynamicTemplateDescriptor`1<T> Match(string match);
    public DynamicTemplateDescriptor`1<T> MatchPattern(Nullable`1<MatchType> matchPattern);
    public DynamicTemplateDescriptor`1<T> Unmatch(string unMatch);
    public DynamicTemplateDescriptor`1<T> MatchMappingType(string matchMappingType);
    public DynamicTemplateDescriptor`1<T> PathMatch(string pathMatch);
    public DynamicTemplateDescriptor`1<T> PathUnmatch(string pathUnmatch);
    public DynamicTemplateDescriptor`1<T> Mapping(Func`2<SingleMappingSelector`1<T>, IProperty> mappingSelector);
}
internal class OpenSearch.Client.DynamicTemplatesFormatter : object {
    public sealed virtual DynamicTemplateContainer Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, DynamicTemplateContainer value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.DynamicTemplatesInterfaceFormatter : object {
    public sealed virtual IDynamicTemplateContainer Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IDynamicTemplateContainer value, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.EdgeNGramSide : Enum {
    public int value__;
    [EnumMemberAttribute]
public static EdgeNGramSide Front;
    [EnumMemberAttribute]
public static EdgeNGramSide Back;
}
public class OpenSearch.Client.EdgeNGramTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EdgeNGramSide> <Side>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreserveOriginal>k__BackingField;
    public Nullable`1<int> MaxGram { get; public set; }
    public Nullable`1<int> MinGram { get; public set; }
    public Nullable`1<EdgeNGramSide> Side { get; public set; }
    public Nullable`1<bool> PreserveOriginal { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxGram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinGram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<EdgeNGramSide> get_Side();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Side(Nullable`1<EdgeNGramSide> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PreserveOriginal();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreserveOriginal(Nullable`1<bool> value);
}
public class OpenSearch.Client.EdgeNGramTokenFilterDescriptor : TokenFilterDescriptorBase`2<EdgeNGramTokenFilterDescriptor, IEdgeNGramTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IEdgeNGramTokenFilter.MaxGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IEdgeNGramTokenFilter.MinGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<EdgeNGramSide> <OpenSearch.Client.IEdgeNGramTokenFilter.Side>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IEdgeNGramTokenFilter.PreserveOriginal>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.IEdgeNGramTokenFilter.MaxGram { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IEdgeNGramTokenFilter.MinGram { get; private set; }
    private Nullable`1<EdgeNGramSide> OpenSearch.Client.IEdgeNGramTokenFilter.Side { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IEdgeNGramTokenFilter.PreserveOriginal { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IEdgeNGramTokenFilter.get_MaxGram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IEdgeNGramTokenFilter.set_MaxGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IEdgeNGramTokenFilter.get_MinGram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IEdgeNGramTokenFilter.set_MinGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<EdgeNGramSide> OpenSearch.Client.IEdgeNGramTokenFilter.get_Side();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IEdgeNGramTokenFilter.set_Side(Nullable`1<EdgeNGramSide> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IEdgeNGramTokenFilter.get_PreserveOriginal();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IEdgeNGramTokenFilter.set_PreserveOriginal(Nullable`1<bool> value);
    public EdgeNGramTokenFilterDescriptor MinGram(Nullable`1<int> minGram);
    public EdgeNGramTokenFilterDescriptor MaxGram(Nullable`1<int> maxGram);
    public EdgeNGramTokenFilterDescriptor Side(Nullable`1<EdgeNGramSide> side);
    public EdgeNGramTokenFilterDescriptor PreserveOriginal(Nullable`1<bool> preserveOriginal);
}
public class OpenSearch.Client.EdgeNGramTokenizer : TokenizerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinGram>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<TokenChar> <TokenChars>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomTokenChars>k__BackingField;
    public Nullable`1<int> MaxGram { get; public set; }
    public Nullable`1<int> MinGram { get; public set; }
    public IEnumerable`1<TokenChar> TokenChars { get; public set; }
    public string CustomTokenChars { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxGram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinGram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<TokenChar> get_TokenChars();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TokenChars(IEnumerable`1<TokenChar> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CustomTokenChars();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomTokenChars(string value);
}
public class OpenSearch.Client.EdgeNGramTokenizerDescriptor : TokenizerDescriptorBase`2<EdgeNGramTokenizerDescriptor, IEdgeNGramTokenizer> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IEdgeNGramTokenizer.MaxGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IEdgeNGramTokenizer.MinGram>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<TokenChar> <OpenSearch.Client.IEdgeNGramTokenizer.TokenChars>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IEdgeNGramTokenizer.CustomTokenChars>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.IEdgeNGramTokenizer.MaxGram { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IEdgeNGramTokenizer.MinGram { get; private set; }
    private IEnumerable`1<TokenChar> OpenSearch.Client.IEdgeNGramTokenizer.TokenChars { get; private set; }
    private string OpenSearch.Client.IEdgeNGramTokenizer.CustomTokenChars { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IEdgeNGramTokenizer.get_MaxGram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IEdgeNGramTokenizer.set_MaxGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IEdgeNGramTokenizer.get_MinGram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IEdgeNGramTokenizer.set_MinGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<TokenChar> OpenSearch.Client.IEdgeNGramTokenizer.get_TokenChars();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IEdgeNGramTokenizer.set_TokenChars(IEnumerable`1<TokenChar> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IEdgeNGramTokenizer.get_CustomTokenChars();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IEdgeNGramTokenizer.set_CustomTokenChars(string value);
    public EdgeNGramTokenizerDescriptor MinGram(Nullable`1<int> minGram);
    public EdgeNGramTokenizerDescriptor MaxGram(Nullable`1<int> maxGram);
    public EdgeNGramTokenizerDescriptor TokenChars(IEnumerable`1<TokenChar> tokenChars);
    public EdgeNGramTokenizerDescriptor TokenChars(TokenChar[] tokenChars);
    public EdgeNGramTokenizerDescriptor CustomTokenChars(string customTokenChars);
}
public class OpenSearch.Client.ElisionTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Articles>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ArticlesCase>k__BackingField;
    public IEnumerable`1<string> Articles { get; public set; }
    public Nullable`1<bool> ArticlesCase { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Articles();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Articles(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ArticlesCase();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ArticlesCase(Nullable`1<bool> value);
}
public class OpenSearch.Client.ElisionTokenFilterDescriptor : TokenFilterDescriptorBase`2<ElisionTokenFilterDescriptor, IElisionTokenFilter> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IElisionTokenFilter.Articles>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IElisionTokenFilter.ArticlesCase>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.IElisionTokenFilter.Articles { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IElisionTokenFilter.ArticlesCase { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IElisionTokenFilter.get_Articles();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IElisionTokenFilter.set_Articles(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IElisionTokenFilter.get_ArticlesCase();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IElisionTokenFilter.set_ArticlesCase(Nullable`1<bool> value);
    public ElisionTokenFilterDescriptor Articles(IEnumerable`1<string> articles);
    public ElisionTokenFilterDescriptor Articles(String[] articles);
    public ElisionTokenFilterDescriptor ArticlesCase(Nullable`1<bool> articlesCase);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.EnvelopeGeoShape>")]
public class OpenSearch.Client.EnvelopeGeoShape : GeoShapeBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<GeoCoordinate> <Coordinates>k__BackingField;
    public IEnumerable`1<GeoCoordinate> Coordinates { get; public set; }
    public EnvelopeGeoShape(IEnumerable`1<GeoCoordinate> coordinates);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<GeoCoordinate> get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(IEnumerable`1<GeoCoordinate> value);
}
[AttributeUsageAttribute("128")]
public class OpenSearch.Client.EpochDateTimeAttribute : Attribute {
}
internal class OpenSearch.Client.EpochDateTimeFormatter : object {
    public static EpochDateTimeFormatter Instance;
    private static EpochDateTimeFormatter();
    public sealed virtual DateTime Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, DateTime value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.EpochDateTimeOffsetFormatter : object {
    public sealed virtual DateTimeOffset Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public virtual void Serialize(JsonWriter& writer, DateTimeOffset value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.EwmaModel : object {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Alpha>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMovingAverageModel.Name>k__BackingField;
    public Nullable`1<float> Alpha { get; public set; }
    private string OpenSearch.Client.IMovingAverageModel.Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_Alpha();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Alpha(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMovingAverageModel.get_Name();
}
public class OpenSearch.Client.EwmaModelDescriptor : DescriptorBase`2<EwmaModelDescriptor, IEwmaModel> {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IEwmaModel.Alpha>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMovingAverageModel.Name>k__BackingField;
    private Nullable`1<float> OpenSearch.Client.IEwmaModel.Alpha { get; private set; }
    private string OpenSearch.Client.IMovingAverageModel.Name { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IEwmaModel.get_Alpha();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IEwmaModel.set_Alpha(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMovingAverageModel.get_Name();
    public EwmaModelDescriptor Alpha(Nullable`1<float> alpha);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.ExceptionExtensions : object {
    [ExtensionAttribute]
internal static T ThrowWhen(T object, Func`2<T, bool> predicate, string exceptionMessage);
}
public class OpenSearch.Client.ExecutePainlessScriptDescriptor : RequestDescriptorBase`3<ExecutePainlessScriptDescriptor, ExecutePainlessScriptRequestParameters, IExecutePainlessScriptRequest> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IExecutePainlessScriptRequest.Context>k__BackingField;
    [CompilerGeneratedAttribute]
private IPainlessContextSetup <OpenSearch.Client.IExecutePainlessScriptRequest.ContextSetup>k__BackingField;
    [CompilerGeneratedAttribute]
private IInlineScript <OpenSearch.Client.IExecutePainlessScriptRequest.Script>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private string OpenSearch.Client.IExecutePainlessScriptRequest.Context { get; private set; }
    private IPainlessContextSetup OpenSearch.Client.IExecutePainlessScriptRequest.ContextSetup { get; private set; }
    private IInlineScript OpenSearch.Client.IExecutePainlessScriptRequest.Script { get; private set; }
    internal virtual ApiUrls get_ApiUrls();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IExecutePainlessScriptRequest.get_Context();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IExecutePainlessScriptRequest.set_Context(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPainlessContextSetup OpenSearch.Client.IExecutePainlessScriptRequest.get_ContextSetup();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IExecutePainlessScriptRequest.set_ContextSetup(IPainlessContextSetup value);
    [CompilerGeneratedAttribute]
private sealed virtual override IInlineScript OpenSearch.Client.IExecutePainlessScriptRequest.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IExecutePainlessScriptRequest.set_Script(IInlineScript value);
    public ExecutePainlessScriptDescriptor Script(Func`2<InlineScriptDescriptor, IInlineScript> selector);
    public ExecutePainlessScriptDescriptor ContextSetup(Func`2<PainlessContextSetupDescriptor, IPainlessContextSetup> selector);
    public ExecutePainlessScriptDescriptor Context(string context);
}
public class OpenSearch.Client.ExecutePainlessScriptRequest : PlainRequestBase`1<ExecutePainlessScriptRequestParameters> {
    [CompilerGeneratedAttribute]
private string <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private IPainlessContextSetup <ContextSetup>k__BackingField;
    [CompilerGeneratedAttribute]
private IInlineScript <Script>k__BackingField;
    public string Context { get; public set; }
    public IPainlessContextSetup ContextSetup { get; public set; }
    public IInlineScript Script { get; public set; }
    protected IExecutePainlessScriptRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Context();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Context(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IPainlessContextSetup get_ContextSetup();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContextSetup(IPainlessContextSetup value);
    [CompilerGeneratedAttribute]
public sealed virtual IInlineScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IInlineScript value);
    protected IExecutePainlessScriptRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
}
public class OpenSearch.Client.ExecutePainlessScriptResponse`1 : ResponseBase {
    [CompilerGeneratedAttribute]
private TResult <Result>k__BackingField;
    [DataMemberAttribute]
public TResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(TResult value);
}
public class OpenSearch.Client.ExistsQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    public Field Field { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IExistsQuery q);
}
public class OpenSearch.Client.ExistsQueryDescriptor`1 : QueryDescriptorBase`2<ExistsQueryDescriptor`1<T>, IExistsQuery> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IExistsQuery.Field>k__BackingField;
    protected bool Conditionless { get; }
    private Field OpenSearch.Client.IExistsQuery.Field { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IExistsQuery.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IExistsQuery.set_Field(Field value);
    public ExistsQueryDescriptor`1<T> Field(Field field);
    public ExistsQueryDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
}
[DataContractAttribute]
public class OpenSearch.Client.ExistsResponse : ResponseBase {
    public bool Exists { get; }
    public bool get_Exists();
}
[DataContractAttribute]
public class OpenSearch.Client.ExplainAnalyzeToken : object {
    [CompilerGeneratedAttribute]
private string <Bytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <EndOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Keyword>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <PositionLength>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StartOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public string Bytes { get; internal set; }
    [DataMemberAttribute]
public long EndOffset { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<bool> Keyword { get; internal set; }
    [DataMemberAttribute]
public long Position { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<long> PositionLength { get; internal set; }
    [DataMemberAttribute]
public long StartOffset { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<long> TermFrequency { get; internal set; }
    [DataMemberAttribute]
public string Token { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Bytes();
    [CompilerGeneratedAttribute]
internal void set_Bytes(string value);
    [CompilerGeneratedAttribute]
public long get_EndOffset();
    [CompilerGeneratedAttribute]
internal void set_EndOffset(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Keyword();
    [CompilerGeneratedAttribute]
internal void set_Keyword(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public long get_Position();
    [CompilerGeneratedAttribute]
internal void set_Position(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_PositionLength();
    [CompilerGeneratedAttribute]
internal void set_PositionLength(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public long get_StartOffset();
    [CompilerGeneratedAttribute]
internal void set_StartOffset(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TermFrequency();
    [CompilerGeneratedAttribute]
internal void set_TermFrequency(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
internal void set_Token(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
public class OpenSearch.Client.ExplainDescriptor`1 : RequestDescriptorBase`3<ExplainDescriptor`1<TDocument>, ExplainRequestParameters, IExplainRequest`1<TDocument>> {
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IExplainRequest.StoredFields>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IExplainRequest.Query>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.IExplainRequest.Index { get; }
    private Id OpenSearch.Client.IExplainRequest.Id { get; }
    protected HttpMethod HttpMethod { get; }
    private Fields OpenSearch.Client.IExplainRequest.StoredFields { get; private set; }
    private QueryContainer OpenSearch.Client.IExplainRequest.Query { get; private set; }
    public ExplainDescriptor`1(IndexName index, Id id);
    public ExplainDescriptor`1(Id id);
    public ExplainDescriptor`1(TDocument documentWithId, IndexName index, Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IExplainRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.IExplainRequest.get_Id();
    public ExplainDescriptor`1<TDocument> Index(IndexName index);
    public ExplainDescriptor`1<TDocument> Index();
    public ExplainDescriptor`1<TDocument> AnalyzeWildcard(Nullable`1<bool> analyzewildcard);
    public ExplainDescriptor`1<TDocument> Analyzer(string analyzer);
    public ExplainDescriptor`1<TDocument> DefaultOperator(Nullable`1<DefaultOperator> defaultoperator);
    public ExplainDescriptor`1<TDocument> Df(string df);
    public ExplainDescriptor`1<TDocument> Lenient(Nullable`1<bool> lenient);
    public ExplainDescriptor`1<TDocument> Preference(string preference);
    public ExplainDescriptor`1<TDocument> QueryOnQueryString(string queryonquerystring);
    public ExplainDescriptor`1<TDocument> Routing(Routing routing);
    public ExplainDescriptor`1<TDocument> SourceEnabled(Nullable`1<bool> sourceenabled);
    public ExplainDescriptor`1<TDocument> SourceExcludes(Fields sourceexcludes);
    public ExplainDescriptor`1<TDocument> SourceExcludes(Expression`1[] fields);
    public ExplainDescriptor`1<TDocument> SourceIncludes(Fields sourceincludes);
    public ExplainDescriptor`1<TDocument> SourceIncludes(Expression`1[] fields);
    protected virtual HttpMethod get_HttpMethod();
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IExplainRequest.get_StoredFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IExplainRequest.set_StoredFields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IExplainRequest.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IExplainRequest.set_Query(QueryContainer value);
    public ExplainDescriptor`1<TDocument> Query(Func`2<QueryContainerDescriptor`1<TDocument>, QueryContainer> querySelector);
    public ExplainDescriptor`1<TDocument> StoredFields(Func`2<FieldsDescriptor`1<TDocument>, IPromise`1<Fields>> fields);
    public ExplainDescriptor`1<TDocument> StoredFields(Fields fields);
}
public class OpenSearch.Client.ExplainRequest : PlainRequestBase`1<ExplainRequestParameters> {
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <StoredFields>k__BackingField;
    protected IExplainRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IExplainRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IExplainRequest.Id { get; }
    public Nullable`1<bool> AnalyzeWildcard { get; public set; }
    public string Analyzer { get; public set; }
    public Nullable`1<DefaultOperator> DefaultOperator { get; public set; }
    public string Df { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public string Preference { get; public set; }
    public string QueryOnQueryString { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<bool> SourceEnabled { get; public set; }
    public Fields SourceExcludes { get; public set; }
    public Fields SourceIncludes { get; public set; }
    public QueryContainer Query { get; public set; }
    public Fields StoredFields { get; public set; }
    public ExplainRequest(IndexName index, Id id);
    protected IExplainRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IExplainRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.IExplainRequest.get_Id();
    public Nullable`1<bool> get_AnalyzeWildcard();
    public void set_AnalyzeWildcard(Nullable`1<bool> value);
    public string get_Analyzer();
    public void set_Analyzer(string value);
    public Nullable`1<DefaultOperator> get_DefaultOperator();
    public void set_DefaultOperator(Nullable`1<DefaultOperator> value);
    public string get_Df();
    public void set_Df(string value);
    public Nullable`1<bool> get_Lenient();
    public void set_Lenient(Nullable`1<bool> value);
    public string get_Preference();
    public void set_Preference(string value);
    public string get_QueryOnQueryString();
    public void set_QueryOnQueryString(string value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Nullable`1<bool> get_SourceEnabled();
    public void set_SourceEnabled(Nullable`1<bool> value);
    public Fields get_SourceExcludes();
    public void set_SourceExcludes(Fields value);
    public Fields get_SourceIncludes();
    public void set_SourceIncludes(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_StoredFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StoredFields(Fields value);
}
public class OpenSearch.Client.ExplainRequest`1 : ExplainRequest {
    protected IExplainRequest`1<TDocument> TypedSelf { get; }
    protected HttpMethod HttpMethod { get; }
    public ExplainRequest`1(IndexName index, Id id);
    public ExplainRequest`1(Id id);
    public ExplainRequest`1(TDocument documentWithId, IndexName index, Id id);
    protected IExplainRequest`1<TDocument> get_TypedSelf();
    protected virtual HttpMethod get_HttpMethod();
}
[DataContractAttribute]
public class OpenSearch.Client.ExplainResponse`1 : ResponseBase {
    [CompilerGeneratedAttribute]
private ExplanationDetail <Explanation>k__BackingField;
    [CompilerGeneratedAttribute]
private IInlineGet`1<TDocument> <Get>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Matched>k__BackingField;
    [DataMemberAttribute]
public ExplanationDetail Explanation { get; internal set; }
    [DataMemberAttribute]
public IInlineGet`1<TDocument> Get { get; internal set; }
    [DataMemberAttribute]
public bool Matched { get; internal set; }
    [CompilerGeneratedAttribute]
public ExplanationDetail get_Explanation();
    [CompilerGeneratedAttribute]
internal void set_Explanation(ExplanationDetail value);
    [CompilerGeneratedAttribute]
public sealed virtual IInlineGet`1<TDocument> get_Get();
    [CompilerGeneratedAttribute]
internal void set_Get(IInlineGet`1<TDocument> value);
    [CompilerGeneratedAttribute]
public bool get_Matched();
    [CompilerGeneratedAttribute]
internal void set_Matched(bool value);
}
[DataContractAttribute]
public class OpenSearch.Client.Explanation : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ExplanationDetail> <Details>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Value>k__BackingField;
    [DataMemberAttribute]
public string Description { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ExplanationDetail> Details { get; internal set; }
    [DataMemberAttribute]
public float Value { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
internal void set_Description(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ExplanationDetail> get_Details();
    [CompilerGeneratedAttribute]
internal void set_Details(IReadOnlyCollection`1<ExplanationDetail> value);
    [CompilerGeneratedAttribute]
public float get_Value();
    [CompilerGeneratedAttribute]
internal void set_Value(float value);
}
[DataContractAttribute]
public class OpenSearch.Client.ExplanationDetail : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ExplanationDetail> <Details>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Value>k__BackingField;
    [DataMemberAttribute]
public string Description { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ExplanationDetail> Details { get; internal set; }
    [DataMemberAttribute]
public float Value { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
internal void set_Description(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ExplanationDetail> get_Details();
    [CompilerGeneratedAttribute]
internal void set_Details(IReadOnlyCollection`1<ExplanationDetail> value);
    [CompilerGeneratedAttribute]
public float get_Value();
    [CompilerGeneratedAttribute]
internal void set_Value(float value);
}
public class OpenSearch.Client.ExponentialDateDecayFunction : ExponentialDecayFunctionBase`2<DateMath, Time> {
}
public class OpenSearch.Client.ExponentialDecayFunction : ExponentialDecayFunctionBase`2<Nullable`1<double>, Nullable`1<double>> {
}
public abstract class OpenSearch.Client.ExponentialDecayFunctionBase`2 : DecayFunctionBase`2<TOrigin, TScale> {
    protected string DecayType { get; }
    protected virtual string get_DecayType();
}
public class OpenSearch.Client.ExponentialDecayFunctionDescriptor`3 : DecayFunctionDescriptorBase`4<ExponentialDecayFunctionDescriptor`3<TOrigin, TScale, T>, TOrigin, TScale, T> {
    protected string DecayType { get; }
    protected virtual string get_DecayType();
}
public class OpenSearch.Client.ExponentialGeoDecayFunction : ExponentialDecayFunctionBase`2<GeoLocation, Distance> {
}
[ExtensionAttribute]
public static class OpenSearch.Client.ExpressionExtensions : object {
    [ExtensionAttribute]
public static Expression`1<Func`2<T, object>> AppendSuffix(Expression`1<Func`2<T, object>> expression, string suffix);
    [ExtensionAttribute]
public static Expression`1<Func`2<T, TValue>> AppendSuffix(Expression`1<Func`2<T, TValue>> expression, string suffix);
    [ExtensionAttribute]
internal static object ComparisonValueFromExpression(Expression expression, Type& type, Boolean& cachable);
}
public class OpenSearch.Client.ExtendedBounds`1 : object {
    [CompilerGeneratedAttribute]
private T <Maximum>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Minimum>k__BackingField;
    [DataMemberAttribute]
public T Maximum { get; public set; }
    [DataMemberAttribute]
public T Minimum { get; public set; }
    [CompilerGeneratedAttribute]
public T get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(T value);
    [CompilerGeneratedAttribute]
public T get_Minimum();
    [CompilerGeneratedAttribute]
public void set_Minimum(T value);
}
public class OpenSearch.Client.ExtendedStatsAggregate : StatsAggregate {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <StdDeviation>k__BackingField;
    [CompilerGeneratedAttribute]
private StandardDeviationBounds <StdDeviationBounds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <SumOfSquares>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Variance>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <VariancePopulation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <VarianceSampling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <StdDeviationPopulation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <StdDeviationSampling>k__BackingField;
    public Nullable`1<double> StdDeviation { get; public set; }
    public StandardDeviationBounds StdDeviationBounds { get; public set; }
    public Nullable`1<double> SumOfSquares { get; public set; }
    public Nullable`1<double> Variance { get; public set; }
    public Nullable`1<double> VariancePopulation { get; public set; }
    public Nullable`1<double> VarianceSampling { get; public set; }
    public Nullable`1<double> StdDeviationPopulation { get; public set; }
    public Nullable`1<double> StdDeviationSampling { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_StdDeviation();
    [CompilerGeneratedAttribute]
public void set_StdDeviation(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public StandardDeviationBounds get_StdDeviationBounds();
    [CompilerGeneratedAttribute]
public void set_StdDeviationBounds(StandardDeviationBounds value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_SumOfSquares();
    [CompilerGeneratedAttribute]
public void set_SumOfSquares(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Variance();
    [CompilerGeneratedAttribute]
public void set_Variance(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_VariancePopulation();
    [CompilerGeneratedAttribute]
public void set_VariancePopulation(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_VarianceSampling();
    [CompilerGeneratedAttribute]
public void set_VarianceSampling(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_StdDeviationPopulation();
    [CompilerGeneratedAttribute]
public void set_StdDeviationPopulation(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_StdDeviationSampling();
    [CompilerGeneratedAttribute]
public void set_StdDeviationSampling(Nullable`1<double> value);
}
public class OpenSearch.Client.ExtendedStatsAggregation : FormattableMetricAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Sigma>k__BackingField;
    public Nullable`1<double> Sigma { get; public set; }
    public ExtendedStatsAggregation(string name, Field field);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Sigma();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sigma(Nullable`1<double> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.ExtendedStatsAggregationDescriptor`1 : FormattableMetricAggregationDescriptorBase`3<ExtendedStatsAggregationDescriptor`1<T>, IExtendedStatsAggregation, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IExtendedStatsAggregation.Sigma>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IExtendedStatsAggregation.Sigma { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IExtendedStatsAggregation.get_Sigma();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IExtendedStatsAggregation.set_Sigma(Nullable`1<double> value);
    public ExtendedStatsAggregationDescriptor`1<T> Sigma(Nullable`1<double> sigma);
}
public class OpenSearch.Client.ExtendedStatsBucketAggregation : PipelineAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Sigma>k__BackingField;
    public Nullable`1<double> Sigma { get; public set; }
    public ExtendedStatsBucketAggregation(string name, SingleBucketsPath bucketsPath);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Sigma();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sigma(Nullable`1<double> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.ExtendedStatsBucketAggregationDescriptor : PipelineAggregationDescriptorBase`3<ExtendedStatsBucketAggregationDescriptor, IExtendedStatsBucketAggregation, SingleBucketsPath> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IExtendedStatsBucketAggregation.Sigma>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IExtendedStatsBucketAggregation.Sigma { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IExtendedStatsBucketAggregation.get_Sigma();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IExtendedStatsBucketAggregation.set_Sigma(Nullable`1<double> value);
    public ExtendedStatsBucketAggregationDescriptor Sigma(Nullable`1<double> sigma);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.Extensions : object {
    private static ConcurrentDictionary`2<string, object> EnumCache;
    private static Extensions();
    [ExtensionAttribute]
internal static bool NotWritable(QueryContainer q);
    [ExtensionAttribute]
internal static bool NotWritable(IEnumerable`1<QueryContainer> qs);
    [ExtensionAttribute]
internal static TReturn InvokeOrDefault(Func`2<T, TReturn> func, T default);
    [ExtensionAttribute]
internal static TReturn InvokeOrDefault(Func`3<T1, T2, TReturn> func, T1 default, T2 param2);
    [ExtensionAttribute]
internal static IEnumerable`1<T> DistinctBy(IEnumerable`1<T> items, Func`2<T, TKey> property);
    [ExtensionAttribute]
internal static string ToEnumValue(T enumValue);
    [ExtensionAttribute]
internal static Nullable`1<T> ToEnum(string str, StringComparison comparison);
    [ExtensionAttribute]
internal static bool IsNullOrEmpty(IndexName value);
    [ExtensionAttribute]
internal static bool IsNullable(Type type);
    [ExtensionAttribute]
internal static void ThrowIfNullOrEmpty(string object, string parameterName, string when);
    [ExtensionAttribute]
internal static void ThrowIfEmpty(IEnumerable`1<T> object, string parameterName);
    [ExtensionAttribute]
internal static List`1<T> AsInstanceOrToListOrDefault(IEnumerable`1<T> list);
    [ExtensionAttribute]
internal static List`1<T> AsInstanceOrToListOrNull(IEnumerable`1<T> list);
    [ExtensionAttribute]
internal static List`1<T> EagerConcat(IEnumerable`1<T> list, IEnumerable`1<T> other);
    [ExtensionAttribute]
internal static IEnumerable`1<T> AddIfNotNull(IEnumerable`1<T> list, T other);
    [ExtensionAttribute]
internal static bool HasAny(IEnumerable`1<T> list, Func`2<T, bool> predicate);
    [ExtensionAttribute]
internal static bool HasAny(IEnumerable`1<T> list);
    [ExtensionAttribute]
internal static bool IsEmpty(IEnumerable`1<T> list);
    [ExtensionAttribute]
internal static void ThrowIfNull(T value, string name, string message);
    [ExtensionAttribute]
internal static bool IsNullOrEmpty(string value);
    [ExtensionAttribute]
internal static bool IsNullOrEmptyCommaSeparatedList(string value, String[]& split);
    [ExtensionAttribute]
internal static List`1<T> ToListOrNullIfEmpty(IEnumerable`1<T> enumerable);
    [ExtensionAttribute]
internal static void AddIfNotNull(IList`1<T> list, T item);
    [ExtensionAttribute]
internal static void AddRangeIfNotNull(List`1<T> list, IEnumerable`1<T> item);
    [ExtensionAttribute]
internal static Dictionary`2<TKey, TValue> NullIfNoKeys(Dictionary`2<TKey, TValue> dictionary);
    [AsyncStateMachineAttribute("OpenSearch.Client.Extensions/<ForEachAsync>d__26`2")]
[ExtensionAttribute]
internal static Task ForEachAsync(IEnumerable`1<TSource> lazyList, Func`3<TSource, long, Task`1<TResult>> taskSelector, Action`2<TSource, TResult> resultProcessor, Action`1<Exception> done, int maxDegreeOfParallelism, SemaphoreSlim additionalRateLimiter);
    [AsyncStateMachineAttribute("OpenSearch.Client.Extensions/<ProcessAsync>d__27`2")]
private static Task ProcessAsync(TSource item, Func`3<TSource, long, Task`1<TResult>> taskSelector, Action`2<TSource, TResult> resultProcessor, SemaphoreSlim localRateLimiter, SemaphoreSlim additionalRateLimiter, long page);
    [ExtensionAttribute]
internal static bool NullOrEquals(T o, T other);
}
public class OpenSearch.Client.FailProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Message { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Message(string value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.FailProcessorDescriptor : ProcessorDescriptorBase`2<FailProcessorDescriptor, IFailProcessor> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFailProcessor.Message>k__BackingField;
    protected string Name { get; }
    private string OpenSearch.Client.IFailProcessor.Message { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFailProcessor.get_Message();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFailProcessor.set_Message(string value);
    public FailProcessorDescriptor Message(string message);
}
[JsonFormatterAttribute("OpenSearch.Client.FieldFormatter")]
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.Field : object {
    private object _comparisonValue;
    private Type _type;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CachableExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyInfo <Property>k__BackingField;
    public Nullable`1<double> Boost { get; public set; }
    public string Format { get; public set; }
    public bool CachableExpression { get; }
    public Expression Expression { get; }
    public string Name { get; }
    public PropertyInfo Property { get; }
    internal string DebugDisplay { get; }
    private string PropertyDebug { get; }
    public Field(string name, Nullable`1<double> boost, string format);
    public Field(Expression expression, Nullable`1<double> boost, string format);
    public Field(PropertyInfo property, Nullable`1<double> boost, string format);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Boost();
    [CompilerGeneratedAttribute]
public void set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public string get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(string value);
    [CompilerGeneratedAttribute]
public bool get_CachableExpression();
    [CompilerGeneratedAttribute]
public Expression get_Expression();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public PropertyInfo get_Property();
    internal string get_DebugDisplay();
    public virtual string ToString();
    private string get_PropertyDebug();
    public sealed virtual bool Equals(Field other);
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public Fields And(Field field);
    public Fields And(Expression`1<Func`2<T, TValue>> field, Nullable`1<double> boost, string format);
    public Fields And(Expression`1<Func`2<T, object>> field, Nullable`1<double> boost, string format);
    public Fields And(string field, Nullable`1<double> boost, string format);
    public Fields And(PropertyInfo property, Nullable`1<double> boost, string format);
    private static string ParseFieldName(string name, Nullable`1& boost);
    public static Field op_Implicit(string name);
    public static Field op_Implicit(Expression expression);
    public static Field op_Implicit(PropertyInfo property);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public static bool op_Equality(Field x, Field y);
    public static bool op_Inequality(Field x, Field y);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.FieldAliasProperty : PropertyBase {
    [CompilerGeneratedAttribute]
private Field <Path>k__BackingField;
    public Field Path { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Path(Field value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.FieldAliasPropertyDescriptor`1 : PropertyDescriptorBase`3<FieldAliasPropertyDescriptor`1<T>, IFieldAliasProperty, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IFieldAliasProperty.Path>k__BackingField;
    private Field OpenSearch.Client.IFieldAliasProperty.Path { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IFieldAliasProperty.get_Path();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldAliasProperty.set_Path(Field value);
    public FieldAliasPropertyDescriptor`1<T> Path(Expression`1<Func`2<T, TValue>> field);
    public FieldAliasPropertyDescriptor`1<T> Path(Field field);
}
public class OpenSearch.Client.FieldCapabilities : object {
    [CompilerGeneratedAttribute]
private bool <Aggregatable>k__BackingField;
    [CompilerGeneratedAttribute]
private Indices <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private Indices <NonAggregatableIndices>k__BackingField;
    [CompilerGeneratedAttribute]
private Indices <NonSearchableIndices>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Searchable>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, String[]> <Meta>k__BackingField;
    [DataMemberAttribute]
public bool Aggregatable { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.IndicesFormatter")]
public Indices Indices { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.IndicesFormatter")]
public Indices NonAggregatableIndices { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.IndicesFormatter")]
public Indices NonSearchableIndices { get; internal set; }
    [DataMemberAttribute]
public bool Searchable { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, String[]> Meta { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_Aggregatable();
    [CompilerGeneratedAttribute]
internal void set_Aggregatable(bool value);
    [CompilerGeneratedAttribute]
public Indices get_Indices();
    [CompilerGeneratedAttribute]
internal void set_Indices(Indices value);
    [CompilerGeneratedAttribute]
public Indices get_NonAggregatableIndices();
    [CompilerGeneratedAttribute]
internal void set_NonAggregatableIndices(Indices value);
    [CompilerGeneratedAttribute]
public Indices get_NonSearchableIndices();
    [CompilerGeneratedAttribute]
internal void set_NonSearchableIndices(Indices value);
    [CompilerGeneratedAttribute]
public bool get_Searchable();
    [CompilerGeneratedAttribute]
internal void set_Searchable(bool value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, String[]> get_Meta();
    [CompilerGeneratedAttribute]
internal void set_Meta(IReadOnlyDictionary`2<string, String[]> value);
}
public class OpenSearch.Client.FieldCapabilitiesDescriptor : RequestDescriptorBase`3<FieldCapabilitiesDescriptor, FieldCapabilitiesRequestParameters, IFieldCapabilitiesRequest> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IFieldCapabilitiesRequest.IndexFilter>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IFieldCapabilitiesRequest.Index { get; }
    private QueryContainer OpenSearch.Client.IFieldCapabilitiesRequest.IndexFilter { get; private set; }
    protected HttpMethod HttpMethod { get; }
    public FieldCapabilitiesDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IFieldCapabilitiesRequest.get_Index();
    public FieldCapabilitiesDescriptor Index(Indices index);
    public FieldCapabilitiesDescriptor Index();
    public FieldCapabilitiesDescriptor AllIndices();
    public FieldCapabilitiesDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public FieldCapabilitiesDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public FieldCapabilitiesDescriptor Fields(Fields fields);
    public FieldCapabilitiesDescriptor Fields(Expression`1[] fields);
    public FieldCapabilitiesDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public FieldCapabilitiesDescriptor IncludeUnmapped(Nullable`1<bool> includeunmapped);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IFieldCapabilitiesRequest.get_IndexFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldCapabilitiesRequest.set_IndexFilter(QueryContainer value);
    protected virtual HttpMethod get_HttpMethod();
    public FieldCapabilitiesDescriptor IndexFilter(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> query);
}
[JsonFormatterAttribute("OpenSearch.Client.FieldCapabilitiesFields/Converter")]
public class OpenSearch.Client.FieldCapabilitiesFields : ResolvableDictionaryProxy`2<Field, FieldTypes> {
    internal FieldCapabilitiesFields(IConnectionConfigurationValues c, IReadOnlyDictionary`2<Field, FieldTypes> b);
}
public class OpenSearch.Client.FieldCapabilitiesRequest : PlainRequestBase`1<FieldCapabilitiesRequestParameters> {
    [CompilerGeneratedAttribute]
private QueryContainer <IndexFilter>k__BackingField;
    protected IFieldCapabilitiesRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IFieldCapabilitiesRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Fields Fields { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> IncludeUnmapped { get; public set; }
    protected HttpMethod HttpMethod { get; }
    public QueryContainer IndexFilter { get; public set; }
    public FieldCapabilitiesRequest(Indices index);
    protected IFieldCapabilitiesRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IFieldCapabilitiesRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Fields get_Fields();
    public void set_Fields(Fields value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeUnmapped();
    public void set_IncludeUnmapped(Nullable`1<bool> value);
    protected virtual HttpMethod get_HttpMethod();
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_IndexFilter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexFilter(QueryContainer value);
}
public class OpenSearch.Client.FieldCapabilitiesResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private FieldCapabilitiesFields <Fields>k__BackingField;
    [DataMemberAttribute]
public FieldCapabilitiesFields Fields { get; internal set; }
    [CompilerGeneratedAttribute]
public FieldCapabilitiesFields get_Fields();
    [CompilerGeneratedAttribute]
internal void set_Fields(FieldCapabilitiesFields value);
}
public class OpenSearch.Client.FieldCollapse : object {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IInnerHits <InnerHits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxConcurrentGroupSearches>k__BackingField;
    public Field Field { get; public set; }
    public IInnerHits InnerHits { get; public set; }
    public Nullable`1<int> MaxConcurrentGroupSearches { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual IInnerHits get_InnerHits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InnerHits(IInnerHits value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxConcurrentGroupSearches();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxConcurrentGroupSearches(Nullable`1<int> value);
}
public class OpenSearch.Client.FieldCollapseDescriptor`1 : DescriptorBase`2<FieldCollapseDescriptor`1<T>, IFieldCollapse> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IFieldCollapse.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IInnerHits <OpenSearch.Client.IFieldCollapse.InnerHits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IFieldCollapse.MaxConcurrentGroupSearches>k__BackingField;
    private Field OpenSearch.Client.IFieldCollapse.Field { get; private set; }
    private IInnerHits OpenSearch.Client.IFieldCollapse.InnerHits { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IFieldCollapse.MaxConcurrentGroupSearches { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IFieldCollapse.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldCollapse.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override IInnerHits OpenSearch.Client.IFieldCollapse.get_InnerHits();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldCollapse.set_InnerHits(IInnerHits value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IFieldCollapse.get_MaxConcurrentGroupSearches();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldCollapse.set_MaxConcurrentGroupSearches(Nullable`1<int> value);
    public FieldCollapseDescriptor`1<T> MaxConcurrentGroupSearches(Nullable`1<int> maxConcurrentGroupSearches);
    public FieldCollapseDescriptor`1<T> Field(Field field);
    public FieldCollapseDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public FieldCollapseDescriptor`1<T> InnerHits(Func`2<InnerHitsDescriptor`1<T>, IInnerHits> selector);
}
public abstract class OpenSearch.Client.FielddataBase : object {
    [CompilerGeneratedAttribute]
private IFielddataFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<FielddataLoading> <Loading>k__BackingField;
    public IFielddataFilter Filter { get; public set; }
    public Nullable`1<FielddataLoading> Loading { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IFielddataFilter get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(IFielddataFilter value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<FielddataLoading> get_Loading();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Loading(Nullable`1<FielddataLoading> value);
}
public abstract class OpenSearch.Client.FielddataDescriptorBase`2 : DescriptorBase`2<TDescriptor, TInterface> {
    [CompilerGeneratedAttribute]
private IFielddataFilter <OpenSearch.Client.IFielddata.Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<FielddataLoading> <OpenSearch.Client.IFielddata.Loading>k__BackingField;
    private IFielddataFilter OpenSearch.Client.IFielddata.Filter { get; private set; }
    private Nullable`1<FielddataLoading> OpenSearch.Client.IFielddata.Loading { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IFielddataFilter OpenSearch.Client.IFielddata.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFielddata.set_Filter(IFielddataFilter value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<FielddataLoading> OpenSearch.Client.IFielddata.get_Loading();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFielddata.set_Loading(Nullable`1<FielddataLoading> value);
    public TDescriptor Filter(Func`2<FielddataFilterDescriptor, IFielddataFilter> filterSelector);
    public TDescriptor Loading(Nullable`1<FielddataLoading> loading);
}
public class OpenSearch.Client.FielddataFilter : object {
    [CompilerGeneratedAttribute]
private IFielddataFrequencyFilter <Frequency>k__BackingField;
    [CompilerGeneratedAttribute]
private IFielddataRegexFilter <Regex>k__BackingField;
    public IFielddataFrequencyFilter Frequency { get; public set; }
    public IFielddataRegexFilter Regex { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IFielddataFrequencyFilter get_Frequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Frequency(IFielddataFrequencyFilter value);
    [CompilerGeneratedAttribute]
public sealed virtual IFielddataRegexFilter get_Regex();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Regex(IFielddataRegexFilter value);
}
public class OpenSearch.Client.FielddataFilterDescriptor : DescriptorBase`2<FielddataFilterDescriptor, IFielddataFilter> {
    [CompilerGeneratedAttribute]
private IFielddataFrequencyFilter <OpenSearch.Client.IFielddataFilter.Frequency>k__BackingField;
    [CompilerGeneratedAttribute]
private IFielddataRegexFilter <OpenSearch.Client.IFielddataFilter.Regex>k__BackingField;
    private IFielddataFrequencyFilter OpenSearch.Client.IFielddataFilter.Frequency { get; private set; }
    private IFielddataRegexFilter OpenSearch.Client.IFielddataFilter.Regex { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IFielddataFrequencyFilter OpenSearch.Client.IFielddataFilter.get_Frequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFielddataFilter.set_Frequency(IFielddataFrequencyFilter value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFielddataRegexFilter OpenSearch.Client.IFielddataFilter.get_Regex();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFielddataFilter.set_Regex(IFielddataRegexFilter value);
    public FielddataFilterDescriptor Frequency(Func`2<FielddataFrequencyFilterDescriptor, IFielddataFrequencyFilter> frequencyFilterSelector);
    public FielddataFilterDescriptor Regex(Func`2<FielddataRegexFilterDescriptor, IFielddataRegexFilter> regexFilterSelector);
}
public class OpenSearch.Client.FielddataFrequencyFilter : object {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinSegmentSize>k__BackingField;
    public Nullable`1<double> Max { get; public set; }
    public Nullable`1<double> Min { get; public set; }
    public Nullable`1<int> MinSegmentSize { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Max();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Max(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Min();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Min(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinSegmentSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinSegmentSize(Nullable`1<int> value);
}
public class OpenSearch.Client.FielddataFrequencyFilterDescriptor : DescriptorBase`2<FielddataFrequencyFilterDescriptor, IFielddataFrequencyFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IFielddataFrequencyFilter.Max>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IFielddataFrequencyFilter.Min>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IFielddataFrequencyFilter.MinSegmentSize>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IFielddataFrequencyFilter.Max { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IFielddataFrequencyFilter.Min { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IFielddataFrequencyFilter.MinSegmentSize { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IFielddataFrequencyFilter.get_Max();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFielddataFrequencyFilter.set_Max(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IFielddataFrequencyFilter.get_Min();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFielddataFrequencyFilter.set_Min(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IFielddataFrequencyFilter.get_MinSegmentSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFielddataFrequencyFilter.set_MinSegmentSize(Nullable`1<int> value);
    public FielddataFrequencyFilterDescriptor Min(Nullable`1<double> min);
    public FielddataFrequencyFilterDescriptor Max(Nullable`1<double> max);
    public FielddataFrequencyFilterDescriptor MinSegmentSize(Nullable`1<int> minSegmentSize);
}
[StringEnumAttribute]
public enum OpenSearch.Client.FielddataLoading : Enum {
    public int value__;
    [EnumMemberAttribute]
public static FielddataLoading Eager;
    [EnumMemberAttribute]
public static FielddataLoading EagerGlobalOrdinals;
}
public class OpenSearch.Client.FielddataRegexFilter : object {
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    public string Pattern { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pattern();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pattern(string value);
}
public class OpenSearch.Client.FielddataRegexFilterDescriptor : DescriptorBase`2<FielddataRegexFilterDescriptor, IFielddataRegexFilter> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFielddataRegexFilter.Pattern>k__BackingField;
    private string OpenSearch.Client.IFielddataRegexFilter.Pattern { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFielddataRegexFilter.get_Pattern();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFielddataRegexFilter.set_Pattern(string value);
    public FielddataRegexFilterDescriptor Pattern(string pattern);
}
public class OpenSearch.Client.FielddataSettings : object {
    [CompilerGeneratedAttribute]
private Time <CacheExpire>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CacheSize>k__BackingField;
    public Time CacheExpire { get; internal set; }
    public string CacheSize { get; internal set; }
    [CompilerGeneratedAttribute]
public Time get_CacheExpire();
    [CompilerGeneratedAttribute]
internal void set_CacheExpire(Time value);
    [CompilerGeneratedAttribute]
public string get_CacheSize();
    [CompilerGeneratedAttribute]
internal void set_CacheSize(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.FielddataStats : object {
    [CompilerGeneratedAttribute]
private long <Evictions>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MemorySizeInBytes>k__BackingField;
    [DataMemberAttribute]
public long Evictions { get; public set; }
    [DataMemberAttribute]
public long MemorySizeInBytes { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Evictions();
    [CompilerGeneratedAttribute]
public void set_Evictions(long value);
    [CompilerGeneratedAttribute]
public long get_MemorySizeInBytes();
    [CompilerGeneratedAttribute]
public void set_MemorySizeInBytes(long value);
}
internal class OpenSearch.Client.FieldExpressionVisitor : ExpressionVisitor {
    private IConnectionSettingsValues _settings;
    private Stack`1<string> _stack;
    public FieldExpressionVisitor(IConnectionSettingsValues settings);
    public string Resolve(Expression expression, bool toLastToken);
    public string Resolve(MemberInfo info);
    protected virtual Expression VisitMember(MemberExpression expression);
    protected virtual Expression VisitMethodCall(MethodCallExpression methodCall);
    private static void VisitConstantOrVariable(MethodCallExpression methodCall, Stack`1<string> stack);
    private static bool IsLinqOperator(MethodInfo methodInfo);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.FieldExtensions : object {
    [ExtensionAttribute]
internal static bool IsConditionless(Field field);
    [ExtensionAttribute]
internal static bool IsConditionless(Fields field);
}
internal class OpenSearch.Client.FieldFormatter : object {
    private static AutomataDictionary Fields;
    private static FieldFormatter();
    public sealed virtual Field Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Field value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, Field value, IJsonFormatterResolver formatterResolver, bool serializeAsString);
    public sealed virtual void SerializeToPropertyName(JsonWriter& writer, Field value, IJsonFormatterResolver formatterResolver);
    public sealed virtual Field DeserializeFromPropertyName(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.FieldLookup : object {
    [CompilerGeneratedAttribute]
private Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <Routing>k__BackingField;
    public Id Id { get; public set; }
    public IndexName Index { get; public set; }
    public Field Path { get; public set; }
    public Routing Routing { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Id get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Id value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Path(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Routing get_Routing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Routing(Routing value);
}
public class OpenSearch.Client.FieldLookupDescriptor`1 : DescriptorBase`2<FieldLookupDescriptor`1<T>, IFieldLookup> {
    [CompilerGeneratedAttribute]
private Id <OpenSearch.Client.IFieldLookup.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IFieldLookup.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IFieldLookup.Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <OpenSearch.Client.IFieldLookup.Routing>k__BackingField;
    private static Type ClrType { get; }
    private Id OpenSearch.Client.IFieldLookup.Id { get; private set; }
    private IndexName OpenSearch.Client.IFieldLookup.Index { get; private set; }
    private Field OpenSearch.Client.IFieldLookup.Path { get; private set; }
    private Routing OpenSearch.Client.IFieldLookup.Routing { get; private set; }
    private static Type get_ClrType();
    [CompilerGeneratedAttribute]
private sealed virtual override Id OpenSearch.Client.IFieldLookup.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldLookup.set_Id(Id value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IFieldLookup.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldLookup.set_Index(IndexName value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IFieldLookup.get_Path();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldLookup.set_Path(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Routing OpenSearch.Client.IFieldLookup.get_Routing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldLookup.set_Routing(Routing value);
    public FieldLookupDescriptor`1<T> Index(IndexName index);
    public FieldLookupDescriptor`1<T> Id(Id id);
    public FieldLookupDescriptor`1<T> Path(Field path);
    public FieldLookupDescriptor`1<T> Path(Expression`1<Func`2<T, TValue>> objectPath);
    public FieldLookupDescriptor`1<T> Routing(Routing routing);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.FieldLookupExtensions : object {
    [ExtensionAttribute]
internal static bool IsConditionless(IFieldLookup fieldLookup);
}
public class OpenSearch.Client.FieldMapping : object {
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<Field, IFieldMapping> <Mapping>k__BackingField;
    [DataMemberAttribute]
public string FullName { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldMappingFormatter")]
public IReadOnlyDictionary`2<Field, IFieldMapping> Mapping { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_FullName();
    [CompilerGeneratedAttribute]
internal void set_FullName(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<Field, IFieldMapping> get_Mapping();
    [CompilerGeneratedAttribute]
internal void set_Mapping(IReadOnlyDictionary`2<Field, IFieldMapping> value);
}
internal class OpenSearch.Client.FieldMappingFormatter : object {
    private static AutomataDictionary Fields;
    private static FieldMappingFormatter();
    public sealed virtual IReadOnlyDictionary`2<Field, IFieldMapping> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IReadOnlyDictionary`2<Field, IFieldMapping> value, IJsonFormatterResolver formatterResolver);
}
public abstract class OpenSearch.Client.FieldNameQueryBase : QueryBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    public Field Field { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
}
public abstract class OpenSearch.Client.FieldNameQueryDescriptorBase`3 : QueryDescriptorBase`2<TDescriptor, TInterface> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IFieldNameQuery.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IQuery.IsStrict>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IQuery.IsVerbatim>k__BackingField;
    private Field OpenSearch.Client.IFieldNameQuery.Field { get; private set; }
    private bool OpenSearch.Client.IQuery.IsStrict { get; private set; }
    private bool OpenSearch.Client.IQuery.IsVerbatim { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IFieldNameQuery.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldNameQuery.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IQuery.get_IsStrict();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQuery.set_IsStrict(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IQuery.get_IsVerbatim();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQuery.set_IsVerbatim(bool value);
    public TDescriptor Field(Field field);
    public TDescriptor Field(Expression`1<Func`2<T, TValue>> objectPath);
}
internal class OpenSearch.Client.FieldNameQueryFormatter`2 : ReadAsFormatter`2<T, TInterface> {
    public virtual void Serialize(JsonWriter& writer, TInterface value, IJsonFormatterResolver formatterResolver);
    public virtual TInterface Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.FieldNamesField : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enabled>k__BackingField;
    public Nullable`1<bool> Enabled { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Enabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Enabled(Nullable`1<bool> value);
}
public class OpenSearch.Client.FieldNamesFieldDescriptor`1 : DescriptorBase`2<FieldNamesFieldDescriptor`1<T>, IFieldNamesField> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IFieldNamesField.Enabled>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IFieldNamesField.Enabled { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IFieldNamesField.get_Enabled();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldNamesField.set_Enabled(Nullable`1<bool> value);
    public FieldNamesFieldDescriptor`1<T> Enabled(Nullable`1<bool> enabled);
}
public class OpenSearch.Client.FieldResolver : object {
    protected ConcurrentDictionary`2<Field, string> Fields;
    protected ConcurrentDictionary`2<PropertyName, string> Properties;
    private IConnectionSettingsValues _settings;
    public FieldResolver(IConnectionSettingsValues settings);
    public string Resolve(Field field);
    private string ResolveFieldName(Field field);
    public string Resolve(PropertyName property);
    private string Resolve(Expression expression, MemberInfo member, bool toLastToken);
}
[JsonFormatterAttribute("OpenSearch.Client.FieldsFormatter")]
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.Fields : object {
    internal List`1<Field> ListOfFields;
    private string DebugDisplay { get; }
    internal Fields(IEnumerable`1<Field> fieldNames);
    private string get_DebugDisplay();
    public virtual string ToString();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<Field> GetEnumerator();
    public sealed virtual bool Equals(Fields other);
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public static Fields op_Implicit(String[] fields);
    public static Fields op_Implicit(string field);
    public static Fields op_Implicit(Expression[] fields);
    public static Fields op_Implicit(Expression field);
    public static Fields op_Implicit(Field field);
    public static Fields op_Implicit(PropertyInfo field);
    public static Fields op_Implicit(PropertyInfo[] fields);
    public static Fields op_Implicit(Field[] fields);
    public Fields And(Expression`1<Func`2<T, TValue>> field, Nullable`1<double> boost, string format);
    public Fields And(string field, Nullable`1<double> boost, string format);
    public Fields And(PropertyInfo property, Nullable`1<double> boost);
    public Fields And(Expression`1[] fields);
    public Fields And(String[] fields);
    public Fields And(PropertyInfo[] properties);
    public Fields And(Field[] fields);
    public static bool op_Equality(Fields left, Fields right);
    public static bool op_Inequality(Fields left, Fields right);
    public virtual bool Equals(object obj);
    private static bool EqualsAllFields(IReadOnlyList`1<Field> thisTypes, IReadOnlyList`1<Field> otherTypes);
    public virtual int GetHashCode();
}
public class OpenSearch.Client.FieldsDescriptor`1 : DescriptorPromiseBase`2<FieldsDescriptor`1<T>, Fields> {
    public FieldsDescriptor`1<T> Fields(Expression`1[] fields);
    public FieldsDescriptor`1<T> Fields(String[] fields);
    public FieldsDescriptor`1<T> Fields(IEnumerable`1<Field> fields);
    public FieldsDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field, Nullable`1<double> boost, string format);
    public FieldsDescriptor`1<T> Field(string field, Nullable`1<double> boost, string format);
    public FieldsDescriptor`1<T> Field(Field field);
}
internal class OpenSearch.Client.FieldsFormatter : object {
    private static FieldFormatter FieldFormatter;
    private static FieldsFormatter();
    public sealed virtual Fields Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Fields value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.FieldSort : SortBase {
    private static string ShardDoc;
    public static IList`1<ISort> ByDocumentOrder;
    public static IList`1<ISort> ByShardDocumentOrder;
    public static FieldSort ShardDocumentOrderAscending;
    public static FieldSort ShardDocumentOrderDescending;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnmappedFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<FieldType> <UnmappedType>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<bool> IgnoreUnmappedFields { get; public set; }
    public Nullable`1<FieldType> UnmappedType { get; public set; }
    protected Field SortKey { get; }
    private static FieldSort();
    [CompilerGeneratedAttribute]
public Field get_Field();
    [CompilerGeneratedAttribute]
public void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreUnmappedFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreUnmappedFields(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<FieldType> get_UnmappedType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UnmappedType(Nullable`1<FieldType> value);
    protected virtual Field get_SortKey();
}
public class OpenSearch.Client.FieldSortDescriptor`1 : SortDescriptorBase`3<FieldSortDescriptor`1<T>, IFieldSort, T> {
    private Field _field;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IFieldSort.IgnoreUnmappedFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<FieldType> <OpenSearch.Client.IFieldSort.UnmappedType>k__BackingField;
    protected Field SortKey { get; }
    private Nullable`1<bool> OpenSearch.Client.IFieldSort.IgnoreUnmappedFields { get; private set; }
    private Nullable`1<FieldType> OpenSearch.Client.IFieldSort.UnmappedType { get; private set; }
    protected virtual Field get_SortKey();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IFieldSort.get_IgnoreUnmappedFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldSort.set_IgnoreUnmappedFields(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<FieldType> OpenSearch.Client.IFieldSort.get_UnmappedType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldSort.set_UnmappedType(Nullable`1<FieldType> value);
    public virtual FieldSortDescriptor`1<T> Field(Field field);
    public virtual FieldSortDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public virtual FieldSortDescriptor`1<T> UnmappedType(Nullable`1<FieldType> type);
    public virtual FieldSortDescriptor`1<T> IgnoreUnmappedFields(Nullable`1<bool> ignore);
}
[DataContractAttribute]
public class OpenSearch.Client.FieldStatistics : object {
    [CompilerGeneratedAttribute]
private int <DocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SumOfDocumentFrequencies>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SumOfTotalTermFrequencies>k__BackingField;
    [DataMemberAttribute]
public int DocumentCount { get; internal set; }
    [DataMemberAttribute]
public long SumOfDocumentFrequencies { get; internal set; }
    [DataMemberAttribute]
public long SumOfTotalTermFrequencies { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_DocumentCount();
    [CompilerGeneratedAttribute]
internal void set_DocumentCount(int value);
    [CompilerGeneratedAttribute]
public long get_SumOfDocumentFrequencies();
    [CompilerGeneratedAttribute]
internal void set_SumOfDocumentFrequencies(long value);
    [CompilerGeneratedAttribute]
public long get_SumOfTotalTermFrequencies();
    [CompilerGeneratedAttribute]
internal void set_SumOfTotalTermFrequencies(long value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.FieldType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static FieldType None;
    [EnumMemberAttribute]
public static FieldType GeoPoint;
    [EnumMemberAttribute]
public static FieldType GeoShape;
    [EnumMemberAttribute]
public static FieldType Ip;
    [EnumMemberAttribute]
public static FieldType Binary;
    [EnumMemberAttribute]
public static FieldType Keyword;
    [EnumMemberAttribute]
public static FieldType Text;
    [EnumMemberAttribute]
public static FieldType SearchAsYouType;
    [EnumMemberAttribute]
public static FieldType Date;
    [EnumMemberAttribute]
public static FieldType DateNanos;
    [EnumMemberAttribute]
public static FieldType Boolean;
    [EnumMemberAttribute]
public static FieldType Completion;
    [EnumMemberAttribute]
public static FieldType Nested;
    [EnumMemberAttribute]
public static FieldType Object;
    [EnumMemberAttribute]
public static FieldType Murmur3Hash;
    [EnumMemberAttribute]
public static FieldType TokenCount;
    [EnumMemberAttribute]
public static FieldType Percolator;
    [EnumMemberAttribute]
public static FieldType Integer;
    [EnumMemberAttribute]
public static FieldType Long;
    [EnumMemberAttribute]
public static FieldType Short;
    [EnumMemberAttribute]
public static FieldType Byte;
    [EnumMemberAttribute]
public static FieldType Float;
    [EnumMemberAttribute]
public static FieldType HalfFloat;
    [EnumMemberAttribute]
public static FieldType ScaledFloat;
    [EnumMemberAttribute]
public static FieldType Double;
    [EnumMemberAttribute]
public static FieldType IntegerRange;
    [EnumMemberAttribute]
public static FieldType FloatRange;
    [EnumMemberAttribute]
public static FieldType LongRange;
    [EnumMemberAttribute]
public static FieldType DoubleRange;
    [EnumMemberAttribute]
public static FieldType DateRange;
    [EnumMemberAttribute]
public static FieldType IpRange;
    [EnumMemberAttribute]
public static FieldType Alias;
    [EnumMemberAttribute]
public static FieldType Join;
    [EnumMemberAttribute]
public static FieldType RankFeature;
    [EnumMemberAttribute]
public static FieldType RankFeatures;
    [EnumMemberAttribute]
public static FieldType KnnVector;
}
public class OpenSearch.Client.FieldTypes : IsADictionaryBase`2<string, FieldCapabilities> {
    public FieldCapabilities All { get; }
    public FieldCapabilities Attachment { get; }
    public FieldCapabilities Binary { get; }
    public FieldCapabilities Boolean { get; }
    public FieldCapabilities Byte { get; }
    public FieldCapabilities Completion { get; }
    public FieldCapabilities Date { get; }
    public FieldCapabilities DateNanos { get; }
    public FieldCapabilities DateRange { get; }
    public FieldCapabilities Double { get; }
    public FieldCapabilities DoubleRange { get; }
    public FieldCapabilities FieldNames { get; }
    public FieldCapabilities Float { get; }
    public FieldCapabilities FloatRange { get; }
    public FieldCapabilities GeoPoint { get; }
    public FieldCapabilities GeoShape { get; }
    public FieldCapabilities Shape { get; }
    public FieldCapabilities HalfFloat { get; }
    public FieldCapabilities Id { get; }
    public FieldCapabilities Index { get; }
    public FieldCapabilities Integer { get; }
    public FieldCapabilities IntegerRange { get; }
    public FieldCapabilities Ip { get; }
    public FieldCapabilities Keyword { get; }
    public FieldCapabilities Long { get; }
    public FieldCapabilities LongRange { get; }
    public FieldCapabilities Murmur3 { get; }
    public FieldCapabilities Parent { get; }
    public FieldCapabilities Percolator { get; }
    public FieldCapabilities Routing { get; }
    public FieldCapabilities ScaledFloat { get; }
    public FieldCapabilities SearchAsYouType { get; }
    public FieldCapabilities Short { get; }
    public FieldCapabilities Source { get; }
    public FieldCapabilities Text { get; }
    public FieldCapabilities TokenCount { get; }
    public FieldCapabilities Type { get; }
    public FieldCapabilities Uid { get; }
    public FieldCapabilities ParentJoin { get; }
    public FieldCapabilities Version { get; }
    public FieldCapabilities VersionField { get; }
    public FieldCapabilities get_All();
    public FieldCapabilities get_Attachment();
    public FieldCapabilities get_Binary();
    public FieldCapabilities get_Boolean();
    public FieldCapabilities get_Byte();
    public FieldCapabilities get_Completion();
    public FieldCapabilities get_Date();
    public FieldCapabilities get_DateNanos();
    public FieldCapabilities get_DateRange();
    public FieldCapabilities get_Double();
    public FieldCapabilities get_DoubleRange();
    public FieldCapabilities get_FieldNames();
    public FieldCapabilities get_Float();
    public FieldCapabilities get_FloatRange();
    public FieldCapabilities get_GeoPoint();
    public FieldCapabilities get_GeoShape();
    public FieldCapabilities get_Shape();
    public FieldCapabilities get_HalfFloat();
    public FieldCapabilities get_Id();
    public FieldCapabilities get_Index();
    public FieldCapabilities get_Integer();
    public FieldCapabilities get_IntegerRange();
    public FieldCapabilities get_Ip();
    public FieldCapabilities get_Keyword();
    public FieldCapabilities get_Long();
    public FieldCapabilities get_LongRange();
    public FieldCapabilities get_Murmur3();
    public FieldCapabilities get_Parent();
    public FieldCapabilities get_Percolator();
    public FieldCapabilities get_Routing();
    public FieldCapabilities get_ScaledFloat();
    public FieldCapabilities get_SearchAsYouType();
    public FieldCapabilities get_Short();
    public FieldCapabilities get_Source();
    public FieldCapabilities get_Text();
    public FieldCapabilities get_TokenCount();
    public FieldCapabilities get_Type();
    public FieldCapabilities get_Uid();
    public FieldCapabilities get_ParentJoin();
    public FieldCapabilities get_Version();
    public FieldCapabilities get_VersionField();
}
public class OpenSearch.Client.FieldValueFactorFunction : FunctionScoreFunctionBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Factor>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<FieldValueFactorModifier> <Modifier>k__BackingField;
    public Nullable`1<double> Factor { get; public set; }
    public Field Field { get; public set; }
    public Nullable`1<double> Missing { get; public set; }
    public Nullable`1<FieldValueFactorModifier> Modifier { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Factor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Factor(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<FieldValueFactorModifier> get_Modifier();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Modifier(Nullable`1<FieldValueFactorModifier> value);
}
public class OpenSearch.Client.FieldValueFactorFunctionDescriptor`1 : FunctionScoreFunctionDescriptorBase`3<FieldValueFactorFunctionDescriptor`1<T>, IFieldValueFactorFunction, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IFieldValueFactorFunction.Factor>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IFieldValueFactorFunction.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IFieldValueFactorFunction.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<FieldValueFactorModifier> <OpenSearch.Client.IFieldValueFactorFunction.Modifier>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IFieldValueFactorFunction.Factor { get; private set; }
    private Field OpenSearch.Client.IFieldValueFactorFunction.Field { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IFieldValueFactorFunction.Missing { get; private set; }
    private Nullable`1<FieldValueFactorModifier> OpenSearch.Client.IFieldValueFactorFunction.Modifier { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IFieldValueFactorFunction.get_Factor();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldValueFactorFunction.set_Factor(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IFieldValueFactorFunction.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldValueFactorFunction.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IFieldValueFactorFunction.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldValueFactorFunction.set_Missing(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<FieldValueFactorModifier> OpenSearch.Client.IFieldValueFactorFunction.get_Modifier();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFieldValueFactorFunction.set_Modifier(Nullable`1<FieldValueFactorModifier> value);
    public FieldValueFactorFunctionDescriptor`1<T> Field(Field field);
    public FieldValueFactorFunctionDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public FieldValueFactorFunctionDescriptor`1<T> Factor(Nullable`1<double> factor);
    public FieldValueFactorFunctionDescriptor`1<T> Modifier(Nullable`1<FieldValueFactorModifier> modifier);
    public FieldValueFactorFunctionDescriptor`1<T> Missing(Nullable`1<double> missing);
}
[StringEnumAttribute]
public enum OpenSearch.Client.FieldValueFactorModifier : Enum {
    public int value__;
    [EnumMemberAttribute]
public static FieldValueFactorModifier None;
    [EnumMemberAttribute]
public static FieldValueFactorModifier Log;
    [EnumMemberAttribute]
public static FieldValueFactorModifier Log1P;
    [EnumMemberAttribute]
public static FieldValueFactorModifier Log2P;
    [EnumMemberAttribute]
public static FieldValueFactorModifier Ln;
    [EnumMemberAttribute]
public static FieldValueFactorModifier Ln1P;
    [EnumMemberAttribute]
public static FieldValueFactorModifier Ln2P;
    [EnumMemberAttribute]
public static FieldValueFactorModifier Square;
    [EnumMemberAttribute]
public static FieldValueFactorModifier SquareRoot;
    [EnumMemberAttribute]
public static FieldValueFactorModifier Reciprocal;
}
[JsonFormatterAttribute("OpenSearch.Client.FieldValuesFormatter")]
public class OpenSearch.Client.FieldValues : IsADictionaryBase`2<string, LazyDocument> {
    public static FieldValues Empty;
    private static HashSet`1<Type> NumericTypes;
    private Inferrer _inferrer;
    internal FieldValues(Inferrer inferrer, IDictionary`2<string, LazyDocument> container);
    private static FieldValues();
    public TValue Value(Field field);
    public TValue ValueOf(Expression`1<Func`2<T, TValue>> objectPath);
    public TValue[] ValuesOf(Field field);
    public TValue[] Values(Expression`1<Func`2<T, TValue>> objectPath);
    public static bool IsNumeric(Type myType);
    public static bool IsNullable(Type type);
    private TValue[] FieldArray(string field);
}
internal class OpenSearch.Client.FieldValuesFormatter : object {
    private static LazyDocumentFormatter LazyDocumentFormatter;
    private static FieldValuesFormatter();
    public sealed virtual FieldValues Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, FieldValues value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.FileCountSnapshotStats : object {
    [CompilerGeneratedAttribute]
private int <FileCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SizeInBytes>k__BackingField;
    [DataMemberAttribute]
public int FileCount { get; internal set; }
    [DataMemberAttribute]
public long SizeInBytes { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_FileCount();
    [CompilerGeneratedAttribute]
internal void set_FileCount(int value);
    [CompilerGeneratedAttribute]
public long get_SizeInBytes();
    [CompilerGeneratedAttribute]
internal void set_SizeInBytes(long value);
}
public class OpenSearch.Client.FileSystemRepository : object {
    [CompilerGeneratedAttribute]
private IFileSystemRepositorySettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public IFileSystemRepositorySettings Settings { get; public set; }
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    public string Type { get; }
    public FileSystemRepository(FileSystemRepositorySettings settings);
    [CompilerGeneratedAttribute]
public sealed virtual IFileSystemRepositorySettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IFileSystemRepositorySettings value);
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
}
public class OpenSearch.Client.FileSystemRepositoryDescriptor : DescriptorBase`2<FileSystemRepositoryDescriptor, IFileSystemRepository> {
    [CompilerGeneratedAttribute]
private IFileSystemRepositorySettings <OpenSearch.Client.IRepository<OpenSearch.Client.IFileSystemRepositorySettings>.Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISnapshotRepository.Type>k__BackingField;
    private IFileSystemRepositorySettings OpenSearch.Client.IRepository<OpenSearch.Client.IFileSystemRepositorySettings>.Settings { get; private set; }
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    private string OpenSearch.Client.ISnapshotRepository.Type { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IFileSystemRepositorySettings OpenSearch.Client.IRepository<OpenSearch.Client.IFileSystemRepositorySettings>.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRepository<OpenSearch.Client.IFileSystemRepositorySettings>.set_Settings(IFileSystemRepositorySettings value);
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISnapshotRepository.get_Type();
    public FileSystemRepositoryDescriptor Settings(string location, Func`2<FileSystemRepositorySettingsDescriptor, IFileSystemRepositorySettings> settingsSelector);
}
public class OpenSearch.Client.FileSystemRepositorySettings : object {
    [CompilerGeneratedAttribute]
private string <ChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConcurrentStreams>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RestoreBytesPerSecondMaximum>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SnapshotBytesPerSecondMaximum>k__BackingField;
    public string ChunkSize { get; public set; }
    public Nullable`1<bool> Compress { get; public set; }
    public Nullable`1<int> ConcurrentStreams { get; public set; }
    public string Location { get; public set; }
    public string RestoreBytesPerSecondMaximum { get; public set; }
    public string SnapshotBytesPerSecondMaximum { get; public set; }
    public FileSystemRepositorySettings(string location);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChunkSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChunkSize(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Compress();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ConcurrentStreams();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConcurrentStreams(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Location();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Location(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RestoreBytesPerSecondMaximum();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RestoreBytesPerSecondMaximum(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SnapshotBytesPerSecondMaximum();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SnapshotBytesPerSecondMaximum(string value);
}
public class OpenSearch.Client.FileSystemRepositorySettingsDescriptor : DescriptorBase`2<FileSystemRepositorySettingsDescriptor, IFileSystemRepositorySettings> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFileSystemRepositorySettings.ChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IFileSystemRepositorySettings.Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IFileSystemRepositorySettings.ConcurrentStreams>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFileSystemRepositorySettings.Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFileSystemRepositorySettings.RestoreBytesPerSecondMaximum>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFileSystemRepositorySettings.SnapshotBytesPerSecondMaximum>k__BackingField;
    private string OpenSearch.Client.IFileSystemRepositorySettings.ChunkSize { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IFileSystemRepositorySettings.Compress { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IFileSystemRepositorySettings.ConcurrentStreams { get; private set; }
    private string OpenSearch.Client.IFileSystemRepositorySettings.Location { get; private set; }
    private string OpenSearch.Client.IFileSystemRepositorySettings.RestoreBytesPerSecondMaximum { get; private set; }
    private string OpenSearch.Client.IFileSystemRepositorySettings.SnapshotBytesPerSecondMaximum { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFileSystemRepositorySettings.get_ChunkSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFileSystemRepositorySettings.set_ChunkSize(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IFileSystemRepositorySettings.get_Compress();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFileSystemRepositorySettings.set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IFileSystemRepositorySettings.get_ConcurrentStreams();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFileSystemRepositorySettings.set_ConcurrentStreams(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFileSystemRepositorySettings.get_Location();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFileSystemRepositorySettings.set_Location(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFileSystemRepositorySettings.get_RestoreBytesPerSecondMaximum();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFileSystemRepositorySettings.set_RestoreBytesPerSecondMaximum(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFileSystemRepositorySettings.get_SnapshotBytesPerSecondMaximum();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFileSystemRepositorySettings.set_SnapshotBytesPerSecondMaximum(string value);
    public FileSystemRepositorySettingsDescriptor Location(string location);
    public FileSystemRepositorySettingsDescriptor Compress(Nullable`1<bool> compress);
    public FileSystemRepositorySettingsDescriptor ConcurrentStreams(Nullable`1<int> concurrentStreams);
    public FileSystemRepositorySettingsDescriptor ChunkSize(string chunkSize);
    public FileSystemRepositorySettingsDescriptor RestoreBytesPerSecondMaximum(string maximumBytesPerSecond);
    public FileSystemRepositorySettingsDescriptor SnapshotBytesPerSecondMaximum(string maximumBytesPerSecond);
}
[DataContractAttribute]
public class OpenSearch.Client.FileSystemStats : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<DataPathStats> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private TotalFileSystemStats <Total>k__BackingField;
    [DataMemberAttribute]
public IEnumerable`1<DataPathStats> Data { get; internal set; }
    [DataMemberAttribute]
public long Timestamp { get; internal set; }
    [DataMemberAttribute]
public TotalFileSystemStats Total { get; internal set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<DataPathStats> get_Data();
    [CompilerGeneratedAttribute]
internal void set_Data(IEnumerable`1<DataPathStats> value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(long value);
    [CompilerGeneratedAttribute]
public TotalFileSystemStats get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(TotalFileSystemStats value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.FileSystemStorageImplementation : Enum {
    public int value__;
    [EnumMemberAttribute]
public static FileSystemStorageImplementation Simple;
    [EnumMemberAttribute]
public static FileSystemStorageImplementation NIO;
    [EnumMemberAttribute]
public static FileSystemStorageImplementation MMap;
    [EnumMemberAttribute]
public static FileSystemStorageImplementation Default;
}
public class OpenSearch.Client.FilterAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private QueryContainer <Filter>k__BackingField;
    public QueryContainer Filter { get; public set; }
    public FilterAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(QueryContainer value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.FilterAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<FilterAggregationDescriptor`1<T>, IFilterAggregation, T> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IFilterAggregation.Filter>k__BackingField;
    private QueryContainer OpenSearch.Client.IFilterAggregation.Filter { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IFilterAggregation.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFilterAggregation.set_Filter(QueryContainer value);
    public FilterAggregationDescriptor`1<T> Filter(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
}
internal class OpenSearch.Client.FilterAggregationFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, IFilterAggregation value, IJsonFormatterResolver formatterResolver);
    public sealed virtual IFilterAggregation Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.FiltersAggregate : BucketAggregateBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<FiltersBucketItem> <Buckets>k__BackingField;
    public IReadOnlyCollection`1<FiltersBucketItem> Buckets { get; public set; }
    public FiltersAggregate(IReadOnlyDictionary`2<string, IAggregate> aggregations);
    protected virtual string Sanitize(string key);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<FiltersBucketItem> get_Buckets();
    [CompilerGeneratedAttribute]
public void set_Buckets(IReadOnlyCollection`1<FiltersBucketItem> value);
    public SingleBucketAggregate NamedBucket(string key);
    public IList`1<FiltersBucketItem> AnonymousBuckets();
}
public class OpenSearch.Client.FiltersAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Union`2<INamedFiltersContainer, IEnumerable`1<QueryContainer>> <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OtherBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OtherBucketKey>k__BackingField;
    public Union`2<INamedFiltersContainer, IEnumerable`1<QueryContainer>> Filters { get; public set; }
    public Nullable`1<bool> OtherBucket { get; public set; }
    public string OtherBucketKey { get; public set; }
    public FiltersAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<INamedFiltersContainer, IEnumerable`1<QueryContainer>> get_Filters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filters(Union`2<INamedFiltersContainer, IEnumerable`1<QueryContainer>> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_OtherBucket();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OtherBucket(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_OtherBucketKey();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OtherBucketKey(string value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.FiltersAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<FiltersAggregationDescriptor`1<T>, IFiltersAggregation, T> {
    [CompilerGeneratedAttribute]
private Union`2<INamedFiltersContainer, IEnumerable`1<QueryContainer>> <OpenSearch.Client.IFiltersAggregation.Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IFiltersAggregation.OtherBucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFiltersAggregation.OtherBucketKey>k__BackingField;
    private Union`2<INamedFiltersContainer, IEnumerable`1<QueryContainer>> OpenSearch.Client.IFiltersAggregation.Filters { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IFiltersAggregation.OtherBucket { get; private set; }
    private string OpenSearch.Client.IFiltersAggregation.OtherBucketKey { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<INamedFiltersContainer, IEnumerable`1<QueryContainer>> OpenSearch.Client.IFiltersAggregation.get_Filters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFiltersAggregation.set_Filters(Union`2<INamedFiltersContainer, IEnumerable`1<QueryContainer>> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IFiltersAggregation.get_OtherBucket();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFiltersAggregation.set_OtherBucket(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFiltersAggregation.get_OtherBucketKey();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFiltersAggregation.set_OtherBucketKey(string value);
    public FiltersAggregationDescriptor`1<T> OtherBucket(Nullable`1<bool> otherBucket);
    public FiltersAggregationDescriptor`1<T> OtherBucketKey(string otherBucketKey);
    public FiltersAggregationDescriptor`1<T> NamedFilters(Func`2<NamedFiltersContainerDescriptor`1<T>, IPromise`1<INamedFiltersContainer>> selector);
    public FiltersAggregationDescriptor`1<T> AnonymousFilters(Func`2[] selectors);
    public FiltersAggregationDescriptor`1<T> AnonymousFilters(IEnumerable`1<Func`2<QueryContainerDescriptor`1<T>, QueryContainer>> selectors);
}
public class OpenSearch.Client.FiltersBucketItem : BucketBase {
    [CompilerGeneratedAttribute]
private long <DocCount>k__BackingField;
    public long DocCount { get; public set; }
    public FiltersBucketItem(IReadOnlyDictionary`2<string, IAggregate> dict);
    [CompilerGeneratedAttribute]
public long get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(long value);
}
public class OpenSearch.Client.FingerprintAnalyzer : AnalyzerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxOutputSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreserveOriginal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <StopWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StopWordsPath>k__BackingField;
    public Nullable`1<int> MaxOutputSize { get; public set; }
    public Nullable`1<bool> PreserveOriginal { get; public set; }
    public string Separator { get; public set; }
    public StopWords StopWords { get; public set; }
    public string StopWordsPath { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxOutputSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxOutputSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PreserveOriginal();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreserveOriginal(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Separator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Separator(string value);
    [CompilerGeneratedAttribute]
public sealed virtual StopWords get_StopWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopWords(StopWords value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_StopWordsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopWordsPath(string value);
}
public class OpenSearch.Client.FingerprintAnalyzerDescriptor : AnalyzerDescriptorBase`2<FingerprintAnalyzerDescriptor, IFingerprintAnalyzer> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IFingerprintAnalyzer.MaxOutputSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IFingerprintAnalyzer.PreserveOriginal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFingerprintAnalyzer.Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <OpenSearch.Client.IFingerprintAnalyzer.StopWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFingerprintAnalyzer.StopWordsPath>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.IFingerprintAnalyzer.MaxOutputSize { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IFingerprintAnalyzer.PreserveOriginal { get; private set; }
    private string OpenSearch.Client.IFingerprintAnalyzer.Separator { get; private set; }
    private StopWords OpenSearch.Client.IFingerprintAnalyzer.StopWords { get; private set; }
    private string OpenSearch.Client.IFingerprintAnalyzer.StopWordsPath { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IFingerprintAnalyzer.get_MaxOutputSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintAnalyzer.set_MaxOutputSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IFingerprintAnalyzer.get_PreserveOriginal();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintAnalyzer.set_PreserveOriginal(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFingerprintAnalyzer.get_Separator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintAnalyzer.set_Separator(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override StopWords OpenSearch.Client.IFingerprintAnalyzer.get_StopWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintAnalyzer.set_StopWords(StopWords value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFingerprintAnalyzer.get_StopWordsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintAnalyzer.set_StopWordsPath(string value);
    public FingerprintAnalyzerDescriptor Separator(string separator);
    public FingerprintAnalyzerDescriptor MaxOutputSize(Nullable`1<int> maxOutputSize);
    public FingerprintAnalyzerDescriptor PreserveOriginal(Nullable`1<bool> preserveOriginal);
    public FingerprintAnalyzerDescriptor StopWords(String[] stopWords);
    public FingerprintAnalyzerDescriptor StopWords(IEnumerable`1<string> stopWords);
    public FingerprintAnalyzerDescriptor StopWords(StopWords stopWords);
    public FingerprintAnalyzerDescriptor StopWordsPath(string stopWordsPath);
}
public class OpenSearch.Client.FingerprintProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Fields <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Salt>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    protected string Name { get; }
    public Fields Fields { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public string Method { get; public set; }
    public string Salt { get; public set; }
    public Field TargetField { get; public set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Method();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Method(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Salt();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Salt(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
}
public class OpenSearch.Client.FingerprintProcessorDescriptor`1 : ProcessorDescriptorBase`2<FingerprintProcessorDescriptor`1<T>, IFingerprintProcessor> {
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IFingerprintProcessor.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFingerprintProcessor.Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFingerprintProcessor.Salt>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IFingerprintProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IFingerprintProcessor.IgnoreMissing>k__BackingField;
    protected string Name { get; }
    private Fields OpenSearch.Client.IFingerprintProcessor.Fields { get; private set; }
    private string OpenSearch.Client.IFingerprintProcessor.Method { get; private set; }
    private string OpenSearch.Client.IFingerprintProcessor.Salt { get; private set; }
    private Field OpenSearch.Client.IFingerprintProcessor.TargetField { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IFingerprintProcessor.IgnoreMissing { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IFingerprintProcessor.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintProcessor.set_Fields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFingerprintProcessor.get_Method();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintProcessor.set_Method(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFingerprintProcessor.get_Salt();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintProcessor.set_Salt(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IFingerprintProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IFingerprintProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    public FingerprintProcessorDescriptor`1<T> Fields(Fields fields);
    public FingerprintProcessorDescriptor`1<T> Fields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> selector);
    public FingerprintProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
    public FingerprintProcessorDescriptor`1<T> Method(string method);
    public FingerprintProcessorDescriptor`1<T> Salt(string salt);
    public FingerprintProcessorDescriptor`1<T> TargetField(Field field);
    public FingerprintProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
}
public class OpenSearch.Client.FingerprintTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxOutputSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Separator>k__BackingField;
    public Nullable`1<int> MaxOutputSize { get; public set; }
    public string Separator { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxOutputSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxOutputSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Separator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Separator(string value);
}
public class OpenSearch.Client.FingerprintTokenFilterDescriptor : TokenFilterDescriptorBase`2<FingerprintTokenFilterDescriptor, IFingerprintTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IFingerprintTokenFilter.MaxOutputSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFingerprintTokenFilter.Separator>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.IFingerprintTokenFilter.MaxOutputSize { get; private set; }
    private string OpenSearch.Client.IFingerprintTokenFilter.Separator { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IFingerprintTokenFilter.get_MaxOutputSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintTokenFilter.set_MaxOutputSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFingerprintTokenFilter.get_Separator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFingerprintTokenFilter.set_Separator(string value);
    public FingerprintTokenFilterDescriptor Separator(string separator);
    public FingerprintTokenFilterDescriptor MaxOutputSize(Nullable`1<int> maxOutputSize);
}
public static class OpenSearch.Client.FixedIndexSettings : object {
    public static string NumberOfRoutingShards;
    public static string NumberOfShards;
    public static string RoutingPartitionSize;
    public static string Hidden;
    public static string PercolatorMapUnmappedFieldsAsText;
}
public class OpenSearch.Client.FloatRange : object {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <LessThanOrEqualTo>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<float> GreaterThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<float> GreaterThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public Nullable`1<float> LessThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<float> LessThanOrEqualTo { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_GreaterThan();
    [CompilerGeneratedAttribute]
public void set_GreaterThan(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_GreaterThanOrEqualTo(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_LessThan();
    [CompilerGeneratedAttribute]
public void set_LessThan(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_LessThanOrEqualTo(Nullable`1<float> value);
}
public class OpenSearch.Client.FloatRangeAttribute : RangePropertyAttributeBase {
}
public class OpenSearch.Client.FloatRangeProperty : RangePropertyBase {
}
public class OpenSearch.Client.FloatRangePropertyDescriptor`1 : RangePropertyDescriptorBase`3<FloatRangePropertyDescriptor`1<T>, IFloatRangeProperty, T> {
}
internal static class OpenSearch.Client.Fluent : object {
    internal static TDescriptor Assign(TDescriptor self, TValue value, Action`2<TInterface, TValue> assign);
}
public class OpenSearch.Client.FluentDictionary`2 : Dictionary`2<TKey, TValue> {
    public FluentDictionary`2(IDictionary`2<TKey, TValue> copy);
    public FluentDictionary`2<TKey, TValue> Add(TKey key, TValue value);
    public FluentDictionary`2<TKey, TValue> Remove(TKey key);
}
public class OpenSearch.Client.FlushDescriptor : RequestDescriptorBase`3<FlushDescriptor, FlushRequestParameters, IFlushRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IFlushRequest.Index { get; }
    public FlushDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IFlushRequest.get_Index();
    public FlushDescriptor Index(Indices index);
    public FlushDescriptor Index();
    public FlushDescriptor AllIndices();
    public FlushDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public FlushDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public FlushDescriptor Force(Nullable`1<bool> force);
    public FlushDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public FlushDescriptor WaitIfOngoing(Nullable`1<bool> waitifongoing);
}
public class OpenSearch.Client.FlushRequest : PlainRequestBase`1<FlushRequestParameters> {
    protected IFlushRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IFlushRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> Force { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> WaitIfOngoing { get; public set; }
    public FlushRequest(Indices index);
    protected IFlushRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IFlushRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_Force();
    public void set_Force(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_WaitIfOngoing();
    public void set_WaitIfOngoing(Nullable`1<bool> value);
}
public class OpenSearch.Client.FlushResponse : ShardsOperationResponseBase {
}
[DataContractAttribute]
public class OpenSearch.Client.FlushStats : object {
    [CompilerGeneratedAttribute]
private long <Periodic>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TotalTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalTimeInMilliseconds>k__BackingField;
    [DataMemberAttribute]
public long Periodic { get; public set; }
    [DataMemberAttribute]
public long Total { get; public set; }
    [DataMemberAttribute]
public string TotalTime { get; public set; }
    [DataMemberAttribute]
public long TotalTimeInMilliseconds { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Periodic();
    [CompilerGeneratedAttribute]
public void set_Periodic(long value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(long value);
    [CompilerGeneratedAttribute]
public string get_TotalTime();
    [CompilerGeneratedAttribute]
public void set_TotalTime(string value);
    [CompilerGeneratedAttribute]
public long get_TotalTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_TotalTimeInMilliseconds(long value);
}
public class OpenSearch.Client.ForceMergeDescriptor : RequestDescriptorBase`3<ForceMergeDescriptor, ForceMergeRequestParameters, IForceMergeRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IForceMergeRequest.Index { get; }
    public ForceMergeDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IForceMergeRequest.get_Index();
    public ForceMergeDescriptor Index(Indices index);
    public ForceMergeDescriptor Index();
    public ForceMergeDescriptor AllIndices();
    public ForceMergeDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public ForceMergeDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public ForceMergeDescriptor Flush(Nullable`1<bool> flush);
    public ForceMergeDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public ForceMergeDescriptor MaxNumSegments(Nullable`1<long> maxnumsegments);
    public ForceMergeDescriptor OnlyExpungeDeletes(Nullable`1<bool> onlyexpungedeletes);
}
public class OpenSearch.Client.ForceMergeRequest : PlainRequestBase`1<ForceMergeRequestParameters> {
    protected IForceMergeRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IForceMergeRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> Flush { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<long> MaxNumSegments { get; public set; }
    public Nullable`1<bool> OnlyExpungeDeletes { get; public set; }
    public ForceMergeRequest(Indices index);
    protected IForceMergeRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IForceMergeRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_Flush();
    public void set_Flush(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<long> get_MaxNumSegments();
    public void set_MaxNumSegments(Nullable`1<long> value);
    public Nullable`1<bool> get_OnlyExpungeDeletes();
    public void set_OnlyExpungeDeletes(Nullable`1<bool> value);
}
public class OpenSearch.Client.ForceMergeResponse : ShardsOperationResponseBase {
}
public class OpenSearch.Client.ForeachProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IProcessor <Processor>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    public Field Field { get; public set; }
    public IProcessor Processor { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual IProcessor get_Processor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Processor(IProcessor value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.ForeachProcessorDescriptor`1 : ProcessorDescriptorBase`2<ForeachProcessorDescriptor`1<T>, IForeachProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IForeachProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IProcessor <OpenSearch.Client.IForeachProcessor.Processor>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IForeachProcessor.IgnoreMissing>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IForeachProcessor.Field { get; private set; }
    private IProcessor OpenSearch.Client.IForeachProcessor.Processor { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IForeachProcessor.IgnoreMissing { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IForeachProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IForeachProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override IProcessor OpenSearch.Client.IForeachProcessor.get_Processor();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IForeachProcessor.set_Processor(IProcessor value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IForeachProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IForeachProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    public ForeachProcessorDescriptor`1<T> Field(Field field);
    public ForeachProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public ForeachProcessorDescriptor`1<T> Processor(Func`2<ProcessorsDescriptor, IPromise`1<IList`1<IProcessor>>> selector);
    public ForeachProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
}
public abstract class OpenSearch.Client.FormattableMetricAggregationBase : MetricAggregationBase {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    public string Format { get; public set; }
    protected FormattableMetricAggregationBase(string name, Field field);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(string value);
}
public abstract class OpenSearch.Client.FormattableMetricAggregationDescriptorBase`3 : MetricAggregationDescriptorBase`3<TFormattableMetricAggregation, TFormattableMetricAggregationInterface, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IFormattableMetricAggregation.Format>k__BackingField;
    private string OpenSearch.Client.IFormattableMetricAggregation.Format { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IFormattableMetricAggregation.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFormattableMetricAggregation.set_Format(string value);
    public TFormattableMetricAggregation Format(string format);
}
[StringEnumAttribute]
public enum OpenSearch.Client.FunctionBoostMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static FunctionBoostMode Multiply;
    [EnumMemberAttribute]
public static FunctionBoostMode Replace;
    [EnumMemberAttribute]
public static FunctionBoostMode Sum;
    [EnumMemberAttribute]
public static FunctionBoostMode Average;
    [EnumMemberAttribute]
public static FunctionBoostMode Max;
    [EnumMemberAttribute]
public static FunctionBoostMode Min;
}
public class OpenSearch.Client.FunctionScoreFunction : FunctionScoreFunctionBase {
}
public abstract class OpenSearch.Client.FunctionScoreFunctionBase : object {
    [CompilerGeneratedAttribute]
private QueryContainer <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Weight>k__BackingField;
    public QueryContainer Filter { get; public set; }
    public Nullable`1<double> Weight { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Weight();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Weight(Nullable`1<double> value);
}
public class OpenSearch.Client.FunctionScoreFunctionDescriptor`1 : FunctionScoreFunctionDescriptorBase`3<FunctionScoreFunctionDescriptor`1<T>, IScoreFunction, T> {
}
public abstract class OpenSearch.Client.FunctionScoreFunctionDescriptorBase`3 : DescriptorBase`2<TDescriptor, TInterface> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IScoreFunction.Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IScoreFunction.Weight>k__BackingField;
    private QueryContainer OpenSearch.Client.IScoreFunction.Filter { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IScoreFunction.Weight { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IScoreFunction.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScoreFunction.set_Filter(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IScoreFunction.get_Weight();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScoreFunction.set_Weight(Nullable`1<double> value);
    public TDescriptor Filter(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> filterSelector);
    public TDescriptor Weight(Nullable`1<double> weight);
}
[StringEnumAttribute]
public enum OpenSearch.Client.FunctionScoreMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static FunctionScoreMode Multiply;
    [EnumMemberAttribute]
public static FunctionScoreMode Sum;
    [EnumMemberAttribute]
public static FunctionScoreMode Average;
    [EnumMemberAttribute]
public static FunctionScoreMode First;
    [EnumMemberAttribute]
public static FunctionScoreMode Max;
    [EnumMemberAttribute]
public static FunctionScoreMode Min;
}
public class OpenSearch.Client.FunctionScoreQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<FunctionBoostMode> <BoostMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IScoreFunction> <Functions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MaxBoost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MinScore>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<FunctionScoreMode> <ScoreMode>k__BackingField;
    public Nullable`1<FunctionBoostMode> BoostMode { get; public set; }
    public IEnumerable`1<IScoreFunction> Functions { get; public set; }
    public Nullable`1<double> MaxBoost { get; public set; }
    public Nullable`1<double> MinScore { get; public set; }
    public QueryContainer Query { get; public set; }
    public Nullable`1<FunctionScoreMode> ScoreMode { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<FunctionBoostMode> get_BoostMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoostMode(Nullable`1<FunctionBoostMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IScoreFunction> get_Functions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Functions(IEnumerable`1<IScoreFunction> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_MaxBoost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxBoost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_MinScore();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinScore(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<FunctionScoreMode> get_ScoreMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScoreMode(Nullable`1<FunctionScoreMode> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IFunctionScoreQuery q, bool force);
}
public class OpenSearch.Client.FunctionScoreQueryDescriptor`1 : QueryDescriptorBase`2<FunctionScoreQueryDescriptor`1<T>, IFunctionScoreQuery> {
    private bool _forcedConditionless;
    [CompilerGeneratedAttribute]
private Nullable`1<FunctionBoostMode> <OpenSearch.Client.IFunctionScoreQuery.BoostMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IScoreFunction> <OpenSearch.Client.IFunctionScoreQuery.Functions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IFunctionScoreQuery.MaxBoost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IFunctionScoreQuery.MinScore>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IFunctionScoreQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<FunctionScoreMode> <OpenSearch.Client.IFunctionScoreQuery.ScoreMode>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<FunctionBoostMode> OpenSearch.Client.IFunctionScoreQuery.BoostMode { get; private set; }
    private IEnumerable`1<IScoreFunction> OpenSearch.Client.IFunctionScoreQuery.Functions { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IFunctionScoreQuery.MaxBoost { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IFunctionScoreQuery.MinScore { get; private set; }
    private QueryContainer OpenSearch.Client.IFunctionScoreQuery.Query { get; private set; }
    private Nullable`1<FunctionScoreMode> OpenSearch.Client.IFunctionScoreQuery.ScoreMode { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<FunctionBoostMode> OpenSearch.Client.IFunctionScoreQuery.get_BoostMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFunctionScoreQuery.set_BoostMode(Nullable`1<FunctionBoostMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IScoreFunction> OpenSearch.Client.IFunctionScoreQuery.get_Functions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFunctionScoreQuery.set_Functions(IEnumerable`1<IScoreFunction> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IFunctionScoreQuery.get_MaxBoost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFunctionScoreQuery.set_MaxBoost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IFunctionScoreQuery.get_MinScore();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFunctionScoreQuery.set_MinScore(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IFunctionScoreQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFunctionScoreQuery.set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<FunctionScoreMode> OpenSearch.Client.IFunctionScoreQuery.get_ScoreMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFunctionScoreQuery.set_ScoreMode(Nullable`1<FunctionScoreMode> value);
    public FunctionScoreQueryDescriptor`1<T> ConditionlessWhen(bool isConditionless);
    public FunctionScoreQueryDescriptor`1<T> Query(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
    public FunctionScoreQueryDescriptor`1<T> Functions(Func`2<ScoreFunctionsDescriptor`1<T>, IPromise`1<IList`1<IScoreFunction>>> functions);
    public FunctionScoreQueryDescriptor`1<T> Functions(IEnumerable`1<IScoreFunction> functions);
    public FunctionScoreQueryDescriptor`1<T> ScoreMode(Nullable`1<FunctionScoreMode> mode);
    public FunctionScoreQueryDescriptor`1<T> BoostMode(Nullable`1<FunctionBoostMode> mode);
    public FunctionScoreQueryDescriptor`1<T> MaxBoost(Nullable`1<double> maxBoost);
    public FunctionScoreQueryDescriptor`1<T> MinScore(Nullable`1<double> minScore);
}
[JsonFormatterAttribute("OpenSearch.Client.FuzzinessFormatter")]
public class OpenSearch.Client.Fuzziness : object {
    private bool _auto;
    private Nullable`1<int> _low;
    private Nullable`1<int> _high;
    private Nullable`1<int> _editDistance;
    private Nullable`1<double> _ratio;
    public static Fuzziness Auto { get; }
    private bool OpenSearch.Client.IFuzziness.Auto { get; }
    private Nullable`1<int> OpenSearch.Client.IFuzziness.Low { get; }
    private Nullable`1<int> OpenSearch.Client.IFuzziness.High { get; }
    private Nullable`1<int> OpenSearch.Client.IFuzziness.EditDistance { get; }
    private Nullable`1<double> OpenSearch.Client.IFuzziness.Ratio { get; }
    public static Fuzziness get_Auto();
    public static Fuzziness AutoLength(int low, int high);
    private sealed virtual override bool OpenSearch.Client.IFuzziness.get_Auto();
    private sealed virtual override Nullable`1<int> OpenSearch.Client.IFuzziness.get_Low();
    private sealed virtual override Nullable`1<int> OpenSearch.Client.IFuzziness.get_High();
    private sealed virtual override Nullable`1<int> OpenSearch.Client.IFuzziness.get_EditDistance();
    private sealed virtual override Nullable`1<double> OpenSearch.Client.IFuzziness.get_Ratio();
    public static Fuzziness EditDistance(int distance);
    public static Fuzziness Ratio(double ratio);
}
internal class OpenSearch.Client.FuzzinessFormatter : object {
    private static Byte[] AutoBytes;
    private static FuzzinessFormatter();
    public sealed virtual Fuzziness Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Fuzziness value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.FuzzinessInterfaceFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, IFuzziness value, IJsonFormatterResolver formatterResolver);
    public sealed virtual IFuzziness Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.FuzzyDateQuery : FuzzyQueryBase`2<Nullable`1<DateTime>, Time> {
}
public class OpenSearch.Client.FuzzyDateQueryDescriptor`1 : FuzzyQueryDescriptorBase`4<FuzzyDateQueryDescriptor`1<T>, T, Nullable`1<DateTime>, Time> {
    public FuzzyDateQueryDescriptor`1<T> Fuzziness(Time fuzziness);
    public FuzzyDateQueryDescriptor`1<T> Value(Nullable`1<DateTime> value);
}
public class OpenSearch.Client.FuzzyNumericQuery : FuzzyQueryBase`2<Nullable`1<double>, Nullable`1<double>> {
}
public class OpenSearch.Client.FuzzyNumericQueryDescriptor`1 : FuzzyQueryDescriptorBase`4<FuzzyNumericQueryDescriptor`1<T>, T, Nullable`1<double>, Nullable`1<double>> {
    public FuzzyNumericQueryDescriptor`1<T> Fuzziness(Nullable`1<double> fuzziness);
    public FuzzyNumericQueryDescriptor`1<T> Value(Nullable`1<double> value);
}
public class OpenSearch.Client.FuzzyQuery : FuzzyQueryBase`2<string, Fuzziness> {
}
internal static class OpenSearch.Client.FuzzyQueryBase : object {
    internal static bool IsConditionless(IFuzzyQuery`2<TValue, TFuzziness> fuzzy);
}
public abstract class OpenSearch.Client.FuzzyQueryBase`2 : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private TFuzziness <Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <Rewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Transpositions>k__BackingField;
    [CompilerGeneratedAttribute]
private TValue <Value>k__BackingField;
    public TFuzziness Fuzziness { get; public set; }
    public Nullable`1<int> MaxExpansions { get; public set; }
    public Nullable`1<int> PrefixLength { get; public set; }
    public MultiTermQueryRewrite Rewrite { get; public set; }
    public Nullable`1<bool> Transpositions { get; public set; }
    public TValue Value { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual TFuzziness get_Fuzziness();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fuzziness(TFuzziness value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxExpansions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PrefixLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual MultiTermQueryRewrite get_Rewrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Rewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Transpositions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Transpositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual TValue get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(TValue value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
}
public class OpenSearch.Client.FuzzyQueryDescriptor`1 : FuzzyQueryDescriptorBase`4<FuzzyQueryDescriptor`1<T>, T, string, Fuzziness> {
    public FuzzyQueryDescriptor`1<T> Fuzziness(Fuzziness fuzziness);
    public FuzzyQueryDescriptor`1<T> Value(string value);
}
public abstract class OpenSearch.Client.FuzzyQueryDescriptorBase`4 : FieldNameQueryDescriptorBase`3<TDescriptor, IFuzzyQuery`2<TValue, TFuzziness>, T> {
    [CompilerGeneratedAttribute]
private TFuzziness <OpenSearch.Client.IFuzzyQuery<TValue,TFuzziness>.Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IFuzzyQuery.MaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IFuzzyQuery.PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <OpenSearch.Client.IFuzzyQuery.Rewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IFuzzyQuery.Transpositions>k__BackingField;
    [CompilerGeneratedAttribute]
private TValue <OpenSearch.Client.IFuzzyQuery<TValue,TFuzziness>.Value>k__BackingField;
    protected bool Conditionless { get; }
    private TFuzziness OpenSearch.Client.IFuzzyQuery<TValue,TFuzziness>.Fuzziness { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IFuzzyQuery.MaxExpansions { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IFuzzyQuery.PrefixLength { get; private set; }
    private MultiTermQueryRewrite OpenSearch.Client.IFuzzyQuery.Rewrite { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IFuzzyQuery.Transpositions { get; private set; }
    private TValue OpenSearch.Client.IFuzzyQuery<TValue,TFuzziness>.Value { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override TFuzziness OpenSearch.Client.IFuzzyQuery<TValue,TFuzziness>.get_Fuzziness();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFuzzyQuery<TValue,TFuzziness>.set_Fuzziness(TFuzziness value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IFuzzyQuery.get_MaxExpansions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFuzzyQuery.set_MaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IFuzzyQuery.get_PrefixLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFuzzyQuery.set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override MultiTermQueryRewrite OpenSearch.Client.IFuzzyQuery.get_Rewrite();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFuzzyQuery.set_Rewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IFuzzyQuery.get_Transpositions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFuzzyQuery.set_Transpositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override TValue OpenSearch.Client.IFuzzyQuery<TValue,TFuzziness>.get_Value();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IFuzzyQuery<TValue,TFuzziness>.set_Value(TValue value);
    public TDescriptor MaxExpansions(Nullable`1<int> maxExpansions);
    public TDescriptor PrefixLength(Nullable`1<int> prefixLength);
    public TDescriptor Transpositions(Nullable`1<bool> enable);
    public TDescriptor Rewrite(MultiTermQueryRewrite rewrite);
}
internal class OpenSearch.Client.FuzzyQueryFormatter : FieldNameQueryFormatter`2<FuzzyQuery, IFuzzyQuery> {
    private static AutomataDictionary Fields;
    private static FuzzyQueryFormatter();
    public virtual void SerializeInternal(JsonWriter& writer, IFuzzyQuery value, IJsonFormatterResolver formatterResolver);
    public virtual IFuzzyQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static void SetFuzziness(JsonReader& reader, IFuzzyQuery query, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.GapPolicy : Enum {
    public int value__;
    [EnumMemberAttribute]
public static GapPolicy Skip;
    [EnumMemberAttribute]
public static GapPolicy InsertZeros;
}
public class OpenSearch.Client.GatewaySettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ExpectedDataNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ExpectedMasterNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ExpectedNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <RecoveryAfterTime>k__BackingField;
    public Nullable`1<int> ExpectedDataNodes { get; internal set; }
    [ObsoleteAttribute]
public Nullable`1<int> ExpectedMasterNodes { get; internal set; }
    public Nullable`1<int> ExpectedNodes { get; internal set; }
    public Time RecoveryAfterTime { get; internal set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ExpectedDataNodes();
    [CompilerGeneratedAttribute]
internal void set_ExpectedDataNodes(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ExpectedMasterNodes();
    [CompilerGeneratedAttribute]
internal void set_ExpectedMasterNodes(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ExpectedNodes();
    [CompilerGeneratedAttribute]
internal void set_ExpectedNodes(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Time get_RecoveryAfterTime();
    [CompilerGeneratedAttribute]
internal void set_RecoveryAfterTime(Time value);
}
public class OpenSearch.Client.GaussDateDecayFunction : GaussDecayFunctionBase`2<DateMath, Time> {
}
public class OpenSearch.Client.GaussDecayFunction : GaussDecayFunctionBase`2<Nullable`1<double>, Nullable`1<double>> {
}
public abstract class OpenSearch.Client.GaussDecayFunctionBase`2 : DecayFunctionBase`2<TOrigin, TScale> {
    protected string DecayType { get; }
    protected virtual string get_DecayType();
}
public class OpenSearch.Client.GaussDecayFunctionDescriptor`3 : DecayFunctionDescriptorBase`4<GaussDecayFunctionDescriptor`3<TOrigin, TScale, T>, TOrigin, TScale, T> {
    protected string DecayType { get; }
    protected virtual string get_DecayType();
}
public class OpenSearch.Client.GaussGeoDecayFunction : GaussDecayFunctionBase`2<GeoLocation, Distance> {
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.GenericProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private IStringFielddata <Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <IgnoreAbove>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IndexOptions> <IndexOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Norms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PositionIncrementGap>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermVectorOption> <TermVector>k__BackingField;
    public string Analyzer { get; public set; }
    public Nullable`1<double> Boost { get; public set; }
    public IStringFielddata Fielddata { get; public set; }
    public Nullable`1<int> IgnoreAbove { get; public set; }
    public Nullable`1<bool> Index { get; public set; }
    public Nullable`1<IndexOptions> IndexOptions { get; public set; }
    public Nullable`1<bool> Norms { get; public set; }
    public string NullValue { get; public set; }
    public Nullable`1<int> PositionIncrementGap { get; public set; }
    public string SearchAnalyzer { get; public set; }
    public Nullable`1<TermVectorOption> TermVector { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Boost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual IStringFielddata get_Fielddata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fielddata(IStringFielddata value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_IgnoreAbove();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreAbove(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IndexOptions> get_IndexOptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexOptions(Nullable`1<IndexOptions> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Norms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Norms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_NullValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NullValue(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PositionIncrementGap();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PositionIncrementGap(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SearchAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchAnalyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TermVectorOption> get_TermVector();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TermVector(Nullable`1<TermVectorOption> value);
    public sealed virtual string get_Type();
    public sealed virtual void set_Type(string value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.GenericPropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<GenericPropertyDescriptor`1<T>, IGenericProperty, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IGenericProperty.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IGenericProperty.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private IStringFielddata <OpenSearch.Client.IGenericProperty.Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IGenericProperty.IgnoreAbove>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGenericProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IndexOptions> <OpenSearch.Client.IGenericProperty.IndexOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGenericProperty.Norms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IGenericProperty.NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IGenericProperty.PositionIncrementGap>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IGenericProperty.SearchAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermVectorOption> <OpenSearch.Client.IGenericProperty.TermVector>k__BackingField;
    private string OpenSearch.Client.IGenericProperty.Analyzer { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IGenericProperty.Boost { get; private set; }
    private IStringFielddata OpenSearch.Client.IGenericProperty.Fielddata { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IGenericProperty.IgnoreAbove { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGenericProperty.Index { get; private set; }
    private Nullable`1<IndexOptions> OpenSearch.Client.IGenericProperty.IndexOptions { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGenericProperty.Norms { get; private set; }
    private string OpenSearch.Client.IGenericProperty.NullValue { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IGenericProperty.PositionIncrementGap { get; private set; }
    private string OpenSearch.Client.IGenericProperty.SearchAnalyzer { get; private set; }
    private Nullable`1<TermVectorOption> OpenSearch.Client.IGenericProperty.TermVector { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IGenericProperty.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGenericProperty.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IGenericProperty.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGenericProperty.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IStringFielddata OpenSearch.Client.IGenericProperty.get_Fielddata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGenericProperty.set_Fielddata(IStringFielddata value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IGenericProperty.get_IgnoreAbove();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGenericProperty.set_IgnoreAbove(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGenericProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGenericProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IndexOptions> OpenSearch.Client.IGenericProperty.get_IndexOptions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGenericProperty.set_IndexOptions(Nullable`1<IndexOptions> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGenericProperty.get_Norms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGenericProperty.set_Norms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IGenericProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGenericProperty.set_NullValue(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IGenericProperty.get_PositionIncrementGap();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGenericProperty.set_PositionIncrementGap(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IGenericProperty.get_SearchAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGenericProperty.set_SearchAnalyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TermVectorOption> OpenSearch.Client.IGenericProperty.get_TermVector();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGenericProperty.set_TermVector(Nullable`1<TermVectorOption> value);
    public GenericPropertyDescriptor`1<T> Type(string type);
    public GenericPropertyDescriptor`1<T> Index(Nullable`1<bool> index);
    public GenericPropertyDescriptor`1<T> Boost(Nullable`1<double> boost);
    public GenericPropertyDescriptor`1<T> NullValue(string nullValue);
    public GenericPropertyDescriptor`1<T> TermVector(Nullable`1<TermVectorOption> termVector);
    public GenericPropertyDescriptor`1<T> IndexOptions(Nullable`1<IndexOptions> indexOptions);
    public GenericPropertyDescriptor`1<T> Analyzer(string analyzer);
    public GenericPropertyDescriptor`1<T> SearchAnalyzer(string searchAnalyzer);
    public GenericPropertyDescriptor`1<T> Norms(Nullable`1<bool> enabled);
    public GenericPropertyDescriptor`1<T> IgnoreAbove(Nullable`1<int> ignoreAbove);
    public GenericPropertyDescriptor`1<T> PositionIncrementGap(Nullable`1<int> positionIncrementGap);
    public GenericPropertyDescriptor`1<T> Fielddata(Func`2<StringFielddataDescriptor, IStringFielddata> selector);
    [CompilerGeneratedAttribute]
private void <Type>b__45_0(IGenericProperty a, string v);
}
public class OpenSearch.Client.GeoBoundingBoxQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private IBoundingBox <BoundingBox>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoExecution> <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoValidationMethod> <ValidationMethod>k__BackingField;
    public IBoundingBox BoundingBox { get; public set; }
    public Nullable`1<GeoExecution> Type { get; public set; }
    public Nullable`1<GeoValidationMethod> ValidationMethod { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IBoundingBox get_BoundingBox();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoundingBox(IBoundingBox value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoExecution> get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(Nullable`1<GeoExecution> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoValidationMethod> get_ValidationMethod();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ValidationMethod(Nullable`1<GeoValidationMethod> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IGeoBoundingBoxQuery q);
}
public class OpenSearch.Client.GeoBoundingBoxQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<GeoBoundingBoxQueryDescriptor`1<T>, IGeoBoundingBoxQuery, T> {
    [CompilerGeneratedAttribute]
private IBoundingBox <OpenSearch.Client.IGeoBoundingBoxQuery.BoundingBox>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoExecution> <OpenSearch.Client.IGeoBoundingBoxQuery.Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoValidationMethod> <OpenSearch.Client.IGeoBoundingBoxQuery.ValidationMethod>k__BackingField;
    protected bool Conditionless { get; }
    private IBoundingBox OpenSearch.Client.IGeoBoundingBoxQuery.BoundingBox { get; private set; }
    private Nullable`1<GeoExecution> OpenSearch.Client.IGeoBoundingBoxQuery.Type { get; private set; }
    private Nullable`1<GeoValidationMethod> OpenSearch.Client.IGeoBoundingBoxQuery.ValidationMethod { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override IBoundingBox OpenSearch.Client.IGeoBoundingBoxQuery.get_BoundingBox();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoBoundingBoxQuery.set_BoundingBox(IBoundingBox value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoExecution> OpenSearch.Client.IGeoBoundingBoxQuery.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoBoundingBoxQuery.set_Type(Nullable`1<GeoExecution> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoValidationMethod> OpenSearch.Client.IGeoBoundingBoxQuery.get_ValidationMethod();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoBoundingBoxQuery.set_ValidationMethod(Nullable`1<GeoValidationMethod> value);
    public GeoBoundingBoxQueryDescriptor`1<T> BoundingBox(double topLeftLat, double topLeftLon, double bottomRightLat, double bottomRightLon);
    public GeoBoundingBoxQueryDescriptor`1<T> BoundingBox(GeoLocation topLeft, GeoLocation bottomRight);
    public GeoBoundingBoxQueryDescriptor`1<T> BoundingBox(string wkt);
    public GeoBoundingBoxQueryDescriptor`1<T> BoundingBox(Func`2<BoundingBoxDescriptor, IBoundingBox> boundingBoxSelector);
    public GeoBoundingBoxQueryDescriptor`1<T> Type(Nullable`1<GeoExecution> type);
    public GeoBoundingBoxQueryDescriptor`1<T> ValidationMethod(Nullable`1<GeoValidationMethod> validation);
}
internal class OpenSearch.Client.GeoBoundingBoxQueryFormatter : object {
    private static AutomataDictionary Fields;
    private static GeoBoundingBoxQueryFormatter();
    public sealed virtual IGeoBoundingBoxQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IGeoBoundingBoxQuery value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.GeoBounds : object {
    [CompilerGeneratedAttribute]
private LatLon <BottomRight>k__BackingField;
    [CompilerGeneratedAttribute]
private LatLon <TopLeft>k__BackingField;
    public LatLon BottomRight { get; public set; }
    public LatLon TopLeft { get; public set; }
    [CompilerGeneratedAttribute]
public LatLon get_BottomRight();
    [CompilerGeneratedAttribute]
public void set_BottomRight(LatLon value);
    [CompilerGeneratedAttribute]
public LatLon get_TopLeft();
    [CompilerGeneratedAttribute]
public void set_TopLeft(LatLon value);
}
public class OpenSearch.Client.GeoBoundsAggregate : MetricAggregateBase {
    [CompilerGeneratedAttribute]
private GeoBounds <Bounds>k__BackingField;
    public GeoBounds Bounds { get; public set; }
    [CompilerGeneratedAttribute]
public GeoBounds get_Bounds();
    [CompilerGeneratedAttribute]
public void set_Bounds(GeoBounds value);
}
public class OpenSearch.Client.GeoBoundsAggregation : MetricAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <WrapLongitude>k__BackingField;
    public Nullable`1<bool> WrapLongitude { get; public set; }
    public GeoBoundsAggregation(string name, Field field);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_WrapLongitude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WrapLongitude(Nullable`1<bool> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.GeoBoundsAggregationDescriptor`1 : MetricAggregationDescriptorBase`3<GeoBoundsAggregationDescriptor`1<T>, IGeoBoundsAggregation, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoBoundsAggregation.WrapLongitude>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IGeoBoundsAggregation.WrapLongitude { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoBoundsAggregation.get_WrapLongitude();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoBoundsAggregation.set_WrapLongitude(Nullable`1<bool> value);
    public GeoBoundsAggregationDescriptor`1<T> WrapLongitude(Nullable`1<bool> wrapLongitude);
}
public class OpenSearch.Client.GeoCentroidAggregate : MetricAggregateBase {
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLocation <Location>k__BackingField;
    [DataMemberAttribute]
public long Count { get; public set; }
    [DataMemberAttribute]
public GeoLocation Location { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public GeoLocation get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(GeoLocation value);
}
public class OpenSearch.Client.GeoCentroidAggregation : MetricAggregationBase {
    public GeoCentroidAggregation(string name, Field field);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.GeoCentroidAggregationDescriptor`1 : MetricAggregationDescriptorBase`3<GeoCentroidAggregationDescriptor`1<T>, IGeoCentroidAggregation, T> {
}
[JsonFormatterAttribute("OpenSearch.Client.GeoCoordinateFormatter")]
public class OpenSearch.Client.GeoCoordinate : GeoLocation {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Z>k__BackingField;
    public Nullable`1<double> Z { get; public set; }
    public GeoCoordinate(double latitude, double longitude);
    public GeoCoordinate(double latitude, double longitude, double z);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Z();
    [CompilerGeneratedAttribute]
public void set_Z(Nullable`1<double> value);
    public static GeoCoordinate op_Implicit(Double[] coordinates);
}
internal class OpenSearch.Client.GeoCoordinateFormatter : object {
    public sealed virtual GeoCoordinate Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, GeoCoordinate value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.GeoDistanceAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<GeoDistanceType> <DistanceType>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLocation <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IAggregationRange> <Ranges>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DistanceUnit> <Unit>k__BackingField;
    public Nullable`1<GeoDistanceType> DistanceType { get; public set; }
    public Field Field { get; public set; }
    public GeoLocation Origin { get; public set; }
    public IEnumerable`1<IAggregationRange> Ranges { get; public set; }
    public Nullable`1<DistanceUnit> Unit { get; public set; }
    public GeoDistanceAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoDistanceType> get_DistanceType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DistanceType(Nullable`1<GeoDistanceType> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual GeoLocation get_Origin();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Origin(GeoLocation value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IAggregationRange> get_Ranges();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ranges(IEnumerable`1<IAggregationRange> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DistanceUnit> get_Unit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Unit(Nullable`1<DistanceUnit> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.GeoDistanceAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<GeoDistanceAggregationDescriptor`1<T>, IGeoDistanceAggregation, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<GeoDistanceType> <OpenSearch.Client.IGeoDistanceAggregation.DistanceType>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IGeoDistanceAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLocation <OpenSearch.Client.IGeoDistanceAggregation.Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IAggregationRange> <OpenSearch.Client.IGeoDistanceAggregation.Ranges>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DistanceUnit> <OpenSearch.Client.IGeoDistanceAggregation.Unit>k__BackingField;
    private Nullable`1<GeoDistanceType> OpenSearch.Client.IGeoDistanceAggregation.DistanceType { get; private set; }
    private Field OpenSearch.Client.IGeoDistanceAggregation.Field { get; private set; }
    private GeoLocation OpenSearch.Client.IGeoDistanceAggregation.Origin { get; private set; }
    private IEnumerable`1<IAggregationRange> OpenSearch.Client.IGeoDistanceAggregation.Ranges { get; private set; }
    private Nullable`1<DistanceUnit> OpenSearch.Client.IGeoDistanceAggregation.Unit { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoDistanceType> OpenSearch.Client.IGeoDistanceAggregation.get_DistanceType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceAggregation.set_DistanceType(Nullable`1<GeoDistanceType> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IGeoDistanceAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override GeoLocation OpenSearch.Client.IGeoDistanceAggregation.get_Origin();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceAggregation.set_Origin(GeoLocation value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IAggregationRange> OpenSearch.Client.IGeoDistanceAggregation.get_Ranges();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceAggregation.set_Ranges(IEnumerable`1<IAggregationRange> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DistanceUnit> OpenSearch.Client.IGeoDistanceAggregation.get_Unit();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceAggregation.set_Unit(Nullable`1<DistanceUnit> value);
    public GeoDistanceAggregationDescriptor`1<T> Field(Field field);
    public GeoDistanceAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public GeoDistanceAggregationDescriptor`1<T> Origin(double lat, double lon);
    public GeoDistanceAggregationDescriptor`1<T> Origin(GeoLocation geoLocation);
    public GeoDistanceAggregationDescriptor`1<T> Unit(Nullable`1<DistanceUnit> unit);
    public GeoDistanceAggregationDescriptor`1<T> DistanceType(Nullable`1<GeoDistanceType> geoDistance);
    public GeoDistanceAggregationDescriptor`1<T> Ranges(Func`2[] ranges);
}
public class OpenSearch.Client.GeoDistanceQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private Distance <Distance>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoDistanceType> <DistanceType>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLocation <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoValidationMethod> <ValidationMethod>k__BackingField;
    public Distance Distance { get; public set; }
    public Nullable`1<GeoDistanceType> DistanceType { get; public set; }
    public GeoLocation Location { get; public set; }
    public Nullable`1<GeoValidationMethod> ValidationMethod { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Distance get_Distance();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Distance(Distance value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoDistanceType> get_DistanceType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DistanceType(Nullable`1<GeoDistanceType> value);
    [CompilerGeneratedAttribute]
public sealed virtual GeoLocation get_Location();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Location(GeoLocation value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoValidationMethod> get_ValidationMethod();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ValidationMethod(Nullable`1<GeoValidationMethod> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IGeoDistanceQuery q);
}
public class OpenSearch.Client.GeoDistanceQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<GeoDistanceQueryDescriptor`1<T>, IGeoDistanceQuery, T> {
    [CompilerGeneratedAttribute]
private Distance <OpenSearch.Client.IGeoDistanceQuery.Distance>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoDistanceType> <OpenSearch.Client.IGeoDistanceQuery.DistanceType>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLocation <OpenSearch.Client.IGeoDistanceQuery.Location>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoValidationMethod> <OpenSearch.Client.IGeoDistanceQuery.ValidationMethod>k__BackingField;
    protected bool Conditionless { get; }
    private Distance OpenSearch.Client.IGeoDistanceQuery.Distance { get; private set; }
    private Nullable`1<GeoDistanceType> OpenSearch.Client.IGeoDistanceQuery.DistanceType { get; private set; }
    private GeoLocation OpenSearch.Client.IGeoDistanceQuery.Location { get; private set; }
    private Nullable`1<GeoValidationMethod> OpenSearch.Client.IGeoDistanceQuery.ValidationMethod { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Distance OpenSearch.Client.IGeoDistanceQuery.get_Distance();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceQuery.set_Distance(Distance value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoDistanceType> OpenSearch.Client.IGeoDistanceQuery.get_DistanceType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceQuery.set_DistanceType(Nullable`1<GeoDistanceType> value);
    [CompilerGeneratedAttribute]
private sealed virtual override GeoLocation OpenSearch.Client.IGeoDistanceQuery.get_Location();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceQuery.set_Location(GeoLocation value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoValidationMethod> OpenSearch.Client.IGeoDistanceQuery.get_ValidationMethod();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceQuery.set_ValidationMethod(Nullable`1<GeoValidationMethod> value);
    public GeoDistanceQueryDescriptor`1<T> Location(GeoLocation location);
    public GeoDistanceQueryDescriptor`1<T> Location(double lat, double lon);
    public GeoDistanceQueryDescriptor`1<T> Distance(Distance distance);
    public GeoDistanceQueryDescriptor`1<T> Distance(double distance, DistanceUnit unit);
    public GeoDistanceQueryDescriptor`1<T> DistanceType(Nullable`1<GeoDistanceType> type);
    public GeoDistanceQueryDescriptor`1<T> ValidationMethod(Nullable`1<GeoValidationMethod> validation);
}
internal class OpenSearch.Client.GeoDistanceQueryFormatter : object {
    private static AutomataDictionary Fields;
    private static GeoDistanceQueryFormatter();
    public sealed virtual IGeoDistanceQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IGeoDistanceQuery value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.GeoDistanceSort : SortBase {
    [CompilerGeneratedAttribute]
private Nullable`1<GeoDistanceType> <DistanceType>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DistanceUnit> <Unit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<GeoLocation> <Points>k__BackingField;
    public Nullable`1<GeoDistanceType> DistanceType { get; public set; }
    public Field Field { get; public set; }
    public Nullable`1<DistanceUnit> Unit { get; public set; }
    public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    public IEnumerable`1<GeoLocation> Points { get; public set; }
    protected Field SortKey { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoDistanceType> get_DistanceType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DistanceType(Nullable`1<GeoDistanceType> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DistanceUnit> get_Unit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Unit(Nullable`1<DistanceUnit> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<GeoLocation> get_Points();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Points(IEnumerable`1<GeoLocation> value);
    protected virtual Field get_SortKey();
}
public class OpenSearch.Client.GeoDistanceSortDescriptor`1 : SortDescriptorBase`3<GeoDistanceSortDescriptor`1<T>, IGeoDistanceSort, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<GeoDistanceType> <OpenSearch.Client.IGeoDistanceSort.DistanceType>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IGeoDistanceSort.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DistanceUnit> <OpenSearch.Client.IGeoDistanceSort.Unit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoDistanceSort.IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<GeoLocation> <OpenSearch.Client.IGeoDistanceSort.Points>k__BackingField;
    protected Field SortKey { get; }
    private Nullable`1<GeoDistanceType> OpenSearch.Client.IGeoDistanceSort.DistanceType { get; private set; }
    private Field OpenSearch.Client.IGeoDistanceSort.Field { get; private set; }
    private Nullable`1<DistanceUnit> OpenSearch.Client.IGeoDistanceSort.Unit { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGeoDistanceSort.IgnoreUnmapped { get; private set; }
    private IEnumerable`1<GeoLocation> OpenSearch.Client.IGeoDistanceSort.Points { get; private set; }
    protected virtual Field get_SortKey();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoDistanceType> OpenSearch.Client.IGeoDistanceSort.get_DistanceType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceSort.set_DistanceType(Nullable`1<GeoDistanceType> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IGeoDistanceSort.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceSort.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<DistanceUnit> OpenSearch.Client.IGeoDistanceSort.get_Unit();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceSort.set_Unit(Nullable`1<DistanceUnit> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoDistanceSort.get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceSort.set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<GeoLocation> OpenSearch.Client.IGeoDistanceSort.get_Points();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoDistanceSort.set_Points(IEnumerable`1<GeoLocation> value);
    public GeoDistanceSortDescriptor`1<T> Points(GeoLocation[] geoLocations);
    public GeoDistanceSortDescriptor`1<T> Points(IEnumerable`1<GeoLocation> geoLocations);
    public GeoDistanceSortDescriptor`1<T> Unit(Nullable`1<DistanceUnit> unit);
    public GeoDistanceSortDescriptor`1<T> DistanceType(Nullable`1<GeoDistanceType> distanceType);
    public GeoDistanceSortDescriptor`1<T> Field(Field field);
    public GeoDistanceSortDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public GeoDistanceSortDescriptor`1<T> IgnoreUnmapped(Nullable`1<bool> ignoreUnmapped);
}
[StringEnumAttribute]
public enum OpenSearch.Client.GeoDistanceType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static GeoDistanceType Arc;
    [EnumMemberAttribute]
public static GeoDistanceType Plane;
}
[StringEnumAttribute]
public enum OpenSearch.Client.GeoExecution : Enum {
    public int value__;
    [EnumMemberAttribute]
public static GeoExecution Memory;
    [EnumMemberAttribute]
public static GeoExecution Indexed;
}
internal enum OpenSearch.Client.GeoFormat : Enum {
    public int value__;
    public static GeoFormat GeoJson;
    public static GeoFormat WellKnownText;
}
public class OpenSearch.Client.GeoHashGridAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoHashPrecision> <Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IBoundingBox <Bounds>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<GeoHashPrecision> Precision { get; public set; }
    public Nullable`1<int> ShardSize { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public IBoundingBox Bounds { get; public set; }
    public GeoHashGridAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoHashPrecision> get_Precision();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Precision(Nullable`1<GeoHashPrecision> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IBoundingBox get_Bounds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Bounds(IBoundingBox value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.GeoHashGridAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<GeoHashGridAggregationDescriptor`1<T>, IGeoHashGridAggregation, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IGeoHashGridAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoHashPrecision> <OpenSearch.Client.IGeoHashGridAggregation.Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IGeoHashGridAggregation.ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IGeoHashGridAggregation.Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IBoundingBox <OpenSearch.Client.IGeoHashGridAggregation.Bounds>k__BackingField;
    private Field OpenSearch.Client.IGeoHashGridAggregation.Field { get; private set; }
    private Nullable`1<GeoHashPrecision> OpenSearch.Client.IGeoHashGridAggregation.Precision { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IGeoHashGridAggregation.ShardSize { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IGeoHashGridAggregation.Size { get; private set; }
    private IBoundingBox OpenSearch.Client.IGeoHashGridAggregation.Bounds { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IGeoHashGridAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoHashGridAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoHashPrecision> OpenSearch.Client.IGeoHashGridAggregation.get_Precision();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoHashGridAggregation.set_Precision(Nullable`1<GeoHashPrecision> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IGeoHashGridAggregation.get_ShardSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoHashGridAggregation.set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IGeoHashGridAggregation.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoHashGridAggregation.set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IBoundingBox OpenSearch.Client.IGeoHashGridAggregation.get_Bounds();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoHashGridAggregation.set_Bounds(IBoundingBox value);
    public GeoHashGridAggregationDescriptor`1<T> Field(Field field);
    public GeoHashGridAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public GeoHashGridAggregationDescriptor`1<T> Size(Nullable`1<int> size);
    public GeoHashGridAggregationDescriptor`1<T> ShardSize(Nullable`1<int> shardSize);
    public GeoHashGridAggregationDescriptor`1<T> GeoHashPrecision(Nullable`1<GeoHashPrecision> precision);
    public GeoHashGridAggregationDescriptor`1<T> Bounds(Func`2<BoundingBoxDescriptor, IBoundingBox> selector);
}
public enum OpenSearch.Client.GeoHashPrecision : Enum {
    public int value__;
    public static GeoHashPrecision Precision1;
    public static GeoHashPrecision Precision2;
    public static GeoHashPrecision Precision3;
    public static GeoHashPrecision Precision4;
    public static GeoHashPrecision Precision5;
    public static GeoHashPrecision Precision6;
    public static GeoHashPrecision Precision7;
    public static GeoHashPrecision Precision8;
    public static GeoHashPrecision Precision9;
    public static GeoHashPrecision Precision10;
    public static GeoHashPrecision Precision11;
    public static GeoHashPrecision Precision12;
}
public class OpenSearch.Client.GeoIpProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private string <DatabaseFile>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FirstOnly>k__BackingField;
    public string DatabaseFile { get; public set; }
    public Field Field { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public IEnumerable`1<string> Properties { get; public set; }
    public Field TargetField { get; public set; }
    public Nullable`1<bool> FirstOnly { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_DatabaseFile();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DatabaseFile(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Properties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Properties(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_FirstOnly();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FirstOnly(Nullable`1<bool> value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.GeoIpProcessorDescriptor`1 : ProcessorDescriptorBase`2<GeoIpProcessorDescriptor`1<T>, IGeoIpProcessor> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IGeoIpProcessor.DatabaseFile>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IGeoIpProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoIpProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IGeoIpProcessor.Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IGeoIpProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoIpProcessor.FirstOnly>k__BackingField;
    protected string Name { get; }
    private string OpenSearch.Client.IGeoIpProcessor.DatabaseFile { get; private set; }
    private Field OpenSearch.Client.IGeoIpProcessor.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGeoIpProcessor.IgnoreMissing { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IGeoIpProcessor.Properties { get; private set; }
    private Field OpenSearch.Client.IGeoIpProcessor.TargetField { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGeoIpProcessor.FirstOnly { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IGeoIpProcessor.get_DatabaseFile();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoIpProcessor.set_DatabaseFile(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IGeoIpProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoIpProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoIpProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoIpProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IGeoIpProcessor.get_Properties();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoIpProcessor.set_Properties(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IGeoIpProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoIpProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoIpProcessor.get_FirstOnly();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoIpProcessor.set_FirstOnly(Nullable`1<bool> value);
    public GeoIpProcessorDescriptor`1<T> Field(Field field);
    public GeoIpProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public GeoIpProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
    public GeoIpProcessorDescriptor`1<T> TargetField(Field field);
    public GeoIpProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public GeoIpProcessorDescriptor`1<T> DatabaseFile(string file);
    public GeoIpProcessorDescriptor`1<T> Properties(IEnumerable`1<string> properties);
    public GeoIpProcessorDescriptor`1<T> Properties(String[] properties);
    public GeoIpProcessorDescriptor`1<T> FirstOnly(Nullable`1<bool> firstOnly);
}
[DataContractAttribute]
public class OpenSearch.Client.GeoLineAggregate : MetricAggregateBase {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private LineStringGeoShape <Geometry>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLineProperties <Properties>k__BackingField;
    [DataMemberAttribute]
public string Type { get; public set; }
    [DataMemberAttribute]
public LineStringGeoShape Geometry { get; public set; }
    [DataMemberAttribute]
public GeoLineProperties Properties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public LineStringGeoShape get_Geometry();
    [CompilerGeneratedAttribute]
public void set_Geometry(LineStringGeoShape value);
    [CompilerGeneratedAttribute]
public GeoLineProperties get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(GeoLineProperties value);
}
public class OpenSearch.Client.GeoLineAggregation : AggregationBase {
    [CompilerGeneratedAttribute]
private GeoLinePoint <Point>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLineSort <Sort>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeSort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    public GeoLinePoint Point { get; public set; }
    public GeoLineSort Sort { get; public set; }
    public Nullable`1<bool> IncludeSort { get; public set; }
    public string SortOrder { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public GeoLineAggregation(string name, Field point, Field sort);
    internal virtual void WrapInContainer(AggregationContainer c);
    [CompilerGeneratedAttribute]
public sealed virtual GeoLinePoint get_Point();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Point(GeoLinePoint value);
    [CompilerGeneratedAttribute]
public sealed virtual GeoLineSort get_Sort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sort(GeoLineSort value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeSort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeSort(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SortOrder();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SortOrder(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
}
public class OpenSearch.Client.GeoLineAggregationDescriptor`1 : DescriptorBase`2<GeoLineAggregationDescriptor`1<T>, IGeoLineAggregation> {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IAggregation.Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAggregation.Name>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLinePoint <OpenSearch.Client.IGeoLineAggregation.Point>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLineSort <OpenSearch.Client.IGeoLineAggregation.Sort>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoLineAggregation.IncludeSort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IGeoLineAggregation.SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IGeoLineAggregation.Size>k__BackingField;
    private IDictionary`2<string, object> OpenSearch.Client.IAggregation.Meta { get; private set; }
    private string OpenSearch.Client.IAggregation.Name { get; private set; }
    private GeoLinePoint OpenSearch.Client.IGeoLineAggregation.Point { get; private set; }
    private GeoLineSort OpenSearch.Client.IGeoLineAggregation.Sort { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGeoLineAggregation.IncludeSort { get; private set; }
    private string OpenSearch.Client.IGeoLineAggregation.SortOrder { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IGeoLineAggregation.Size { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IAggregation.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAggregation.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Name(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override GeoLinePoint OpenSearch.Client.IGeoLineAggregation.get_Point();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoLineAggregation.set_Point(GeoLinePoint value);
    [CompilerGeneratedAttribute]
private sealed virtual override GeoLineSort OpenSearch.Client.IGeoLineAggregation.get_Sort();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoLineAggregation.set_Sort(GeoLineSort value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoLineAggregation.get_IncludeSort();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoLineAggregation.set_IncludeSort(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IGeoLineAggregation.get_SortOrder();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoLineAggregation.set_SortOrder(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IGeoLineAggregation.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoLineAggregation.set_Size(Nullable`1<int> value);
    public GeoLineAggregationDescriptor`1<T> Point(Field field);
    public GeoLineAggregationDescriptor`1<T> Point(Expression`1<Func`2<T, TValue>> field);
    public GeoLineAggregationDescriptor`1<T> Sort(Field field);
    public GeoLineAggregationDescriptor`1<T> Sort(Expression`1<Func`2<T, TValue>> field);
    public GeoLineAggregationDescriptor`1<T> IncludeSort(Nullable`1<bool> includeSort);
    public GeoLineAggregationDescriptor`1<T> SortOrder(string sortOrder);
    public GeoLineAggregationDescriptor`1<T> Size(Nullable`1<int> size);
}
public class OpenSearch.Client.GeoLinePoint : object {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    public Field Field { get; public set; }
    [CompilerGeneratedAttribute]
public Field get_Field();
    [CompilerGeneratedAttribute]
public void set_Field(Field value);
}
[DataContractAttribute]
public class OpenSearch.Client.GeoLineProperties : object {
    [CompilerGeneratedAttribute]
private bool <Complete>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<double> <SortValues>k__BackingField;
    [DataMemberAttribute]
public bool Complete { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<double> SortValues { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Complete();
    [CompilerGeneratedAttribute]
public void set_Complete(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<double> get_SortValues();
    [CompilerGeneratedAttribute]
public void set_SortValues(IEnumerable`1<double> value);
}
public class OpenSearch.Client.GeoLineSort : object {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    public Field Field { get; public set; }
    [CompilerGeneratedAttribute]
public Field get_Field();
    [CompilerGeneratedAttribute]
public void set_Field(Field value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoLocationFormatter")]
public class OpenSearch.Client.GeoLocation : object {
    [CompilerGeneratedAttribute]
private double <Latitude>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Longitude>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoFormat <Format>k__BackingField;
    [DataMemberAttribute]
public double Latitude { get; }
    [DataMemberAttribute]
public double Longitude { get; }
    [IgnoreDataMemberAttribute]
internal GeoFormat Format { get; internal set; }
    public GeoLocation(double latitude, double longitude);
    [CompilerGeneratedAttribute]
public double get_Latitude();
    [CompilerGeneratedAttribute]
public double get_Longitude();
    [CompilerGeneratedAttribute]
internal GeoFormat get_Format();
    [CompilerGeneratedAttribute]
internal void set_Format(GeoFormat value);
    public sealed virtual bool Equals(GeoLocation other);
    public sealed virtual string ToString(string format, IFormatProvider formatProvider);
    public static bool IsValidLatitude(double latitude);
    public static bool IsValidLongitude(double longitude);
    public static GeoLocation TryCreate(double latitude, double longitude);
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static GeoLocation op_Implicit(string latLon);
    public static GeoLocation op_Implicit(Double[] lonLat);
}
internal class OpenSearch.Client.GeoLocationFormatter : object {
    private static AutomataDictionary Fields;
    private static GeoLocationFormatter();
    public sealed virtual GeoLocation Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, GeoLocation value, IJsonFormatterResolver formatterResolver);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.GeometryCollection>")]
public class OpenSearch.Client.GeometryCollection : GeoShapeBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IGeoShape> <Geometries>k__BackingField;
    public IEnumerable`1<IGeoShape> Geometries { get; public set; }
    public GeometryCollection(IEnumerable`1<IGeoShape> geometries);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IGeoShape> get_Geometries();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Geometries(IEnumerable`1<IGeoShape> value);
}
public enum OpenSearch.Client.GeoOrientation : Enum {
    public int value__;
    public static GeoOrientation ClockWise;
    public static GeoOrientation CounterClockWise;
}
internal class OpenSearch.Client.GeoOrientationFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, GeoOrientation value, IJsonFormatterResolver formatterResolver);
    public sealed virtual GeoOrientation Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.GeoPointAttribute : OpenSearchDocValuesPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoPointProperty.IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoPointProperty.IgnoreZValue>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLocation <OpenSearch.Client.IGeoPointProperty.NullValue>k__BackingField;
    public bool IgnoreMalformed { get; public set; }
    public bool IgnoreZValue { get; public set; }
    private Nullable`1<bool> OpenSearch.Client.IGeoPointProperty.IgnoreMalformed { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGeoPointProperty.IgnoreZValue { get; private set; }
    private GeoLocation OpenSearch.Client.IGeoPointProperty.NullValue { get; private set; }
    private IGeoPointProperty Self { get; }
    public bool get_IgnoreMalformed();
    public void set_IgnoreMalformed(bool value);
    public bool get_IgnoreZValue();
    public void set_IgnoreZValue(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoPointProperty.get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoPointProperty.set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoPointProperty.get_IgnoreZValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoPointProperty.set_IgnoreZValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override GeoLocation OpenSearch.Client.IGeoPointProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoPointProperty.set_NullValue(GeoLocation value);
    private IGeoPointProperty get_Self();
}
public class OpenSearch.Client.GeoPointFielddata : FielddataBase {
    [CompilerGeneratedAttribute]
private Nullable`1<GeoPointFielddataFormat> <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Distance <Precision>k__BackingField;
    public Nullable`1<GeoPointFielddataFormat> Format { get; public set; }
    public Distance Precision { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoPointFielddataFormat> get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(Nullable`1<GeoPointFielddataFormat> value);
    [CompilerGeneratedAttribute]
public sealed virtual Distance get_Precision();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Precision(Distance value);
}
public class OpenSearch.Client.GeoPointFielddataDescriptor : FielddataDescriptorBase`2<GeoPointFielddataDescriptor, IGeoPointFielddata> {
    [CompilerGeneratedAttribute]
private Nullable`1<GeoPointFielddataFormat> <OpenSearch.Client.IGeoPointFielddata.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Distance <OpenSearch.Client.IGeoPointFielddata.Precision>k__BackingField;
    private Nullable`1<GeoPointFielddataFormat> OpenSearch.Client.IGeoPointFielddata.Format { get; private set; }
    private Distance OpenSearch.Client.IGeoPointFielddata.Precision { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoPointFielddataFormat> OpenSearch.Client.IGeoPointFielddata.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoPointFielddata.set_Format(Nullable`1<GeoPointFielddataFormat> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Distance OpenSearch.Client.IGeoPointFielddata.get_Precision();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoPointFielddata.set_Precision(Distance value);
    public GeoPointFielddataDescriptor Format(Nullable`1<GeoPointFielddataFormat> format);
    public GeoPointFielddataDescriptor Precision(Distance distance);
}
[StringEnumAttribute]
public enum OpenSearch.Client.GeoPointFielddataFormat : Enum {
    public int value__;
    [EnumMemberAttribute]
public static GeoPointFielddataFormat Array;
    [EnumMemberAttribute]
public static GeoPointFielddataFormat DocValues;
    [EnumMemberAttribute]
public static GeoPointFielddataFormat Compressed;
    [EnumMemberAttribute]
public static GeoPointFielddataFormat Disabled;
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.GeoPointProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreZValue>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLocation <NullValue>k__BackingField;
    public Nullable`1<bool> IgnoreMalformed { get; public set; }
    public Nullable`1<bool> IgnoreZValue { get; public set; }
    public GeoLocation NullValue { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreZValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreZValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual GeoLocation get_NullValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NullValue(GeoLocation value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.GeoPointPropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<GeoPointPropertyDescriptor`1<T>, IGeoPointProperty, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoPointProperty.IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoPointProperty.IgnoreZValue>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoLocation <OpenSearch.Client.IGeoPointProperty.NullValue>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IGeoPointProperty.IgnoreMalformed { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGeoPointProperty.IgnoreZValue { get; private set; }
    private GeoLocation OpenSearch.Client.IGeoPointProperty.NullValue { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoPointProperty.get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoPointProperty.set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoPointProperty.get_IgnoreZValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoPointProperty.set_IgnoreZValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override GeoLocation OpenSearch.Client.IGeoPointProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoPointProperty.set_NullValue(GeoLocation value);
    public GeoPointPropertyDescriptor`1<T> IgnoreMalformed(Nullable`1<bool> ignoreMalformed);
    public GeoPointPropertyDescriptor`1<T> IgnoreZValue(Nullable`1<bool> ignoreZValue);
    public GeoPointPropertyDescriptor`1<T> NullValue(GeoLocation defaultValue);
}
public class OpenSearch.Client.GeoPolygonQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<GeoLocation> <Points>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoValidationMethod> <ValidationMethod>k__BackingField;
    public IEnumerable`1<GeoLocation> Points { get; public set; }
    public Nullable`1<GeoValidationMethod> ValidationMethod { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<GeoLocation> get_Points();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Points(IEnumerable`1<GeoLocation> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoValidationMethod> get_ValidationMethod();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ValidationMethod(Nullable`1<GeoValidationMethod> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IGeoPolygonQuery q);
}
public class OpenSearch.Client.GeoPolygonQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<GeoPolygonQueryDescriptor`1<T>, IGeoPolygonQuery, T> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<GeoLocation> <OpenSearch.Client.IGeoPolygonQuery.Points>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoValidationMethod> <OpenSearch.Client.IGeoPolygonQuery.ValidationMethod>k__BackingField;
    protected bool Conditionless { get; }
    private IEnumerable`1<GeoLocation> OpenSearch.Client.IGeoPolygonQuery.Points { get; private set; }
    private Nullable`1<GeoValidationMethod> OpenSearch.Client.IGeoPolygonQuery.ValidationMethod { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<GeoLocation> OpenSearch.Client.IGeoPolygonQuery.get_Points();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoPolygonQuery.set_Points(IEnumerable`1<GeoLocation> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoValidationMethod> OpenSearch.Client.IGeoPolygonQuery.get_ValidationMethod();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoPolygonQuery.set_ValidationMethod(Nullable`1<GeoValidationMethod> value);
    public GeoPolygonQueryDescriptor`1<T> Points(IEnumerable`1<GeoLocation> points);
    public GeoPolygonQueryDescriptor`1<T> Points(GeoLocation[] points);
    public GeoPolygonQueryDescriptor`1<T> ValidationMethod(Nullable`1<GeoValidationMethod> validation);
}
internal class OpenSearch.Client.GeoPolygonQueryFormatter : object {
    private static AutomataDictionary Fields;
    private static GeoPolygonQueryFormatter();
    public sealed virtual IGeoPolygonQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IGeoPolygonQuery value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.GeoShapeAttribute : OpenSearchDocValuesPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoShapeProperty.IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoShapeProperty.IgnoreZValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoOrientation> <OpenSearch.Client.IGeoShapeProperty.Orientation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoStrategy> <OpenSearch.Client.IGeoShapeProperty.Strategy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoShapeProperty.Coerce>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.IgnoreMalformed { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.IgnoreZValue { get; private set; }
    private Nullable`1<GeoOrientation> OpenSearch.Client.IGeoShapeProperty.Orientation { get; private set; }
    private IGeoShapeProperty Self { get; }
    private Nullable`1<GeoStrategy> OpenSearch.Client.IGeoShapeProperty.Strategy { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.Coerce { get; private set; }
    public bool IgnoreMalformed { get; public set; }
    public bool IgnoreZValue { get; public set; }
    public GeoOrientation Orientation { get; public set; }
    public GeoStrategy Strategy { get; public set; }
    public bool Coerce { get; public set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeProperty.set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.get_IgnoreZValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeProperty.set_IgnoreZValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoOrientation> OpenSearch.Client.IGeoShapeProperty.get_Orientation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeProperty.set_Orientation(Nullable`1<GeoOrientation> value);
    private IGeoShapeProperty get_Self();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoStrategy> OpenSearch.Client.IGeoShapeProperty.get_Strategy();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeProperty.set_Strategy(Nullable`1<GeoStrategy> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.get_Coerce();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeProperty.set_Coerce(Nullable`1<bool> value);
    public bool get_IgnoreMalformed();
    public void set_IgnoreMalformed(bool value);
    public bool get_IgnoreZValue();
    public void set_IgnoreZValue(bool value);
    public GeoOrientation get_Orientation();
    public void set_Orientation(GeoOrientation value);
    public GeoStrategy get_Strategy();
    public void set_Strategy(GeoStrategy value);
    public bool get_Coerce();
    public void set_Coerce(bool value);
}
public abstract class OpenSearch.Client.GeoShapeBase : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoFormat <Format>k__BackingField;
    public string Type { get; protected set; }
    internal GeoFormat Format { get; internal set; }
    protected GeoShapeBase(string type);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
protected void set_Type(string value);
    [CompilerGeneratedAttribute]
internal GeoFormat get_Format();
    [CompilerGeneratedAttribute]
internal void set_Format(GeoFormat value);
}
public class OpenSearch.Client.GeoShapeDescriptor : DescriptorBase`2<GeoShapeDescriptor, IDescriptor> {
    public IGeoShape Circle(GeoCoordinate coordinate, string radius);
    public IGeoShape Envelope(GeoCoordinate topLeftCoordinate, GeoCoordinate bottomRightCoordinate);
    public IGeoShape Envelope(IEnumerable`1<GeoCoordinate> coordinates);
    public IGeoShape GeometryCollection(IEnumerable`1<IGeoShape> geometries);
    public IGeoShape GeometryCollection(IGeoShape[] geometries);
    public IGeoShape LineString(IEnumerable`1<GeoCoordinate> coordinates);
    public IGeoShape LineString(GeoCoordinate[] coordinates);
    public IGeoShape MultiLineString(IEnumerable`1<IEnumerable`1<GeoCoordinate>> coordinates);
    public IGeoShape MultiLineString(IEnumerable`1[] coordinates);
    public IGeoShape Point(GeoCoordinate coordinates);
    public IGeoShape MultiPoint(IEnumerable`1<GeoCoordinate> coordinates);
    public IGeoShape MultiPoint(GeoCoordinate[] coordinates);
    public IGeoShape Polygon(IEnumerable`1<IEnumerable`1<GeoCoordinate>> coordinates);
    public IGeoShape Polygon(IEnumerable`1[] coordinates);
    public IGeoShape MultiPolygon(IEnumerable`1<IEnumerable`1<IEnumerable`1<GeoCoordinate>>> coordinates);
    public IGeoShape MultiPolygon(IEnumerable`1[] coordinates);
}
internal class OpenSearch.Client.GeoShapeFormatter : object {
    private static AutomataDictionary CircleFields;
    private static Byte[] CoordinatesField;
    private static Byte[] GeometriesField;
    internal static GeoShapeFormatter Instance;
    private static Byte[] TypeField;
    private static GeoShapeFormatter();
    public sealed virtual IGeoShape Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IGeoShape value, IJsonFormatterResolver formatterResolver);
    internal static IGeoShape ReadShape(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static GeometryCollection ParseGeometryCollection(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static MultiPolygonGeoShape ParseMultiPolygonGeoShape(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static PolygonGeoShape ParsePolygonGeoShape(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static MultiPointGeoShape ParseMultiPointGeoShape(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static PointGeoShape ParsePointGeoShape(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static MultiLineStringGeoShape ParseMultiLineStringGeoShape(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static LineStringGeoShape ParseLineStringGeoShape(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static EnvelopeGeoShape ParseEnvelopeGeoShape(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static CircleGeoShape ParseCircleGeoShape(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static T GetCoordinates(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.GeoShapeFormatter`1 : object {
    public sealed virtual TShape Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TShape value, IJsonFormatterResolver formatterResolver);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.GeoShapeProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreZValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoOrientation> <Orientation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoStrategy> <Strategy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Coerce>k__BackingField;
    public Nullable`1<bool> IgnoreMalformed { get; public set; }
    public Nullable`1<bool> IgnoreZValue { get; public set; }
    public Nullable`1<GeoOrientation> Orientation { get; public set; }
    public Nullable`1<GeoStrategy> Strategy { get; public set; }
    public Nullable`1<bool> Coerce { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreZValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreZValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoOrientation> get_Orientation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Orientation(Nullable`1<GeoOrientation> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoStrategy> get_Strategy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Strategy(Nullable`1<GeoStrategy> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Coerce();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coerce(Nullable`1<bool> value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.GeoShapePropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<GeoShapePropertyDescriptor`1<T>, IGeoShapeProperty, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoShapeProperty.IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoShapeProperty.IgnoreZValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoOrientation> <OpenSearch.Client.IGeoShapeProperty.Orientation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoStrategy> <OpenSearch.Client.IGeoShapeProperty.Strategy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoShapeProperty.Coerce>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.IgnoreMalformed { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.IgnoreZValue { get; private set; }
    private Nullable`1<GeoOrientation> OpenSearch.Client.IGeoShapeProperty.Orientation { get; private set; }
    private Nullable`1<GeoStrategy> OpenSearch.Client.IGeoShapeProperty.Strategy { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.Coerce { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeProperty.set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.get_IgnoreZValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeProperty.set_IgnoreZValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoOrientation> OpenSearch.Client.IGeoShapeProperty.get_Orientation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeProperty.set_Orientation(Nullable`1<GeoOrientation> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoStrategy> OpenSearch.Client.IGeoShapeProperty.get_Strategy();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeProperty.set_Strategy(Nullable`1<GeoStrategy> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoShapeProperty.get_Coerce();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeProperty.set_Coerce(Nullable`1<bool> value);
    public GeoShapePropertyDescriptor`1<T> Strategy(Nullable`1<GeoStrategy> strategy);
    public GeoShapePropertyDescriptor`1<T> Orientation(Nullable`1<GeoOrientation> orientation);
    public GeoShapePropertyDescriptor`1<T> IgnoreMalformed(Nullable`1<bool> ignoreMalformed);
    public GeoShapePropertyDescriptor`1<T> IgnoreZValue(Nullable`1<bool> ignoreZValue);
    public GeoShapePropertyDescriptor`1<T> Coerce(Nullable`1<bool> coerce);
}
public class OpenSearch.Client.GeoShapeQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IFieldLookup <IndexedShape>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoShapeRelation> <Relation>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoShape <Shape>k__BackingField;
    public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    public IFieldLookup IndexedShape { get; public set; }
    public Nullable`1<GeoShapeRelation> Relation { get; public set; }
    public IGeoShape Shape { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IFieldLookup get_IndexedShape();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexedShape(IFieldLookup value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoShapeRelation> get_Relation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Relation(Nullable`1<GeoShapeRelation> value);
    [CompilerGeneratedAttribute]
public sealed virtual IGeoShape get_Shape();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Shape(IGeoShape value);
    protected virtual bool get_Conditionless();
    internal static bool IsConditionless(IGeoShapeQuery q);
    internal virtual void InternalWrapInContainer(IQueryContainer container);
}
public class OpenSearch.Client.GeoShapeQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<GeoShapeQueryDescriptor`1<T>, IGeoShapeQuery, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGeoShapeQuery.IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IFieldLookup <OpenSearch.Client.IGeoShapeQuery.IndexedShape>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoShapeRelation> <OpenSearch.Client.IGeoShapeQuery.Relation>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoShape <OpenSearch.Client.IGeoShapeQuery.Shape>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<bool> OpenSearch.Client.IGeoShapeQuery.IgnoreUnmapped { get; private set; }
    private IFieldLookup OpenSearch.Client.IGeoShapeQuery.IndexedShape { get; private set; }
    private Nullable`1<GeoShapeRelation> OpenSearch.Client.IGeoShapeQuery.Relation { get; private set; }
    private IGeoShape OpenSearch.Client.IGeoShapeQuery.Shape { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGeoShapeQuery.get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeQuery.set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFieldLookup OpenSearch.Client.IGeoShapeQuery.get_IndexedShape();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeQuery.set_IndexedShape(IFieldLookup value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoShapeRelation> OpenSearch.Client.IGeoShapeQuery.get_Relation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeQuery.set_Relation(Nullable`1<GeoShapeRelation> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IGeoShape OpenSearch.Client.IGeoShapeQuery.get_Shape();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoShapeQuery.set_Shape(IGeoShape value);
    public GeoShapeQueryDescriptor`1<T> Relation(Nullable`1<GeoShapeRelation> relation);
    public GeoShapeQueryDescriptor`1<T> IgnoreUnmapped(Nullable`1<bool> ignoreUnmapped);
    public GeoShapeQueryDescriptor`1<T> Shape(Func`2<GeoShapeDescriptor, IGeoShape> selector);
    public GeoShapeQueryDescriptor`1<T> IndexedShape(Func`2<FieldLookupDescriptor`1<T>, IFieldLookup> selector);
}
internal class OpenSearch.Client.GeoShapeQueryFieldNameFormatter : object {
    public sealed virtual IGeoShapeQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IGeoShapeQuery value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.GeoShapeQueryFormatter : object {
    private static AutomataDictionary Fields;
    private static AutomataDictionary ShapeFields;
    private static GeoShapeQueryFormatter();
    public sealed virtual IGeoShapeQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IGeoShapeQuery value, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.GeoShapeRelation : Enum {
    public int value__;
    [EnumMemberAttribute]
public static GeoShapeRelation Intersects;
    [EnumMemberAttribute]
public static GeoShapeRelation Disjoint;
    [EnumMemberAttribute]
public static GeoShapeRelation Within;
    [EnumMemberAttribute]
public static GeoShapeRelation Contains;
}
internal static class OpenSearch.Client.GeoShapeType : object {
    public static string BoundingBox;
    public static string Circle;
    public static string Envelope;
    public static string GeometryCollection;
    public static string LineString;
    public static string MultiLineString;
    public static string MultiPoint;
    public static string MultiPolygon;
    public static string Point;
    public static string Polygon;
}
[StringEnumAttribute]
public enum OpenSearch.Client.GeoStrategy : Enum {
    public int value__;
    [EnumMemberAttribute]
public static GeoStrategy Recursive;
    [EnumMemberAttribute]
public static GeoStrategy Term;
}
[DataContractAttribute]
public class OpenSearch.Client.GeoSuggestContext : SuggestContextBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Precision>k__BackingField;
    public IEnumerable`1<string> Precision { get; public set; }
    public string Type { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Precision();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Precision(IEnumerable`1<string> value);
    public virtual string get_Type();
}
[DataContractAttribute]
public class OpenSearch.Client.GeoSuggestContextDescriptor`1 : SuggestContextDescriptorBase`3<GeoSuggestContextDescriptor`1<T>, IGeoSuggestContext, T> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IGeoSuggestContext.Precision>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.IGeoSuggestContext.Precision { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IGeoSuggestContext.get_Precision();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoSuggestContext.set_Precision(IEnumerable`1<string> value);
    public GeoSuggestContextDescriptor`1<T> Precision(String[] precisions);
}
public class OpenSearch.Client.GeoTileGridAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoTilePrecision> <Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<GeoTilePrecision> Precision { get; public set; }
    public Nullable`1<int> ShardSize { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public GeoTileGridAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoTilePrecision> get_Precision();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Precision(Nullable`1<GeoTilePrecision> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.GeoTileGridAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<GeoTileGridAggregationDescriptor`1<T>, IGeoTileGridAggregation, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IGeoTileGridAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GeoTilePrecision> <OpenSearch.Client.IGeoTileGridAggregation.Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IGeoTileGridAggregation.ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IGeoTileGridAggregation.Size>k__BackingField;
    private Field OpenSearch.Client.IGeoTileGridAggregation.Field { get; private set; }
    private Nullable`1<GeoTilePrecision> OpenSearch.Client.IGeoTileGridAggregation.Precision { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IGeoTileGridAggregation.ShardSize { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IGeoTileGridAggregation.Size { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IGeoTileGridAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoTileGridAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoTilePrecision> OpenSearch.Client.IGeoTileGridAggregation.get_Precision();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoTileGridAggregation.set_Precision(Nullable`1<GeoTilePrecision> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IGeoTileGridAggregation.get_ShardSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoTileGridAggregation.set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IGeoTileGridAggregation.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoTileGridAggregation.set_Size(Nullable`1<int> value);
    public GeoTileGridAggregationDescriptor`1<T> Field(Field field);
    public GeoTileGridAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public GeoTileGridAggregationDescriptor`1<T> Size(Nullable`1<int> size);
    public GeoTileGridAggregationDescriptor`1<T> ShardSize(Nullable`1<int> shardSize);
    public GeoTileGridAggregationDescriptor`1<T> Precision(Nullable`1<GeoTilePrecision> precision);
}
public class OpenSearch.Client.GeoTileGridCompositeAggregationSource : CompositeAggregationSourceBase {
    [CompilerGeneratedAttribute]
private Nullable`1<GeoTilePrecision> <Precision>k__BackingField;
    public Nullable`1<GeoTilePrecision> Precision { get; public set; }
    protected string SourceType { get; }
    public GeoTileGridCompositeAggregationSource(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GeoTilePrecision> get_Precision();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Precision(Nullable`1<GeoTilePrecision> value);
    protected virtual string get_SourceType();
}
public class OpenSearch.Client.GeoTileGridCompositeAggregationSourceDescriptor`1 : CompositeAggregationSourceDescriptorBase`3<GeoTileGridCompositeAggregationSourceDescriptor`1<T>, IGeoTileGridCompositeAggregationSource, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<GeoTilePrecision> <OpenSearch.Client.IGeoTileGridCompositeAggregationSource.Precision>k__BackingField;
    private Nullable`1<GeoTilePrecision> OpenSearch.Client.IGeoTileGridCompositeAggregationSource.Precision { get; private set; }
    public GeoTileGridCompositeAggregationSourceDescriptor`1(string name);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GeoTilePrecision> OpenSearch.Client.IGeoTileGridCompositeAggregationSource.get_Precision();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGeoTileGridCompositeAggregationSource.set_Precision(Nullable`1<GeoTilePrecision> value);
    public GeoTileGridCompositeAggregationSourceDescriptor`1<T> Precision(Nullable`1<GeoTilePrecision> precision);
}
public enum OpenSearch.Client.GeoTilePrecision : Enum {
    public int value__;
    public static GeoTilePrecision Precision0;
    public static GeoTilePrecision Precision1;
    public static GeoTilePrecision Precision2;
    public static GeoTilePrecision Precision3;
    public static GeoTilePrecision Precision4;
    public static GeoTilePrecision Precision5;
    public static GeoTilePrecision Precision6;
    public static GeoTilePrecision Precision7;
    public static GeoTilePrecision Precision8;
    public static GeoTilePrecision Precision9;
    public static GeoTilePrecision Precision10;
    public static GeoTilePrecision Precision11;
    public static GeoTilePrecision Precision12;
    public static GeoTilePrecision Precision13;
    public static GeoTilePrecision Precision14;
    public static GeoTilePrecision Precision15;
    public static GeoTilePrecision Precision16;
    public static GeoTilePrecision Precision17;
    public static GeoTilePrecision Precision18;
    public static GeoTilePrecision Precision19;
    public static GeoTilePrecision Precision20;
    public static GeoTilePrecision Precision21;
    public static GeoTilePrecision Precision22;
    public static GeoTilePrecision Precision23;
    public static GeoTilePrecision Precision24;
    public static GeoTilePrecision Precision25;
    public static GeoTilePrecision Precision26;
    public static GeoTilePrecision Precision27;
    public static GeoTilePrecision Precision28;
    public static GeoTilePrecision Precision29;
}
[StringEnumAttribute]
public enum OpenSearch.Client.GeoTree : Enum {
    public int value__;
    [EnumMemberAttribute]
public static GeoTree Geohash;
    [EnumMemberAttribute]
public static GeoTree Quadtree;
}
[StringEnumAttribute]
public enum OpenSearch.Client.GeoValidationMethod : Enum {
    public int value__;
    [EnumMemberAttribute]
public static GeoValidationMethod Coerce;
    [EnumMemberAttribute]
public static GeoValidationMethod IgnoreMalformed;
    [EnumMemberAttribute]
public static GeoValidationMethod Strict;
}
public class OpenSearch.Client.GeoWKTException : Exception {
    public GeoWKTException(string message);
    public GeoWKTException(string message, int lineNumber, int position);
}
public class OpenSearch.Client.GeoWKTReader : object {
    public static IGeoShape Read(string wellKnownText);
    private static IGeoShape Read(WellKnownTextTokenizer tokenizer, string shapeType);
    private static PointGeoShape ParsePoint(WellKnownTextTokenizer tokenizer);
    private static MultiPointGeoShape ParseMultiPoint(WellKnownTextTokenizer tokenizer);
    private static LineStringGeoShape ParseLineString(WellKnownTextTokenizer tokenizer);
    private static MultiLineStringGeoShape ParseMultiLineString(WellKnownTextTokenizer tokenizer);
    private static PolygonGeoShape ParsePolygon(WellKnownTextTokenizer tokenizer);
    private static MultiPolygonGeoShape ParseMultiPolygon(WellKnownTextTokenizer tokenizer);
    private static EnvelopeGeoShape ParseBoundingBox(WellKnownTextTokenizer tokenizer);
    private static GeometryCollection ParseGeometryCollection(WellKnownTextTokenizer tokenizer);
    private static List`1<IEnumerable`1<GeoCoordinate>> ParseCoordinateLists(WellKnownTextTokenizer tokenizer);
    private static List`1<GeoCoordinate> ParseCoordinates(WellKnownTextTokenizer tokenizer);
    private static GeoCoordinate ParseCoordinate(WellKnownTextTokenizer tokenizer);
    internal static void NextCloser(WellKnownTextTokenizer tokenizer);
    private static void NextComma(WellKnownTextTokenizer tokenizer);
    internal static TokenType NextEmptyOrOpen(WellKnownTextTokenizer tokenizer);
    private static TokenType NextCloserOrComma(WellKnownTextTokenizer tokenizer);
    internal static double NextNumber(WellKnownTextTokenizer tokenizer);
    internal static bool IsNumberNext(WellKnownTextTokenizer tokenizer);
}
public class OpenSearch.Client.GeoWKTWriter : object {
    public static string Write(IGeoShape shape);
    private static string Write(IGeoShape shape, StringBuilder builder);
    private static void WritePoint(IPointGeoShape point, StringBuilder builder);
    private static void WriteMultiPoint(IMultiPointGeoShape multiPoint, StringBuilder builder);
    private static void WriteLineString(ILineStringGeoShape lineString, StringBuilder builder);
    private static void WriteMultiLineString(IMultiLineStringGeoShape multiLineString, StringBuilder builder);
    private static void WritePolygon(IPolygonGeoShape polygon, StringBuilder builder);
    private static void WriteMultiPolygon(IMultiPolygonGeoShape multiPolygon, StringBuilder builder);
    private static void WriteGeometryCollection(IGeometryCollection geometryCollection, StringBuilder builder);
    private static void WriteEnvelope(IEnvelopeGeoShape envelope, StringBuilder builder);
    private static void WriteCoordinatesList(IEnumerable`1<IEnumerable`1<GeoCoordinate>> coordinates, StringBuilder builder);
    private static void WriteCoordinates(IEnumerable`1<GeoCoordinate> coordinates, StringBuilder builder);
    private static void WriteCoordinate(GeoCoordinate coordinate, StringBuilder builder);
}
public class OpenSearch.Client.GetAliasDescriptor : RequestDescriptorBase`3<GetAliasDescriptor, GetAliasRequestParameters, IGetAliasRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.IGetAliasRequest.Name { get; }
    private Indices OpenSearch.Client.IGetAliasRequest.Index { get; }
    public GetAliasDescriptor(Names name);
    public GetAliasDescriptor(Indices index, Names name);
    public GetAliasDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IGetAliasRequest.get_Name();
    private sealed virtual override Indices OpenSearch.Client.IGetAliasRequest.get_Index();
    public GetAliasDescriptor Name(Names name);
    public GetAliasDescriptor Index(Indices index);
    public GetAliasDescriptor Index();
    public GetAliasDescriptor AllIndices();
    public GetAliasDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public GetAliasDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public GetAliasDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public GetAliasDescriptor Local(Nullable`1<bool> local);
}
public class OpenSearch.Client.GetAliasRequest : PlainRequestBase`1<GetAliasRequestParameters> {
    protected IGetAliasRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IGetAliasRequest.Name { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IGetAliasRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public GetAliasRequest(Names name);
    public GetAliasRequest(Indices index, Names name);
    public GetAliasRequest(Indices index);
    protected IGetAliasRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IGetAliasRequest.get_Name();
    private sealed virtual override Indices OpenSearch.Client.IGetAliasRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
}
[JsonFormatterAttribute("OpenSearch.Client.ResolvableDictionaryResponseFormatter`3<OpenSearch.Client.GetAliasResponse,OpenSearch.Client.IndexName,OpenSearch.Client.IndexAliases>")]
public class OpenSearch.Client.GetAliasResponse : DictionaryResponseBase`2<IndexName, IndexAliases> {
    [IgnoreDataMemberAttribute]
public IReadOnlyDictionary`2<IndexName, IndexAliases> Indices { get; }
    public bool IsValid { get; }
    public IReadOnlyDictionary`2<IndexName, IndexAliases> get_Indices();
    public virtual bool get_IsValid();
}
public class OpenSearch.Client.GetAllPitsDescriptor : RequestDescriptorBase`3<GetAllPitsDescriptor, GetAllPitsRequestParameters, IGetAllPitsRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
}
public class OpenSearch.Client.GetAllPitsRequest : PlainRequestBase`1<GetAllPitsRequestParameters> {
    protected IGetAllPitsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    protected IGetAllPitsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
}
[DataContractAttribute]
public class OpenSearch.Client.GetAllPitsResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<PitDetail> <Pits>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<PitDetail> Pits { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<PitDetail> get_Pits();
    [CompilerGeneratedAttribute]
internal void set_Pits(IReadOnlyCollection`1<PitDetail> value);
}
public class OpenSearch.Client.GetComponentTemplateDescriptor : RequestDescriptorBase`3<GetComponentTemplateDescriptor, GetComponentTemplateRequestParameters, IGetComponentTemplateRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.IGetComponentTemplateRequest.Name { get; }
    public GetComponentTemplateDescriptor(Names name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IGetComponentTemplateRequest.get_Name();
    public GetComponentTemplateDescriptor Name(Names name);
    public GetComponentTemplateDescriptor ClusterManagerTimeout(Time clustermanagertimeout);
    public GetComponentTemplateDescriptor Local(Nullable`1<bool> local);
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public GetComponentTemplateDescriptor MasterTimeout(Time mastertimeout);
}
public class OpenSearch.Client.GetComponentTemplateRequest : PlainRequestBase`1<GetComponentTemplateRequestParameters> {
    protected IGetComponentTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IGetComponentTemplateRequest.Name { get; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public Time MasterTimeout { get; public set; }
    public GetComponentTemplateRequest(Names name);
    protected IGetComponentTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IGetComponentTemplateRequest.get_Name();
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.GetComponentTemplateResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<NamedComponentTemplate> <ComponentTemplates>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<NamedComponentTemplate> ComponentTemplates { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<NamedComponentTemplate> get_ComponentTemplates();
    [CompilerGeneratedAttribute]
internal void set_ComponentTemplates(IReadOnlyCollection`1<NamedComponentTemplate> value);
}
public class OpenSearch.Client.GetComposableIndexTemplateDescriptor : RequestDescriptorBase`3<GetComposableIndexTemplateDescriptor, GetComposableIndexTemplateRequestParameters, IGetComposableIndexTemplateRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.IGetComposableIndexTemplateRequest.Name { get; }
    public GetComposableIndexTemplateDescriptor(Names name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IGetComposableIndexTemplateRequest.get_Name();
    public GetComposableIndexTemplateDescriptor Name(Names name);
    public GetComposableIndexTemplateDescriptor ClusterManagerTimeout(Time clustermanagertimeout);
    public GetComposableIndexTemplateDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public GetComposableIndexTemplateDescriptor Local(Nullable`1<bool> local);
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public GetComposableIndexTemplateDescriptor MasterTimeout(Time mastertimeout);
}
public class OpenSearch.Client.GetComposableIndexTemplateRequest : PlainRequestBase`1<GetComposableIndexTemplateRequestParameters> {
    protected IGetComposableIndexTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IGetComposableIndexTemplateRequest.Name { get; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public Time MasterTimeout { get; public set; }
    public GetComposableIndexTemplateRequest(Names name);
    protected IGetComposableIndexTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IGetComposableIndexTemplateRequest.get_Name();
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.GetComposableIndexTemplateResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<NamedComposableIndexTemplate> <IndexTemplates>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<NamedComposableIndexTemplate> IndexTemplates { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<NamedComposableIndexTemplate> get_IndexTemplates();
    [CompilerGeneratedAttribute]
internal void set_IndexTemplates(IReadOnlyCollection`1<NamedComposableIndexTemplate> value);
}
public class OpenSearch.Client.GetDescriptor`1 : RequestDescriptorBase`3<GetDescriptor`1<TDocument>, GetRequestParameters, IGetRequest`1<TDocument>> {
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.IGetRequest.Index { get; }
    private Id OpenSearch.Client.IGetRequest.Id { get; }
    public GetDescriptor`1(IndexName index, Id id);
    public GetDescriptor`1(Id id);
    public GetDescriptor`1(TDocument documentWithId, IndexName index, Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IGetRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.IGetRequest.get_Id();
    public GetDescriptor`1<TDocument> Index(IndexName index);
    public GetDescriptor`1<TDocument> Index();
    public GetDescriptor`1<TDocument> Preference(string preference);
    public GetDescriptor`1<TDocument> Realtime(Nullable`1<bool> realtime);
    public GetDescriptor`1<TDocument> Refresh(Nullable`1<bool> refresh);
    public GetDescriptor`1<TDocument> Routing(Routing routing);
    public GetDescriptor`1<TDocument> SourceEnabled(Nullable`1<bool> sourceenabled);
    public GetDescriptor`1<TDocument> SourceExcludes(Fields sourceexcludes);
    public GetDescriptor`1<TDocument> SourceExcludes(Expression`1[] fields);
    public GetDescriptor`1<TDocument> SourceIncludes(Fields sourceincludes);
    public GetDescriptor`1<TDocument> SourceIncludes(Expression`1[] fields);
    public GetDescriptor`1<TDocument> StoredFields(Fields storedfields);
    public GetDescriptor`1<TDocument> StoredFields(Expression`1[] fields);
    public GetDescriptor`1<TDocument> Version(Nullable`1<long> version);
    public GetDescriptor`1<TDocument> VersionType(Nullable`1<VersionType> versiontype);
    public GetDescriptor`1<TDocument> ExecuteOnLocalShard();
}
internal class OpenSearch.Client.GetEnumerator`1 : object {
    private SemaphoreSlim _gate;
    private ConcurrentQueue`1<TSource> _queue;
    private TSource _current;
    private bool _disposed;
    private Exception _error;
    private IDisposable _subscription;
    public TSource Current { get; }
    private object System.Collections.IEnumerator.Current { get; }
    public sealed virtual TSource get_Current();
    private sealed virtual override object System.Collections.IEnumerator.get_Current();
    public sealed virtual void Dispose();
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
    public sealed virtual void OnCompleted();
    public sealed virtual void OnError(Exception error);
    public virtual void OnNext(TSource value);
    private IEnumerator`1<TSource> Run(IObservable`1<TSource> source);
    public IEnumerable`1<TSource> ToEnumerable(IObservable`1<TSource> source);
}
public class OpenSearch.Client.GetFieldMappingDescriptor`1 : RequestDescriptorBase`3<GetFieldMappingDescriptor`1<TDocument>, GetFieldMappingRequestParameters, IGetFieldMappingRequest> {
    internal ApiUrls ApiUrls { get; }
    private Fields OpenSearch.Client.IGetFieldMappingRequest.Fields { get; }
    private Indices OpenSearch.Client.IGetFieldMappingRequest.Index { get; }
    public GetFieldMappingDescriptor`1(Fields fields);
    public GetFieldMappingDescriptor`1(Indices index, Fields fields);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Fields OpenSearch.Client.IGetFieldMappingRequest.get_Fields();
    private sealed virtual override Indices OpenSearch.Client.IGetFieldMappingRequest.get_Index();
    public GetFieldMappingDescriptor`1<TDocument> Index(Indices index);
    public GetFieldMappingDescriptor`1<TDocument> Index();
    public GetFieldMappingDescriptor`1<TDocument> AllIndices();
    public GetFieldMappingDescriptor`1<TDocument> AllowNoIndices(Nullable`1<bool> allownoindices);
    public GetFieldMappingDescriptor`1<TDocument> ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public GetFieldMappingDescriptor`1<TDocument> IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public GetFieldMappingDescriptor`1<TDocument> IncludeDefaults(Nullable`1<bool> includedefaults);
    public GetFieldMappingDescriptor`1<TDocument> IncludeTypeName(Nullable`1<bool> includetypename);
    public GetFieldMappingDescriptor`1<TDocument> Local(Nullable`1<bool> local);
}
public class OpenSearch.Client.GetFieldMappingRequest : PlainRequestBase`1<GetFieldMappingRequestParameters> {
    protected IGetFieldMappingRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Fields OpenSearch.Client.IGetFieldMappingRequest.Fields { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IGetFieldMappingRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> IncludeDefaults { get; public set; }
    public Nullable`1<bool> IncludeTypeName { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public GetFieldMappingRequest(Fields fields);
    public GetFieldMappingRequest(Indices index, Fields fields);
    protected IGetFieldMappingRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Fields OpenSearch.Client.IGetFieldMappingRequest.get_Fields();
    private sealed virtual override Indices OpenSearch.Client.IGetFieldMappingRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeDefaults();
    public void set_IncludeDefaults(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeTypeName();
    public void set_IncludeTypeName(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
}
[JsonFormatterAttribute("OpenSearch.Client.ResolvableDictionaryResponseFormatter`3<OpenSearch.Client.GetFieldMappingResponse,OpenSearch.Client.IndexName,OpenSearch.Client.TypeFieldMappings>")]
public class OpenSearch.Client.GetFieldMappingResponse : DictionaryResponseBase`2<IndexName, TypeFieldMappings> {
    [IgnoreDataMemberAttribute]
public IReadOnlyDictionary`2<IndexName, TypeFieldMappings> Indices { get; }
    public bool IsValid { get; }
    public IReadOnlyDictionary`2<IndexName, TypeFieldMappings> get_Indices();
    public virtual bool get_IsValid();
    public IFieldMapping GetMapping(IndexName index, Field property);
    public IFieldMapping MappingFor(Field property);
    public IFieldMapping MappingFor(Field property, IndexName index);
    public IFieldMapping MappingFor(Expression`1<Func`2<T, TValue>> objectPath, IndexName index);
    public IFieldMapping MappingFor(Expression`1<Func`2<T, object>> objectPath, IndexName index);
    private IReadOnlyDictionary`2<Field, FieldMapping> MappingsFor(IndexName index);
}
public class OpenSearch.Client.GetIndexDescriptor : RequestDescriptorBase`3<GetIndexDescriptor, GetIndexRequestParameters, IGetIndexRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IGetIndexRequest.Index { get; }
    public GetIndexDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IGetIndexRequest.get_Index();
    public GetIndexDescriptor Index(Indices index);
    public GetIndexDescriptor Index();
    public GetIndexDescriptor AllIndices();
    public GetIndexDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public GetIndexDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public GetIndexDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public GetIndexDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public GetIndexDescriptor IncludeDefaults(Nullable`1<bool> includedefaults);
    public GetIndexDescriptor IncludeTypeName(Nullable`1<bool> includetypename);
    public GetIndexDescriptor Local(Nullable`1<bool> local);
    public GetIndexDescriptor MasterTimeout(Time mastertimeout);
    public GetIndexDescriptor ClusterManagerTimeout(Time timeout);
}
public class OpenSearch.Client.GetIndexRequest : PlainRequestBase`1<GetIndexRequestParameters> {
    protected IGetIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IGetIndexRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> IncludeDefaults { get; public set; }
    public Nullable`1<bool> IncludeTypeName { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public GetIndexRequest(Indices index);
    protected IGetIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IGetIndexRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeDefaults();
    public void set_IncludeDefaults(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeTypeName();
    public void set_IncludeTypeName(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
[JsonFormatterAttribute("OpenSearch.Client.ResolvableDictionaryResponseFormatter`3<OpenSearch.Client.GetIndexResponse,OpenSearch.Client.IndexName,OpenSearch.Client.IndexState>")]
public class OpenSearch.Client.GetIndexResponse : DictionaryResponseBase`2<IndexName, IndexState> {
    public IReadOnlyDictionary`2<IndexName, IndexState> Indices { get; }
    public IReadOnlyDictionary`2<IndexName, IndexState> get_Indices();
}
public class OpenSearch.Client.GetIndexSettingsDescriptor : RequestDescriptorBase`3<GetIndexSettingsDescriptor, GetIndexSettingsRequestParameters, IGetIndexSettingsRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IGetIndexSettingsRequest.Index { get; }
    private Names OpenSearch.Client.IGetIndexSettingsRequest.Name { get; }
    public GetIndexSettingsDescriptor(Indices index);
    public GetIndexSettingsDescriptor(Indices index, Names name);
    public GetIndexSettingsDescriptor(Names name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IGetIndexSettingsRequest.get_Index();
    private sealed virtual override Names OpenSearch.Client.IGetIndexSettingsRequest.get_Name();
    public GetIndexSettingsDescriptor Index(Indices index);
    public GetIndexSettingsDescriptor Index();
    public GetIndexSettingsDescriptor AllIndices();
    public GetIndexSettingsDescriptor Name(Names name);
    public GetIndexSettingsDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public GetIndexSettingsDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public GetIndexSettingsDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public GetIndexSettingsDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public GetIndexSettingsDescriptor IncludeDefaults(Nullable`1<bool> includedefaults);
    public GetIndexSettingsDescriptor Local(Nullable`1<bool> local);
    public GetIndexSettingsDescriptor MasterTimeout(Time mastertimeout);
    public GetIndexSettingsDescriptor ClusterManagerTimeout(Time timeout);
}
public class OpenSearch.Client.GetIndexSettingsRequest : PlainRequestBase`1<GetIndexSettingsRequestParameters> {
    protected IGetIndexSettingsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IGetIndexSettingsRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IGetIndexSettingsRequest.Name { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> IncludeDefaults { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public GetIndexSettingsRequest(Indices index);
    public GetIndexSettingsRequest(Indices index, Names name);
    public GetIndexSettingsRequest(Names name);
    protected IGetIndexSettingsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IGetIndexSettingsRequest.get_Index();
    private sealed virtual override Names OpenSearch.Client.IGetIndexSettingsRequest.get_Name();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeDefaults();
    public void set_IncludeDefaults(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
[JsonFormatterAttribute("OpenSearch.Client.ResolvableDictionaryResponseFormatter`3<OpenSearch.Client.GetIndexSettingsResponse,OpenSearch.Client.IndexName,OpenSearch.Client.IndexState>")]
public class OpenSearch.Client.GetIndexSettingsResponse : DictionaryResponseBase`2<IndexName, IndexState> {
    [IgnoreDataMemberAttribute]
public IReadOnlyDictionary`2<IndexName, IndexState> Indices { get; }
    public IReadOnlyDictionary`2<IndexName, IndexState> get_Indices();
}
public class OpenSearch.Client.GetIndexTemplateDescriptor : RequestDescriptorBase`3<GetIndexTemplateDescriptor, GetIndexTemplateRequestParameters, IGetIndexTemplateRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.IGetIndexTemplateRequest.Name { get; }
    public GetIndexTemplateDescriptor(Names name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IGetIndexTemplateRequest.get_Name();
    public GetIndexTemplateDescriptor Name(Names name);
    public GetIndexTemplateDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public GetIndexTemplateDescriptor IncludeTypeName(Nullable`1<bool> includetypename);
    public GetIndexTemplateDescriptor Local(Nullable`1<bool> local);
    public GetIndexTemplateDescriptor MasterTimeout(Time mastertimeout);
    public GetIndexTemplateDescriptor ClusterManagerTimeout(Time timeout);
}
public class OpenSearch.Client.GetIndexTemplateRequest : PlainRequestBase`1<GetIndexTemplateRequestParameters> {
    protected IGetIndexTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IGetIndexTemplateRequest.Name { get; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Nullable`1<bool> IncludeTypeName { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public GetIndexTemplateRequest(Names name);
    protected IGetIndexTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IGetIndexTemplateRequest.get_Name();
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeTypeName();
    public void set_IncludeTypeName(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
[DataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.DictionaryResponseFormatter`3<OpenSearch.Client.GetIndexTemplateResponse,System.String,OpenSearch.Client.TemplateMapping>")]
public class OpenSearch.Client.GetIndexTemplateResponse : DictionaryResponseBase`2<string, TemplateMapping> {
    [IgnoreDataMemberAttribute]
public IReadOnlyDictionary`2<string, TemplateMapping> TemplateMappings { get; }
    public IReadOnlyDictionary`2<string, TemplateMapping> get_TemplateMappings();
}
[ExtensionAttribute]
public static class OpenSearch.Client.GetManyExtensions : object {
    private static Func`3<MultiGetOperationDescriptor`1<T>, string, IMultiGetOperation> Lookup(IndexName index);
    [ExtensionAttribute]
public static IEnumerable`1<IMultiGetHit`1<T>> GetMany(IOpenSearchClient client, IEnumerable`1<string> ids, IndexName index);
    [ExtensionAttribute]
public static IEnumerable`1<IMultiGetHit`1<T>> GetMany(IOpenSearchClient client, IEnumerable`1<long> ids, IndexName index);
    [AsyncStateMachineAttribute("OpenSearch.Client.GetManyExtensions/<GetManyAsync>d__3`1")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<IMultiGetHit`1<T>>> GetManyAsync(IOpenSearchClient client, IEnumerable`1<string> ids, IndexName index, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<IMultiGetHit`1<T>>> GetManyAsync(IOpenSearchClient client, IEnumerable`1<long> ids, IndexName index, CancellationToken cancellationToken);
}
public class OpenSearch.Client.GetMappingDescriptor`1 : RequestDescriptorBase`3<GetMappingDescriptor`1<TDocument>, GetMappingRequestParameters, IGetMappingRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IGetMappingRequest.Index { get; }
    public GetMappingDescriptor`1(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IGetMappingRequest.get_Index();
    public GetMappingDescriptor`1<TDocument> Index(Indices index);
    public GetMappingDescriptor`1<TDocument> Index();
    public GetMappingDescriptor`1<TDocument> AllIndices();
    public GetMappingDescriptor`1<TDocument> AllowNoIndices(Nullable`1<bool> allownoindices);
    public GetMappingDescriptor`1<TDocument> ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public GetMappingDescriptor`1<TDocument> IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public GetMappingDescriptor`1<TDocument> IncludeTypeName(Nullable`1<bool> includetypename);
    public GetMappingDescriptor`1<TDocument> MasterTimeout(Time mastertimeout);
    public GetMappingDescriptor`1<TDocument> ClusterManagerTimeout(Time timeout);
}
public class OpenSearch.Client.GetMappingRequest : PlainRequestBase`1<GetMappingRequestParameters> {
    protected IGetMappingRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IGetMappingRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> IncludeTypeName { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public GetMappingRequest(Indices index);
    protected IGetMappingRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IGetMappingRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeTypeName();
    public void set_IncludeTypeName(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
[JsonFormatterAttribute("OpenSearch.Client.ResolvableDictionaryResponseFormatter`3<OpenSearch.Client.GetMappingResponse,OpenSearch.Client.IndexName,OpenSearch.Client.IndexMappings>")]
public class OpenSearch.Client.GetMappingResponse : DictionaryResponseBase`2<IndexName, IndexMappings> {
    [IgnoreDataMemberAttribute]
public IReadOnlyDictionary`2<IndexName, IndexMappings> Indices { get; }
    public IReadOnlyDictionary`2<IndexName, IndexMappings> get_Indices();
    public void Accept(IMappingVisitor visitor);
}
[ExtensionAttribute]
public static class OpenSearch.Client.GetMappingResponseExtensions : object {
    [ExtensionAttribute]
public static ITypeMapping GetMappingFor(GetMappingResponse response);
    [ExtensionAttribute]
public static ITypeMapping GetMappingFor(GetMappingResponse response, IndexName index);
}
public class OpenSearch.Client.GetPipelineDescriptor : RequestDescriptorBase`3<GetPipelineDescriptor, GetPipelineRequestParameters, IGetPipelineRequest> {
    internal ApiUrls ApiUrls { get; }
    private Id OpenSearch.Client.IGetPipelineRequest.Id { get; }
    public GetPipelineDescriptor(Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IGetPipelineRequest.get_Id();
    public GetPipelineDescriptor Id(Id id);
    public GetPipelineDescriptor MasterTimeout(Time mastertimeout);
    public GetPipelineDescriptor ClusterManagerTimeout(Time timeout);
}
public class OpenSearch.Client.GetPipelineRequest : PlainRequestBase`1<GetPipelineRequestParameters> {
    protected IGetPipelineRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IGetPipelineRequest.Id { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public GetPipelineRequest(Id id);
    protected IGetPipelineRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IGetPipelineRequest.get_Id();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
[JsonFormatterAttribute("OpenSearch.Client.DictionaryResponseFormatter`3<OpenSearch.Client.GetPipelineResponse,System.String,OpenSearch.Client.IPipeline>")]
public class OpenSearch.Client.GetPipelineResponse : DictionaryResponseBase`2<string, IPipeline> {
    [IgnoreDataMemberAttribute]
public IReadOnlyDictionary`2<string, IPipeline> Pipelines { get; }
    public IReadOnlyDictionary`2<string, IPipeline> get_Pipelines();
}
public class OpenSearch.Client.GetRepositoryDescriptor : RequestDescriptorBase`3<GetRepositoryDescriptor, GetRepositoryRequestParameters, IGetRepositoryRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.IGetRepositoryRequest.RepositoryName { get; }
    public GetRepositoryDescriptor(Names repository);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IGetRepositoryRequest.get_RepositoryName();
    public GetRepositoryDescriptor RepositoryName(Names repository);
    public GetRepositoryDescriptor Local(Nullable`1<bool> local);
    public GetRepositoryDescriptor MasterTimeout(Time mastertimeout);
    public GetRepositoryDescriptor ClusterManagerTimeout(Time timeout);
}
public class OpenSearch.Client.GetRepositoryRequest : PlainRequestBase`1<GetRepositoryRequestParameters> {
    protected IGetRepositoryRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IGetRepositoryRequest.RepositoryName { get; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public GetRepositoryRequest(Names repository);
    protected IGetRepositoryRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IGetRepositoryRequest.get_RepositoryName();
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
[DataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.GetRepositoryResponseFormatter")]
public class OpenSearch.Client.GetRepositoryResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, ISnapshotRepository> <Repositories>k__BackingField;
    public IReadOnlyDictionary`2<string, ISnapshotRepository> Repositories { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, ISnapshotRepository> get_Repositories();
    [CompilerGeneratedAttribute]
internal void set_Repositories(IReadOnlyDictionary`2<string, ISnapshotRepository> value);
    public AzureRepository Azure(string name);
    public FileSystemRepository FileSystem(string name);
    public HdfsRepository Hdfs(string name);
    public ReadOnlyUrlRepository ReadOnlyUrl(string name);
    public S3Repository S3(string name);
    private TRepository Get(string name);
}
internal class OpenSearch.Client.GetRepositoryResponseFormatter : object {
    public sealed virtual GetRepositoryResponse Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, GetRepositoryResponse value, IJsonFormatterResolver formatterResolver);
    private TRepository GetRepository(ArraySegment`1<byte> settings, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.GetRequest : PlainRequestBase`1<GetRequestParameters> {
    protected IGetRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IGetRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IGetRequest.Id { get; }
    public string Preference { get; public set; }
    public Nullable`1<bool> Realtime { get; public set; }
    public Nullable`1<bool> Refresh { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<bool> SourceEnabled { get; public set; }
    public Fields SourceExcludes { get; public set; }
    public Fields SourceIncludes { get; public set; }
    public Fields StoredFields { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    public GetRequest(IndexName index, Id id);
    protected IGetRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IGetRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.IGetRequest.get_Id();
    public string get_Preference();
    public void set_Preference(string value);
    public Nullable`1<bool> get_Realtime();
    public void set_Realtime(Nullable`1<bool> value);
    public Nullable`1<bool> get_Refresh();
    public void set_Refresh(Nullable`1<bool> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Nullable`1<bool> get_SourceEnabled();
    public void set_SourceEnabled(Nullable`1<bool> value);
    public Fields get_SourceExcludes();
    public void set_SourceExcludes(Fields value);
    public Fields get_SourceIncludes();
    public void set_SourceIncludes(Fields value);
    public Fields get_StoredFields();
    public void set_StoredFields(Fields value);
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    public Nullable`1<VersionType> get_VersionType();
    public void set_VersionType(Nullable`1<VersionType> value);
}
public class OpenSearch.Client.GetRequest`1 : GetRequest {
    protected IGetRequest`1<TDocument> TypedSelf { get; }
    public GetRequest`1(IndexName index, Id id);
    public GetRequest`1(Id id);
    public GetRequest`1(TDocument documentWithId, IndexName index, Id id);
    protected IGetRequest`1<TDocument> get_TypedSelf();
}
public class OpenSearch.Client.GetResponse`1 : ResponseBase {
    [CompilerGeneratedAttribute]
private FieldValues <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Found>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <PrimaryTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    [DataMemberAttribute]
public FieldValues Fields { get; internal set; }
    [DataMemberAttribute]
public bool Found { get; internal set; }
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public string Index { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<long> PrimaryTerm { get; internal set; }
    [DataMemberAttribute]
public string Routing { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<long> SequenceNumber { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1")]
public TDocument Source { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [DataMemberAttribute]
public long Version { get; internal set; }
    [CompilerGeneratedAttribute]
public FieldValues get_Fields();
    [CompilerGeneratedAttribute]
internal void set_Fields(FieldValues value);
    [CompilerGeneratedAttribute]
public bool get_Found();
    [CompilerGeneratedAttribute]
internal void set_Found(bool value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_PrimaryTerm();
    [CompilerGeneratedAttribute]
internal void set_PrimaryTerm(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Routing();
    [CompilerGeneratedAttribute]
internal void set_Routing(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SequenceNumber();
    [CompilerGeneratedAttribute]
internal void set_SequenceNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_Source();
    [CompilerGeneratedAttribute]
internal void set_Source(TDocument value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
    [CompilerGeneratedAttribute]
public long get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(long value);
}
public class OpenSearch.Client.GetScriptDescriptor : RequestDescriptorBase`3<GetScriptDescriptor, GetScriptRequestParameters, IGetScriptRequest> {
    internal ApiUrls ApiUrls { get; }
    private Id OpenSearch.Client.IGetScriptRequest.Id { get; }
    public GetScriptDescriptor(Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IGetScriptRequest.get_Id();
    public GetScriptDescriptor MasterTimeout(Time mastertimeout);
    public GetScriptDescriptor ClusterManagerTimeout(Time timeout);
}
public class OpenSearch.Client.GetScriptRequest : PlainRequestBase`1<GetScriptRequestParameters> {
    protected IGetScriptRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IGetScriptRequest.Id { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public GetScriptRequest(Id id);
    protected IGetScriptRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IGetScriptRequest.get_Id();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.GetScriptResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IStoredScript <Script>k__BackingField;
    [DataMemberAttribute]
public IStoredScript Script { get; public set; }
    [CompilerGeneratedAttribute]
public IStoredScript get_Script();
    [CompilerGeneratedAttribute]
public void set_Script(IStoredScript value);
}
public class OpenSearch.Client.GetSnapshotDescriptor : RequestDescriptorBase`3<GetSnapshotDescriptor, GetSnapshotRequestParameters, IGetSnapshotRequest> {
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IGetSnapshotRequest.RepositoryName { get; }
    private Names OpenSearch.Client.IGetSnapshotRequest.Snapshot { get; }
    public GetSnapshotDescriptor(Name repository, Names snapshot);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IGetSnapshotRequest.get_RepositoryName();
    private sealed virtual override Names OpenSearch.Client.IGetSnapshotRequest.get_Snapshot();
    public GetSnapshotDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public GetSnapshotDescriptor MasterTimeout(Time mastertimeout);
    public GetSnapshotDescriptor ClusterManagerTimeout(Time timeout);
    public GetSnapshotDescriptor Verbose(Nullable`1<bool> verbose);
}
public class OpenSearch.Client.GetSnapshotRequest : PlainRequestBase`1<GetSnapshotRequestParameters> {
    protected IGetSnapshotRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IGetSnapshotRequest.RepositoryName { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IGetSnapshotRequest.Snapshot { get; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<bool> Verbose { get; public set; }
    public GetSnapshotRequest(Name repository, Names snapshot);
    protected IGetSnapshotRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IGetSnapshotRequest.get_RepositoryName();
    private sealed virtual override Names OpenSearch.Client.IGetSnapshotRequest.get_Snapshot();
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
[DataContractAttribute]
public class OpenSearch.Client.GetSnapshotResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<Snapshot> <Snapshots>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<Snapshot> Snapshots { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<Snapshot> get_Snapshots();
    [CompilerGeneratedAttribute]
internal void set_Snapshots(IReadOnlyCollection`1<Snapshot> value);
}
[DataContractAttribute]
public class OpenSearch.Client.GetStats : object {
    [CompilerGeneratedAttribute]
private long <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExistsTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ExistsTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ExistsTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MissingTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MissingTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MissingTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Time>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [DataMemberAttribute]
public long Current { get; public set; }
    [DataMemberAttribute]
public string ExistsTime { get; public set; }
    [DataMemberAttribute]
public long ExistsTimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public long ExistsTotal { get; public set; }
    [DataMemberAttribute]
public string MissingTime { get; public set; }
    [DataMemberAttribute]
public long MissingTimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public long MissingTotal { get; public set; }
    [DataMemberAttribute]
public string Time { get; public set; }
    [DataMemberAttribute]
public long TimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public long Total { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(long value);
    [CompilerGeneratedAttribute]
public string get_ExistsTime();
    [CompilerGeneratedAttribute]
public void set_ExistsTime(string value);
    [CompilerGeneratedAttribute]
public long get_ExistsTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_ExistsTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_ExistsTotal();
    [CompilerGeneratedAttribute]
public void set_ExistsTotal(long value);
    [CompilerGeneratedAttribute]
public string get_MissingTime();
    [CompilerGeneratedAttribute]
public void set_MissingTime(string value);
    [CompilerGeneratedAttribute]
public long get_MissingTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_MissingTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_MissingTotal();
    [CompilerGeneratedAttribute]
public void set_MissingTotal(long value);
    [CompilerGeneratedAttribute]
public string get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(string value);
    [CompilerGeneratedAttribute]
public long get_TimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_TimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(long value);
}
public class OpenSearch.Client.GetTaskDescriptor : RequestDescriptorBase`3<GetTaskDescriptor, GetTaskRequestParameters, IGetTaskRequest> {
    internal ApiUrls ApiUrls { get; }
    private TaskId OpenSearch.Client.IGetTaskRequest.TaskId { get; }
    public GetTaskDescriptor(TaskId taskId);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override TaskId OpenSearch.Client.IGetTaskRequest.get_TaskId();
    public GetTaskDescriptor Timeout(Time timeout);
    public GetTaskDescriptor WaitForCompletion(Nullable`1<bool> waitforcompletion);
}
public class OpenSearch.Client.GetTaskRequest : PlainRequestBase`1<GetTaskRequestParameters> {
    protected IGetTaskRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private TaskId OpenSearch.Client.IGetTaskRequest.TaskId { get; }
    public Time Timeout { get; public set; }
    public Nullable`1<bool> WaitForCompletion { get; public set; }
    public GetTaskRequest(TaskId taskId);
    protected IGetTaskRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override TaskId OpenSearch.Client.IGetTaskRequest.get_TaskId();
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public Nullable`1<bool> get_WaitForCompletion();
    public void set_WaitForCompletion(Nullable`1<bool> value);
}
public class OpenSearch.Client.GetTaskResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private bool <Completed>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskInfo <Task>k__BackingField;
    [CompilerGeneratedAttribute]
private LazyDocument <Response>k__BackingField;
    [DataMemberAttribute]
public bool Completed { get; internal set; }
    [DataMemberAttribute]
public TaskInfo Task { get; internal set; }
    [DataMemberAttribute]
internal LazyDocument Response { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_Completed();
    [CompilerGeneratedAttribute]
internal void set_Completed(bool value);
    [CompilerGeneratedAttribute]
public TaskInfo get_Task();
    [CompilerGeneratedAttribute]
internal void set_Task(TaskInfo value);
    [CompilerGeneratedAttribute]
internal LazyDocument get_Response();
    [CompilerGeneratedAttribute]
internal void set_Response(LazyDocument value);
    public TResponse GetResponse();
}
public class OpenSearch.Client.GlobalAggregation : BucketAggregationBase {
    public GlobalAggregation(string name);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.GlobalAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<GlobalAggregationDescriptor`1<T>, IGlobalAggregation, T> {
}
public class OpenSearch.Client.GoogleNormalizedDistanceHeuristic : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BackgroundIsSuperSet>k__BackingField;
    public Nullable`1<bool> BackgroundIsSuperSet { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_BackgroundIsSuperSet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BackgroundIsSuperSet(Nullable`1<bool> value);
}
public class OpenSearch.Client.GoogleNormalizedDistanceHeuristicDescriptor : DescriptorBase`2<GoogleNormalizedDistanceHeuristicDescriptor, IGoogleNormalizedDistanceHeuristic> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGoogleNormalizedDistanceHeuristic.BackgroundIsSuperSet>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IGoogleNormalizedDistanceHeuristic.BackgroundIsSuperSet { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGoogleNormalizedDistanceHeuristic.get_BackgroundIsSuperSet();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGoogleNormalizedDistanceHeuristic.set_BackgroundIsSuperSet(Nullable`1<bool> value);
    public GoogleNormalizedDistanceHeuristicDescriptor BackgroundIsSuperSet(Nullable`1<bool> backroundIsSuperSet);
}
public class OpenSearch.Client.GrokProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <PatternDefinitions>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Patterns>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TraceMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    public Field Field { get; public set; }
    public IDictionary`2<string, string> PatternDefinitions { get; public set; }
    public IEnumerable`1<string> Patterns { get; public set; }
    public Nullable`1<bool> TraceMatch { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_PatternDefinitions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PatternDefinitions(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Patterns();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Patterns(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TraceMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TraceMatch(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.GrokProcessorDescriptor`1 : ProcessorDescriptorBase`2<GrokProcessorDescriptor`1<T>, IGrokProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IGrokProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <OpenSearch.Client.IGrokProcessor.PatternDefinitions>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IGrokProcessor.Patterns>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGrokProcessor.TraceMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGrokProcessor.IgnoreMissing>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IGrokProcessor.Field { get; private set; }
    private IDictionary`2<string, string> OpenSearch.Client.IGrokProcessor.PatternDefinitions { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IGrokProcessor.Patterns { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGrokProcessor.TraceMatch { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGrokProcessor.IgnoreMissing { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IGrokProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGrokProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, string> OpenSearch.Client.IGrokProcessor.get_PatternDefinitions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGrokProcessor.set_PatternDefinitions(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IGrokProcessor.get_Patterns();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGrokProcessor.set_Patterns(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGrokProcessor.get_TraceMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGrokProcessor.set_TraceMatch(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGrokProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGrokProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    public GrokProcessorDescriptor`1<T> Field(Field field);
    public GrokProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public GrokProcessorDescriptor`1<T> Patterns(IEnumerable`1<string> patterns);
    public GrokProcessorDescriptor`1<T> Patterns(String[] patterns);
    public GrokProcessorDescriptor`1<T> PatternDefinitions(Func`2<FluentDictionary`2<string, string>, FluentDictionary`2<string, string>> patternDefinitions);
    public GrokProcessorDescriptor`1<T> TraceMatch(Nullable`1<bool> traceMatch);
    public GrokProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
}
public class OpenSearch.Client.GrokProcessorPatternsDescriptor : RequestDescriptorBase`3<GrokProcessorPatternsDescriptor, GrokProcessorPatternsRequestParameters, IGrokProcessorPatternsRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
}
public class OpenSearch.Client.GrokProcessorPatternsRequest : PlainRequestBase`1<GrokProcessorPatternsRequestParameters> {
    protected IGrokProcessorPatternsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    protected IGrokProcessorPatternsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
}
public class OpenSearch.Client.GrokProcessorPatternsResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Patterns>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, string> Patterns { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Patterns();
    [CompilerGeneratedAttribute]
internal void set_Patterns(IReadOnlyDictionary`2<string, string> value);
}
public class OpenSearch.Client.GsubProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Replacement>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    public Field Field { get; public set; }
    public Field TargetField { get; public set; }
    public string Pattern { get; public set; }
    public string Replacement { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pattern();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Replacement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Replacement(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.GsubProcessorDescriptor`1 : ProcessorDescriptorBase`2<GsubProcessorDescriptor`1<T>, IGsubProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IGsubProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IGsubProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IGsubProcessor.Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IGsubProcessor.Replacement>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IGsubProcessor.IgnoreMissing>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IGsubProcessor.Field { get; private set; }
    private Field OpenSearch.Client.IGsubProcessor.TargetField { get; private set; }
    private string OpenSearch.Client.IGsubProcessor.Pattern { get; private set; }
    private string OpenSearch.Client.IGsubProcessor.Replacement { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IGsubProcessor.IgnoreMissing { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IGsubProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGsubProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IGsubProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGsubProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IGsubProcessor.get_Pattern();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGsubProcessor.set_Pattern(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IGsubProcessor.get_Replacement();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGsubProcessor.set_Replacement(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IGsubProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IGsubProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    public GsubProcessorDescriptor`1<T> Field(Field field);
    public GsubProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public GsubProcessorDescriptor`1<T> TargetField(Field field);
    public GsubProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, object>> objectPath);
    public GsubProcessorDescriptor`1<T> Pattern(string pattern);
    public GsubProcessorDescriptor`1<T> Replacement(string replacement);
    public GsubProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
}
public class OpenSearch.Client.HardBounds`1 : object {
    [CompilerGeneratedAttribute]
private T <Maximum>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Minimum>k__BackingField;
    [DataMemberAttribute]
public T Maximum { get; public set; }
    [DataMemberAttribute]
public T Minimum { get; public set; }
    [CompilerGeneratedAttribute]
public T get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(T value);
    [CompilerGeneratedAttribute]
public T get_Minimum();
    [CompilerGeneratedAttribute]
public void set_Minimum(T value);
}
public class OpenSearch.Client.HasChildQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IInnerHits <InnerHits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxChildren>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinChildren>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ChildScoreMode> <ScoreMode>k__BackingField;
    [CompilerGeneratedAttribute]
private RelationName <Type>k__BackingField;
    public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    public IInnerHits InnerHits { get; public set; }
    public Nullable`1<int> MaxChildren { get; public set; }
    public Nullable`1<int> MinChildren { get; public set; }
    public QueryContainer Query { get; public set; }
    public Nullable`1<ChildScoreMode> ScoreMode { get; public set; }
    public RelationName Type { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IInnerHits get_InnerHits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InnerHits(IInnerHits value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxChildren();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxChildren(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinChildren();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinChildren(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ChildScoreMode> get_ScoreMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScoreMode(Nullable`1<ChildScoreMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual RelationName get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(RelationName value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IHasChildQuery q);
}
public class OpenSearch.Client.HasChildQueryDescriptor`1 : QueryDescriptorBase`2<HasChildQueryDescriptor`1<T>, IHasChildQuery> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IHasChildQuery.IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IInnerHits <OpenSearch.Client.IHasChildQuery.InnerHits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHasChildQuery.MaxChildren>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHasChildQuery.MinChildren>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IHasChildQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ChildScoreMode> <OpenSearch.Client.IHasChildQuery.ScoreMode>k__BackingField;
    [CompilerGeneratedAttribute]
private RelationName <OpenSearch.Client.IHasChildQuery.Type>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<bool> OpenSearch.Client.IHasChildQuery.IgnoreUnmapped { get; private set; }
    private IInnerHits OpenSearch.Client.IHasChildQuery.InnerHits { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHasChildQuery.MaxChildren { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHasChildQuery.MinChildren { get; private set; }
    private QueryContainer OpenSearch.Client.IHasChildQuery.Query { get; private set; }
    private Nullable`1<ChildScoreMode> OpenSearch.Client.IHasChildQuery.ScoreMode { get; private set; }
    private RelationName OpenSearch.Client.IHasChildQuery.Type { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IHasChildQuery.get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasChildQuery.set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IInnerHits OpenSearch.Client.IHasChildQuery.get_InnerHits();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasChildQuery.set_InnerHits(IInnerHits value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHasChildQuery.get_MaxChildren();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasChildQuery.set_MaxChildren(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHasChildQuery.get_MinChildren();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasChildQuery.set_MinChildren(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IHasChildQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasChildQuery.set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<ChildScoreMode> OpenSearch.Client.IHasChildQuery.get_ScoreMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasChildQuery.set_ScoreMode(Nullable`1<ChildScoreMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override RelationName OpenSearch.Client.IHasChildQuery.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasChildQuery.set_Type(RelationName value);
    public HasChildQueryDescriptor`1<T> Query(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
    public HasChildQueryDescriptor`1<T> Type(string type);
    public HasChildQueryDescriptor`1<T> ScoreMode(Nullable`1<ChildScoreMode> scoreMode);
    public HasChildQueryDescriptor`1<T> MinChildren(Nullable`1<int> minChildren);
    public HasChildQueryDescriptor`1<T> MaxChildren(Nullable`1<int> maxChildren);
    public HasChildQueryDescriptor`1<T> InnerHits(Func`2<InnerHitsDescriptor`1<T>, IInnerHits> selector);
    public HasChildQueryDescriptor`1<T> IgnoreUnmapped(Nullable`1<bool> ignoreUnmapped);
}
public class OpenSearch.Client.HasParentQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IInnerHits <InnerHits>k__BackingField;
    [CompilerGeneratedAttribute]
private RelationName <ParentType>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Score>k__BackingField;
    public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    public IInnerHits InnerHits { get; public set; }
    public RelationName ParentType { get; public set; }
    public QueryContainer Query { get; public set; }
    public Nullable`1<bool> Score { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IInnerHits get_InnerHits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InnerHits(IInnerHits value);
    [CompilerGeneratedAttribute]
public sealed virtual RelationName get_ParentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ParentType(RelationName value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Score();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Score(Nullable`1<bool> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IHasParentQuery q);
}
public class OpenSearch.Client.HasParentQueryDescriptor`1 : QueryDescriptorBase`2<HasParentQueryDescriptor`1<T>, IHasParentQuery> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IHasParentQuery.IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IInnerHits <OpenSearch.Client.IHasParentQuery.InnerHits>k__BackingField;
    [CompilerGeneratedAttribute]
private RelationName <OpenSearch.Client.IHasParentQuery.ParentType>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IHasParentQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IHasParentQuery.Score>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<bool> OpenSearch.Client.IHasParentQuery.IgnoreUnmapped { get; private set; }
    private IInnerHits OpenSearch.Client.IHasParentQuery.InnerHits { get; private set; }
    private RelationName OpenSearch.Client.IHasParentQuery.ParentType { get; private set; }
    private QueryContainer OpenSearch.Client.IHasParentQuery.Query { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IHasParentQuery.Score { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IHasParentQuery.get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasParentQuery.set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IInnerHits OpenSearch.Client.IHasParentQuery.get_InnerHits();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasParentQuery.set_InnerHits(IInnerHits value);
    [CompilerGeneratedAttribute]
private sealed virtual override RelationName OpenSearch.Client.IHasParentQuery.get_ParentType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasParentQuery.set_ParentType(RelationName value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IHasParentQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasParentQuery.set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IHasParentQuery.get_Score();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHasParentQuery.set_Score(Nullable`1<bool> value);
    public HasParentQueryDescriptor`1<T> Query(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
    public HasParentQueryDescriptor`1<T> ParentType(string type);
    public HasParentQueryDescriptor`1<T> Score(Nullable`1<bool> score);
    public HasParentQueryDescriptor`1<T> InnerHits(Func`2<InnerHitsDescriptor`1<T>, IInnerHits> selector);
    public HasParentQueryDescriptor`1<T> IgnoreUnmapped(Nullable`1<bool> ignoreUnmapped);
}
public class OpenSearch.Client.HdfsRepository : object {
    [CompilerGeneratedAttribute]
private IHdfsRepositorySettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public IHdfsRepositorySettings Settings { get; public set; }
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    public string Type { get; }
    public HdfsRepository(HdfsRepositorySettings settings);
    [CompilerGeneratedAttribute]
public sealed virtual IHdfsRepositorySettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IHdfsRepositorySettings value);
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
}
public class OpenSearch.Client.HdfsRepositoryDescriptor : DescriptorBase`2<HdfsRepositoryDescriptor, IHdfsRepository> {
    [CompilerGeneratedAttribute]
private IHdfsRepositorySettings <OpenSearch.Client.IRepository<OpenSearch.Client.IHdfsRepositorySettings>.Settings>k__BackingField;
    private IHdfsRepositorySettings OpenSearch.Client.IRepository<OpenSearch.Client.IHdfsRepositorySettings>.Settings { get; private set; }
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    private string OpenSearch.Client.ISnapshotRepository.Type { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IHdfsRepositorySettings OpenSearch.Client.IRepository<OpenSearch.Client.IHdfsRepositorySettings>.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRepository<OpenSearch.Client.IHdfsRepositorySettings>.set_Settings(IHdfsRepositorySettings value);
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    private sealed virtual override string OpenSearch.Client.ISnapshotRepository.get_Type();
    public HdfsRepositoryDescriptor Settings(string path, Func`2<HdfsRepositorySettingsDescriptor, IHdfsRepositorySettings> settingsSelector);
}
public class OpenSearch.Client.HdfsRepositorySettings : object {
    [CompilerGeneratedAttribute]
private string <ChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConcurrentStreams>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfigurationLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <InlineHadoopConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <LoadDefaults>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    public string ChunkSize { get; public set; }
    public Nullable`1<bool> Compress { get; public set; }
    public Nullable`1<int> ConcurrentStreams { get; public set; }
    public string ConfigurationLocation { get; public set; }
    public Dictionary`2<string, object> InlineHadoopConfiguration { get; public set; }
    public Nullable`1<bool> LoadDefaults { get; public set; }
    public string Path { get; public set; }
    public string Uri { get; public set; }
    public HdfsRepositorySettings(string path);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChunkSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChunkSize(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Compress();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ConcurrentStreams();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConcurrentStreams(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ConfigurationLocation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConfigurationLocation(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, object> get_InlineHadoopConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InlineHadoopConfiguration(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_LoadDefaults();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LoadDefaults(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Path(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Uri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Uri(string value);
}
public class OpenSearch.Client.HdfsRepositorySettingsDescriptor : DescriptorBase`2<HdfsRepositorySettingsDescriptor, IHdfsRepositorySettings> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IHdfsRepositorySettings.ChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IHdfsRepositorySettings.Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHdfsRepositorySettings.ConcurrentStreams>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IHdfsRepositorySettings.ConfigurationLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <OpenSearch.Client.IHdfsRepositorySettings.InlineHadoopConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IHdfsRepositorySettings.LoadDefaults>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IHdfsRepositorySettings.Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IHdfsRepositorySettings.Uri>k__BackingField;
    private string OpenSearch.Client.IHdfsRepositorySettings.ChunkSize { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IHdfsRepositorySettings.Compress { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHdfsRepositorySettings.ConcurrentStreams { get; private set; }
    private string OpenSearch.Client.IHdfsRepositorySettings.ConfigurationLocation { get; private set; }
    private Dictionary`2<string, object> OpenSearch.Client.IHdfsRepositorySettings.InlineHadoopConfiguration { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IHdfsRepositorySettings.LoadDefaults { get; private set; }
    private string OpenSearch.Client.IHdfsRepositorySettings.Path { get; private set; }
    private string OpenSearch.Client.IHdfsRepositorySettings.Uri { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IHdfsRepositorySettings.get_ChunkSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHdfsRepositorySettings.set_ChunkSize(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IHdfsRepositorySettings.get_Compress();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHdfsRepositorySettings.set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHdfsRepositorySettings.get_ConcurrentStreams();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHdfsRepositorySettings.set_ConcurrentStreams(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IHdfsRepositorySettings.get_ConfigurationLocation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHdfsRepositorySettings.set_ConfigurationLocation(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Dictionary`2<string, object> OpenSearch.Client.IHdfsRepositorySettings.get_InlineHadoopConfiguration();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHdfsRepositorySettings.set_InlineHadoopConfiguration(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IHdfsRepositorySettings.get_LoadDefaults();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHdfsRepositorySettings.set_LoadDefaults(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IHdfsRepositorySettings.get_Path();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHdfsRepositorySettings.set_Path(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IHdfsRepositorySettings.get_Uri();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHdfsRepositorySettings.set_Uri(string value);
    public HdfsRepositorySettingsDescriptor Uri(string uri);
    public HdfsRepositorySettingsDescriptor Path(string path);
    public HdfsRepositorySettingsDescriptor LoadDefaults(Nullable`1<bool> loadDefaults);
    public HdfsRepositorySettingsDescriptor ConfigurationLocation(string configurationLocation);
    public HdfsRepositorySettingsDescriptor InlinedHadoopConfiguration(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> inlineConfig);
    public HdfsRepositorySettingsDescriptor Compress(Nullable`1<bool> compress);
    public HdfsRepositorySettingsDescriptor ConcurrentStreams(Nullable`1<int> concurrentStreams);
    public HdfsRepositorySettingsDescriptor ChunkSize(string chunkSize);
}
public class OpenSearch.Client.HDRHistogramMethod : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumberOfSignificantValueDigits>k__BackingField;
    public Nullable`1<int> NumberOfSignificantValueDigits { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NumberOfSignificantValueDigits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NumberOfSignificantValueDigits(Nullable`1<int> value);
}
public class OpenSearch.Client.HDRHistogramMethodDescriptor : DescriptorBase`2<HDRHistogramMethodDescriptor, IHDRHistogramMethod> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHDRHistogramMethod.NumberOfSignificantValueDigits>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.IHDRHistogramMethod.NumberOfSignificantValueDigits { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHDRHistogramMethod.get_NumberOfSignificantValueDigits();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHDRHistogramMethod.set_NumberOfSignificantValueDigits(Nullable`1<int> value);
    public HDRHistogramMethodDescriptor NumberOfSignificantValueDigits(Nullable`1<int> numDigits);
}
internal static class OpenSearch.Client.HelperIdentifiers : object {
    public static string SnapshotHelper;
    public static string ScrollHelper;
    public static string ReindexHelper;
    public static string BulkHelper;
    public static string RestoreHelper;
}
public class OpenSearch.Client.Highlight : object {
    [CompilerGeneratedAttribute]
private string <BoundaryChars>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BoundaryMaxScan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BoundaryScanner> <BoundaryScanner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BoundaryScannerLocale>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterEncoder> <Encoder>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<Field, IHighlightField> <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterFragmenter> <Fragmenter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FragmentOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FragmentSize>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <HighlightQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxAnalyzerOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxFragmentLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NoMatchSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumberOfFragments>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterOrder> <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <PostTags>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <PreTags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RequireFieldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterTagsSchema> <TagsSchema>k__BackingField;
    public string BoundaryChars { get; public set; }
    public Nullable`1<int> BoundaryMaxScan { get; public set; }
    public Nullable`1<BoundaryScanner> BoundaryScanner { get; public set; }
    public string BoundaryScannerLocale { get; public set; }
    public Nullable`1<HighlighterEncoder> Encoder { get; public set; }
    public Dictionary`2<Field, IHighlightField> Fields { get; public set; }
    public Nullable`1<HighlighterFragmenter> Fragmenter { get; public set; }
    public Nullable`1<int> FragmentOffset { get; public set; }
    public Nullable`1<int> FragmentSize { get; public set; }
    public QueryContainer HighlightQuery { get; public set; }
    public Nullable`1<int> MaxAnalyzerOffset { get; public set; }
    public Nullable`1<int> MaxFragmentLength { get; public set; }
    public Nullable`1<int> NoMatchSize { get; public set; }
    public Nullable`1<int> NumberOfFragments { get; public set; }
    public Nullable`1<HighlighterOrder> Order { get; public set; }
    public IEnumerable`1<string> PostTags { get; public set; }
    public IEnumerable`1<string> PreTags { get; public set; }
    public Nullable`1<bool> RequireFieldMatch { get; public set; }
    public Nullable`1<HighlighterTagsSchema> TagsSchema { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_BoundaryChars();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoundaryChars(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_BoundaryMaxScan();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoundaryMaxScan(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<BoundaryScanner> get_BoundaryScanner();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoundaryScanner(Nullable`1<BoundaryScanner> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BoundaryScannerLocale();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoundaryScannerLocale(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<HighlighterEncoder> get_Encoder();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Encoder(Nullable`1<HighlighterEncoder> value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<Field, IHighlightField> get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(Dictionary`2<Field, IHighlightField> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<HighlighterFragmenter> get_Fragmenter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fragmenter(Nullable`1<HighlighterFragmenter> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_FragmentOffset();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FragmentOffset(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_FragmentSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FragmentSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_HighlightQuery();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HighlightQuery(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxAnalyzerOffset();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxAnalyzerOffset(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxFragmentLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxFragmentLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NoMatchSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NoMatchSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NumberOfFragments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NumberOfFragments(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<HighlighterOrder> get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(Nullable`1<HighlighterOrder> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_PostTags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PostTags(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_PreTags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreTags(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_RequireFieldMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequireFieldMatch(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<HighlighterTagsSchema> get_TagsSchema();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TagsSchema(Nullable`1<HighlighterTagsSchema> value);
    public static Highlight Field(Field field);
}
public class OpenSearch.Client.HighlightDescriptor`1 : DescriptorBase`2<HighlightDescriptor`1<T>, IHighlight> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IHighlight.BoundaryChars>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlight.BoundaryMaxScan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BoundaryScanner> <OpenSearch.Client.IHighlight.BoundaryScanner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IHighlight.BoundaryScannerLocale>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterEncoder> <OpenSearch.Client.IHighlight.Encoder>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<Field, IHighlightField> <OpenSearch.Client.IHighlight.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterFragmenter> <OpenSearch.Client.IHighlight.Fragmenter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlight.FragmentOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlight.FragmentSize>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IHighlight.HighlightQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlight.MaxAnalyzerOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlight.MaxFragmentLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlight.NoMatchSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlight.NumberOfFragments>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterOrder> <OpenSearch.Client.IHighlight.Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IHighlight.PostTags>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IHighlight.PreTags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IHighlight.RequireFieldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterTagsSchema> <OpenSearch.Client.IHighlight.TagsSchema>k__BackingField;
    private string OpenSearch.Client.IHighlight.BoundaryChars { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlight.BoundaryMaxScan { get; private set; }
    private Nullable`1<BoundaryScanner> OpenSearch.Client.IHighlight.BoundaryScanner { get; private set; }
    private string OpenSearch.Client.IHighlight.BoundaryScannerLocale { get; private set; }
    private Nullable`1<HighlighterEncoder> OpenSearch.Client.IHighlight.Encoder { get; private set; }
    private Dictionary`2<Field, IHighlightField> OpenSearch.Client.IHighlight.Fields { get; private set; }
    private Nullable`1<HighlighterFragmenter> OpenSearch.Client.IHighlight.Fragmenter { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlight.FragmentOffset { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlight.FragmentSize { get; private set; }
    private QueryContainer OpenSearch.Client.IHighlight.HighlightQuery { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlight.MaxAnalyzerOffset { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlight.MaxFragmentLength { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlight.NoMatchSize { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlight.NumberOfFragments { get; private set; }
    private Nullable`1<HighlighterOrder> OpenSearch.Client.IHighlight.Order { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IHighlight.PostTags { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IHighlight.PreTags { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IHighlight.RequireFieldMatch { get; private set; }
    private Nullable`1<HighlighterTagsSchema> OpenSearch.Client.IHighlight.TagsSchema { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IHighlight.get_BoundaryChars();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_BoundaryChars(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlight.get_BoundaryMaxScan();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_BoundaryMaxScan(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<BoundaryScanner> OpenSearch.Client.IHighlight.get_BoundaryScanner();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_BoundaryScanner(Nullable`1<BoundaryScanner> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IHighlight.get_BoundaryScannerLocale();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_BoundaryScannerLocale(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<HighlighterEncoder> OpenSearch.Client.IHighlight.get_Encoder();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_Encoder(Nullable`1<HighlighterEncoder> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Dictionary`2<Field, IHighlightField> OpenSearch.Client.IHighlight.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_Fields(Dictionary`2<Field, IHighlightField> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<HighlighterFragmenter> OpenSearch.Client.IHighlight.get_Fragmenter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_Fragmenter(Nullable`1<HighlighterFragmenter> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlight.get_FragmentOffset();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_FragmentOffset(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlight.get_FragmentSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_FragmentSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IHighlight.get_HighlightQuery();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_HighlightQuery(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlight.get_MaxAnalyzerOffset();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_MaxAnalyzerOffset(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlight.get_MaxFragmentLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_MaxFragmentLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlight.get_NoMatchSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_NoMatchSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlight.get_NumberOfFragments();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_NumberOfFragments(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<HighlighterOrder> OpenSearch.Client.IHighlight.get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_Order(Nullable`1<HighlighterOrder> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IHighlight.get_PostTags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_PostTags(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IHighlight.get_PreTags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_PreTags(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IHighlight.get_RequireFieldMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_RequireFieldMatch(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<HighlighterTagsSchema> OpenSearch.Client.IHighlight.get_TagsSchema();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlight.set_TagsSchema(Nullable`1<HighlighterTagsSchema> value);
    public HighlightDescriptor`1<T> Fields(Func`2[] fieldHighlighters);
    public HighlightDescriptor`1<T> TagsSchema(Nullable`1<HighlighterTagsSchema> schema);
    public HighlightDescriptor`1<T> PreTags(String[] preTags);
    public HighlightDescriptor`1<T> PostTags(String[] postTags);
    public HighlightDescriptor`1<T> PreTags(IEnumerable`1<string> preTags);
    public HighlightDescriptor`1<T> PostTags(IEnumerable`1<string> postTags);
    public HighlightDescriptor`1<T> FragmentSize(Nullable`1<int> fragmentSize);
    public HighlightDescriptor`1<T> HighlightQuery(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> query);
    public HighlightDescriptor`1<T> NumberOfFragments(Nullable`1<int> numberOfFragments);
    public HighlightDescriptor`1<T> FragmentOffset(Nullable`1<int> fragmentOffset);
    public HighlightDescriptor`1<T> Encoder(Nullable`1<HighlighterEncoder> encoder);
    public HighlightDescriptor`1<T> Order(Nullable`1<HighlighterOrder> order);
    public HighlightDescriptor`1<T> RequireFieldMatch(Nullable`1<bool> requireFieldMatch);
    public HighlightDescriptor`1<T> BoundaryChars(string boundaryChars);
    public HighlightDescriptor`1<T> BoundaryMaxScan(Nullable`1<int> boundaryMaxScan);
    public HighlightDescriptor`1<T> MaxAnalyzerOffset(Nullable`1<int> maxAnalyzerOffset);
    public HighlightDescriptor`1<T> MaxFragmentLength(Nullable`1<int> maxFragmentLength);
    public HighlightDescriptor`1<T> NoMatchSize(Nullable`1<int> noMatchSize);
    public HighlightDescriptor`1<T> BoundaryScanner(Nullable`1<BoundaryScanner> boundaryScanner);
    public HighlightDescriptor`1<T> BoundaryScannerLocale(string locale);
    public HighlightDescriptor`1<T> Fragmenter(Nullable`1<HighlighterFragmenter> fragmenter);
}
[StringEnumAttribute]
public enum OpenSearch.Client.HighlighterEncoder : Enum {
    public int value__;
    [EnumMemberAttribute]
public static HighlighterEncoder Default;
    [EnumMemberAttribute]
public static HighlighterEncoder Html;
}
[StringEnumAttribute]
public enum OpenSearch.Client.HighlighterFragmenter : Enum {
    public int value__;
    [EnumMemberAttribute]
public static HighlighterFragmenter Simple;
    [EnumMemberAttribute]
public static HighlighterFragmenter Span;
}
[StringEnumAttribute]
public enum OpenSearch.Client.HighlighterOrder : Enum {
    public int value__;
    [EnumMemberAttribute]
public static HighlighterOrder Score;
}
[StringEnumAttribute]
public enum OpenSearch.Client.HighlighterTagsSchema : Enum {
    public int value__;
    [EnumMemberAttribute]
public static HighlighterTagsSchema Styled;
}
[StringEnumAttribute]
public enum OpenSearch.Client.HighlighterType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static HighlighterType Plain;
    [EnumMemberAttribute]
public static HighlighterType Fvh;
    [EnumMemberAttribute]
public static HighlighterType Unified;
}
public class OpenSearch.Client.HighlightField : object {
    [CompilerGeneratedAttribute]
private string <BoundaryChars>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BoundaryMaxScan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BoundaryScanner> <BoundaryScanner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BoundaryScannerLocale>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ForceSource>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterFragmenter> <Fragmenter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FragmentOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FragmentSize>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <HighlightQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <MatchedFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxAnalyzerOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxFragmentLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NoMatchSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumberOfFragments>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterOrder> <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PhraseLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <PostTags>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <PreTags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RequireFieldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterTagsSchema> <TagsSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<HighlighterType, string> <Type>k__BackingField;
    public string BoundaryChars { get; public set; }
    public Nullable`1<int> BoundaryMaxScan { get; public set; }
    public Nullable`1<BoundaryScanner> BoundaryScanner { get; public set; }
    public string BoundaryScannerLocale { get; public set; }
    public Field Field { get; public set; }
    public Nullable`1<bool> ForceSource { get; public set; }
    public Nullable`1<HighlighterFragmenter> Fragmenter { get; public set; }
    public Nullable`1<int> FragmentOffset { get; public set; }
    public Nullable`1<int> FragmentSize { get; public set; }
    public QueryContainer HighlightQuery { get; public set; }
    public Fields MatchedFields { get; public set; }
    public Nullable`1<int> MaxAnalyzerOffset { get; public set; }
    public Nullable`1<int> MaxFragmentLength { get; public set; }
    public Nullable`1<int> NoMatchSize { get; public set; }
    public Nullable`1<int> NumberOfFragments { get; public set; }
    public Nullable`1<HighlighterOrder> Order { get; public set; }
    public Nullable`1<int> PhraseLimit { get; public set; }
    public IEnumerable`1<string> PostTags { get; public set; }
    public IEnumerable`1<string> PreTags { get; public set; }
    public Nullable`1<bool> RequireFieldMatch { get; public set; }
    public Nullable`1<HighlighterTagsSchema> TagsSchema { get; public set; }
    public Union`2<HighlighterType, string> Type { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_BoundaryChars();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoundaryChars(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_BoundaryMaxScan();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoundaryMaxScan(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<BoundaryScanner> get_BoundaryScanner();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoundaryScanner(Nullable`1<BoundaryScanner> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BoundaryScannerLocale();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoundaryScannerLocale(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ForceSource();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ForceSource(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<HighlighterFragmenter> get_Fragmenter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fragmenter(Nullable`1<HighlighterFragmenter> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_FragmentOffset();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FragmentOffset(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_FragmentSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FragmentSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_HighlightQuery();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HighlightQuery(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_MatchedFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MatchedFields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxAnalyzerOffset();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxAnalyzerOffset(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxFragmentLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxFragmentLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NoMatchSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NoMatchSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NumberOfFragments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NumberOfFragments(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<HighlighterOrder> get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(Nullable`1<HighlighterOrder> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PhraseLimit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PhraseLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_PostTags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PostTags(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_PreTags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreTags(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_RequireFieldMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequireFieldMatch(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<HighlighterTagsSchema> get_TagsSchema();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TagsSchema(Nullable`1<HighlighterTagsSchema> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<HighlighterType, string> get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(Union`2<HighlighterType, string> value);
}
public class OpenSearch.Client.HighlightFieldDescriptor`1 : DescriptorBase`2<HighlightFieldDescriptor`1<T>, IHighlightField> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IHighlightField.BoundaryChars>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlightField.BoundaryMaxScan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BoundaryScanner> <OpenSearch.Client.IHighlightField.BoundaryScanner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IHighlightField.BoundaryScannerLocale>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IHighlightField.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IHighlightField.ForceSource>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterFragmenter> <OpenSearch.Client.IHighlightField.Fragmenter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlightField.FragmentOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlightField.FragmentSize>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IHighlightField.HighlightQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IHighlightField.MatchedFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlightField.MaxAnalyzerOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlightField.MaxFragmentLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlightField.NoMatchSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlightField.NumberOfFragments>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterOrder> <OpenSearch.Client.IHighlightField.Order>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHighlightField.PhraseLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IHighlightField.PostTags>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IHighlightField.PreTags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IHighlightField.RequireFieldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HighlighterTagsSchema> <OpenSearch.Client.IHighlightField.TagsSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<HighlighterType, string> <OpenSearch.Client.IHighlightField.Type>k__BackingField;
    private string OpenSearch.Client.IHighlightField.BoundaryChars { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlightField.BoundaryMaxScan { get; private set; }
    private Nullable`1<BoundaryScanner> OpenSearch.Client.IHighlightField.BoundaryScanner { get; private set; }
    private string OpenSearch.Client.IHighlightField.BoundaryScannerLocale { get; private set; }
    private Field OpenSearch.Client.IHighlightField.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IHighlightField.ForceSource { get; private set; }
    private Nullable`1<HighlighterFragmenter> OpenSearch.Client.IHighlightField.Fragmenter { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlightField.FragmentOffset { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlightField.FragmentSize { get; private set; }
    private QueryContainer OpenSearch.Client.IHighlightField.HighlightQuery { get; private set; }
    private Fields OpenSearch.Client.IHighlightField.MatchedFields { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlightField.MaxAnalyzerOffset { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlightField.MaxFragmentLength { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlightField.NoMatchSize { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlightField.NumberOfFragments { get; private set; }
    private Nullable`1<HighlighterOrder> OpenSearch.Client.IHighlightField.Order { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHighlightField.PhraseLimit { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IHighlightField.PostTags { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IHighlightField.PreTags { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IHighlightField.RequireFieldMatch { get; private set; }
    private Nullable`1<HighlighterTagsSchema> OpenSearch.Client.IHighlightField.TagsSchema { get; private set; }
    private Union`2<HighlighterType, string> OpenSearch.Client.IHighlightField.Type { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IHighlightField.get_BoundaryChars();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_BoundaryChars(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlightField.get_BoundaryMaxScan();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_BoundaryMaxScan(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<BoundaryScanner> OpenSearch.Client.IHighlightField.get_BoundaryScanner();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_BoundaryScanner(Nullable`1<BoundaryScanner> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IHighlightField.get_BoundaryScannerLocale();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_BoundaryScannerLocale(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IHighlightField.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IHighlightField.get_ForceSource();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_ForceSource(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<HighlighterFragmenter> OpenSearch.Client.IHighlightField.get_Fragmenter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_Fragmenter(Nullable`1<HighlighterFragmenter> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlightField.get_FragmentOffset();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_FragmentOffset(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlightField.get_FragmentSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_FragmentSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IHighlightField.get_HighlightQuery();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_HighlightQuery(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IHighlightField.get_MatchedFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_MatchedFields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlightField.get_MaxAnalyzerOffset();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_MaxAnalyzerOffset(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlightField.get_MaxFragmentLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_MaxFragmentLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlightField.get_NoMatchSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_NoMatchSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlightField.get_NumberOfFragments();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_NumberOfFragments(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<HighlighterOrder> OpenSearch.Client.IHighlightField.get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_Order(Nullable`1<HighlighterOrder> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHighlightField.get_PhraseLimit();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_PhraseLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IHighlightField.get_PostTags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_PostTags(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IHighlightField.get_PreTags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_PreTags(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IHighlightField.get_RequireFieldMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_RequireFieldMatch(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<HighlighterTagsSchema> OpenSearch.Client.IHighlightField.get_TagsSchema();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_TagsSchema(Nullable`1<HighlighterTagsSchema> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<HighlighterType, string> OpenSearch.Client.IHighlightField.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHighlightField.set_Type(Union`2<HighlighterType, string> value);
    public HighlightFieldDescriptor`1<T> Field(Field field);
    public HighlightFieldDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public HighlightFieldDescriptor`1<T> AllField();
    public HighlightFieldDescriptor`1<T> TagsSchema(Nullable`1<HighlighterTagsSchema> schema);
    public HighlightFieldDescriptor`1<T> ForceSource(Nullable`1<bool> force);
    public HighlightFieldDescriptor`1<T> Type(HighlighterType type);
    public HighlightFieldDescriptor`1<T> Type(string type);
    public HighlightFieldDescriptor`1<T> PreTags(String[] preTags);
    public HighlightFieldDescriptor`1<T> PostTags(String[] postTags);
    public HighlightFieldDescriptor`1<T> PreTags(IEnumerable`1<string> preTags);
    public HighlightFieldDescriptor`1<T> PostTags(IEnumerable`1<string> postTags);
    public HighlightFieldDescriptor`1<T> FragmentSize(Nullable`1<int> fragmentSize);
    public HighlightFieldDescriptor`1<T> NoMatchSize(Nullable`1<int> noMatchSize);
    public HighlightFieldDescriptor`1<T> NumberOfFragments(Nullable`1<int> numberOfFragments);
    public HighlightFieldDescriptor`1<T> FragmentOffset(Nullable`1<int> fragmentOffset);
    public HighlightFieldDescriptor`1<T> Order(Nullable`1<HighlighterOrder> order);
    public HighlightFieldDescriptor`1<T> RequireFieldMatch(Nullable`1<bool> requireFieldMatch);
    public HighlightFieldDescriptor`1<T> BoundaryCharacters(string boundaryCharacters);
    public HighlightFieldDescriptor`1<T> BoundaryMaxScan(Nullable`1<int> boundaryMaxSize);
    public HighlightFieldDescriptor`1<T> MatchedFields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public HighlightFieldDescriptor`1<T> HighlightQuery(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> querySelector);
    public HighlightFieldDescriptor`1<T> MaxAnalyzerOffset(Nullable`1<int> maxAnalyzerOffset);
    public HighlightFieldDescriptor`1<T> MaxFragmentLength(Nullable`1<int> maxFragmentLength);
    public HighlightFieldDescriptor`1<T> BoundaryScanner(Nullable`1<BoundaryScanner> boundaryScanner);
    public HighlightFieldDescriptor`1<T> BoundaryScannerLocale(string locale);
    public HighlightFieldDescriptor`1<T> Fragmenter(Nullable`1<HighlighterFragmenter> fragmenter);
    public HighlightFieldDescriptor`1<T> PhraseLimit(Nullable`1<int> phraseLimit);
}
public class OpenSearch.Client.HistogramAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private ExtendedBounds`1<double> <ExtendedBounds>k__BackingField;
    [CompilerGeneratedAttribute]
private HardBounds`1<double> <HardBounds>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private HistogramOrder <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public ExtendedBounds`1<double> ExtendedBounds { get; public set; }
    public HardBounds`1<double> HardBounds { get; public set; }
    public Field Field { get; public set; }
    public Nullable`1<double> Interval { get; public set; }
    public Nullable`1<int> MinimumDocumentCount { get; public set; }
    public Nullable`1<double> Missing { get; public set; }
    public Nullable`1<double> Offset { get; public set; }
    public HistogramOrder Order { get; public set; }
    public IScript Script { get; public set; }
    public HistogramAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual ExtendedBounds`1<double> get_ExtendedBounds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExtendedBounds(ExtendedBounds`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual HardBounds`1<double> get_HardBounds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HardBounds(HardBounds`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Interval();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Interval(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumDocumentCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Offset();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Offset(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual HistogramOrder get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(HistogramOrder value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.HistogramAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<HistogramAggregationDescriptor`1<T>, IHistogramAggregation, T> {
    [CompilerGeneratedAttribute]
private ExtendedBounds`1<double> <OpenSearch.Client.IHistogramAggregation.ExtendedBounds>k__BackingField;
    [CompilerGeneratedAttribute]
private HardBounds`1<double> <OpenSearch.Client.IHistogramAggregation.HardBounds>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IHistogramAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IHistogramAggregation.Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHistogramAggregation.MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IHistogramAggregation.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IHistogramAggregation.Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private HistogramOrder <OpenSearch.Client.IHistogramAggregation.Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IHistogramAggregation.Script>k__BackingField;
    private ExtendedBounds`1<double> OpenSearch.Client.IHistogramAggregation.ExtendedBounds { get; private set; }
    private HardBounds`1<double> OpenSearch.Client.IHistogramAggregation.HardBounds { get; private set; }
    private Field OpenSearch.Client.IHistogramAggregation.Field { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IHistogramAggregation.Interval { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHistogramAggregation.MinimumDocumentCount { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IHistogramAggregation.Missing { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IHistogramAggregation.Offset { get; private set; }
    private HistogramOrder OpenSearch.Client.IHistogramAggregation.Order { get; private set; }
    private IScript OpenSearch.Client.IHistogramAggregation.Script { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override ExtendedBounds`1<double> OpenSearch.Client.IHistogramAggregation.get_ExtendedBounds();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHistogramAggregation.set_ExtendedBounds(ExtendedBounds`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override HardBounds`1<double> OpenSearch.Client.IHistogramAggregation.get_HardBounds();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHistogramAggregation.set_HardBounds(HardBounds`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IHistogramAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHistogramAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IHistogramAggregation.get_Interval();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHistogramAggregation.set_Interval(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHistogramAggregation.get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHistogramAggregation.set_MinimumDocumentCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IHistogramAggregation.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHistogramAggregation.set_Missing(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IHistogramAggregation.get_Offset();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHistogramAggregation.set_Offset(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override HistogramOrder OpenSearch.Client.IHistogramAggregation.get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHistogramAggregation.set_Order(HistogramOrder value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IHistogramAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHistogramAggregation.set_Script(IScript value);
    public HistogramAggregationDescriptor`1<T> Field(Field field);
    public HistogramAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public HistogramAggregationDescriptor`1<T> Script(string script);
    public HistogramAggregationDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public HistogramAggregationDescriptor`1<T> Interval(Nullable`1<double> interval);
    public HistogramAggregationDescriptor`1<T> MinimumDocumentCount(Nullable`1<int> minimumDocumentCount);
    public HistogramAggregationDescriptor`1<T> Order(HistogramOrder order);
    public HistogramAggregationDescriptor`1<T> OrderAscending(string key);
    public HistogramAggregationDescriptor`1<T> OrderDescending(string key);
    public HistogramAggregationDescriptor`1<T> ExtendedBounds(double min, double max);
    public HistogramAggregationDescriptor`1<T> HardBounds(double min, double max);
    public HistogramAggregationDescriptor`1<T> Offset(Nullable`1<double> offset);
    public HistogramAggregationDescriptor`1<T> Missing(Nullable`1<double> missing);
}
public class OpenSearch.Client.HistogramCompositeAggregationSource : CompositeAggregationSourceBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public Nullable`1<double> Interval { get; public set; }
    public IScript Script { get; public set; }
    protected string SourceType { get; }
    public HistogramCompositeAggregationSource(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Interval();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Interval(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    protected virtual string get_SourceType();
}
public class OpenSearch.Client.HistogramCompositeAggregationSourceDescriptor`1 : CompositeAggregationSourceDescriptorBase`3<HistogramCompositeAggregationSourceDescriptor`1<T>, IHistogramCompositeAggregationSource, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IHistogramCompositeAggregationSource.Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IHistogramCompositeAggregationSource.Script>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IHistogramCompositeAggregationSource.Interval { get; private set; }
    private IScript OpenSearch.Client.IHistogramCompositeAggregationSource.Script { get; private set; }
    public HistogramCompositeAggregationSourceDescriptor`1(string name);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IHistogramCompositeAggregationSource.get_Interval();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHistogramCompositeAggregationSource.set_Interval(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IHistogramCompositeAggregationSource.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHistogramCompositeAggregationSource.set_Script(IScript value);
    public HistogramCompositeAggregationSourceDescriptor`1<T> Interval(Nullable`1<double> interval);
    public HistogramCompositeAggregationSourceDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> selector);
}
[JsonFormatterAttribute("OpenSearch.Client.SortOrderFormatter`1<OpenSearch.Client.HistogramOrder>")]
public class OpenSearch.Client.HistogramOrder : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private SortOrder <Order>k__BackingField;
    public static HistogramOrder CountAscending { get; }
    public static HistogramOrder CountDescending { get; }
    public string Key { get; public set; }
    public static HistogramOrder KeyAscending { get; }
    public static HistogramOrder KeyDescending { get; }
    public SortOrder Order { get; public set; }
    public static HistogramOrder get_CountAscending();
    public static HistogramOrder get_CountDescending();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Key();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Key(string value);
    public static HistogramOrder get_KeyAscending();
    public static HistogramOrder get_KeyDescending();
    [CompilerGeneratedAttribute]
public sealed virtual SortOrder get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(SortOrder value);
}
public class OpenSearch.Client.Hit`1 : object {
    [CompilerGeneratedAttribute]
private Explanation <Explanation>k__BackingField;
    [CompilerGeneratedAttribute]
private FieldValues <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, IReadOnlyCollection`1<string>> <Highlight>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, InnerHitsResult> <InnerHits>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <MatchedQueries>k__BackingField;
    [CompilerGeneratedAttribute]
private NestedIdentity <Nested>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <PrimaryTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Score>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<object> <Sorts>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    public Explanation Explanation { get; internal set; }
    public FieldValues Fields { get; internal set; }
    public IReadOnlyDictionary`2<string, IReadOnlyCollection`1<string>> Highlight { get; internal set; }
    public string Id { get; internal set; }
    public string Index { get; internal set; }
    public IReadOnlyDictionary`2<string, InnerHitsResult> InnerHits { get; internal set; }
    public IReadOnlyCollection`1<string> MatchedQueries { get; internal set; }
    public NestedIdentity Nested { get; internal set; }
    public Nullable`1<long> PrimaryTerm { get; internal set; }
    public string Routing { get; internal set; }
    public Nullable`1<double> Score { get; public set; }
    public Nullable`1<long> SequenceNumber { get; internal set; }
    public IReadOnlyCollection`1<object> Sorts { get; internal set; }
    public TDocument Source { get; internal set; }
    public string Type { get; internal set; }
    public long Version { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual Explanation get_Explanation();
    [CompilerGeneratedAttribute]
internal void set_Explanation(Explanation value);
    [CompilerGeneratedAttribute]
public sealed virtual FieldValues get_Fields();
    [CompilerGeneratedAttribute]
internal void set_Fields(FieldValues value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyDictionary`2<string, IReadOnlyCollection`1<string>> get_Highlight();
    [CompilerGeneratedAttribute]
internal void set_Highlight(IReadOnlyDictionary`2<string, IReadOnlyCollection`1<string>> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyDictionary`2<string, InnerHitsResult> get_InnerHits();
    [CompilerGeneratedAttribute]
internal void set_InnerHits(IReadOnlyDictionary`2<string, InnerHitsResult> value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<string> get_MatchedQueries();
    [CompilerGeneratedAttribute]
internal void set_MatchedQueries(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual NestedIdentity get_Nested();
    [CompilerGeneratedAttribute]
internal void set_Nested(NestedIdentity value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_PrimaryTerm();
    [CompilerGeneratedAttribute]
internal void set_PrimaryTerm(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Routing();
    [CompilerGeneratedAttribute]
internal void set_Routing(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Score();
    [CompilerGeneratedAttribute]
public void set_Score(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_SequenceNumber();
    [CompilerGeneratedAttribute]
internal void set_SequenceNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<object> get_Sorts();
    [CompilerGeneratedAttribute]
internal void set_Sorts(IReadOnlyCollection`1<object> value);
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_Source();
    [CompilerGeneratedAttribute]
internal void set_Source(TDocument value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(long value);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.HitMetadataConversionExtensions : object {
    [ExtensionAttribute]
public static IHitMetadata`1<TTarget> Copy(IHitMetadata`1<TDocument> source, Func`2<TDocument, TTarget> mapper);
}
public class OpenSearch.Client.HitsMetadata`1 : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<IHit`1<T>> <Hits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MaxScore>k__BackingField;
    [CompilerGeneratedAttribute]
private TotalHits <Total>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<IHit`1<T>> Hits { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<double> MaxScore { get; internal set; }
    [DataMemberAttribute]
public TotalHits Total { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<IHit`1<T>> get_Hits();
    [CompilerGeneratedAttribute]
internal void set_Hits(IReadOnlyCollection`1<IHit`1<T>> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_MaxScore();
    [CompilerGeneratedAttribute]
internal void set_MaxScore(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual TotalHits get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(TotalHits value);
}
public class OpenSearch.Client.HoltLinearModel : object {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Alpha>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Beta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMovingAverageModel.Name>k__BackingField;
    public Nullable`1<float> Alpha { get; public set; }
    public Nullable`1<float> Beta { get; public set; }
    private string OpenSearch.Client.IMovingAverageModel.Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_Alpha();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Alpha(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_Beta();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Beta(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMovingAverageModel.get_Name();
}
public class OpenSearch.Client.HoltLinearModelDescriptor : DescriptorBase`2<HoltLinearModelDescriptor, IHoltLinearModel> {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IHoltLinearModel.Alpha>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IHoltLinearModel.Beta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMovingAverageModel.Name>k__BackingField;
    private Nullable`1<float> OpenSearch.Client.IHoltLinearModel.Alpha { get; private set; }
    private Nullable`1<float> OpenSearch.Client.IHoltLinearModel.Beta { get; private set; }
    private string OpenSearch.Client.IMovingAverageModel.Name { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IHoltLinearModel.get_Alpha();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHoltLinearModel.set_Alpha(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IHoltLinearModel.get_Beta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHoltLinearModel.set_Beta(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMovingAverageModel.get_Name();
    public HoltLinearModelDescriptor Alpha(Nullable`1<float> alpha);
    public HoltLinearModelDescriptor Beta(Nullable`1<float> beta);
}
public class OpenSearch.Client.HoltWintersModel : object {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Alpha>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Beta>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Gamma>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Pad>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Period>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HoltWintersType> <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMovingAverageModel.Name>k__BackingField;
    public Nullable`1<float> Alpha { get; public set; }
    public Nullable`1<float> Beta { get; public set; }
    public Nullable`1<float> Gamma { get; public set; }
    public Nullable`1<bool> Pad { get; public set; }
    public Nullable`1<int> Period { get; public set; }
    public Nullable`1<HoltWintersType> Type { get; public set; }
    private string OpenSearch.Client.IMovingAverageModel.Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_Alpha();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Alpha(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_Beta();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Beta(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_Gamma();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Gamma(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Pad();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pad(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Period();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Period(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<HoltWintersType> get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(Nullable`1<HoltWintersType> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMovingAverageModel.get_Name();
}
public class OpenSearch.Client.HoltWintersModelDescriptor : DescriptorBase`2<HoltWintersModelDescriptor, IHoltWintersModel> {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IHoltWintersModel.Alpha>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IHoltWintersModel.Beta>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IHoltWintersModel.Gamma>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMovingAverageModel.Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IHoltWintersModel.Pad>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IHoltWintersModel.Period>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HoltWintersType> <OpenSearch.Client.IHoltWintersModel.Type>k__BackingField;
    private Nullable`1<float> OpenSearch.Client.IHoltWintersModel.Alpha { get; private set; }
    private Nullable`1<float> OpenSearch.Client.IHoltWintersModel.Beta { get; private set; }
    private Nullable`1<float> OpenSearch.Client.IHoltWintersModel.Gamma { get; private set; }
    private string OpenSearch.Client.IMovingAverageModel.Name { get; }
    private Nullable`1<bool> OpenSearch.Client.IHoltWintersModel.Pad { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IHoltWintersModel.Period { get; private set; }
    private Nullable`1<HoltWintersType> OpenSearch.Client.IHoltWintersModel.Type { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IHoltWintersModel.get_Alpha();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHoltWintersModel.set_Alpha(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IHoltWintersModel.get_Beta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHoltWintersModel.set_Beta(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IHoltWintersModel.get_Gamma();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHoltWintersModel.set_Gamma(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMovingAverageModel.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IHoltWintersModel.get_Pad();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHoltWintersModel.set_Pad(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IHoltWintersModel.get_Period();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHoltWintersModel.set_Period(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<HoltWintersType> OpenSearch.Client.IHoltWintersModel.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHoltWintersModel.set_Type(Nullable`1<HoltWintersType> value);
    public HoltWintersModelDescriptor Alpha(Nullable`1<float> alpha);
    public HoltWintersModelDescriptor Beta(Nullable`1<float> beta);
    public HoltWintersModelDescriptor Gamma(Nullable`1<float> gamma);
    public HoltWintersModelDescriptor Pad(Nullable`1<bool> pad);
    public HoltWintersModelDescriptor Period(Nullable`1<int> period);
    public HoltWintersModelDescriptor Type(Nullable`1<HoltWintersType> type);
}
[StringEnumAttribute]
public enum OpenSearch.Client.HoltWintersType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static HoltWintersType Additive;
    [EnumMemberAttribute]
public static HoltWintersType Multiplicative;
}
public class OpenSearch.Client.HotThreadInformation : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <Hosts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeName>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <Threads>k__BackingField;
    public IReadOnlyCollection`1<string> Hosts { get; internal set; }
    public string NodeId { get; internal set; }
    public string NodeName { get; internal set; }
    public IReadOnlyCollection`1<string> Threads { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_Hosts();
    [CompilerGeneratedAttribute]
internal void set_Hosts(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public string get_NodeId();
    [CompilerGeneratedAttribute]
internal void set_NodeId(string value);
    [CompilerGeneratedAttribute]
public string get_NodeName();
    [CompilerGeneratedAttribute]
internal void set_NodeName(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_Threads();
    [CompilerGeneratedAttribute]
internal void set_Threads(IReadOnlyCollection`1<string> value);
}
public class OpenSearch.Client.HtmlStripCharFilter : CharFilterBase {
}
public class OpenSearch.Client.HtmlStripCharFilterDescriptor : CharFilterDescriptorBase`2<HtmlStripCharFilterDescriptor, IHtmlStripCharFilter> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public class OpenSearch.Client.HttpDeleteDescriptor : ArbitraryHttpRequestDescriptorBase`3<HttpDeleteDescriptor, HttpDeleteRequestParameters, IHttpDeleteRequest> {
    public HttpDeleteDescriptor(string path);
}
public class OpenSearch.Client.HttpDeleteRequest : ArbitraryHttpRequestBase`1<HttpDeleteRequestParameters> {
    public HttpDeleteRequest(string path);
}
public class OpenSearch.Client.HttpGetDescriptor : ArbitraryHttpRequestDescriptorBase`3<HttpGetDescriptor, HttpGetRequestParameters, IHttpGetRequest> {
    public HttpGetDescriptor(string path);
}
public class OpenSearch.Client.HttpGetRequest : ArbitraryHttpRequestBase`1<HttpGetRequestParameters> {
    public HttpGetRequest(string path);
}
public class OpenSearch.Client.HttpHeadDescriptor : ArbitraryHttpRequestDescriptorBase`3<HttpHeadDescriptor, HttpHeadRequestParameters, IHttpHeadRequest> {
    public HttpHeadDescriptor(string path);
}
public class OpenSearch.Client.HttpHeadRequest : ArbitraryHttpRequestBase`1<HttpHeadRequestParameters> {
    public HttpHeadRequest(string path);
}
public class OpenSearch.Client.HttpPatchDescriptor : ArbitraryBodyHttpRequestDescriptorBase`3<HttpPatchDescriptor, HttpPatchRequestParameters, IHttpPatchRequest> {
    public HttpPatchDescriptor(string path);
}
public class OpenSearch.Client.HttpPatchRequest : ArbitraryBodyHttpRequestBase`1<HttpPatchRequestParameters> {
    public HttpPatchRequest(string path);
}
public class OpenSearch.Client.HttpPostDescriptor : ArbitraryBodyHttpRequestDescriptorBase`3<HttpPostDescriptor, HttpPostRequestParameters, IHttpPostRequest> {
    public HttpPostDescriptor(string path);
}
public class OpenSearch.Client.HttpPostRequest : ArbitraryBodyHttpRequestBase`1<HttpPostRequestParameters> {
    public HttpPostRequest(string path);
}
public class OpenSearch.Client.HttpPutDescriptor : ArbitraryBodyHttpRequestDescriptorBase`3<HttpPutDescriptor, HttpPutRequestParameters, IHttpPutRequest> {
    public HttpPutDescriptor(string path);
}
public class OpenSearch.Client.HttpPutRequest : ArbitraryBodyHttpRequestBase`1<HttpPutRequestParameters> {
    public HttpPutRequest(string path);
}
[DataContractAttribute]
public class OpenSearch.Client.HttpStats : object {
    [CompilerGeneratedAttribute]
private int <CurrentOpen>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalOpened>k__BackingField;
    [DataMemberAttribute]
public int CurrentOpen { get; internal set; }
    [DataMemberAttribute]
public long TotalOpened { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_CurrentOpen();
    [CompilerGeneratedAttribute]
internal void set_CurrentOpen(int value);
    [CompilerGeneratedAttribute]
public long get_TotalOpened();
    [CompilerGeneratedAttribute]
internal void set_TotalOpened(long value);
}
public class OpenSearch.Client.HunspellTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Dedup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Dictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <LongestOnly>k__BackingField;
    public Nullable`1<bool> Dedup { get; public set; }
    public string Dictionary { get; public set; }
    public string Locale { get; public set; }
    public Nullable`1<bool> LongestOnly { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Dedup();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Dedup(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Dictionary();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Dictionary(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Locale();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Locale(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_LongestOnly();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LongestOnly(Nullable`1<bool> value);
}
public class OpenSearch.Client.HunspellTokenFilterDescriptor : TokenFilterDescriptorBase`2<HunspellTokenFilterDescriptor, IHunspellTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IHunspellTokenFilter.Dedup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IHunspellTokenFilter.Dictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IHunspellTokenFilter.Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IHunspellTokenFilter.LongestOnly>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.IHunspellTokenFilter.Dedup { get; private set; }
    private string OpenSearch.Client.IHunspellTokenFilter.Dictionary { get; private set; }
    private string OpenSearch.Client.IHunspellTokenFilter.Locale { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IHunspellTokenFilter.LongestOnly { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IHunspellTokenFilter.get_Dedup();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHunspellTokenFilter.set_Dedup(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IHunspellTokenFilter.get_Dictionary();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHunspellTokenFilter.set_Dictionary(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IHunspellTokenFilter.get_Locale();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHunspellTokenFilter.set_Locale(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IHunspellTokenFilter.get_LongestOnly();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IHunspellTokenFilter.set_LongestOnly(Nullable`1<bool> value);
    public HunspellTokenFilterDescriptor LongestOnly(Nullable`1<bool> longestOnly);
    public HunspellTokenFilterDescriptor Dedup(Nullable`1<bool> dedup);
    public HunspellTokenFilterDescriptor Locale(string locale);
    public HunspellTokenFilterDescriptor Dictionary(string dictionary);
}
public class OpenSearch.Client.HyphenationDecompounderTokenFilter : CompoundWordTokenFilterBase {
}
public class OpenSearch.Client.HyphenationDecompounderTokenFilterDescriptor : CompoundWordTokenFilterDescriptorBase`2<HyphenationDecompounderTokenFilterDescriptor, IHyphenationDecompounderTokenFilter> {
    protected string Type { get; }
    protected virtual string get_Type();
}
[MapsApiAttribute("indices.add_block.json")]
[ReadAsAttribute("OpenSearch.Client.AddIndexBlockRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IAddIndexBlockRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    [IgnoreDataMemberAttribute]
public IndexBlock Block { get; }
    public abstract virtual Indices get_Index();
    public abstract virtual IndexBlock get_Block();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.AdjacencyMatrixAggregation")]
public interface OpenSearch.Client.IAdjacencyMatrixAggregation {
    [DataMemberAttribute]
public INamedFiltersContainer Filters { get; public set; }
    public abstract virtual INamedFiltersContainer get_Filters();
    public abstract virtual void set_Filters(INamedFiltersContainer value);
}
[JsonFormatterAttribute("OpenSearch.Client.AggregateFormatter")]
public interface OpenSearch.Client.IAggregate {
    public IReadOnlyDictionary`2<string, object> Meta { get; }
    public abstract virtual IReadOnlyDictionary`2<string, object> get_Meta();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IAggregation {
    public IDictionary`2<string, object> Meta { get; public set; }
    public string Name { get; public set; }
    public abstract virtual IDictionary`2<string, object> get_Meta();
    public abstract virtual void set_Meta(IDictionary`2<string, object> value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.AggregationContainer")]
public interface OpenSearch.Client.IAggregationContainer {
    [DataMemberAttribute]
public IAdjacencyMatrixAggregation AdjacencyMatrix { get; public set; }
    [DataMemberAttribute]
public AggregationDictionary Aggregations { get; public set; }
    [DataMemberAttribute]
public IAverageAggregation Average { get; public set; }
    [DataMemberAttribute]
public IAverageBucketAggregation AverageBucket { get; public set; }
    [DataMemberAttribute]
public IBucketScriptAggregation BucketScript { get; public set; }
    [DataMemberAttribute]
public IBucketSelectorAggregation BucketSelector { get; public set; }
    [DataMemberAttribute]
public IBucketSortAggregation BucketSort { get; public set; }
    [DataMemberAttribute]
public ICardinalityAggregation Cardinality { get; public set; }
    [DataMemberAttribute]
public IChildrenAggregation Children { get; public set; }
    [DataMemberAttribute]
public ICompositeAggregation Composite { get; public set; }
    [DataMemberAttribute]
public ICumulativeSumAggregation CumulativeSum { get; public set; }
    [DataMemberAttribute]
public IDateHistogramAggregation DateHistogram { get; public set; }
    [DataMemberAttribute]
public IAutoDateHistogramAggregation AutoDateHistogram { get; public set; }
    [DataMemberAttribute]
public IDateRangeAggregation DateRange { get; public set; }
    [DataMemberAttribute]
public IDerivativeAggregation Derivative { get; public set; }
    [DataMemberAttribute]
public IDiversifiedSamplerAggregation DiversifiedSampler { get; public set; }
    [DataMemberAttribute]
public IExtendedStatsAggregation ExtendedStats { get; public set; }
    [DataMemberAttribute]
public IExtendedStatsBucketAggregation ExtendedStatsBucket { get; public set; }
    [DataMemberAttribute]
public IFilterAggregation Filter { get; public set; }
    [DataMemberAttribute]
public IFiltersAggregation Filters { get; public set; }
    [DataMemberAttribute]
public IGeoBoundsAggregation GeoBounds { get; public set; }
    [DataMemberAttribute]
public IGeoCentroidAggregation GeoCentroid { get; public set; }
    [DataMemberAttribute]
public IGeoDistanceAggregation GeoDistance { get; public set; }
    [DataMemberAttribute]
public IGeoHashGridAggregation GeoHash { get; public set; }
    [DataMemberAttribute]
public IGeoLineAggregation GeoLine { get; public set; }
    [DataMemberAttribute]
public IGeoTileGridAggregation GeoTile { get; public set; }
    [DataMemberAttribute]
public IGlobalAggregation Global { get; public set; }
    [DataMemberAttribute]
public IHistogramAggregation Histogram { get; public set; }
    [DataMemberAttribute]
public IIpRangeAggregation IpRange { get; public set; }
    [DataMemberAttribute]
public IMatrixStatsAggregation MatrixStats { get; public set; }
    [DataMemberAttribute]
public IMaxAggregation Max { get; public set; }
    [DataMemberAttribute]
public IMaxBucketAggregation MaxBucket { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryInterfaceKeysFormatter`2<System.String,System.Object>")]
public IDictionary`2<string, object> Meta { get; public set; }
    [DataMemberAttribute]
public IMinAggregation Min { get; public set; }
    [DataMemberAttribute]
public IMinBucketAggregation MinBucket { get; public set; }
    [DataMemberAttribute]
public IMissingAggregation Missing { get; public set; }
    [DataMemberAttribute]
public IMovingAverageAggregation MovingAverage { get; public set; }
    [DataMemberAttribute]
public IMovingFunctionAggregation MovingFunction { get; public set; }
    [DataMemberAttribute]
public INestedAggregation Nested { get; public set; }
    [DataMemberAttribute]
public IParentAggregation Parent { get; public set; }
    [DataMemberAttribute]
public IPercentileRanksAggregation PercentileRanks { get; public set; }
    [DataMemberAttribute]
public IPercentilesAggregation Percentiles { get; public set; }
    [DataMemberAttribute]
public IPercentilesBucketAggregation PercentilesBucket { get; public set; }
    [DataMemberAttribute]
public IRangeAggregation Range { get; public set; }
    [DataMemberAttribute]
public IRareTermsAggregation RareTerms { get; public set; }
    [DataMemberAttribute]
public IReverseNestedAggregation ReverseNested { get; public set; }
    [DataMemberAttribute]
public ISamplerAggregation Sampler { get; public set; }
    [DataMemberAttribute]
public IScriptedMetricAggregation ScriptedMetric { get; public set; }
    [DataMemberAttribute]
public ISerialDifferencingAggregation SerialDifferencing { get; public set; }
    [DataMemberAttribute]
public ISignificantTermsAggregation SignificantTerms { get; public set; }
    [DataMemberAttribute]
public ISignificantTextAggregation SignificantText { get; public set; }
    [DataMemberAttribute]
public IStatsAggregation Stats { get; public set; }
    [DataMemberAttribute]
public IStatsBucketAggregation StatsBucket { get; public set; }
    [DataMemberAttribute]
public ISumAggregation Sum { get; public set; }
    [DataMemberAttribute]
public ISumBucketAggregation SumBucket { get; public set; }
    [DataMemberAttribute]
public ITermsAggregation Terms { get; public set; }
    [DataMemberAttribute]
public ITopHitsAggregation TopHits { get; public set; }
    [DataMemberAttribute]
public IValueCountAggregation ValueCount { get; public set; }
    [DataMemberAttribute]
public IWeightedAverageAggregation WeightedAverage { get; public set; }
    [DataMemberAttribute]
public IMedianAbsoluteDeviationAggregation MedianAbsoluteDeviation { get; public set; }
    [DataMemberAttribute]
public IMultiTermsAggregation MultiTerms { get; public set; }
    [DataMemberAttribute]
public IVariableWidthHistogramAggregation VariableWidthHistogram { get; public set; }
    public abstract virtual IAdjacencyMatrixAggregation get_AdjacencyMatrix();
    public abstract virtual void set_AdjacencyMatrix(IAdjacencyMatrixAggregation value);
    public abstract virtual AggregationDictionary get_Aggregations();
    public abstract virtual void set_Aggregations(AggregationDictionary value);
    public abstract virtual IAverageAggregation get_Average();
    public abstract virtual void set_Average(IAverageAggregation value);
    public abstract virtual IAverageBucketAggregation get_AverageBucket();
    public abstract virtual void set_AverageBucket(IAverageBucketAggregation value);
    public abstract virtual IBucketScriptAggregation get_BucketScript();
    public abstract virtual void set_BucketScript(IBucketScriptAggregation value);
    public abstract virtual IBucketSelectorAggregation get_BucketSelector();
    public abstract virtual void set_BucketSelector(IBucketSelectorAggregation value);
    public abstract virtual IBucketSortAggregation get_BucketSort();
    public abstract virtual void set_BucketSort(IBucketSortAggregation value);
    public abstract virtual ICardinalityAggregation get_Cardinality();
    public abstract virtual void set_Cardinality(ICardinalityAggregation value);
    public abstract virtual IChildrenAggregation get_Children();
    public abstract virtual void set_Children(IChildrenAggregation value);
    public abstract virtual ICompositeAggregation get_Composite();
    public abstract virtual void set_Composite(ICompositeAggregation value);
    public abstract virtual ICumulativeSumAggregation get_CumulativeSum();
    public abstract virtual void set_CumulativeSum(ICumulativeSumAggregation value);
    public abstract virtual IDateHistogramAggregation get_DateHistogram();
    public abstract virtual void set_DateHistogram(IDateHistogramAggregation value);
    public abstract virtual IAutoDateHistogramAggregation get_AutoDateHistogram();
    public abstract virtual void set_AutoDateHistogram(IAutoDateHistogramAggregation value);
    public abstract virtual IDateRangeAggregation get_DateRange();
    public abstract virtual void set_DateRange(IDateRangeAggregation value);
    public abstract virtual IDerivativeAggregation get_Derivative();
    public abstract virtual void set_Derivative(IDerivativeAggregation value);
    public abstract virtual IDiversifiedSamplerAggregation get_DiversifiedSampler();
    public abstract virtual void set_DiversifiedSampler(IDiversifiedSamplerAggregation value);
    public abstract virtual IExtendedStatsAggregation get_ExtendedStats();
    public abstract virtual void set_ExtendedStats(IExtendedStatsAggregation value);
    public abstract virtual IExtendedStatsBucketAggregation get_ExtendedStatsBucket();
    public abstract virtual void set_ExtendedStatsBucket(IExtendedStatsBucketAggregation value);
    public abstract virtual IFilterAggregation get_Filter();
    public abstract virtual void set_Filter(IFilterAggregation value);
    public abstract virtual IFiltersAggregation get_Filters();
    public abstract virtual void set_Filters(IFiltersAggregation value);
    public abstract virtual IGeoBoundsAggregation get_GeoBounds();
    public abstract virtual void set_GeoBounds(IGeoBoundsAggregation value);
    public abstract virtual IGeoCentroidAggregation get_GeoCentroid();
    public abstract virtual void set_GeoCentroid(IGeoCentroidAggregation value);
    public abstract virtual IGeoDistanceAggregation get_GeoDistance();
    public abstract virtual void set_GeoDistance(IGeoDistanceAggregation value);
    public abstract virtual IGeoHashGridAggregation get_GeoHash();
    public abstract virtual void set_GeoHash(IGeoHashGridAggregation value);
    public abstract virtual IGeoLineAggregation get_GeoLine();
    public abstract virtual void set_GeoLine(IGeoLineAggregation value);
    public abstract virtual IGeoTileGridAggregation get_GeoTile();
    public abstract virtual void set_GeoTile(IGeoTileGridAggregation value);
    public abstract virtual IGlobalAggregation get_Global();
    public abstract virtual void set_Global(IGlobalAggregation value);
    public abstract virtual IHistogramAggregation get_Histogram();
    public abstract virtual void set_Histogram(IHistogramAggregation value);
    public abstract virtual IIpRangeAggregation get_IpRange();
    public abstract virtual void set_IpRange(IIpRangeAggregation value);
    public abstract virtual IMatrixStatsAggregation get_MatrixStats();
    public abstract virtual void set_MatrixStats(IMatrixStatsAggregation value);
    public abstract virtual IMaxAggregation get_Max();
    public abstract virtual void set_Max(IMaxAggregation value);
    public abstract virtual IMaxBucketAggregation get_MaxBucket();
    public abstract virtual void set_MaxBucket(IMaxBucketAggregation value);
    public abstract virtual IDictionary`2<string, object> get_Meta();
    public abstract virtual void set_Meta(IDictionary`2<string, object> value);
    public abstract virtual IMinAggregation get_Min();
    public abstract virtual void set_Min(IMinAggregation value);
    public abstract virtual IMinBucketAggregation get_MinBucket();
    public abstract virtual void set_MinBucket(IMinBucketAggregation value);
    public abstract virtual IMissingAggregation get_Missing();
    public abstract virtual void set_Missing(IMissingAggregation value);
    public abstract virtual IMovingAverageAggregation get_MovingAverage();
    public abstract virtual void set_MovingAverage(IMovingAverageAggregation value);
    public abstract virtual IMovingFunctionAggregation get_MovingFunction();
    public abstract virtual void set_MovingFunction(IMovingFunctionAggregation value);
    public abstract virtual INestedAggregation get_Nested();
    public abstract virtual void set_Nested(INestedAggregation value);
    public abstract virtual IParentAggregation get_Parent();
    public abstract virtual void set_Parent(IParentAggregation value);
    public abstract virtual IPercentileRanksAggregation get_PercentileRanks();
    public abstract virtual void set_PercentileRanks(IPercentileRanksAggregation value);
    public abstract virtual IPercentilesAggregation get_Percentiles();
    public abstract virtual void set_Percentiles(IPercentilesAggregation value);
    public abstract virtual IPercentilesBucketAggregation get_PercentilesBucket();
    public abstract virtual void set_PercentilesBucket(IPercentilesBucketAggregation value);
    public abstract virtual IRangeAggregation get_Range();
    public abstract virtual void set_Range(IRangeAggregation value);
    public abstract virtual IRareTermsAggregation get_RareTerms();
    public abstract virtual void set_RareTerms(IRareTermsAggregation value);
    public abstract virtual IReverseNestedAggregation get_ReverseNested();
    public abstract virtual void set_ReverseNested(IReverseNestedAggregation value);
    public abstract virtual ISamplerAggregation get_Sampler();
    public abstract virtual void set_Sampler(ISamplerAggregation value);
    public abstract virtual IScriptedMetricAggregation get_ScriptedMetric();
    public abstract virtual void set_ScriptedMetric(IScriptedMetricAggregation value);
    public abstract virtual ISerialDifferencingAggregation get_SerialDifferencing();
    public abstract virtual void set_SerialDifferencing(ISerialDifferencingAggregation value);
    public abstract virtual ISignificantTermsAggregation get_SignificantTerms();
    public abstract virtual void set_SignificantTerms(ISignificantTermsAggregation value);
    public abstract virtual ISignificantTextAggregation get_SignificantText();
    public abstract virtual void set_SignificantText(ISignificantTextAggregation value);
    public abstract virtual IStatsAggregation get_Stats();
    public abstract virtual void set_Stats(IStatsAggregation value);
    public abstract virtual IStatsBucketAggregation get_StatsBucket();
    public abstract virtual void set_StatsBucket(IStatsBucketAggregation value);
    public abstract virtual ISumAggregation get_Sum();
    public abstract virtual void set_Sum(ISumAggregation value);
    public abstract virtual ISumBucketAggregation get_SumBucket();
    public abstract virtual void set_SumBucket(ISumBucketAggregation value);
    public abstract virtual ITermsAggregation get_Terms();
    public abstract virtual void set_Terms(ITermsAggregation value);
    public abstract virtual ITopHitsAggregation get_TopHits();
    public abstract virtual void set_TopHits(ITopHitsAggregation value);
    public abstract virtual IValueCountAggregation get_ValueCount();
    public abstract virtual void set_ValueCount(IValueCountAggregation value);
    public abstract virtual IWeightedAverageAggregation get_WeightedAverage();
    public abstract virtual void set_WeightedAverage(IWeightedAverageAggregation value);
    public abstract virtual IMedianAbsoluteDeviationAggregation get_MedianAbsoluteDeviation();
    public abstract virtual void set_MedianAbsoluteDeviation(IMedianAbsoluteDeviationAggregation value);
    public abstract virtual IMultiTermsAggregation get_MultiTerms();
    public abstract virtual void set_MultiTerms(IMultiTermsAggregation value);
    public abstract virtual IVariableWidthHistogramAggregation get_VariableWidthHistogram();
    public abstract virtual void set_VariableWidthHistogram(IVariableWidthHistogramAggregation value);
    public abstract virtual void Accept(IAggregationVisitor visitor);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.AggregationRange")]
public interface OpenSearch.Client.IAggregationRange {
    [DataMemberAttribute]
public Nullable`1<double> From { get; public set; }
    [DataMemberAttribute]
public string Key { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> To { get; public set; }
    public abstract virtual Nullable`1<double> get_From();
    public abstract virtual void set_From(Nullable`1<double> value);
    public abstract virtual string get_Key();
    public abstract virtual void set_Key(string value);
    public abstract virtual Nullable`1<double> get_To();
    public abstract virtual void set_To(Nullable`1<double> value);
}
public interface OpenSearch.Client.IAggregationVisitor {
    public int Depth { get; public set; }
    public AggregationVisitorScope Scope { get; public set; }
    public abstract virtual int get_Depth();
    public abstract virtual void set_Depth(int value);
    public abstract virtual AggregationVisitorScope get_Scope();
    public abstract virtual void set_Scope(AggregationVisitorScope value);
    public abstract virtual void Visit(IAggregationContainer aggregationContainer);
    public abstract virtual void Visit(IAggregation aggregation);
    public abstract virtual void Visit(IAverageAggregation aggregation);
    public abstract virtual void Visit(IValueCountAggregation aggregation);
    public abstract virtual void Visit(IMaxAggregation aggregation);
    public abstract virtual void Visit(IMinAggregation aggregation);
    public abstract virtual void Visit(IStatsAggregation aggregation);
    public abstract virtual void Visit(ISumAggregation aggregation);
    public abstract virtual void Visit(IExtendedStatsAggregation aggregation);
    public abstract virtual void Visit(IDateHistogramAggregation aggregation);
    public abstract virtual void Visit(IPercentilesAggregation aggregation);
    public abstract virtual void Visit(IDateRangeAggregation aggregation);
    public abstract virtual void Visit(IFilterAggregation aggregation);
    public abstract virtual void Visit(IFiltersAggregation aggregation);
    public abstract virtual void Visit(IGeoDistanceAggregation aggregation);
    public abstract virtual void Visit(IGeoHashGridAggregation aggregation);
    public abstract virtual void Visit(IGeoLineAggregation aggregation);
    public abstract virtual void Visit(IGeoTileGridAggregation aggregation);
    public abstract virtual void Visit(IGeoBoundsAggregation aggregation);
    public abstract virtual void Visit(IHistogramAggregation aggregation);
    public abstract virtual void Visit(IGlobalAggregation aggregation);
    public abstract virtual void Visit(IIpRangeAggregation aggregation);
    public abstract virtual void Visit(ICardinalityAggregation aggregation);
    public abstract virtual void Visit(IMissingAggregation aggregation);
    public abstract virtual void Visit(INestedAggregation aggregation);
    public abstract virtual void Visit(IParentAggregation aggregation);
    public abstract virtual void Visit(IReverseNestedAggregation aggregation);
    public abstract virtual void Visit(IRangeAggregation aggregation);
    public abstract virtual void Visit(IRareTermsAggregation aggregation);
    public abstract virtual void Visit(ITermsAggregation aggregation);
    public abstract virtual void Visit(ISignificantTermsAggregation aggregation);
    public abstract virtual void Visit(ISignificantTextAggregation aggregation);
    public abstract virtual void Visit(IPercentileRanksAggregation aggregation);
    public abstract virtual void Visit(ITopHitsAggregation aggregation);
    public abstract virtual void Visit(IChildrenAggregation aggregation);
    public abstract virtual void Visit(IScriptedMetricAggregation aggregation);
    public abstract virtual void Visit(IAverageBucketAggregation aggregation);
    public abstract virtual void Visit(IDerivativeAggregation aggregation);
    public abstract virtual void Visit(IMaxBucketAggregation aggregation);
    public abstract virtual void Visit(IMinBucketAggregation aggregation);
    public abstract virtual void Visit(ISumBucketAggregation aggregation);
    public abstract virtual void Visit(IStatsBucketAggregation aggregation);
    public abstract virtual void Visit(IExtendedStatsBucketAggregation aggregation);
    public abstract virtual void Visit(IPercentilesBucketAggregation aggregation);
    public abstract virtual void Visit(IMovingAverageAggregation aggregation);
    public abstract virtual void Visit(ICumulativeSumAggregation aggregation);
    public abstract virtual void Visit(ISerialDifferencingAggregation aggregation);
    public abstract virtual void Visit(IBucketScriptAggregation aggregation);
    public abstract virtual void Visit(IBucketSelectorAggregation aggregation);
    public abstract virtual void Visit(IBucketSortAggregation aggregation);
    public abstract virtual void Visit(ISamplerAggregation aggregation);
    public abstract virtual void Visit(IDiversifiedSamplerAggregation aggregation);
    public abstract virtual void Visit(IGeoCentroidAggregation aggregation);
    public abstract virtual void Visit(ICompositeAggregation aggregation);
    public abstract virtual void Visit(IMedianAbsoluteDeviationAggregation aggregation);
    public abstract virtual void Visit(IAdjacencyMatrixAggregation aggregation);
    public abstract virtual void Visit(IAutoDateHistogramAggregation aggregation);
    public abstract virtual void Visit(IMatrixStatsAggregation aggregation);
    public abstract virtual void Visit(IWeightedAverageAggregation aggregation);
    public abstract virtual void Visit(IMovingFunctionAggregation aggregation);
    public abstract virtual void Visit(IMultiTermsAggregation aggregation);
    public abstract virtual void Visit(IVariableWidthHistogramAggregation aggregation);
}
[ReadAsAttribute("OpenSearch.Client.Alias")]
public interface OpenSearch.Client.IAlias {
    [DataMemberAttribute]
public QueryContainer Filter { get; public set; }
    [DataMemberAttribute]
public Routing IndexRouting { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IsWriteIndex { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IsHidden { get; public set; }
    [DataMemberAttribute]
public Routing Routing { get; public set; }
    [DataMemberAttribute]
public Routing SearchRouting { get; public set; }
    public abstract virtual QueryContainer get_Filter();
    public abstract virtual void set_Filter(QueryContainer value);
    public abstract virtual Routing get_IndexRouting();
    public abstract virtual void set_IndexRouting(Routing value);
    public abstract virtual Nullable`1<bool> get_IsWriteIndex();
    public abstract virtual void set_IsWriteIndex(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IsHidden();
    public abstract virtual void set_IsHidden(Nullable`1<bool> value);
    public abstract virtual Routing get_Routing();
    public abstract virtual void set_Routing(Routing value);
    public abstract virtual Routing get_SearchRouting();
    public abstract virtual void set_SearchRouting(Routing value);
}
[JsonFormatterAttribute("OpenSearch.Client.AliasActionFormatter")]
public interface OpenSearch.Client.IAliasAction {
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IAliasAddAction {
    [DataMemberAttribute]
public AliasAddOperation Add { get; public set; }
    public abstract virtual AliasAddOperation get_Add();
    public abstract virtual void set_Add(AliasAddOperation value);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.Aliases,OpenSearch.Client.IAliases,OpenSearch.Client.IndexName,OpenSearch.Client.IAlias>")]
public interface OpenSearch.Client.IAliases {
}
[MapsApiAttribute("indices.exists_alias.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IAliasExistsRequest {
    [IgnoreDataMemberAttribute]
public Names Name { get; }
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Names get_Name();
    public abstract virtual Indices get_Index();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IAliasRemoveAction {
    [DataMemberAttribute]
public AliasRemoveOperation Remove { get; public set; }
    public abstract virtual AliasRemoveOperation get_Remove();
    public abstract virtual void set_Remove(AliasRemoveOperation value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IAliasRemoveIndexAction {
    [DataMemberAttribute]
public AliasRemoveIndexOperation RemoveIndex { get; public set; }
    public abstract virtual AliasRemoveIndexOperation get_RemoveIndex();
    public abstract virtual void set_RemoveIndex(AliasRemoveIndexOperation value);
}
public interface OpenSearch.Client.IAllocateClusterRerouteCommand {
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public string Node { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Shard { get; public set; }
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual string get_Node();
    public abstract virtual void set_Node(string value);
    public abstract virtual Nullable`1<int> get_Shard();
    public abstract virtual void set_Shard(Nullable`1<int> value);
}
public interface OpenSearch.Client.IAllocateEmptyPrimaryRerouteCommand {
    [DataMemberAttribute]
public Nullable`1<bool> AcceptDataLoss { get; public set; }
    public abstract virtual Nullable`1<bool> get_AcceptDataLoss();
    public abstract virtual void set_AcceptDataLoss(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IAllocateReplicaClusterRerouteCommand {
}
public interface OpenSearch.Client.IAllocateStalePrimaryRerouteCommand {
    [DataMemberAttribute]
public Nullable`1<bool> AcceptDataLoss { get; public set; }
    public abstract virtual Nullable`1<bool> get_AcceptDataLoss();
    public abstract virtual void set_AcceptDataLoss(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IAllocationAttributes {
    public IDictionary`2<string, IList`1<string>> Attributes { get; }
    public abstract virtual IDictionary`2<string, IList`1<string>> get_Attributes();
}
public interface OpenSearch.Client.IAllocationAwarenessSettings {
    public IEnumerable`1<string> Attributes { get; public set; }
    public IAllocationAttributes Forced { get; public set; }
    public abstract virtual IEnumerable`1<string> get_Attributes();
    public abstract virtual void set_Attributes(IEnumerable`1<string> value);
    public abstract virtual IAllocationAttributes get_Forced();
    public abstract virtual void set_Forced(IAllocationAttributes value);
}
public interface OpenSearch.Client.IAllocationFilteringSettings {
    public IAllocationAttributes Exclude { get; public set; }
    public IAllocationAttributes Include { get; public set; }
    public IAllocationAttributes Require { get; public set; }
    public abstract virtual IAllocationAttributes get_Exclude();
    public abstract virtual void set_Exclude(IAllocationAttributes value);
    public abstract virtual IAllocationAttributes get_Include();
    public abstract virtual void set_Include(IAllocationAttributes value);
    public abstract virtual IAllocationAttributes get_Require();
    public abstract virtual void set_Require(IAllocationAttributes value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.Analysis")]
public interface OpenSearch.Client.IAnalysis {
    [DataMemberAttribute]
public IAnalyzers Analyzers { get; public set; }
    [DataMemberAttribute]
public ICharFilters CharFilters { get; public set; }
    [DataMemberAttribute]
public INormalizers Normalizers { get; public set; }
    [DataMemberAttribute]
public ITokenFilters TokenFilters { get; public set; }
    [DataMemberAttribute]
public ITokenizers Tokenizers { get; public set; }
    public abstract virtual IAnalyzers get_Analyzers();
    public abstract virtual void set_Analyzers(IAnalyzers value);
    public abstract virtual ICharFilters get_CharFilters();
    public abstract virtual void set_CharFilters(ICharFilters value);
    public abstract virtual INormalizers get_Normalizers();
    public abstract virtual void set_Normalizers(INormalizers value);
    public abstract virtual ITokenFilters get_TokenFilters();
    public abstract virtual void set_TokenFilters(ITokenFilters value);
    public abstract virtual ITokenizers get_Tokenizers();
    public abstract virtual void set_Tokenizers(ITokenizers value);
}
[JsonFormatterAttribute("OpenSearch.Client.AnalyzerFormatter")]
public interface OpenSearch.Client.IAnalyzer {
    [DataMemberAttribute]
public string Type { get; }
    [DataMemberAttribute]
public string Version { get; public set; }
    public abstract virtual string get_Type();
    public abstract virtual string get_Version();
    public abstract virtual void set_Version(string value);
}
[MapsApiAttribute("indices.analyze.json")]
[ReadAsAttribute("OpenSearch.Client.AnalyzeRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IAnalyzeRequest {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Attributes { get; public set; }
    [DataMemberAttribute]
public AnalyzeCharFilters CharFilter { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Explain { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public AnalyzeTokenFilters Filter { get; public set; }
    [DataMemberAttribute]
public string Normalizer { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Text { get; public set; }
    [DataMemberAttribute]
public Union`2<string, ITokenizer> Tokenizer { get; public set; }
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual IEnumerable`1<string> get_Attributes();
    public abstract virtual void set_Attributes(IEnumerable`1<string> value);
    public abstract virtual AnalyzeCharFilters get_CharFilter();
    public abstract virtual void set_CharFilter(AnalyzeCharFilters value);
    public abstract virtual Nullable`1<bool> get_Explain();
    public abstract virtual void set_Explain(Nullable`1<bool> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual AnalyzeTokenFilters get_Filter();
    public abstract virtual void set_Filter(AnalyzeTokenFilters value);
    public abstract virtual string get_Normalizer();
    public abstract virtual void set_Normalizer(string value);
    public abstract virtual IEnumerable`1<string> get_Text();
    public abstract virtual void set_Text(IEnumerable`1<string> value);
    public abstract virtual Union`2<string, ITokenizer> get_Tokenizer();
    public abstract virtual void set_Tokenizer(Union`2<string, ITokenizer> value);
    public abstract virtual IndexName get_Index();
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.Analyzers,OpenSearch.Client.IAnalyzers,System.String,OpenSearch.Client.IAnalyzer>")]
public interface OpenSearch.Client.IAnalyzers {
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IAppendProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<object> Value { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> AllowDuplicates { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual IEnumerable`1<object> get_Value();
    public abstract virtual void set_Value(IEnumerable`1<object> value);
    public abstract virtual Nullable`1<bool> get_AllowDuplicates();
    public abstract virtual void set_AllowDuplicates(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IArbitraryBodyHttpRequest`1 {
    [IgnoreDataMemberAttribute]
public PostData Body { get; public set; }
    public abstract virtual PostData get_Body();
    public abstract virtual void set_Body(PostData value);
}
public interface OpenSearch.Client.IArbitraryHttpRequest`1 {
    [IgnoreDataMemberAttribute]
public string Path { get; public set; }
    public abstract virtual string get_Path();
    public abstract virtual void set_Path(string value);
}
public interface OpenSearch.Client.IAsciiFoldingTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> PreserveOriginal { get; public set; }
    public abstract virtual Nullable`1<bool> get_PreserveOriginal();
    public abstract virtual void set_PreserveOriginal(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IAttachmentProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> IndexedCharacters { get; public set; }
    [DataMemberAttribute]
public Field IndexedCharactersField { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Properties { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    [DataMemberAttribute]
public Field ResourceName { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual Nullable`1<long> get_IndexedCharacters();
    public abstract virtual void set_IndexedCharacters(Nullable`1<long> value);
    public abstract virtual Field get_IndexedCharactersField();
    public abstract virtual void set_IndexedCharactersField(Field value);
    public abstract virtual IEnumerable`1<string> get_Properties();
    public abstract virtual void set_Properties(IEnumerable`1<string> value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
    public abstract virtual Field get_ResourceName();
    public abstract virtual void set_ResourceName(Field value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.AutoDateHistogramAggregation")]
public interface OpenSearch.Client.IAutoDateHistogramAggregation {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Buckets { get; public set; }
    [DataMemberAttribute]
public string Format { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> Missing { get; public set; }
    [DataMemberAttribute]
public string Offset { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Params { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    [DataMemberAttribute]
public string TimeZone { get; public set; }
    [DataMemberAttribute]
public Nullable`1<MinimumInterval> MinimumInterval { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<int> get_Buckets();
    public abstract virtual void set_Buckets(Nullable`1<int> value);
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
    public abstract virtual Nullable`1<DateTime> get_Missing();
    public abstract virtual void set_Missing(Nullable`1<DateTime> value);
    public abstract virtual string get_Offset();
    public abstract virtual void set_Offset(string value);
    public abstract virtual IDictionary`2<string, object> get_Params();
    public abstract virtual void set_Params(IDictionary`2<string, object> value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual string get_TimeZone();
    public abstract virtual void set_TimeZone(string value);
    public abstract virtual Nullable`1<MinimumInterval> get_MinimumInterval();
    public abstract virtual void set_MinimumInterval(Nullable`1<MinimumInterval> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.AverageAggregation")]
public interface OpenSearch.Client.IAverageAggregation {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.AverageBucketAggregation")]
public interface OpenSearch.Client.IAverageBucketAggregation {
}
public interface OpenSearch.Client.IAzureRepository {
}
public interface OpenSearch.Client.IAzureRepositorySettings {
    [DataMemberAttribute]
public string BasePath { get; public set; }
    [DataMemberAttribute]
public string ChunkSize { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Compress { get; public set; }
    [DataMemberAttribute]
public string Container { get; public set; }
    public abstract virtual string get_BasePath();
    public abstract virtual void set_BasePath(string value);
    public abstract virtual string get_ChunkSize();
    public abstract virtual void set_ChunkSize(string value);
    public abstract virtual Nullable`1<bool> get_Compress();
    public abstract virtual void set_Compress(Nullable`1<bool> value);
    public abstract virtual string get_Container();
    public abstract virtual void set_Container(string value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.IBDistribution : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IBDistribution LogLogistic;
    [EnumMemberAttribute]
public static IBDistribution SmoothPowerLaw;
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IBinaryProperty {
}
[StringEnumAttribute]
public enum OpenSearch.Client.IBLambda : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IBLambda DocumentFrequency;
    [EnumMemberAttribute]
public static IBLambda TermFrequency;
}
public interface OpenSearch.Client.IBM25Similarity {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringDoubleFormatter")]
public Nullable`1<double> B { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> DiscountOverlaps { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringDoubleFormatter")]
public Nullable`1<double> K1 { get; public set; }
    public abstract virtual Nullable`1<double> get_B();
    public abstract virtual void set_B(Nullable`1<double> value);
    public abstract virtual Nullable`1<bool> get_DiscountOverlaps();
    public abstract virtual void set_DiscountOverlaps(Nullable`1<bool> value);
    public abstract virtual Nullable`1<double> get_K1();
    public abstract virtual void set_K1(Nullable`1<double> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IBooleanProperty {
    [DataMemberAttribute]
public Nullable`1<double> Boost { get; public set; }
    [DataMemberAttribute]
public INumericFielddata Fielddata { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> NullValue { get; public set; }
    public abstract virtual Nullable`1<double> get_Boost();
    public abstract virtual void set_Boost(Nullable`1<double> value);
    public abstract virtual INumericFielddata get_Fielddata();
    public abstract virtual void set_Fielddata(INumericFielddata value);
    public abstract virtual Nullable`1<bool> get_Index();
    public abstract virtual void set_Index(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_NullValue();
    public abstract virtual void set_NullValue(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.BoolQuery")]
public interface OpenSearch.Client.IBoolQuery {
    [DataMemberAttribute]
public IEnumerable`1<QueryContainer> Filter { get; public set; }
    [IgnoreDataMemberAttribute]
public bool Locked { get; }
    [DataMemberAttribute]
public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<QueryContainer> Must { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<QueryContainer> MustNot { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<QueryContainer> Should { get; public set; }
    public abstract virtual IEnumerable`1<QueryContainer> get_Filter();
    public abstract virtual void set_Filter(IEnumerable`1<QueryContainer> value);
    public abstract virtual bool get_Locked();
    public abstract virtual MinimumShouldMatch get_MinimumShouldMatch();
    public abstract virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    public abstract virtual IEnumerable`1<QueryContainer> get_Must();
    public abstract virtual void set_Must(IEnumerable`1<QueryContainer> value);
    public abstract virtual IEnumerable`1<QueryContainer> get_MustNot();
    public abstract virtual void set_MustNot(IEnumerable`1<QueryContainer> value);
    public abstract virtual IEnumerable`1<QueryContainer> get_Should();
    public abstract virtual void set_Should(IEnumerable`1<QueryContainer> value);
    public abstract virtual bool ShouldSerializeShould();
    public abstract virtual bool ShouldSerializeMust();
    public abstract virtual bool ShouldSerializeMustNot();
    public abstract virtual bool ShouldSerializeFilter();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.BoostingQueryDescriptor`1<System.Object>")]
public interface OpenSearch.Client.IBoostingQuery {
    [DataMemberAttribute]
public Nullable`1<double> NegativeBoost { get; public set; }
    [DataMemberAttribute]
public QueryContainer NegativeQuery { get; public set; }
    [DataMemberAttribute]
public QueryContainer PositiveQuery { get; public set; }
    public abstract virtual Nullable`1<double> get_NegativeBoost();
    public abstract virtual void set_NegativeBoost(Nullable`1<double> value);
    public abstract virtual QueryContainer get_NegativeQuery();
    public abstract virtual void set_NegativeQuery(QueryContainer value);
    public abstract virtual QueryContainer get_PositiveQuery();
    public abstract virtual void set_PositiveQuery(QueryContainer value);
}
[ReadAsAttribute("OpenSearch.Client.BoundingBox")]
public interface OpenSearch.Client.IBoundingBox {
    [DataMemberAttribute]
public GeoLocation BottomRight { get; public set; }
    [DataMemberAttribute]
public GeoLocation TopLeft { get; public set; }
    [DataMemberAttribute]
public string WellKnownText { get; public set; }
    public abstract virtual GeoLocation get_BottomRight();
    public abstract virtual void set_BottomRight(GeoLocation value);
    public abstract virtual GeoLocation get_TopLeft();
    public abstract virtual void set_TopLeft(GeoLocation value);
    public abstract virtual string get_WellKnownText();
    public abstract virtual void set_WellKnownText(string value);
}
public class OpenSearch.Client.IBSimilarity : object {
    [CompilerGeneratedAttribute]
private Nullable`1<IBDistribution> <Distribution>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IBLambda> <Lambda>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Normalization> <Normalization>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <NormalizationH1C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <NormalizationH2C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <NormalizationH3C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <NormalizationZZ>k__BackingField;
    public Nullable`1<IBDistribution> Distribution { get; public set; }
    public Nullable`1<IBLambda> Lambda { get; public set; }
    public Nullable`1<Normalization> Normalization { get; public set; }
    public Nullable`1<double> NormalizationH1C { get; public set; }
    public Nullable`1<double> NormalizationH2C { get; public set; }
    public Nullable`1<double> NormalizationH3C { get; public set; }
    public Nullable`1<double> NormalizationZZ { get; public set; }
    public string Type { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IBDistribution> get_Distribution();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Distribution(Nullable`1<IBDistribution> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IBLambda> get_Lambda();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lambda(Nullable`1<IBLambda> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Normalization> get_Normalization();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Normalization(Nullable`1<Normalization> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_NormalizationH1C();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormalizationH1C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_NormalizationH2C();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormalizationH2C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_NormalizationH3C();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormalizationH3C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_NormalizationZZ();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormalizationZZ(Nullable`1<double> value);
    public sealed virtual string get_Type();
}
public class OpenSearch.Client.IBSimilarityDescriptor : DescriptorBase`2<IBSimilarityDescriptor, IIBSimilarity> {
    [CompilerGeneratedAttribute]
private Nullable`1<IBDistribution> <OpenSearch.Client.IIBSimilarity.Distribution>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IBLambda> <OpenSearch.Client.IIBSimilarity.Lambda>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Normalization> <OpenSearch.Client.IIBSimilarity.Normalization>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IIBSimilarity.NormalizationH1C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IIBSimilarity.NormalizationH2C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IIBSimilarity.NormalizationH3C>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IIBSimilarity.NormalizationZZ>k__BackingField;
    private Nullable`1<IBDistribution> OpenSearch.Client.IIBSimilarity.Distribution { get; private set; }
    private Nullable`1<IBLambda> OpenSearch.Client.IIBSimilarity.Lambda { get; private set; }
    private Nullable`1<Normalization> OpenSearch.Client.IIBSimilarity.Normalization { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IIBSimilarity.NormalizationH1C { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IIBSimilarity.NormalizationH2C { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IIBSimilarity.NormalizationH3C { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IIBSimilarity.NormalizationZZ { get; private set; }
    private string OpenSearch.Client.ISimilarity.Type { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IBDistribution> OpenSearch.Client.IIBSimilarity.get_Distribution();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIBSimilarity.set_Distribution(Nullable`1<IBDistribution> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IBLambda> OpenSearch.Client.IIBSimilarity.get_Lambda();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIBSimilarity.set_Lambda(Nullable`1<IBLambda> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<Normalization> OpenSearch.Client.IIBSimilarity.get_Normalization();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIBSimilarity.set_Normalization(Nullable`1<Normalization> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IIBSimilarity.get_NormalizationH1C();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIBSimilarity.set_NormalizationH1C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IIBSimilarity.get_NormalizationH2C();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIBSimilarity.set_NormalizationH2C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IIBSimilarity.get_NormalizationH3C();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIBSimilarity.set_NormalizationH3C(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IIBSimilarity.get_NormalizationZZ();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIBSimilarity.set_NormalizationZZ(Nullable`1<double> value);
    private sealed virtual override string OpenSearch.Client.ISimilarity.get_Type();
    public IBSimilarityDescriptor Distribution(Nullable`1<IBDistribution> distribution);
    public IBSimilarityDescriptor Lambda(Nullable`1<IBLambda> lambda);
    public IBSimilarityDescriptor NoNormalization();
    public IBSimilarityDescriptor NormalizationH1(Nullable`1<double> c);
    public IBSimilarityDescriptor NormalizationH2(Nullable`1<double> c);
    public IBSimilarityDescriptor NormalizationH3(Nullable`1<double> mu);
    public IBSimilarityDescriptor NormalizationZ(Nullable`1<double> z);
}
public interface OpenSearch.Client.IBucket {
}
public interface OpenSearch.Client.IBucketAggregation {
    public AggregationDictionary Aggregations { get; public set; }
    public abstract virtual AggregationDictionary get_Aggregations();
    public abstract virtual void set_Aggregations(AggregationDictionary value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.BucketScriptAggregation")]
public interface OpenSearch.Client.IBucketScriptAggregation {
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.BucketSelectorAggregation")]
public interface OpenSearch.Client.IBucketSelectorAggregation {
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.BucketSortAggregation")]
public interface OpenSearch.Client.IBucketSortAggregation {
    [DataMemberAttribute]
public Nullable`1<int> From { get; public set; }
    [DataMemberAttribute]
public Nullable`1<GapPolicy> GapPolicy { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    [DataMemberAttribute]
public IList`1<ISort> Sort { get; public set; }
    public abstract virtual Nullable`1<int> get_From();
    public abstract virtual void set_From(Nullable`1<int> value);
    public abstract virtual Nullable`1<GapPolicy> get_GapPolicy();
    public abstract virtual void set_GapPolicy(Nullable`1<GapPolicy> value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
    public abstract virtual IList`1<ISort> get_Sort();
    public abstract virtual void set_Sort(IList`1<ISort> value);
}
[JsonFormatterAttribute("OpenSearch.Client.BucketsPathFormatter")]
public interface OpenSearch.Client.IBucketsPath {
}
[MapsApiAttribute("indices.update_aliases.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IBulkAliasRequest {
    [DataMemberAttribute]
public IList`1<IAliasAction> Actions { get; public set; }
    public abstract virtual IList`1<IAliasAction> get_Actions();
    public abstract virtual void set_Actions(IList`1<IAliasAction> value);
}
public interface OpenSearch.Client.IBulkAllRequest`1 {
    public Nullable`1<int> BackOffRetries { get; public set; }
    public Time BackOffTime { get; public set; }
    public ProducerConsumerBackPressure BackPressure { get; public set; }
    public Action`2<BulkDescriptor, IList`1<T>> BufferToBulk { get; public set; }
    public bool ContinueAfterDroppedDocuments { get; public set; }
    public IEnumerable`1<T> Documents { get; }
    public Action`2<BulkResponseItemBase, T> DroppedDocumentCallback { get; public set; }
    public IndexName Index { get; public set; }
    public Nullable`1<int> MaxDegreeOfParallelism { get; public set; }
    public string Pipeline { get; public set; }
    public Indices RefreshIndices { get; public set; }
    public bool RefreshOnCompleted { get; public set; }
    public Func`3<BulkResponseItemBase, T, bool> RetryDocumentPredicate { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public Time Timeout { get; public set; }
    public Nullable`1<int> WaitForActiveShards { get; public set; }
    public Action`1<BulkResponse> BulkResponseCallback { get; public set; }
    public abstract virtual Nullable`1<int> get_BackOffRetries();
    public abstract virtual void set_BackOffRetries(Nullable`1<int> value);
    public abstract virtual Time get_BackOffTime();
    public abstract virtual void set_BackOffTime(Time value);
    public abstract virtual ProducerConsumerBackPressure get_BackPressure();
    public abstract virtual void set_BackPressure(ProducerConsumerBackPressure value);
    public abstract virtual Action`2<BulkDescriptor, IList`1<T>> get_BufferToBulk();
    public abstract virtual void set_BufferToBulk(Action`2<BulkDescriptor, IList`1<T>> value);
    public abstract virtual bool get_ContinueAfterDroppedDocuments();
    public abstract virtual void set_ContinueAfterDroppedDocuments(bool value);
    public abstract virtual IEnumerable`1<T> get_Documents();
    public abstract virtual Action`2<BulkResponseItemBase, T> get_DroppedDocumentCallback();
    public abstract virtual void set_DroppedDocumentCallback(Action`2<BulkResponseItemBase, T> value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual Nullable`1<int> get_MaxDegreeOfParallelism();
    public abstract virtual void set_MaxDegreeOfParallelism(Nullable`1<int> value);
    public abstract virtual string get_Pipeline();
    public abstract virtual void set_Pipeline(string value);
    public abstract virtual Indices get_RefreshIndices();
    public abstract virtual void set_RefreshIndices(Indices value);
    public abstract virtual bool get_RefreshOnCompleted();
    public abstract virtual void set_RefreshOnCompleted(bool value);
    public abstract virtual Func`3<BulkResponseItemBase, T, bool> get_RetryDocumentPredicate();
    public abstract virtual void set_RetryDocumentPredicate(Func`3<BulkResponseItemBase, T, bool> value);
    public abstract virtual Routing get_Routing();
    public abstract virtual void set_Routing(Routing value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
    public abstract virtual Time get_Timeout();
    public abstract virtual void set_Timeout(Time value);
    public abstract virtual Nullable`1<int> get_WaitForActiveShards();
    public abstract virtual void set_WaitForActiveShards(Nullable`1<int> value);
    public abstract virtual Action`1<BulkResponse> get_BulkResponseCallback();
    public abstract virtual void set_BulkResponseCallback(Action`1<BulkResponse> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IBulkCreateOperation`1 {
    public T Document { get; public set; }
    [DataMemberAttribute]
public string Pipeline { get; public set; }
    public abstract virtual T get_Document();
    public abstract virtual void set_Document(T value);
    public abstract virtual string get_Pipeline();
    public abstract virtual void set_Pipeline(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IBulkDeleteOperation`1 {
    public T Document { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> IfSequenceNumber { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> IfPrimaryTerm { get; public set; }
    public abstract virtual T get_Document();
    public abstract virtual void set_Document(T value);
    public abstract virtual Nullable`1<long> get_IfSequenceNumber();
    public abstract virtual void set_IfSequenceNumber(Nullable`1<long> value);
    public abstract virtual Nullable`1<long> get_IfPrimaryTerm();
    public abstract virtual void set_IfPrimaryTerm(Nullable`1<long> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IBulkIndexOperation`1 {
    [JsonFormatterAttribute("OpenSearch.Client.SourceWriteFormatter`1")]
public T Document { get; public set; }
    [DataMemberAttribute]
public string Percolate { get; public set; }
    [DataMemberAttribute]
public string Pipeline { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> IfSequenceNumber { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> IfPrimaryTerm { get; public set; }
    public abstract virtual T get_Document();
    public abstract virtual void set_Document(T value);
    public abstract virtual string get_Percolate();
    public abstract virtual void set_Percolate(string value);
    public abstract virtual string get_Pipeline();
    public abstract virtual void set_Pipeline(string value);
    public abstract virtual Nullable`1<long> get_IfSequenceNumber();
    public abstract virtual void set_IfSequenceNumber(Nullable`1<long> value);
    public abstract virtual Nullable`1<long> get_IfPrimaryTerm();
    public abstract virtual void set_IfPrimaryTerm(Nullable`1<long> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IBulkOperation {
    public Type ClrType { get; }
    [DataMemberAttribute]
public Id Id { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    public string Operation { get; }
    [DataMemberAttribute]
public Nullable`1<int> RetriesOnConflict { get; public set; }
    [DataMemberAttribute]
public Routing Routing { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> Version { get; public set; }
    [DataMemberAttribute]
public Nullable`1<VersionType> VersionType { get; public set; }
    public abstract virtual Type get_ClrType();
    public abstract virtual Id get_Id();
    public abstract virtual void set_Id(Id value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual string get_Operation();
    public abstract virtual Nullable`1<int> get_RetriesOnConflict();
    public abstract virtual void set_RetriesOnConflict(Nullable`1<int> value);
    public abstract virtual Routing get_Routing();
    public abstract virtual void set_Routing(Routing value);
    public abstract virtual Nullable`1<long> get_Version();
    public abstract virtual void set_Version(Nullable`1<long> value);
    public abstract virtual Nullable`1<VersionType> get_VersionType();
    public abstract virtual void set_VersionType(Nullable`1<VersionType> value);
    public abstract virtual object GetBody();
    public abstract virtual Id GetIdForOperation(Inferrer inferrer);
    public abstract virtual Routing GetRoutingForOperation(Inferrer settingsInferrer);
}
[JsonFormatterAttribute("OpenSearch.Client.BulkRequestFormatter")]
[MapsApiAttribute("bulk.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IBulkRequest {
    [IgnoreDataMemberAttribute]
public BulkOperationsCollection`1<IBulkOperation> Operations { get; public set; }
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    public abstract virtual BulkOperationsCollection`1<IBulkOperation> get_Operations();
    public abstract virtual void set_Operations(BulkOperationsCollection`1<IBulkOperation> value);
    public abstract virtual IndexName get_Index();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IBulkUpdateOperation`2 {
    public TPartialDocument Doc { get; public set; }
    public Nullable`1<bool> DocAsUpsert { get; public set; }
    public TDocument IdFrom { get; public set; }
    public IScript Script { get; public set; }
    public Nullable`1<bool> ScriptedUpsert { get; public set; }
    public TDocument Upsert { get; public set; }
    public Nullable`1<long> IfSequenceNumber { get; public set; }
    public Nullable`1<long> IfPrimaryTerm { get; public set; }
    [DataMemberAttribute]
public Union`2<bool, ISourceFilter> Source { get; public set; }
    public abstract virtual TPartialDocument get_Doc();
    public abstract virtual void set_Doc(TPartialDocument value);
    public abstract virtual Nullable`1<bool> get_DocAsUpsert();
    public abstract virtual void set_DocAsUpsert(Nullable`1<bool> value);
    public abstract virtual TDocument get_IdFrom();
    public abstract virtual void set_IdFrom(TDocument value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual Nullable`1<bool> get_ScriptedUpsert();
    public abstract virtual void set_ScriptedUpsert(Nullable`1<bool> value);
    public abstract virtual TDocument get_Upsert();
    public abstract virtual void set_Upsert(TDocument value);
    public abstract virtual Nullable`1<long> get_IfSequenceNumber();
    public abstract virtual void set_IfSequenceNumber(Nullable`1<long> value);
    public abstract virtual Nullable`1<long> get_IfPrimaryTerm();
    public abstract virtual void set_IfPrimaryTerm(Nullable`1<long> value);
    public abstract virtual Union`2<bool, ISourceFilter> get_Source();
    public abstract virtual void set_Source(Union`2<bool, ISourceFilter> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IBytesProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
}
public interface OpenSearch.Client.ICancelClusterRerouteCommand {
    [DataMemberAttribute]
public Nullable`1<bool> AllowPrimary { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public string Node { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Shard { get; public set; }
    public abstract virtual Nullable`1<bool> get_AllowPrimary();
    public abstract virtual void set_AllowPrimary(Nullable`1<bool> value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual string get_Node();
    public abstract virtual void set_Node(string value);
    public abstract virtual Nullable`1<int> get_Shard();
    public abstract virtual void set_Shard(Nullable`1<int> value);
}
[MapsApiAttribute("tasks.cancel.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICancelTasksRequest {
    [IgnoreDataMemberAttribute]
public TaskId TaskId { get; }
    public abstract virtual TaskId get_TaskId();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.CardinalityAggregation")]
public interface OpenSearch.Client.ICardinalityAggregation {
    [DataMemberAttribute]
public Nullable`1<int> PrecisionThreshold { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Rehash { get; public set; }
    public abstract virtual Nullable`1<int> get_PrecisionThreshold();
    public abstract virtual void set_PrecisionThreshold(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_Rehash();
    public abstract virtual void set_Rehash(Nullable`1<bool> value);
}
[MapsApiAttribute("cat.aliases.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatAliasesRequest {
    [IgnoreDataMemberAttribute]
public Names Name { get; }
    public abstract virtual Names get_Name();
}
[MapsApiAttribute("cat.allocation.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatAllocationRequest {
    [IgnoreDataMemberAttribute]
public NodeIds NodeId { get; }
    public abstract virtual NodeIds get_NodeId();
}
[MapsApiAttribute("cat.all_pit_segments")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatAllPitSegmentsRequest {
}
[MapsApiAttribute("cat.cluster_manager.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatClusterManagerRequest {
}
[MapsApiAttribute("cat.count.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatCountRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
public interface OpenSearch.Client.ICategorySuggestContext {
}
[MapsApiAttribute("cat.fielddata.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatFielddataRequest {
    [IgnoreDataMemberAttribute]
public Fields Fields { get; }
    public abstract virtual Fields get_Fields();
}
[MapsApiAttribute("cat.health.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatHealthRequest {
}
[MapsApiAttribute("cat.help.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatHelpRequest {
}
[MapsApiAttribute("cat.indices.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatIndicesRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("cat.master.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatMasterRequest {
}
[MapsApiAttribute("cat.nodeattrs.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatNodeAttributesRequest {
}
[MapsApiAttribute("cat.nodes.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatNodesRequest {
}
[MapsApiAttribute("cat.pending_tasks.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatPendingTasksRequest {
}
[MapsApiAttribute("cat.pit_segments")]
[ReadAsAttribute("OpenSearch.Client.CatPitSegmentsRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatPitSegmentsRequest {
    [DataMemberAttribute]
public IEnumerable`1<string> PitId { get; public set; }
    public abstract virtual IEnumerable`1<string> get_PitId();
    public abstract virtual void set_PitId(IEnumerable`1<string> value);
}
[MapsApiAttribute("cat.plugins.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatPluginsRequest {
}
public interface OpenSearch.Client.ICatRecord {
}
[MapsApiAttribute("cat.recovery.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatRecoveryRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("cat.repositories.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatRepositoriesRequest {
}
[MapsApiAttribute("cat.segment_replication")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatSegmentReplicationRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("cat.segments.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatSegmentsRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("cat.shards.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatShardsRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("cat.snapshots.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatSnapshotsRequest {
    [IgnoreDataMemberAttribute]
public Names RepositoryName { get; }
    public abstract virtual Names get_RepositoryName();
}
[MapsApiAttribute("cat.tasks.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatTasksRequest {
}
[MapsApiAttribute("cat.templates.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatTemplatesRequest {
    [IgnoreDataMemberAttribute]
public Name Name { get; }
    public abstract virtual Name get_Name();
}
[MapsApiAttribute("cat.thread_pool.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICatThreadPoolRequest {
    [IgnoreDataMemberAttribute]
public Names ThreadPoolPatterns { get; }
    public abstract virtual Names get_ThreadPoolPatterns();
}
[JsonFormatterAttribute("OpenSearch.Client.CharFilterFormatter")]
public interface OpenSearch.Client.ICharFilter {
    [DataMemberAttribute]
public string Type { get; }
    [DataMemberAttribute]
public string Version { get; public set; }
    public abstract virtual string get_Type();
    public abstract virtual string get_Version();
    public abstract virtual void set_Version(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.CharFilters,OpenSearch.Client.ICharFilters,System.String,OpenSearch.Client.ICharFilter>")]
public interface OpenSearch.Client.ICharFilters {
}
public interface OpenSearch.Client.ICharGroupTokenizer {
    [DataMemberAttribute]
public IEnumerable`1<string> TokenizeOnCharacters { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxTokenLength { get; public set; }
    public abstract virtual IEnumerable`1<string> get_TokenizeOnCharacters();
    public abstract virtual void set_TokenizeOnCharacters(IEnumerable`1<string> value);
    public abstract virtual Nullable`1<int> get_MaxTokenLength();
    public abstract virtual void set_MaxTokenLength(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ChildrenAggregation")]
public interface OpenSearch.Client.IChildrenAggregation {
    [DataMemberAttribute]
public RelationName Type { get; public set; }
    public abstract virtual RelationName get_Type();
    public abstract virtual void set_Type(RelationName value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ChiSquareHeuristic")]
public interface OpenSearch.Client.IChiSquareHeuristic {
    [DataMemberAttribute]
public Nullable`1<bool> BackgroundIsSuperSet { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IncludeNegatives { get; public set; }
    public abstract virtual Nullable`1<bool> get_BackgroundIsSuperSet();
    public abstract virtual void set_BackgroundIsSuperSet(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeNegatives();
    public abstract virtual void set_IncludeNegatives(Nullable`1<bool> value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.ICircleGeoShape>")]
public interface OpenSearch.Client.ICircleGeoShape {
    [DataMemberAttribute]
public GeoCoordinate Coordinates { get; public set; }
    [DataMemberAttribute]
public string Radius { get; public set; }
    public abstract virtual GeoCoordinate get_Coordinates();
    public abstract virtual void set_Coordinates(GeoCoordinate value);
    public abstract virtual string get_Radius();
    public abstract virtual void set_Radius(string value);
}
public interface OpenSearch.Client.ICircuitBreakerSettings {
    public string FielddataLimit { get; public set; }
    public Nullable`1<float> FielddataOverhead { get; public set; }
    public string RequestLimit { get; public set; }
    public Nullable`1<float> RequestOverhead { get; public set; }
    public string TotalLimit { get; public set; }
    public abstract virtual string get_FielddataLimit();
    public abstract virtual void set_FielddataLimit(string value);
    public abstract virtual Nullable`1<float> get_FielddataOverhead();
    public abstract virtual void set_FielddataOverhead(Nullable`1<float> value);
    public abstract virtual string get_RequestLimit();
    public abstract virtual void set_RequestLimit(string value);
    public abstract virtual Nullable`1<float> get_RequestOverhead();
    public abstract virtual void set_RequestOverhead(Nullable`1<float> value);
    public abstract virtual string get_TotalLimit();
    public abstract virtual void set_TotalLimit(string value);
}
[MapsApiAttribute("snapshot.cleanup_repository.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICleanupRepositoryRequest {
    [IgnoreDataMemberAttribute]
public Name RepositoryName { get; }
    public abstract virtual Name get_RepositoryName();
}
[MapsApiAttribute("indices.clear_cache.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IClearCacheRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[InterfaceDataContractAttribute]
[MapsApiAttribute("clear_scroll.json")]
public interface OpenSearch.Client.IClearScrollRequest {
    [DataMemberAttribute]
public IEnumerable`1<string> ScrollIds { get; public set; }
    public abstract virtual IEnumerable`1<string> get_ScrollIds();
    public abstract virtual void set_ScrollIds(IEnumerable`1<string> value);
}
[MapsApiAttribute("indices.clone")]
[ReadAsAttribute("OpenSearch.Client.CloneIndexRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICloneIndexRequest {
    [DataMemberAttribute]
public IAliases Aliases { get; public set; }
    [DataMemberAttribute]
public IIndexSettings Settings { get; public set; }
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public IndexName Target { get; }
    public abstract virtual IAliases get_Aliases();
    public abstract virtual void set_Aliases(IAliases value);
    public abstract virtual IIndexSettings get_Settings();
    public abstract virtual void set_Settings(IIndexSettings value);
    public abstract virtual IndexName get_Index();
    public abstract virtual IndexName get_Target();
}
[MapsApiAttribute("snapshot.clone.json")]
[ReadAsAttribute("OpenSearch.Client.CloneSnapshotRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICloneSnapshotRequest {
    [DataMemberAttribute]
public Indices Indices { get; public set; }
    [IgnoreDataMemberAttribute]
public Name RepositoryName { get; }
    [IgnoreDataMemberAttribute]
public Name Snapshot { get; }
    [IgnoreDataMemberAttribute]
public Name TargetSnapshot { get; }
    public abstract virtual Indices get_Indices();
    public abstract virtual void set_Indices(Indices value);
    public abstract virtual Name get_RepositoryName();
    public abstract virtual Name get_Snapshot();
    public abstract virtual Name get_TargetSnapshot();
}
[MapsApiAttribute("indices.close.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICloseIndexRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
public interface OpenSearch.Client.IClrPropertyMapping`1 {
    public bool Ignore { get; public set; }
    public string NewName { get; public set; }
    public Expression`1<Func`2<TDocument, object>> Property { get; public set; }
    public abstract virtual bool get_Ignore();
    public abstract virtual void set_Ignore(bool value);
    public abstract virtual string get_NewName();
    public abstract virtual void set_NewName(string value);
    public abstract virtual Expression`1<Func`2<TDocument, object>> get_Property();
    public abstract virtual void set_Property(Expression`1<Func`2<TDocument, object>> value);
    public abstract virtual IPropertyMapping ToPropertyMapping();
}
public interface OpenSearch.Client.IClrTypeMapping {
    public Type ClrType { get; }
    public string IdPropertyName { get; public set; }
    public string IndexName { get; public set; }
    public string RelationName { get; public set; }
    public bool DisableIdInference { get; public set; }
    public abstract virtual Type get_ClrType();
    public abstract virtual string get_IdPropertyName();
    public abstract virtual void set_IdPropertyName(string value);
    public abstract virtual string get_IndexName();
    public abstract virtual void set_IndexName(string value);
    public abstract virtual string get_RelationName();
    public abstract virtual void set_RelationName(string value);
    public abstract virtual bool get_DisableIdInference();
    public abstract virtual void set_DisableIdInference(bool value);
}
public interface OpenSearch.Client.IClrTypeMapping`1 {
    public Expression`1<Func`2<TDocument, object>> IdProperty { get; public set; }
    public IList`1<IClrPropertyMapping`1<TDocument>> Properties { get; public set; }
    public Expression`1<Func`2<TDocument, object>> RoutingProperty { get; public set; }
    public abstract virtual Expression`1<Func`2<TDocument, object>> get_IdProperty();
    public abstract virtual void set_IdProperty(Expression`1<Func`2<TDocument, object>> value);
    public abstract virtual IList`1<IClrPropertyMapping`1<TDocument>> get_Properties();
    public abstract virtual void set_Properties(IList`1<IClrPropertyMapping`1<TDocument>> value);
    public abstract virtual Expression`1<Func`2<TDocument, object>> get_RoutingProperty();
    public abstract virtual void set_RoutingProperty(Expression`1<Func`2<TDocument, object>> value);
}
[MapsApiAttribute("cluster.allocation_explain.json")]
[ReadAsAttribute("OpenSearch.Client.ClusterAllocationExplainRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IClusterAllocationExplainRequest {
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Primary { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Shard { get; public set; }
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual Nullable`1<bool> get_Primary();
    public abstract virtual void set_Primary(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_Shard();
    public abstract virtual void set_Shard(Nullable`1<int> value);
}
[MapsApiAttribute("cluster.get_settings.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IClusterGetSettingsRequest {
}
[MapsApiAttribute("cluster.health.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IClusterHealthRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
public interface OpenSearch.Client.IClusterModuleSettings {
    public IAllocationAwarenessSettings AllocationAwareness { get; public set; }
    public IAllocationFilteringSettings AllocationFiltering { get; public set; }
    public IDiskBasedShardAllocationSettings DiskBasedShardAllocation { get; public set; }
    public IDictionary`2<string, LogLevel> Logger { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    public IShardAllocationSettings ShardAllocation { get; public set; }
    public IShardBalancingHeuristicsSettings ShardBalancingHeuristics { get; public set; }
    public IShardRebalancingSettings ShardRebalancing { get; public set; }
    public abstract virtual IAllocationAwarenessSettings get_AllocationAwareness();
    public abstract virtual void set_AllocationAwareness(IAllocationAwarenessSettings value);
    public abstract virtual IAllocationFilteringSettings get_AllocationFiltering();
    public abstract virtual void set_AllocationFiltering(IAllocationFilteringSettings value);
    public abstract virtual IDiskBasedShardAllocationSettings get_DiskBasedShardAllocation();
    public abstract virtual void set_DiskBasedShardAllocation(IDiskBasedShardAllocationSettings value);
    public abstract virtual IDictionary`2<string, LogLevel> get_Logger();
    public abstract virtual void set_Logger(IDictionary`2<string, LogLevel> value);
    public abstract virtual Nullable`1<bool> get_ReadOnly();
    public abstract virtual void set_ReadOnly(Nullable`1<bool> value);
    public abstract virtual IShardAllocationSettings get_ShardAllocation();
    public abstract virtual void set_ShardAllocation(IShardAllocationSettings value);
    public abstract virtual IShardBalancingHeuristicsSettings get_ShardBalancingHeuristics();
    public abstract virtual void set_ShardBalancingHeuristics(IShardBalancingHeuristicsSettings value);
    public abstract virtual IShardRebalancingSettings get_ShardRebalancing();
    public abstract virtual void set_ShardRebalancing(IShardRebalancingSettings value);
}
[MapsApiAttribute("cluster.pending_tasks.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IClusterPendingTasksRequest {
}
[MapsApiAttribute("cluster.put_settings.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IClusterPutSettingsRequest {
    [DataMemberAttribute]
public IDictionary`2<string, object> Persistent { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Transient { get; public set; }
    public abstract virtual IDictionary`2<string, object> get_Persistent();
    public abstract virtual void set_Persistent(IDictionary`2<string, object> value);
    public abstract virtual IDictionary`2<string, object> get_Transient();
    public abstract virtual void set_Transient(IDictionary`2<string, object> value);
}
[JsonFormatterAttribute("OpenSearch.Client.ClusterRerouteCommandFormatter")]
public interface OpenSearch.Client.IClusterRerouteCommand {
    [IgnoreDataMemberAttribute]
public string Name { get; }
    public abstract virtual string get_Name();
}
[MapsApiAttribute("cluster.reroute.json")]
[ReadAsAttribute("OpenSearch.Client.ClusterRerouteRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IClusterRerouteRequest {
    [DataMemberAttribute]
public IList`1<IClusterRerouteCommand> Commands { get; public set; }
    public abstract virtual IList`1<IClusterRerouteCommand> get_Commands();
    public abstract virtual void set_Commands(IList`1<IClusterRerouteCommand> value);
}
[MapsApiAttribute("cluster.state.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IClusterStateRequest {
    [IgnoreDataMemberAttribute]
public Metrics Metric { get; }
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Metrics get_Metric();
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("cluster.stats.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IClusterStatsRequest {
    [IgnoreDataMemberAttribute]
public NodeIds NodeId { get; }
    public abstract virtual NodeIds get_NodeId();
}
public interface OpenSearch.Client.ICommonGramsTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SingleOrEnumerableFormatter`1<System.String>")]
public IEnumerable`1<string> CommonWords { get; public set; }
    [DataMemberAttribute]
public string CommonWordsPath { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> IgnoreCase { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> QueryMode { get; public set; }
    public abstract virtual IEnumerable`1<string> get_CommonWords();
    public abstract virtual void set_CommonWords(IEnumerable`1<string> value);
    public abstract virtual string get_CommonWordsPath();
    public abstract virtual void set_CommonWordsPath(string value);
    public abstract virtual Nullable`1<bool> get_IgnoreCase();
    public abstract virtual void set_IgnoreCase(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_QueryMode();
    public abstract virtual void set_QueryMode(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICompletionProperty {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public IList`1<ISuggestContext> Contexts { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxInputLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> PreservePositionIncrements { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> PreserveSeparators { get; public set; }
    [DataMemberAttribute]
public string SearchAnalyzer { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual IList`1<ISuggestContext> get_Contexts();
    public abstract virtual void set_Contexts(IList`1<ISuggestContext> value);
    public abstract virtual Nullable`1<int> get_MaxInputLength();
    public abstract virtual void set_MaxInputLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_PreservePositionIncrements();
    public abstract virtual void set_PreservePositionIncrements(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_PreserveSeparators();
    public abstract virtual void set_PreserveSeparators(Nullable`1<bool> value);
    public abstract virtual string get_SearchAnalyzer();
    public abstract virtual void set_SearchAnalyzer(string value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.CompletionSuggester")]
public interface OpenSearch.Client.ICompletionSuggester {
    [DataMemberAttribute]
public IDictionary`2<string, IList`1<ISuggestContextQuery>> Contexts { get; public set; }
    [DataMemberAttribute]
public ISuggestFuzziness Fuzzy { get; public set; }
    [IgnoreDataMemberAttribute]
public string Prefix { get; public set; }
    [IgnoreDataMemberAttribute]
public string Regex { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> SkipDuplicates { get; public set; }
    public abstract virtual IDictionary`2<string, IList`1<ISuggestContextQuery>> get_Contexts();
    public abstract virtual void set_Contexts(IDictionary`2<string, IList`1<ISuggestContextQuery>> value);
    public abstract virtual ISuggestFuzziness get_Fuzzy();
    public abstract virtual void set_Fuzzy(ISuggestFuzziness value);
    public abstract virtual string get_Prefix();
    public abstract virtual void set_Prefix(string value);
    public abstract virtual string get_Regex();
    public abstract virtual void set_Regex(string value);
    public abstract virtual Nullable`1<bool> get_SkipDuplicates();
    public abstract virtual void set_SkipDuplicates(Nullable`1<bool> value);
}
[ReadAsAttribute("OpenSearch.Client.ComponentTemplate")]
public interface OpenSearch.Client.IComponentTemplate {
    [DataMemberAttribute]
public ITemplate Template { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> Version { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryInterfaceKeysFormatter`2<System.String,System.Object>")]
public IDictionary`2<string, object> Meta { get; public set; }
    public abstract virtual ITemplate get_Template();
    public abstract virtual void set_Template(ITemplate value);
    public abstract virtual Nullable`1<long> get_Version();
    public abstract virtual void set_Version(Nullable`1<long> value);
    public abstract virtual IDictionary`2<string, object> get_Meta();
    public abstract virtual void set_Meta(IDictionary`2<string, object> value);
}
[MapsApiAttribute("cluster.exists_component_template")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IComponentTemplateExistsRequest {
    [IgnoreDataMemberAttribute]
public Name Name { get; }
    public abstract virtual Name get_Name();
}
[ReadAsAttribute("OpenSearch.Client.ComposableIndexTemplate")]
public interface OpenSearch.Client.IComposableIndexTemplate {
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> ComposedOf { get; public set; }
    [DataMemberAttribute]
public IDataStreamTemplate DataStream { get; public set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> IndexPatterns { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> Priority { get; public set; }
    [DataMemberAttribute]
public ITemplate Template { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> Version { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryInterfaceKeysFormatter`2<System.String,System.Object>")]
public IDictionary`2<string, object> Meta { get; public set; }
    public abstract virtual IReadOnlyCollection`1<string> get_ComposedOf();
    public abstract virtual void set_ComposedOf(IReadOnlyCollection`1<string> value);
    public abstract virtual IDataStreamTemplate get_DataStream();
    public abstract virtual void set_DataStream(IDataStreamTemplate value);
    public abstract virtual IReadOnlyCollection`1<string> get_IndexPatterns();
    public abstract virtual void set_IndexPatterns(IReadOnlyCollection`1<string> value);
    public abstract virtual Nullable`1<long> get_Priority();
    public abstract virtual void set_Priority(Nullable`1<long> value);
    public abstract virtual ITemplate get_Template();
    public abstract virtual void set_Template(ITemplate value);
    public abstract virtual Nullable`1<long> get_Version();
    public abstract virtual void set_Version(Nullable`1<long> value);
    public abstract virtual IDictionary`2<string, object> get_Meta();
    public abstract virtual void set_Meta(IDictionary`2<string, object> value);
}
[MapsApiAttribute("indices.exists_index_template")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IComposableIndexTemplateExistsRequest {
    [IgnoreDataMemberAttribute]
public Name Name { get; }
    public abstract virtual Name get_Name();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.CompositeAggregation")]
public interface OpenSearch.Client.ICompositeAggregation {
    [DataMemberAttribute]
public CompositeKey After { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<ICompositeAggregationSource> Sources { get; public set; }
    public abstract virtual CompositeKey get_After();
    public abstract virtual void set_After(CompositeKey value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
    public abstract virtual IEnumerable`1<ICompositeAggregationSource> get_Sources();
    public abstract virtual void set_Sources(IEnumerable`1<ICompositeAggregationSource> value);
}
[JsonFormatterAttribute("OpenSearch.Client.CompositeAggregationSourceFormatter")]
public interface OpenSearch.Client.ICompositeAggregationSource {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> MissingBucket { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public Nullable`1<SortOrder> Order { get; public set; }
    [IgnoreDataMemberAttribute]
public string SourceType { get; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_MissingBucket();
    public abstract virtual void set_MissingBucket(Nullable`1<bool> value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual Nullable`1<SortOrder> get_Order();
    public abstract virtual void set_Order(Nullable`1<SortOrder> value);
    public abstract virtual string get_SourceType();
}
public interface OpenSearch.Client.ICompoundWordTokenFilter {
    [DataMemberAttribute]
public string HyphenationPatternsPath { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxSubwordSize { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MinSubwordSize { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MinWordSize { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> OnlyLongestMatch { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> WordList { get; public set; }
    [DataMemberAttribute]
public string WordListPath { get; public set; }
    public abstract virtual string get_HyphenationPatternsPath();
    public abstract virtual void set_HyphenationPatternsPath(string value);
    public abstract virtual Nullable`1<int> get_MaxSubwordSize();
    public abstract virtual void set_MaxSubwordSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinSubwordSize();
    public abstract virtual void set_MinSubwordSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinWordSize();
    public abstract virtual void set_MinWordSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_OnlyLongestMatch();
    public abstract virtual void set_OnlyLongestMatch(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_WordList();
    public abstract virtual void set_WordList(IEnumerable`1<string> value);
    public abstract virtual string get_WordListPath();
    public abstract virtual void set_WordListPath(string value);
}
public interface OpenSearch.Client.IConditionlessQuery {
    public QueryContainer Fallback { get; public set; }
    public QueryContainer Query { get; public set; }
    public abstract virtual QueryContainer get_Fallback();
    public abstract virtual void set_Fallback(QueryContainer value);
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
}
public interface OpenSearch.Client.IConditionTokenFilter {
    [DataMemberAttribute]
public IScript Script { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Filters { get; public set; }
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual IEnumerable`1<string> get_Filters();
    public abstract virtual void set_Filters(IEnumerable`1<string> value);
}
public interface OpenSearch.Client.IConnectionSettingsValues {
    public Func`2<string, string> DefaultFieldNameInferrer { get; }
    public string DefaultIndex { get; }
    public FluentDictionary`2<Type, string> DefaultIndices { get; }
    public FluentDictionary`2<Type, string> DefaultRelationNames { get; }
    public FluentDictionary`2<Type, string> IdProperties { get; }
    public Inferrer Inferrer { get; }
    public IPropertyMappingProvider PropertyMappingProvider { get; }
    public FluentDictionary`2<MemberInfo, IPropertyMapping> PropertyMappings { get; }
    public FluentDictionary`2<Type, string> RouteProperties { get; }
    public HashSet`1<Type> DisableIdInference { get; }
    public bool DefaultDisableIdInference { get; }
    public IOpenSearchSerializer SourceSerializer { get; }
    public abstract virtual Func`2<string, string> get_DefaultFieldNameInferrer();
    public abstract virtual string get_DefaultIndex();
    public abstract virtual FluentDictionary`2<Type, string> get_DefaultIndices();
    public abstract virtual FluentDictionary`2<Type, string> get_DefaultRelationNames();
    public abstract virtual FluentDictionary`2<Type, string> get_IdProperties();
    public abstract virtual Inferrer get_Inferrer();
    public abstract virtual IPropertyMappingProvider get_PropertyMappingProvider();
    public abstract virtual FluentDictionary`2<MemberInfo, IPropertyMapping> get_PropertyMappings();
    public abstract virtual FluentDictionary`2<Type, string> get_RouteProperties();
    public abstract virtual HashSet`1<Type> get_DisableIdInference();
    public abstract virtual bool get_DefaultDisableIdInference();
    public abstract virtual IOpenSearchSerializer get_SourceSerializer();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ConstantScoreQuery")]
public interface OpenSearch.Client.IConstantScoreQuery {
    [DataMemberAttribute]
public QueryContainer Filter { get; public set; }
    public abstract virtual QueryContainer get_Filter();
    public abstract virtual void set_Filter(QueryContainer value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IConvertProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    [DataMemberAttribute]
public Nullable`1<ConvertProcessorType> Type { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
    public abstract virtual Nullable`1<ConvertProcessorType> get_Type();
    public abstract virtual void set_Type(Nullable`1<ConvertProcessorType> value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICoreProperty {
    [DataMemberAttribute]
public Fields CopyTo { get; public set; }
    [DataMemberAttribute]
public IProperties Fields { get; public set; }
    [DataMemberAttribute]
public string Similarity { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Store { get; public set; }
    public abstract virtual Fields get_CopyTo();
    public abstract virtual void set_CopyTo(Fields value);
    public abstract virtual IProperties get_Fields();
    public abstract virtual void set_Fields(IProperties value);
    public abstract virtual string get_Similarity();
    public abstract virtual void set_Similarity(string value);
    public abstract virtual Nullable`1<bool> get_Store();
    public abstract virtual void set_Store(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[MapsApiAttribute("count.json")]
[ReadAsAttribute("OpenSearch.Client.CountRequest")]
public interface OpenSearch.Client.ICountRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    public abstract virtual Indices get_Index();
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
}
public interface OpenSearch.Client.ICountRequest`1 {
}
[MapsApiAttribute("indices.create.json")]
[ReadAsAttribute("OpenSearch.Client.CreateIndexRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICreateIndexRequest {
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    public abstract virtual IndexName get_Index();
}
[MapsApiAttribute("create_pit")]
[ReadAsAttribute("OpenSearch.Client.CreatePitRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICreatePitRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("snapshot.create_repository.json")]
[JsonFormatterAttribute("OpenSearch.Client.CreateRepositoryFormatter")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICreateRepositoryRequest {
    public ISnapshotRepository Repository { get; public set; }
    [IgnoreDataMemberAttribute]
public Name RepositoryName { get; }
    public abstract virtual ISnapshotRepository get_Repository();
    public abstract virtual void set_Repository(ISnapshotRepository value);
    public abstract virtual Name get_RepositoryName();
}
[MapsApiAttribute("create.json")]
[JsonFormatterAttribute("OpenSearch.Client.CreateRequestFormatter`1")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICreateRequest`1 {
    public TDocument Document { get; public set; }
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual TDocument get_Document();
    public abstract virtual void set_Document(TDocument value);
    public abstract virtual IndexName get_Index();
    public abstract virtual Id get_Id();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICsvProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Fields TargetFields { get; public set; }
    [DataMemberAttribute]
public string Separator { get; public set; }
    [DataMemberAttribute]
public string Quote { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Trim { get; public set; }
    [DataMemberAttribute]
public object EmptyValue { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Fields get_TargetFields();
    public abstract virtual void set_TargetFields(Fields value);
    public abstract virtual string get_Separator();
    public abstract virtual void set_Separator(string value);
    public abstract virtual string get_Quote();
    public abstract virtual void set_Quote(string value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Trim();
    public abstract virtual void set_Trim(Nullable`1<bool> value);
    public abstract virtual object get_EmptyValue();
    public abstract virtual void set_EmptyValue(object value);
}
public class OpenSearch.Client.IcuAnalyzer : AnalyzerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<IcuNormalizationType> <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IcuNormalizationMode> <Mode>k__BackingField;
    public Nullable`1<IcuNormalizationType> Method { get; public set; }
    public Nullable`1<IcuNormalizationMode> Mode { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IcuNormalizationType> get_Method();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Method(Nullable`1<IcuNormalizationType> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IcuNormalizationMode> get_Mode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mode(Nullable`1<IcuNormalizationMode> value);
}
public class OpenSearch.Client.IcuAnalyzerDescriptor : AnalyzerDescriptorBase`2<IcuAnalyzerDescriptor, IIcuAnalyzer> {
    [CompilerGeneratedAttribute]
private Nullable`1<IcuNormalizationType> <OpenSearch.Client.IIcuAnalyzer.Method>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IcuNormalizationMode> <OpenSearch.Client.IIcuAnalyzer.Mode>k__BackingField;
    protected string Type { get; }
    private Nullable`1<IcuNormalizationType> OpenSearch.Client.IIcuAnalyzer.Method { get; private set; }
    private Nullable`1<IcuNormalizationMode> OpenSearch.Client.IIcuAnalyzer.Mode { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IcuNormalizationType> OpenSearch.Client.IIcuAnalyzer.get_Method();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuAnalyzer.set_Method(Nullable`1<IcuNormalizationType> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IcuNormalizationMode> OpenSearch.Client.IIcuAnalyzer.get_Mode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuAnalyzer.set_Mode(Nullable`1<IcuNormalizationMode> value);
    public IcuAnalyzerDescriptor Method(Nullable`1<IcuNormalizationType> method);
    public IcuAnalyzerDescriptor Mode(Nullable`1<IcuNormalizationMode> mode);
}
[StringEnumAttribute]
public enum OpenSearch.Client.IcuCollationAlternate : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IcuCollationAlternate Shifted;
    [EnumMemberAttribute]
public static IcuCollationAlternate NonIgnorable;
}
[StringEnumAttribute]
public enum OpenSearch.Client.IcuCollationCaseFirst : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IcuCollationCaseFirst Lower;
    [EnumMemberAttribute]
public static IcuCollationCaseFirst Upper;
}
[StringEnumAttribute]
public enum OpenSearch.Client.IcuCollationDecomposition : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IcuCollationDecomposition No;
    [EnumMemberAttribute]
public static IcuCollationDecomposition Canonical;
}
[StringEnumAttribute]
public enum OpenSearch.Client.IcuCollationStrength : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IcuCollationStrength Primary;
    [EnumMemberAttribute]
public static IcuCollationStrength Secondary;
    [EnumMemberAttribute]
public static IcuCollationStrength Tertiary;
    [EnumMemberAttribute]
public static IcuCollationStrength Quaternary;
    [EnumMemberAttribute]
public static IcuCollationStrength Indentical;
}
public class OpenSearch.Client.IcuCollationTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<IcuCollationAlternate> <Alternate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IcuCollationCaseFirst> <CaseFirst>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CaseLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Country>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IcuCollationDecomposition> <Decomposition>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HiraganaQuaternaryMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Numeric>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IcuCollationStrength> <Strength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableTop>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Variant>k__BackingField;
    public Nullable`1<IcuCollationAlternate> Alternate { get; public set; }
    public Nullable`1<IcuCollationCaseFirst> CaseFirst { get; public set; }
    public Nullable`1<bool> CaseLevel { get; public set; }
    public string Country { get; public set; }
    public Nullable`1<IcuCollationDecomposition> Decomposition { get; public set; }
    public Nullable`1<bool> HiraganaQuaternaryMode { get; public set; }
    public string Language { get; public set; }
    public Nullable`1<bool> Numeric { get; public set; }
    public Nullable`1<IcuCollationStrength> Strength { get; public set; }
    public string VariableTop { get; public set; }
    public string Variant { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IcuCollationAlternate> get_Alternate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Alternate(Nullable`1<IcuCollationAlternate> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IcuCollationCaseFirst> get_CaseFirst();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CaseFirst(Nullable`1<IcuCollationCaseFirst> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_CaseLevel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CaseLevel(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Country();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Country(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IcuCollationDecomposition> get_Decomposition();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Decomposition(Nullable`1<IcuCollationDecomposition> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_HiraganaQuaternaryMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HiraganaQuaternaryMode(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Language();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Language(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Numeric();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Numeric(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IcuCollationStrength> get_Strength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Strength(Nullable`1<IcuCollationStrength> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_VariableTop();
    [CompilerGeneratedAttribute]
public sealed virtual void set_VariableTop(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Variant();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Variant(string value);
}
public class OpenSearch.Client.IcuCollationTokenFilterDescriptor : TokenFilterDescriptorBase`2<IcuCollationTokenFilterDescriptor, IIcuCollationTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<IcuCollationAlternate> <OpenSearch.Client.IIcuCollationTokenFilter.Alternate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IcuCollationCaseFirst> <OpenSearch.Client.IIcuCollationTokenFilter.CaseFirst>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IIcuCollationTokenFilter.CaseLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIcuCollationTokenFilter.Country>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IcuCollationDecomposition> <OpenSearch.Client.IIcuCollationTokenFilter.Decomposition>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IIcuCollationTokenFilter.HiraganaQuaternaryMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIcuCollationTokenFilter.Language>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IIcuCollationTokenFilter.Numeric>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IcuCollationStrength> <OpenSearch.Client.IIcuCollationTokenFilter.Strength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIcuCollationTokenFilter.VariableTop>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIcuCollationTokenFilter.Variant>k__BackingField;
    protected string Type { get; }
    private Nullable`1<IcuCollationAlternate> OpenSearch.Client.IIcuCollationTokenFilter.Alternate { get; private set; }
    private Nullable`1<IcuCollationCaseFirst> OpenSearch.Client.IIcuCollationTokenFilter.CaseFirst { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IIcuCollationTokenFilter.CaseLevel { get; private set; }
    private string OpenSearch.Client.IIcuCollationTokenFilter.Country { get; private set; }
    private Nullable`1<IcuCollationDecomposition> OpenSearch.Client.IIcuCollationTokenFilter.Decomposition { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IIcuCollationTokenFilter.HiraganaQuaternaryMode { get; private set; }
    private string OpenSearch.Client.IIcuCollationTokenFilter.Language { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IIcuCollationTokenFilter.Numeric { get; private set; }
    private Nullable`1<IcuCollationStrength> OpenSearch.Client.IIcuCollationTokenFilter.Strength { get; private set; }
    private string OpenSearch.Client.IIcuCollationTokenFilter.VariableTop { get; private set; }
    private string OpenSearch.Client.IIcuCollationTokenFilter.Variant { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IcuCollationAlternate> OpenSearch.Client.IIcuCollationTokenFilter.get_Alternate();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuCollationTokenFilter.set_Alternate(Nullable`1<IcuCollationAlternate> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IcuCollationCaseFirst> OpenSearch.Client.IIcuCollationTokenFilter.get_CaseFirst();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuCollationTokenFilter.set_CaseFirst(Nullable`1<IcuCollationCaseFirst> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IIcuCollationTokenFilter.get_CaseLevel();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuCollationTokenFilter.set_CaseLevel(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIcuCollationTokenFilter.get_Country();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuCollationTokenFilter.set_Country(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IcuCollationDecomposition> OpenSearch.Client.IIcuCollationTokenFilter.get_Decomposition();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuCollationTokenFilter.set_Decomposition(Nullable`1<IcuCollationDecomposition> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IIcuCollationTokenFilter.get_HiraganaQuaternaryMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuCollationTokenFilter.set_HiraganaQuaternaryMode(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIcuCollationTokenFilter.get_Language();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuCollationTokenFilter.set_Language(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IIcuCollationTokenFilter.get_Numeric();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuCollationTokenFilter.set_Numeric(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IcuCollationStrength> OpenSearch.Client.IIcuCollationTokenFilter.get_Strength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuCollationTokenFilter.set_Strength(Nullable`1<IcuCollationStrength> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIcuCollationTokenFilter.get_VariableTop();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuCollationTokenFilter.set_VariableTop(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIcuCollationTokenFilter.get_Variant();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuCollationTokenFilter.set_Variant(string value);
    public IcuCollationTokenFilterDescriptor Language(string language);
    public IcuCollationTokenFilterDescriptor Country(string country);
    public IcuCollationTokenFilterDescriptor Variant(string variant);
    public IcuCollationTokenFilterDescriptor Strength(Nullable`1<IcuCollationStrength> strength);
    public IcuCollationTokenFilterDescriptor Decomposition(Nullable`1<IcuCollationDecomposition> decomposition);
    public IcuCollationTokenFilterDescriptor Alternate(Nullable`1<IcuCollationAlternate> alternate);
    public IcuCollationTokenFilterDescriptor CaseFirst(Nullable`1<IcuCollationCaseFirst> caseFirst);
    public IcuCollationTokenFilterDescriptor CaseLevel(Nullable`1<bool> caseLevel);
    public IcuCollationTokenFilterDescriptor Numeric(Nullable`1<bool> numeric);
    public IcuCollationTokenFilterDescriptor HiraganaQuaternaryMode(Nullable`1<bool> mode);
    public IcuCollationTokenFilterDescriptor VariableTop(string variableTop);
}
public class OpenSearch.Client.IcuFoldingTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private string <UnicodeSetFilter>k__BackingField;
    public string UnicodeSetFilter { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_UnicodeSetFilter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UnicodeSetFilter(string value);
}
public class OpenSearch.Client.IcuFoldingTokenFilterDescriptor : TokenFilterDescriptorBase`2<IcuFoldingTokenFilterDescriptor, IIcuFoldingTokenFilter> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIcuFoldingTokenFilter.UnicodeSetFilter>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.IIcuFoldingTokenFilter.UnicodeSetFilter { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIcuFoldingTokenFilter.get_UnicodeSetFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuFoldingTokenFilter.set_UnicodeSetFilter(string value);
    public IcuFoldingTokenFilterDescriptor UnicodeSetFilter(string filter);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.CumulativeSumAggregation")]
public interface OpenSearch.Client.ICumulativeSumAggregation {
}
public class OpenSearch.Client.IcuNormalizationCharFilter : CharFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<IcuNormalizationMode> <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IcuNormalizationType> <Name>k__BackingField;
    public Nullable`1<IcuNormalizationMode> Mode { get; public set; }
    public Nullable`1<IcuNormalizationType> Name { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IcuNormalizationMode> get_Mode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mode(Nullable`1<IcuNormalizationMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IcuNormalizationType> get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(Nullable`1<IcuNormalizationType> value);
}
public class OpenSearch.Client.IcuNormalizationCharFilterDescriptor : CharFilterDescriptorBase`2<IcuNormalizationCharFilterDescriptor, IIcuNormalizationCharFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<IcuNormalizationMode> <OpenSearch.Client.IIcuNormalizationCharFilter.Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IcuNormalizationType> <OpenSearch.Client.IIcuNormalizationCharFilter.Name>k__BackingField;
    protected string Type { get; }
    private Nullable`1<IcuNormalizationMode> OpenSearch.Client.IIcuNormalizationCharFilter.Mode { get; private set; }
    private Nullable`1<IcuNormalizationType> OpenSearch.Client.IIcuNormalizationCharFilter.Name { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IcuNormalizationMode> OpenSearch.Client.IIcuNormalizationCharFilter.get_Mode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuNormalizationCharFilter.set_Mode(Nullable`1<IcuNormalizationMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IcuNormalizationType> OpenSearch.Client.IIcuNormalizationCharFilter.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuNormalizationCharFilter.set_Name(Nullable`1<IcuNormalizationType> value);
    public IcuNormalizationCharFilterDescriptor Name(Nullable`1<IcuNormalizationType> name);
    public IcuNormalizationCharFilterDescriptor Mode(Nullable`1<IcuNormalizationMode> mode);
}
[StringEnumAttribute]
public enum OpenSearch.Client.IcuNormalizationMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IcuNormalizationMode Decompose;
    [EnumMemberAttribute]
public static IcuNormalizationMode Compose;
}
public class OpenSearch.Client.IcuNormalizationTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<IcuNormalizationType> <Name>k__BackingField;
    public Nullable`1<IcuNormalizationType> Name { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IcuNormalizationType> get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(Nullable`1<IcuNormalizationType> value);
}
public class OpenSearch.Client.IcuNormalizationTokenFilterDescriptor : TokenFilterDescriptorBase`2<IcuNormalizationTokenFilterDescriptor, IIcuNormalizationTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<IcuNormalizationType> <OpenSearch.Client.IIcuNormalizationTokenFilter.Name>k__BackingField;
    protected string Type { get; }
    private Nullable`1<IcuNormalizationType> OpenSearch.Client.IIcuNormalizationTokenFilter.Name { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IcuNormalizationType> OpenSearch.Client.IIcuNormalizationTokenFilter.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuNormalizationTokenFilter.set_Name(Nullable`1<IcuNormalizationType> value);
    public IcuNormalizationTokenFilterDescriptor Name(Nullable`1<IcuNormalizationType> name);
}
[StringEnumAttribute]
public enum OpenSearch.Client.IcuNormalizationType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IcuNormalizationType Canonical;
    [EnumMemberAttribute]
public static IcuNormalizationType Compatibility;
    [EnumMemberAttribute]
public static IcuNormalizationType CompatibilityCaseFold;
}
public interface OpenSearch.Client.ICustomAnalyzer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SingleOrEnumerableFormatter`1<System.String>")]
public IEnumerable`1<string> CharFilter { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SingleOrEnumerableFormatter`1<System.String>")]
public IEnumerable`1<string> Filter { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> PositionIncrementGap { get; public set; }
    [DataMemberAttribute]
public string Tokenizer { get; public set; }
    public abstract virtual IEnumerable`1<string> get_CharFilter();
    public abstract virtual void set_CharFilter(IEnumerable`1<string> value);
    public abstract virtual IEnumerable`1<string> get_Filter();
    public abstract virtual void set_Filter(IEnumerable`1<string> value);
    public abstract virtual Nullable`1<int> get_PositionIncrementGap();
    public abstract virtual void set_PositionIncrementGap(Nullable`1<int> value);
    public abstract virtual string get_Tokenizer();
    public abstract virtual void set_Tokenizer(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ICustomNormalizer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SingleOrEnumerableFormatter`1<System.String>")]
public IEnumerable`1<string> CharFilter { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SingleOrEnumerableFormatter`1<System.String>")]
public IEnumerable`1<string> Filter { get; public set; }
    public abstract virtual IEnumerable`1<string> get_CharFilter();
    public abstract virtual void set_CharFilter(IEnumerable`1<string> value);
    public abstract virtual IEnumerable`1<string> get_Filter();
    public abstract virtual void set_Filter(IEnumerable`1<string> value);
}
[ReadAsAttribute("OpenSearch.Client.CustomSimilarity")]
public interface OpenSearch.Client.ICustomSimilarity {
}
public class OpenSearch.Client.IcuTokenizer : TokenizerBase {
    [CompilerGeneratedAttribute]
private string <RuleFiles>k__BackingField;
    public string RuleFiles { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_RuleFiles();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RuleFiles(string value);
}
public class OpenSearch.Client.IcuTokenizerDescriptor : TokenizerDescriptorBase`2<IcuTokenizerDescriptor, IIcuTokenizer> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIcuTokenizer.RuleFiles>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.IIcuTokenizer.RuleFiles { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIcuTokenizer.get_RuleFiles();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuTokenizer.set_RuleFiles(string value);
    public IcuTokenizerDescriptor RuleFiles(string ruleFiles);
}
[StringEnumAttribute]
public enum OpenSearch.Client.IcuTransformDirection : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IcuTransformDirection Forward;
    [EnumMemberAttribute]
public static IcuTransformDirection Reverse;
}
public class OpenSearch.Client.IcuTransformTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<IcuTransformDirection> <Direction>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public Nullable`1<IcuTransformDirection> Direction { get; public set; }
    public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IcuTransformDirection> get_Direction();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Direction(Nullable`1<IcuTransformDirection> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(string value);
}
public class OpenSearch.Client.IcuTransformTokenFilterDescriptor : TokenFilterDescriptorBase`2<IcuTransformTokenFilterDescriptor, IIcuTransformTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<IcuTransformDirection> <OpenSearch.Client.IIcuTransformTokenFilter.Direction>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIcuTransformTokenFilter.Id>k__BackingField;
    protected string Type { get; }
    private Nullable`1<IcuTransformDirection> OpenSearch.Client.IIcuTransformTokenFilter.Direction { get; private set; }
    private string OpenSearch.Client.IIcuTransformTokenFilter.Id { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IcuTransformDirection> OpenSearch.Client.IIcuTransformTokenFilter.get_Direction();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuTransformTokenFilter.set_Direction(Nullable`1<IcuTransformDirection> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIcuTransformTokenFilter.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIcuTransformTokenFilter.set_Id(string value);
    public IcuTransformTokenFilterDescriptor Direction(Nullable`1<IcuTransformDirection> direction);
    public IcuTransformTokenFilterDescriptor Id(string id);
}
[JsonFormatterAttribute("OpenSearch.Client.IdFormatter")]
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.Id : object {
    [CompilerGeneratedAttribute]
private object <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LongValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringValue>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private static int <TypeHashCode>k__BackingField;
    internal object Document { get; }
    internal Nullable`1<long> LongValue { get; }
    internal string StringOrLongValue { get; }
    internal string StringValue { get; }
    internal int Tag { get; }
    private string DebugDisplay { get; }
    private static int TypeHashCode { get; }
    public Id(string id);
    public Id(long id);
    public Id(object document);
    private static Id();
    [CompilerGeneratedAttribute]
internal object get_Document();
    [CompilerGeneratedAttribute]
internal Nullable`1<long> get_LongValue();
    internal string get_StringOrLongValue();
    [CompilerGeneratedAttribute]
internal string get_StringValue();
    [CompilerGeneratedAttribute]
internal int get_Tag();
    private string get_DebugDisplay();
    [CompilerGeneratedAttribute]
private static int get_TypeHashCode();
    public sealed virtual bool Equals(Id other);
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public static Id op_Implicit(string id);
    public static Id op_Implicit(long id);
    public static Id op_Implicit(Guid id);
    public static Id From(T document);
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Id left, Id right);
    public static bool op_Inequality(Id left, Id right);
}
[ReadAsAttribute("OpenSearch.Client.DataStreamTemplate")]
public interface OpenSearch.Client.IDataStreamTemplate {
    [DataMemberAttribute]
public ITimestampField TimestampField { get; public set; }
    public abstract virtual ITimestampField get_TimestampField();
    public abstract virtual void set_TimestampField(ITimestampField value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.DateHistogramAggregation")]
public interface OpenSearch.Client.IDateHistogramAggregation {
    [DataMemberAttribute]
public ExtendedBounds`1<DateMath> ExtendedBounds { get; public set; }
    [DataMemberAttribute]
public HardBounds`1<DateMath> HardBounds { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public string Format { get; public set; }
    [DataMemberAttribute]
public Union`2<Nullable`1<DateInterval>, DateMathTime> CalendarInterval { get; public set; }
    [DataMemberAttribute]
public Time FixedInterval { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinimumDocumentCount { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> Missing { get; public set; }
    [DataMemberAttribute]
public string Offset { get; public set; }
    [DataMemberAttribute]
public HistogramOrder Order { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    [DataMemberAttribute]
public string TimeZone { get; public set; }
    public abstract virtual ExtendedBounds`1<DateMath> get_ExtendedBounds();
    public abstract virtual void set_ExtendedBounds(ExtendedBounds`1<DateMath> value);
    public abstract virtual HardBounds`1<DateMath> get_HardBounds();
    public abstract virtual void set_HardBounds(HardBounds`1<DateMath> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
    public abstract virtual Union`2<Nullable`1<DateInterval>, DateMathTime> get_CalendarInterval();
    public abstract virtual void set_CalendarInterval(Union`2<Nullable`1<DateInterval>, DateMathTime> value);
    public abstract virtual Time get_FixedInterval();
    public abstract virtual void set_FixedInterval(Time value);
    public abstract virtual Nullable`1<int> get_MinimumDocumentCount();
    public abstract virtual void set_MinimumDocumentCount(Nullable`1<int> value);
    public abstract virtual Nullable`1<DateTime> get_Missing();
    public abstract virtual void set_Missing(Nullable`1<DateTime> value);
    public abstract virtual string get_Offset();
    public abstract virtual void set_Offset(string value);
    public abstract virtual HistogramOrder get_Order();
    public abstract virtual void set_Order(HistogramOrder value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual string get_TimeZone();
    public abstract virtual void set_TimeZone(string value);
}
public interface OpenSearch.Client.IDateHistogramCompositeAggregationSource {
    [DataMemberAttribute]
public string Format { get; public set; }
    [DataMemberAttribute]
public Union`2<Nullable`1<DateInterval>, DateMathTime> CalendarInterval { get; public set; }
    [DataMemberAttribute]
public Time FixedInterval { get; public set; }
    [DataMemberAttribute]
public string TimeZone { get; public set; }
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
    public abstract virtual Union`2<Nullable`1<DateInterval>, DateMathTime> get_CalendarInterval();
    public abstract virtual void set_CalendarInterval(Union`2<Nullable`1<DateInterval>, DateMathTime> value);
    public abstract virtual Time get_FixedInterval();
    public abstract virtual void set_FixedInterval(Time value);
    public abstract virtual string get_TimeZone();
    public abstract virtual void set_TimeZone(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDateIndexNameProcessor {
    [DataMemberAttribute]
public IEnumerable`1<string> DateFormats { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateRounding> DateRounding { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public string IndexNameFormat { get; public set; }
    [DataMemberAttribute]
public string IndexNamePrefix { get; public set; }
    [DataMemberAttribute]
public string Locale { get; public set; }
    [DataMemberAttribute]
public string TimeZone { get; public set; }
    public abstract virtual IEnumerable`1<string> get_DateFormats();
    public abstract virtual void set_DateFormats(IEnumerable`1<string> value);
    public abstract virtual Nullable`1<DateRounding> get_DateRounding();
    public abstract virtual void set_DateRounding(Nullable`1<DateRounding> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual string get_IndexNameFormat();
    public abstract virtual void set_IndexNameFormat(string value);
    public abstract virtual string get_IndexNamePrefix();
    public abstract virtual void set_IndexNamePrefix(string value);
    public abstract virtual string get_Locale();
    public abstract virtual void set_Locale(string value);
    public abstract virtual string get_TimeZone();
    public abstract virtual void set_TimeZone(string value);
}
public interface OpenSearch.Client.IDateMath {
    public Union`2<DateTime, string> Anchor { get; }
    public IList`1<Tuple`2<DateMathOperation, DateMathTime>> Ranges { get; }
    public Nullable`1<DateMathTimeUnit> Round { get; }
    public abstract virtual Union`2<DateTime, string> get_Anchor();
    public abstract virtual IList`1<Tuple`2<DateMathOperation, DateMathTime>> get_Ranges();
    public abstract virtual Nullable`1<DateMathTimeUnit> get_Round();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDateNanosProperty {
    [DataMemberAttribute]
public Nullable`1<double> Boost { get; public set; }
    [DataMemberAttribute]
public string Format { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMalformed { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> NullValue { get; public set; }
    public abstract virtual Nullable`1<double> get_Boost();
    public abstract virtual void set_Boost(Nullable`1<double> value);
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
    public abstract virtual Nullable`1<bool> get_IgnoreMalformed();
    public abstract virtual void set_IgnoreMalformed(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Index();
    public abstract virtual void set_Index(Nullable`1<bool> value);
    public abstract virtual Nullable`1<DateTime> get_NullValue();
    public abstract virtual void set_NullValue(Nullable`1<DateTime> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDateProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Formats { get; public set; }
    [DataMemberAttribute]
public string Locale { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    [DataMemberAttribute]
public string TimeZone { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual IEnumerable`1<string> get_Formats();
    public abstract virtual void set_Formats(IEnumerable`1<string> value);
    public abstract virtual string get_Locale();
    public abstract virtual void set_Locale(string value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
    public abstract virtual string get_TimeZone();
    public abstract virtual void set_TimeZone(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDateProperty {
    [DataMemberAttribute]
public Nullable`1<double> Boost { get; public set; }
    [DataMemberAttribute]
public INumericFielddata Fielddata { get; public set; }
    [DataMemberAttribute]
public string Format { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMalformed { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> NullValue { get; public set; }
    public abstract virtual Nullable`1<double> get_Boost();
    public abstract virtual void set_Boost(Nullable`1<double> value);
    public abstract virtual INumericFielddata get_Fielddata();
    public abstract virtual void set_Fielddata(INumericFielddata value);
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
    public abstract virtual Nullable`1<bool> get_IgnoreMalformed();
    public abstract virtual void set_IgnoreMalformed(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Index();
    public abstract virtual void set_Index(Nullable`1<bool> value);
    public abstract virtual Nullable`1<DateTime> get_NullValue();
    public abstract virtual void set_NullValue(Nullable`1<DateTime> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.DateRangeAggregation")]
public interface OpenSearch.Client.IDateRangeAggregation {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public string Format { get; public set; }
    [DataMemberAttribute]
public object Missing { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<IDateRangeExpression> Ranges { get; public set; }
    [DataMemberAttribute]
public string TimeZone { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
    public abstract virtual object get_Missing();
    public abstract virtual void set_Missing(object value);
    public abstract virtual IEnumerable`1<IDateRangeExpression> get_Ranges();
    public abstract virtual void set_Ranges(IEnumerable`1<IDateRangeExpression> value);
    public abstract virtual string get_TimeZone();
    public abstract virtual void set_TimeZone(string value);
}
[ReadAsAttribute("OpenSearch.Client.DateRangeExpression")]
public interface OpenSearch.Client.IDateRangeExpression {
    [DataMemberAttribute]
public DateMath From { get; public set; }
    [DataMemberAttribute]
public string Key { get; public set; }
    [DataMemberAttribute]
public DateMath To { get; public set; }
    public abstract virtual DateMath get_From();
    public abstract virtual void set_From(DateMath value);
    public abstract virtual string get_Key();
    public abstract virtual void set_Key(string value);
    public abstract virtual DateMath get_To();
    public abstract virtual void set_To(DateMath value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDateRangeProperty {
    [DataMemberAttribute]
public string Format { get; public set; }
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.DateRangeQuery,OpenSearch.Client.IDateRangeQuery>")]
public interface OpenSearch.Client.IDateRangeQuery {
    [DataMemberAttribute]
public string Format { get; public set; }
    [DataMemberAttribute]
public DateMath GreaterThan { get; public set; }
    [DataMemberAttribute]
public DateMath GreaterThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public DateMath LessThan { get; public set; }
    [DataMemberAttribute]
public DateMath LessThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public Nullable`1<RangeRelation> Relation { get; public set; }
    [DataMemberAttribute]
public string TimeZone { get; public set; }
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
    public abstract virtual DateMath get_GreaterThan();
    public abstract virtual void set_GreaterThan(DateMath value);
    public abstract virtual DateMath get_GreaterThanOrEqualTo();
    public abstract virtual void set_GreaterThanOrEqualTo(DateMath value);
    public abstract virtual DateMath get_LessThan();
    public abstract virtual void set_LessThan(DateMath value);
    public abstract virtual DateMath get_LessThanOrEqualTo();
    public abstract virtual void set_LessThanOrEqualTo(DateMath value);
    public abstract virtual Nullable`1<RangeRelation> get_Relation();
    public abstract virtual void set_Relation(Nullable`1<RangeRelation> value);
    public abstract virtual string get_TimeZone();
    public abstract virtual void set_TimeZone(string value);
}
public interface OpenSearch.Client.IDecayFunction {
    [DataMemberAttribute]
public Nullable`1<double> Decay { get; public set; }
    public string DecayType { get; }
    public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<MultiValueMode> MultiValueMode { get; public set; }
    public abstract virtual Nullable`1<double> get_Decay();
    public abstract virtual void set_Decay(Nullable`1<double> value);
    public abstract virtual string get_DecayType();
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<MultiValueMode> get_MultiValueMode();
    public abstract virtual void set_MultiValueMode(Nullable`1<MultiValueMode> value);
}
public interface OpenSearch.Client.IDecayFunction`2 {
    [DataMemberAttribute]
public TScale Offset { get; public set; }
    [DataMemberAttribute]
public TOrigin Origin { get; public set; }
    [DataMemberAttribute]
public TScale Scale { get; public set; }
    public abstract virtual TScale get_Offset();
    public abstract virtual void set_Offset(TScale value);
    public abstract virtual TOrigin get_Origin();
    public abstract virtual void set_Origin(TOrigin value);
    public abstract virtual TScale get_Scale();
    public abstract virtual void set_Scale(TScale value);
}
[MapsApiAttribute("indices.delete_alias.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteAliasRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    [IgnoreDataMemberAttribute]
public Names Name { get; }
    public abstract virtual Indices get_Index();
    public abstract virtual Names get_Name();
}
[MapsApiAttribute("delete_all_pits")]
[ReadAsAttribute("OpenSearch.Client.DeleteAllPitsRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteAllPitsRequest {
}
[MapsApiAttribute("delete_by_query.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteByQueryRequest {
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    [DataMemberAttribute]
public ISlicedScroll Slice { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> MaximumDocuments { get; public set; }
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
    public abstract virtual ISlicedScroll get_Slice();
    public abstract virtual void set_Slice(ISlicedScroll value);
    public abstract virtual Nullable`1<long> get_MaximumDocuments();
    public abstract virtual void set_MaximumDocuments(Nullable`1<long> value);
    public abstract virtual Indices get_Index();
}
public interface OpenSearch.Client.IDeleteByQueryRequest`1 {
}
[MapsApiAttribute("delete_by_query_rethrottle")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteByQueryRethrottleRequest {
    [IgnoreDataMemberAttribute]
public TaskId TaskId { get; }
    public abstract virtual TaskId get_TaskId();
}
[MapsApiAttribute("cluster.delete_component_template")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteComponentTemplateRequest {
    [IgnoreDataMemberAttribute]
public Name Name { get; }
    public abstract virtual Name get_Name();
}
[MapsApiAttribute("indices.delete_index_template")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteComposableIndexTemplateRequest {
    [IgnoreDataMemberAttribute]
public Name Name { get; }
    public abstract virtual Name get_Name();
}
[MapsApiAttribute("dangling_indices.delete_dangling_index.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteDanglingIndexRequest {
    [IgnoreDataMemberAttribute]
public IndexUuid IndexUuid { get; }
    public abstract virtual IndexUuid get_IndexUuid();
}
[MapsApiAttribute("indices.delete.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteIndexRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("indices.delete_template.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteIndexTemplateRequest {
    [IgnoreDataMemberAttribute]
public Name Name { get; }
    public abstract virtual Name get_Name();
}
[MapsApiAttribute("ingest.delete_pipeline.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeletePipelineRequest {
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual Id get_Id();
}
[MapsApiAttribute("delete_pit")]
[ReadAsAttribute("OpenSearch.Client.DeletePitRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeletePitRequest {
    [DataMemberAttribute]
public IEnumerable`1<string> PitId { get; public set; }
    public abstract virtual IEnumerable`1<string> get_PitId();
    public abstract virtual void set_PitId(IEnumerable`1<string> value);
}
[MapsApiAttribute("snapshot.delete_repository.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteRepositoryRequest {
    [IgnoreDataMemberAttribute]
public Names RepositoryName { get; }
    public abstract virtual Names get_RepositoryName();
}
[MapsApiAttribute("delete.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteRequest {
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual IndexName get_Index();
    public abstract virtual Id get_Id();
}
public interface OpenSearch.Client.IDeleteRequest`1 {
}
[MapsApiAttribute("delete_script.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteScriptRequest {
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual Id get_Id();
}
[MapsApiAttribute("snapshot.delete.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteSnapshotRequest {
    [IgnoreDataMemberAttribute]
public Name RepositoryName { get; }
    [IgnoreDataMemberAttribute]
public Name Snapshot { get; }
    public abstract virtual Name get_RepositoryName();
    public abstract virtual Name get_Snapshot();
}
[MapsApiAttribute("cluster.delete_voting_config_exclusions")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDeleteVotingConfigExclusionsRequest {
}
public interface OpenSearch.Client.IDelimitedPayloadTokenFilter {
    [DataMemberAttribute]
public Nullable`1<char> Delimiter { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DelimitedPayloadEncoding> Encoding { get; public set; }
    public abstract virtual Nullable`1<char> get_Delimiter();
    public abstract virtual void set_Delimiter(Nullable`1<char> value);
    public abstract virtual Nullable`1<DelimitedPayloadEncoding> get_Encoding();
    public abstract virtual void set_Encoding(Nullable`1<DelimitedPayloadEncoding> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.DerivativeAggregation")]
public interface OpenSearch.Client.IDerivativeAggregation {
}
public interface OpenSearch.Client.IDescriptor {
}
[ExtensionAttribute]
internal static class OpenSearch.Client.IdExtensions : object {
    [ExtensionAttribute]
internal static bool IsConditionless(Id id);
}
public interface OpenSearch.Client.IDFISimilarity {
    [DataMemberAttribute]
public Nullable`1<DFIIndependenceMeasure> IndependenceMeasure { get; public set; }
    public abstract virtual Nullable`1<DFIIndependenceMeasure> get_IndependenceMeasure();
    public abstract virtual void set_IndependenceMeasure(Nullable`1<DFIIndependenceMeasure> value);
}
internal class OpenSearch.Client.IdFormatter : object {
    public sealed virtual Id Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Id value, IJsonFormatterResolver formatterResolver);
}
public interface OpenSearch.Client.IDFRSimilarity {
    [DataMemberAttribute]
public Nullable`1<DFRAfterEffect> AfterEffect { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DFRBasicModel> BasicModel { get; public set; }
    [DataMemberAttribute]
public Nullable`1<Normalization> Normalization { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> NormalizationH1C { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> NormalizationH2C { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> NormalizationH3C { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> NormalizationZZ { get; public set; }
    public abstract virtual Nullable`1<DFRAfterEffect> get_AfterEffect();
    public abstract virtual void set_AfterEffect(Nullable`1<DFRAfterEffect> value);
    public abstract virtual Nullable`1<DFRBasicModel> get_BasicModel();
    public abstract virtual void set_BasicModel(Nullable`1<DFRBasicModel> value);
    public abstract virtual Nullable`1<Normalization> get_Normalization();
    public abstract virtual void set_Normalization(Nullable`1<Normalization> value);
    public abstract virtual Nullable`1<double> get_NormalizationH1C();
    public abstract virtual void set_NormalizationH1C(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_NormalizationH2C();
    public abstract virtual void set_NormalizationH2C(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_NormalizationH3C();
    public abstract virtual void set_NormalizationH3C(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_NormalizationZZ();
    public abstract virtual void set_NormalizationZZ(Nullable`1<double> value);
}
public interface OpenSearch.Client.IDictionaryDecompounderTokenFilter {
}
public interface OpenSearch.Client.IDictionaryResponse`2 {
    public IReadOnlyDictionary`2<TKey, TValue> BackingDictionary { get; public set; }
    public abstract virtual IReadOnlyDictionary`2<TKey, TValue> get_BackingDictionary();
    public abstract virtual void set_BackingDictionary(IReadOnlyDictionary`2<TKey, TValue> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.DirectGenerator")]
public interface OpenSearch.Client.IDirectGenerator {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxEdits { get; public set; }
    [DataMemberAttribute]
public Nullable`1<float> MaxInspections { get; public set; }
    [DataMemberAttribute]
public Nullable`1<float> MaxTermFrequency { get; public set; }
    [DataMemberAttribute]
public Nullable`1<float> MinDocFrequency { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinWordLength { get; public set; }
    [DataMemberAttribute]
public string PostFilter { get; public set; }
    [DataMemberAttribute]
public string PreFilter { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> PrefixLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    [DataMemberAttribute]
public Nullable`1<SuggestMode> SuggestMode { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<int> get_MaxEdits();
    public abstract virtual void set_MaxEdits(Nullable`1<int> value);
    public abstract virtual Nullable`1<float> get_MaxInspections();
    public abstract virtual void set_MaxInspections(Nullable`1<float> value);
    public abstract virtual Nullable`1<float> get_MaxTermFrequency();
    public abstract virtual void set_MaxTermFrequency(Nullable`1<float> value);
    public abstract virtual Nullable`1<float> get_MinDocFrequency();
    public abstract virtual void set_MinDocFrequency(Nullable`1<float> value);
    public abstract virtual Nullable`1<int> get_MinWordLength();
    public abstract virtual void set_MinWordLength(Nullable`1<int> value);
    public abstract virtual string get_PostFilter();
    public abstract virtual void set_PostFilter(string value);
    public abstract virtual string get_PreFilter();
    public abstract virtual void set_PreFilter(string value);
    public abstract virtual Nullable`1<int> get_PrefixLength();
    public abstract virtual void set_PrefixLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
    public abstract virtual Nullable`1<SuggestMode> get_SuggestMode();
    public abstract virtual void set_SuggestMode(Nullable`1<SuggestMode> value);
}
public interface OpenSearch.Client.IDiskBasedShardAllocationSettings {
    public string HighWatermark { get; public set; }
    public Nullable`1<bool> IncludeRelocations { get; public set; }
    public string LowWatermark { get; public set; }
    public Nullable`1<bool> ThresholdEnabled { get; public set; }
    public Time UpdateInterval { get; public set; }
    public abstract virtual string get_HighWatermark();
    public abstract virtual void set_HighWatermark(string value);
    public abstract virtual Nullable`1<bool> get_IncludeRelocations();
    public abstract virtual void set_IncludeRelocations(Nullable`1<bool> value);
    public abstract virtual string get_LowWatermark();
    public abstract virtual void set_LowWatermark(string value);
    public abstract virtual Nullable`1<bool> get_ThresholdEnabled();
    public abstract virtual void set_ThresholdEnabled(Nullable`1<bool> value);
    public abstract virtual Time get_UpdateInterval();
    public abstract virtual void set_UpdateInterval(Time value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.DisMaxQuery")]
public interface OpenSearch.Client.IDisMaxQuery {
    [DataMemberAttribute]
public IEnumerable`1<QueryContainer> Queries { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> TieBreaker { get; public set; }
    public abstract virtual IEnumerable`1<QueryContainer> get_Queries();
    public abstract virtual void set_Queries(IEnumerable`1<QueryContainer> value);
    public abstract virtual Nullable`1<double> get_TieBreaker();
    public abstract virtual void set_TieBreaker(Nullable`1<double> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDissectProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public string Pattern { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public string AppendSeparator { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual string get_Pattern();
    public abstract virtual void set_Pattern(string value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual string get_AppendSeparator();
    public abstract virtual void set_AppendSeparator(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.DistanceFeatureQueryFormatter")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDistanceFeatureQuery {
    [DataMemberAttribute]
public Union`2<GeoCoordinate, DateMath> Origin { get; public set; }
    [DataMemberAttribute]
public Union`2<Distance, Time> Pivot { get; public set; }
    public abstract virtual Union`2<GeoCoordinate, DateMath> get_Origin();
    public abstract virtual void set_Origin(Union`2<GeoCoordinate, DateMath> value);
    public abstract virtual Union`2<Distance, Time> get_Pivot();
    public abstract virtual void set_Pivot(Union`2<Distance, Time> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.DiversifiedSamplerAggregation")]
public interface OpenSearch.Client.IDiversifiedSamplerAggregation {
    [DataMemberAttribute]
public Nullable`1<DiversifiedSamplerAggregationExecutionHint> ExecutionHint { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxDocsPerValue { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> ShardSize { get; public set; }
    public abstract virtual Nullable`1<DiversifiedSamplerAggregationExecutionHint> get_ExecutionHint();
    public abstract virtual void set_ExecutionHint(Nullable`1<DiversifiedSamplerAggregationExecutionHint> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<int> get_MaxDocsPerValue();
    public abstract virtual void set_MaxDocsPerValue(Nullable`1<int> value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual Nullable`1<int> get_ShardSize();
    public abstract virtual void set_ShardSize(Nullable`1<int> value);
}
[MapsApiAttribute("exists.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDocumentExistsRequest {
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual IndexName get_Index();
    public abstract virtual Id get_Id();
}
public interface OpenSearch.Client.IDocumentExistsRequest`1 {
}
public interface OpenSearch.Client.IDocumentPath {
    public Id Id { get; public set; }
    public IndexName Index { get; public set; }
    public abstract virtual Id get_Id();
    public abstract virtual void set_Id(Id value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
}
public interface OpenSearch.Client.IDocumentRequest {
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDocValuesProperty {
    [DataMemberAttribute]
public Nullable`1<bool> DocValues { get; public set; }
    public abstract virtual Nullable`1<bool> get_DocValues();
    public abstract virtual void set_DocValues(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDotExpanderProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public string Path { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual string get_Path();
    public abstract virtual void set_Path(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDoubleRangeProperty {
}
public class OpenSearch.Client.IdResolver : object {
    private static ConcurrentDictionary`2<Type, Func`2<object, string>> IdDelegates;
    private static MethodInfo MakeDelegateMethodInfo;
    private IConnectionSettingsValues _connectionSettings;
    private ConcurrentDictionary`2<Type, Func`2<object, string>> _localIdDelegates;
    public IdResolver(IConnectionSettingsValues connectionSettings);
    private static IdResolver();
    private PropertyInfo GetPropertyCaseInsensitive(Type type, string fieldName);
    internal Func`2<T, string> CreateIdSelector();
    internal static Func`2<object, object> MakeDelegate(MethodInfo get);
    public string Resolve(T object);
    public string Resolve(Type type, object object);
    private PropertyInfo GetInferredId(Type type);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IDropProcessor {
}
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.Ids : object {
    private List`1<string> _ids;
    private string DebugDisplay { get; }
    public Ids(IEnumerable`1<string> value);
    public Ids(string value);
    private string get_DebugDisplay();
    public virtual string ToString();
    public sealed virtual bool Equals(Ids other);
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public static Ids op_Implicit(string value);
    public static Ids op_Implicit(String[] value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Ids left, Ids right);
    public static bool op_Inequality(Ids left, Ids right);
}
public class OpenSearch.Client.IdsQuery : QueryBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<Id> <Values>k__BackingField;
    public IEnumerable`1<Id> Values { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<Id> get_Values();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Values(IEnumerable`1<Id> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IIdsQuery q);
}
public class OpenSearch.Client.IdsQueryDescriptor : QueryDescriptorBase`2<IdsQueryDescriptor, IIdsQuery> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<Id> <OpenSearch.Client.IIdsQuery.Values>k__BackingField;
    protected bool Conditionless { get; }
    private IEnumerable`1<Id> OpenSearch.Client.IIdsQuery.Values { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<Id> OpenSearch.Client.IIdsQuery.get_Values();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIdsQuery.set_Values(IEnumerable`1<Id> value);
    public IdsQueryDescriptor Values(Id[] values);
    public IdsQueryDescriptor Values(IEnumerable`1<Id> values);
    public IdsQueryDescriptor Values(String[] values);
    public IdsQueryDescriptor Values(IEnumerable`1<string> values);
    public IdsQueryDescriptor Values(Int64[] values);
    public IdsQueryDescriptor Values(IEnumerable`1<long> values);
    public IdsQueryDescriptor Values(Guid[] values);
    public IdsQueryDescriptor Values(IEnumerable`1<Guid> values);
}
internal class OpenSearch.Client.IdStringFormatter : object {
    public sealed virtual string Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, string value, IJsonFormatterResolver formatterResolver);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.DynamicIndexSettingsFormatter")]
public interface OpenSearch.Client.IDynamicIndexSettings {
    public IAnalysis Analysis { get; public set; }
    public AutoExpandReplicas AutoExpandReplicas { get; public set; }
    public Nullable`1<bool> BlocksMetadata { get; public set; }
    public Nullable`1<bool> BlocksRead { get; public set; }
    public Nullable`1<bool> BlocksReadOnly { get; public set; }
    public Nullable`1<bool> BlocksWrite { get; public set; }
    public Nullable`1<bool> BlocksReadOnlyAllowDelete { get; public set; }
    public IMergeSettings Merge { get; public set; }
    public Nullable`1<int> NumberOfReplicas { get; public set; }
    public Nullable`1<int> Priority { get; public set; }
    public Union`2<int, RecoveryInitialShards> RecoveryInitialShards { get; public set; }
    public Time RefreshInterval { get; public set; }
    public Nullable`1<bool> RequestsCacheEnabled { get; public set; }
    public Nullable`1<int> RoutingAllocationTotalShardsPerNode { get; public set; }
    public ISimilarities Similarity { get; public set; }
    public ISlowLog SlowLog { get; public set; }
    public ITranslogSettings Translog { get; public set; }
    public Time UnassignedNodeLeftDelayedTimeout { get; public set; }
    public string DefaultPipeline { get; public set; }
    public string FinalPipeline { get; public set; }
    public abstract virtual IAnalysis get_Analysis();
    public abstract virtual void set_Analysis(IAnalysis value);
    public abstract virtual AutoExpandReplicas get_AutoExpandReplicas();
    public abstract virtual void set_AutoExpandReplicas(AutoExpandReplicas value);
    public abstract virtual Nullable`1<bool> get_BlocksMetadata();
    public abstract virtual void set_BlocksMetadata(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_BlocksRead();
    public abstract virtual void set_BlocksRead(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_BlocksReadOnly();
    public abstract virtual void set_BlocksReadOnly(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_BlocksWrite();
    public abstract virtual void set_BlocksWrite(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_BlocksReadOnlyAllowDelete();
    public abstract virtual void set_BlocksReadOnlyAllowDelete(Nullable`1<bool> value);
    public abstract virtual IMergeSettings get_Merge();
    public abstract virtual void set_Merge(IMergeSettings value);
    public abstract virtual Nullable`1<int> get_NumberOfReplicas();
    public abstract virtual void set_NumberOfReplicas(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Priority();
    public abstract virtual void set_Priority(Nullable`1<int> value);
    public abstract virtual Union`2<int, RecoveryInitialShards> get_RecoveryInitialShards();
    public abstract virtual void set_RecoveryInitialShards(Union`2<int, RecoveryInitialShards> value);
    public abstract virtual Time get_RefreshInterval();
    public abstract virtual void set_RefreshInterval(Time value);
    public abstract virtual Nullable`1<bool> get_RequestsCacheEnabled();
    public abstract virtual void set_RequestsCacheEnabled(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_RoutingAllocationTotalShardsPerNode();
    public abstract virtual void set_RoutingAllocationTotalShardsPerNode(Nullable`1<int> value);
    public abstract virtual ISimilarities get_Similarity();
    public abstract virtual void set_Similarity(ISimilarities value);
    public abstract virtual ISlowLog get_SlowLog();
    public abstract virtual void set_SlowLog(ISlowLog value);
    public abstract virtual ITranslogSettings get_Translog();
    public abstract virtual void set_Translog(ITranslogSettings value);
    public abstract virtual Time get_UnassignedNodeLeftDelayedTimeout();
    public abstract virtual void set_UnassignedNodeLeftDelayedTimeout(Time value);
    public abstract virtual string get_DefaultPipeline();
    public abstract virtual void set_DefaultPipeline(string value);
    public abstract virtual string get_FinalPipeline();
    public abstract virtual void set_FinalPipeline(string value);
}
public interface OpenSearch.Client.IDynamicResponse {
    public DynamicDictionary BackingDictionary { get; public set; }
    public abstract virtual DynamicDictionary get_BackingDictionary();
    public abstract virtual void set_BackingDictionary(DynamicDictionary value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.DynamicTemplate")]
public interface OpenSearch.Client.IDynamicTemplate {
    [DataMemberAttribute]
public IProperty Mapping { get; public set; }
    [DataMemberAttribute]
public string Match { get; public set; }
    [DataMemberAttribute]
public string MatchMappingType { get; public set; }
    [DataMemberAttribute]
public Nullable`1<MatchType> MatchPattern { get; public set; }
    [DataMemberAttribute]
public string PathMatch { get; public set; }
    [DataMemberAttribute]
public string PathUnmatch { get; public set; }
    [DataMemberAttribute]
public string Unmatch { get; public set; }
    public abstract virtual IProperty get_Mapping();
    public abstract virtual void set_Mapping(IProperty value);
    public abstract virtual string get_Match();
    public abstract virtual void set_Match(string value);
    public abstract virtual string get_MatchMappingType();
    public abstract virtual void set_MatchMappingType(string value);
    public abstract virtual Nullable`1<MatchType> get_MatchPattern();
    public abstract virtual void set_MatchPattern(Nullable`1<MatchType> value);
    public abstract virtual string get_PathMatch();
    public abstract virtual void set_PathMatch(string value);
    public abstract virtual string get_PathUnmatch();
    public abstract virtual void set_PathUnmatch(string value);
    public abstract virtual string get_Unmatch();
    public abstract virtual void set_Unmatch(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.DynamicTemplatesInterfaceFormatter")]
public interface OpenSearch.Client.IDynamicTemplateContainer {
}
public interface OpenSearch.Client.IEdgeNGramTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxGram { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MinGram { get; public set; }
    [DataMemberAttribute]
public Nullable`1<EdgeNGramSide> Side { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> PreserveOriginal { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxGram();
    public abstract virtual void set_MaxGram(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinGram();
    public abstract virtual void set_MinGram(Nullable`1<int> value);
    public abstract virtual Nullable`1<EdgeNGramSide> get_Side();
    public abstract virtual void set_Side(Nullable`1<EdgeNGramSide> value);
    public abstract virtual Nullable`1<bool> get_PreserveOriginal();
    public abstract virtual void set_PreserveOriginal(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IEdgeNGramTokenizer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxGram { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MinGram { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<TokenChar> TokenChars { get; public set; }
    [DataMemberAttribute]
public string CustomTokenChars { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxGram();
    public abstract virtual void set_MaxGram(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinGram();
    public abstract virtual void set_MinGram(Nullable`1<int> value);
    public abstract virtual IEnumerable`1<TokenChar> get_TokenChars();
    public abstract virtual void set_TokenChars(IEnumerable`1<TokenChar> value);
    public abstract virtual string get_CustomTokenChars();
    public abstract virtual void set_CustomTokenChars(string value);
}
public interface OpenSearch.Client.IElisionTokenFilter {
    [DataMemberAttribute]
public IEnumerable`1<string> Articles { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> ArticlesCase { get; public set; }
    public abstract virtual IEnumerable`1<string> get_Articles();
    public abstract virtual void set_Articles(IEnumerable`1<string> value);
    public abstract virtual Nullable`1<bool> get_ArticlesCase();
    public abstract virtual void set_ArticlesCase(Nullable`1<bool> value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.IEnvelopeGeoShape>")]
public interface OpenSearch.Client.IEnvelopeGeoShape {
    [DataMemberAttribute]
public IEnumerable`1<GeoCoordinate> Coordinates { get; public set; }
    public abstract virtual IEnumerable`1<GeoCoordinate> get_Coordinates();
    public abstract virtual void set_Coordinates(IEnumerable`1<GeoCoordinate> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IEwmaModel {
    [DataMemberAttribute]
public Nullable`1<float> Alpha { get; public set; }
    public abstract virtual Nullable`1<float> get_Alpha();
    public abstract virtual void set_Alpha(Nullable`1<float> value);
}
[MapsApiAttribute("scripts_painless_execute.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IExecutePainlessScriptRequest {
    [DataMemberAttribute]
public string Context { get; public set; }
    [DataMemberAttribute]
public IPainlessContextSetup ContextSetup { get; public set; }
    [DataMemberAttribute]
public IInlineScript Script { get; public set; }
    public abstract virtual string get_Context();
    public abstract virtual void set_Context(string value);
    public abstract virtual IPainlessContextSetup get_ContextSetup();
    public abstract virtual void set_ContextSetup(IPainlessContextSetup value);
    public abstract virtual IInlineScript get_Script();
    public abstract virtual void set_Script(IInlineScript value);
}
public interface OpenSearch.Client.IExecutePainlessScriptResponse`1 {
    public TResult Result { get; }
    public abstract virtual TResult get_Result();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ExistsQuery")]
public interface OpenSearch.Client.IExistsQuery {
    [DataMemberAttribute]
public Field Field { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
}
[InterfaceDataContractAttribute]
[MapsApiAttribute("explain.json")]
public interface OpenSearch.Client.IExplainRequest {
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    [DataMemberAttribute]
public Fields StoredFields { get; public set; }
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    public abstract virtual IndexName get_Index();
    public abstract virtual Id get_Id();
    public abstract virtual Fields get_StoredFields();
    public abstract virtual void set_StoredFields(Fields value);
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
}
public interface OpenSearch.Client.IExplainRequest`1 {
}
public interface OpenSearch.Client.IExplainResponse`1 {
    public IInlineGet`1<TDocument> Get { get; }
    public abstract virtual IInlineGet`1<TDocument> get_Get();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ExtendedStatsAggregation")]
public interface OpenSearch.Client.IExtendedStatsAggregation {
    [DataMemberAttribute]
public Nullable`1<double> Sigma { get; public set; }
    public abstract virtual Nullable`1<double> get_Sigma();
    public abstract virtual void set_Sigma(Nullable`1<double> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ExtendedStatsBucketAggregation")]
public interface OpenSearch.Client.IExtendedStatsBucketAggregation {
    [DataMemberAttribute]
public Nullable`1<double> Sigma { get; public set; }
    public abstract virtual Nullable`1<double> get_Sigma();
    public abstract virtual void set_Sigma(Nullable`1<double> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IFailProcessor {
    [DataMemberAttribute]
public string Message { get; public set; }
    public abstract virtual string get_Message();
    public abstract virtual void set_Message(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IFieldAliasProperty {
    [DataMemberAttribute]
public Field Path { get; public set; }
    public abstract virtual Field get_Path();
    public abstract virtual void set_Path(Field value);
}
[InterfaceDataContractAttribute]
[MapsApiAttribute("field_caps.json")]
public interface OpenSearch.Client.IFieldCapabilitiesRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    [DataMemberAttribute]
public QueryContainer IndexFilter { get; public set; }
    public abstract virtual Indices get_Index();
    public abstract virtual QueryContainer get_IndexFilter();
    public abstract virtual void set_IndexFilter(QueryContainer value);
}
[ReadAsAttribute("OpenSearch.Client.FieldCollapse")]
public interface OpenSearch.Client.IFieldCollapse {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public IInnerHits InnerHits { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxConcurrentGroupSearches { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual IInnerHits get_InnerHits();
    public abstract virtual void set_InnerHits(IInnerHits value);
    public abstract virtual Nullable`1<int> get_MaxConcurrentGroupSearches();
    public abstract virtual void set_MaxConcurrentGroupSearches(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IFielddata {
    [DataMemberAttribute]
public IFielddataFilter Filter { get; public set; }
    [DataMemberAttribute]
public Nullable`1<FielddataLoading> Loading { get; public set; }
    public abstract virtual IFielddataFilter get_Filter();
    public abstract virtual void set_Filter(IFielddataFilter value);
    public abstract virtual Nullable`1<FielddataLoading> get_Loading();
    public abstract virtual void set_Loading(Nullable`1<FielddataLoading> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.FielddataFilter")]
public interface OpenSearch.Client.IFielddataFilter {
    [DataMemberAttribute]
public IFielddataFrequencyFilter Frequency { get; public set; }
    [DataMemberAttribute]
public IFielddataRegexFilter Regex { get; public set; }
    public abstract virtual IFielddataFrequencyFilter get_Frequency();
    public abstract virtual void set_Frequency(IFielddataFrequencyFilter value);
    public abstract virtual IFielddataRegexFilter get_Regex();
    public abstract virtual void set_Regex(IFielddataRegexFilter value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.FielddataFrequencyFilter")]
public interface OpenSearch.Client.IFielddataFrequencyFilter {
    [DataMemberAttribute]
public Nullable`1<double> Max { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Min { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinSegmentSize { get; public set; }
    public abstract virtual Nullable`1<double> get_Max();
    public abstract virtual void set_Max(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_Min();
    public abstract virtual void set_Min(Nullable`1<double> value);
    public abstract virtual Nullable`1<int> get_MinSegmentSize();
    public abstract virtual void set_MinSegmentSize(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.FielddataRegexFilter")]
public interface OpenSearch.Client.IFielddataRegexFilter {
    [DataMemberAttribute]
public string Pattern { get; public set; }
    public abstract virtual string get_Pattern();
    public abstract virtual void set_Pattern(string value);
}
[ReadAsAttribute("OpenSearch.Client.FieldLookup")]
public interface OpenSearch.Client.IFieldLookup {
    [DataMemberAttribute]
public Id Id { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public Field Path { get; public set; }
    [DataMemberAttribute]
public Routing Routing { get; public set; }
    public abstract virtual Id get_Id();
    public abstract virtual void set_Id(Id value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual Field get_Path();
    public abstract virtual void set_Path(Field value);
    public abstract virtual Routing get_Routing();
    public abstract virtual void set_Routing(Routing value);
}
public interface OpenSearch.Client.IFieldMapping {
}
public interface OpenSearch.Client.IFieldNameQuery {
    [IgnoreDataMemberAttribute]
public Field Field { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
}
[ReadAsAttribute("OpenSearch.Client.FieldNamesField")]
public interface OpenSearch.Client.IFieldNamesField {
    [DataMemberAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public abstract virtual Nullable`1<bool> get_Enabled();
    public abstract virtual void set_Enabled(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IFieldSort {
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreUnmappedFields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<FieldType> UnmappedType { get; public set; }
    public abstract virtual Nullable`1<bool> get_IgnoreUnmappedFields();
    public abstract virtual void set_IgnoreUnmappedFields(Nullable`1<bool> value);
    public abstract virtual Nullable`1<FieldType> get_UnmappedType();
    public abstract virtual void set_UnmappedType(Nullable`1<FieldType> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IFieldValueFactorFunction {
    [DataMemberAttribute]
public Nullable`1<double> Factor { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Missing { get; public set; }
    [DataMemberAttribute]
public Nullable`1<FieldValueFactorModifier> Modifier { get; public set; }
    public abstract virtual Nullable`1<double> get_Factor();
    public abstract virtual void set_Factor(Nullable`1<double> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<double> get_Missing();
    public abstract virtual void set_Missing(Nullable`1<double> value);
    public abstract virtual Nullable`1<FieldValueFactorModifier> get_Modifier();
    public abstract virtual void set_Modifier(Nullable`1<FieldValueFactorModifier> value);
}
public interface OpenSearch.Client.IFileSystemRepository {
}
public interface OpenSearch.Client.IFileSystemRepositorySettings {
    [DataMemberAttribute]
public string ChunkSize { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Compress { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> ConcurrentStreams { get; public set; }
    [DataMemberAttribute]
public string Location { get; public set; }
    [DataMemberAttribute]
public string RestoreBytesPerSecondMaximum { get; public set; }
    [DataMemberAttribute]
public string SnapshotBytesPerSecondMaximum { get; public set; }
    public abstract virtual string get_ChunkSize();
    public abstract virtual void set_ChunkSize(string value);
    public abstract virtual Nullable`1<bool> get_Compress();
    public abstract virtual void set_Compress(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_ConcurrentStreams();
    public abstract virtual void set_ConcurrentStreams(Nullable`1<int> value);
    public abstract virtual string get_Location();
    public abstract virtual void set_Location(string value);
    public abstract virtual string get_RestoreBytesPerSecondMaximum();
    public abstract virtual void set_RestoreBytesPerSecondMaximum(string value);
    public abstract virtual string get_SnapshotBytesPerSecondMaximum();
    public abstract virtual void set_SnapshotBytesPerSecondMaximum(string value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FilterAggregationFormatter")]
public interface OpenSearch.Client.IFilterAggregation {
    [DataMemberAttribute]
public QueryContainer Filter { get; public set; }
    public abstract virtual QueryContainer get_Filter();
    public abstract virtual void set_Filter(QueryContainer value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.FiltersAggregation")]
public interface OpenSearch.Client.IFiltersAggregation {
    [DataMemberAttribute]
public Union`2<INamedFiltersContainer, IEnumerable`1<QueryContainer>> Filters { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> OtherBucket { get; public set; }
    [DataMemberAttribute]
public string OtherBucketKey { get; public set; }
    public abstract virtual Union`2<INamedFiltersContainer, IEnumerable`1<QueryContainer>> get_Filters();
    public abstract virtual void set_Filters(Union`2<INamedFiltersContainer, IEnumerable`1<QueryContainer>> value);
    public abstract virtual Nullable`1<bool> get_OtherBucket();
    public abstract virtual void set_OtherBucket(Nullable`1<bool> value);
    public abstract virtual string get_OtherBucketKey();
    public abstract virtual void set_OtherBucketKey(string value);
}
public interface OpenSearch.Client.IFingerprintAnalyzer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxOutputSize { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> PreserveOriginal { get; public set; }
    [DataMemberAttribute]
public string Separator { get; public set; }
    [DataMemberAttribute]
public StopWords StopWords { get; public set; }
    [DataMemberAttribute]
public string StopWordsPath { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxOutputSize();
    public abstract virtual void set_MaxOutputSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_PreserveOriginal();
    public abstract virtual void set_PreserveOriginal(Nullable`1<bool> value);
    public abstract virtual string get_Separator();
    public abstract virtual void set_Separator(string value);
    public abstract virtual StopWords get_StopWords();
    public abstract virtual void set_StopWords(StopWords value);
    public abstract virtual string get_StopWordsPath();
    public abstract virtual void set_StopWordsPath(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IFingerprintProcessor {
    [DataMemberAttribute]
public Fields Fields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public string Method { get; public set; }
    [DataMemberAttribute]
public string Salt { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    public abstract virtual Fields get_Fields();
    public abstract virtual void set_Fields(Fields value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string value);
    public abstract virtual string get_Salt();
    public abstract virtual void set_Salt(string value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
}
public interface OpenSearch.Client.IFingerprintTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxOutputSize { get; public set; }
    [DataMemberAttribute]
public string Separator { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxOutputSize();
    public abstract virtual void set_MaxOutputSize(Nullable`1<int> value);
    public abstract virtual string get_Separator();
    public abstract virtual void set_Separator(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IFloatRangeProperty {
}
[MapsApiAttribute("indices.flush.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IFlushRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("indices.forcemerge.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IForceMergeRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IForeachProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public IProcessor Processor { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual IProcessor get_Processor();
    public abstract virtual void set_Processor(IProcessor value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IFormattableMetricAggregation {
    [DataMemberAttribute]
public string Format { get; public set; }
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.FunctionScoreQuery")]
public interface OpenSearch.Client.IFunctionScoreQuery {
    [DataMemberAttribute]
public Nullable`1<FunctionBoostMode> BoostMode { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<IScoreFunction> Functions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> MaxBoost { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> MinScore { get; public set; }
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    [DataMemberAttribute]
public Nullable`1<FunctionScoreMode> ScoreMode { get; public set; }
    public abstract virtual Nullable`1<FunctionBoostMode> get_BoostMode();
    public abstract virtual void set_BoostMode(Nullable`1<FunctionBoostMode> value);
    public abstract virtual IEnumerable`1<IScoreFunction> get_Functions();
    public abstract virtual void set_Functions(IEnumerable`1<IScoreFunction> value);
    public abstract virtual Nullable`1<double> get_MaxBoost();
    public abstract virtual void set_MaxBoost(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_MinScore();
    public abstract virtual void set_MinScore(Nullable`1<double> value);
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
    public abstract virtual Nullable`1<FunctionScoreMode> get_ScoreMode();
    public abstract virtual void set_ScoreMode(Nullable`1<FunctionScoreMode> value);
}
[JsonFormatterAttribute("OpenSearch.Client.FuzzinessInterfaceFormatter")]
public interface OpenSearch.Client.IFuzziness {
    public bool Auto { get; }
    public Nullable`1<int> Low { get; }
    public Nullable`1<int> High { get; }
    public Nullable`1<int> EditDistance { get; }
    public Nullable`1<double> Ratio { get; }
    public abstract virtual bool get_Auto();
    public abstract virtual Nullable`1<int> get_Low();
    public abstract virtual Nullable`1<int> get_High();
    public abstract virtual Nullable`1<int> get_EditDistance();
    public abstract virtual Nullable`1<double> get_Ratio();
}
public interface OpenSearch.Client.IFuzzyDateQuery {
}
public interface OpenSearch.Client.IFuzzyNumericQuery {
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FuzzyQueryFormatter")]
public interface OpenSearch.Client.IFuzzyQuery {
    [DataMemberAttribute]
public Nullable`1<int> MaxExpansions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> PrefixLength { get; public set; }
    [DataMemberAttribute]
public MultiTermQueryRewrite Rewrite { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Transpositions { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxExpansions();
    public abstract virtual void set_MaxExpansions(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_PrefixLength();
    public abstract virtual void set_PrefixLength(Nullable`1<int> value);
    public abstract virtual MultiTermQueryRewrite get_Rewrite();
    public abstract virtual void set_Rewrite(MultiTermQueryRewrite value);
    public abstract virtual Nullable`1<bool> get_Transpositions();
    public abstract virtual void set_Transpositions(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IFuzzyQuery`2 {
    [DataMemberAttribute]
public TFuzziness Fuzziness { get; public set; }
    [DataMemberAttribute]
public TValue Value { get; public set; }
    public abstract virtual TFuzziness get_Fuzziness();
    public abstract virtual void set_Fuzziness(TFuzziness value);
    public abstract virtual TValue get_Value();
    public abstract virtual void set_Value(TValue value);
}
public interface OpenSearch.Client.IFuzzyStringQuery {
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGenericProperty {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Boost { get; public set; }
    [DataMemberAttribute]
public IStringFielddata Fielddata { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> IgnoreAbove { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<IndexOptions> IndexOptions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Norms { get; public set; }
    [DataMemberAttribute]
public string NullValue { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> PositionIncrementGap { get; public set; }
    [DataMemberAttribute]
public string SearchAnalyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<TermVectorOption> TermVector { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<double> get_Boost();
    public abstract virtual void set_Boost(Nullable`1<double> value);
    public abstract virtual IStringFielddata get_Fielddata();
    public abstract virtual void set_Fielddata(IStringFielddata value);
    public abstract virtual Nullable`1<int> get_IgnoreAbove();
    public abstract virtual void set_IgnoreAbove(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_Index();
    public abstract virtual void set_Index(Nullable`1<bool> value);
    public abstract virtual Nullable`1<IndexOptions> get_IndexOptions();
    public abstract virtual void set_IndexOptions(Nullable`1<IndexOptions> value);
    public abstract virtual Nullable`1<bool> get_Norms();
    public abstract virtual void set_Norms(Nullable`1<bool> value);
    public abstract virtual string get_NullValue();
    public abstract virtual void set_NullValue(string value);
    public abstract virtual Nullable`1<int> get_PositionIncrementGap();
    public abstract virtual void set_PositionIncrementGap(Nullable`1<int> value);
    public abstract virtual string get_SearchAnalyzer();
    public abstract virtual void set_SearchAnalyzer(string value);
    public abstract virtual Nullable`1<TermVectorOption> get_TermVector();
    public abstract virtual void set_TermVector(Nullable`1<TermVectorOption> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.GeoBoundingBoxQueryFormatter")]
public interface OpenSearch.Client.IGeoBoundingBoxQuery {
    public IBoundingBox BoundingBox { get; public set; }
    public Nullable`1<GeoExecution> Type { get; public set; }
    public Nullable`1<GeoValidationMethod> ValidationMethod { get; public set; }
    public abstract virtual IBoundingBox get_BoundingBox();
    public abstract virtual void set_BoundingBox(IBoundingBox value);
    public abstract virtual Nullable`1<GeoExecution> get_Type();
    public abstract virtual void set_Type(Nullable`1<GeoExecution> value);
    public abstract virtual Nullable`1<GeoValidationMethod> get_ValidationMethod();
    public abstract virtual void set_ValidationMethod(Nullable`1<GeoValidationMethod> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.GeoBoundsAggregation")]
public interface OpenSearch.Client.IGeoBoundsAggregation {
    [DataMemberAttribute]
public Nullable`1<bool> WrapLongitude { get; public set; }
    public abstract virtual Nullable`1<bool> get_WrapLongitude();
    public abstract virtual void set_WrapLongitude(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.GeoCentroidAggregation")]
public interface OpenSearch.Client.IGeoCentroidAggregation {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.GeoDistanceAggregation")]
public interface OpenSearch.Client.IGeoDistanceAggregation {
    [DataMemberAttribute]
public Nullable`1<GeoDistanceType> DistanceType { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public GeoLocation Origin { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<IAggregationRange> Ranges { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DistanceUnit> Unit { get; public set; }
    public abstract virtual Nullable`1<GeoDistanceType> get_DistanceType();
    public abstract virtual void set_DistanceType(Nullable`1<GeoDistanceType> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual GeoLocation get_Origin();
    public abstract virtual void set_Origin(GeoLocation value);
    public abstract virtual IEnumerable`1<IAggregationRange> get_Ranges();
    public abstract virtual void set_Ranges(IEnumerable`1<IAggregationRange> value);
    public abstract virtual Nullable`1<DistanceUnit> get_Unit();
    public abstract virtual void set_Unit(Nullable`1<DistanceUnit> value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoDistanceQueryFormatter")]
public interface OpenSearch.Client.IGeoDistanceQuery {
    public Distance Distance { get; public set; }
    public Nullable`1<GeoDistanceType> DistanceType { get; public set; }
    public GeoLocation Location { get; public set; }
    public Nullable`1<GeoValidationMethod> ValidationMethod { get; public set; }
    public abstract virtual Distance get_Distance();
    public abstract virtual void set_Distance(Distance value);
    public abstract virtual Nullable`1<GeoDistanceType> get_DistanceType();
    public abstract virtual void set_DistanceType(Nullable`1<GeoDistanceType> value);
    public abstract virtual GeoLocation get_Location();
    public abstract virtual void set_Location(GeoLocation value);
    public abstract virtual Nullable`1<GeoValidationMethod> get_ValidationMethod();
    public abstract virtual void set_ValidationMethod(Nullable`1<GeoValidationMethod> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGeoDistanceSort {
    [DataMemberAttribute]
public Nullable`1<GeoDistanceType> DistanceType { get; public set; }
    public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DistanceUnit> Unit { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    public IEnumerable`1<GeoLocation> Points { get; public set; }
    public abstract virtual Nullable`1<GeoDistanceType> get_DistanceType();
    public abstract virtual void set_DistanceType(Nullable`1<GeoDistanceType> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<DistanceUnit> get_Unit();
    public abstract virtual void set_Unit(Nullable`1<DistanceUnit> value);
    public abstract virtual Nullable`1<bool> get_IgnoreUnmapped();
    public abstract virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<GeoLocation> get_Points();
    public abstract virtual void set_Points(IEnumerable`1<GeoLocation> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.GeoHashGridAggregation")]
public interface OpenSearch.Client.IGeoHashGridAggregation {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<GeoHashPrecision> Precision { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> ShardSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    [DataMemberAttribute]
public IBoundingBox Bounds { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<GeoHashPrecision> get_Precision();
    public abstract virtual void set_Precision(Nullable`1<GeoHashPrecision> value);
    public abstract virtual Nullable`1<int> get_ShardSize();
    public abstract virtual void set_ShardSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
    public abstract virtual IBoundingBox get_Bounds();
    public abstract virtual void set_Bounds(IBoundingBox value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGeoIpProcessor {
    [DataMemberAttribute]
public string DatabaseFile { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Properties { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> FirstOnly { get; public set; }
    public abstract virtual string get_DatabaseFile();
    public abstract virtual void set_DatabaseFile(string value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_Properties();
    public abstract virtual void set_Properties(IEnumerable`1<string> value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
    public abstract virtual Nullable`1<bool> get_FirstOnly();
    public abstract virtual void set_FirstOnly(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.GeoLineAggregation")]
public interface OpenSearch.Client.IGeoLineAggregation {
    [DataMemberAttribute]
public GeoLinePoint Point { get; public set; }
    [DataMemberAttribute]
public GeoLineSort Sort { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IncludeSort { get; public set; }
    [DataMemberAttribute]
public string SortOrder { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    public abstract virtual GeoLinePoint get_Point();
    public abstract virtual void set_Point(GeoLinePoint value);
    public abstract virtual GeoLineSort get_Sort();
    public abstract virtual void set_Sort(GeoLineSort value);
    public abstract virtual Nullable`1<bool> get_IncludeSort();
    public abstract virtual void set_IncludeSort(Nullable`1<bool> value);
    public abstract virtual string get_SortOrder();
    public abstract virtual void set_SortOrder(string value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.IGeometryCollection>")]
public interface OpenSearch.Client.IGeometryCollection {
    [DataMemberAttribute]
public IEnumerable`1<IGeoShape> Geometries { get; public set; }
    public abstract virtual IEnumerable`1<IGeoShape> get_Geometries();
    public abstract virtual void set_Geometries(IEnumerable`1<IGeoShape> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGeoPointFielddata {
    [DataMemberAttribute]
public Nullable`1<GeoPointFielddataFormat> Format { get; public set; }
    [DataMemberAttribute]
public Distance Precision { get; public set; }
    public abstract virtual Nullable`1<GeoPointFielddataFormat> get_Format();
    public abstract virtual void set_Format(Nullable`1<GeoPointFielddataFormat> value);
    public abstract virtual Distance get_Precision();
    public abstract virtual void set_Precision(Distance value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGeoPointProperty {
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMalformed { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreZValue { get; public set; }
    [DataMemberAttribute]
public GeoLocation NullValue { get; public set; }
    public abstract virtual Nullable`1<bool> get_IgnoreMalformed();
    public abstract virtual void set_IgnoreMalformed(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IgnoreZValue();
    public abstract virtual void set_IgnoreZValue(Nullable`1<bool> value);
    public abstract virtual GeoLocation get_NullValue();
    public abstract virtual void set_NullValue(GeoLocation value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.GeoPolygonQueryFormatter")]
public interface OpenSearch.Client.IGeoPolygonQuery {
    public IEnumerable`1<GeoLocation> Points { get; public set; }
    public Nullable`1<GeoValidationMethod> ValidationMethod { get; public set; }
    public abstract virtual IEnumerable`1<GeoLocation> get_Points();
    public abstract virtual void set_Points(IEnumerable`1<GeoLocation> value);
    public abstract virtual Nullable`1<GeoValidationMethod> get_ValidationMethod();
    public abstract virtual void set_ValidationMethod(Nullable`1<GeoValidationMethod> value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter")]
public interface OpenSearch.Client.IGeoShape {
    [DataMemberAttribute]
public string Type { get; }
    public abstract virtual string get_Type();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGeoShapeProperty {
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMalformed { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreZValue { get; public set; }
    [DataMemberAttribute]
public Nullable`1<GeoOrientation> Orientation { get; public set; }
    [DataMemberAttribute]
public Nullable`1<GeoStrategy> Strategy { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Coerce { get; public set; }
    public abstract virtual Nullable`1<bool> get_IgnoreMalformed();
    public abstract virtual void set_IgnoreMalformed(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IgnoreZValue();
    public abstract virtual void set_IgnoreZValue(Nullable`1<bool> value);
    public abstract virtual Nullable`1<GeoOrientation> get_Orientation();
    public abstract virtual void set_Orientation(Nullable`1<GeoOrientation> value);
    public abstract virtual Nullable`1<GeoStrategy> get_Strategy();
    public abstract virtual void set_Strategy(Nullable`1<GeoStrategy> value);
    public abstract virtual Nullable`1<bool> get_Coerce();
    public abstract virtual void set_Coerce(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.CompositeFormatter`3<OpenSearch.Client.IGeoShapeQuery,OpenSearch.Client.GeoShapeQueryFormatter,OpenSearch.Client.GeoShapeQueryFieldNameFormatter>")]
public interface OpenSearch.Client.IGeoShapeQuery {
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    [DataMemberAttribute]
public IFieldLookup IndexedShape { get; public set; }
    [DataMemberAttribute]
public Nullable`1<GeoShapeRelation> Relation { get; public set; }
    [DataMemberAttribute]
public IGeoShape Shape { get; public set; }
    public abstract virtual Nullable`1<bool> get_IgnoreUnmapped();
    public abstract virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    public abstract virtual IFieldLookup get_IndexedShape();
    public abstract virtual void set_IndexedShape(IFieldLookup value);
    public abstract virtual Nullable`1<GeoShapeRelation> get_Relation();
    public abstract virtual void set_Relation(Nullable`1<GeoShapeRelation> value);
    public abstract virtual IGeoShape get_Shape();
    public abstract virtual void set_Shape(IGeoShape value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGeoSuggestContext {
    [JsonFormatterAttribute("OpenSearch.Client.SerializeAsSingleFormatter`1<System.String>")]
[DataMemberAttribute]
public IEnumerable`1<string> Precision { get; public set; }
    public abstract virtual IEnumerable`1<string> get_Precision();
    public abstract virtual void set_Precision(IEnumerable`1<string> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.GeoTileGridAggregation")]
public interface OpenSearch.Client.IGeoTileGridAggregation {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<GeoTilePrecision> Precision { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> ShardSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<GeoTilePrecision> get_Precision();
    public abstract virtual void set_Precision(Nullable`1<GeoTilePrecision> value);
    public abstract virtual Nullable`1<int> get_ShardSize();
    public abstract virtual void set_ShardSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
}
public interface OpenSearch.Client.IGeoTileGridCompositeAggregationSource {
    [DataMemberAttribute]
public Nullable`1<GeoTilePrecision> Precision { get; public set; }
    public abstract virtual Nullable`1<GeoTilePrecision> get_Precision();
    public abstract virtual void set_Precision(Nullable`1<GeoTilePrecision> value);
}
[MapsApiAttribute("indices.get_alias.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetAliasRequest {
    [IgnoreDataMemberAttribute]
public Names Name { get; }
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Names get_Name();
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("get_all_pits")]
[ReadAsAttribute("OpenSearch.Client.GetAllPitsRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetAllPitsRequest {
}
[MapsApiAttribute("cluster.get_component_template")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetComponentTemplateRequest {
    [IgnoreDataMemberAttribute]
public Names Name { get; }
    public abstract virtual Names get_Name();
}
[MapsApiAttribute("indices.get_index_template")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetComposableIndexTemplateRequest {
    [IgnoreDataMemberAttribute]
public Names Name { get; }
    public abstract virtual Names get_Name();
}
[MapsApiAttribute("indices.get_field_mapping.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetFieldMappingRequest {
    [IgnoreDataMemberAttribute]
public Fields Fields { get; }
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Fields get_Fields();
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("indices.get.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetIndexRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("indices.get_settings.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetIndexSettingsRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    [IgnoreDataMemberAttribute]
public Names Name { get; }
    public abstract virtual Indices get_Index();
    public abstract virtual Names get_Name();
}
[MapsApiAttribute("indices.get_template.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetIndexTemplateRequest {
    [IgnoreDataMemberAttribute]
public Names Name { get; }
    public abstract virtual Names get_Name();
}
[MapsApiAttribute("indices.get_mapping.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetMappingRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("ingest.get_pipeline.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetPipelineRequest {
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual Id get_Id();
}
[MapsApiAttribute("snapshot.get_repository.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetRepositoryRequest {
    [IgnoreDataMemberAttribute]
public Names RepositoryName { get; }
    public abstract virtual Names get_RepositoryName();
}
[MapsApiAttribute("get.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetRequest {
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual IndexName get_Index();
    public abstract virtual Id get_Id();
}
public interface OpenSearch.Client.IGetRequest`1 {
}
public interface OpenSearch.Client.IGetResponse`1 {
    public TDocument Source { get; }
    public abstract virtual TDocument get_Source();
}
[MapsApiAttribute("get_script.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetScriptRequest {
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual Id get_Id();
}
[MapsApiAttribute("snapshot.get.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetSnapshotRequest {
    [IgnoreDataMemberAttribute]
public Name RepositoryName { get; }
    [IgnoreDataMemberAttribute]
public Names Snapshot { get; }
    public abstract virtual Name get_RepositoryName();
    public abstract virtual Names get_Snapshot();
}
[MapsApiAttribute("tasks.get.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGetTaskRequest {
    [IgnoreDataMemberAttribute]
public TaskId TaskId { get; }
    public abstract virtual TaskId get_TaskId();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.GlobalAggregation")]
public interface OpenSearch.Client.IGlobalAggregation {
}
[AttributeUsageAttribute("128")]
public class OpenSearch.Client.IgnoreAttribute : Attribute {
}
public class OpenSearch.Client.IgnoreClrPropertyMapping`1 : ClrPropertyMappingBase`1<TDocument> {
    public IgnoreClrPropertyMapping`1(Expression`1<Func`2<TDocument, object>> property);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.GoogleNormalizedDistanceHeuristic")]
public interface OpenSearch.Client.IGoogleNormalizedDistanceHeuristic {
    [DataMemberAttribute]
public Nullable`1<bool> BackgroundIsSuperSet { get; public set; }
    public abstract virtual Nullable`1<bool> get_BackgroundIsSuperSet();
    public abstract virtual void set_BackgroundIsSuperSet(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGrokProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, string> PatternDefinitions { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Patterns { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> TraceMatch { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual IDictionary`2<string, string> get_PatternDefinitions();
    public abstract virtual void set_PatternDefinitions(IDictionary`2<string, string> value);
    public abstract virtual IEnumerable`1<string> get_Patterns();
    public abstract virtual void set_Patterns(IEnumerable`1<string> value);
    public abstract virtual Nullable`1<bool> get_TraceMatch();
    public abstract virtual void set_TraceMatch(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
}
[MapsApiAttribute("ingest.processor_grok.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGrokProcessorPatternsRequest {
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IGsubProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    [DataMemberAttribute]
public string Pattern { get; public set; }
    [DataMemberAttribute]
public string Replacement { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
    public abstract virtual string get_Pattern();
    public abstract virtual void set_Pattern(string value);
    public abstract virtual string get_Replacement();
    public abstract virtual void set_Replacement(string value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.HasChildQueryDescriptor`1<System.Object>")]
public interface OpenSearch.Client.IHasChildQuery {
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    [DataMemberAttribute]
public IInnerHits InnerHits { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxChildren { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinChildren { get; public set; }
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    [DataMemberAttribute]
public Nullable`1<ChildScoreMode> ScoreMode { get; public set; }
    [DataMemberAttribute]
public RelationName Type { get; public set; }
    public abstract virtual Nullable`1<bool> get_IgnoreUnmapped();
    public abstract virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    public abstract virtual IInnerHits get_InnerHits();
    public abstract virtual void set_InnerHits(IInnerHits value);
    public abstract virtual Nullable`1<int> get_MaxChildren();
    public abstract virtual void set_MaxChildren(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinChildren();
    public abstract virtual void set_MinChildren(Nullable`1<int> value);
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
    public abstract virtual Nullable`1<ChildScoreMode> get_ScoreMode();
    public abstract virtual void set_ScoreMode(Nullable`1<ChildScoreMode> value);
    public abstract virtual RelationName get_Type();
    public abstract virtual void set_Type(RelationName value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.HasParentQueryDescriptor`1<System.Object>")]
public interface OpenSearch.Client.IHasParentQuery {
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    [DataMemberAttribute]
public IInnerHits InnerHits { get; public set; }
    [DataMemberAttribute]
public RelationName ParentType { get; public set; }
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Score { get; public set; }
    public abstract virtual Nullable`1<bool> get_IgnoreUnmapped();
    public abstract virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    public abstract virtual IInnerHits get_InnerHits();
    public abstract virtual void set_InnerHits(IInnerHits value);
    public abstract virtual RelationName get_ParentType();
    public abstract virtual void set_ParentType(RelationName value);
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
    public abstract virtual Nullable`1<bool> get_Score();
    public abstract virtual void set_Score(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IHdfsRepository {
}
public interface OpenSearch.Client.IHdfsRepositorySettings {
    [DataMemberAttribute]
public string ChunkSize { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Compress { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> ConcurrentStreams { get; public set; }
    [DataMemberAttribute]
public string ConfigurationLocation { get; public set; }
    [IgnoreDataMemberAttribute]
public Dictionary`2<string, object> InlineHadoopConfiguration { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> LoadDefaults { get; public set; }
    [DataMemberAttribute]
public string Path { get; public set; }
    [DataMemberAttribute]
public string Uri { get; public set; }
    public abstract virtual string get_ChunkSize();
    public abstract virtual void set_ChunkSize(string value);
    public abstract virtual Nullable`1<bool> get_Compress();
    public abstract virtual void set_Compress(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_ConcurrentStreams();
    public abstract virtual void set_ConcurrentStreams(Nullable`1<int> value);
    public abstract virtual string get_ConfigurationLocation();
    public abstract virtual void set_ConfigurationLocation(string value);
    public abstract virtual Dictionary`2<string, object> get_InlineHadoopConfiguration();
    public abstract virtual void set_InlineHadoopConfiguration(Dictionary`2<string, object> value);
    public abstract virtual Nullable`1<bool> get_LoadDefaults();
    public abstract virtual void set_LoadDefaults(Nullable`1<bool> value);
    public abstract virtual string get_Path();
    public abstract virtual void set_Path(string value);
    public abstract virtual string get_Uri();
    public abstract virtual void set_Uri(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IHDRHistogramMethod {
    [DataMemberAttribute]
public Nullable`1<int> NumberOfSignificantValueDigits { get; public set; }
    public abstract virtual Nullable`1<int> get_NumberOfSignificantValueDigits();
    public abstract virtual void set_NumberOfSignificantValueDigits(Nullable`1<int> value);
}
internal interface OpenSearch.Client.IHelperCallable {
    public RequestMetaData ParentMetaData { get; internal set; }
    public abstract virtual RequestMetaData get_ParentMetaData();
    internal abstract virtual void set_ParentMetaData(RequestMetaData value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.Highlight")]
public interface OpenSearch.Client.IHighlight {
    [DataMemberAttribute]
public string BoundaryChars { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> BoundaryMaxScan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<BoundaryScanner> BoundaryScanner { get; public set; }
    [DataMemberAttribute]
public string BoundaryScannerLocale { get; public set; }
    [DataMemberAttribute]
public Nullable`1<HighlighterEncoder> Encoder { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`2<OpenSearch.Client.Field,OpenSearch.Client.IHighlightField>")]
public Dictionary`2<Field, IHighlightField> Fields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<HighlighterFragmenter> Fragmenter { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> FragmentOffset { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> FragmentSize { get; public set; }
    [DataMemberAttribute]
public QueryContainer HighlightQuery { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxAnalyzerOffset { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxFragmentLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> NoMatchSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> NumberOfFragments { get; public set; }
    [DataMemberAttribute]
public Nullable`1<HighlighterOrder> Order { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> PostTags { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> PreTags { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> RequireFieldMatch { get; public set; }
    [DataMemberAttribute]
public Nullable`1<HighlighterTagsSchema> TagsSchema { get; public set; }
    public abstract virtual string get_BoundaryChars();
    public abstract virtual void set_BoundaryChars(string value);
    public abstract virtual Nullable`1<int> get_BoundaryMaxScan();
    public abstract virtual void set_BoundaryMaxScan(Nullable`1<int> value);
    public abstract virtual Nullable`1<BoundaryScanner> get_BoundaryScanner();
    public abstract virtual void set_BoundaryScanner(Nullable`1<BoundaryScanner> value);
    public abstract virtual string get_BoundaryScannerLocale();
    public abstract virtual void set_BoundaryScannerLocale(string value);
    public abstract virtual Nullable`1<HighlighterEncoder> get_Encoder();
    public abstract virtual void set_Encoder(Nullable`1<HighlighterEncoder> value);
    public abstract virtual Dictionary`2<Field, IHighlightField> get_Fields();
    public abstract virtual void set_Fields(Dictionary`2<Field, IHighlightField> value);
    public abstract virtual Nullable`1<HighlighterFragmenter> get_Fragmenter();
    public abstract virtual void set_Fragmenter(Nullable`1<HighlighterFragmenter> value);
    public abstract virtual Nullable`1<int> get_FragmentOffset();
    public abstract virtual void set_FragmentOffset(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_FragmentSize();
    public abstract virtual void set_FragmentSize(Nullable`1<int> value);
    public abstract virtual QueryContainer get_HighlightQuery();
    public abstract virtual void set_HighlightQuery(QueryContainer value);
    public abstract virtual Nullable`1<int> get_MaxAnalyzerOffset();
    public abstract virtual void set_MaxAnalyzerOffset(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaxFragmentLength();
    public abstract virtual void set_MaxFragmentLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_NoMatchSize();
    public abstract virtual void set_NoMatchSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_NumberOfFragments();
    public abstract virtual void set_NumberOfFragments(Nullable`1<int> value);
    public abstract virtual Nullable`1<HighlighterOrder> get_Order();
    public abstract virtual void set_Order(Nullable`1<HighlighterOrder> value);
    public abstract virtual IEnumerable`1<string> get_PostTags();
    public abstract virtual void set_PostTags(IEnumerable`1<string> value);
    public abstract virtual IEnumerable`1<string> get_PreTags();
    public abstract virtual void set_PreTags(IEnumerable`1<string> value);
    public abstract virtual Nullable`1<bool> get_RequireFieldMatch();
    public abstract virtual void set_RequireFieldMatch(Nullable`1<bool> value);
    public abstract virtual Nullable`1<HighlighterTagsSchema> get_TagsSchema();
    public abstract virtual void set_TagsSchema(Nullable`1<HighlighterTagsSchema> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.HighlightField")]
public interface OpenSearch.Client.IHighlightField {
    [DataMemberAttribute]
public string BoundaryChars { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> BoundaryMaxScan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<BoundaryScanner> BoundaryScanner { get; public set; }
    [DataMemberAttribute]
public string BoundaryScannerLocale { get; public set; }
    public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> ForceSource { get; public set; }
    [DataMemberAttribute]
public Nullable`1<HighlighterFragmenter> Fragmenter { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> FragmentOffset { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> FragmentSize { get; public set; }
    [DataMemberAttribute]
public QueryContainer HighlightQuery { get; public set; }
    [DataMemberAttribute]
public Fields MatchedFields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxAnalyzerOffset { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxFragmentLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> NoMatchSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> NumberOfFragments { get; public set; }
    [DataMemberAttribute]
public Nullable`1<HighlighterOrder> Order { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> PhraseLimit { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> PostTags { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> PreTags { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> RequireFieldMatch { get; public set; }
    [DataMemberAttribute]
public Nullable`1<HighlighterTagsSchema> TagsSchema { get; public set; }
    [DataMemberAttribute]
public Union`2<HighlighterType, string> Type { get; public set; }
    public abstract virtual string get_BoundaryChars();
    public abstract virtual void set_BoundaryChars(string value);
    public abstract virtual Nullable`1<int> get_BoundaryMaxScan();
    public abstract virtual void set_BoundaryMaxScan(Nullable`1<int> value);
    public abstract virtual Nullable`1<BoundaryScanner> get_BoundaryScanner();
    public abstract virtual void set_BoundaryScanner(Nullable`1<BoundaryScanner> value);
    public abstract virtual string get_BoundaryScannerLocale();
    public abstract virtual void set_BoundaryScannerLocale(string value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_ForceSource();
    public abstract virtual void set_ForceSource(Nullable`1<bool> value);
    public abstract virtual Nullable`1<HighlighterFragmenter> get_Fragmenter();
    public abstract virtual void set_Fragmenter(Nullable`1<HighlighterFragmenter> value);
    public abstract virtual Nullable`1<int> get_FragmentOffset();
    public abstract virtual void set_FragmentOffset(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_FragmentSize();
    public abstract virtual void set_FragmentSize(Nullable`1<int> value);
    public abstract virtual QueryContainer get_HighlightQuery();
    public abstract virtual void set_HighlightQuery(QueryContainer value);
    public abstract virtual Fields get_MatchedFields();
    public abstract virtual void set_MatchedFields(Fields value);
    public abstract virtual Nullable`1<int> get_MaxAnalyzerOffset();
    public abstract virtual void set_MaxAnalyzerOffset(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaxFragmentLength();
    public abstract virtual void set_MaxFragmentLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_NoMatchSize();
    public abstract virtual void set_NoMatchSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_NumberOfFragments();
    public abstract virtual void set_NumberOfFragments(Nullable`1<int> value);
    public abstract virtual Nullable`1<HighlighterOrder> get_Order();
    public abstract virtual void set_Order(Nullable`1<HighlighterOrder> value);
    public abstract virtual Nullable`1<int> get_PhraseLimit();
    public abstract virtual void set_PhraseLimit(Nullable`1<int> value);
    public abstract virtual IEnumerable`1<string> get_PostTags();
    public abstract virtual void set_PostTags(IEnumerable`1<string> value);
    public abstract virtual IEnumerable`1<string> get_PreTags();
    public abstract virtual void set_PreTags(IEnumerable`1<string> value);
    public abstract virtual Nullable`1<bool> get_RequireFieldMatch();
    public abstract virtual void set_RequireFieldMatch(Nullable`1<bool> value);
    public abstract virtual Nullable`1<HighlighterTagsSchema> get_TagsSchema();
    public abstract virtual void set_TagsSchema(Nullable`1<HighlighterTagsSchema> value);
    public abstract virtual Union`2<HighlighterType, string> get_Type();
    public abstract virtual void set_Type(Union`2<HighlighterType, string> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.HistogramAggregation")]
public interface OpenSearch.Client.IHistogramAggregation {
    [DataMemberAttribute]
public ExtendedBounds`1<double> ExtendedBounds { get; public set; }
    [DataMemberAttribute]
public HardBounds`1<double> HardBounds { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Interval { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinimumDocumentCount { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Missing { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Offset { get; public set; }
    [DataMemberAttribute]
public HistogramOrder Order { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual ExtendedBounds`1<double> get_ExtendedBounds();
    public abstract virtual void set_ExtendedBounds(ExtendedBounds`1<double> value);
    public abstract virtual HardBounds`1<double> get_HardBounds();
    public abstract virtual void set_HardBounds(HardBounds`1<double> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<double> get_Interval();
    public abstract virtual void set_Interval(Nullable`1<double> value);
    public abstract virtual Nullable`1<int> get_MinimumDocumentCount();
    public abstract virtual void set_MinimumDocumentCount(Nullable`1<int> value);
    public abstract virtual Nullable`1<double> get_Missing();
    public abstract virtual void set_Missing(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_Offset();
    public abstract virtual void set_Offset(Nullable`1<double> value);
    public abstract virtual HistogramOrder get_Order();
    public abstract virtual void set_Order(HistogramOrder value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
public interface OpenSearch.Client.IHistogramCompositeAggregationSource {
    [DataMemberAttribute]
public Nullable`1<double> Interval { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual Nullable`1<double> get_Interval();
    public abstract virtual void set_Interval(Nullable`1<double> value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.Hit`1")]
public interface OpenSearch.Client.IHit`1 {
    [DataMemberAttribute]
public Explanation Explanation { get; }
    [DataMemberAttribute]
public FieldValues Fields { get; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, IReadOnlyCollection`1<string>> Highlight { get; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.InnerHitsResult>")]
public IReadOnlyDictionary`2<string, InnerHitsResult> InnerHits { get; }
    [DataMemberAttribute]
public NestedIdentity Nested { get; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> MatchedQueries { get; }
    [DataMemberAttribute]
public Nullable`1<double> Score { get; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<object> Sorts { get; }
    public abstract virtual Explanation get_Explanation();
    public abstract virtual FieldValues get_Fields();
    public abstract virtual IReadOnlyDictionary`2<string, IReadOnlyCollection`1<string>> get_Highlight();
    public abstract virtual IReadOnlyDictionary`2<string, InnerHitsResult> get_InnerHits();
    public abstract virtual NestedIdentity get_Nested();
    public abstract virtual IReadOnlyCollection`1<string> get_MatchedQueries();
    public abstract virtual Nullable`1<double> get_Score();
    public abstract virtual IReadOnlyCollection`1<object> get_Sorts();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IHitMetadata`1 {
    [DataMemberAttribute]
public string Id { get; }
    [DataMemberAttribute]
public string Index { get; }
    [DataMemberAttribute]
public Nullable`1<long> PrimaryTerm { get; }
    [DataMemberAttribute]
public string Routing { get; }
    [DataMemberAttribute]
public Nullable`1<long> SequenceNumber { get; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1")]
public TDocument Source { get; }
    [DataMemberAttribute]
public string Type { get; }
    [DataMemberAttribute]
public long Version { get; }
    public abstract virtual string get_Id();
    public abstract virtual string get_Index();
    public abstract virtual Nullable`1<long> get_PrimaryTerm();
    public abstract virtual string get_Routing();
    public abstract virtual Nullable`1<long> get_SequenceNumber();
    public abstract virtual TDocument get_Source();
    public abstract virtual string get_Type();
    public abstract virtual long get_Version();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.HitsMetadata`1")]
public interface OpenSearch.Client.IHitsMetadata`1 {
    [DataMemberAttribute]
public IReadOnlyCollection`1<IHit`1<T>> Hits { get; }
    [DataMemberAttribute]
public Nullable`1<double> MaxScore { get; }
    [DataMemberAttribute]
public TotalHits Total { get; }
    public abstract virtual IReadOnlyCollection`1<IHit`1<T>> get_Hits();
    public abstract virtual Nullable`1<double> get_MaxScore();
    public abstract virtual TotalHits get_Total();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.HoltLinearModel")]
public interface OpenSearch.Client.IHoltLinearModel {
    [DataMemberAttribute]
public Nullable`1<float> Alpha { get; public set; }
    [DataMemberAttribute]
public Nullable`1<float> Beta { get; public set; }
    public abstract virtual Nullable`1<float> get_Alpha();
    public abstract virtual void set_Alpha(Nullable`1<float> value);
    public abstract virtual Nullable`1<float> get_Beta();
    public abstract virtual void set_Beta(Nullable`1<float> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.HoltWintersModel")]
public interface OpenSearch.Client.IHoltWintersModel {
    [DataMemberAttribute]
public Nullable`1<float> Alpha { get; public set; }
    [DataMemberAttribute]
public Nullable`1<float> Beta { get; public set; }
    [DataMemberAttribute]
public Nullable`1<float> Gamma { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Pad { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Period { get; public set; }
    [DataMemberAttribute]
public Nullable`1<HoltWintersType> Type { get; public set; }
    public abstract virtual Nullable`1<float> get_Alpha();
    public abstract virtual void set_Alpha(Nullable`1<float> value);
    public abstract virtual Nullable`1<float> get_Beta();
    public abstract virtual void set_Beta(Nullable`1<float> value);
    public abstract virtual Nullable`1<float> get_Gamma();
    public abstract virtual void set_Gamma(Nullable`1<float> value);
    public abstract virtual Nullable`1<bool> get_Pad();
    public abstract virtual void set_Pad(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_Period();
    public abstract virtual void set_Period(Nullable`1<int> value);
    public abstract virtual Nullable`1<HoltWintersType> get_Type();
    public abstract virtual void set_Type(Nullable`1<HoltWintersType> value);
}
public interface OpenSearch.Client.IHtmlStripCharFilter {
}
public interface OpenSearch.Client.IHttpDeleteRequest {
}
public interface OpenSearch.Client.IHttpGetRequest {
}
public interface OpenSearch.Client.IHttpHeadRequest {
}
public interface OpenSearch.Client.IHttpPatchRequest {
}
public interface OpenSearch.Client.IHttpPostRequest {
}
public interface OpenSearch.Client.IHttpPutRequest {
}
public interface OpenSearch.Client.IHunspellTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Dedup { get; public set; }
    [DataMemberAttribute]
public string Dictionary { get; public set; }
    [DataMemberAttribute]
public string Locale { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> LongestOnly { get; public set; }
    public abstract virtual Nullable`1<bool> get_Dedup();
    public abstract virtual void set_Dedup(Nullable`1<bool> value);
    public abstract virtual string get_Dictionary();
    public abstract virtual void set_Dictionary(string value);
    public abstract virtual string get_Locale();
    public abstract virtual void set_Locale(string value);
    public abstract virtual Nullable`1<bool> get_LongestOnly();
    public abstract virtual void set_LongestOnly(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IHyphenationDecompounderTokenFilter {
}
public interface OpenSearch.Client.IIBSimilarity {
    [DataMemberAttribute]
public Nullable`1<IBDistribution> Distribution { get; public set; }
    [DataMemberAttribute]
public Nullable`1<IBLambda> Lambda { get; public set; }
    [DataMemberAttribute]
public Nullable`1<Normalization> Normalization { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> NormalizationH1C { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> NormalizationH2C { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> NormalizationH3C { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> NormalizationZZ { get; public set; }
    public abstract virtual Nullable`1<IBDistribution> get_Distribution();
    public abstract virtual void set_Distribution(Nullable`1<IBDistribution> value);
    public abstract virtual Nullable`1<IBLambda> get_Lambda();
    public abstract virtual void set_Lambda(Nullable`1<IBLambda> value);
    public abstract virtual Nullable`1<Normalization> get_Normalization();
    public abstract virtual void set_Normalization(Nullable`1<Normalization> value);
    public abstract virtual Nullable`1<double> get_NormalizationH1C();
    public abstract virtual void set_NormalizationH1C(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_NormalizationH2C();
    public abstract virtual void set_NormalizationH2C(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_NormalizationH3C();
    public abstract virtual void set_NormalizationH3C(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_NormalizationZZ();
    public abstract virtual void set_NormalizationZZ(Nullable`1<double> value);
}
public interface OpenSearch.Client.IIcuAnalyzer {
    [DataMemberAttribute]
public Nullable`1<IcuNormalizationType> Method { get; public set; }
    [DataMemberAttribute]
public Nullable`1<IcuNormalizationMode> Mode { get; public set; }
    public abstract virtual Nullable`1<IcuNormalizationType> get_Method();
    public abstract virtual void set_Method(Nullable`1<IcuNormalizationType> value);
    public abstract virtual Nullable`1<IcuNormalizationMode> get_Mode();
    public abstract virtual void set_Mode(Nullable`1<IcuNormalizationMode> value);
}
public interface OpenSearch.Client.IIcuCollationTokenFilter {
    [DataMemberAttribute]
public Nullable`1<IcuCollationAlternate> Alternate { get; public set; }
    [DataMemberAttribute]
public Nullable`1<IcuCollationCaseFirst> CaseFirst { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> CaseLevel { get; public set; }
    [DataMemberAttribute]
public string Country { get; public set; }
    [DataMemberAttribute]
public Nullable`1<IcuCollationDecomposition> Decomposition { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> HiraganaQuaternaryMode { get; public set; }
    [DataMemberAttribute]
public string Language { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Numeric { get; public set; }
    [DataMemberAttribute]
public Nullable`1<IcuCollationStrength> Strength { get; public set; }
    [DataMemberAttribute]
public string VariableTop { get; public set; }
    [DataMemberAttribute]
public string Variant { get; public set; }
    public abstract virtual Nullable`1<IcuCollationAlternate> get_Alternate();
    public abstract virtual void set_Alternate(Nullable`1<IcuCollationAlternate> value);
    public abstract virtual Nullable`1<IcuCollationCaseFirst> get_CaseFirst();
    public abstract virtual void set_CaseFirst(Nullable`1<IcuCollationCaseFirst> value);
    public abstract virtual Nullable`1<bool> get_CaseLevel();
    public abstract virtual void set_CaseLevel(Nullable`1<bool> value);
    public abstract virtual string get_Country();
    public abstract virtual void set_Country(string value);
    public abstract virtual Nullable`1<IcuCollationDecomposition> get_Decomposition();
    public abstract virtual void set_Decomposition(Nullable`1<IcuCollationDecomposition> value);
    public abstract virtual Nullable`1<bool> get_HiraganaQuaternaryMode();
    public abstract virtual void set_HiraganaQuaternaryMode(Nullable`1<bool> value);
    public abstract virtual string get_Language();
    public abstract virtual void set_Language(string value);
    public abstract virtual Nullable`1<bool> get_Numeric();
    public abstract virtual void set_Numeric(Nullable`1<bool> value);
    public abstract virtual Nullable`1<IcuCollationStrength> get_Strength();
    public abstract virtual void set_Strength(Nullable`1<IcuCollationStrength> value);
    public abstract virtual string get_VariableTop();
    public abstract virtual void set_VariableTop(string value);
    public abstract virtual string get_Variant();
    public abstract virtual void set_Variant(string value);
}
public interface OpenSearch.Client.IIcuFoldingTokenFilter {
    [DataMemberAttribute]
public string UnicodeSetFilter { get; public set; }
    public abstract virtual string get_UnicodeSetFilter();
    public abstract virtual void set_UnicodeSetFilter(string value);
}
public interface OpenSearch.Client.IIcuNormalizationCharFilter {
    [DataMemberAttribute]
public Nullable`1<IcuNormalizationMode> Mode { get; public set; }
    [DataMemberAttribute]
public Nullable`1<IcuNormalizationType> Name { get; public set; }
    public abstract virtual Nullable`1<IcuNormalizationMode> get_Mode();
    public abstract virtual void set_Mode(Nullable`1<IcuNormalizationMode> value);
    public abstract virtual Nullable`1<IcuNormalizationType> get_Name();
    public abstract virtual void set_Name(Nullable`1<IcuNormalizationType> value);
}
public interface OpenSearch.Client.IIcuNormalizationTokenFilter {
    [DataMemberAttribute]
public Nullable`1<IcuNormalizationType> Name { get; public set; }
    public abstract virtual Nullable`1<IcuNormalizationType> get_Name();
    public abstract virtual void set_Name(Nullable`1<IcuNormalizationType> value);
}
public interface OpenSearch.Client.IIcuTokenizer {
    [DataMemberAttribute]
public string RuleFiles { get; public set; }
    public abstract virtual string get_RuleFiles();
    public abstract virtual void set_RuleFiles(string value);
}
public interface OpenSearch.Client.IIcuTransformTokenFilter {
    [DataMemberAttribute]
public Nullable`1<IcuTransformDirection> Direction { get; public set; }
    [DataMemberAttribute]
public string Id { get; public set; }
    public abstract virtual Nullable`1<IcuTransformDirection> get_Direction();
    public abstract virtual void set_Direction(Nullable`1<IcuTransformDirection> value);
    public abstract virtual string get_Id();
    public abstract virtual void set_Id(string value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.IdsQueryDescriptor")]
public interface OpenSearch.Client.IIdsQuery {
    [DataMemberAttribute]
public IEnumerable`1<Id> Values { get; public set; }
    public abstract virtual IEnumerable`1<Id> get_Values();
    public abstract virtual void set_Values(IEnumerable`1<Id> value);
}
[MapsApiAttribute("dangling_indices.import_dangling_index.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IImportDanglingIndexRequest {
    [IgnoreDataMemberAttribute]
public IndexUuid IndexUuid { get; }
    public abstract virtual IndexUuid get_IndexUuid();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IIndexedScript {
    [DataMemberAttribute]
public string Id { get; public set; }
    public abstract virtual string get_Id();
    public abstract virtual void set_Id(string value);
}
[MapsApiAttribute("indices.exists.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IIndexExistsRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[JsonFormatterAttribute("OpenSearch.Client.IndexRequestFormatter`1")]
[MapsApiAttribute("index.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IIndexRequest`1 {
    public TDocument Document { get; public set; }
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual TDocument get_Document();
    public abstract virtual void set_Document(TDocument value);
    public abstract virtual IndexName get_Index();
    public abstract virtual Id get_Id();
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.IndexSettingsFormatter")]
public interface OpenSearch.Client.IIndexSettings {
    public Nullable`1<FileSystemStorageImplementation> FileSystemStorageImplementation { get; public set; }
    public Nullable`1<int> NumberOfRoutingShards { get; public set; }
    public Nullable`1<int> NumberOfShards { get; public set; }
    public IQueriesSettings Queries { get; public set; }
    public Nullable`1<int> RoutingPartitionSize { get; public set; }
    public Nullable`1<bool> Hidden { get; public set; }
    public ISortingSettings Sorting { get; public set; }
    public ISoftDeleteSettings SoftDeletes { get; public set; }
    public abstract virtual Nullable`1<FileSystemStorageImplementation> get_FileSystemStorageImplementation();
    public abstract virtual void set_FileSystemStorageImplementation(Nullable`1<FileSystemStorageImplementation> value);
    public abstract virtual Nullable`1<int> get_NumberOfRoutingShards();
    public abstract virtual void set_NumberOfRoutingShards(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_NumberOfShards();
    public abstract virtual void set_NumberOfShards(Nullable`1<int> value);
    public abstract virtual IQueriesSettings get_Queries();
    public abstract virtual void set_Queries(IQueriesSettings value);
    public abstract virtual Nullable`1<int> get_RoutingPartitionSize();
    public abstract virtual void set_RoutingPartitionSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_Hidden();
    public abstract virtual void set_Hidden(Nullable`1<bool> value);
    public abstract virtual ISortingSettings get_Sorting();
    public abstract virtual void set_Sorting(ISortingSettings value);
    public abstract virtual ISoftDeleteSettings get_SoftDeletes();
    public abstract virtual void set_SoftDeletes(ISoftDeleteSettings value);
}
[ReadAsAttribute("OpenSearch.Client.IndexState")]
public interface OpenSearch.Client.IIndexState {
    [DataMemberAttribute]
public IAliases Aliases { get; public set; }
    [DataMemberAttribute]
public ITypeMapping Mappings { get; public set; }
    [DataMemberAttribute]
public IIndexSettings Settings { get; public set; }
    public abstract virtual IAliases get_Aliases();
    public abstract virtual void set_Aliases(IAliases value);
    public abstract virtual ITypeMapping get_Mappings();
    public abstract virtual void set_Mappings(ITypeMapping value);
    public abstract virtual IIndexSettings get_Settings();
    public abstract virtual void set_Settings(IIndexSettings value);
}
[MapsApiAttribute("indices.exists_template.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IIndexTemplateExistsRequest {
    [IgnoreDataMemberAttribute]
public Names Name { get; }
    public abstract virtual Names get_Name();
}
public interface OpenSearch.Client.IIndicesModuleSettings {
    public ICircuitBreakerSettings CircuitBreakerSettings { get; public set; }
    public FielddataSettings FielddataSettings { get; public set; }
    public string QeueriesCacheSize { get; public set; }
    public IIndicesRecoverySettings RecoverySettings { get; public set; }
    public abstract virtual ICircuitBreakerSettings get_CircuitBreakerSettings();
    public abstract virtual void set_CircuitBreakerSettings(ICircuitBreakerSettings value);
    public abstract virtual FielddataSettings get_FielddataSettings();
    public abstract virtual void set_FielddataSettings(FielddataSettings value);
    public abstract virtual string get_QeueriesCacheSize();
    public abstract virtual void set_QeueriesCacheSize(string value);
    public abstract virtual IIndicesRecoverySettings get_RecoverySettings();
    public abstract virtual void set_RecoverySettings(IIndicesRecoverySettings value);
}
public interface OpenSearch.Client.IIndicesRecoverySettings {
    public Nullable`1<bool> Compress { get; public set; }
    public Nullable`1<int> ConcurrentSmallFileStreams { get; public set; }
    public Nullable`1<int> ConcurrentStreams { get; public set; }
    public string FileChunkSize { get; public set; }
    public string MaxBytesPerSecond { get; public set; }
    public Nullable`1<int> TranslogOperations { get; public set; }
    public string TranslogSize { get; public set; }
    public abstract virtual Nullable`1<bool> get_Compress();
    public abstract virtual void set_Compress(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_ConcurrentSmallFileStreams();
    public abstract virtual void set_ConcurrentSmallFileStreams(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_ConcurrentStreams();
    public abstract virtual void set_ConcurrentStreams(Nullable`1<int> value);
    public abstract virtual string get_FileChunkSize();
    public abstract virtual void set_FileChunkSize(string value);
    public abstract virtual string get_MaxBytesPerSecond();
    public abstract virtual void set_MaxBytesPerSecond(string value);
    public abstract virtual Nullable`1<int> get_TranslogOperations();
    public abstract virtual void set_TranslogOperations(Nullable`1<int> value);
    public abstract virtual string get_TranslogSize();
    public abstract virtual void set_TranslogSize(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IIndicesShardStoresRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("indices.stats")]
[ReadAsAttribute("OpenSearch.Client.IndicesStatsRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IIndicesStatsRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    [IgnoreDataMemberAttribute]
public Metrics Metric { get; }
    public abstract virtual Indices get_Index();
    public abstract virtual Metrics get_Metric();
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.InferenceFieldMap,OpenSearch.Client.IInferenceFieldMap,OpenSearch.Client.Field,OpenSearch.Client.Field>")]
public interface OpenSearch.Client.IInferenceFieldMap {
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IInferenceProcessor {
    [DataMemberAttribute]
public string ModelId { get; public set; }
    [DataMemberAttribute]
public IInferenceFieldMap FieldMap { get; public set; }
    public abstract virtual string get_ModelId();
    public abstract virtual void set_ModelId(string value);
    public abstract virtual IInferenceFieldMap get_FieldMap();
    public abstract virtual void set_FieldMap(IInferenceFieldMap value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.InlineGet`1")]
public interface OpenSearch.Client.IInlineGet`1 {
    [DataMemberAttribute]
public FieldValues Fields { get; }
    [DataMemberAttribute]
public bool Found { get; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1")]
public TDocument Source { get; }
    public abstract virtual FieldValues get_Fields();
    public abstract virtual bool get_Found();
    public abstract virtual TDocument get_Source();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IInlineScript {
    [DataMemberAttribute]
public string Source { get; public set; }
    public abstract virtual string get_Source();
    public abstract virtual void set_Source(string value);
}
[ReadAsAttribute("OpenSearch.Client.InnerHits")]
public interface OpenSearch.Client.IInnerHits {
    [DataMemberAttribute]
public IFieldCollapse Collapse { get; public set; }
    [DataMemberAttribute]
public Fields DocValueFields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Explain { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> From { get; public set; }
    [DataMemberAttribute]
public IHighlight Highlight { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public IScriptFields ScriptFields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    [DataMemberAttribute]
public IList`1<ISort> Sort { get; public set; }
    [DataMemberAttribute]
public Union`2<bool, ISourceFilter> Source { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Version { get; public set; }
    public abstract virtual IFieldCollapse get_Collapse();
    public abstract virtual void set_Collapse(IFieldCollapse value);
    public abstract virtual Fields get_DocValueFields();
    public abstract virtual void set_DocValueFields(Fields value);
    public abstract virtual Nullable`1<bool> get_Explain();
    public abstract virtual void set_Explain(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_From();
    public abstract virtual void set_From(Nullable`1<int> value);
    public abstract virtual IHighlight get_Highlight();
    public abstract virtual void set_Highlight(IHighlight value);
    public abstract virtual Nullable`1<bool> get_IgnoreUnmapped();
    public abstract virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual IScriptFields get_ScriptFields();
    public abstract virtual void set_ScriptFields(IScriptFields value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
    public abstract virtual IList`1<ISort> get_Sort();
    public abstract virtual void set_Sort(IList`1<ISort> value);
    public abstract virtual Union`2<bool, ISourceFilter> get_Source();
    public abstract virtual void set_Source(Union`2<bool, ISourceFilter> value);
    public abstract virtual Nullable`1<bool> get_Version();
    public abstract virtual void set_Version(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IIntegerRangeProperty {
}
public interface OpenSearch.Client.IIntervals {
    [DataMemberAttribute]
public IIntervalsFilter Filter { get; public set; }
    public abstract virtual IIntervalsFilter get_Filter();
    public abstract virtual void set_Filter(IIntervalsFilter value);
}
[ReadAsAttribute("OpenSearch.Client.IntervalsAllOf")]
public interface OpenSearch.Client.IIntervalsAllOf {
    [DataMemberAttribute]
public IEnumerable`1<IntervalsContainer> Intervals { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxGaps { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Ordered { get; public set; }
    public abstract virtual IEnumerable`1<IntervalsContainer> get_Intervals();
    public abstract virtual void set_Intervals(IEnumerable`1<IntervalsContainer> value);
    public abstract virtual Nullable`1<int> get_MaxGaps();
    public abstract virtual void set_MaxGaps(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_Ordered();
    public abstract virtual void set_Ordered(Nullable`1<bool> value);
}
[ReadAsAttribute("OpenSearch.Client.IntervalsAnyOf")]
public interface OpenSearch.Client.IIntervalsAnyOf {
    [DataMemberAttribute]
public IEnumerable`1<IntervalsContainer> Intervals { get; public set; }
    public abstract virtual IEnumerable`1<IntervalsContainer> get_Intervals();
    public abstract virtual void set_Intervals(IEnumerable`1<IntervalsContainer> value);
}
public interface OpenSearch.Client.IIntervalsContainer {
    [DataMemberAttribute]
public IIntervalsAllOf AllOf { get; public set; }
    [DataMemberAttribute]
public IIntervalsAnyOf AnyOf { get; public set; }
    [DataMemberAttribute]
public IIntervalsFuzzy Fuzzy { get; public set; }
    [DataMemberAttribute]
public IIntervalsMatch Match { get; public set; }
    [DataMemberAttribute]
public IIntervalsPrefix Prefix { get; public set; }
    [DataMemberAttribute]
public IIntervalsWildcard Wildcard { get; public set; }
    public abstract virtual IIntervalsAllOf get_AllOf();
    public abstract virtual void set_AllOf(IIntervalsAllOf value);
    public abstract virtual IIntervalsAnyOf get_AnyOf();
    public abstract virtual void set_AnyOf(IIntervalsAnyOf value);
    public abstract virtual IIntervalsFuzzy get_Fuzzy();
    public abstract virtual void set_Fuzzy(IIntervalsFuzzy value);
    public abstract virtual IIntervalsMatch get_Match();
    public abstract virtual void set_Match(IIntervalsMatch value);
    public abstract virtual IIntervalsPrefix get_Prefix();
    public abstract virtual void set_Prefix(IIntervalsPrefix value);
    public abstract virtual IIntervalsWildcard get_Wildcard();
    public abstract virtual void set_Wildcard(IIntervalsWildcard value);
}
[ReadAsAttribute("OpenSearch.Client.IntervalsFilter")]
public interface OpenSearch.Client.IIntervalsFilter {
    [DataMemberAttribute]
public IntervalsContainer After { get; public set; }
    [DataMemberAttribute]
public IntervalsContainer Before { get; public set; }
    [DataMemberAttribute]
public IntervalsContainer ContainedBy { get; public set; }
    [DataMemberAttribute]
public IntervalsContainer Containing { get; public set; }
    [DataMemberAttribute]
public IntervalsContainer NotContainedBy { get; public set; }
    [DataMemberAttribute]
public IntervalsContainer NotContaining { get; public set; }
    [DataMemberAttribute]
public IntervalsContainer NotOverlapping { get; public set; }
    [DataMemberAttribute]
public IntervalsContainer Overlapping { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual IntervalsContainer get_After();
    public abstract virtual void set_After(IntervalsContainer value);
    public abstract virtual IntervalsContainer get_Before();
    public abstract virtual void set_Before(IntervalsContainer value);
    public abstract virtual IntervalsContainer get_ContainedBy();
    public abstract virtual void set_ContainedBy(IntervalsContainer value);
    public abstract virtual IntervalsContainer get_Containing();
    public abstract virtual void set_Containing(IntervalsContainer value);
    public abstract virtual IntervalsContainer get_NotContainedBy();
    public abstract virtual void set_NotContainedBy(IntervalsContainer value);
    public abstract virtual IntervalsContainer get_NotContaining();
    public abstract virtual void set_NotContaining(IntervalsContainer value);
    public abstract virtual IntervalsContainer get_NotOverlapping();
    public abstract virtual void set_NotOverlapping(IntervalsContainer value);
    public abstract virtual IntervalsContainer get_Overlapping();
    public abstract virtual void set_Overlapping(IntervalsContainer value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[ReadAsAttribute("OpenSearch.Client.IntervalsFuzzy")]
public interface OpenSearch.Client.IIntervalsFuzzy {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> PrefixLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Transpositions { get; public set; }
    [DataMemberAttribute]
public Fuzziness Fuzziness { get; public set; }
    [DataMemberAttribute]
public string Term { get; public set; }
    [DataMemberAttribute]
public Field UseField { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<int> get_PrefixLength();
    public abstract virtual void set_PrefixLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_Transpositions();
    public abstract virtual void set_Transpositions(Nullable`1<bool> value);
    public abstract virtual Fuzziness get_Fuzziness();
    public abstract virtual void set_Fuzziness(Fuzziness value);
    public abstract virtual string get_Term();
    public abstract virtual void set_Term(string value);
    public abstract virtual Field get_UseField();
    public abstract virtual void set_UseField(Field value);
}
[ReadAsAttribute("OpenSearch.Client.IntervalsMatch")]
public interface OpenSearch.Client.IIntervalsMatch {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxGaps { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Ordered { get; public set; }
    [DataMemberAttribute]
public string Query { get; public set; }
    [DataMemberAttribute]
public Field UseField { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<int> get_MaxGaps();
    public abstract virtual void set_MaxGaps(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_Ordered();
    public abstract virtual void set_Ordered(Nullable`1<bool> value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual Field get_UseField();
    public abstract virtual void set_UseField(Field value);
}
public interface OpenSearch.Client.IIntervalsNoFilter {
}
[ReadAsAttribute("OpenSearch.Client.IntervalsPrefix")]
public interface OpenSearch.Client.IIntervalsPrefix {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public string Prefix { get; public set; }
    [DataMemberAttribute]
public Field UseField { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual string get_Prefix();
    public abstract virtual void set_Prefix(string value);
    public abstract virtual Field get_UseField();
    public abstract virtual void set_UseField(Field value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.IntervalsQuery,OpenSearch.Client.IIntervalsQuery>")]
public interface OpenSearch.Client.IIntervalsQuery {
}
[ReadAsAttribute("OpenSearch.Client.IntervalsWildcard")]
public interface OpenSearch.Client.IIntervalsWildcard {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public string Pattern { get; public set; }
    [DataMemberAttribute]
public Field UseField { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual string get_Pattern();
    public abstract virtual void set_Pattern(string value);
    public abstract virtual Field get_UseField();
    public abstract virtual void set_UseField(Field value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IIpProperty {
    [DataMemberAttribute]
public Nullable`1<bool> Index { get; public set; }
    [DataMemberAttribute]
public string NullValue { get; public set; }
    public abstract virtual Nullable`1<bool> get_Index();
    public abstract virtual void set_Index(Nullable`1<bool> value);
    public abstract virtual string get_NullValue();
    public abstract virtual void set_NullValue(string value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.IpRangeAggregation")]
public interface OpenSearch.Client.IIpRangeAggregation {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<IIpRangeAggregationRange> Ranges { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual IEnumerable`1<IIpRangeAggregationRange> get_Ranges();
    public abstract virtual void set_Ranges(IEnumerable`1<IIpRangeAggregationRange> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.IpRangeAggregationRange")]
public interface OpenSearch.Client.IIpRangeAggregationRange {
    [DataMemberAttribute]
public string From { get; public set; }
    [DataMemberAttribute]
public string Mask { get; public set; }
    [DataMemberAttribute]
public string To { get; public set; }
    public abstract virtual string get_From();
    public abstract virtual void set_From(string value);
    public abstract virtual string get_Mask();
    public abstract virtual void set_Mask(string value);
    public abstract virtual string get_To();
    public abstract virtual void set_To(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IIpRangeProperty {
}
public interface OpenSearch.Client.IIsADictionary {
}
public interface OpenSearch.Client.IIsADictionary`2 {
}
public interface OpenSearch.Client.IIsAReadOnlyDictionary {
}
public interface OpenSearch.Client.IIsAReadOnlyDictionary`2 {
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IJoinProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public string Separator { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual string get_Separator();
    public abstract virtual void set_Separator(string value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IJoinProperty {
    [DataMemberAttribute]
public IRelations Relations { get; public set; }
    public abstract virtual IRelations get_Relations();
    public abstract virtual void set_Relations(IRelations value);
}
internal interface OpenSearch.Client.IJsonFormatterResolverWithSettings {
    public IConnectionSettingsValues Settings { get; }
    public abstract virtual IConnectionSettingsValues get_Settings();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IJsonProcessor {
    [DataMemberAttribute]
public Nullable`1<bool> AddToRoot { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    public abstract virtual Nullable`1<bool> get_AddToRoot();
    public abstract virtual void set_AddToRoot(Nullable`1<bool> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
}
public interface OpenSearch.Client.IKeepTypesTokenFilter {
    [DataMemberAttribute]
public Nullable`1<KeepTypesMode> Mode { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Types { get; public set; }
    public abstract virtual Nullable`1<KeepTypesMode> get_Mode();
    public abstract virtual void set_Mode(Nullable`1<KeepTypesMode> value);
    public abstract virtual IEnumerable`1<string> get_Types();
    public abstract virtual void set_Types(IEnumerable`1<string> value);
}
public interface OpenSearch.Client.IKeepWordsTokenFilter {
    [DataMemberAttribute]
public IEnumerable`1<string> KeepWords { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> KeepWordsCase { get; public set; }
    [DataMemberAttribute]
public string KeepWordsPath { get; public set; }
    public abstract virtual IEnumerable`1<string> get_KeepWords();
    public abstract virtual void set_KeepWords(IEnumerable`1<string> value);
    public abstract virtual Nullable`1<bool> get_KeepWordsCase();
    public abstract virtual void set_KeepWordsCase(Nullable`1<bool> value);
    public abstract virtual string get_KeepWordsPath();
    public abstract virtual void set_KeepWordsPath(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IKeyValueProcessor {
    [DataMemberAttribute]
public IEnumerable`1<string> ExcludeKeys { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public string FieldSplit { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> IncludeKeys { get; public set; }
    [DataMemberAttribute]
public string Prefix { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> StripBrackets { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    [DataMemberAttribute]
public string TrimKey { get; public set; }
    [DataMemberAttribute]
public string TrimValue { get; public set; }
    [DataMemberAttribute]
public string ValueSplit { get; public set; }
    public abstract virtual IEnumerable`1<string> get_ExcludeKeys();
    public abstract virtual void set_ExcludeKeys(IEnumerable`1<string> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual string get_FieldSplit();
    public abstract virtual void set_FieldSplit(string value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_IncludeKeys();
    public abstract virtual void set_IncludeKeys(IEnumerable`1<string> value);
    public abstract virtual string get_Prefix();
    public abstract virtual void set_Prefix(string value);
    public abstract virtual Nullable`1<bool> get_StripBrackets();
    public abstract virtual void set_StripBrackets(Nullable`1<bool> value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
    public abstract virtual string get_TrimKey();
    public abstract virtual void set_TrimKey(string value);
    public abstract virtual string get_TrimValue();
    public abstract virtual void set_TrimValue(string value);
    public abstract virtual string get_ValueSplit();
    public abstract virtual void set_ValueSplit(string value);
}
public interface OpenSearch.Client.IKeywordAnalyzer {
}
public interface OpenSearch.Client.IKeywordMarkerTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> IgnoreCase { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Keywords { get; public set; }
    [DataMemberAttribute]
public string KeywordsPath { get; public set; }
    [DataMemberAttribute]
public string KeywordsPattern { get; public set; }
    public abstract virtual Nullable`1<bool> get_IgnoreCase();
    public abstract virtual void set_IgnoreCase(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_Keywords();
    public abstract virtual void set_Keywords(IEnumerable`1<string> value);
    public abstract virtual string get_KeywordsPath();
    public abstract virtual void set_KeywordsPath(string value);
    public abstract virtual string get_KeywordsPattern();
    public abstract virtual void set_KeywordsPattern(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IKeywordProperty {
    [DataMemberAttribute]
public Nullable`1<double> Boost { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> EagerGlobalOrdinals { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> IgnoreAbove { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<IndexOptions> IndexOptions { get; public set; }
    [DataMemberAttribute]
public string Normalizer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Norms { get; public set; }
    [DataMemberAttribute]
public string NullValue { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> SplitQueriesOnWhitespace { get; public set; }
    public abstract virtual Nullable`1<double> get_Boost();
    public abstract virtual void set_Boost(Nullable`1<double> value);
    public abstract virtual Nullable`1<bool> get_EagerGlobalOrdinals();
    public abstract virtual void set_EagerGlobalOrdinals(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_IgnoreAbove();
    public abstract virtual void set_IgnoreAbove(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_Index();
    public abstract virtual void set_Index(Nullable`1<bool> value);
    public abstract virtual Nullable`1<IndexOptions> get_IndexOptions();
    public abstract virtual void set_IndexOptions(Nullable`1<IndexOptions> value);
    public abstract virtual string get_Normalizer();
    public abstract virtual void set_Normalizer(string value);
    public abstract virtual Nullable`1<bool> get_Norms();
    public abstract virtual void set_Norms(Nullable`1<bool> value);
    public abstract virtual string get_NullValue();
    public abstract virtual void set_NullValue(string value);
    public abstract virtual Nullable`1<bool> get_SplitQueriesOnWhitespace();
    public abstract virtual void set_SplitQueriesOnWhitespace(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IKeywordTokenizer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> BufferSize { get; public set; }
    public abstract virtual Nullable`1<int> get_BufferSize();
    public abstract virtual void set_BufferSize(Nullable`1<int> value);
}
[ReadAsAttribute("OpenSearch.Client.KnnMethod")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IKnnMethod {
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Engine { get; public set; }
    [DataMemberAttribute]
public string SpaceType { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Parameters { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Engine();
    public abstract virtual void set_Engine(string value);
    public abstract virtual string get_SpaceType();
    public abstract virtual void set_SpaceType(string value);
    public abstract virtual IDictionary`2<string, object> get_Parameters();
    public abstract virtual void set_Parameters(IDictionary`2<string, object> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.KnnMethodParameters,OpenSearch.Client.IKnnMethodParameters,System.String,System.Object>")]
public interface OpenSearch.Client.IKnnMethodParameters {
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.KnnQuery,OpenSearch.Client.IKnnQuery>")]
public interface OpenSearch.Client.IKnnQuery {
    [DataMemberAttribute]
public Single[] Vector { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> K { get; public set; }
    [DataMemberAttribute]
public IQueryContainer Filter { get; public set; }
    public abstract virtual Single[] get_Vector();
    public abstract virtual void set_Vector(Single[] value);
    public abstract virtual Nullable`1<int> get_K();
    public abstract virtual void set_K(Nullable`1<int> value);
    public abstract virtual IQueryContainer get_Filter();
    public abstract virtual void set_Filter(IQueryContainer value);
}
[ReadAsAttribute("OpenSearch.Client.KnnVectorProperty")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IKnnVectorProperty {
    [DataMemberAttribute]
public Nullable`1<int> Dimension { get; public set; }
    [DataMemberAttribute]
public string ModelId { get; public set; }
    [DataMemberAttribute]
public IKnnMethod Method { get; public set; }
    public abstract virtual Nullable`1<int> get_Dimension();
    public abstract virtual void set_Dimension(Nullable`1<int> value);
    public abstract virtual string get_ModelId();
    public abstract virtual void set_ModelId(string value);
    public abstract virtual IKnnMethod get_Method();
    public abstract virtual void set_Method(IKnnMethod value);
}
public interface OpenSearch.Client.IKStemTokenFilter {
}
public interface OpenSearch.Client.IKuromojiAnalyzer {
    [DataMemberAttribute]
public Nullable`1<KuromojiTokenizationMode> Mode { get; public set; }
    [DataMemberAttribute]
public string UserDictionary { get; public set; }
    public abstract virtual Nullable`1<KuromojiTokenizationMode> get_Mode();
    public abstract virtual void set_Mode(Nullable`1<KuromojiTokenizationMode> value);
    public abstract virtual string get_UserDictionary();
    public abstract virtual void set_UserDictionary(string value);
}
public interface OpenSearch.Client.IKuromojiIterationMarkCharFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> NormalizeKana { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> NormalizeKanji { get; public set; }
    public abstract virtual Nullable`1<bool> get_NormalizeKana();
    public abstract virtual void set_NormalizeKana(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_NormalizeKanji();
    public abstract virtual void set_NormalizeKanji(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IKuromojiPartOfSpeechTokenFilter {
    [DataMemberAttribute]
public IEnumerable`1<string> StopTags { get; public set; }
    public abstract virtual IEnumerable`1<string> get_StopTags();
    public abstract virtual void set_StopTags(IEnumerable`1<string> value);
}
public interface OpenSearch.Client.IKuromojiReadingFormTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> UseRomaji { get; public set; }
    public abstract virtual Nullable`1<bool> get_UseRomaji();
    public abstract virtual void set_UseRomaji(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IKuromojiStemmerTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MinimumLength { get; public set; }
    public abstract virtual Nullable`1<int> get_MinimumLength();
    public abstract virtual void set_MinimumLength(Nullable`1<int> value);
}
public interface OpenSearch.Client.IKuromojiTokenizer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> DiscardPunctuation { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> DiscardCompoundToken { get; public set; }
    [DataMemberAttribute]
public Nullable`1<KuromojiTokenizationMode> Mode { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> NBestCost { get; public set; }
    [DataMemberAttribute]
public string NBestExamples { get; public set; }
    [DataMemberAttribute]
public string UserDictionary { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> UserDictionaryRules { get; public set; }
    public abstract virtual Nullable`1<bool> get_DiscardPunctuation();
    public abstract virtual void set_DiscardPunctuation(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_DiscardCompoundToken();
    public abstract virtual void set_DiscardCompoundToken(Nullable`1<bool> value);
    public abstract virtual Nullable`1<KuromojiTokenizationMode> get_Mode();
    public abstract virtual void set_Mode(Nullable`1<KuromojiTokenizationMode> value);
    public abstract virtual Nullable`1<int> get_NBestCost();
    public abstract virtual void set_NBestCost(Nullable`1<int> value);
    public abstract virtual string get_NBestExamples();
    public abstract virtual void set_NBestExamples(string value);
    public abstract virtual string get_UserDictionary();
    public abstract virtual void set_UserDictionary(string value);
    public abstract virtual IEnumerable`1<string> get_UserDictionaryRules();
    public abstract virtual void set_UserDictionaryRules(IEnumerable`1<string> value);
}
public interface OpenSearch.Client.ILanguageAnalyzer {
    [DataMemberAttribute]
public IEnumerable`1<string> StemExclusionList { get; public set; }
    [DataMemberAttribute]
public StopWords StopWords { get; public set; }
    [DataMemberAttribute]
public string StopwordsPath { get; public set; }
    public abstract virtual IEnumerable`1<string> get_StemExclusionList();
    public abstract virtual void set_StemExclusionList(IEnumerable`1<string> value);
    public abstract virtual StopWords get_StopWords();
    public abstract virtual void set_StopWords(StopWords value);
    public abstract virtual string get_StopwordsPath();
    public abstract virtual void set_StopwordsPath(string value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.LaplaceSmoothingModel")]
public interface OpenSearch.Client.ILaplaceSmoothingModel {
    [DataMemberAttribute]
public Nullable`1<double> Alpha { get; public set; }
    public abstract virtual Nullable`1<double> get_Alpha();
    public abstract virtual void set_Alpha(Nullable`1<double> value);
}
[JsonFormatterAttribute("OpenSearch.Client.LazyDocumentInterfaceFormatter")]
public interface OpenSearch.Client.ILazyDocument {
    public abstract virtual T As();
    public abstract virtual object As(Type objectType);
    public abstract virtual Task`1<T> AsAsync(CancellationToken ct);
    public abstract virtual Task`1<object> AsAsync(Type objectType, CancellationToken ct);
}
public interface OpenSearch.Client.ILengthTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> Max { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> Min { get; public set; }
    public abstract virtual Nullable`1<int> get_Max();
    public abstract virtual void set_Max(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Min();
    public abstract virtual void set_Min(Nullable`1<int> value);
}
public interface OpenSearch.Client.ILetterTokenizer {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.LikeDocument`1<System.Object>")]
public interface OpenSearch.Client.ILikeDocument {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1<System.Object>")]
public object Document { get; public set; }
    [DataMemberAttribute]
public Fields Fields { get; public set; }
    [DataMemberAttribute]
public Id Id { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public IPerFieldAnalyzer PerFieldAnalyzer { get; public set; }
    [DataMemberAttribute]
public Routing Routing { get; public set; }
    public abstract virtual object get_Document();
    public abstract virtual void set_Document(object value);
    public abstract virtual Fields get_Fields();
    public abstract virtual void set_Fields(Fields value);
    public abstract virtual Id get_Id();
    public abstract virtual void set_Id(Id value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual IPerFieldAnalyzer get_PerFieldAnalyzer();
    public abstract virtual void set_PerFieldAnalyzer(IPerFieldAnalyzer value);
    public abstract virtual Routing get_Routing();
    public abstract virtual void set_Routing(Routing value);
}
public interface OpenSearch.Client.ILimitTokenCountTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> ConsumeAllTokens { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxTokenCount { get; public set; }
    public abstract virtual Nullable`1<bool> get_ConsumeAllTokens();
    public abstract virtual void set_ConsumeAllTokens(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_MaxTokenCount();
    public abstract virtual void set_MaxTokenCount(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.LinearInterpolationSmoothingModel")]
public interface OpenSearch.Client.ILinearInterpolationSmoothingModel {
    [DataMemberAttribute]
public Nullable`1<double> BigramLambda { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> TrigramLambda { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> UnigramLambda { get; public set; }
    public abstract virtual Nullable`1<double> get_BigramLambda();
    public abstract virtual void set_BigramLambda(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_TrigramLambda();
    public abstract virtual void set_TrigramLambda(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_UnigramLambda();
    public abstract virtual void set_UnigramLambda(Nullable`1<double> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.LinearModel")]
public interface OpenSearch.Client.ILinearModel {
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.ILineStringGeoShape>")]
public interface OpenSearch.Client.ILineStringGeoShape {
    [DataMemberAttribute]
public IEnumerable`1<GeoCoordinate> Coordinates { get; public set; }
    public abstract virtual IEnumerable`1<GeoCoordinate> get_Coordinates();
    public abstract virtual void set_Coordinates(IEnumerable`1<GeoCoordinate> value);
}
[MapsApiAttribute("dangling_indices.list_dangling_indices.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IListDanglingIndicesRequest {
}
[MapsApiAttribute("tasks.list.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IListTasksRequest {
}
public interface OpenSearch.Client.ILMDirichletSimilarity {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> Mu { get; public set; }
    public abstract virtual Nullable`1<int> get_Mu();
    public abstract virtual void set_Mu(Nullable`1<int> value);
}
public interface OpenSearch.Client.ILMJelinekMercerSimilarity {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringDoubleFormatter")]
public Nullable`1<double> Lambda { get; public set; }
    public abstract virtual Nullable`1<double> get_Lambda();
    public abstract virtual void set_Lambda(Nullable`1<double> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ILongRangeProperty {
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.LongRangeQuery,OpenSearch.Client.ILongRangeQuery>")]
public interface OpenSearch.Client.ILongRangeQuery {
    [DataMemberAttribute]
public Nullable`1<long> GreaterThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> GreaterThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> LessThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> LessThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public Nullable`1<RangeRelation> Relation { get; public set; }
    public abstract virtual Nullable`1<long> get_GreaterThan();
    public abstract virtual void set_GreaterThan(Nullable`1<long> value);
    public abstract virtual Nullable`1<long> get_GreaterThanOrEqualTo();
    public abstract virtual void set_GreaterThanOrEqualTo(Nullable`1<long> value);
    public abstract virtual Nullable`1<long> get_LessThan();
    public abstract virtual void set_LessThan(Nullable`1<long> value);
    public abstract virtual Nullable`1<long> get_LessThanOrEqualTo();
    public abstract virtual void set_LessThanOrEqualTo(Nullable`1<long> value);
    public abstract virtual Nullable`1<RangeRelation> get_Relation();
    public abstract virtual void set_Relation(Nullable`1<RangeRelation> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ILowercaseProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
}
public interface OpenSearch.Client.ILowercaseTokenFilter {
    [DataMemberAttribute]
public string Language { get; public set; }
    public abstract virtual string get_Language();
    public abstract virtual void set_Language(string value);
}
public interface OpenSearch.Client.ILowercaseTokenizer {
}
public interface OpenSearch.Client.IMappingCharFilter {
    [DataMemberAttribute]
public IEnumerable`1<string> Mappings { get; public set; }
    [DataMemberAttribute]
public string MappingsPath { get; public set; }
    public abstract virtual IEnumerable`1<string> get_Mappings();
    public abstract virtual void set_Mappings(IEnumerable`1<string> value);
    public abstract virtual string get_MappingsPath();
    public abstract virtual void set_MappingsPath(string value);
}
public interface OpenSearch.Client.IMappingVisitor {
    public int Depth { get; public set; }
    public abstract virtual int get_Depth();
    public abstract virtual void set_Depth(int value);
    public abstract virtual void Visit(ITypeMapping mapping);
    public abstract virtual void Visit(ITextProperty property);
    public abstract virtual void Visit(IKeywordProperty property);
    public abstract virtual void Visit(IDateProperty property);
    public abstract virtual void Visit(IDateNanosProperty property);
    public abstract virtual void Visit(IBooleanProperty property);
    public abstract virtual void Visit(IBinaryProperty property);
    public abstract virtual void Visit(IObjectProperty property);
    public abstract virtual void Visit(INestedProperty property);
    public abstract virtual void Visit(IIpProperty property);
    public abstract virtual void Visit(IGeoPointProperty property);
    public abstract virtual void Visit(IGeoShapeProperty property);
    public abstract virtual void Visit(INumberProperty property);
    public abstract virtual void Visit(ICompletionProperty property);
    public abstract virtual void Visit(IMurmur3HashProperty property);
    public abstract virtual void Visit(ITokenCountProperty property);
    public abstract virtual void Visit(IPercolatorProperty property);
    public abstract virtual void Visit(IIntegerRangeProperty property);
    public abstract virtual void Visit(IFloatRangeProperty property);
    public abstract virtual void Visit(ILongRangeProperty property);
    public abstract virtual void Visit(IDoubleRangeProperty property);
    public abstract virtual void Visit(IDateRangeProperty property);
    public abstract virtual void Visit(IIpRangeProperty property);
    public abstract virtual void Visit(IJoinProperty property);
    public abstract virtual void Visit(IRankFeatureProperty property);
    public abstract virtual void Visit(IRankFeaturesProperty property);
    public abstract virtual void Visit(ISearchAsYouTypeProperty property);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MatchAllQuery")]
public interface OpenSearch.Client.IMatchAllQuery {
    [DataMemberAttribute]
public string NormField { get; public set; }
    public abstract virtual string get_NormField();
    public abstract virtual void set_NormField(string value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.MatchBoolPrefixQuery,OpenSearch.Client.IMatchBoolPrefixQuery>")]
public interface OpenSearch.Client.IMatchBoolPrefixQuery {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public IFuzziness Fuzziness { get; public set; }
    [DataMemberAttribute]
public MultiTermQueryRewrite FuzzyRewrite { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> FuzzyTranspositions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxExpansions { get; public set; }
    [DataMemberAttribute]
public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    [DataMemberAttribute]
public Nullable`1<Operator> Operator { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> PrefixLength { get; public set; }
    [DataMemberAttribute]
public string Query { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual IFuzziness get_Fuzziness();
    public abstract virtual void set_Fuzziness(IFuzziness value);
    public abstract virtual MultiTermQueryRewrite get_FuzzyRewrite();
    public abstract virtual void set_FuzzyRewrite(MultiTermQueryRewrite value);
    public abstract virtual Nullable`1<bool> get_FuzzyTranspositions();
    public abstract virtual void set_FuzzyTranspositions(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_MaxExpansions();
    public abstract virtual void set_MaxExpansions(Nullable`1<int> value);
    public abstract virtual MinimumShouldMatch get_MinimumShouldMatch();
    public abstract virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    public abstract virtual Nullable`1<Operator> get_Operator();
    public abstract virtual void set_Operator(Nullable`1<Operator> value);
    public abstract virtual Nullable`1<int> get_PrefixLength();
    public abstract virtual void set_PrefixLength(Nullable`1<int> value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MatchNoneQuery")]
public interface OpenSearch.Client.IMatchNoneQuery {
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.MatchPhrasePrefixQuery,OpenSearch.Client.IMatchPhrasePrefixQuery>")]
public interface OpenSearch.Client.IMatchPhrasePrefixQuery {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxExpansions { get; public set; }
    [DataMemberAttribute]
public string Query { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Slop { get; public set; }
    [DataMemberAttribute]
public Nullable`1<ZeroTermsQuery> ZeroTermsQuery { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<int> get_MaxExpansions();
    public abstract virtual void set_MaxExpansions(Nullable`1<int> value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual Nullable`1<int> get_Slop();
    public abstract virtual void set_Slop(Nullable`1<int> value);
    public abstract virtual Nullable`1<ZeroTermsQuery> get_ZeroTermsQuery();
    public abstract virtual void set_ZeroTermsQuery(Nullable`1<ZeroTermsQuery> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.MatchPhraseQuery,OpenSearch.Client.IMatchPhraseQuery>")]
public interface OpenSearch.Client.IMatchPhraseQuery {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public string Query { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Slop { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual Nullable`1<int> get_Slop();
    public abstract virtual void set_Slop(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.MatchQuery,OpenSearch.Client.IMatchQuery>")]
public interface OpenSearch.Client.IMatchQuery {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> AutoGenerateSynonymsPhraseQuery { get; public set; }
    [DataMemberAttribute]
public IFuzziness Fuzziness { get; public set; }
    [DataMemberAttribute]
public MultiTermQueryRewrite FuzzyRewrite { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> FuzzyTranspositions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Lenient { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxExpansions { get; public set; }
    [DataMemberAttribute]
public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    [DataMemberAttribute]
public Nullable`1<Operator> Operator { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> PrefixLength { get; public set; }
    [DataMemberAttribute]
public string Query { get; public set; }
    [DataMemberAttribute]
public Nullable`1<ZeroTermsQuery> ZeroTermsQuery { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<bool> get_AutoGenerateSynonymsPhraseQuery();
    public abstract virtual void set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    public abstract virtual IFuzziness get_Fuzziness();
    public abstract virtual void set_Fuzziness(IFuzziness value);
    public abstract virtual MultiTermQueryRewrite get_FuzzyRewrite();
    public abstract virtual void set_FuzzyRewrite(MultiTermQueryRewrite value);
    public abstract virtual Nullable`1<bool> get_FuzzyTranspositions();
    public abstract virtual void set_FuzzyTranspositions(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Lenient();
    public abstract virtual void set_Lenient(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_MaxExpansions();
    public abstract virtual void set_MaxExpansions(Nullable`1<int> value);
    public abstract virtual MinimumShouldMatch get_MinimumShouldMatch();
    public abstract virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    public abstract virtual Nullable`1<Operator> get_Operator();
    public abstract virtual void set_Operator(Nullable`1<Operator> value);
    public abstract virtual Nullable`1<int> get_PrefixLength();
    public abstract virtual void set_PrefixLength(Nullable`1<int> value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual Nullable`1<ZeroTermsQuery> get_ZeroTermsQuery();
    public abstract virtual void set_ZeroTermsQuery(Nullable`1<ZeroTermsQuery> value);
}
public interface OpenSearch.Client.IMatrixAggregation {
    [DataMemberAttribute]
public Fields Fields { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<Field, double> Missing { get; public set; }
    public abstract virtual Fields get_Fields();
    public abstract virtual void set_Fields(Fields value);
    public abstract virtual IDictionary`2<Field, double> get_Missing();
    public abstract virtual void set_Missing(IDictionary`2<Field, double> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MatrixStatsAggregation")]
public interface OpenSearch.Client.IMatrixStatsAggregation {
    [DataMemberAttribute]
public Nullable`1<MatrixStatsMode> Mode { get; public set; }
    public abstract virtual Nullable`1<MatrixStatsMode> get_Mode();
    public abstract virtual void set_Mode(Nullable`1<MatrixStatsMode> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MaxAggregation")]
public interface OpenSearch.Client.IMaxAggregation {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MaxBucketAggregation")]
public interface OpenSearch.Client.IMaxBucketAggregation {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MedianAbsoluteDeviationAggregation")]
public interface OpenSearch.Client.IMedianAbsoluteDeviationAggregation {
    [DataMemberAttribute]
public Nullable`1<double> Compression { get; public set; }
    public abstract virtual Nullable`1<double> get_Compression();
    public abstract virtual void set_Compression(Nullable`1<double> value);
}
public interface OpenSearch.Client.IMergePolicySettings {
    public Nullable`1<int> ExpungeDeletesAllowed { get; public set; }
    public string FloorSegment { get; public set; }
    public Nullable`1<int> MaxMergeAtOnce { get; public set; }
    public Nullable`1<int> MaxMergeAtOnceExplicit { get; public set; }
    public string MaxMergedSegment { get; public set; }
    public Nullable`1<double> ReclaimDeletesWeight { get; public set; }
    public Nullable`1<int> SegmentsPerTier { get; public set; }
    public abstract virtual Nullable`1<int> get_ExpungeDeletesAllowed();
    public abstract virtual void set_ExpungeDeletesAllowed(Nullable`1<int> value);
    public abstract virtual string get_FloorSegment();
    public abstract virtual void set_FloorSegment(string value);
    public abstract virtual Nullable`1<int> get_MaxMergeAtOnce();
    public abstract virtual void set_MaxMergeAtOnce(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaxMergeAtOnceExplicit();
    public abstract virtual void set_MaxMergeAtOnceExplicit(Nullable`1<int> value);
    public abstract virtual string get_MaxMergedSegment();
    public abstract virtual void set_MaxMergedSegment(string value);
    public abstract virtual Nullable`1<double> get_ReclaimDeletesWeight();
    public abstract virtual void set_ReclaimDeletesWeight(Nullable`1<double> value);
    public abstract virtual Nullable`1<int> get_SegmentsPerTier();
    public abstract virtual void set_SegmentsPerTier(Nullable`1<int> value);
}
public interface OpenSearch.Client.IMergeSchedulerSettings {
    public Nullable`1<bool> AutoThrottle { get; public set; }
    public Nullable`1<int> MaxThreadCount { get; public set; }
    public abstract virtual Nullable`1<bool> get_AutoThrottle();
    public abstract virtual void set_AutoThrottle(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_MaxThreadCount();
    public abstract virtual void set_MaxThreadCount(Nullable`1<int> value);
}
public interface OpenSearch.Client.IMergeSettings {
    public IMergePolicySettings Policy { get; public set; }
    public IMergeSchedulerSettings Scheduler { get; public set; }
    public abstract virtual IMergePolicySettings get_Policy();
    public abstract virtual void set_Policy(IMergePolicySettings value);
    public abstract virtual IMergeSchedulerSettings get_Scheduler();
    public abstract virtual void set_Scheduler(IMergeSchedulerSettings value);
}
public interface OpenSearch.Client.IMetricAggregation {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Missing { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<double> get_Missing();
    public abstract virtual void set_Missing(Nullable`1<double> value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MinAggregation")]
public interface OpenSearch.Client.IMinAggregation {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MinBucketAggregation")]
public interface OpenSearch.Client.IMinBucketAggregation {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MissingAggregation")]
public interface OpenSearch.Client.IMissingAggregation {
    [DataMemberAttribute]
public Field Field { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MoreLikeThisQuery")]
public interface OpenSearch.Client.IMoreLikeThisQuery {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> BoostTerms { get; public set; }
    [DataMemberAttribute]
public Fields Fields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Include { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<Like> Like { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxDocumentFrequency { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxQueryTerms { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxWordLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinDocumentFrequency { get; public set; }
    [DataMemberAttribute]
public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinTermFrequency { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinWordLength { get; public set; }
    [DataMemberAttribute]
public IPerFieldAnalyzer PerFieldAnalyzer { get; public set; }
    [DataMemberAttribute]
public Routing Routing { get; public set; }
    [DataMemberAttribute]
public StopWords StopWords { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<Like> Unlike { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> Version { get; public set; }
    [DataMemberAttribute]
public Nullable`1<VersionType> VersionType { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<double> get_BoostTerms();
    public abstract virtual void set_BoostTerms(Nullable`1<double> value);
    public abstract virtual Fields get_Fields();
    public abstract virtual void set_Fields(Fields value);
    public abstract virtual Nullable`1<bool> get_Include();
    public abstract virtual void set_Include(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<Like> get_Like();
    public abstract virtual void set_Like(IEnumerable`1<Like> value);
    public abstract virtual Nullable`1<int> get_MaxDocumentFrequency();
    public abstract virtual void set_MaxDocumentFrequency(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaxQueryTerms();
    public abstract virtual void set_MaxQueryTerms(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaxWordLength();
    public abstract virtual void set_MaxWordLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinDocumentFrequency();
    public abstract virtual void set_MinDocumentFrequency(Nullable`1<int> value);
    public abstract virtual MinimumShouldMatch get_MinimumShouldMatch();
    public abstract virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    public abstract virtual Nullable`1<int> get_MinTermFrequency();
    public abstract virtual void set_MinTermFrequency(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinWordLength();
    public abstract virtual void set_MinWordLength(Nullable`1<int> value);
    public abstract virtual IPerFieldAnalyzer get_PerFieldAnalyzer();
    public abstract virtual void set_PerFieldAnalyzer(IPerFieldAnalyzer value);
    public abstract virtual Routing get_Routing();
    public abstract virtual void set_Routing(Routing value);
    public abstract virtual StopWords get_StopWords();
    public abstract virtual void set_StopWords(StopWords value);
    public abstract virtual IEnumerable`1<Like> get_Unlike();
    public abstract virtual void set_Unlike(IEnumerable`1<Like> value);
    public abstract virtual Nullable`1<long> get_Version();
    public abstract virtual void set_Version(Nullable`1<long> value);
    public abstract virtual Nullable`1<VersionType> get_VersionType();
    public abstract virtual void set_VersionType(Nullable`1<VersionType> value);
}
public interface OpenSearch.Client.IMoveClusterRerouteCommand {
    [DataMemberAttribute]
public string FromNode { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Shard { get; public set; }
    [DataMemberAttribute]
public string ToNode { get; public set; }
    public abstract virtual string get_FromNode();
    public abstract virtual void set_FromNode(string value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual Nullable`1<int> get_Shard();
    public abstract virtual void set_Shard(Nullable`1<int> value);
    public abstract virtual string get_ToNode();
    public abstract virtual void set_ToNode(string value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.MovingAverageAggregationFormatter")]
public interface OpenSearch.Client.IMovingAverageAggregation {
    [DataMemberAttribute]
public Nullable`1<bool> Minimize { get; public set; }
    public IMovingAverageModel Model { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Predict { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Window { get; public set; }
    public abstract virtual Nullable`1<bool> get_Minimize();
    public abstract virtual void set_Minimize(Nullable`1<bool> value);
    public abstract virtual IMovingAverageModel get_Model();
    public abstract virtual void set_Model(IMovingAverageModel value);
    public abstract virtual Nullable`1<int> get_Predict();
    public abstract virtual void set_Predict(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Window();
    public abstract virtual void set_Window(Nullable`1<int> value);
}
public interface OpenSearch.Client.IMovingAverageModel {
    [IgnoreDataMemberAttribute]
public string Name { get; }
    public abstract virtual string get_Name();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MovingFunctionAggregation")]
public interface OpenSearch.Client.IMovingFunctionAggregation {
    [DataMemberAttribute]
public string Script { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Window { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Shift { get; public set; }
    public abstract virtual string get_Script();
    public abstract virtual void set_Script(string value);
    public abstract virtual Nullable`1<int> get_Window();
    public abstract virtual void set_Window(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Shift();
    public abstract virtual void set_Shift(Nullable`1<int> value);
}
public class OpenSearch.Client.ImportDanglingIndexDescriptor : RequestDescriptorBase`3<ImportDanglingIndexDescriptor, ImportDanglingIndexRequestParameters, IImportDanglingIndexRequest> {
    internal ApiUrls ApiUrls { get; }
    private IndexUuid OpenSearch.Client.IImportDanglingIndexRequest.IndexUuid { get; }
    public ImportDanglingIndexDescriptor(IndexUuid indexUuid);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexUuid OpenSearch.Client.IImportDanglingIndexRequest.get_IndexUuid();
    public ImportDanglingIndexDescriptor AcceptDataLoss(Nullable`1<bool> acceptdataloss);
    public ImportDanglingIndexDescriptor MasterTimeout(Time mastertimeout);
    public ImportDanglingIndexDescriptor ClusterManagerTimeout(Time timeout);
    public ImportDanglingIndexDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.ImportDanglingIndexRequest : PlainRequestBase`1<ImportDanglingIndexRequestParameters> {
    protected IImportDanglingIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexUuid OpenSearch.Client.IImportDanglingIndexRequest.IndexUuid { get; }
    public Nullable`1<bool> AcceptDataLoss { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public ImportDanglingIndexRequest(IndexUuid indexUuid);
    protected IImportDanglingIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexUuid OpenSearch.Client.IImportDanglingIndexRequest.get_IndexUuid();
    public Nullable`1<bool> get_AcceptDataLoss();
    public void set_AcceptDataLoss(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.ImportDanglingIndexResponse : AcknowledgedResponseBase {
}
public interface OpenSearch.Client.IMultiBucketsPath {
}
[ReadAsAttribute("OpenSearch.Client.MultiGetHit`1")]
public interface OpenSearch.Client.IMultiGetHit`1 {
    public Error Error { get; }
    public bool Found { get; }
    public string Id { get; }
    public string Index { get; }
    public string Routing { get; }
    public TDocument Source { get; }
    public string Type { get; }
    public long Version { get; }
    public Nullable`1<long> SequenceNumber { get; }
    public Nullable`1<long> PrimaryTerm { get; }
    public abstract virtual Error get_Error();
    public abstract virtual bool get_Found();
    public abstract virtual string get_Id();
    public abstract virtual string get_Index();
    public abstract virtual string get_Routing();
    public abstract virtual TDocument get_Source();
    public abstract virtual string get_Type();
    public abstract virtual long get_Version();
    public abstract virtual Nullable`1<long> get_SequenceNumber();
    public abstract virtual Nullable`1<long> get_PrimaryTerm();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MultiGetOperationDescriptor`1<System.Object>")]
public interface OpenSearch.Client.IMultiGetOperation {
    public bool CanBeFlattened { get; }
    public Type ClrType { get; }
    [DataMemberAttribute]
public Id Id { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public string Routing { get; public set; }
    [DataMemberAttribute]
public Union`2<bool, ISourceFilter> Source { get; public set; }
    [DataMemberAttribute]
public Fields StoredFields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> Version { get; public set; }
    [DataMemberAttribute]
public Nullable`1<VersionType> VersionType { get; public set; }
    public abstract virtual bool get_CanBeFlattened();
    public abstract virtual Type get_ClrType();
    public abstract virtual Id get_Id();
    public abstract virtual void set_Id(Id value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual string get_Routing();
    public abstract virtual void set_Routing(string value);
    public abstract virtual Union`2<bool, ISourceFilter> get_Source();
    public abstract virtual void set_Source(Union`2<bool, ISourceFilter> value);
    public abstract virtual Fields get_StoredFields();
    public abstract virtual void set_StoredFields(Fields value);
    public abstract virtual Nullable`1<long> get_Version();
    public abstract virtual void set_Version(Nullable`1<long> value);
    public abstract virtual Nullable`1<VersionType> get_VersionType();
    public abstract virtual void set_VersionType(Nullable`1<VersionType> value);
}
[MapsApiAttribute("mget.json")]
[JsonFormatterAttribute("OpenSearch.Client.MultiGetRequestFormatter")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IMultiGetRequest {
    [DataMemberAttribute]
public IEnumerable`1<IMultiGetOperation> Documents { get; public set; }
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [DataMemberAttribute]
public Fields StoredFields { get; public set; }
    public abstract virtual IEnumerable`1<IMultiGetOperation> get_Documents();
    public abstract virtual void set_Documents(IEnumerable`1<IMultiGetOperation> value);
    public abstract virtual IndexName get_Index();
    public abstract virtual Fields get_StoredFields();
    public abstract virtual void set_StoredFields(Fields value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.IMultiLineStringGeoShape>")]
public interface OpenSearch.Client.IMultiLineStringGeoShape {
    [DataMemberAttribute]
public IEnumerable`1<IEnumerable`1<GeoCoordinate>> Coordinates { get; public set; }
    public abstract virtual IEnumerable`1<IEnumerable`1<GeoCoordinate>> get_Coordinates();
    public abstract virtual void set_Coordinates(IEnumerable`1<IEnumerable`1<GeoCoordinate>> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MultiMatchQuery")]
public interface OpenSearch.Client.IMultiMatchQuery {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> AutoGenerateSynonymsPhraseQuery { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> CutoffFrequency { get; public set; }
    [DataMemberAttribute]
public Fields Fields { get; public set; }
    [DataMemberAttribute]
public Fuzziness Fuzziness { get; public set; }
    [DataMemberAttribute]
public MultiTermQueryRewrite FuzzyRewrite { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> FuzzyTranspositions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Lenient { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxExpansions { get; public set; }
    [DataMemberAttribute]
public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    [DataMemberAttribute]
public Nullable`1<Operator> Operator { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> PrefixLength { get; public set; }
    [DataMemberAttribute]
public string Query { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Slop { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> TieBreaker { get; public set; }
    [DataMemberAttribute]
public Nullable`1<TextQueryType> Type { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> UseDisMax { get; public set; }
    [DataMemberAttribute]
public Nullable`1<ZeroTermsQuery> ZeroTermsQuery { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<bool> get_AutoGenerateSynonymsPhraseQuery();
    public abstract virtual void set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    public abstract virtual Nullable`1<double> get_CutoffFrequency();
    public abstract virtual void set_CutoffFrequency(Nullable`1<double> value);
    public abstract virtual Fields get_Fields();
    public abstract virtual void set_Fields(Fields value);
    public abstract virtual Fuzziness get_Fuzziness();
    public abstract virtual void set_Fuzziness(Fuzziness value);
    public abstract virtual MultiTermQueryRewrite get_FuzzyRewrite();
    public abstract virtual void set_FuzzyRewrite(MultiTermQueryRewrite value);
    public abstract virtual Nullable`1<bool> get_FuzzyTranspositions();
    public abstract virtual void set_FuzzyTranspositions(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Lenient();
    public abstract virtual void set_Lenient(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_MaxExpansions();
    public abstract virtual void set_MaxExpansions(Nullable`1<int> value);
    public abstract virtual MinimumShouldMatch get_MinimumShouldMatch();
    public abstract virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    public abstract virtual Nullable`1<Operator> get_Operator();
    public abstract virtual void set_Operator(Nullable`1<Operator> value);
    public abstract virtual Nullable`1<int> get_PrefixLength();
    public abstract virtual void set_PrefixLength(Nullable`1<int> value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual Nullable`1<int> get_Slop();
    public abstract virtual void set_Slop(Nullable`1<int> value);
    public abstract virtual Nullable`1<double> get_TieBreaker();
    public abstract virtual void set_TieBreaker(Nullable`1<double> value);
    public abstract virtual Nullable`1<TextQueryType> get_Type();
    public abstract virtual void set_Type(Nullable`1<TextQueryType> value);
    public abstract virtual Nullable`1<bool> get_UseDisMax();
    public abstract virtual void set_UseDisMax(Nullable`1<bool> value);
    public abstract virtual Nullable`1<ZeroTermsQuery> get_ZeroTermsQuery();
    public abstract virtual void set_ZeroTermsQuery(Nullable`1<ZeroTermsQuery> value);
}
public interface OpenSearch.Client.IMultiplexerTokenFilter {
    [DataMemberAttribute]
public IEnumerable`1<string> Filters { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> PreserveOriginal { get; public set; }
    public abstract virtual IEnumerable`1<string> get_Filters();
    public abstract virtual void set_Filters(IEnumerable`1<string> value);
    public abstract virtual Nullable`1<bool> get_PreserveOriginal();
    public abstract virtual void set_PreserveOriginal(Nullable`1<bool> value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.IMultiPointGeoShape>")]
public interface OpenSearch.Client.IMultiPointGeoShape {
    [DataMemberAttribute]
public IEnumerable`1<GeoCoordinate> Coordinates { get; public set; }
    public abstract virtual IEnumerable`1<GeoCoordinate> get_Coordinates();
    public abstract virtual void set_Coordinates(IEnumerable`1<GeoCoordinate> value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.IMultiPolygonGeoShape>")]
public interface OpenSearch.Client.IMultiPolygonGeoShape {
    [DataMemberAttribute]
public IEnumerable`1<IEnumerable`1<IEnumerable`1<GeoCoordinate>>> Coordinates { get; public set; }
    public abstract virtual IEnumerable`1<IEnumerable`1<IEnumerable`1<GeoCoordinate>>> get_Coordinates();
    public abstract virtual void set_Coordinates(IEnumerable`1<IEnumerable`1<IEnumerable`1<GeoCoordinate>>> value);
}
[InterfaceDataContractAttribute]
[MapsApiAttribute("msearch.json")]
[JsonFormatterAttribute("OpenSearch.Client.MultiSearchFormatter")]
public interface OpenSearch.Client.IMultiSearchRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public IDictionary`2<string, ISearchRequest> Operations { get; public set; }
    public abstract virtual Indices get_Index();
    public abstract virtual IDictionary`2<string, ISearchRequest> get_Operations();
    public abstract virtual void set_Operations(IDictionary`2<string, ISearchRequest> value);
}
[InterfaceDataContractAttribute]
[MapsApiAttribute("msearch_template.json")]
[JsonFormatterAttribute("OpenSearch.Client.MultiSearchTemplateFormatter")]
public interface OpenSearch.Client.IMultiSearchTemplateRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public IDictionary`2<string, ISearchTemplateRequest> Operations { get; public set; }
    public abstract virtual Indices get_Index();
    public abstract virtual IDictionary`2<string, ISearchTemplateRequest> get_Operations();
    public abstract virtual void set_Operations(IDictionary`2<string, ISearchTemplateRequest> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MultiTermsAggregation")]
public interface OpenSearch.Client.IMultiTermsAggregation {
    [DataMemberAttribute]
public Nullable`1<TermsAggregationCollectMode> CollectMode { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinimumDocumentCount { get; public set; }
    [DataMemberAttribute]
public IList`1<TermsOrder> Order { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> ShardMinimumDocumentCount { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> ShardSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> ShowTermDocCountError { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<ITerm> Terms { get; public set; }
    public abstract virtual Nullable`1<TermsAggregationCollectMode> get_CollectMode();
    public abstract virtual void set_CollectMode(Nullable`1<TermsAggregationCollectMode> value);
    public abstract virtual Nullable`1<int> get_MinimumDocumentCount();
    public abstract virtual void set_MinimumDocumentCount(Nullable`1<int> value);
    public abstract virtual IList`1<TermsOrder> get_Order();
    public abstract virtual void set_Order(IList`1<TermsOrder> value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual Nullable`1<int> get_ShardMinimumDocumentCount();
    public abstract virtual void set_ShardMinimumDocumentCount(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_ShardSize();
    public abstract virtual void set_ShardSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_ShowTermDocCountError();
    public abstract virtual void set_ShowTermDocCountError(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
    public abstract virtual IEnumerable`1<ITerm> get_Terms();
    public abstract virtual void set_Terms(IEnumerable`1<ITerm> value);
}
public interface OpenSearch.Client.IMultiTermVectorOperation {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1")]
public object Document { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> FieldStatistics { get; public set; }
    [DataMemberAttribute]
public ITermVectorFilter Filter { get; public set; }
    [DataMemberAttribute]
public Id Id { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Offsets { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Payloads { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Positions { get; public set; }
    [DataMemberAttribute]
public Routing Routing { get; public set; }
    [DataMemberAttribute]
public Fields Fields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> TermStatistics { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> Version { get; public set; }
    [DataMemberAttribute]
public Nullable`1<VersionType> VersionType { get; public set; }
    public abstract virtual object get_Document();
    public abstract virtual void set_Document(object value);
    public abstract virtual Nullable`1<bool> get_FieldStatistics();
    public abstract virtual void set_FieldStatistics(Nullable`1<bool> value);
    public abstract virtual ITermVectorFilter get_Filter();
    public abstract virtual void set_Filter(ITermVectorFilter value);
    public abstract virtual Id get_Id();
    public abstract virtual void set_Id(Id value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual Nullable`1<bool> get_Offsets();
    public abstract virtual void set_Offsets(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Payloads();
    public abstract virtual void set_Payloads(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Positions();
    public abstract virtual void set_Positions(Nullable`1<bool> value);
    public abstract virtual Routing get_Routing();
    public abstract virtual void set_Routing(Routing value);
    public abstract virtual Fields get_Fields();
    public abstract virtual void set_Fields(Fields value);
    public abstract virtual Nullable`1<bool> get_TermStatistics();
    public abstract virtual void set_TermStatistics(Nullable`1<bool> value);
    public abstract virtual Nullable`1<long> get_Version();
    public abstract virtual void set_Version(Nullable`1<long> value);
    public abstract virtual Nullable`1<VersionType> get_VersionType();
    public abstract virtual void set_VersionType(Nullable`1<VersionType> value);
}
[MapsApiAttribute("mtermvectors.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IMultiTermVectorsRequest {
    [DataMemberAttribute]
public IEnumerable`1<IMultiTermVectorOperation> Documents { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<Id> Ids { get; public set; }
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    public abstract virtual IEnumerable`1<IMultiTermVectorOperation> get_Documents();
    public abstract virtual void set_Documents(IEnumerable`1<IMultiTermVectorOperation> value);
    public abstract virtual IEnumerable`1<Id> get_Ids();
    public abstract virtual void set_Ids(IEnumerable`1<Id> value);
    public abstract virtual IndexName get_Index();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IMurmur3HashProperty {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.MutualInformationHeuristic")]
public interface OpenSearch.Client.IMutualInformationHeuristic {
    [DataMemberAttribute]
public Nullable`1<bool> BackgroundIsSuperSet { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IncludeNegatives { get; public set; }
    public abstract virtual Nullable`1<bool> get_BackgroundIsSuperSet();
    public abstract virtual void set_BackgroundIsSuperSet(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeNegatives();
    public abstract virtual void set_IncludeNegatives(Nullable`1<bool> value);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.NamedFiltersContainer,OpenSearch.Client.INamedFiltersContainer,System.String,OpenSearch.Client.IQueryContainer>")]
public interface OpenSearch.Client.INamedFiltersContainer {
}
[JsonFormatterAttribute("OpenSearch.Client.IncludeExcludeFormatter")]
public class OpenSearch.Client.IncludeExclude : object {
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Values>k__BackingField;
    [IgnoreDataMemberAttribute]
public string Pattern { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Values { get; public set; }
    public IncludeExclude(string pattern);
    public IncludeExclude(IEnumerable`1<string> values);
    [CompilerGeneratedAttribute]
public string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(IEnumerable`1<string> value);
}
internal class OpenSearch.Client.IncludeExcludeFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, IncludeExclude value, IJsonFormatterResolver formatterResolver);
    public sealed virtual IncludeExclude Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.IndexAliases : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, AliasDefinition> <Aliases>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, AliasDefinition> Aliases { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, AliasDefinition> get_Aliases();
    [CompilerGeneratedAttribute]
internal void set_Aliases(IReadOnlyDictionary`2<string, AliasDefinition> value);
}
public class OpenSearch.Client.IndexBlock : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private static IndexBlock <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private static IndexBlock <Read>k__BackingField;
    [CompilerGeneratedAttribute]
private static IndexBlock <ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private static IndexBlock <Write>k__BackingField;
    public string Value { get; }
    public static IndexBlock Metadata { get; }
    public static IndexBlock Read { get; }
    public static IndexBlock ReadOnly { get; }
    public static IndexBlock Write { get; }
    private IndexBlock(string value);
    private static IndexBlock();
    [CompilerGeneratedAttribute]
public string get_Value();
    public sealed virtual string GetString(IConnectionConfigurationValues settings);
    [CompilerGeneratedAttribute]
public static IndexBlock get_Metadata();
    [CompilerGeneratedAttribute]
public static IndexBlock get_Read();
    [CompilerGeneratedAttribute]
public static IndexBlock get_ReadOnly();
    [CompilerGeneratedAttribute]
public static IndexBlock get_Write();
}
public class OpenSearch.Client.IndexDescriptor`1 : RequestDescriptorBase`3<IndexDescriptor`1<TDocument>, IndexRequestParameters, IIndexRequest`1<TDocument>> {
    [CompilerGeneratedAttribute]
private TDocument <OpenSearch.Client.IIndexRequest<TDocument>.Document>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.IIndexRequest<TDocument>.Index { get; }
    private Id OpenSearch.Client.IIndexRequest<TDocument>.Id { get; }
    protected HttpMethod HttpMethod { get; }
    private TDocument OpenSearch.Client.IIndexRequest<TDocument>.Document { get; private set; }
    public IndexDescriptor`1(IndexName index, Id id);
    public IndexDescriptor`1(IndexName index);
    public IndexDescriptor`1(Id id);
    public IndexDescriptor`1(TDocument documentWithId, IndexName index, Id id);
    internal virtual ApiUrls get_ApiUrls();
    private void DocumentFromPath(TDocument document);
    private sealed virtual override IndexName OpenSearch.Client.IIndexRequest<TDocument>.get_Index();
    private sealed virtual override Id OpenSearch.Client.IIndexRequest<TDocument>.get_Id();
    public IndexDescriptor`1<TDocument> Index(IndexName index);
    public IndexDescriptor`1<TDocument> Index();
    public IndexDescriptor`1<TDocument> Id(Id id);
    public IndexDescriptor`1<TDocument> IfPrimaryTerm(Nullable`1<long> ifprimaryterm);
    public IndexDescriptor`1<TDocument> IfSequenceNumber(Nullable`1<long> ifsequencenumber);
    public IndexDescriptor`1<TDocument> OpType(Nullable`1<OpType> optype);
    public IndexDescriptor`1<TDocument> Pipeline(string pipeline);
    public IndexDescriptor`1<TDocument> Refresh(Nullable`1<Refresh> refresh);
    public IndexDescriptor`1<TDocument> RequireAlias(Nullable`1<bool> requirealias);
    public IndexDescriptor`1<TDocument> Routing(Routing routing);
    public IndexDescriptor`1<TDocument> Timeout(Time timeout);
    public IndexDescriptor`1<TDocument> Version(Nullable`1<long> version);
    public IndexDescriptor`1<TDocument> VersionType(Nullable`1<VersionType> versiontype);
    public IndexDescriptor`1<TDocument> WaitForActiveShards(string waitforactiveshards);
    protected virtual HttpMethod get_HttpMethod();
    [CompilerGeneratedAttribute]
private sealed virtual override TDocument OpenSearch.Client.IIndexRequest<TDocument>.get_Document();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndexRequest<TDocument>.set_Document(TDocument value);
    private sealed virtual override void OpenSearch.Client.IProxyRequest.WriteJson(IOpenSearchSerializer sourceSerializer, Stream stream, SerializationFormatting formatting);
}
public class OpenSearch.Client.IndexedScript : ScriptBase {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string Id { get; public set; }
    public IndexedScript(string id);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(string value);
}
public class OpenSearch.Client.IndexedScriptDescriptor : ScriptDescriptorBase`2<IndexedScriptDescriptor, IIndexedScript> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIndexedScript.Id>k__BackingField;
    private string OpenSearch.Client.IIndexedScript.Id { get; private set; }
    public IndexedScriptDescriptor(string id);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIndexedScript.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndexedScript.set_Id(string value);
    public IndexedScriptDescriptor Id(string id);
}
public class OpenSearch.Client.IndexExistsDescriptor : RequestDescriptorBase`3<IndexExistsDescriptor, IndexExistsRequestParameters, IIndexExistsRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IIndexExistsRequest.Index { get; }
    public IndexExistsDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IIndexExistsRequest.get_Index();
    public IndexExistsDescriptor Index(Indices index);
    public IndexExistsDescriptor Index();
    public IndexExistsDescriptor AllIndices();
    public IndexExistsDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public IndexExistsDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public IndexExistsDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public IndexExistsDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public IndexExistsDescriptor IncludeDefaults(Nullable`1<bool> includedefaults);
    public IndexExistsDescriptor Local(Nullable`1<bool> local);
}
public class OpenSearch.Client.IndexExistsRequest : PlainRequestBase`1<IndexExistsRequestParameters> {
    protected IIndexExistsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IIndexExistsRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> IncludeDefaults { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public IndexExistsRequest(Indices index);
    protected IIndexExistsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IIndexExistsRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeDefaults();
    public void set_IncludeDefaults(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
}
[DataContractAttribute]
public class OpenSearch.Client.IndexHealthStats : object {
    [CompilerGeneratedAttribute]
private int <ActivePrimaryShards>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ActiveShards>k__BackingField;
    [CompilerGeneratedAttribute]
private int <InitializingShards>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumberOfReplicas>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumberOfShards>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RelocatingShards>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, ShardHealthStats> <Shards>k__BackingField;
    [CompilerGeneratedAttribute]
private Health <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UnassignedShards>k__BackingField;
    [DataMemberAttribute]
public int ActivePrimaryShards { get; internal set; }
    [DataMemberAttribute]
public int ActiveShards { get; internal set; }
    [DataMemberAttribute]
public int InitializingShards { get; internal set; }
    [DataMemberAttribute]
public int NumberOfReplicas { get; internal set; }
    [DataMemberAttribute]
public int NumberOfShards { get; internal set; }
    [DataMemberAttribute]
public int RelocatingShards { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.ShardHealthStats>")]
public IReadOnlyDictionary`2<string, ShardHealthStats> Shards { get; internal set; }
    [DataMemberAttribute]
public Health Status { get; internal set; }
    [DataMemberAttribute]
public int UnassignedShards { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_ActivePrimaryShards();
    [CompilerGeneratedAttribute]
internal void set_ActivePrimaryShards(int value);
    [CompilerGeneratedAttribute]
public int get_ActiveShards();
    [CompilerGeneratedAttribute]
internal void set_ActiveShards(int value);
    [CompilerGeneratedAttribute]
public int get_InitializingShards();
    [CompilerGeneratedAttribute]
internal void set_InitializingShards(int value);
    [CompilerGeneratedAttribute]
public int get_NumberOfReplicas();
    [CompilerGeneratedAttribute]
internal void set_NumberOfReplicas(int value);
    [CompilerGeneratedAttribute]
public int get_NumberOfShards();
    [CompilerGeneratedAttribute]
internal void set_NumberOfShards(int value);
    [CompilerGeneratedAttribute]
public int get_RelocatingShards();
    [CompilerGeneratedAttribute]
internal void set_RelocatingShards(int value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, ShardHealthStats> get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(IReadOnlyDictionary`2<string, ShardHealthStats> value);
    [CompilerGeneratedAttribute]
public Health get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(Health value);
    [CompilerGeneratedAttribute]
public int get_UnassignedShards();
    [CompilerGeneratedAttribute]
internal void set_UnassignedShards(int value);
}
public class OpenSearch.Client.IndexingBufferSettings : object {
    [CompilerGeneratedAttribute]
private string <IndexBufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexBufferSizeMaximum>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexBufferSizeMinimum>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShardBufferSizeMinimum>k__BackingField;
    public string IndexBufferSize { get; internal set; }
    public string IndexBufferSizeMaximum { get; internal set; }
    public string IndexBufferSizeMinimum { get; internal set; }
    public string ShardBufferSizeMinimum { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_IndexBufferSize();
    [CompilerGeneratedAttribute]
internal void set_IndexBufferSize(string value);
    [CompilerGeneratedAttribute]
public string get_IndexBufferSizeMaximum();
    [CompilerGeneratedAttribute]
internal void set_IndexBufferSizeMaximum(string value);
    [CompilerGeneratedAttribute]
public string get_IndexBufferSizeMinimum();
    [CompilerGeneratedAttribute]
internal void set_IndexBufferSizeMinimum(string value);
    [CompilerGeneratedAttribute]
public string get_ShardBufferSizeMinimum();
    [CompilerGeneratedAttribute]
internal void set_ShardBufferSizeMinimum(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.IndexingLoad : object {
    [CompilerGeneratedAttribute]
private long <CombinedCoordinatingAndPrimaryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CombinedCoordinatingAndPrimary>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CoordinatingInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Coordinating>k__BackingField;
    [CompilerGeneratedAttribute]
private long <PrimaryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Primary>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ReplicaInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Replica>k__BackingField;
    [CompilerGeneratedAttribute]
private long <AllInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <All>k__BackingField;
    [DataMemberAttribute]
public long CombinedCoordinatingAndPrimaryInBytes { get; internal set; }
    [DataMemberAttribute]
public string CombinedCoordinatingAndPrimary { get; internal set; }
    [DataMemberAttribute]
public long CoordinatingInBytes { get; internal set; }
    [DataMemberAttribute]
public string Coordinating { get; internal set; }
    [DataMemberAttribute]
public long PrimaryInBytes { get; internal set; }
    [DataMemberAttribute]
public string Primary { get; internal set; }
    [DataMemberAttribute]
public long ReplicaInBytes { get; internal set; }
    [DataMemberAttribute]
public string Replica { get; internal set; }
    [DataMemberAttribute]
public long AllInBytes { get; internal set; }
    [DataMemberAttribute]
public string All { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_CombinedCoordinatingAndPrimaryInBytes();
    [CompilerGeneratedAttribute]
internal void set_CombinedCoordinatingAndPrimaryInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_CombinedCoordinatingAndPrimary();
    [CompilerGeneratedAttribute]
internal void set_CombinedCoordinatingAndPrimary(string value);
    [CompilerGeneratedAttribute]
public long get_CoordinatingInBytes();
    [CompilerGeneratedAttribute]
internal void set_CoordinatingInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_Coordinating();
    [CompilerGeneratedAttribute]
internal void set_Coordinating(string value);
    [CompilerGeneratedAttribute]
public long get_PrimaryInBytes();
    [CompilerGeneratedAttribute]
internal void set_PrimaryInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_Primary();
    [CompilerGeneratedAttribute]
internal void set_Primary(string value);
    [CompilerGeneratedAttribute]
public long get_ReplicaInBytes();
    [CompilerGeneratedAttribute]
internal void set_ReplicaInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_Replica();
    [CompilerGeneratedAttribute]
internal void set_Replica(string value);
    [CompilerGeneratedAttribute]
public long get_AllInBytes();
    [CompilerGeneratedAttribute]
internal void set_AllInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_All();
    [CompilerGeneratedAttribute]
internal void set_All(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.IndexingPressureMemoryStats : object {
    [CompilerGeneratedAttribute]
private IndexingLoad <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private TotalIndexingLoad <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private long <LimitInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Limit>k__BackingField;
    [DataMemberAttribute]
public IndexingLoad Current { get; internal set; }
    [DataMemberAttribute]
public TotalIndexingLoad Total { get; internal set; }
    [DataMemberAttribute]
public long LimitInBytes { get; internal set; }
    [DataMemberAttribute]
public string Limit { get; internal set; }
    [CompilerGeneratedAttribute]
public IndexingLoad get_Current();
    [CompilerGeneratedAttribute]
internal void set_Current(IndexingLoad value);
    [CompilerGeneratedAttribute]
public TotalIndexingLoad get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(TotalIndexingLoad value);
    [CompilerGeneratedAttribute]
public long get_LimitInBytes();
    [CompilerGeneratedAttribute]
internal void set_LimitInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_Limit();
    [CompilerGeneratedAttribute]
internal void set_Limit(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.IndexingPressureStats : object {
    [CompilerGeneratedAttribute]
private IndexingPressureMemoryStats <Memory>k__BackingField;
    [DataMemberAttribute]
public IndexingPressureMemoryStats Memory { get; internal set; }
    [CompilerGeneratedAttribute]
public IndexingPressureMemoryStats get_Memory();
    [CompilerGeneratedAttribute]
internal void set_Memory(IndexingPressureMemoryStats value);
}
[DataContractAttribute]
public class OpenSearch.Client.IndexingStats : object {
    [CompilerGeneratedAttribute]
private long <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DeleteCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeleteTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DeleteTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DeleteTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsThrottled>k__BackingField;
    [CompilerGeneratedAttribute]
private long <NoopUpdateTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ThrottleTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ThrottleTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Time>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, IndexingStats> <Types>k__BackingField;
    [DataMemberAttribute]
public long Current { get; public set; }
    [DataMemberAttribute]
public long DeleteCurrent { get; public set; }
    [DataMemberAttribute]
public string DeleteTime { get; public set; }
    [DataMemberAttribute]
public long DeleteTimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public long DeleteTotal { get; public set; }
    [DataMemberAttribute]
public bool IsThrottled { get; public set; }
    [DataMemberAttribute]
public long NoopUpdateTotal { get; public set; }
    [DataMemberAttribute]
public string ThrottleTime { get; public set; }
    [DataMemberAttribute]
public long ThrottleTimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public string Time { get; public set; }
    [DataMemberAttribute]
public long TimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public long Total { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.IndexingStats>")]
public IReadOnlyDictionary`2<string, IndexingStats> Types { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(long value);
    [CompilerGeneratedAttribute]
public long get_DeleteCurrent();
    [CompilerGeneratedAttribute]
public void set_DeleteCurrent(long value);
    [CompilerGeneratedAttribute]
public string get_DeleteTime();
    [CompilerGeneratedAttribute]
public void set_DeleteTime(string value);
    [CompilerGeneratedAttribute]
public long get_DeleteTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_DeleteTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_DeleteTotal();
    [CompilerGeneratedAttribute]
public void set_DeleteTotal(long value);
    [CompilerGeneratedAttribute]
public bool get_IsThrottled();
    [CompilerGeneratedAttribute]
public void set_IsThrottled(bool value);
    [CompilerGeneratedAttribute]
public long get_NoopUpdateTotal();
    [CompilerGeneratedAttribute]
public void set_NoopUpdateTotal(long value);
    [CompilerGeneratedAttribute]
public string get_ThrottleTime();
    [CompilerGeneratedAttribute]
public void set_ThrottleTime(string value);
    [CompilerGeneratedAttribute]
public long get_ThrottleTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_ThrottleTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public string get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(string value);
    [CompilerGeneratedAttribute]
public long get_TimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_TimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(long value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, IndexingStats> get_Types();
    [CompilerGeneratedAttribute]
public void set_Types(IReadOnlyDictionary`2<string, IndexingStats> value);
}
[ExtensionAttribute]
public static class OpenSearch.Client.IndexManyExtensions : object {
    [ExtensionAttribute]
public static BulkResponse IndexMany(IOpenSearchClient client, IEnumerable`1<T> objects, IndexName index);
    [ExtensionAttribute]
public static Task`1<BulkResponse> IndexManyAsync(IOpenSearchClient client, IEnumerable`1<T> objects, IndexName index, CancellationToken cancellationToken);
    private static BulkRequest CreateIndexBulkRequest(IEnumerable`1<T> objects, IndexName index);
}
public class OpenSearch.Client.IndexMappings : object {
    [CompilerGeneratedAttribute]
private TypeMapping <Mappings>k__BackingField;
    [DataMemberAttribute]
public TypeMapping Mappings { get; internal set; }
    [CompilerGeneratedAttribute]
public TypeMapping get_Mappings();
    [CompilerGeneratedAttribute]
internal void set_Mappings(TypeMapping value);
}
public class OpenSearch.Client.IndexMetrics : object {
    private NodesStatsIndexMetric _enumValue;
    internal Enum Value { get; }
    internal IndexMetrics(NodesStatsIndexMetric metric);
    internal Enum get_Value();
    public sealed virtual bool Equals(IndexMetrics other);
    public sealed virtual string GetString(IConnectionConfigurationValues settings);
    public static IndexMetrics op_Implicit(NodesStatsIndexMetric metric);
    public bool Equals(Enum other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(IndexMetrics left, IndexMetrics right);
    public static bool op_Inequality(IndexMetrics left, IndexMetrics right);
}
[JsonFormatterAttribute("OpenSearch.Client.IndexNameFormatter")]
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.IndexName : object {
    private static char ClusterSeparator;
    [CompilerGeneratedAttribute]
private string <Cluster>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private static int <TypeHashCode>k__BackingField;
    public string Cluster { get; }
    public string Name { get; }
    public Type Type { get; }
    internal string DebugDisplay { get; }
    private static int TypeHashCode { get; }
    private IndexName(string index, string cluster);
    private IndexName(Type type, string cluster);
    private IndexName(string index, Type type, string cluster);
    private static IndexName();
    [CompilerGeneratedAttribute]
public string get_Cluster();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Type get_Type();
    internal string get_DebugDisplay();
    [CompilerGeneratedAttribute]
private static int get_TypeHashCode();
    private sealed virtual override bool System.IEquatable<OpenSearch.Client.IndexName>.Equals(IndexName other);
    public sealed virtual string GetString(IConnectionConfigurationValues settings);
    public static IndexName From();
    public static IndexName From(string clusterName);
    private static IndexName From(Type type, string clusterName);
    internal static IndexName Rebuild(string index, Type type, string clusterName);
    public Indices And();
    public Indices And(string clusterName);
    public Indices And(IndexName index);
    private static IndexName Parse(string indexName);
    public static IndexName op_Implicit(string indexName);
    public static IndexName op_Implicit(Type type);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(IndexName left, IndexName right);
    public static bool op_Inequality(IndexName left, IndexName right);
    public virtual string ToString();
    private string PrefixClusterName(string name);
    private static string PrefixClusterName(IndexName index, string name);
    private bool EqualsString(string other);
    private bool EqualsMarker(IndexName other);
}
[ExtensionAttribute]
public static class OpenSearch.Client.IndexNameExtensions : object {
    [ExtensionAttribute]
public static string Resolve(IndexName marker, IConnectionSettingsValues connectionSettings);
}
internal class OpenSearch.Client.IndexNameFormatter : object {
    public sealed virtual IndexName Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IndexName value, IJsonFormatterResolver formatterResolver);
    public sealed virtual void SerializeToPropertyName(JsonWriter& writer, IndexName value, IJsonFormatterResolver formatterResolver);
    public sealed virtual IndexName DeserializeFromPropertyName(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.IndexNameResolver : object {
    private IConnectionSettingsValues _connectionSettings;
    public IndexNameResolver(IConnectionSettingsValues connectionSettings);
    public string Resolve();
    public string Resolve(IndexName i);
    public string Resolve(Type type);
    private static string PrefixClusterName(IndexName i, string name);
    private static void ValidateIndexName(string indexName);
}
[StringEnumAttribute]
public enum OpenSearch.Client.IndexOptions : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IndexOptions Docs;
    [EnumMemberAttribute]
public static IndexOptions Freqs;
    [EnumMemberAttribute]
public static IndexOptions Positions;
    [EnumMemberAttribute]
public static IndexOptions Offsets;
}
public class OpenSearch.Client.IndexRequest`1 : PlainRequestBase`1<IndexRequestParameters> {
    [CompilerGeneratedAttribute]
private TDocument <Document>k__BackingField;
    public TDocument Document { get; public set; }
    protected HttpMethod HttpMethod { get; }
    protected IIndexRequest`1<TDocument> Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IIndexRequest<TDocument>.Index { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IIndexRequest<TDocument>.Id { get; }
    public Nullable`1<long> IfPrimaryTerm { get; public set; }
    public Nullable`1<long> IfSequenceNumber { get; public set; }
    public Nullable`1<OpType> OpType { get; public set; }
    public string Pipeline { get; public set; }
    public Nullable`1<Refresh> Refresh { get; public set; }
    public Nullable`1<bool> RequireAlias { get; public set; }
    public Routing Routing { get; public set; }
    public Time Timeout { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public IndexRequest`1(IndexName index, Id id);
    public IndexRequest`1(IndexName index);
    public IndexRequest`1(Id id);
    public IndexRequest`1(TDocument documentWithId, IndexName index, Id id);
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_Document();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Document(TDocument value);
    protected virtual HttpMethod get_HttpMethod();
    private sealed virtual override void OpenSearch.Client.IProxyRequest.WriteJson(IOpenSearchSerializer sourceSerializer, Stream stream, SerializationFormatting formatting);
    internal static HttpMethod GetHttpMethod(IIndexRequest`1<TDocument> request);
    protected IIndexRequest`1<TDocument> get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private void DocumentFromPath(TDocument document);
    private sealed virtual override IndexName OpenSearch.Client.IIndexRequest<TDocument>.get_Index();
    private sealed virtual override Id OpenSearch.Client.IIndexRequest<TDocument>.get_Id();
    public Nullable`1<long> get_IfPrimaryTerm();
    public void set_IfPrimaryTerm(Nullable`1<long> value);
    public Nullable`1<long> get_IfSequenceNumber();
    public void set_IfSequenceNumber(Nullable`1<long> value);
    public Nullable`1<OpType> get_OpType();
    public void set_OpType(Nullable`1<OpType> value);
    public string get_Pipeline();
    public void set_Pipeline(string value);
    public Nullable`1<Refresh> get_Refresh();
    public void set_Refresh(Nullable`1<Refresh> value);
    public Nullable`1<bool> get_RequireAlias();
    public void set_RequireAlias(Nullable`1<bool> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    public Nullable`1<VersionType> get_VersionType();
    public void set_VersionType(Nullable`1<VersionType> value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
internal class OpenSearch.Client.IndexRequestFormatter`1 : ProxyRequestFormatterBase`2<IIndexRequest`1<TDocument>, IndexRequest`1<TDocument>> {
}
[DataContractAttribute]
public class OpenSearch.Client.IndexResponse : WriteResponseBase {
    public bool IsValid { get; }
    public virtual bool get_IsValid();
}
public class OpenSearch.Client.IndexSettings : DynamicIndexSettings {
    [CompilerGeneratedAttribute]
private Nullable`1<FileSystemStorageImplementation> <FileSystemStorageImplementation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumberOfRoutingShards>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumberOfShards>k__BackingField;
    [CompilerGeneratedAttribute]
private IQueriesSettings <Queries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RoutingPartitionSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Hidden>k__BackingField;
    [CompilerGeneratedAttribute]
private ISortingSettings <Sorting>k__BackingField;
    [CompilerGeneratedAttribute]
private ISoftDeleteSettings <SoftDeletes>k__BackingField;
    public Nullable`1<FileSystemStorageImplementation> FileSystemStorageImplementation { get; public set; }
    public Nullable`1<int> NumberOfRoutingShards { get; public set; }
    public Nullable`1<int> NumberOfShards { get; public set; }
    public IQueriesSettings Queries { get; public set; }
    public Nullable`1<int> RoutingPartitionSize { get; public set; }
    public Nullable`1<bool> Hidden { get; public set; }
    public ISortingSettings Sorting { get; public set; }
    public ISoftDeleteSettings SoftDeletes { get; public set; }
    public IndexSettings(IDictionary`2<string, object> container);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<FileSystemStorageImplementation> get_FileSystemStorageImplementation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FileSystemStorageImplementation(Nullable`1<FileSystemStorageImplementation> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NumberOfRoutingShards();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NumberOfRoutingShards(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NumberOfShards();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NumberOfShards(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IQueriesSettings get_Queries();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Queries(IQueriesSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_RoutingPartitionSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RoutingPartitionSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Hidden();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Hidden(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISortingSettings get_Sorting();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sorting(ISortingSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual ISoftDeleteSettings get_SoftDeletes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SoftDeletes(ISoftDeleteSettings value);
}
public class OpenSearch.Client.IndexSettingsDescriptor : DynamicIndexSettingsDescriptorBase`2<IndexSettingsDescriptor, IndexSettings> {
    public IndexSettingsDescriptor NumberOfShards(Nullable`1<int> numberOfShards);
    public IndexSettingsDescriptor NumberOfRoutingShards(Nullable`1<int> numberOfRoutingShards);
    public IndexSettingsDescriptor RoutingPartitionSize(Nullable`1<int> routingPartitionSize);
    public IndexSettingsDescriptor Hidden(Nullable`1<bool> hidden);
    public IndexSettingsDescriptor FileSystemStorageImplementation(Nullable`1<FileSystemStorageImplementation> fs);
    public IndexSettingsDescriptor Queries(Func`2<QueriesSettingsDescriptor, IQueriesSettings> selector);
    public IndexSettingsDescriptor Sorting(Func`2<SortingSettingsDescriptor`1<T>, ISortingSettings> selector);
    public IndexSettingsDescriptor SoftDeletes(Func`2<SoftDeleteSettingsDescriptor, ISoftDeleteSettings> selector);
}
internal class OpenSearch.Client.IndexSettingsFormatter : object {
    private static DynamicIndexSettingsFormatter DynamicIndexSettingsFormatter;
    private static IndexSettingsFormatter();
    public sealed virtual void Serialize(JsonWriter& writer, IIndexSettings value, IJsonFormatterResolver formatterResolver);
    public sealed virtual IIndexSettings Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
[DataContractAttribute]
public class OpenSearch.Client.IndexShardStats : IndexStatsBase {
    [CompilerGeneratedAttribute]
private ShardRouting <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardCommitStats <Commit>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardSequenceNumberStats <SequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardRetentionLeasesStats <RetentionLeases>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardPath <ShardPath>k__BackingField;
    [DataMemberAttribute]
public ShardRouting Routing { get; internal set; }
    [DataMemberAttribute]
public ShardCommitStats Commit { get; internal set; }
    [DataMemberAttribute]
public ShardSequenceNumberStats SequenceNumber { get; internal set; }
    [DataMemberAttribute]
public ShardRetentionLeasesStats RetentionLeases { get; internal set; }
    [DataMemberAttribute]
public ShardPath ShardPath { get; internal set; }
    [CompilerGeneratedAttribute]
public ShardRouting get_Routing();
    [CompilerGeneratedAttribute]
internal void set_Routing(ShardRouting value);
    [CompilerGeneratedAttribute]
public ShardCommitStats get_Commit();
    [CompilerGeneratedAttribute]
internal void set_Commit(ShardCommitStats value);
    [CompilerGeneratedAttribute]
public ShardSequenceNumberStats get_SequenceNumber();
    [CompilerGeneratedAttribute]
internal void set_SequenceNumber(ShardSequenceNumberStats value);
    [CompilerGeneratedAttribute]
public ShardRetentionLeasesStats get_RetentionLeases();
    [CompilerGeneratedAttribute]
internal void set_RetentionLeases(ShardRetentionLeasesStats value);
    [CompilerGeneratedAttribute]
public ShardPath get_ShardPath();
    [CompilerGeneratedAttribute]
internal void set_ShardPath(ShardPath value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.IndexSortMissing : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IndexSortMissing First;
    [EnumMemberAttribute]
public static IndexSortMissing Last;
}
[StringEnumAttribute]
public enum OpenSearch.Client.IndexSortMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IndexSortMode Minimum;
    [EnumMemberAttribute]
public static IndexSortMode Maximum;
}
[StringEnumAttribute]
public enum OpenSearch.Client.IndexSortOrder : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IndexSortOrder Ascending;
    [EnumMemberAttribute]
public static IndexSortOrder Descending;
}
public static class OpenSearch.Client.IndexSortSettings : object {
    public static string Fields;
    public static string Missing;
    public static string Mode;
    public static string Order;
}
public class OpenSearch.Client.IndexState : object {
    [CompilerGeneratedAttribute]
private IAliases <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeMapping <Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <Settings>k__BackingField;
    public IAliases Aliases { get; public set; }
    public ITypeMapping Mappings { get; public set; }
    public IIndexSettings Settings { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IAliases get_Aliases();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
public sealed virtual ITypeMapping get_Mappings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mappings(ITypeMapping value);
    [CompilerGeneratedAttribute]
public sealed virtual IIndexSettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IIndexSettings value);
}
[DataContractAttribute]
public class OpenSearch.Client.IndexStats : IndexStatsBase {
}
[DataContractAttribute]
public abstract class OpenSearch.Client.IndexStatsBase : object {
    [CompilerGeneratedAttribute]
private DocStats <Documents>k__BackingField;
    [CompilerGeneratedAttribute]
private StoreStats <Store>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexingStats <Indexing>k__BackingField;
    [CompilerGeneratedAttribute]
private GetStats <Get>k__BackingField;
    [CompilerGeneratedAttribute]
private SearchStats <Search>k__BackingField;
    [CompilerGeneratedAttribute]
private MergesStats <Merges>k__BackingField;
    [CompilerGeneratedAttribute]
private RefreshStats <Refresh>k__BackingField;
    [CompilerGeneratedAttribute]
private FlushStats <Flush>k__BackingField;
    [CompilerGeneratedAttribute]
private WarmerStats <Warmer>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryCacheStats <QueryCache>k__BackingField;
    [CompilerGeneratedAttribute]
private FielddataStats <Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private CompletionStats <Completion>k__BackingField;
    [CompilerGeneratedAttribute]
private SegmentsStats <Segments>k__BackingField;
    [CompilerGeneratedAttribute]
private TranslogStats <Translog>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestCacheStats <RequestCache>k__BackingField;
    [CompilerGeneratedAttribute]
private RecoveryStats <Recovery>k__BackingField;
    [DataMemberAttribute]
public DocStats Documents { get; internal set; }
    [DataMemberAttribute]
public StoreStats Store { get; internal set; }
    [DataMemberAttribute]
public IndexingStats Indexing { get; internal set; }
    [DataMemberAttribute]
public GetStats Get { get; internal set; }
    [DataMemberAttribute]
public SearchStats Search { get; internal set; }
    [DataMemberAttribute]
public MergesStats Merges { get; internal set; }
    [DataMemberAttribute]
public RefreshStats Refresh { get; internal set; }
    [DataMemberAttribute]
public FlushStats Flush { get; internal set; }
    [DataMemberAttribute]
public WarmerStats Warmer { get; internal set; }
    [DataMemberAttribute]
public QueryCacheStats QueryCache { get; internal set; }
    [DataMemberAttribute]
public FielddataStats Fielddata { get; internal set; }
    [DataMemberAttribute]
public CompletionStats Completion { get; internal set; }
    [DataMemberAttribute]
public SegmentsStats Segments { get; internal set; }
    [DataMemberAttribute]
public TranslogStats Translog { get; internal set; }
    [DataMemberAttribute]
public RequestCacheStats RequestCache { get; internal set; }
    [DataMemberAttribute]
public RecoveryStats Recovery { get; internal set; }
    [CompilerGeneratedAttribute]
public DocStats get_Documents();
    [CompilerGeneratedAttribute]
internal void set_Documents(DocStats value);
    [CompilerGeneratedAttribute]
public StoreStats get_Store();
    [CompilerGeneratedAttribute]
internal void set_Store(StoreStats value);
    [CompilerGeneratedAttribute]
public IndexingStats get_Indexing();
    [CompilerGeneratedAttribute]
internal void set_Indexing(IndexingStats value);
    [CompilerGeneratedAttribute]
public GetStats get_Get();
    [CompilerGeneratedAttribute]
internal void set_Get(GetStats value);
    [CompilerGeneratedAttribute]
public SearchStats get_Search();
    [CompilerGeneratedAttribute]
internal void set_Search(SearchStats value);
    [CompilerGeneratedAttribute]
public MergesStats get_Merges();
    [CompilerGeneratedAttribute]
internal void set_Merges(MergesStats value);
    [CompilerGeneratedAttribute]
public RefreshStats get_Refresh();
    [CompilerGeneratedAttribute]
internal void set_Refresh(RefreshStats value);
    [CompilerGeneratedAttribute]
public FlushStats get_Flush();
    [CompilerGeneratedAttribute]
internal void set_Flush(FlushStats value);
    [CompilerGeneratedAttribute]
public WarmerStats get_Warmer();
    [CompilerGeneratedAttribute]
internal void set_Warmer(WarmerStats value);
    [CompilerGeneratedAttribute]
public QueryCacheStats get_QueryCache();
    [CompilerGeneratedAttribute]
internal void set_QueryCache(QueryCacheStats value);
    [CompilerGeneratedAttribute]
public FielddataStats get_Fielddata();
    [CompilerGeneratedAttribute]
internal void set_Fielddata(FielddataStats value);
    [CompilerGeneratedAttribute]
public CompletionStats get_Completion();
    [CompilerGeneratedAttribute]
internal void set_Completion(CompletionStats value);
    [CompilerGeneratedAttribute]
public SegmentsStats get_Segments();
    [CompilerGeneratedAttribute]
internal void set_Segments(SegmentsStats value);
    [CompilerGeneratedAttribute]
public TranslogStats get_Translog();
    [CompilerGeneratedAttribute]
internal void set_Translog(TranslogStats value);
    [CompilerGeneratedAttribute]
public RequestCacheStats get_RequestCache();
    [CompilerGeneratedAttribute]
internal void set_RequestCache(RequestCacheStats value);
    [CompilerGeneratedAttribute]
public RecoveryStats get_Recovery();
    [CompilerGeneratedAttribute]
internal void set_Recovery(RecoveryStats value);
}
public class OpenSearch.Client.IndexTemplateExistsDescriptor : RequestDescriptorBase`3<IndexTemplateExistsDescriptor, IndexTemplateExistsRequestParameters, IIndexTemplateExistsRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.IIndexTemplateExistsRequest.Name { get; }
    public IndexTemplateExistsDescriptor(Names name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IIndexTemplateExistsRequest.get_Name();
    public IndexTemplateExistsDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public IndexTemplateExistsDescriptor Local(Nullable`1<bool> local);
    public IndexTemplateExistsDescriptor MasterTimeout(Time mastertimeout);
    public IndexTemplateExistsDescriptor ClusterManagerTimeout(Time timeout);
}
public class OpenSearch.Client.IndexTemplateExistsRequest : PlainRequestBase`1<IndexTemplateExistsRequestParameters> {
    protected IIndexTemplateExistsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IIndexTemplateExistsRequest.Name { get; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public IndexTemplateExistsRequest(Names name);
    protected IIndexTemplateExistsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IIndexTemplateExistsRequest.get_Name();
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
public class OpenSearch.Client.IndexUuid : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; }
    public IndexUuid(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    public sealed virtual string GetString(IConnectionConfigurationValues settings);
    public sealed virtual bool Equals(IndexUuid other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(IndexUuid left, IndexUuid right);
    public static bool op_Inequality(IndexUuid left, IndexUuid right);
    public static IndexUuid op_Implicit(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.IndicesMultiSyntaxFormatter")]
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.Indices : Union`2<AllIndicesMarker, ManyIndices> {
    [CompilerGeneratedAttribute]
private static Indices <All>k__BackingField;
    public static Indices All { get; }
    public static Indices AllIndices { get; }
    private string DebugDisplay { get; }
    internal Indices(AllIndicesMarker all);
    internal Indices(ManyIndices indices);
    internal Indices(IEnumerable`1<IndexName> indices);
    private static Indices();
    [CompilerGeneratedAttribute]
public static Indices get_All();
    public static Indices get_AllIndices();
    private string get_DebugDisplay();
    public virtual string ToString();
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public static IndexName Index(string index);
    public static IndexName Index(IndexName index);
    public static IndexName Index();
    public static ManyIndices Index(IEnumerable`1<IndexName> indices);
    public static ManyIndices Index(IndexName[] indices);
    public static ManyIndices Index(IEnumerable`1<string> indices);
    public static ManyIndices Index(String[] indices);
    public static Indices Parse(string indicesString);
    public static Indices op_Implicit(string indicesString);
    public static Indices op_Implicit(ManyIndices many);
    public static Indices op_Implicit(String[] many);
    public static Indices op_Implicit(IndexName[] many);
    public static Indices op_Implicit(IndexName index);
    public static Indices op_Implicit(Type type);
    public static bool op_Equality(Indices left, Indices right);
    public static bool op_Inequality(Indices left, Indices right);
    public virtual bool Equals(object obj);
    private static bool EqualsAllIndices(IReadOnlyList`1<IndexName> thisIndices, IReadOnlyList`1<IndexName> otherIndices);
    public virtual int GetHashCode();
}
internal class OpenSearch.Client.IndicesBoostFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, IDictionary`2<IndexName, double> value, IJsonFormatterResolver formatterResolver);
    public sealed virtual IDictionary`2<IndexName, double> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
[ExtensionAttribute]
public static class OpenSearch.Client.IndicesExtensions : object {
    [ExtensionAttribute]
public static string Resolve(Indices marker, IConnectionSettingsValues connectionSettings);
}
internal class OpenSearch.Client.IndicesFormatter : object {
    public sealed virtual Indices Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Indices value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.IndicesModuleSettings : object {
    [CompilerGeneratedAttribute]
private ICircuitBreakerSettings <CircuitBreakerSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private FielddataSettings <FielddataSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QeueriesCacheSize>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndicesRecoverySettings <RecoverySettings>k__BackingField;
    public ICircuitBreakerSettings CircuitBreakerSettings { get; public set; }
    public FielddataSettings FielddataSettings { get; public set; }
    public string QeueriesCacheSize { get; public set; }
    public IIndicesRecoverySettings RecoverySettings { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ICircuitBreakerSettings get_CircuitBreakerSettings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CircuitBreakerSettings(ICircuitBreakerSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual FielddataSettings get_FielddataSettings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FielddataSettings(FielddataSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_QeueriesCacheSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QeueriesCacheSize(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IIndicesRecoverySettings get_RecoverySettings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RecoverySettings(IIndicesRecoverySettings value);
}
public class OpenSearch.Client.IndicesModuleSettingsDescriptor : DescriptorBase`2<IndicesModuleSettingsDescriptor, IIndicesModuleSettings> {
    [CompilerGeneratedAttribute]
private ICircuitBreakerSettings <OpenSearch.Client.IIndicesModuleSettings.CircuitBreakerSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private FielddataSettings <OpenSearch.Client.IIndicesModuleSettings.FielddataSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIndicesModuleSettings.QeueriesCacheSize>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndicesRecoverySettings <OpenSearch.Client.IIndicesModuleSettings.RecoverySettings>k__BackingField;
    private ICircuitBreakerSettings OpenSearch.Client.IIndicesModuleSettings.CircuitBreakerSettings { get; private set; }
    private FielddataSettings OpenSearch.Client.IIndicesModuleSettings.FielddataSettings { get; private set; }
    private string OpenSearch.Client.IIndicesModuleSettings.QeueriesCacheSize { get; private set; }
    private IIndicesRecoverySettings OpenSearch.Client.IIndicesModuleSettings.RecoverySettings { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override ICircuitBreakerSettings OpenSearch.Client.IIndicesModuleSettings.get_CircuitBreakerSettings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndicesModuleSettings.set_CircuitBreakerSettings(ICircuitBreakerSettings value);
    [CompilerGeneratedAttribute]
private sealed virtual override FielddataSettings OpenSearch.Client.IIndicesModuleSettings.get_FielddataSettings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndicesModuleSettings.set_FielddataSettings(FielddataSettings value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIndicesModuleSettings.get_QeueriesCacheSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndicesModuleSettings.set_QeueriesCacheSize(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIndicesRecoverySettings OpenSearch.Client.IIndicesModuleSettings.get_RecoverySettings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndicesModuleSettings.set_RecoverySettings(IIndicesRecoverySettings value);
    public IndicesModuleSettingsDescriptor CircuitBreaker(Func`2<CircuitBreakerSettingsDescriptor, ICircuitBreakerSettings> selector);
    public IndicesModuleSettingsDescriptor IndicesRecovery(Func`2<IndicesRecoverySettingsDescriptor, IIndicesRecoverySettings> selector);
}
internal class OpenSearch.Client.IndicesMultiSyntaxFormatter : object {
    public sealed virtual Indices Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Indices value, IJsonFormatterResolver formatterResolver);
}
[ExtensionAttribute]
public static class OpenSearch.Client.IndicesPointingToAliasExtensions : object {
    [ExtensionAttribute]
public static IReadOnlyCollection`1<string> GetIndicesPointingToAlias(IOpenSearchClient client, Names alias);
    [AsyncStateMachineAttribute("OpenSearch.Client.IndicesPointingToAliasExtensions/<GetIndicesPointingToAliasAsync>d__1")]
[ExtensionAttribute]
public static Task`1<IReadOnlyCollection`1<string>> GetIndicesPointingToAliasAsync(IOpenSearchClient client, Names alias);
    private static IReadOnlyCollection`1<string> IndicesPointingToAlias(IConnectionSettingsValues settings, IUrlParameter alias, GetAliasResponse aliasesResponse);
}
public class OpenSearch.Client.IndicesRecoverySettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConcurrentSmallFileStreams>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConcurrentStreams>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaxBytesPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TranslogOperations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TranslogSize>k__BackingField;
    public Nullable`1<bool> Compress { get; public set; }
    public Nullable`1<int> ConcurrentSmallFileStreams { get; public set; }
    public Nullable`1<int> ConcurrentStreams { get; public set; }
    public string FileChunkSize { get; public set; }
    public string MaxBytesPerSecond { get; public set; }
    public Nullable`1<int> TranslogOperations { get; public set; }
    public string TranslogSize { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Compress();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ConcurrentSmallFileStreams();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConcurrentSmallFileStreams(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ConcurrentStreams();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConcurrentStreams(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_FileChunkSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FileChunkSize(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MaxBytesPerSecond();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxBytesPerSecond(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_TranslogOperations();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TranslogOperations(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TranslogSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TranslogSize(string value);
}
public class OpenSearch.Client.IndicesRecoverySettingsDescriptor : DescriptorBase`2<IndicesRecoverySettingsDescriptor, IIndicesRecoverySettings> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IIndicesRecoverySettings.Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IIndicesRecoverySettings.ConcurrentSmallFileStreams>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IIndicesRecoverySettings.ConcurrentStreams>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIndicesRecoverySettings.FileChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIndicesRecoverySettings.MaxBytesPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IIndicesRecoverySettings.TranslogOperations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIndicesRecoverySettings.TranslogSize>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IIndicesRecoverySettings.Compress { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IIndicesRecoverySettings.ConcurrentSmallFileStreams { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IIndicesRecoverySettings.ConcurrentStreams { get; private set; }
    private string OpenSearch.Client.IIndicesRecoverySettings.FileChunkSize { get; private set; }
    private string OpenSearch.Client.IIndicesRecoverySettings.MaxBytesPerSecond { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IIndicesRecoverySettings.TranslogOperations { get; private set; }
    private string OpenSearch.Client.IIndicesRecoverySettings.TranslogSize { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IIndicesRecoverySettings.get_Compress();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndicesRecoverySettings.set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IIndicesRecoverySettings.get_ConcurrentSmallFileStreams();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndicesRecoverySettings.set_ConcurrentSmallFileStreams(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IIndicesRecoverySettings.get_ConcurrentStreams();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndicesRecoverySettings.set_ConcurrentStreams(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIndicesRecoverySettings.get_FileChunkSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndicesRecoverySettings.set_FileChunkSize(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIndicesRecoverySettings.get_MaxBytesPerSecond();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndicesRecoverySettings.set_MaxBytesPerSecond(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IIndicesRecoverySettings.get_TranslogOperations();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndicesRecoverySettings.set_TranslogOperations(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIndicesRecoverySettings.get_TranslogSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndicesRecoverySettings.set_TranslogSize(string value);
    public IndicesRecoverySettingsDescriptor ConcurrentStreams(Nullable`1<int> streams);
    public IndicesRecoverySettingsDescriptor ConcurrentSmallFileStreams(Nullable`1<int> streams);
    public IndicesRecoverySettingsDescriptor FileChunkSize(string size);
    public IndicesRecoverySettingsDescriptor TranslogOperations(Nullable`1<int> ops);
    public IndicesRecoverySettingsDescriptor TranslogSize(string size);
    public IndicesRecoverySettingsDescriptor Compress(Nullable`1<bool> compress);
    public IndicesRecoverySettingsDescriptor MaxBytesPerSecond(string max);
}
[DataContractAttribute]
public abstract class OpenSearch.Client.IndicesResponseBase : AcknowledgedResponseBase {
    [CompilerGeneratedAttribute]
private ShardStatistics <ShardsHit>k__BackingField;
    [DataMemberAttribute]
public ShardStatistics ShardsHit { get; internal set; }
    [CompilerGeneratedAttribute]
public ShardStatistics get_ShardsHit();
    [CompilerGeneratedAttribute]
internal void set_ShardsHit(ShardStatistics value);
}
public class OpenSearch.Client.IndicesShardStoresDescriptor : RequestDescriptorBase`3<IndicesShardStoresDescriptor, IndicesShardStoresRequestParameters, IIndicesShardStoresRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IIndicesShardStoresRequest.Index { get; }
    public IndicesShardStoresDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IIndicesShardStoresRequest.get_Index();
    public IndicesShardStoresDescriptor Index(Indices index);
    public IndicesShardStoresDescriptor Index();
    public IndicesShardStoresDescriptor AllIndices();
    public IndicesShardStoresDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public IndicesShardStoresDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public IndicesShardStoresDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public IndicesShardStoresDescriptor Status(String[] status);
}
public class OpenSearch.Client.IndicesShardStoresRequest : PlainRequestBase`1<IndicesShardStoresRequestParameters> {
    protected IIndicesShardStoresRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IIndicesShardStoresRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public String[] Status { get; public set; }
    public IndicesShardStoresRequest(Indices index);
    protected IIndicesShardStoresRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IIndicesShardStoresRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public String[] get_Status();
    public void set_Status(String[] value);
}
[DataContractAttribute]
public class OpenSearch.Client.IndicesStats : object {
    [CompilerGeneratedAttribute]
private string <Uuid>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexStats <Primaries>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexStats <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, IReadOnlyCollection`1<IndexShardStats>> <Shards>k__BackingField;
    [DataMemberAttribute]
public string Uuid { get; internal set; }
    [DataMemberAttribute]
public IndexStats Primaries { get; internal set; }
    [DataMemberAttribute]
public IndexStats Total { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, IReadOnlyCollection`1<IndexShardStats>> Shards { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Uuid();
    [CompilerGeneratedAttribute]
internal void set_Uuid(string value);
    [CompilerGeneratedAttribute]
public IndexStats get_Primaries();
    [CompilerGeneratedAttribute]
internal void set_Primaries(IndexStats value);
    [CompilerGeneratedAttribute]
public IndexStats get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(IndexStats value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, IReadOnlyCollection`1<IndexShardStats>> get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(IReadOnlyDictionary`2<string, IReadOnlyCollection`1<IndexShardStats>> value);
}
public class OpenSearch.Client.IndicesStatsDescriptor : RequestDescriptorBase`3<IndicesStatsDescriptor, IndicesStatsRequestParameters, IIndicesStatsRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IIndicesStatsRequest.Index { get; }
    private Metrics OpenSearch.Client.IIndicesStatsRequest.Metric { get; }
    public IndicesStatsDescriptor(Indices index);
    public IndicesStatsDescriptor(Indices index, Metrics metric);
    public IndicesStatsDescriptor(Metrics metric);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IIndicesStatsRequest.get_Index();
    private sealed virtual override Metrics OpenSearch.Client.IIndicesStatsRequest.get_Metric();
    public IndicesStatsDescriptor Index(Indices index);
    public IndicesStatsDescriptor Index();
    public IndicesStatsDescriptor AllIndices();
    public IndicesStatsDescriptor Metric(Metrics metric);
    public IndicesStatsDescriptor CompletionFields(Fields completionfields);
    public IndicesStatsDescriptor CompletionFields(Expression`1[] fields);
    public IndicesStatsDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public IndicesStatsDescriptor FielddataFields(Fields fielddatafields);
    public IndicesStatsDescriptor FielddataFields(Expression`1[] fields);
    public IndicesStatsDescriptor Fields(Fields fields);
    public IndicesStatsDescriptor Fields(Expression`1[] fields);
    public IndicesStatsDescriptor ForbidClosedIndices(Nullable`1<bool> forbidclosedindices);
    public IndicesStatsDescriptor Groups(String[] groups);
    public IndicesStatsDescriptor IncludeSegmentFileSizes(Nullable`1<bool> includesegmentfilesizes);
    public IndicesStatsDescriptor IncludeUnloadedSegments(Nullable`1<bool> includeunloadedsegments);
    public IndicesStatsDescriptor Level(Nullable`1<Level> level);
}
[JsonFormatterAttribute("OpenSearch.Client.IndicesStatsDictionary/Converter")]
public class OpenSearch.Client.IndicesStatsDictionary : ResolvableDictionaryProxy`2<IndexName, IndicesStats> {
    private IndicesStatsDictionary(IConnectionConfigurationValues s, IReadOnlyDictionary`2<IndexName, IndicesStats> d);
}
public class OpenSearch.Client.IndicesStatsRequest : PlainRequestBase`1<IndicesStatsRequestParameters> {
    protected IIndicesStatsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IIndicesStatsRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private Metrics OpenSearch.Client.IIndicesStatsRequest.Metric { get; }
    public Fields CompletionFields { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Fields FielddataFields { get; public set; }
    public Fields Fields { get; public set; }
    public Nullable`1<bool> ForbidClosedIndices { get; public set; }
    public String[] Groups { get; public set; }
    public Nullable`1<bool> IncludeSegmentFileSizes { get; public set; }
    public Nullable`1<bool> IncludeUnloadedSegments { get; public set; }
    public Nullable`1<Level> Level { get; public set; }
    public IndicesStatsRequest(Indices index);
    public IndicesStatsRequest(Indices index, Metrics metric);
    public IndicesStatsRequest(Metrics metric);
    protected IIndicesStatsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IIndicesStatsRequest.get_Index();
    private sealed virtual override Metrics OpenSearch.Client.IIndicesStatsRequest.get_Metric();
    public Fields get_CompletionFields();
    public void set_CompletionFields(Fields value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Fields get_FielddataFields();
    public void set_FielddataFields(Fields value);
    public Fields get_Fields();
    public void set_Fields(Fields value);
    public Nullable`1<bool> get_ForbidClosedIndices();
    public void set_ForbidClosedIndices(Nullable`1<bool> value);
    public String[] get_Groups();
    public void set_Groups(String[] value);
    public Nullable`1<bool> get_IncludeSegmentFileSizes();
    public void set_IncludeSegmentFileSizes(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeUnloadedSegments();
    public void set_IncludeUnloadedSegments(Nullable`1<bool> value);
    public Nullable`1<Level> get_Level();
    public void set_Level(Nullable`1<Level> value);
}
[DataContractAttribute]
public class OpenSearch.Client.IndicesStatsResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private AllIndicesStats <All>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardStatistics <Shards>k__BackingField;
    [CompilerGeneratedAttribute]
private IndicesStatsDictionary <Indices>k__BackingField;
    [DataMemberAttribute]
public AllIndicesStats All { get; internal set; }
    [DataMemberAttribute]
public ShardStatistics Shards { get; internal set; }
    [DataMemberAttribute]
public IndicesStatsDictionary Indices { get; internal set; }
    [CompilerGeneratedAttribute]
public AllIndicesStats get_All();
    [CompilerGeneratedAttribute]
internal void set_All(AllIndicesStats value);
    [CompilerGeneratedAttribute]
public ShardStatistics get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ShardStatistics value);
    [CompilerGeneratedAttribute]
public IndicesStatsDictionary get_Indices();
    [CompilerGeneratedAttribute]
internal void set_Indices(IndicesStatsDictionary value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.NestedAggregation")]
public interface OpenSearch.Client.INestedAggregation {
    [DataMemberAttribute]
public Field Path { get; public set; }
    public abstract virtual Field get_Path();
    public abstract virtual void set_Path(Field value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.INestedProperty {
    [DataMemberAttribute]
public Nullable`1<bool> IncludeInParent { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IncludeInRoot { get; public set; }
    public abstract virtual Nullable`1<bool> get_IncludeInParent();
    public abstract virtual void set_IncludeInParent(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeInRoot();
    public abstract virtual void set_IncludeInRoot(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.NestedQuery")]
public interface OpenSearch.Client.INestedQuery {
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    [DataMemberAttribute]
public IInnerHits InnerHits { get; public set; }
    [DataMemberAttribute]
public Field Path { get; public set; }
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    [DataMemberAttribute]
public Nullable`1<NestedScoreMode> ScoreMode { get; public set; }
    public abstract virtual Nullable`1<bool> get_IgnoreUnmapped();
    public abstract virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    public abstract virtual IInnerHits get_InnerHits();
    public abstract virtual void set_InnerHits(IInnerHits value);
    public abstract virtual Field get_Path();
    public abstract virtual void set_Path(Field value);
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
    public abstract virtual Nullable`1<NestedScoreMode> get_ScoreMode();
    public abstract virtual void set_ScoreMode(Nullable`1<NestedScoreMode> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.NestedSort")]
public interface OpenSearch.Client.INestedSort {
    [DataMemberAttribute]
public QueryContainer Filter { get; public set; }
    [DataMemberAttribute]
public INestedSort Nested { get; public set; }
    [DataMemberAttribute]
public Field Path { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxChildren { get; public set; }
    public abstract virtual QueryContainer get_Filter();
    public abstract virtual void set_Filter(QueryContainer value);
    public abstract virtual INestedSort get_Nested();
    public abstract virtual void set_Nested(INestedSort value);
    public abstract virtual Field get_Path();
    public abstract virtual void set_Path(Field value);
    public abstract virtual Nullable`1<int> get_MaxChildren();
    public abstract virtual void set_MaxChildren(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.INetworkCommunityIdProcessor {
    [DataMemberAttribute]
public Field DestinationIp { get; public set; }
    [DataMemberAttribute]
public Field DestinationPort { get; public set; }
    [DataMemberAttribute]
public Field IanaNumber { get; public set; }
    [DataMemberAttribute]
public Field IcmpType { get; public set; }
    [DataMemberAttribute]
public Field IcmpCode { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Seed { get; public set; }
    [DataMemberAttribute]
public Field SourceIp { get; public set; }
    [DataMemberAttribute]
public Field SourcePort { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    [DataMemberAttribute]
public Field Transport { get; public set; }
    public abstract virtual Field get_DestinationIp();
    public abstract virtual void set_DestinationIp(Field value);
    public abstract virtual Field get_DestinationPort();
    public abstract virtual void set_DestinationPort(Field value);
    public abstract virtual Field get_IanaNumber();
    public abstract virtual void set_IanaNumber(Field value);
    public abstract virtual Field get_IcmpType();
    public abstract virtual void set_IcmpType(Field value);
    public abstract virtual Field get_IcmpCode();
    public abstract virtual void set_IcmpCode(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_Seed();
    public abstract virtual void set_Seed(Nullable`1<int> value);
    public abstract virtual Field get_SourceIp();
    public abstract virtual void set_SourceIp(Field value);
    public abstract virtual Field get_SourcePort();
    public abstract virtual void set_SourcePort(Field value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
    public abstract virtual Field get_Transport();
    public abstract virtual void set_Transport(Field value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.INetworkDirectionProcessor {
    [DataMemberAttribute]
public Field DestinationIp { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> InternalNetworks { get; public set; }
    [DataMemberAttribute]
public Field SourceIp { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    public abstract virtual Field get_DestinationIp();
    public abstract virtual void set_DestinationIp(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_InternalNetworks();
    public abstract virtual void set_InternalNetworks(IEnumerable`1<string> value);
    public abstract virtual Field get_SourceIp();
    public abstract virtual void set_SourceIp(Field value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.NeuralQuery,OpenSearch.Client.INeuralQuery>")]
public interface OpenSearch.Client.INeuralQuery {
    [DataMemberAttribute]
public string QueryText { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> K { get; public set; }
    [DataMemberAttribute]
public string ModelId { get; public set; }
    public abstract virtual string get_QueryText();
    public abstract virtual void set_QueryText(string value);
    public abstract virtual Nullable`1<int> get_K();
    public abstract virtual void set_K(Nullable`1<int> value);
    public abstract virtual string get_ModelId();
    public abstract virtual void set_ModelId(string value);
}
public static class OpenSearch.Client.Infer : object {
    public static Indices AllIndices;
    private static Infer();
    public static IndexName Index(IndexName index);
    public static IndexName Index();
    public static IndexName Index(string clusterName);
    public static Indices Indices();
    public static Indices Indices(IndexName[] indices);
    public static Indices Indices(IEnumerable`1<IndexName> indices);
    public static RelationName Relation(string type);
    public static RelationName Relation(Type type);
    public static RelationName Relation();
    public static Routing Route(T instance);
    public static Names Names(String[] names);
    public static Names Names(IEnumerable`1<string> names);
    public static Id Id(T document);
    public static Fields Fields(Expression`1[] fields);
    public static Fields Fields(String[] fields);
    public static Fields Fields(PropertyInfo[] properties);
    public static Field Field(Expression`1<Func`2<T, TValue>> path, Nullable`1<double> boost, string format);
    public static Field Field(Expression`1<Func`2<T, object>> path, Nullable`1<double> boost, string format);
    public static Field Field(string field, Nullable`1<double> boost, string format);
    public static Field Field(PropertyInfo property, Nullable`1<double> boost, string format);
    public static PropertyName Property(string property);
    public static PropertyName Property(Expression`1<Func`2<T, TValue>> path);
    public static PropertyName Property(Expression`1<Func`2<T, object>> path);
}
public class OpenSearch.Client.InferenceFieldMap : IsADictionaryBase`2<Field, Field> {
    public InferenceFieldMap(IDictionary`2<Field, Field> container);
    public sealed virtual void Add(Field source, Field target);
}
public class OpenSearch.Client.InferenceFieldMapDescriptor`1 : IsADictionaryDescriptorBase`4<InferenceFieldMapDescriptor`1<TDocument>, InferenceFieldMap, Field, Field> {
    public InferenceFieldMapDescriptor`1<TDocument> Map(Field source, Field target);
    public InferenceFieldMapDescriptor`1<TDocument> Map(Expression`1<Func`2<TDocument, TSourceValue>> source, Field target);
    public InferenceFieldMapDescriptor`1<TDocument> Map(Field source, Expression`1<Func`2<TDocument, TTargetValue>> target);
    public InferenceFieldMapDescriptor`1<TDocument> Map(Expression`1<Func`2<TDocument, TSourceValue>> source, Expression`1<Func`2<TDocument, TTargetValue>> target);
}
public abstract class OpenSearch.Client.InferenceProcessorBase : ProcessorBase {
    [CompilerGeneratedAttribute]
private string <ModelId>k__BackingField;
    [CompilerGeneratedAttribute]
private IInferenceFieldMap <FieldMap>k__BackingField;
    public string ModelId { get; public set; }
    public IInferenceFieldMap FieldMap { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ModelId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ModelId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IInferenceFieldMap get_FieldMap();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FieldMap(IInferenceFieldMap value);
}
public abstract class OpenSearch.Client.InferenceProcessorDescriptorBase`3 : ProcessorDescriptorBase`2<TInferenceProcessorDescriptor, TInferenceProcessorInterface> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IInferenceProcessor.ModelId>k__BackingField;
    [CompilerGeneratedAttribute]
private IInferenceFieldMap <OpenSearch.Client.IInferenceProcessor.FieldMap>k__BackingField;
    private string OpenSearch.Client.IInferenceProcessor.ModelId { get; private set; }
    private IInferenceFieldMap OpenSearch.Client.IInferenceProcessor.FieldMap { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IInferenceProcessor.get_ModelId();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInferenceProcessor.set_ModelId(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IInferenceFieldMap OpenSearch.Client.IInferenceProcessor.get_FieldMap();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInferenceProcessor.set_FieldMap(IInferenceFieldMap value);
    public TInferenceProcessorDescriptor ModelId(string modelId);
    public TInferenceProcessorDescriptor FieldMap(IDictionary`2<Field, Field> fieldMap);
    public TInferenceProcessorDescriptor FieldMap(IInferenceFieldMap fieldMap);
    public TInferenceProcessorDescriptor FieldMap(Func`2<InferenceFieldMapDescriptor`1<T>, IPromise`1<IInferenceFieldMap>> selector);
    public TInferenceProcessorDescriptor FieldMap(Func`2<InferenceFieldMapDescriptor`1<TDocument>, IPromise`1<IInferenceFieldMap>> selector);
}
public class OpenSearch.Client.Inferrer : object {
    private IConnectionSettingsValues _connectionSettings;
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<Type, Action`3<MultiHitTuple, IJsonFormatterResolver, ICollection`1<IMultiGetHit`1<object>>>> <CreateMultiHitDelegates>k__BackingField;
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<Type, Action`3<SearchHitTuple, IJsonFormatterResolver, IDictionary`2<string, IResponse>>> <CreateSearchResponseDelegates>k__BackingField;
    [CompilerGeneratedAttribute]
private FieldResolver <FieldResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private IdResolver <IdResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexNameResolver <IndexNameResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private RelationNameResolver <RelationNameResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private RoutingResolver <RoutingResolver>k__BackingField;
    internal ConcurrentDictionary`2<Type, Action`3<MultiHitTuple, IJsonFormatterResolver, ICollection`1<IMultiGetHit`1<object>>>> CreateMultiHitDelegates { get; }
    internal ConcurrentDictionary`2<Type, Action`3<SearchHitTuple, IJsonFormatterResolver, IDictionary`2<string, IResponse>>> CreateSearchResponseDelegates { get; }
    private FieldResolver FieldResolver { get; }
    private IdResolver IdResolver { get; }
    private IndexNameResolver IndexNameResolver { get; }
    private RelationNameResolver RelationNameResolver { get; }
    private RoutingResolver RoutingResolver { get; }
    public Inferrer(IConnectionSettingsValues connectionSettings);
    [CompilerGeneratedAttribute]
internal ConcurrentDictionary`2<Type, Action`3<MultiHitTuple, IJsonFormatterResolver, ICollection`1<IMultiGetHit`1<object>>>> get_CreateMultiHitDelegates();
    [CompilerGeneratedAttribute]
internal ConcurrentDictionary`2<Type, Action`3<SearchHitTuple, IJsonFormatterResolver, IDictionary`2<string, IResponse>>> get_CreateSearchResponseDelegates();
    [CompilerGeneratedAttribute]
private FieldResolver get_FieldResolver();
    [CompilerGeneratedAttribute]
private IdResolver get_IdResolver();
    [CompilerGeneratedAttribute]
private IndexNameResolver get_IndexNameResolver();
    [CompilerGeneratedAttribute]
private RelationNameResolver get_RelationNameResolver();
    [CompilerGeneratedAttribute]
private RoutingResolver get_RoutingResolver();
    public string Resolve(IUrlParameter urlParameter);
    public string Field(Field field);
    public string PropertyName(PropertyName property);
    public string IndexName();
    public string IndexName(IndexName index);
    public string Id(T instance);
    public string Id(Type type, object instance);
    public string RelationName();
    public string RelationName(RelationName type);
    public string Routing(T document);
    public string Routing(Type type, object instance);
}
[DataContractAttribute]
public class OpenSearch.Client.Ingest : object {
    [CompilerGeneratedAttribute]
private DateTime <Timestamp>k__BackingField;
    [DataMemberAttribute]
public DateTime Timestamp { get; internal set; }
    [CompilerGeneratedAttribute]
public DateTime get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(DateTime value);
}
[DataContractAttribute]
public class OpenSearch.Client.IngestStats : object {
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<KeyedProcessorStats> <Processors>k__BackingField;
    [DataMemberAttribute]
public long Count { get; public set; }
    [DataMemberAttribute]
public long Current { get; public set; }
    [DataMemberAttribute]
public long Failed { get; public set; }
    [DataMemberAttribute]
public long TimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<KeyedProcessorStats> Processors { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public long get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(long value);
    [CompilerGeneratedAttribute]
public long get_Failed();
    [CompilerGeneratedAttribute]
public void set_Failed(long value);
    [CompilerGeneratedAttribute]
public long get_TimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_TimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<KeyedProcessorStats> get_Processors();
    [CompilerGeneratedAttribute]
internal void set_Processors(IReadOnlyCollection`1<KeyedProcessorStats> value);
}
public interface OpenSearch.Client.INGramTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxGram { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MinGram { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> PreserveOriginal { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxGram();
    public abstract virtual void set_MaxGram(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinGram();
    public abstract virtual void set_MinGram(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_PreserveOriginal();
    public abstract virtual void set_PreserveOriginal(Nullable`1<bool> value);
}
public interface OpenSearch.Client.INGramTokenizer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxGram { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MinGram { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<TokenChar> TokenChars { get; public set; }
    [DataMemberAttribute]
public string CustomTokenChars { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxGram();
    public abstract virtual void set_MaxGram(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinGram();
    public abstract virtual void set_MinGram(Nullable`1<int> value);
    public abstract virtual IEnumerable`1<TokenChar> get_TokenChars();
    public abstract virtual void set_TokenChars(IEnumerable`1<TokenChar> value);
    public abstract virtual string get_CustomTokenChars();
    public abstract virtual void set_CustomTokenChars(string value);
}
public class OpenSearch.Client.InlineGet`1 : object {
    [CompilerGeneratedAttribute]
private FieldValues <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Found>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <Source>k__BackingField;
    public FieldValues Fields { get; internal set; }
    public bool Found { get; internal set; }
    public TDocument Source { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual FieldValues get_Fields();
    [CompilerGeneratedAttribute]
internal void set_Fields(FieldValues value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Found();
    [CompilerGeneratedAttribute]
internal void set_Found(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_Source();
    [CompilerGeneratedAttribute]
internal void set_Source(TDocument value);
}
public class OpenSearch.Client.InlineScript : ScriptBase {
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    public string Source { get; public set; }
    public InlineScript(string script);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(string value);
    public static InlineScript op_Implicit(string script);
}
public class OpenSearch.Client.InlineScriptDescriptor : ScriptDescriptorBase`2<InlineScriptDescriptor, IInlineScript> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IInlineScript.Source>k__BackingField;
    private string OpenSearch.Client.IInlineScript.Source { get; private set; }
    public InlineScriptDescriptor(string script);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IInlineScript.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInlineScript.set_Source(string value);
    public InlineScriptDescriptor Source(string script);
}
public class OpenSearch.Client.InnerHits : object {
    [CompilerGeneratedAttribute]
private IFieldCollapse <Collapse>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <DocValueFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Explain>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <From>k__BackingField;
    [CompilerGeneratedAttribute]
private IHighlight <Highlight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptFields <ScriptFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISort> <Sort>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Version>k__BackingField;
    public IFieldCollapse Collapse { get; public set; }
    public Fields DocValueFields { get; public set; }
    public Nullable`1<bool> Explain { get; public set; }
    public Nullable`1<int> From { get; public set; }
    public IHighlight Highlight { get; public set; }
    public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    public string Name { get; public set; }
    public IScriptFields ScriptFields { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public IList`1<ISort> Sort { get; public set; }
    public Union`2<bool, ISourceFilter> Source { get; public set; }
    public Nullable`1<bool> Version { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IFieldCollapse get_Collapse();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Collapse(IFieldCollapse value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_DocValueFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DocValueFields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Explain();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Explain(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_From();
    [CompilerGeneratedAttribute]
public sealed virtual void set_From(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IHighlight get_Highlight();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Highlight(IHighlight value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IScriptFields get_ScriptFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScriptFields(IScriptFields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<ISort> get_Sort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sort(IList`1<ISort> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<bool, ISourceFilter> get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(Union`2<bool, ISourceFilter> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<bool> value);
}
[DataContractAttribute]
public class OpenSearch.Client.InnerHitsDescriptor`1 : DescriptorBase`2<InnerHitsDescriptor`1<T>, IInnerHits> {
    [CompilerGeneratedAttribute]
private IFieldCollapse <OpenSearch.Client.IInnerHits.Collapse>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IInnerHits.DocValueFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IInnerHits.Explain>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IInnerHits.From>k__BackingField;
    [CompilerGeneratedAttribute]
private IHighlight <OpenSearch.Client.IInnerHits.Highlight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IInnerHits.IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IInnerHits.Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptFields <OpenSearch.Client.IInnerHits.ScriptFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IInnerHits.Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISort> <OpenSearch.Client.IInnerHits.Sort>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <OpenSearch.Client.IInnerHits.Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IInnerHits.Version>k__BackingField;
    private IFieldCollapse OpenSearch.Client.IInnerHits.Collapse { get; private set; }
    private Fields OpenSearch.Client.IInnerHits.DocValueFields { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IInnerHits.Explain { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IInnerHits.From { get; private set; }
    private IHighlight OpenSearch.Client.IInnerHits.Highlight { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IInnerHits.IgnoreUnmapped { get; private set; }
    private string OpenSearch.Client.IInnerHits.Name { get; private set; }
    private IScriptFields OpenSearch.Client.IInnerHits.ScriptFields { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IInnerHits.Size { get; private set; }
    private IList`1<ISort> OpenSearch.Client.IInnerHits.Sort { get; private set; }
    private Union`2<bool, ISourceFilter> OpenSearch.Client.IInnerHits.Source { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IInnerHits.Version { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IFieldCollapse OpenSearch.Client.IInnerHits.get_Collapse();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_Collapse(IFieldCollapse value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IInnerHits.get_DocValueFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_DocValueFields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IInnerHits.get_Explain();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_Explain(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IInnerHits.get_From();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_From(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IHighlight OpenSearch.Client.IInnerHits.get_Highlight();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_Highlight(IHighlight value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IInnerHits.get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IInnerHits.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_Name(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScriptFields OpenSearch.Client.IInnerHits.get_ScriptFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_ScriptFields(IScriptFields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IInnerHits.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<ISort> OpenSearch.Client.IInnerHits.get_Sort();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_Sort(IList`1<ISort> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<bool, ISourceFilter> OpenSearch.Client.IInnerHits.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_Source(Union`2<bool, ISourceFilter> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IInnerHits.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IInnerHits.set_Version(Nullable`1<bool> value);
    public InnerHitsDescriptor`1<T> From(Nullable`1<int> from);
    public InnerHitsDescriptor`1<T> Size(Nullable`1<int> size);
    public InnerHitsDescriptor`1<T> Name(string name);
    public InnerHitsDescriptor`1<T> Explain(Nullable`1<bool> explain);
    public InnerHitsDescriptor`1<T> Version(Nullable`1<bool> version);
    public InnerHitsDescriptor`1<T> Sort(Func`2<SortDescriptor`1<T>, IPromise`1<IList`1<ISort>>> selector);
    public InnerHitsDescriptor`1<T> Highlight(Func`2<HighlightDescriptor`1<T>, IHighlight> selector);
    public InnerHitsDescriptor`1<T> Source(bool enabled);
    public InnerHitsDescriptor`1<T> Source(Func`2<SourceFilterDescriptor`1<T>, ISourceFilter> selector);
    public InnerHitsDescriptor`1<T> ScriptFields(Func`2<ScriptFieldsDescriptor, IPromise`1<IScriptFields>> selector);
    public InnerHitsDescriptor`1<T> DocValueFields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public InnerHitsDescriptor`1<T> DocValueFields(Fields fields);
    public InnerHitsDescriptor`1<T> IgnoreUnmapped(Nullable`1<bool> ignoreUnmapped);
    public InnerHitsDescriptor`1<T> Collapse(Func`2<FieldCollapseDescriptor`1<T>, IFieldCollapse> collapseSelector);
}
public class OpenSearch.Client.InnerHitsMetadata : object {
    [CompilerGeneratedAttribute]
private List`1<IHit`1<ILazyDocument>> <Hits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MaxScore>k__BackingField;
    [CompilerGeneratedAttribute]
private TotalHits <Total>k__BackingField;
    [DataMemberAttribute]
public List`1<IHit`1<ILazyDocument>> Hits { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<double> MaxScore { get; internal set; }
    [DataMemberAttribute]
public TotalHits Total { get; internal set; }
    [CompilerGeneratedAttribute]
public List`1<IHit`1<ILazyDocument>> get_Hits();
    [CompilerGeneratedAttribute]
internal void set_Hits(List`1<IHit`1<ILazyDocument>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_MaxScore();
    [CompilerGeneratedAttribute]
internal void set_MaxScore(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public TotalHits get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(TotalHits value);
    public IEnumerable`1<T> Documents();
}
public class OpenSearch.Client.InnerHitsResult : object {
    [CompilerGeneratedAttribute]
private InnerHitsMetadata <Hits>k__BackingField;
    [DataMemberAttribute]
public InnerHitsMetadata Hits { get; internal set; }
    [CompilerGeneratedAttribute]
public InnerHitsMetadata get_Hits();
    [CompilerGeneratedAttribute]
internal void set_Hits(InnerHitsMetadata value);
    public IEnumerable`1<T> Documents();
}
[MapsApiAttribute("nodes.hot_threads.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.INodesHotThreadsRequest {
    [IgnoreDataMemberAttribute]
public NodeIds NodeId { get; }
    public abstract virtual NodeIds get_NodeId();
}
[MapsApiAttribute("nodes.info.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.INodesInfoRequest {
    [IgnoreDataMemberAttribute]
public NodeIds NodeId { get; }
    [IgnoreDataMemberAttribute]
public Metrics Metric { get; }
    public abstract virtual NodeIds get_NodeId();
    public abstract virtual Metrics get_Metric();
}
[MapsApiAttribute("nodes.stats.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.INodesStatsRequest {
    [IgnoreDataMemberAttribute]
public NodeIds NodeId { get; }
    [IgnoreDataMemberAttribute]
public Metrics Metric { get; }
    [IgnoreDataMemberAttribute]
public IndexMetrics IndexMetric { get; }
    public abstract virtual NodeIds get_NodeId();
    public abstract virtual Metrics get_Metric();
    public abstract virtual IndexMetrics get_IndexMetric();
}
[MapsApiAttribute("nodes.usage.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.INodesUsageRequest {
    [IgnoreDataMemberAttribute]
public NodeIds NodeId { get; }
    [IgnoreDataMemberAttribute]
public Metrics Metric { get; }
    public abstract virtual NodeIds get_NodeId();
    public abstract virtual Metrics get_Metric();
}
public interface OpenSearch.Client.INoriAnalyzer {
    [DataMemberAttribute]
public Nullable`1<NoriDecompoundMode> DecompoundMode { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> StopTags { get; public set; }
    [DataMemberAttribute]
public string UserDictionary { get; public set; }
    public abstract virtual Nullable`1<NoriDecompoundMode> get_DecompoundMode();
    public abstract virtual void set_DecompoundMode(Nullable`1<NoriDecompoundMode> value);
    public abstract virtual IEnumerable`1<string> get_StopTags();
    public abstract virtual void set_StopTags(IEnumerable`1<string> value);
    public abstract virtual string get_UserDictionary();
    public abstract virtual void set_UserDictionary(string value);
}
public interface OpenSearch.Client.INoriPartOfSpeechTokenFilter {
    [DataMemberAttribute]
public IEnumerable`1<string> StopTags { get; public set; }
    public abstract virtual IEnumerable`1<string> get_StopTags();
    public abstract virtual void set_StopTags(IEnumerable`1<string> value);
}
public interface OpenSearch.Client.INoriTokenizer {
    [DataMemberAttribute]
public Nullable`1<NoriDecompoundMode> DecompoundMode { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> DiscardPunctuation { get; public set; }
    [DataMemberAttribute]
public string UserDictionary { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> UserDictionaryRules { get; public set; }
    public abstract virtual Nullable`1<NoriDecompoundMode> get_DecompoundMode();
    public abstract virtual void set_DecompoundMode(Nullable`1<NoriDecompoundMode> value);
    public abstract virtual Nullable`1<bool> get_DiscardPunctuation();
    public abstract virtual void set_DiscardPunctuation(Nullable`1<bool> value);
    public abstract virtual string get_UserDictionary();
    public abstract virtual void set_UserDictionary(string value);
    public abstract virtual IEnumerable`1<string> get_UserDictionaryRules();
    public abstract virtual void set_UserDictionaryRules(IEnumerable`1<string> value);
}
[JsonFormatterAttribute("OpenSearch.Client.NormalizerFormatter")]
public interface OpenSearch.Client.INormalizer {
    [DataMemberAttribute]
public string Type { get; }
    [DataMemberAttribute]
public string Version { get; public set; }
    public abstract virtual string get_Type();
    public abstract virtual string get_Version();
    public abstract virtual void set_Version(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.Normalizers,OpenSearch.Client.INormalizers,System.String,OpenSearch.Client.INormalizer>")]
public interface OpenSearch.Client.INormalizers {
}
public class OpenSearch.Client.IntegerRange : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LessThanOrEqualTo>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<int> GreaterThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> GreaterThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> LessThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> LessThanOrEqualTo { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_GreaterThan();
    [CompilerGeneratedAttribute]
public void set_GreaterThan(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_GreaterThanOrEqualTo(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LessThan();
    [CompilerGeneratedAttribute]
public void set_LessThan(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_LessThanOrEqualTo(Nullable`1<int> value);
}
public class OpenSearch.Client.IntegerRangeAttribute : RangePropertyAttributeBase {
}
public class OpenSearch.Client.IntegerRangeProperty : RangePropertyBase {
}
public class OpenSearch.Client.IntegerRangePropertyDescriptor`1 : RangePropertyDescriptorBase`3<IntegerRangePropertyDescriptor`1<T>, IIntegerRangeProperty, T> {
}
internal class OpenSearch.Client.InterfaceDictionaryFormatter`3 : InterfaceDictionaryFormatterBase`3<TKey, TValue, TDictionary> {
    public InterfaceDictionaryFormatter`3(ObjectActivator`1<TDictionary> activator, bool parameterlessCtor);
    protected virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetSourceEnumerator(TDictionary source);
    protected virtual TDictionary Complete(Dictionary`2& intermediateCollection);
}
internal abstract class OpenSearch.Client.InterfaceDictionaryFormatterBase`3 : object {
    protected ObjectActivator`1<TDictionary> Activator;
    protected bool ParameterlessCtor;
    public InterfaceDictionaryFormatterBase`3(ObjectActivator`1<TDictionary> activator, bool parameterlessCtor);
    public sealed virtual TDictionary Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TDictionary value, IJsonFormatterResolver formatterResolver);
    private Dictionary`2<TKey, TValue> Create();
    private void Add(Dictionary`2& collection, TKey key, TValue value);
    protected abstract virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetSourceEnumerator(TDictionary source);
    protected abstract virtual TDictionary Complete(Dictionary`2& intermediateCollection);
}
internal class OpenSearch.Client.InterfaceGenericDictionaryResolver : object {
    public static InterfaceGenericDictionaryResolver Instance;
    private static InterfaceGenericDictionaryResolver();
    public sealed virtual IJsonFormatter`1<T> GetFormatter();
    internal static bool IsGenericIDictionary(Type type);
}
internal class OpenSearch.Client.InterfaceGenericReadOnlyDictionaryResolver : object {
    public static InterfaceGenericReadOnlyDictionaryResolver Instance;
    private static InterfaceGenericReadOnlyDictionaryResolver();
    public sealed virtual IJsonFormatter`1<T> GetFormatter();
    internal static bool IsGenericIReadOnlyDictionary(Type type);
}
internal class OpenSearch.Client.InterfaceReadOnlyDictionaryFormatter`3 : InterfaceDictionaryFormatterBase`3<TKey, TValue, TDictionary> {
    public InterfaceReadOnlyDictionaryFormatter`3(ObjectActivator`1<TDictionary> activator, bool parameterlessCtor);
    protected virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetSourceEnumerator(TDictionary source);
    protected virtual TDictionary Complete(Dictionary`2& intermediateCollection);
}
public class OpenSearch.Client.IntervalsAllOf : IntervalsBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IntervalsContainer> <Intervals>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxGaps>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Ordered>k__BackingField;
    public IEnumerable`1<IntervalsContainer> Intervals { get; public set; }
    public Nullable`1<int> MaxGaps { get; public set; }
    public Nullable`1<bool> Ordered { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IntervalsContainer> get_Intervals();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Intervals(IEnumerable`1<IntervalsContainer> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxGaps();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxGaps(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Ordered();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ordered(Nullable`1<bool> value);
    internal virtual void WrapInContainer(IIntervalsContainer container);
}
public class OpenSearch.Client.IntervalsAllOfDescriptor : IntervalsDescriptorBase`2<IntervalsAllOfDescriptor, IIntervalsAllOf> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IntervalsContainer> <OpenSearch.Client.IIntervalsAllOf.Intervals>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IIntervalsAllOf.MaxGaps>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IIntervalsAllOf.Ordered>k__BackingField;
    private IEnumerable`1<IntervalsContainer> OpenSearch.Client.IIntervalsAllOf.Intervals { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IIntervalsAllOf.MaxGaps { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IIntervalsAllOf.Ordered { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IntervalsContainer> OpenSearch.Client.IIntervalsAllOf.get_Intervals();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsAllOf.set_Intervals(IEnumerable`1<IntervalsContainer> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IIntervalsAllOf.get_MaxGaps();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsAllOf.set_MaxGaps(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IIntervalsAllOf.get_Ordered();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsAllOf.set_Ordered(Nullable`1<bool> value);
    public IntervalsAllOfDescriptor MaxGaps(Nullable`1<int> maxGaps);
    public IntervalsAllOfDescriptor Ordered(Nullable`1<bool> ordered);
    public IntervalsAllOfDescriptor Intervals(Func`2<IntervalsListDescriptor, IPromise`1<List`1<IntervalsContainer>>> selector);
}
public class OpenSearch.Client.IntervalsAnyOf : IntervalsBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IntervalsContainer> <Intervals>k__BackingField;
    public IEnumerable`1<IntervalsContainer> Intervals { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IntervalsContainer> get_Intervals();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Intervals(IEnumerable`1<IntervalsContainer> value);
    internal virtual void WrapInContainer(IIntervalsContainer container);
}
public class OpenSearch.Client.IntervalsAnyOfDescriptor : IntervalsDescriptorBase`2<IntervalsAnyOfDescriptor, IIntervalsAnyOf> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IntervalsContainer> <OpenSearch.Client.IIntervalsAnyOf.Intervals>k__BackingField;
    private IEnumerable`1<IntervalsContainer> OpenSearch.Client.IIntervalsAnyOf.Intervals { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IntervalsContainer> OpenSearch.Client.IIntervalsAnyOf.get_Intervals();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsAnyOf.set_Intervals(IEnumerable`1<IntervalsContainer> value);
    public IntervalsAnyOfDescriptor Intervals(Func`2<IntervalsListDescriptor, IPromise`1<List`1<IntervalsContainer>>> selector);
}
public abstract class OpenSearch.Client.IntervalsBase : object {
    [CompilerGeneratedAttribute]
private IIntervalsFilter <Filter>k__BackingField;
    public IIntervalsFilter Filter { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IIntervalsFilter get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(IIntervalsFilter value);
    internal abstract virtual void WrapInContainer(IIntervalsContainer container);
}
public class OpenSearch.Client.IntervalsContainer : object {
    [CompilerGeneratedAttribute]
private IIntervalsAllOf <OpenSearch.Client.IIntervalsContainer.AllOf>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsAnyOf <OpenSearch.Client.IIntervalsContainer.AnyOf>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsFuzzy <OpenSearch.Client.IIntervalsContainer.Fuzzy>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsMatch <OpenSearch.Client.IIntervalsContainer.Match>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsPrefix <OpenSearch.Client.IIntervalsContainer.Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsWildcard <OpenSearch.Client.IIntervalsContainer.Wildcard>k__BackingField;
    private IIntervalsAllOf OpenSearch.Client.IIntervalsContainer.AllOf { get; private set; }
    private IIntervalsAnyOf OpenSearch.Client.IIntervalsContainer.AnyOf { get; private set; }
    private IIntervalsFuzzy OpenSearch.Client.IIntervalsContainer.Fuzzy { get; private set; }
    private IIntervalsMatch OpenSearch.Client.IIntervalsContainer.Match { get; private set; }
    private IIntervalsPrefix OpenSearch.Client.IIntervalsContainer.Prefix { get; private set; }
    private IIntervalsWildcard OpenSearch.Client.IIntervalsContainer.Wildcard { get; private set; }
    public IntervalsContainer(IntervalsBase intervals);
    public IntervalsContainer(IntervalsNoFilterBase intervals);
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsAllOf OpenSearch.Client.IIntervalsContainer.get_AllOf();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_AllOf(IIntervalsAllOf value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsAnyOf OpenSearch.Client.IIntervalsContainer.get_AnyOf();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_AnyOf(IIntervalsAnyOf value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsFuzzy OpenSearch.Client.IIntervalsContainer.get_Fuzzy();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_Fuzzy(IIntervalsFuzzy value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsMatch OpenSearch.Client.IIntervalsContainer.get_Match();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_Match(IIntervalsMatch value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsPrefix OpenSearch.Client.IIntervalsContainer.get_Prefix();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_Prefix(IIntervalsPrefix value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsWildcard OpenSearch.Client.IIntervalsContainer.get_Wildcard();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_Wildcard(IIntervalsWildcard value);
    public static IntervalsContainer op_Implicit(IntervalsBase intervals);
    public static IntervalsContainer op_Implicit(IntervalsNoFilterBase intervals);
}
public class OpenSearch.Client.IntervalsDescriptor : IntervalsContainer {
    private IntervalsDescriptor Assign(TValue value, Action`2<IIntervalsContainer, TValue> assigner);
    public IntervalsDescriptor Fuzzy(Func`2<IntervalsFuzzyDescriptor, IIntervalsFuzzy> selector);
    public IntervalsDescriptor Match(Func`2<IntervalsMatchDescriptor, IIntervalsMatch> selector);
    public IntervalsDescriptor Prefix(Func`2<IntervalsPrefixDescriptor, IIntervalsPrefix> selector);
    public IntervalsDescriptor Wildcard(Func`2<IntervalsWildcardDescriptor, IIntervalsWildcard> selector);
    public IntervalsDescriptor AnyOf(Func`2<IntervalsAnyOfDescriptor, IIntervalsAnyOf> selector);
    public IntervalsDescriptor AllOf(Func`2<IntervalsAllOfDescriptor, IIntervalsAllOf> selector);
}
public abstract class OpenSearch.Client.IntervalsDescriptorBase`2 : DescriptorBase`2<TDescriptor, TInterface> {
    [CompilerGeneratedAttribute]
private IIntervalsFilter <OpenSearch.Client.IIntervals.Filter>k__BackingField;
    private IIntervalsFilter OpenSearch.Client.IIntervals.Filter { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsFilter OpenSearch.Client.IIntervals.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervals.set_Filter(IIntervalsFilter value);
    public TDescriptor Filter(Func`2<IntervalsFilterDescriptor, IIntervalsFilter> selector);
}
public class OpenSearch.Client.IntervalsFilter : object {
    [CompilerGeneratedAttribute]
private IntervalsContainer <After>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <Before>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <ContainedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <Containing>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <NotContainedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <NotContaining>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <NotOverlapping>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <Overlapping>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public IntervalsContainer After { get; public set; }
    public IntervalsContainer Before { get; public set; }
    public IntervalsContainer ContainedBy { get; public set; }
    public IntervalsContainer Containing { get; public set; }
    public IntervalsContainer NotContainedBy { get; public set; }
    public IntervalsContainer NotContaining { get; public set; }
    public IntervalsContainer NotOverlapping { get; public set; }
    public IntervalsContainer Overlapping { get; public set; }
    public IScript Script { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IntervalsContainer get_After();
    [CompilerGeneratedAttribute]
public sealed virtual void set_After(IntervalsContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IntervalsContainer get_Before();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Before(IntervalsContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IntervalsContainer get_ContainedBy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContainedBy(IntervalsContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IntervalsContainer get_Containing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Containing(IntervalsContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IntervalsContainer get_NotContainedBy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NotContainedBy(IntervalsContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IntervalsContainer get_NotContaining();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NotContaining(IntervalsContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IntervalsContainer get_NotOverlapping();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NotOverlapping(IntervalsContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IntervalsContainer get_Overlapping();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Overlapping(IntervalsContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
}
public class OpenSearch.Client.IntervalsFilterDescriptor : DescriptorBase`2<IntervalsFilterDescriptor, IIntervalsFilter> {
    [CompilerGeneratedAttribute]
private IntervalsContainer <OpenSearch.Client.IIntervalsFilter.After>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <OpenSearch.Client.IIntervalsFilter.Before>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <OpenSearch.Client.IIntervalsFilter.ContainedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <OpenSearch.Client.IIntervalsFilter.Containing>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <OpenSearch.Client.IIntervalsFilter.NotContainedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <OpenSearch.Client.IIntervalsFilter.NotContaining>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <OpenSearch.Client.IIntervalsFilter.NotOverlapping>k__BackingField;
    [CompilerGeneratedAttribute]
private IntervalsContainer <OpenSearch.Client.IIntervalsFilter.Overlapping>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IIntervalsFilter.Script>k__BackingField;
    private IntervalsContainer OpenSearch.Client.IIntervalsFilter.After { get; private set; }
    private IntervalsContainer OpenSearch.Client.IIntervalsFilter.Before { get; private set; }
    private IntervalsContainer OpenSearch.Client.IIntervalsFilter.ContainedBy { get; private set; }
    private IntervalsContainer OpenSearch.Client.IIntervalsFilter.Containing { get; private set; }
    private IntervalsContainer OpenSearch.Client.IIntervalsFilter.NotContainedBy { get; private set; }
    private IntervalsContainer OpenSearch.Client.IIntervalsFilter.NotContaining { get; private set; }
    private IntervalsContainer OpenSearch.Client.IIntervalsFilter.NotOverlapping { get; private set; }
    private IntervalsContainer OpenSearch.Client.IIntervalsFilter.Overlapping { get; private set; }
    private IScript OpenSearch.Client.IIntervalsFilter.Script { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IntervalsContainer OpenSearch.Client.IIntervalsFilter.get_After();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFilter.set_After(IntervalsContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IntervalsContainer OpenSearch.Client.IIntervalsFilter.get_Before();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFilter.set_Before(IntervalsContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IntervalsContainer OpenSearch.Client.IIntervalsFilter.get_ContainedBy();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFilter.set_ContainedBy(IntervalsContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IntervalsContainer OpenSearch.Client.IIntervalsFilter.get_Containing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFilter.set_Containing(IntervalsContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IntervalsContainer OpenSearch.Client.IIntervalsFilter.get_NotContainedBy();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFilter.set_NotContainedBy(IntervalsContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IntervalsContainer OpenSearch.Client.IIntervalsFilter.get_NotContaining();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFilter.set_NotContaining(IntervalsContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IntervalsContainer OpenSearch.Client.IIntervalsFilter.get_NotOverlapping();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFilter.set_NotOverlapping(IntervalsContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IntervalsContainer OpenSearch.Client.IIntervalsFilter.get_Overlapping();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFilter.set_Overlapping(IntervalsContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IIntervalsFilter.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFilter.set_Script(IScript value);
    public IntervalsFilterDescriptor Containing(Func`2<IntervalsDescriptor, IntervalsContainer> selector);
    public IntervalsFilterDescriptor ContainedBy(Func`2<IntervalsDescriptor, IntervalsContainer> selector);
    public IntervalsFilterDescriptor NotContaining(Func`2<IntervalsDescriptor, IntervalsContainer> selector);
    public IntervalsFilterDescriptor NotContainedBy(Func`2<IntervalsDescriptor, IntervalsContainer> selector);
    public IntervalsFilterDescriptor Overlapping(Func`2<IntervalsDescriptor, IntervalsContainer> selector);
    public IntervalsFilterDescriptor NotOverlapping(Func`2<IntervalsDescriptor, IntervalsContainer> selector);
    public IntervalsFilterDescriptor Before(Func`2<IntervalsDescriptor, IntervalsContainer> selector);
    public IntervalsFilterDescriptor After(Func`2<IntervalsDescriptor, IntervalsContainer> selector);
    public IntervalsFilterDescriptor Script(Func`2<ScriptDescriptor, IScript> selector);
}
public class OpenSearch.Client.IntervalsFuzzy : IntervalsNoFilterBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Transpositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Fuzziness <Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Term>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <UseField>k__BackingField;
    public string Analyzer { get; public set; }
    public Nullable`1<int> PrefixLength { get; public set; }
    public Nullable`1<bool> Transpositions { get; public set; }
    public Fuzziness Fuzziness { get; public set; }
    public string Term { get; public set; }
    public Field UseField { get; public set; }
    internal virtual void WrapInContainer(IIntervalsContainer container);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PrefixLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Transpositions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Transpositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Fuzziness get_Fuzziness();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fuzziness(Fuzziness value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Term();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Term(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_UseField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseField(Field value);
}
public class OpenSearch.Client.IntervalsFuzzyDescriptor : DescriptorBase`2<IntervalsFuzzyDescriptor, IIntervalsFuzzy> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIntervalsFuzzy.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IIntervalsFuzzy.PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IIntervalsFuzzy.Transpositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Fuzziness <OpenSearch.Client.IIntervalsFuzzy.Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIntervalsFuzzy.Term>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IIntervalsFuzzy.UseField>k__BackingField;
    private string OpenSearch.Client.IIntervalsFuzzy.Analyzer { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IIntervalsFuzzy.PrefixLength { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IIntervalsFuzzy.Transpositions { get; private set; }
    private Fuzziness OpenSearch.Client.IIntervalsFuzzy.Fuzziness { get; private set; }
    private string OpenSearch.Client.IIntervalsFuzzy.Term { get; private set; }
    private Field OpenSearch.Client.IIntervalsFuzzy.UseField { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIntervalsFuzzy.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFuzzy.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IIntervalsFuzzy.get_PrefixLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFuzzy.set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IIntervalsFuzzy.get_Transpositions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFuzzy.set_Transpositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fuzziness OpenSearch.Client.IIntervalsFuzzy.get_Fuzziness();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFuzzy.set_Fuzziness(Fuzziness value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIntervalsFuzzy.get_Term();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFuzzy.set_Term(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IIntervalsFuzzy.get_UseField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsFuzzy.set_UseField(Field value);
    public IntervalsFuzzyDescriptor Analyzer(string analyzer);
    public IntervalsFuzzyDescriptor PrefixLength(Nullable`1<int> prefixLength);
    public IntervalsFuzzyDescriptor Transpositions(Nullable`1<bool> transpositions);
    public IntervalsFuzzyDescriptor Fuzziness(Fuzziness fuzziness);
    public IntervalsFuzzyDescriptor Term(string term);
    public IntervalsFuzzyDescriptor UseField(Expression`1<Func`2<T, object>> objectPath);
    public IntervalsFuzzyDescriptor UseField(Field useField);
}
public class OpenSearch.Client.IntervalsListDescriptor : DescriptorPromiseBase`2<IntervalsListDescriptor, List`1<IntervalsContainer>> {
    public IntervalsListDescriptor Fuzzy(Func`2<IntervalsFuzzyDescriptor, IIntervalsFuzzy> selector);
    public IntervalsListDescriptor Match(Func`2<IntervalsMatchDescriptor, IIntervalsMatch> selector);
    public IntervalsListDescriptor Prefix(Func`2<IntervalsPrefixDescriptor, IIntervalsPrefix> selector);
    public IntervalsListDescriptor Wildcard(Func`2<IntervalsWildcardDescriptor, IIntervalsWildcard> selector);
    public IntervalsListDescriptor AnyOf(Func`2<IntervalsAnyOfDescriptor, IIntervalsAnyOf> selector);
    public IntervalsListDescriptor AllOf(Func`2<IntervalsAllOfDescriptor, IIntervalsAllOf> selector);
}
public class OpenSearch.Client.IntervalsMatch : IntervalsBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxGaps>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Ordered>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <UseField>k__BackingField;
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxGaps { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Ordered { get; public set; }
    public string Query { get; public set; }
    [DataMemberAttribute]
public Field UseField { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxGaps();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxGaps(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Ordered();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ordered(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_UseField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseField(Field value);
    internal virtual void WrapInContainer(IIntervalsContainer container);
}
public class OpenSearch.Client.IntervalsMatchDescriptor : IntervalsDescriptorBase`2<IntervalsMatchDescriptor, IIntervalsMatch> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIntervalsMatch.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IIntervalsMatch.MaxGaps>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IIntervalsMatch.Ordered>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIntervalsMatch.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IIntervalsMatch.UseField>k__BackingField;
    private string OpenSearch.Client.IIntervalsMatch.Analyzer { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IIntervalsMatch.MaxGaps { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IIntervalsMatch.Ordered { get; private set; }
    private string OpenSearch.Client.IIntervalsMatch.Query { get; private set; }
    private Field OpenSearch.Client.IIntervalsMatch.UseField { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIntervalsMatch.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsMatch.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IIntervalsMatch.get_MaxGaps();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsMatch.set_MaxGaps(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IIntervalsMatch.get_Ordered();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsMatch.set_Ordered(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIntervalsMatch.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsMatch.set_Query(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IIntervalsMatch.get_UseField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsMatch.set_UseField(Field value);
    public IntervalsMatchDescriptor Analyzer(string analyzer);
    public IntervalsMatchDescriptor MaxGaps(Nullable`1<int> maxGaps);
    public IntervalsMatchDescriptor Ordered(Nullable`1<bool> ordered);
    public IntervalsMatchDescriptor Query(string query);
    public IntervalsMatchDescriptor UseField(Expression`1<Func`2<T, object>> objectPath);
    public IntervalsMatchDescriptor UseField(Field useField);
}
public abstract class OpenSearch.Client.IntervalsNoFilterBase : object {
    internal abstract virtual void WrapInContainer(IIntervalsContainer container);
}
public class OpenSearch.Client.IntervalsPrefix : IntervalsNoFilterBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <UseField>k__BackingField;
    public string Analyzer { get; public set; }
    public string Prefix { get; public set; }
    public Field UseField { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Prefix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_UseField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseField(Field value);
    internal virtual void WrapInContainer(IIntervalsContainer container);
}
public class OpenSearch.Client.IntervalsPrefixDescriptor : DescriptorBase`2<IntervalsPrefixDescriptor, IIntervalsPrefix> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIntervalsPrefix.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIntervalsPrefix.Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IIntervalsPrefix.UseField>k__BackingField;
    private string OpenSearch.Client.IIntervalsPrefix.Analyzer { get; private set; }
    private string OpenSearch.Client.IIntervalsPrefix.Prefix { get; private set; }
    private Field OpenSearch.Client.IIntervalsPrefix.UseField { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIntervalsPrefix.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsPrefix.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIntervalsPrefix.get_Prefix();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsPrefix.set_Prefix(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IIntervalsPrefix.get_UseField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsPrefix.set_UseField(Field value);
    public IntervalsPrefixDescriptor Analyzer(string analyzer);
    public IntervalsPrefixDescriptor Prefix(string prefix);
    public IntervalsPrefixDescriptor UseField(Expression`1<Func`2<T, object>> objectPath);
    public IntervalsPrefixDescriptor UseField(Field useField);
}
public class OpenSearch.Client.IntervalsQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private IIntervalsAllOf <AllOf>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsAnyOf <AnyOf>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsMatch <Match>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsFuzzy <Fuzzy>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsPrefix <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsWildcard <Wildcard>k__BackingField;
    public IIntervalsAllOf AllOf { get; public set; }
    public IIntervalsAnyOf AnyOf { get; public set; }
    public IIntervalsMatch Match { get; public set; }
    public IIntervalsFuzzy Fuzzy { get; public set; }
    public IIntervalsPrefix Prefix { get; public set; }
    public IIntervalsWildcard Wildcard { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IIntervalsAllOf get_AllOf();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllOf(IIntervalsAllOf value);
    [CompilerGeneratedAttribute]
public sealed virtual IIntervalsAnyOf get_AnyOf();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AnyOf(IIntervalsAnyOf value);
    [CompilerGeneratedAttribute]
public sealed virtual IIntervalsMatch get_Match();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Match(IIntervalsMatch value);
    [CompilerGeneratedAttribute]
public sealed virtual IIntervalsFuzzy get_Fuzzy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fuzzy(IIntervalsFuzzy value);
    [CompilerGeneratedAttribute]
public sealed virtual IIntervalsPrefix get_Prefix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Prefix(IIntervalsPrefix value);
    [CompilerGeneratedAttribute]
public sealed virtual IIntervalsWildcard get_Wildcard();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Wildcard(IIntervalsWildcard value);
    protected virtual bool get_Conditionless();
    internal static bool IsConditionless(IIntervalsQuery q);
    internal virtual void InternalWrapInContainer(IQueryContainer container);
}
[DataContractAttribute]
public class OpenSearch.Client.IntervalsQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<IntervalsQueryDescriptor`1<T>, IIntervalsQuery, T> {
    [CompilerGeneratedAttribute]
private IIntervalsAllOf <OpenSearch.Client.IIntervalsContainer.AllOf>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsAnyOf <OpenSearch.Client.IIntervalsContainer.AnyOf>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsFuzzy <OpenSearch.Client.IIntervalsContainer.Fuzzy>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsMatch <OpenSearch.Client.IIntervalsContainer.Match>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsPrefix <OpenSearch.Client.IIntervalsContainer.Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private IIntervalsWildcard <OpenSearch.Client.IIntervalsContainer.Wildcard>k__BackingField;
    protected bool Conditionless { get; }
    private IIntervalsAllOf OpenSearch.Client.IIntervalsContainer.AllOf { get; private set; }
    private IIntervalsAnyOf OpenSearch.Client.IIntervalsContainer.AnyOf { get; private set; }
    private IIntervalsFuzzy OpenSearch.Client.IIntervalsContainer.Fuzzy { get; private set; }
    private IIntervalsMatch OpenSearch.Client.IIntervalsContainer.Match { get; private set; }
    private IIntervalsPrefix OpenSearch.Client.IIntervalsContainer.Prefix { get; private set; }
    private IIntervalsWildcard OpenSearch.Client.IIntervalsContainer.Wildcard { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsAllOf OpenSearch.Client.IIntervalsContainer.get_AllOf();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_AllOf(IIntervalsAllOf value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsAnyOf OpenSearch.Client.IIntervalsContainer.get_AnyOf();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_AnyOf(IIntervalsAnyOf value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsFuzzy OpenSearch.Client.IIntervalsContainer.get_Fuzzy();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_Fuzzy(IIntervalsFuzzy value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsMatch OpenSearch.Client.IIntervalsContainer.get_Match();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_Match(IIntervalsMatch value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsPrefix OpenSearch.Client.IIntervalsContainer.get_Prefix();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_Prefix(IIntervalsPrefix value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIntervalsWildcard OpenSearch.Client.IIntervalsContainer.get_Wildcard();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsContainer.set_Wildcard(IIntervalsWildcard value);
    public IntervalsQueryDescriptor`1<T> Fuzzy(Func`2<IntervalsFuzzyDescriptor, IIntervalsFuzzy> selector);
    public IntervalsQueryDescriptor`1<T> Match(Func`2<IntervalsMatchDescriptor, IIntervalsMatch> selector);
    public IntervalsQueryDescriptor`1<T> Prefix(Func`2<IntervalsPrefixDescriptor, IIntervalsPrefix> selector);
    public IntervalsQueryDescriptor`1<T> Wildcard(Func`2<IntervalsWildcardDescriptor, IIntervalsWildcard> selector);
    public IntervalsQueryDescriptor`1<T> AnyOf(Func`2<IntervalsAnyOfDescriptor, IIntervalsAnyOf> selector);
    public IntervalsQueryDescriptor`1<T> AllOf(Func`2<IntervalsAllOfDescriptor, IIntervalsAllOf> selector);
}
public class OpenSearch.Client.IntervalsWildcard : IntervalsNoFilterBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <UseField>k__BackingField;
    public string Analyzer { get; public set; }
    public string Pattern { get; public set; }
    public Field UseField { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pattern();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_UseField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseField(Field value);
    internal virtual void WrapInContainer(IIntervalsContainer container);
}
public class OpenSearch.Client.IntervalsWildcardDescriptor : DescriptorBase`2<IntervalsWildcardDescriptor, IIntervalsWildcard> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIntervalsWildcard.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIntervalsWildcard.Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IIntervalsWildcard.UseField>k__BackingField;
    private string OpenSearch.Client.IIntervalsWildcard.Analyzer { get; private set; }
    private string OpenSearch.Client.IIntervalsWildcard.Pattern { get; private set; }
    private Field OpenSearch.Client.IIntervalsWildcard.UseField { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIntervalsWildcard.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsWildcard.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIntervalsWildcard.get_Pattern();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsWildcard.set_Pattern(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IIntervalsWildcard.get_UseField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIntervalsWildcard.set_UseField(Field value);
    public IntervalsWildcardDescriptor Analyzer(string analyzer);
    public IntervalsWildcardDescriptor Pattern(string pattern);
    public IntervalsWildcardDescriptor UseField(Expression`1<Func`2<T, object>> objectPath);
    public IntervalsWildcardDescriptor UseField(Field useField);
}
internal class OpenSearch.Client.IntStringFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, string value, IJsonFormatterResolver formatterResolver);
    public sealed virtual string Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.INumberProperty {
    [DataMemberAttribute]
public Nullable`1<bool> Coerce { get; public set; }
    [DataMemberAttribute]
public INumericFielddata Fielddata { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMalformed { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> NullValue { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> ScalingFactor { get; public set; }
    public abstract virtual Nullable`1<bool> get_Coerce();
    public abstract virtual void set_Coerce(Nullable`1<bool> value);
    public abstract virtual INumericFielddata get_Fielddata();
    public abstract virtual void set_Fielddata(INumericFielddata value);
    public abstract virtual Nullable`1<bool> get_IgnoreMalformed();
    public abstract virtual void set_IgnoreMalformed(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Index();
    public abstract virtual void set_Index(Nullable`1<bool> value);
    public abstract virtual Nullable`1<double> get_NullValue();
    public abstract virtual void set_NullValue(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_ScalingFactor();
    public abstract virtual void set_ScalingFactor(Nullable`1<double> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.NumericFielddata")]
public interface OpenSearch.Client.INumericFielddata {
    [DataMemberAttribute]
public Nullable`1<NumericFielddataFormat> Format { get; public set; }
    public abstract virtual Nullable`1<NumericFielddataFormat> get_Format();
    public abstract virtual void set_Format(Nullable`1<NumericFielddataFormat> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.NumericRangeQuery,OpenSearch.Client.INumericRangeQuery>")]
public interface OpenSearch.Client.INumericRangeQuery {
    [DataMemberAttribute]
public Nullable`1<double> GreaterThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> GreaterThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> LessThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> LessThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public Nullable`1<RangeRelation> Relation { get; public set; }
    public abstract virtual Nullable`1<double> get_GreaterThan();
    public abstract virtual void set_GreaterThan(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_GreaterThanOrEqualTo();
    public abstract virtual void set_GreaterThanOrEqualTo(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_LessThan();
    public abstract virtual void set_LessThan(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_LessThanOrEqualTo();
    public abstract virtual void set_LessThanOrEqualTo(Nullable`1<double> value);
    public abstract virtual Nullable`1<RangeRelation> get_Relation();
    public abstract virtual void set_Relation(Nullable`1<RangeRelation> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IObjectProperty {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.DynamicMappingFormatter")]
public Union`2<bool, DynamicMapping> Dynamic { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    [DataMemberAttribute]
public IProperties Properties { get; public set; }
    public abstract virtual Union`2<bool, DynamicMapping> get_Dynamic();
    public abstract virtual void set_Dynamic(Union`2<bool, DynamicMapping> value);
    public abstract virtual Nullable`1<bool> get_Enabled();
    public abstract virtual void set_Enabled(Nullable`1<bool> value);
    public abstract virtual IProperties get_Properties();
    public abstract virtual void set_Properties(IProperties value);
}
[MapsApiAttribute("indices.open.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IOpenIndexRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
public interface OpenSearch.Client.IOpenSearchClient {
    public IConnectionSettingsValues ConnectionSettings { get; }
    public Inferrer Infer { get; }
    public IOpenSearchLowLevelClient LowLevel { get; }
    public IOpenSearchSerializer RequestResponseSerializer { get; }
    public IOpenSearchSerializer SourceSerializer { get; }
    public DanglingIndicesNamespace DanglingIndices { get; }
    public IngestNamespace Ingest { get; }
    public NodesNamespace Nodes { get; }
    public SnapshotNamespace Snapshot { get; }
    public TasksNamespace Tasks { get; }
    public CatNamespace Cat { get; }
    public ClusterNamespace Cluster { get; }
    public IndicesNamespace Indices { get; }
    public HttpNamespace Http { get; }
    public abstract virtual BulkAllObservable`1<T> BulkAll(IEnumerable`1<T> documents, Func`2<BulkAllDescriptor`1<T>, IBulkAllRequest`1<T>> selector, CancellationToken cancellationToken);
    public abstract virtual BulkAllObservable`1<T> BulkAll(IBulkAllRequest`1<T> request, CancellationToken cancellationToken);
    public abstract virtual IObservable`1<BulkAllResponse> Reindex(Func`2<TSource, TTarget> mapper, Func`2<ReindexDescriptor`2<TSource, TTarget>, IReindexRequest`2<TSource, TTarget>> selector, CancellationToken cancellationToken);
    public abstract virtual IObservable`1<BulkAllResponse> Reindex(Func`2<ReindexDescriptor`2<TSource, TSource>, IReindexRequest`2<TSource, TSource>> selector, CancellationToken cancellationToken);
    public abstract virtual IObservable`1<BulkAllResponse> Reindex(IReindexRequest`2<TSource, TTarget> request, CancellationToken cancellationToken);
    public abstract virtual IObservable`1<BulkAllResponse> Reindex(IReindexRequest`1<TSource> request, CancellationToken cancellationToken);
    public abstract virtual IObservable`1<BulkAllResponse> Reindex(IndexName fromIndex, IndexName toIndex, Func`2<TSource, TTarget> mapper, Func`2<QueryContainerDescriptor`1<TSource>, QueryContainer> selector, CancellationToken cancellationToken);
    public abstract virtual IObservable`1<BulkAllResponse> Reindex(IndexName fromIndex, IndexName toIndex, Func`2<QueryContainerDescriptor`1<TSource>, QueryContainer> selector, CancellationToken cancellationToken);
    public abstract virtual IObservable`1<ScrollAllResponse`1<T>> ScrollAll(Time scrollTime, int numberOfSlices, Func`2<ScrollAllDescriptor`1<T>, IScrollAllRequest> selector, CancellationToken cancellationToken);
    public abstract virtual IObservable`1<ScrollAllResponse`1<T>> ScrollAll(IScrollAllRequest request, CancellationToken cancellationToken);
    public abstract virtual CreateResponse CreateDocument(TDocument document);
    public abstract virtual Task`1<CreateResponse> CreateDocumentAsync(TDocument document, CancellationToken cancellationToken);
    public abstract virtual IndexResponse IndexDocument(TDocument document);
    public abstract virtual Task`1<IndexResponse> IndexDocumentAsync(T document, CancellationToken ct);
    public abstract virtual PutMappingResponse Map(Func`2<PutMappingDescriptor`1<T>, IPutMappingRequest> selector);
    public abstract virtual PutMappingResponse Map(IPutMappingRequest request);
    public abstract virtual Task`1<PutMappingResponse> MapAsync(Func`2<PutMappingDescriptor`1<T>, IPutMappingRequest> selector, CancellationToken ct);
    public abstract virtual Task`1<PutMappingResponse> MapAsync(IPutMappingRequest request, CancellationToken ct);
    public abstract virtual IConnectionSettingsValues get_ConnectionSettings();
    public abstract virtual Inferrer get_Infer();
    public abstract virtual IOpenSearchLowLevelClient get_LowLevel();
    public abstract virtual IOpenSearchSerializer get_RequestResponseSerializer();
    public abstract virtual IOpenSearchSerializer get_SourceSerializer();
    public abstract virtual DanglingIndicesNamespace get_DanglingIndices();
    public abstract virtual IngestNamespace get_Ingest();
    public abstract virtual NodesNamespace get_Nodes();
    public abstract virtual BulkResponse Bulk(Func`2<BulkDescriptor, IBulkRequest> selector);
    public abstract virtual Task`1<BulkResponse> BulkAsync(Func`2<BulkDescriptor, IBulkRequest> selector, CancellationToken ct);
    public abstract virtual BulkResponse Bulk(IBulkRequest request);
    public abstract virtual Task`1<BulkResponse> BulkAsync(IBulkRequest request, CancellationToken ct);
    public abstract virtual ClearScrollResponse ClearScroll(Func`2<ClearScrollDescriptor, IClearScrollRequest> selector);
    public abstract virtual Task`1<ClearScrollResponse> ClearScrollAsync(Func`2<ClearScrollDescriptor, IClearScrollRequest> selector, CancellationToken ct);
    public abstract virtual ClearScrollResponse ClearScroll(IClearScrollRequest request);
    public abstract virtual Task`1<ClearScrollResponse> ClearScrollAsync(IClearScrollRequest request, CancellationToken ct);
    public abstract virtual CountResponse Count(Func`2<CountDescriptor`1<TDocument>, ICountRequest> selector);
    public abstract virtual Task`1<CountResponse> CountAsync(Func`2<CountDescriptor`1<TDocument>, ICountRequest> selector, CancellationToken ct);
    public abstract virtual CountResponse Count(ICountRequest request);
    public abstract virtual Task`1<CountResponse> CountAsync(ICountRequest request, CancellationToken ct);
    public abstract virtual CreateResponse Create(TDocument document, Func`2<CreateDescriptor`1<TDocument>, ICreateRequest`1<TDocument>> selector);
    public abstract virtual Task`1<CreateResponse> CreateAsync(TDocument document, Func`2<CreateDescriptor`1<TDocument>, ICreateRequest`1<TDocument>> selector, CancellationToken ct);
    public abstract virtual CreateResponse Create(ICreateRequest`1<TDocument> request);
    public abstract virtual Task`1<CreateResponse> CreateAsync(ICreateRequest`1<TDocument> request, CancellationToken ct);
    public abstract virtual DeleteResponse Delete(DocumentPath`1<TDocument> id, Func`2<DeleteDescriptor`1<TDocument>, IDeleteRequest> selector);
    public abstract virtual Task`1<DeleteResponse> DeleteAsync(DocumentPath`1<TDocument> id, Func`2<DeleteDescriptor`1<TDocument>, IDeleteRequest> selector, CancellationToken ct);
    public abstract virtual DeleteResponse Delete(IDeleteRequest request);
    public abstract virtual Task`1<DeleteResponse> DeleteAsync(IDeleteRequest request, CancellationToken ct);
    public abstract virtual DeleteByQueryResponse DeleteByQuery(Func`2<DeleteByQueryDescriptor`1<TDocument>, IDeleteByQueryRequest> selector);
    public abstract virtual Task`1<DeleteByQueryResponse> DeleteByQueryAsync(Func`2<DeleteByQueryDescriptor`1<TDocument>, IDeleteByQueryRequest> selector, CancellationToken ct);
    public abstract virtual DeleteByQueryResponse DeleteByQuery(IDeleteByQueryRequest request);
    public abstract virtual Task`1<DeleteByQueryResponse> DeleteByQueryAsync(IDeleteByQueryRequest request, CancellationToken ct);
    public abstract virtual ListTasksResponse DeleteByQueryRethrottle(TaskId taskId, Func`2<DeleteByQueryRethrottleDescriptor, IDeleteByQueryRethrottleRequest> selector);
    public abstract virtual Task`1<ListTasksResponse> DeleteByQueryRethrottleAsync(TaskId taskId, Func`2<DeleteByQueryRethrottleDescriptor, IDeleteByQueryRethrottleRequest> selector, CancellationToken ct);
    public abstract virtual ListTasksResponse DeleteByQueryRethrottle(IDeleteByQueryRethrottleRequest request);
    public abstract virtual Task`1<ListTasksResponse> DeleteByQueryRethrottleAsync(IDeleteByQueryRethrottleRequest request, CancellationToken ct);
    public abstract virtual DeleteScriptResponse DeleteScript(Id id, Func`2<DeleteScriptDescriptor, IDeleteScriptRequest> selector);
    public abstract virtual Task`1<DeleteScriptResponse> DeleteScriptAsync(Id id, Func`2<DeleteScriptDescriptor, IDeleteScriptRequest> selector, CancellationToken ct);
    public abstract virtual DeleteScriptResponse DeleteScript(IDeleteScriptRequest request);
    public abstract virtual Task`1<DeleteScriptResponse> DeleteScriptAsync(IDeleteScriptRequest request, CancellationToken ct);
    public abstract virtual ExistsResponse DocumentExists(DocumentPath`1<TDocument> id, Func`2<DocumentExistsDescriptor`1<TDocument>, IDocumentExistsRequest> selector);
    public abstract virtual Task`1<ExistsResponse> DocumentExistsAsync(DocumentPath`1<TDocument> id, Func`2<DocumentExistsDescriptor`1<TDocument>, IDocumentExistsRequest> selector, CancellationToken ct);
    public abstract virtual ExistsResponse DocumentExists(IDocumentExistsRequest request);
    public abstract virtual Task`1<ExistsResponse> DocumentExistsAsync(IDocumentExistsRequest request, CancellationToken ct);
    public abstract virtual ExistsResponse SourceExists(DocumentPath`1<TDocument> id, Func`2<SourceExistsDescriptor`1<TDocument>, ISourceExistsRequest> selector);
    public abstract virtual Task`1<ExistsResponse> SourceExistsAsync(DocumentPath`1<TDocument> id, Func`2<SourceExistsDescriptor`1<TDocument>, ISourceExistsRequest> selector, CancellationToken ct);
    public abstract virtual ExistsResponse SourceExists(ISourceExistsRequest request);
    public abstract virtual Task`1<ExistsResponse> SourceExistsAsync(ISourceExistsRequest request, CancellationToken ct);
    public abstract virtual ExplainResponse`1<TDocument> Explain(DocumentPath`1<TDocument> id, Func`2<ExplainDescriptor`1<TDocument>, IExplainRequest> selector);
    public abstract virtual Task`1<ExplainResponse`1<TDocument>> ExplainAsync(DocumentPath`1<TDocument> id, Func`2<ExplainDescriptor`1<TDocument>, IExplainRequest> selector, CancellationToken ct);
    public abstract virtual ExplainResponse`1<TDocument> Explain(IExplainRequest request);
    public abstract virtual Task`1<ExplainResponse`1<TDocument>> ExplainAsync(IExplainRequest request, CancellationToken ct);
    public abstract virtual FieldCapabilitiesResponse FieldCapabilities(Indices index, Func`2<FieldCapabilitiesDescriptor, IFieldCapabilitiesRequest> selector);
    public abstract virtual Task`1<FieldCapabilitiesResponse> FieldCapabilitiesAsync(Indices index, Func`2<FieldCapabilitiesDescriptor, IFieldCapabilitiesRequest> selector, CancellationToken ct);
    public abstract virtual FieldCapabilitiesResponse FieldCapabilities(IFieldCapabilitiesRequest request);
    public abstract virtual Task`1<FieldCapabilitiesResponse> FieldCapabilitiesAsync(IFieldCapabilitiesRequest request, CancellationToken ct);
    public abstract virtual GetResponse`1<TDocument> Get(DocumentPath`1<TDocument> id, Func`2<GetDescriptor`1<TDocument>, IGetRequest> selector);
    public abstract virtual Task`1<GetResponse`1<TDocument>> GetAsync(DocumentPath`1<TDocument> id, Func`2<GetDescriptor`1<TDocument>, IGetRequest> selector, CancellationToken ct);
    public abstract virtual GetResponse`1<TDocument> Get(IGetRequest request);
    public abstract virtual Task`1<GetResponse`1<TDocument>> GetAsync(IGetRequest request, CancellationToken ct);
    public abstract virtual GetScriptResponse GetScript(Id id, Func`2<GetScriptDescriptor, IGetScriptRequest> selector);
    public abstract virtual Task`1<GetScriptResponse> GetScriptAsync(Id id, Func`2<GetScriptDescriptor, IGetScriptRequest> selector, CancellationToken ct);
    public abstract virtual GetScriptResponse GetScript(IGetScriptRequest request);
    public abstract virtual Task`1<GetScriptResponse> GetScriptAsync(IGetScriptRequest request, CancellationToken ct);
    public abstract virtual SourceResponse`1<TDocument> Source(DocumentPath`1<TDocument> id, Func`2<SourceDescriptor`1<TDocument>, ISourceRequest> selector);
    public abstract virtual Task`1<SourceResponse`1<TDocument>> SourceAsync(DocumentPath`1<TDocument> id, Func`2<SourceDescriptor`1<TDocument>, ISourceRequest> selector, CancellationToken ct);
    public abstract virtual SourceResponse`1<TDocument> Source(ISourceRequest request);
    public abstract virtual Task`1<SourceResponse`1<TDocument>> SourceAsync(ISourceRequest request, CancellationToken ct);
    public abstract virtual IndexResponse Index(TDocument document, Func`2<IndexDescriptor`1<TDocument>, IIndexRequest`1<TDocument>> selector);
    public abstract virtual Task`1<IndexResponse> IndexAsync(TDocument document, Func`2<IndexDescriptor`1<TDocument>, IIndexRequest`1<TDocument>> selector, CancellationToken ct);
    public abstract virtual IndexResponse Index(IIndexRequest`1<TDocument> request);
    public abstract virtual Task`1<IndexResponse> IndexAsync(IIndexRequest`1<TDocument> request, CancellationToken ct);
    public abstract virtual RootNodeInfoResponse RootNodeInfo(Func`2<RootNodeInfoDescriptor, IRootNodeInfoRequest> selector);
    public abstract virtual Task`1<RootNodeInfoResponse> RootNodeInfoAsync(Func`2<RootNodeInfoDescriptor, IRootNodeInfoRequest> selector, CancellationToken ct);
    public abstract virtual RootNodeInfoResponse RootNodeInfo(IRootNodeInfoRequest request);
    public abstract virtual Task`1<RootNodeInfoResponse> RootNodeInfoAsync(IRootNodeInfoRequest request, CancellationToken ct);
    public abstract virtual MultiGetResponse MultiGet(Func`2<MultiGetDescriptor, IMultiGetRequest> selector);
    public abstract virtual Task`1<MultiGetResponse> MultiGetAsync(Func`2<MultiGetDescriptor, IMultiGetRequest> selector, CancellationToken ct);
    public abstract virtual MultiGetResponse MultiGet(IMultiGetRequest request);
    public abstract virtual Task`1<MultiGetResponse> MultiGetAsync(IMultiGetRequest request, CancellationToken ct);
    public abstract virtual MultiSearchResponse MultiSearch(Indices index, Func`2<MultiSearchDescriptor, IMultiSearchRequest> selector);
    public abstract virtual Task`1<MultiSearchResponse> MultiSearchAsync(Indices index, Func`2<MultiSearchDescriptor, IMultiSearchRequest> selector, CancellationToken ct);
    public abstract virtual MultiSearchResponse MultiSearch(IMultiSearchRequest request);
    public abstract virtual Task`1<MultiSearchResponse> MultiSearchAsync(IMultiSearchRequest request, CancellationToken ct);
    public abstract virtual MultiSearchResponse MultiSearchTemplate(Indices index, Func`2<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest> selector);
    public abstract virtual Task`1<MultiSearchResponse> MultiSearchTemplateAsync(Indices index, Func`2<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest> selector, CancellationToken ct);
    public abstract virtual MultiSearchResponse MultiSearchTemplate(IMultiSearchTemplateRequest request);
    public abstract virtual Task`1<MultiSearchResponse> MultiSearchTemplateAsync(IMultiSearchTemplateRequest request, CancellationToken ct);
    public abstract virtual MultiTermVectorsResponse MultiTermVectors(Func`2<MultiTermVectorsDescriptor, IMultiTermVectorsRequest> selector);
    public abstract virtual Task`1<MultiTermVectorsResponse> MultiTermVectorsAsync(Func`2<MultiTermVectorsDescriptor, IMultiTermVectorsRequest> selector, CancellationToken ct);
    public abstract virtual MultiTermVectorsResponse MultiTermVectors(IMultiTermVectorsRequest request);
    public abstract virtual Task`1<MultiTermVectorsResponse> MultiTermVectorsAsync(IMultiTermVectorsRequest request, CancellationToken ct);
    public abstract virtual PingResponse Ping(Func`2<PingDescriptor, IPingRequest> selector);
    public abstract virtual Task`1<PingResponse> PingAsync(Func`2<PingDescriptor, IPingRequest> selector, CancellationToken ct);
    public abstract virtual PingResponse Ping(IPingRequest request);
    public abstract virtual Task`1<PingResponse> PingAsync(IPingRequest request, CancellationToken ct);
    public abstract virtual PutScriptResponse PutScript(Id id, Func`2<PutScriptDescriptor, IPutScriptRequest> selector);
    public abstract virtual Task`1<PutScriptResponse> PutScriptAsync(Id id, Func`2<PutScriptDescriptor, IPutScriptRequest> selector, CancellationToken ct);
    public abstract virtual PutScriptResponse PutScript(IPutScriptRequest request);
    public abstract virtual Task`1<PutScriptResponse> PutScriptAsync(IPutScriptRequest request, CancellationToken ct);
    public abstract virtual ReindexOnServerResponse ReindexOnServer(Func`2<ReindexOnServerDescriptor, IReindexOnServerRequest> selector);
    public abstract virtual Task`1<ReindexOnServerResponse> ReindexOnServerAsync(Func`2<ReindexOnServerDescriptor, IReindexOnServerRequest> selector, CancellationToken ct);
    public abstract virtual ReindexOnServerResponse ReindexOnServer(IReindexOnServerRequest request);
    public abstract virtual Task`1<ReindexOnServerResponse> ReindexOnServerAsync(IReindexOnServerRequest request, CancellationToken ct);
    public abstract virtual ReindexRethrottleResponse ReindexRethrottle(TaskId taskId, Func`2<ReindexRethrottleDescriptor, IReindexRethrottleRequest> selector);
    public abstract virtual Task`1<ReindexRethrottleResponse> ReindexRethrottleAsync(TaskId taskId, Func`2<ReindexRethrottleDescriptor, IReindexRethrottleRequest> selector, CancellationToken ct);
    public abstract virtual ReindexRethrottleResponse ReindexRethrottle(IReindexRethrottleRequest request);
    public abstract virtual Task`1<ReindexRethrottleResponse> ReindexRethrottleAsync(IReindexRethrottleRequest request, CancellationToken ct);
    public abstract virtual RenderSearchTemplateResponse RenderSearchTemplate(Func`2<RenderSearchTemplateDescriptor, IRenderSearchTemplateRequest> selector);
    public abstract virtual Task`1<RenderSearchTemplateResponse> RenderSearchTemplateAsync(Func`2<RenderSearchTemplateDescriptor, IRenderSearchTemplateRequest> selector, CancellationToken ct);
    public abstract virtual RenderSearchTemplateResponse RenderSearchTemplate(IRenderSearchTemplateRequest request);
    public abstract virtual Task`1<RenderSearchTemplateResponse> RenderSearchTemplateAsync(IRenderSearchTemplateRequest request, CancellationToken ct);
    public abstract virtual ExecutePainlessScriptResponse`1<TResult> ExecutePainlessScript(Func`2<ExecutePainlessScriptDescriptor, IExecutePainlessScriptRequest> selector);
    public abstract virtual Task`1<ExecutePainlessScriptResponse`1<TResult>> ExecutePainlessScriptAsync(Func`2<ExecutePainlessScriptDescriptor, IExecutePainlessScriptRequest> selector, CancellationToken ct);
    public abstract virtual ExecutePainlessScriptResponse`1<TResult> ExecutePainlessScript(IExecutePainlessScriptRequest request);
    public abstract virtual Task`1<ExecutePainlessScriptResponse`1<TResult>> ExecutePainlessScriptAsync(IExecutePainlessScriptRequest request, CancellationToken ct);
    public abstract virtual ISearchResponse`1<TDocument> Scroll(Time scroll, string scrollId, Func`2<ScrollDescriptor`1<TInferDocument>, IScrollRequest> selector);
    public abstract virtual Task`1<ISearchResponse`1<TDocument>> ScrollAsync(Time scroll, string scrollId, Func`2<ScrollDescriptor`1<TInferDocument>, IScrollRequest> selector, CancellationToken ct);
    public abstract virtual ISearchResponse`1<TDocument> Scroll(Time scroll, string scrollId, Func`2<ScrollDescriptor`1<TDocument>, IScrollRequest> selector);
    public abstract virtual Task`1<ISearchResponse`1<TDocument>> ScrollAsync(Time scroll, string scrollId, Func`2<ScrollDescriptor`1<TDocument>, IScrollRequest> selector, CancellationToken ct);
    public abstract virtual ISearchResponse`1<TDocument> Scroll(IScrollRequest request);
    public abstract virtual Task`1<ISearchResponse`1<TDocument>> ScrollAsync(IScrollRequest request, CancellationToken ct);
    public abstract virtual ISearchResponse`1<TDocument> Search(Func`2<SearchDescriptor`1<TInferDocument>, ISearchRequest> selector);
    public abstract virtual Task`1<ISearchResponse`1<TDocument>> SearchAsync(Func`2<SearchDescriptor`1<TInferDocument>, ISearchRequest> selector, CancellationToken ct);
    public abstract virtual ISearchResponse`1<TDocument> Search(Func`2<SearchDescriptor`1<TDocument>, ISearchRequest> selector);
    public abstract virtual Task`1<ISearchResponse`1<TDocument>> SearchAsync(Func`2<SearchDescriptor`1<TDocument>, ISearchRequest> selector, CancellationToken ct);
    public abstract virtual ISearchResponse`1<TDocument> Search(ISearchRequest request);
    public abstract virtual Task`1<ISearchResponse`1<TDocument>> SearchAsync(ISearchRequest request, CancellationToken ct);
    public abstract virtual SearchShardsResponse SearchShards(Func`2<SearchShardsDescriptor`1<TDocument>, ISearchShardsRequest> selector);
    public abstract virtual Task`1<SearchShardsResponse> SearchShardsAsync(Func`2<SearchShardsDescriptor`1<TDocument>, ISearchShardsRequest> selector, CancellationToken ct);
    public abstract virtual SearchShardsResponse SearchShards(ISearchShardsRequest request);
    public abstract virtual Task`1<SearchShardsResponse> SearchShardsAsync(ISearchShardsRequest request, CancellationToken ct);
    public abstract virtual ISearchResponse`1<TDocument> SearchTemplate(Func`2<SearchTemplateDescriptor`1<TDocument>, ISearchTemplateRequest> selector);
    public abstract virtual Task`1<ISearchResponse`1<TDocument>> SearchTemplateAsync(Func`2<SearchTemplateDescriptor`1<TDocument>, ISearchTemplateRequest> selector, CancellationToken ct);
    public abstract virtual ISearchResponse`1<TDocument> SearchTemplate(ISearchTemplateRequest request);
    public abstract virtual Task`1<ISearchResponse`1<TDocument>> SearchTemplateAsync(ISearchTemplateRequest request, CancellationToken ct);
    public abstract virtual TermVectorsResponse TermVectors(Func`2<TermVectorsDescriptor`1<TDocument>, ITermVectorsRequest`1<TDocument>> selector);
    public abstract virtual Task`1<TermVectorsResponse> TermVectorsAsync(Func`2<TermVectorsDescriptor`1<TDocument>, ITermVectorsRequest`1<TDocument>> selector, CancellationToken ct);
    public abstract virtual TermVectorsResponse TermVectors(ITermVectorsRequest`1<TDocument> request);
    public abstract virtual Task`1<TermVectorsResponse> TermVectorsAsync(ITermVectorsRequest`1<TDocument> request, CancellationToken ct);
    public abstract virtual UpdateResponse`1<TDocument> Update(DocumentPath`1<TDocument> id, Func`2<UpdateDescriptor`2<TDocument, TPartialDocument>, IUpdateRequest`2<TDocument, TPartialDocument>> selector);
    public abstract virtual Task`1<UpdateResponse`1<TDocument>> UpdateAsync(DocumentPath`1<TDocument> id, Func`2<UpdateDescriptor`2<TDocument, TPartialDocument>, IUpdateRequest`2<TDocument, TPartialDocument>> selector, CancellationToken ct);
    public abstract virtual UpdateResponse`1<TDocument> Update(DocumentPath`1<TDocument> id, Func`2<UpdateDescriptor`2<TDocument, TDocument>, IUpdateRequest`2<TDocument, TDocument>> selector);
    public abstract virtual Task`1<UpdateResponse`1<TDocument>> UpdateAsync(DocumentPath`1<TDocument> id, Func`2<UpdateDescriptor`2<TDocument, TDocument>, IUpdateRequest`2<TDocument, TDocument>> selector, CancellationToken ct);
    public abstract virtual UpdateResponse`1<TDocument> Update(IUpdateRequest`2<TDocument, TPartialDocument> request);
    public abstract virtual Task`1<UpdateResponse`1<TDocument>> UpdateAsync(IUpdateRequest`2<TDocument, TPartialDocument> request, CancellationToken ct);
    public abstract virtual UpdateByQueryResponse UpdateByQuery(Func`2<UpdateByQueryDescriptor`1<TDocument>, IUpdateByQueryRequest> selector);
    public abstract virtual Task`1<UpdateByQueryResponse> UpdateByQueryAsync(Func`2<UpdateByQueryDescriptor`1<TDocument>, IUpdateByQueryRequest> selector, CancellationToken ct);
    public abstract virtual UpdateByQueryResponse UpdateByQuery(IUpdateByQueryRequest request);
    public abstract virtual Task`1<UpdateByQueryResponse> UpdateByQueryAsync(IUpdateByQueryRequest request, CancellationToken ct);
    public abstract virtual ListTasksResponse UpdateByQueryRethrottle(TaskId taskId, Func`2<UpdateByQueryRethrottleDescriptor, IUpdateByQueryRethrottleRequest> selector);
    public abstract virtual Task`1<ListTasksResponse> UpdateByQueryRethrottleAsync(TaskId taskId, Func`2<UpdateByQueryRethrottleDescriptor, IUpdateByQueryRethrottleRequest> selector, CancellationToken ct);
    public abstract virtual ListTasksResponse UpdateByQueryRethrottle(IUpdateByQueryRethrottleRequest request);
    public abstract virtual Task`1<ListTasksResponse> UpdateByQueryRethrottleAsync(IUpdateByQueryRethrottleRequest request, CancellationToken ct);
    public abstract virtual SnapshotNamespace get_Snapshot();
    public abstract virtual TasksNamespace get_Tasks();
    public abstract virtual CatNamespace get_Cat();
    public abstract virtual ClusterNamespace get_Cluster();
    public abstract virtual IndicesNamespace get_Indices();
    public abstract virtual HttpNamespace get_Http();
    public abstract virtual CreatePitResponse CreatePit(Indices index, Func`2<CreatePitDescriptor, ICreatePitRequest> selector);
    public abstract virtual Task`1<CreatePitResponse> CreatePitAsync(Indices index, Func`2<CreatePitDescriptor, ICreatePitRequest> selector, CancellationToken ct);
    public abstract virtual CreatePitResponse CreatePit(ICreatePitRequest request);
    public abstract virtual Task`1<CreatePitResponse> CreatePitAsync(ICreatePitRequest request, CancellationToken ct);
    public abstract virtual DeleteAllPitsResponse DeleteAllPits(Func`2<DeleteAllPitsDescriptor, IDeleteAllPitsRequest> selector);
    public abstract virtual Task`1<DeleteAllPitsResponse> DeleteAllPitsAsync(Func`2<DeleteAllPitsDescriptor, IDeleteAllPitsRequest> selector, CancellationToken ct);
    public abstract virtual DeleteAllPitsResponse DeleteAllPits(IDeleteAllPitsRequest request);
    public abstract virtual Task`1<DeleteAllPitsResponse> DeleteAllPitsAsync(IDeleteAllPitsRequest request, CancellationToken ct);
    public abstract virtual DeletePitResponse DeletePit(Func`2<DeletePitDescriptor, IDeletePitRequest> selector);
    public abstract virtual Task`1<DeletePitResponse> DeletePitAsync(Func`2<DeletePitDescriptor, IDeletePitRequest> selector, CancellationToken ct);
    public abstract virtual DeletePitResponse DeletePit(IDeletePitRequest request);
    public abstract virtual Task`1<DeletePitResponse> DeletePitAsync(IDeletePitRequest request, CancellationToken ct);
    public abstract virtual GetAllPitsResponse GetAllPits(Func`2<GetAllPitsDescriptor, IGetAllPitsRequest> selector);
    public abstract virtual Task`1<GetAllPitsResponse> GetAllPitsAsync(Func`2<GetAllPitsDescriptor, IGetAllPitsRequest> selector, CancellationToken ct);
    public abstract virtual GetAllPitsResponse GetAllPits(IGetAllPitsRequest request);
    public abstract virtual Task`1<GetAllPitsResponse> GetAllPitsAsync(IGetAllPitsRequest request, CancellationToken ct);
}
public class OpenSearch.Client.IpAddressRange : object {
    [CompilerGeneratedAttribute]
private string <GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LessThanOrEqualTo>k__BackingField;
    [DataMemberAttribute]
public string GreaterThan { get; public set; }
    [DataMemberAttribute]
public string GreaterThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public string LessThan { get; public set; }
    [DataMemberAttribute]
public string LessThanOrEqualTo { get; public set; }
    [CompilerGeneratedAttribute]
public string get_GreaterThan();
    [CompilerGeneratedAttribute]
public void set_GreaterThan(string value);
    [CompilerGeneratedAttribute]
public string get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_GreaterThanOrEqualTo(string value);
    [CompilerGeneratedAttribute]
public string get_LessThan();
    [CompilerGeneratedAttribute]
public void set_LessThan(string value);
    [CompilerGeneratedAttribute]
public string get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_LessThanOrEqualTo(string value);
}
[ReadAsAttribute("OpenSearch.Client.PainlessContextSetup")]
public interface OpenSearch.Client.IPainlessContextSetup {
    [DataMemberAttribute]
public object Document { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    public abstract virtual object get_Document();
    public abstract virtual void set_Document(object value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ParentAggregation")]
public interface OpenSearch.Client.IParentAggregation {
    [DataMemberAttribute]
public RelationName Type { get; public set; }
    public abstract virtual RelationName get_Type();
    public abstract virtual void set_Type(RelationName value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ParentIdQuery")]
public interface OpenSearch.Client.IParentIdQuery {
    [DataMemberAttribute]
public Id Id { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    [DataMemberAttribute]
public RelationName Type { get; public set; }
    public abstract virtual Id get_Id();
    public abstract virtual void set_Id(Id value);
    public abstract virtual Nullable`1<bool> get_IgnoreUnmapped();
    public abstract virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    public abstract virtual RelationName get_Type();
    public abstract virtual void set_Type(RelationName value);
}
public interface OpenSearch.Client.IPathHierarchyTokenizer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> BufferSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<char> Delimiter { get; public set; }
    [DataMemberAttribute]
public Nullable`1<char> Replacement { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Reverse { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> Skip { get; public set; }
    public abstract virtual Nullable`1<int> get_BufferSize();
    public abstract virtual void set_BufferSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<char> get_Delimiter();
    public abstract virtual void set_Delimiter(Nullable`1<char> value);
    public abstract virtual Nullable`1<char> get_Replacement();
    public abstract virtual void set_Replacement(Nullable`1<char> value);
    public abstract virtual Nullable`1<bool> get_Reverse();
    public abstract virtual void set_Reverse(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_Skip();
    public abstract virtual void set_Skip(Nullable`1<int> value);
}
public interface OpenSearch.Client.IPatternAnalyzer {
    [DataMemberAttribute]
public string Flags { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Lowercase { get; public set; }
    [DataMemberAttribute]
public string Pattern { get; public set; }
    [DataMemberAttribute]
public StopWords StopWords { get; public set; }
    public abstract virtual string get_Flags();
    public abstract virtual void set_Flags(string value);
    public abstract virtual Nullable`1<bool> get_Lowercase();
    public abstract virtual void set_Lowercase(Nullable`1<bool> value);
    public abstract virtual string get_Pattern();
    public abstract virtual void set_Pattern(string value);
    public abstract virtual StopWords get_StopWords();
    public abstract virtual void set_StopWords(StopWords value);
}
public interface OpenSearch.Client.IPatternCaptureTokenFilter {
    [DataMemberAttribute]
public IEnumerable`1<string> Patterns { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> PreserveOriginal { get; public set; }
    public abstract virtual IEnumerable`1<string> get_Patterns();
    public abstract virtual void set_Patterns(IEnumerable`1<string> value);
    public abstract virtual Nullable`1<bool> get_PreserveOriginal();
    public abstract virtual void set_PreserveOriginal(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IPatternReplaceCharFilter {
    [DataMemberAttribute]
public string Flags { get; public set; }
    [DataMemberAttribute]
public string Pattern { get; public set; }
    [DataMemberAttribute]
public string Replacement { get; public set; }
    public abstract virtual string get_Flags();
    public abstract virtual void set_Flags(string value);
    public abstract virtual string get_Pattern();
    public abstract virtual void set_Pattern(string value);
    public abstract virtual string get_Replacement();
    public abstract virtual void set_Replacement(string value);
}
public interface OpenSearch.Client.IPatternReplaceTokenFilter {
    [DataMemberAttribute]
public string Flags { get; public set; }
    [DataMemberAttribute]
public string Pattern { get; public set; }
    [DataMemberAttribute]
public string Replacement { get; public set; }
    public abstract virtual string get_Flags();
    public abstract virtual void set_Flags(string value);
    public abstract virtual string get_Pattern();
    public abstract virtual void set_Pattern(string value);
    public abstract virtual string get_Replacement();
    public abstract virtual void set_Replacement(string value);
}
public interface OpenSearch.Client.IPatternTokenizer {
    [DataMemberAttribute]
public string Flags { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> Group { get; public set; }
    [DataMemberAttribute]
public string Pattern { get; public set; }
    public abstract virtual string get_Flags();
    public abstract virtual void set_Flags(string value);
    public abstract virtual Nullable`1<int> get_Group();
    public abstract virtual void set_Group(Nullable`1<int> value);
    public abstract virtual string get_Pattern();
    public abstract virtual void set_Pattern(string value);
}
public class OpenSearch.Client.IpAttribute : OpenSearchDocValuesPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IIpProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIpProperty.NullValue>k__BackingField;
    public bool Index { get; public set; }
    public string NullValue { get; public set; }
    private Nullable`1<bool> OpenSearch.Client.IIpProperty.Index { get; private set; }
    private string OpenSearch.Client.IIpProperty.NullValue { get; private set; }
    private IIpProperty Self { get; }
    public bool get_Index();
    public void set_Index(bool value);
    public string get_NullValue();
    public void set_NullValue(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IIpProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIpProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIpProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIpProperty.set_NullValue(string value);
    private IIpProperty get_Self();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.PercentageScoreHeuristic")]
public interface OpenSearch.Client.IPercentageScoreHeuristic {
}
[JsonFormatterAttribute("OpenSearch.Client.PercentileRanksAggregationFormatter")]
public interface OpenSearch.Client.IPercentileRanksAggregation {
    public IPercentilesMethod Method { get; public set; }
    public IEnumerable`1<double> Values { get; public set; }
    public Nullable`1<bool> Keyed { get; public set; }
    public abstract virtual IPercentilesMethod get_Method();
    public abstract virtual void set_Method(IPercentilesMethod value);
    public abstract virtual IEnumerable`1<double> get_Values();
    public abstract virtual void set_Values(IEnumerable`1<double> value);
    public abstract virtual Nullable`1<bool> get_Keyed();
    public abstract virtual void set_Keyed(Nullable`1<bool> value);
}
[JsonFormatterAttribute("OpenSearch.Client.PercentilesAggregationFormatter")]
public interface OpenSearch.Client.IPercentilesAggregation {
    public IPercentilesMethod Method { get; public set; }
    public IEnumerable`1<double> Percents { get; public set; }
    public Nullable`1<bool> Keyed { get; public set; }
    public abstract virtual IPercentilesMethod get_Method();
    public abstract virtual void set_Method(IPercentilesMethod value);
    public abstract virtual IEnumerable`1<double> get_Percents();
    public abstract virtual void set_Percents(IEnumerable`1<double> value);
    public abstract virtual Nullable`1<bool> get_Keyed();
    public abstract virtual void set_Keyed(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.PercentilesBucketAggregation")]
public interface OpenSearch.Client.IPercentilesBucketAggregation {
    [DataMemberAttribute]
public IEnumerable`1<double> Percents { get; public set; }
    public abstract virtual IEnumerable`1<double> get_Percents();
    public abstract virtual void set_Percents(IEnumerable`1<double> value);
}
public interface OpenSearch.Client.IPercentilesMethod {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.PercolateQuery")]
public interface OpenSearch.Client.IPercolateQuery {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1<System.Object>")]
public object Document { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1<System.Collections.Generic.IEnumerable`1<System.Object>>")]
public IEnumerable`1<object> Documents { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Id Id { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public string Preference { get; public set; }
    [DataMemberAttribute]
public Routing Routing { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> Version { get; public set; }
    public abstract virtual object get_Document();
    public abstract virtual void set_Document(object value);
    public abstract virtual IEnumerable`1<object> get_Documents();
    public abstract virtual void set_Documents(IEnumerable`1<object> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Id get_Id();
    public abstract virtual void set_Id(Id value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual string get_Preference();
    public abstract virtual void set_Preference(string value);
    public abstract virtual Routing get_Routing();
    public abstract virtual void set_Routing(Routing value);
    public abstract virtual Nullable`1<long> get_Version();
    public abstract virtual void set_Version(Nullable`1<long> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPercolatorProperty {
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.PerFieldAnalyzer,OpenSearch.Client.IPerFieldAnalyzer,OpenSearch.Client.Field,System.String>")]
public interface OpenSearch.Client.IPerFieldAnalyzer {
}
public interface OpenSearch.Client.IPhoneticTokenFilter {
    [DataMemberAttribute]
public Nullable`1<PhoneticEncoder> Encoder { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<PhoneticLanguage> LanguageSet { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxCodeLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<PhoneticNameType> NameType { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Replace { get; public set; }
    [DataMemberAttribute]
public Nullable`1<PhoneticRuleType> RuleType { get; public set; }
    public abstract virtual Nullable`1<PhoneticEncoder> get_Encoder();
    public abstract virtual void set_Encoder(Nullable`1<PhoneticEncoder> value);
    public abstract virtual IEnumerable`1<PhoneticLanguage> get_LanguageSet();
    public abstract virtual void set_LanguageSet(IEnumerable`1<PhoneticLanguage> value);
    public abstract virtual Nullable`1<int> get_MaxCodeLength();
    public abstract virtual void set_MaxCodeLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<PhoneticNameType> get_NameType();
    public abstract virtual void set_NameType(Nullable`1<PhoneticNameType> value);
    public abstract virtual Nullable`1<bool> get_Replace();
    public abstract virtual void set_Replace(Nullable`1<bool> value);
    public abstract virtual Nullable`1<PhoneticRuleType> get_RuleType();
    public abstract virtual void set_RuleType(Nullable`1<PhoneticRuleType> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.PhraseSuggestCollate")]
public interface OpenSearch.Client.IPhraseSuggestCollate {
    [DataMemberAttribute]
public IDictionary`2<string, object> Params { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Prune { get; public set; }
    [DataMemberAttribute]
public IPhraseSuggestCollateQuery Query { get; public set; }
    public abstract virtual IDictionary`2<string, object> get_Params();
    public abstract virtual void set_Params(IDictionary`2<string, object> value);
    public abstract virtual Nullable`1<bool> get_Prune();
    public abstract virtual void set_Prune(Nullable`1<bool> value);
    public abstract virtual IPhraseSuggestCollateQuery get_Query();
    public abstract virtual void set_Query(IPhraseSuggestCollateQuery value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.PhraseSuggestCollateQuery")]
public interface OpenSearch.Client.IPhraseSuggestCollateQuery {
    [DataMemberAttribute]
public Id Id { get; public set; }
    [DataMemberAttribute]
public string Source { get; public set; }
    public abstract virtual Id get_Id();
    public abstract virtual void set_Id(Id value);
    public abstract virtual string get_Source();
    public abstract virtual void set_Source(string value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.PhraseSuggester")]
public interface OpenSearch.Client.IPhraseSuggester {
    [DataMemberAttribute]
public IPhraseSuggestCollate Collate { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Confidence { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<IDirectGenerator> DirectGenerator { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> ForceUnigrams { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> GramSize { get; public set; }
    [DataMemberAttribute]
public IPhraseSuggestHighlight Highlight { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> MaxErrors { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> RealWordErrorLikelihood { get; public set; }
    [DataMemberAttribute]
public Nullable`1<char> Separator { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> ShardSize { get; public set; }
    [DataMemberAttribute]
public SmoothingModelContainer Smoothing { get; public set; }
    [IgnoreDataMemberAttribute]
public string Text { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> TokenLimit { get; public set; }
    public abstract virtual IPhraseSuggestCollate get_Collate();
    public abstract virtual void set_Collate(IPhraseSuggestCollate value);
    public abstract virtual Nullable`1<double> get_Confidence();
    public abstract virtual void set_Confidence(Nullable`1<double> value);
    public abstract virtual IEnumerable`1<IDirectGenerator> get_DirectGenerator();
    public abstract virtual void set_DirectGenerator(IEnumerable`1<IDirectGenerator> value);
    public abstract virtual Nullable`1<bool> get_ForceUnigrams();
    public abstract virtual void set_ForceUnigrams(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_GramSize();
    public abstract virtual void set_GramSize(Nullable`1<int> value);
    public abstract virtual IPhraseSuggestHighlight get_Highlight();
    public abstract virtual void set_Highlight(IPhraseSuggestHighlight value);
    public abstract virtual Nullable`1<double> get_MaxErrors();
    public abstract virtual void set_MaxErrors(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_RealWordErrorLikelihood();
    public abstract virtual void set_RealWordErrorLikelihood(Nullable`1<double> value);
    public abstract virtual Nullable`1<char> get_Separator();
    public abstract virtual void set_Separator(Nullable`1<char> value);
    public abstract virtual Nullable`1<int> get_ShardSize();
    public abstract virtual void set_ShardSize(Nullable`1<int> value);
    public abstract virtual SmoothingModelContainer get_Smoothing();
    public abstract virtual void set_Smoothing(SmoothingModelContainer value);
    public abstract virtual string get_Text();
    public abstract virtual void set_Text(string value);
    public abstract virtual Nullable`1<int> get_TokenLimit();
    public abstract virtual void set_TokenLimit(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPhraseSuggestHighlight {
    [DataMemberAttribute]
public string PostTag { get; public set; }
    [DataMemberAttribute]
public string PreTag { get; public set; }
    public abstract virtual string get_PostTag();
    public abstract virtual void set_PostTag(string value);
    public abstract virtual string get_PreTag();
    public abstract virtual void set_PreTag(string value);
}
[MapsApiAttribute("ping.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPingRequest {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.Pipeline")]
public interface OpenSearch.Client.IPipeline {
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<IProcessor> OnFailure { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<IProcessor> Processors { get; public set; }
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual IEnumerable`1<IProcessor> get_OnFailure();
    public abstract virtual void set_OnFailure(IEnumerable`1<IProcessor> value);
    public abstract virtual IEnumerable`1<IProcessor> get_Processors();
    public abstract virtual void set_Processors(IEnumerable`1<IProcessor> value);
}
public interface OpenSearch.Client.IPipelineAggregation {
    [DataMemberAttribute]
public IBucketsPath BucketsPath { get; public set; }
    [DataMemberAttribute]
public string Format { get; public set; }
    [DataMemberAttribute]
public Nullable`1<GapPolicy> GapPolicy { get; public set; }
    public abstract virtual IBucketsPath get_BucketsPath();
    public abstract virtual void set_BucketsPath(IBucketsPath value);
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
    public abstract virtual Nullable`1<GapPolicy> get_GapPolicy();
    public abstract virtual void set_GapPolicy(Nullable`1<GapPolicy> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPipelineProcessor {
    [DataMemberAttribute]
public string ProcessorName { get; public set; }
    public abstract virtual string get_ProcessorName();
    public abstract virtual void set_ProcessorName(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.IPointGeoShape>")]
public interface OpenSearch.Client.IPointGeoShape {
    [DataMemberAttribute]
public GeoCoordinate Coordinates { get; public set; }
    public abstract virtual GeoCoordinate get_Coordinates();
    public abstract virtual void set_Coordinates(GeoCoordinate value);
}
[ReadAsAttribute("OpenSearch.Client.PointInTime")]
public interface OpenSearch.Client.IPointInTime {
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public Time KeepAlive { get; public set; }
    public abstract virtual string get_Id();
    public abstract virtual void set_Id(string value);
    public abstract virtual Time get_KeepAlive();
    public abstract virtual void set_KeepAlive(Time value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.IPolygonGeoShape>")]
public interface OpenSearch.Client.IPolygonGeoShape {
    [DataMemberAttribute]
public IEnumerable`1<IEnumerable`1<GeoCoordinate>> Coordinates { get; public set; }
    public abstract virtual IEnumerable`1<IEnumerable`1<GeoCoordinate>> get_Coordinates();
    public abstract virtual void set_Coordinates(IEnumerable`1<IEnumerable`1<GeoCoordinate>> value);
}
public interface OpenSearch.Client.IPorterStemTokenFilter {
}
[MapsApiAttribute("cluster.post_voting_config_exclusions")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPostVotingConfigExclusionsRequest {
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.IpProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NullValue>k__BackingField;
    public Nullable`1<double> Boost { get; public set; }
    public Nullable`1<bool> Index { get; public set; }
    public string NullValue { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Boost();
    [CompilerGeneratedAttribute]
public void set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_NullValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NullValue(string value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.IpPropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<IpPropertyDescriptor`1<T>, IIpProperty, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IIpProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIpProperty.NullValue>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IIpProperty.Index { get; private set; }
    private string OpenSearch.Client.IIpProperty.NullValue { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IIpProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIpProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIpProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIpProperty.set_NullValue(string value);
    public IpPropertyDescriptor`1<T> Index(Nullable`1<bool> index);
    public IpPropertyDescriptor`1<T> NullValue(string nullValue);
}
public class OpenSearch.Client.IpRangeAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IIpRangeAggregationRange> <Ranges>k__BackingField;
    public Field Field { get; public set; }
    public IEnumerable`1<IIpRangeAggregationRange> Ranges { get; public set; }
    public IpRangeAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IIpRangeAggregationRange> get_Ranges();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ranges(IEnumerable`1<IIpRangeAggregationRange> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.IpRangeAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<IpRangeAggregationDescriptor`1<T>, IIpRangeAggregation, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IIpRangeAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IIpRangeAggregationRange> <OpenSearch.Client.IIpRangeAggregation.Ranges>k__BackingField;
    private Field OpenSearch.Client.IIpRangeAggregation.Field { get; private set; }
    private IEnumerable`1<IIpRangeAggregationRange> OpenSearch.Client.IIpRangeAggregation.Ranges { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IIpRangeAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIpRangeAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IIpRangeAggregationRange> OpenSearch.Client.IIpRangeAggregation.get_Ranges();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIpRangeAggregation.set_Ranges(IEnumerable`1<IIpRangeAggregationRange> value);
    public IpRangeAggregationDescriptor`1<T> Field(Field field);
    public IpRangeAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public IpRangeAggregationDescriptor`1<T> Ranges(Func`2[] ranges);
}
public class OpenSearch.Client.IpRangeAggregationRange : object {
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mask>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    public string From { get; public set; }
    public string Mask { get; public set; }
    public string To { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_From();
    [CompilerGeneratedAttribute]
public sealed virtual void set_From(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Mask();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mask(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_To();
    [CompilerGeneratedAttribute]
public sealed virtual void set_To(string value);
}
public class OpenSearch.Client.IpRangeAggregationRangeDescriptor : DescriptorBase`2<IpRangeAggregationRangeDescriptor, IIpRangeAggregationRange> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIpRangeAggregationRange.From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIpRangeAggregationRange.Mask>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IIpRangeAggregationRange.To>k__BackingField;
    private string OpenSearch.Client.IIpRangeAggregationRange.From { get; private set; }
    private string OpenSearch.Client.IIpRangeAggregationRange.Mask { get; private set; }
    private string OpenSearch.Client.IIpRangeAggregationRange.To { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIpRangeAggregationRange.get_From();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIpRangeAggregationRange.set_From(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIpRangeAggregationRange.get_Mask();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIpRangeAggregationRange.set_Mask(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IIpRangeAggregationRange.get_To();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIpRangeAggregationRange.set_To(string value);
    public IpRangeAggregationRangeDescriptor From(string from);
    public IpRangeAggregationRangeDescriptor To(string to);
    public IpRangeAggregationRangeDescriptor Mask(string mask);
}
public class OpenSearch.Client.IpRangeAttribute : RangePropertyAttributeBase {
}
public class OpenSearch.Client.IpRangeBucket : BucketBase {
    [CompilerGeneratedAttribute]
private long <DocCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    public long DocCount { get; public set; }
    public string From { get; public set; }
    public string Key { get; public set; }
    public string To { get; public set; }
    public IpRangeBucket(IReadOnlyDictionary`2<string, IAggregate> dict);
    [CompilerGeneratedAttribute]
public long get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(long value);
    [CompilerGeneratedAttribute]
public string get_From();
    [CompilerGeneratedAttribute]
public void set_From(string value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_To();
    [CompilerGeneratedAttribute]
public void set_To(string value);
}
public class OpenSearch.Client.IpRangeProperty : RangePropertyBase {
}
public class OpenSearch.Client.IpRangePropertyDescriptor`1 : RangePropertyDescriptorBase`3<IpRangePropertyDescriptor`1<T>, IIpRangeProperty, T> {
}
public interface OpenSearch.Client.IPredicateTokenFilter {
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.PrefixQuery,OpenSearch.Client.IPrefixQuery>")]
public interface OpenSearch.Client.IPrefixQuery {
    [DataMemberAttribute]
public MultiTermQueryRewrite Rewrite { get; public set; }
    public abstract virtual MultiTermQueryRewrite get_Rewrite();
    public abstract virtual void set_Rewrite(MultiTermQueryRewrite value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.ProcessorFormatter")]
public interface OpenSearch.Client.IProcessor {
    [IgnoreDataMemberAttribute]
public string Name { get; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<IProcessor> OnFailure { get; public set; }
    [DataMemberAttribute]
public string If { get; public set; }
    [DataMemberAttribute]
public string Tag { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreFailure { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual IEnumerable`1<IProcessor> get_OnFailure();
    public abstract virtual void set_OnFailure(IEnumerable`1<IProcessor> value);
    public abstract virtual string get_If();
    public abstract virtual void set_If(string value);
    public abstract virtual string get_Tag();
    public abstract virtual void set_Tag(string value);
    public abstract virtual Nullable`1<bool> get_IgnoreFailure();
    public abstract virtual void set_IgnoreFailure(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IPromise`1 {
    public TValue Value { get; }
    public abstract virtual TValue get_Value();
}
[JsonFormatterAttribute("OpenSearch.Client.PropertiesFormatter")]
public interface OpenSearch.Client.IProperties {
}
public interface OpenSearch.Client.IPropertiesDescriptor`2 {
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, int>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<int>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<int>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<int>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, float>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<float>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<float>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<float>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, sbyte>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<sbyte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<sbyte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<sbyte>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, short>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<short>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<short>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<short>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, byte>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<byte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<byte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<byte>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, long>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<long>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<long>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<long>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, UInt32>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<UInt32>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<UInt32>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<UInt32>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, TimeSpan>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<TimeSpan>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<TimeSpan>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<TimeSpan>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, decimal>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<decimal>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<decimal>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<decimal>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, ulong>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<ulong>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<ulong>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<ulong>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, double>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<double>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<double>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<double>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Enum>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, DateTime>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<DateTime>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<DateTime>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<DateTime>>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, DateTimeOffset>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<DateTimeOffset>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<DateTimeOffset>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<DateTimeOffset>>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, bool>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<bool>>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<bool>>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<bool>>>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, char>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<char>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<char>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<char>>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Guid>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, Nullable`1<Guid>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Guid>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<Guid>>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, string>> field, Func`2<TextPropertyDescriptor`1<T>, ITextProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IEnumerable`1<string>>> field, Func`2<TextPropertyDescriptor`1<T>, ITextProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, DateRange>> field, Func`2<DateRangePropertyDescriptor`1<T>, IDateRangeProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, DoubleRange>> field, Func`2<DoubleRangePropertyDescriptor`1<T>, IDoubleRangeProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, LongRange>> field, Func`2<LongRangePropertyDescriptor`1<T>, ILongRangeProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IntegerRange>> field, Func`2<IntegerRangePropertyDescriptor`1<T>, IIntegerRangeProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, FloatRange>> field, Func`2<FloatRangePropertyDescriptor`1<T>, IFloatRangeProperty> selector);
    public abstract virtual TReturnType Scalar(Expression`1<Func`2<T, IpAddressRange>> field, Func`2<IpRangePropertyDescriptor`1<T>, IIpRangeProperty> selector);
    public abstract virtual TReturnType Text(Func`2<TextPropertyDescriptor`1<T>, ITextProperty> selector);
    public abstract virtual TReturnType Keyword(Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public abstract virtual TReturnType Number(Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public abstract virtual TReturnType TokenCount(Func`2<TokenCountPropertyDescriptor`1<T>, ITokenCountProperty> selector);
    public abstract virtual TReturnType Date(Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public abstract virtual TReturnType DateNanos(Func`2<DateNanosPropertyDescriptor`1<T>, IDateNanosProperty> selector);
    public abstract virtual TReturnType Boolean(Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public abstract virtual TReturnType Binary(Func`2<BinaryPropertyDescriptor`1<T>, IBinaryProperty> selector);
    public abstract virtual TReturnType Object(Func`2<ObjectTypeDescriptor`2<T, TChild>, IObjectProperty> selector);
    public abstract virtual TReturnType Nested(Func`2<NestedPropertyDescriptor`2<T, TChild>, INestedProperty> selector);
    public abstract virtual TReturnType Ip(Func`2<IpPropertyDescriptor`1<T>, IIpProperty> selector);
    public abstract virtual TReturnType GeoPoint(Func`2<GeoPointPropertyDescriptor`1<T>, IGeoPointProperty> selector);
    public abstract virtual TReturnType GeoShape(Func`2<GeoShapePropertyDescriptor`1<T>, IGeoShapeProperty> selector);
    public abstract virtual TReturnType Completion(Func`2<CompletionPropertyDescriptor`1<T>, ICompletionProperty> selector);
    public abstract virtual TReturnType Murmur3Hash(Func`2<Murmur3HashPropertyDescriptor`1<T>, IMurmur3HashProperty> selector);
    public abstract virtual TReturnType Percolator(Func`2<PercolatorPropertyDescriptor`1<T>, IPercolatorProperty> selector);
    public abstract virtual TReturnType DateRange(Func`2<DateRangePropertyDescriptor`1<T>, IDateRangeProperty> selector);
    public abstract virtual TReturnType DoubleRange(Func`2<DoubleRangePropertyDescriptor`1<T>, IDoubleRangeProperty> selector);
    public abstract virtual TReturnType FloatRange(Func`2<FloatRangePropertyDescriptor`1<T>, IFloatRangeProperty> selector);
    public abstract virtual TReturnType IntegerRange(Func`2<IntegerRangePropertyDescriptor`1<T>, IIntegerRangeProperty> selector);
    public abstract virtual TReturnType LongRange(Func`2<LongRangePropertyDescriptor`1<T>, ILongRangeProperty> selector);
    public abstract virtual TReturnType IpRange(Func`2<IpRangePropertyDescriptor`1<T>, IIpRangeProperty> selector);
    public abstract virtual TReturnType Join(Func`2<JoinPropertyDescriptor`1<T>, IJoinProperty> selector);
    public abstract virtual TReturnType FieldAlias(Func`2<FieldAliasPropertyDescriptor`1<T>, IFieldAliasProperty> selector);
    public abstract virtual TReturnType RankFeature(Func`2<RankFeaturePropertyDescriptor`1<T>, IRankFeatureProperty> selector);
    public abstract virtual TReturnType RankFeatures(Func`2<RankFeaturesPropertyDescriptor`1<T>, IRankFeaturesProperty> selector);
    public abstract virtual TReturnType SearchAsYouType(Func`2<SearchAsYouTypePropertyDescriptor`1<T>, ISearchAsYouTypeProperty> selector);
    public abstract virtual TReturnType KnnVector(Func`2<KnnVectorPropertyDescriptor`1<T>, IKnnVectorProperty> selector);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.PropertyFormatter")]
public interface OpenSearch.Client.IProperty {
    [IgnoreDataMemberAttribute]
public IDictionary`2<string, object> LocalMetadata { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, string> Meta { get; public set; }
    [IgnoreDataMemberAttribute]
public PropertyName Name { get; public set; }
    [DataMemberAttribute]
public string Type { get; public set; }
    public abstract virtual IDictionary`2<string, object> get_LocalMetadata();
    public abstract virtual void set_LocalMetadata(IDictionary`2<string, object> value);
    public abstract virtual IDictionary`2<string, string> get_Meta();
    public abstract virtual void set_Meta(IDictionary`2<string, string> value);
    public abstract virtual PropertyName get_Name();
    public abstract virtual void set_Name(PropertyName value);
    public abstract virtual string get_Type();
    public abstract virtual void set_Type(string value);
}
public interface OpenSearch.Client.IPropertyMapping {
    public bool Ignore { get; public set; }
    public string Name { get; public set; }
    public abstract virtual bool get_Ignore();
    public abstract virtual void set_Ignore(bool value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
}
public interface OpenSearch.Client.IPropertyMappingProvider {
    public abstract virtual IPropertyMapping CreatePropertyMapping(MemberInfo memberInfo);
}
public interface OpenSearch.Client.IPropertyVisitor {
    public abstract virtual void Visit(ITextProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IKeywordProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(INumberProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IBooleanProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IDateProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IDateNanosProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IBinaryProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(INestedProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IObjectProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IGeoPointProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IGeoShapeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(ICompletionProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IIpProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IMurmur3HashProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(ITokenCountProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IPercolatorProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IIntegerRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IFloatRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(ILongRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IDoubleRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IDateRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IIpRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IJoinProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IRankFeatureProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IRankFeaturesProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(ISearchAsYouTypeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IFieldAliasProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual void Visit(IKnnVectorProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual IProperty Visit(PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public abstract virtual bool SkipProperty(PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
}
public interface OpenSearch.Client.IPropertyWithClrOrigin {
    public PropertyInfo ClrOrigin { get; public set; }
    public abstract virtual PropertyInfo get_ClrOrigin();
    public abstract virtual void set_ClrOrigin(PropertyInfo value);
}
public interface OpenSearch.Client.IProxyRequest {
    public abstract virtual void WriteJson(IOpenSearchSerializer sourceSerializer, Stream s, SerializationFormatting serializationFormatting);
}
[MapsApiAttribute("indices.put_alias.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPutAliasRequest {
    [DataMemberAttribute]
public QueryContainer Filter { get; public set; }
    [DataMemberAttribute]
public Routing IndexRouting { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IsWriteIndex { get; public set; }
    [DataMemberAttribute]
public Routing Routing { get; public set; }
    [DataMemberAttribute]
public Routing SearchRouting { get; public set; }
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    [IgnoreDataMemberAttribute]
public Name Name { get; }
    public abstract virtual QueryContainer get_Filter();
    public abstract virtual void set_Filter(QueryContainer value);
    public abstract virtual Routing get_IndexRouting();
    public abstract virtual void set_IndexRouting(Routing value);
    public abstract virtual Nullable`1<bool> get_IsWriteIndex();
    public abstract virtual void set_IsWriteIndex(Nullable`1<bool> value);
    public abstract virtual Routing get_Routing();
    public abstract virtual void set_Routing(Routing value);
    public abstract virtual Routing get_SearchRouting();
    public abstract virtual void set_SearchRouting(Routing value);
    public abstract virtual Indices get_Index();
    public abstract virtual Name get_Name();
}
[MapsApiAttribute("cluster.put_component_template")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPutComponentTemplateRequest {
    [IgnoreDataMemberAttribute]
public Name Name { get; }
    public abstract virtual Name get_Name();
}
[MapsApiAttribute("indices.put_index_template")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPutComposableIndexTemplateRequest {
    [IgnoreDataMemberAttribute]
public Name Name { get; }
    public abstract virtual Name get_Name();
}
[MapsApiAttribute("indices.put_template.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPutIndexTemplateRequest {
    [IgnoreDataMemberAttribute]
public Name Name { get; }
    public abstract virtual Name get_Name();
}
[MapsApiAttribute("indices.put_mapping.json")]
[ReadAsAttribute("OpenSearch.Client.PutMappingRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPutMappingRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.PutMappingRequest`1<System.Object>")]
public interface OpenSearch.Client.IPutMappingRequest`1 {
}
[MapsApiAttribute("ingest.put_pipeline.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPutPipelineRequest {
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual Id get_Id();
}
[MapsApiAttribute("put_script.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IPutScriptRequest {
    [DataMemberAttribute]
public IStoredScript Script { get; public set; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    [IgnoreDataMemberAttribute]
public Name Context { get; }
    public abstract virtual IStoredScript get_Script();
    public abstract virtual void set_Script(IStoredScript value);
    public abstract virtual Id get_Id();
    public abstract virtual Name get_Context();
}
public interface OpenSearch.Client.IQueriesCacheSettings {
    public Nullable`1<bool> Enabled { get; public set; }
    public abstract virtual Nullable`1<bool> get_Enabled();
    public abstract virtual void set_Enabled(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IQueriesSettings {
    public IQueriesCacheSettings Cache { get; public set; }
    public abstract virtual IQueriesCacheSettings get_Cache();
    public abstract virtual void set_Cache(IQueriesCacheSettings value);
}
public interface OpenSearch.Client.IQuery {
    [DataMemberAttribute]
public Nullable`1<double> Boost { get; public set; }
    [IgnoreDataMemberAttribute]
public bool Conditionless { get; }
    [IgnoreDataMemberAttribute]
public bool IsStrict { get; public set; }
    [IgnoreDataMemberAttribute]
public bool IsVerbatim { get; public set; }
    [IgnoreDataMemberAttribute]
public bool IsWritable { get; }
    [DataMemberAttribute]
public string Name { get; public set; }
    public abstract virtual Nullable`1<double> get_Boost();
    public abstract virtual void set_Boost(Nullable`1<double> value);
    public abstract virtual bool get_Conditionless();
    public abstract virtual bool get_IsStrict();
    public abstract virtual void set_IsStrict(bool value);
    public abstract virtual bool get_IsVerbatim();
    public abstract virtual void set_IsVerbatim(bool value);
    public abstract virtual bool get_IsWritable();
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.QueryContainerInterfaceFormatter")]
public interface OpenSearch.Client.IQueryContainer {
    [DataMemberAttribute]
public IBoolQuery Bool { get; public set; }
    [DataMemberAttribute]
public IBoostingQuery Boosting { get; public set; }
    [DataMemberAttribute]
public IConstantScoreQuery ConstantScore { get; public set; }
    [DataMemberAttribute]
public IDisMaxQuery DisMax { get; public set; }
    [DataMemberAttribute]
public IExistsQuery Exists { get; public set; }
    [DataMemberAttribute]
public IFunctionScoreQuery FunctionScore { get; public set; }
    [DataMemberAttribute]
public IFuzzyQuery Fuzzy { get; public set; }
    [DataMemberAttribute]
public IGeoBoundingBoxQuery GeoBoundingBox { get; public set; }
    [DataMemberAttribute]
public IGeoDistanceQuery GeoDistance { get; public set; }
    [DataMemberAttribute]
public IGeoPolygonQuery GeoPolygon { get; public set; }
    [DataMemberAttribute]
public IGeoShapeQuery GeoShape { get; public set; }
    [DataMemberAttribute]
public IShapeQuery Shape { get; public set; }
    [DataMemberAttribute]
public IHasChildQuery HasChild { get; public set; }
    [DataMemberAttribute]
public IHasParentQuery HasParent { get; public set; }
    [DataMemberAttribute]
public IIdsQuery Ids { get; public set; }
    [DataMemberAttribute]
public IIntervalsQuery Intervals { get; public set; }
    [IgnoreDataMemberAttribute]
public bool IsConditionless { get; }
    [IgnoreDataMemberAttribute]
public bool IsStrict { get; public set; }
    [IgnoreDataMemberAttribute]
public bool IsVerbatim { get; public set; }
    [IgnoreDataMemberAttribute]
public bool IsWritable { get; }
    [DataMemberAttribute]
public IMatchQuery Match { get; public set; }
    [DataMemberAttribute]
public IMatchAllQuery MatchAll { get; public set; }
    [DataMemberAttribute]
public IMatchBoolPrefixQuery MatchBoolPrefix { get; public set; }
    [DataMemberAttribute]
public IMatchNoneQuery MatchNone { get; public set; }
    [DataMemberAttribute]
public IMatchPhraseQuery MatchPhrase { get; public set; }
    [DataMemberAttribute]
public IMatchPhrasePrefixQuery MatchPhrasePrefix { get; public set; }
    [DataMemberAttribute]
public IMoreLikeThisQuery MoreLikeThis { get; public set; }
    [DataMemberAttribute]
public IMultiMatchQuery MultiMatch { get; public set; }
    [DataMemberAttribute]
public INestedQuery Nested { get; public set; }
    [DataMemberAttribute]
public IParentIdQuery ParentId { get; public set; }
    [DataMemberAttribute]
public IPercolateQuery Percolate { get; public set; }
    [DataMemberAttribute]
public IPrefixQuery Prefix { get; public set; }
    [DataMemberAttribute]
public IQueryStringQuery QueryString { get; public set; }
    [DataMemberAttribute]
public IRangeQuery Range { get; public set; }
    [IgnoreDataMemberAttribute]
public IRawQuery RawQuery { get; public set; }
    [DataMemberAttribute]
public IRegexpQuery Regexp { get; public set; }
    [DataMemberAttribute]
public IScriptQuery Script { get; public set; }
    [DataMemberAttribute]
public IScriptScoreQuery ScriptScore { get; public set; }
    [DataMemberAttribute]
public ISimpleQueryStringQuery SimpleQueryString { get; public set; }
    [DataMemberAttribute]
public ISpanContainingQuery SpanContaining { get; public set; }
    [DataMemberAttribute]
public ISpanFieldMaskingQuery SpanFieldMasking { get; public set; }
    [DataMemberAttribute]
public ISpanFirstQuery SpanFirst { get; public set; }
    [DataMemberAttribute]
public ISpanMultiTermQuery SpanMultiTerm { get; public set; }
    [DataMemberAttribute]
public ISpanNearQuery SpanNear { get; public set; }
    [DataMemberAttribute]
public ISpanNotQuery SpanNot { get; public set; }
    [DataMemberAttribute]
public ISpanOrQuery SpanOr { get; public set; }
    [DataMemberAttribute]
public ISpanTermQuery SpanTerm { get; public set; }
    [DataMemberAttribute]
public ISpanWithinQuery SpanWithin { get; public set; }
    [DataMemberAttribute]
public ITermQuery Term { get; public set; }
    [DataMemberAttribute]
public ITermsQuery Terms { get; public set; }
    [DataMemberAttribute]
public ITermsSetQuery TermsSet { get; public set; }
    [DataMemberAttribute]
public IWildcardQuery Wildcard { get; public set; }
    [DataMemberAttribute]
public IRankFeatureQuery RankFeature { get; public set; }
    [DataMemberAttribute]
public IDistanceFeatureQuery DistanceFeature { get; public set; }
    [DataMemberAttribute]
public IKnnQuery Knn { get; public set; }
    [DataMemberAttribute]
public INeuralQuery Neural { get; public set; }
    public abstract virtual IBoolQuery get_Bool();
    public abstract virtual void set_Bool(IBoolQuery value);
    public abstract virtual IBoostingQuery get_Boosting();
    public abstract virtual void set_Boosting(IBoostingQuery value);
    public abstract virtual IConstantScoreQuery get_ConstantScore();
    public abstract virtual void set_ConstantScore(IConstantScoreQuery value);
    public abstract virtual IDisMaxQuery get_DisMax();
    public abstract virtual void set_DisMax(IDisMaxQuery value);
    public abstract virtual IExistsQuery get_Exists();
    public abstract virtual void set_Exists(IExistsQuery value);
    public abstract virtual IFunctionScoreQuery get_FunctionScore();
    public abstract virtual void set_FunctionScore(IFunctionScoreQuery value);
    public abstract virtual IFuzzyQuery get_Fuzzy();
    public abstract virtual void set_Fuzzy(IFuzzyQuery value);
    public abstract virtual IGeoBoundingBoxQuery get_GeoBoundingBox();
    public abstract virtual void set_GeoBoundingBox(IGeoBoundingBoxQuery value);
    public abstract virtual IGeoDistanceQuery get_GeoDistance();
    public abstract virtual void set_GeoDistance(IGeoDistanceQuery value);
    public abstract virtual IGeoPolygonQuery get_GeoPolygon();
    public abstract virtual void set_GeoPolygon(IGeoPolygonQuery value);
    public abstract virtual IGeoShapeQuery get_GeoShape();
    public abstract virtual void set_GeoShape(IGeoShapeQuery value);
    public abstract virtual IShapeQuery get_Shape();
    public abstract virtual void set_Shape(IShapeQuery value);
    public abstract virtual IHasChildQuery get_HasChild();
    public abstract virtual void set_HasChild(IHasChildQuery value);
    public abstract virtual IHasParentQuery get_HasParent();
    public abstract virtual void set_HasParent(IHasParentQuery value);
    public abstract virtual IIdsQuery get_Ids();
    public abstract virtual void set_Ids(IIdsQuery value);
    public abstract virtual IIntervalsQuery get_Intervals();
    public abstract virtual void set_Intervals(IIntervalsQuery value);
    public abstract virtual bool get_IsConditionless();
    public abstract virtual bool get_IsStrict();
    public abstract virtual void set_IsStrict(bool value);
    public abstract virtual bool get_IsVerbatim();
    public abstract virtual void set_IsVerbatim(bool value);
    public abstract virtual bool get_IsWritable();
    public abstract virtual IMatchQuery get_Match();
    public abstract virtual void set_Match(IMatchQuery value);
    public abstract virtual IMatchAllQuery get_MatchAll();
    public abstract virtual void set_MatchAll(IMatchAllQuery value);
    public abstract virtual IMatchBoolPrefixQuery get_MatchBoolPrefix();
    public abstract virtual void set_MatchBoolPrefix(IMatchBoolPrefixQuery value);
    public abstract virtual IMatchNoneQuery get_MatchNone();
    public abstract virtual void set_MatchNone(IMatchNoneQuery value);
    public abstract virtual IMatchPhraseQuery get_MatchPhrase();
    public abstract virtual void set_MatchPhrase(IMatchPhraseQuery value);
    public abstract virtual IMatchPhrasePrefixQuery get_MatchPhrasePrefix();
    public abstract virtual void set_MatchPhrasePrefix(IMatchPhrasePrefixQuery value);
    public abstract virtual IMoreLikeThisQuery get_MoreLikeThis();
    public abstract virtual void set_MoreLikeThis(IMoreLikeThisQuery value);
    public abstract virtual IMultiMatchQuery get_MultiMatch();
    public abstract virtual void set_MultiMatch(IMultiMatchQuery value);
    public abstract virtual INestedQuery get_Nested();
    public abstract virtual void set_Nested(INestedQuery value);
    public abstract virtual IParentIdQuery get_ParentId();
    public abstract virtual void set_ParentId(IParentIdQuery value);
    public abstract virtual IPercolateQuery get_Percolate();
    public abstract virtual void set_Percolate(IPercolateQuery value);
    public abstract virtual IPrefixQuery get_Prefix();
    public abstract virtual void set_Prefix(IPrefixQuery value);
    public abstract virtual IQueryStringQuery get_QueryString();
    public abstract virtual void set_QueryString(IQueryStringQuery value);
    public abstract virtual IRangeQuery get_Range();
    public abstract virtual void set_Range(IRangeQuery value);
    public abstract virtual IRawQuery get_RawQuery();
    public abstract virtual void set_RawQuery(IRawQuery value);
    public abstract virtual IRegexpQuery get_Regexp();
    public abstract virtual void set_Regexp(IRegexpQuery value);
    public abstract virtual IScriptQuery get_Script();
    public abstract virtual void set_Script(IScriptQuery value);
    public abstract virtual IScriptScoreQuery get_ScriptScore();
    public abstract virtual void set_ScriptScore(IScriptScoreQuery value);
    public abstract virtual ISimpleQueryStringQuery get_SimpleQueryString();
    public abstract virtual void set_SimpleQueryString(ISimpleQueryStringQuery value);
    public abstract virtual ISpanContainingQuery get_SpanContaining();
    public abstract virtual void set_SpanContaining(ISpanContainingQuery value);
    public abstract virtual ISpanFieldMaskingQuery get_SpanFieldMasking();
    public abstract virtual void set_SpanFieldMasking(ISpanFieldMaskingQuery value);
    public abstract virtual ISpanFirstQuery get_SpanFirst();
    public abstract virtual void set_SpanFirst(ISpanFirstQuery value);
    public abstract virtual ISpanMultiTermQuery get_SpanMultiTerm();
    public abstract virtual void set_SpanMultiTerm(ISpanMultiTermQuery value);
    public abstract virtual ISpanNearQuery get_SpanNear();
    public abstract virtual void set_SpanNear(ISpanNearQuery value);
    public abstract virtual ISpanNotQuery get_SpanNot();
    public abstract virtual void set_SpanNot(ISpanNotQuery value);
    public abstract virtual ISpanOrQuery get_SpanOr();
    public abstract virtual void set_SpanOr(ISpanOrQuery value);
    public abstract virtual ISpanTermQuery get_SpanTerm();
    public abstract virtual void set_SpanTerm(ISpanTermQuery value);
    public abstract virtual ISpanWithinQuery get_SpanWithin();
    public abstract virtual void set_SpanWithin(ISpanWithinQuery value);
    public abstract virtual ITermQuery get_Term();
    public abstract virtual void set_Term(ITermQuery value);
    public abstract virtual ITermsQuery get_Terms();
    public abstract virtual void set_Terms(ITermsQuery value);
    public abstract virtual ITermsSetQuery get_TermsSet();
    public abstract virtual void set_TermsSet(ITermsSetQuery value);
    public abstract virtual IWildcardQuery get_Wildcard();
    public abstract virtual void set_Wildcard(IWildcardQuery value);
    public abstract virtual IRankFeatureQuery get_RankFeature();
    public abstract virtual void set_RankFeature(IRankFeatureQuery value);
    public abstract virtual IDistanceFeatureQuery get_DistanceFeature();
    public abstract virtual void set_DistanceFeature(IDistanceFeatureQuery value);
    public abstract virtual IKnnQuery get_Knn();
    public abstract virtual void set_Knn(IKnnQuery value);
    public abstract virtual INeuralQuery get_Neural();
    public abstract virtual void set_Neural(INeuralQuery value);
    public abstract virtual void Accept(IQueryVisitor visitor);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.QueryStringQuery")]
public interface OpenSearch.Client.IQueryStringQuery {
    [DataMemberAttribute]
public Nullable`1<bool> AllowLeadingWildcard { get; public set; }
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> AnalyzeWildcard { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> AutoGenerateSynonymsPhraseQuery { get; public set; }
    [DataMemberAttribute]
public Field DefaultField { get; public set; }
    [DataMemberAttribute]
public Nullable`1<Operator> DefaultOperator { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> EnablePositionIncrements { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Escape { get; public set; }
    [DataMemberAttribute]
public Fields Fields { get; public set; }
    [DataMemberAttribute]
public Fuzziness Fuzziness { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> FuzzyMaxExpansions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> FuzzyPrefixLength { get; public set; }
    [DataMemberAttribute]
public MultiTermQueryRewrite FuzzyRewrite { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> FuzzyTranspositions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Lenient { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaximumDeterminizedStates { get; public set; }
    [DataMemberAttribute]
public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> PhraseSlop { get; public set; }
    [DataMemberAttribute]
public string Query { get; public set; }
    [DataMemberAttribute]
public string QuoteAnalyzer { get; public set; }
    [DataMemberAttribute]
public string QuoteFieldSuffix { get; public set; }
    [DataMemberAttribute]
public MultiTermQueryRewrite Rewrite { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> TieBreaker { get; public set; }
    [DataMemberAttribute]
public string TimeZone { get; public set; }
    [DataMemberAttribute]
public Nullable`1<TextQueryType> Type { get; public set; }
    public abstract virtual Nullable`1<bool> get_AllowLeadingWildcard();
    public abstract virtual void set_AllowLeadingWildcard(Nullable`1<bool> value);
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<bool> get_AnalyzeWildcard();
    public abstract virtual void set_AnalyzeWildcard(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_AutoGenerateSynonymsPhraseQuery();
    public abstract virtual void set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    public abstract virtual Field get_DefaultField();
    public abstract virtual void set_DefaultField(Field value);
    public abstract virtual Nullable`1<Operator> get_DefaultOperator();
    public abstract virtual void set_DefaultOperator(Nullable`1<Operator> value);
    public abstract virtual Nullable`1<bool> get_EnablePositionIncrements();
    public abstract virtual void set_EnablePositionIncrements(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Escape();
    public abstract virtual void set_Escape(Nullable`1<bool> value);
    public abstract virtual Fields get_Fields();
    public abstract virtual void set_Fields(Fields value);
    public abstract virtual Fuzziness get_Fuzziness();
    public abstract virtual void set_Fuzziness(Fuzziness value);
    public abstract virtual Nullable`1<int> get_FuzzyMaxExpansions();
    public abstract virtual void set_FuzzyMaxExpansions(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_FuzzyPrefixLength();
    public abstract virtual void set_FuzzyPrefixLength(Nullable`1<int> value);
    public abstract virtual MultiTermQueryRewrite get_FuzzyRewrite();
    public abstract virtual void set_FuzzyRewrite(MultiTermQueryRewrite value);
    public abstract virtual Nullable`1<bool> get_FuzzyTranspositions();
    public abstract virtual void set_FuzzyTranspositions(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Lenient();
    public abstract virtual void set_Lenient(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_MaximumDeterminizedStates();
    public abstract virtual void set_MaximumDeterminizedStates(Nullable`1<int> value);
    public abstract virtual MinimumShouldMatch get_MinimumShouldMatch();
    public abstract virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    public abstract virtual Nullable`1<double> get_PhraseSlop();
    public abstract virtual void set_PhraseSlop(Nullable`1<double> value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual string get_QuoteAnalyzer();
    public abstract virtual void set_QuoteAnalyzer(string value);
    public abstract virtual string get_QuoteFieldSuffix();
    public abstract virtual void set_QuoteFieldSuffix(string value);
    public abstract virtual MultiTermQueryRewrite get_Rewrite();
    public abstract virtual void set_Rewrite(MultiTermQueryRewrite value);
    public abstract virtual Nullable`1<double> get_TieBreaker();
    public abstract virtual void set_TieBreaker(Nullable`1<double> value);
    public abstract virtual string get_TimeZone();
    public abstract virtual void set_TimeZone(string value);
    public abstract virtual Nullable`1<TextQueryType> get_Type();
    public abstract virtual void set_Type(Nullable`1<TextQueryType> value);
}
public interface OpenSearch.Client.IQueryVisitor {
    public int Depth { get; public set; }
    public VisitorScope Scope { get; public set; }
    public abstract virtual int get_Depth();
    public abstract virtual void set_Depth(int value);
    public abstract virtual VisitorScope get_Scope();
    public abstract virtual void set_Scope(VisitorScope value);
    public abstract virtual void Visit(IQueryContainer queryDescriptor);
    public abstract virtual void Visit(IQuery query);
    public abstract virtual void Visit(IBoolQuery query);
    public abstract virtual void Visit(IBoostingQuery query);
    public abstract virtual void Visit(IConstantScoreQuery query);
    public abstract virtual void Visit(IDisMaxQuery query);
    public abstract virtual void Visit(IDistanceFeatureQuery query);
    public abstract virtual void Visit(IFunctionScoreQuery query);
    public abstract virtual void Visit(IFuzzyQuery query);
    public abstract virtual void Visit(IFuzzyNumericQuery query);
    public abstract virtual void Visit(IFuzzyDateQuery query);
    public abstract virtual void Visit(IFuzzyStringQuery query);
    public abstract virtual void Visit(IHasChildQuery query);
    public abstract virtual void Visit(IHasParentQuery query);
    public abstract virtual void Visit(IIdsQuery query);
    public abstract virtual void Visit(IIntervalsQuery query);
    public abstract virtual void Visit(IKnnQuery query);
    public abstract virtual void Visit(IMatchQuery query);
    public abstract virtual void Visit(IMatchPhraseQuery query);
    public abstract virtual void Visit(IMatchPhrasePrefixQuery query);
    public abstract virtual void Visit(IMatchAllQuery query);
    public abstract virtual void Visit(IMatchBoolPrefixQuery query);
    public abstract virtual void Visit(IMatchNoneQuery query);
    public abstract virtual void Visit(IMoreLikeThisQuery query);
    public abstract virtual void Visit(IMultiMatchQuery query);
    public abstract virtual void Visit(INestedQuery query);
    public abstract virtual void Visit(INeuralQuery query);
    public abstract virtual void Visit(IPrefixQuery query);
    public abstract virtual void Visit(IQueryStringQuery query);
    public abstract virtual void Visit(IRankFeatureQuery query);
    public abstract virtual void Visit(IRangeQuery query);
    public abstract virtual void Visit(IRegexpQuery query);
    public abstract virtual void Visit(ISimpleQueryStringQuery query);
    public abstract virtual void Visit(ITermQuery query);
    public abstract virtual void Visit(IWildcardQuery query);
    public abstract virtual void Visit(ITermsQuery query);
    public abstract virtual void Visit(IScriptQuery query);
    public abstract virtual void Visit(IScriptScoreQuery query);
    public abstract virtual void Visit(IGeoPolygonQuery query);
    public abstract virtual void Visit(IGeoDistanceQuery query);
    public abstract virtual void Visit(IGeoBoundingBoxQuery query);
    public abstract virtual void Visit(IExistsQuery query);
    public abstract virtual void Visit(IDateRangeQuery query);
    public abstract virtual void Visit(INumericRangeQuery query);
    public abstract virtual void Visit(ILongRangeQuery query);
    public abstract virtual void Visit(ITermRangeQuery query);
    public abstract virtual void Visit(ISpanFirstQuery query);
    public abstract virtual void Visit(ISpanNearQuery query);
    public abstract virtual void Visit(ISpanNotQuery query);
    public abstract virtual void Visit(ISpanOrQuery query);
    public abstract virtual void Visit(ISpanTermQuery query);
    public abstract virtual void Visit(ISpanQuery query);
    public abstract virtual void Visit(ISpanSubQuery query);
    public abstract virtual void Visit(ISpanContainingQuery query);
    public abstract virtual void Visit(ISpanWithinQuery query);
    public abstract virtual void Visit(ISpanMultiTermQuery query);
    public abstract virtual void Visit(ISpanFieldMaskingQuery query);
    public abstract virtual void Visit(IGeoShapeQuery query);
    public abstract virtual void Visit(IShapeQuery query);
    public abstract virtual void Visit(IRawQuery query);
    public abstract virtual void Visit(IPercolateQuery query);
    public abstract virtual void Visit(IParentIdQuery query);
    public abstract virtual void Visit(ITermsSetQuery query);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.RandomScoreFunction")]
public interface OpenSearch.Client.IRandomScoreFunction {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Union`2<long, string> Seed { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Union`2<long, string> get_Seed();
    public abstract virtual void set_Seed(Union`2<long, string> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.RangeAggregation")]
public interface OpenSearch.Client.IRangeAggregation {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<IAggregationRange> Ranges { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual IEnumerable`1<IAggregationRange> get_Ranges();
    public abstract virtual void set_Ranges(IEnumerable`1<IAggregationRange> value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRangeProperty {
    [DataMemberAttribute]
public Nullable`1<bool> Coerce { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Index { get; public set; }
    public abstract virtual Nullable`1<bool> get_Coerce();
    public abstract virtual void set_Coerce(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Index();
    public abstract virtual void set_Index(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.RangeQueryFormatter")]
public interface OpenSearch.Client.IRangeQuery {
}
public interface OpenSearch.Client.IRankFeatureFunction {
}
public interface OpenSearch.Client.IRankFeatureLinearFunction {
}
public interface OpenSearch.Client.IRankFeatureLogarithmFunction {
    [DataMemberAttribute]
public float ScalingFactor { get; public set; }
    public abstract virtual float get_ScalingFactor();
    public abstract virtual void set_ScalingFactor(float value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRankFeatureProperty {
    [DataMemberAttribute]
public Nullable`1<bool> PositiveScoreImpact { get; public set; }
    public abstract virtual Nullable`1<bool> get_PositiveScoreImpact();
    public abstract virtual void set_PositiveScoreImpact(Nullable`1<bool> value);
}
[JsonFormatterAttribute("OpenSearch.Client.RankFeatureQueryFormatter")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRankFeatureQuery {
    public IRankFeatureFunction Function { get; public set; }
    public abstract virtual IRankFeatureFunction get_Function();
    public abstract virtual void set_Function(IRankFeatureFunction value);
}
public interface OpenSearch.Client.IRankFeatureSaturationFunction {
    [DataMemberAttribute]
public Nullable`1<float> Pivot { get; public set; }
    public abstract virtual Nullable`1<float> get_Pivot();
    public abstract virtual void set_Pivot(Nullable`1<float> value);
}
public interface OpenSearch.Client.IRankFeatureSigmoidFunction {
    [DataMemberAttribute]
public float Pivot { get; public set; }
    [DataMemberAttribute]
public float Exponent { get; public set; }
    public abstract virtual float get_Pivot();
    public abstract virtual void set_Pivot(float value);
    public abstract virtual float get_Exponent();
    public abstract virtual void set_Exponent(float value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRankFeaturesProperty {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.RareTermsAggregation")]
public interface OpenSearch.Client.IRareTermsAggregation {
    [DataMemberAttribute]
public TermsExclude Exclude { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public TermsInclude Include { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> MaximumDocumentCount { get; public set; }
    [DataMemberAttribute]
public object Missing { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Precision { get; public set; }
    public abstract virtual TermsExclude get_Exclude();
    public abstract virtual void set_Exclude(TermsExclude value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual TermsInclude get_Include();
    public abstract virtual void set_Include(TermsInclude value);
    public abstract virtual Nullable`1<long> get_MaximumDocumentCount();
    public abstract virtual void set_MaximumDocumentCount(Nullable`1<long> value);
    public abstract virtual object get_Missing();
    public abstract virtual void set_Missing(object value);
    public abstract virtual Nullable`1<double> get_Precision();
    public abstract virtual void set_Precision(Nullable`1<double> value);
}
public interface OpenSearch.Client.IRawQuery {
    public string Raw { get; public set; }
    public abstract virtual string get_Raw();
    public abstract virtual void set_Raw(string value);
}
public interface OpenSearch.Client.IReadOnlyUrlRepository {
}
public interface OpenSearch.Client.IReadOnlyUrlRepositorySettings {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> ConcurrentStreams { get; public set; }
    [DataMemberAttribute]
public string Location { get; public set; }
    public abstract virtual Nullable`1<int> get_ConcurrentStreams();
    public abstract virtual void set_ConcurrentStreams(Nullable`1<int> value);
    public abstract virtual string get_Location();
    public abstract virtual void set_Location(string value);
}
[MapsApiAttribute("indices.refresh.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRefreshRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.RegexpQuery,OpenSearch.Client.IRegexpQuery>")]
public interface OpenSearch.Client.IRegexpQuery {
    [DataMemberAttribute]
public string Flags { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaximumDeterminizedStates { get; public set; }
    [DataMemberAttribute]
public string Value { get; public set; }
    [DataMemberAttribute]
public MultiTermQueryRewrite Rewrite { get; public set; }
    public abstract virtual string get_Flags();
    public abstract virtual void set_Flags(string value);
    public abstract virtual Nullable`1<int> get_MaximumDeterminizedStates();
    public abstract virtual void set_MaximumDeterminizedStates(Nullable`1<int> value);
    public abstract virtual string get_Value();
    public abstract virtual void set_Value(string value);
    public abstract virtual MultiTermQueryRewrite get_Rewrite();
    public abstract virtual void set_Rewrite(MultiTermQueryRewrite value);
}
public interface OpenSearch.Client.IReindexDestination {
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<OpType> OpType { get; public set; }
    public string Pipeline { get; public set; }
    [DataMemberAttribute]
public ReindexRouting Routing { get; public set; }
    [DataMemberAttribute]
public Nullable`1<VersionType> VersionType { get; public set; }
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual Nullable`1<OpType> get_OpType();
    public abstract virtual void set_OpType(Nullable`1<OpType> value);
    public abstract virtual string get_Pipeline();
    public abstract virtual void set_Pipeline(string value);
    public abstract virtual ReindexRouting get_Routing();
    public abstract virtual void set_Routing(ReindexRouting value);
    public abstract virtual Nullable`1<VersionType> get_VersionType();
    public abstract virtual void set_VersionType(Nullable`1<VersionType> value);
}
[MapsApiAttribute("reindex.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IReindexOnServerRequest {
    [DataMemberAttribute]
public Nullable`1<Conflicts> Conflicts { get; public set; }
    [DataMemberAttribute]
public IReindexDestination Destination { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> MaximumDocuments { get; public set; }
    [DataMemberAttribute]
public IReindexSource Source { get; public set; }
    public abstract virtual Nullable`1<Conflicts> get_Conflicts();
    public abstract virtual void set_Conflicts(Nullable`1<Conflicts> value);
    public abstract virtual IReindexDestination get_Destination();
    public abstract virtual void set_Destination(IReindexDestination value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual Nullable`1<long> get_MaximumDocuments();
    public abstract virtual void set_MaximumDocuments(Nullable`1<long> value);
    public abstract virtual IReindexSource get_Source();
    public abstract virtual void set_Source(IReindexSource value);
}
public interface OpenSearch.Client.IReindexRequest`1 {
}
public interface OpenSearch.Client.IReindexRequest`2 {
    public Nullable`1<int> BackPressureFactor { get; public set; }
    public Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> BulkAll { get; public set; }
    public ICreateIndexRequest CreateIndexRequest { get; public set; }
    public Func`2<TSource, TTarget> Map { get; public set; }
    public bool OmitIndexCreation { get; public set; }
    public IScrollAllRequest ScrollAll { get; public set; }
    public abstract virtual Nullable`1<int> get_BackPressureFactor();
    public abstract virtual void set_BackPressureFactor(Nullable`1<int> value);
    public abstract virtual Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> get_BulkAll();
    public abstract virtual void set_BulkAll(Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> value);
    public abstract virtual ICreateIndexRequest get_CreateIndexRequest();
    public abstract virtual void set_CreateIndexRequest(ICreateIndexRequest value);
    public abstract virtual Func`2<TSource, TTarget> get_Map();
    public abstract virtual void set_Map(Func`2<TSource, TTarget> value);
    public abstract virtual bool get_OmitIndexCreation();
    public abstract virtual void set_OmitIndexCreation(bool value);
    public abstract virtual IScrollAllRequest get_ScrollAll();
    public abstract virtual void set_ScrollAll(IScrollAllRequest value);
}
[MapsApiAttribute("reindex_rethrottle.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IReindexRethrottleRequest {
    [IgnoreDataMemberAttribute]
public TaskId TaskId { get; }
    public abstract virtual TaskId get_TaskId();
}
public interface OpenSearch.Client.IReindexSource {
    [DataMemberAttribute]
public Indices Index { get; public set; }
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    [DataMemberAttribute]
public IRemoteSource Remote { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    [DataMemberAttribute]
public ISlicedScroll Slice { get; public set; }
    [DataMemberAttribute]
public Fields Source { get; public set; }
    public abstract virtual Indices get_Index();
    public abstract virtual void set_Index(Indices value);
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
    public abstract virtual IRemoteSource get_Remote();
    public abstract virtual void set_Remote(IRemoteSource value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
    public abstract virtual ISlicedScroll get_Slice();
    public abstract virtual void set_Slice(ISlicedScroll value);
    public abstract virtual Fields get_Source();
    public abstract virtual void set_Source(Fields value);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.Relations,OpenSearch.Client.IRelations,OpenSearch.Client.RelationName,OpenSearch.Client.Children>")]
public interface OpenSearch.Client.IRelations {
}
[MapsApiAttribute("nodes.reload_secure_settings.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IReloadSecureSettingsRequest {
    [IgnoreDataMemberAttribute]
public NodeIds NodeId { get; }
    public abstract virtual NodeIds get_NodeId();
}
[MapsApiAttribute("cluster.remote_info.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRemoteInfoRequest {
}
public interface OpenSearch.Client.IRemoteSource {
    [DataMemberAttribute]
public Uri Host { get; public set; }
    [DataMemberAttribute]
public string Password { get; public set; }
    [DataMemberAttribute]
public string Username { get; public set; }
    [DataMemberAttribute]
public Time SocketTimeout { get; public set; }
    [DataMemberAttribute]
public Time ConnectTimeout { get; public set; }
    public abstract virtual Uri get_Host();
    public abstract virtual void set_Host(Uri value);
    public abstract virtual string get_Password();
    public abstract virtual void set_Password(string value);
    public abstract virtual string get_Username();
    public abstract virtual void set_Username(string value);
    public abstract virtual Time get_SocketTimeout();
    public abstract virtual void set_SocketTimeout(Time value);
    public abstract virtual Time get_ConnectTimeout();
    public abstract virtual void set_ConnectTimeout(Time value);
}
public interface OpenSearch.Client.IRemoveDuplicatesTokenFilter {
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRemoveProcessor {
    [DataMemberAttribute]
public Fields Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    public abstract virtual Fields get_Field();
    public abstract virtual void set_Field(Fields value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRenameProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[MapsApiAttribute("render_search_template.json")]
public interface OpenSearch.Client.IRenderSearchTemplateRequest {
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    [DataMemberAttribute]
public string File { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysBaseFormatter`3<System.Collections.Generic.Dictionary`2<System.String,System.Object>,System.String,System.Object>")]
public Dictionary`2<string, object> Params { get; public set; }
    [DataMemberAttribute]
public string Source { get; public set; }
    public abstract virtual Id get_Id();
    public abstract virtual string get_File();
    public abstract virtual void set_File(string value);
    public abstract virtual Dictionary`2<string, object> get_Params();
    public abstract virtual void set_Params(Dictionary`2<string, object> value);
    public abstract virtual string get_Source();
    public abstract virtual void set_Source(string value);
}
public interface OpenSearch.Client.IRepository`1 {
    [DataMemberAttribute]
public TSettings Settings { get; public set; }
    public abstract virtual TSettings get_Settings();
    public abstract virtual void set_Settings(TSettings value);
}
public interface OpenSearch.Client.IRepositorySettings {
}
public interface OpenSearch.Client.IRepositoryWithSettings {
    [IgnoreDataMemberAttribute]
public object DelegateSettings { get; }
    public abstract virtual object get_DelegateSettings();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRequest {
    [IgnoreDataMemberAttribute]
public string ContentType { get; }
    [IgnoreDataMemberAttribute]
public HttpMethod HttpMethod { get; }
    [IgnoreDataMemberAttribute]
public RouteValues RouteValues { get; }
    [IgnoreDataMemberAttribute]
public IRequestParameters RequestParameters { get; }
    public abstract virtual string get_ContentType();
    public abstract virtual HttpMethod get_HttpMethod();
    public abstract virtual RouteValues get_RouteValues();
    public abstract virtual IRequestParameters get_RequestParameters();
    public abstract virtual string GetUrl(IConnectionSettingsValues settings);
}
public interface OpenSearch.Client.IRequest`1 {
    [IgnoreDataMemberAttribute]
public TParameters RequestParameters { get; }
    public abstract virtual TParameters get_RequestParameters();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.Rescore")]
public interface OpenSearch.Client.IRescore {
    [DataMemberAttribute]
public IRescoreQuery Query { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> WindowSize { get; public set; }
    public abstract virtual IRescoreQuery get_Query();
    public abstract virtual void set_Query(IRescoreQuery value);
    public abstract virtual Nullable`1<int> get_WindowSize();
    public abstract virtual void set_WindowSize(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.RescoreQuery")]
public interface OpenSearch.Client.IRescoreQuery {
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> QueryWeight { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> RescoreQueryWeight { get; public set; }
    [DataMemberAttribute]
public Nullable`1<ScoreMode> ScoreMode { get; public set; }
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
    public abstract virtual Nullable`1<double> get_QueryWeight();
    public abstract virtual void set_QueryWeight(Nullable`1<double> value);
    public abstract virtual Nullable`1<double> get_RescoreQueryWeight();
    public abstract virtual void set_RescoreQueryWeight(Nullable`1<double> value);
    public abstract virtual Nullable`1<ScoreMode> get_ScoreMode();
    public abstract virtual void set_ScoreMode(Nullable`1<ScoreMode> value);
}
[MapsApiAttribute("indices.resolve_index.json")]
[ReadAsAttribute("OpenSearch.Client.ResolveIndexRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IResolveIndexRequest {
    [IgnoreDataMemberAttribute]
public Names Name { get; }
    public abstract virtual Names get_Name();
}
public interface OpenSearch.Client.IResponse {
    [IgnoreDataMemberAttribute]
public string DebugInformation { get; }
    [IgnoreDataMemberAttribute]
public bool IsValid { get; }
    [IgnoreDataMemberAttribute]
public Exception OriginalException { get; }
    [IgnoreDataMemberAttribute]
public ServerError ServerError { get; }
    public abstract virtual string get_DebugInformation();
    public abstract virtual bool get_IsValid();
    public abstract virtual Exception get_OriginalException();
    public abstract virtual ServerError get_ServerError();
}
[MapsApiAttribute("snapshot.restore.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRestoreRequest {
    [DataMemberAttribute]
public List`1<string> IgnoreIndexSettings { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IncludeAliases { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IncludeGlobalState { get; public set; }
    [DataMemberAttribute]
public IUpdateIndexSettingsRequest IndexSettings { get; public set; }
    [DataMemberAttribute]
public Indices Indices { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Partial { get; public set; }
    [DataMemberAttribute]
public string RenamePattern { get; public set; }
    [DataMemberAttribute]
public string RenameReplacement { get; public set; }
    [IgnoreDataMemberAttribute]
public Name RepositoryName { get; }
    [IgnoreDataMemberAttribute]
public Name Snapshot { get; }
    public abstract virtual List`1<string> get_IgnoreIndexSettings();
    public abstract virtual void set_IgnoreIndexSettings(List`1<string> value);
    public abstract virtual Nullable`1<bool> get_IgnoreUnavailable();
    public abstract virtual void set_IgnoreUnavailable(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeAliases();
    public abstract virtual void set_IncludeAliases(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeGlobalState();
    public abstract virtual void set_IncludeGlobalState(Nullable`1<bool> value);
    public abstract virtual IUpdateIndexSettingsRequest get_IndexSettings();
    public abstract virtual void set_IndexSettings(IUpdateIndexSettingsRequest value);
    public abstract virtual Indices get_Indices();
    public abstract virtual void set_Indices(Indices value);
    public abstract virtual Nullable`1<bool> get_Partial();
    public abstract virtual void set_Partial(Nullable`1<bool> value);
    public abstract virtual string get_RenamePattern();
    public abstract virtual void set_RenamePattern(string value);
    public abstract virtual string get_RenameReplacement();
    public abstract virtual void set_RenameReplacement(string value);
    public abstract virtual Name get_RepositoryName();
    public abstract virtual Name get_Snapshot();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ReverseNestedAggregation")]
public interface OpenSearch.Client.IReverseNestedAggregation {
    [DataMemberAttribute]
public Field Path { get; public set; }
    public abstract virtual Field get_Path();
    public abstract virtual void set_Path(Field value);
}
public interface OpenSearch.Client.IReverseTokenFilter {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.RolloverConditions")]
public interface OpenSearch.Client.IRolloverConditions {
    [DataMemberAttribute]
public Time MaxAge { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> MaxDocs { get; public set; }
    [DataMemberAttribute]
public string MaxSize { get; public set; }
    public abstract virtual Time get_MaxAge();
    public abstract virtual void set_MaxAge(Time value);
    public abstract virtual Nullable`1<long> get_MaxDocs();
    public abstract virtual void set_MaxDocs(Nullable`1<long> value);
    public abstract virtual string get_MaxSize();
    public abstract virtual void set_MaxSize(string value);
}
[MapsApiAttribute("indices.rollover.json")]
[ReadAsAttribute("OpenSearch.Client.RolloverIndexRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRolloverIndexRequest {
    [DataMemberAttribute]
public IRolloverConditions Conditions { get; public set; }
    [IgnoreDataMemberAttribute]
public Name Alias { get; }
    [IgnoreDataMemberAttribute]
public IndexName NewIndex { get; }
    public abstract virtual IRolloverConditions get_Conditions();
    public abstract virtual void set_Conditions(IRolloverConditions value);
    public abstract virtual Name get_Alias();
    public abstract virtual IndexName get_NewIndex();
}
[MapsApiAttribute("info.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IRootNodeInfoRequest {
}
[ReadAsAttribute("OpenSearch.Client.RoutingField")]
public interface OpenSearch.Client.IRoutingField {
    [DataMemberAttribute]
public Nullable`1<bool> Required { get; public set; }
    public abstract virtual Nullable`1<bool> get_Required();
    public abstract virtual void set_Required(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.RuntimeField")]
public interface OpenSearch.Client.IRuntimeField {
    [DataMemberAttribute]
public string Format { get; public set; }
    [DataMemberAttribute]
public IStoredScript Script { get; public set; }
    [DataMemberAttribute]
public FieldType Type { get; public set; }
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
    public abstract virtual IStoredScript get_Script();
    public abstract virtual void set_Script(IStoredScript value);
    public abstract virtual FieldType get_Type();
    public abstract virtual void set_Type(FieldType value);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.RuntimeFields,OpenSearch.Client.IRuntimeFields,OpenSearch.Client.Field,OpenSearch.Client.IRuntimeField>")]
public interface OpenSearch.Client.IRuntimeFields {
}
public interface OpenSearch.Client.IS3Repository {
}
public interface OpenSearch.Client.IS3RepositorySettings {
    [DataMemberAttribute]
public string BasePath { get; public set; }
    [DataMemberAttribute]
public string Bucket { get; public set; }
    [DataMemberAttribute]
public string BufferSize { get; public set; }
    [DataMemberAttribute]
public string CannedAcl { get; public set; }
    [DataMemberAttribute]
public string ChunkSize { get; public set; }
    [DataMemberAttribute]
public string Client { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Compress { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> ServerSideEncryption { get; public set; }
    [DataMemberAttribute]
public string StorageClass { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> PathStyleAccess { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> DisableChunkedEncoding { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> ReadOnly { get; public set; }
    [DataMemberAttribute]
public string MaxRestoreBytesPerSecond { get; public set; }
    [DataMemberAttribute]
public string MaxSnapshotBytesPerSecond { get; public set; }
    public abstract virtual string get_BasePath();
    public abstract virtual void set_BasePath(string value);
    public abstract virtual string get_Bucket();
    public abstract virtual void set_Bucket(string value);
    public abstract virtual string get_BufferSize();
    public abstract virtual void set_BufferSize(string value);
    public abstract virtual string get_CannedAcl();
    public abstract virtual void set_CannedAcl(string value);
    public abstract virtual string get_ChunkSize();
    public abstract virtual void set_ChunkSize(string value);
    public abstract virtual string get_Client();
    public abstract virtual void set_Client(string value);
    public abstract virtual Nullable`1<bool> get_Compress();
    public abstract virtual void set_Compress(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_ServerSideEncryption();
    public abstract virtual void set_ServerSideEncryption(Nullable`1<bool> value);
    public abstract virtual string get_StorageClass();
    public abstract virtual void set_StorageClass(string value);
    public abstract virtual Nullable`1<bool> get_PathStyleAccess();
    public abstract virtual void set_PathStyleAccess(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_DisableChunkedEncoding();
    public abstract virtual void set_DisableChunkedEncoding(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_ReadOnly();
    public abstract virtual void set_ReadOnly(Nullable`1<bool> value);
    public abstract virtual string get_MaxRestoreBytesPerSecond();
    public abstract virtual void set_MaxRestoreBytesPerSecond(string value);
    public abstract virtual string get_MaxSnapshotBytesPerSecond();
    public abstract virtual void set_MaxSnapshotBytesPerSecond(string value);
}
[DefaultMemberAttribute("Item")]
public abstract class OpenSearch.Client.IsADictionaryBase`2 : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<TKey, TValue> <BackingDictionary>k__BackingField;
    public TValue Item { get; public set; }
    protected Dictionary`2<TKey, TValue> BackingDictionary { get; }
    private int System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Count { get; }
    private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly { get; }
    private TValue System.Collections.Generic.IDictionary<TKey,TValue>.Item { get; private set; }
    private ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys { get; }
    private ICollection`1<KeyValuePair`2<TKey, TValue>> Self { get; }
    private ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values { get; }
    protected IsADictionaryBase`2(IDictionary`2<TKey, TValue> backingDictionary);
    public TValue get_Item(TKey key);
    public void set_Item(TKey key, TValue value);
    [CompilerGeneratedAttribute]
protected Dictionary`2<TKey, TValue> get_BackingDictionary();
    private sealed virtual override int System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_Count();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly();
    private sealed virtual override TValue System.Collections.Generic.IDictionary<TKey,TValue>.get_Item(TKey key);
    private sealed virtual override void System.Collections.Generic.IDictionary<TKey,TValue>.set_Item(TKey key, TValue value);
    private sealed virtual override ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys();
    private ICollection`1<KeyValuePair`2<TKey, TValue>> get_Self();
    private sealed virtual override ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.get_Values();
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2<TKey, TValue> item);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear();
    [EditorBrowsableAttribute("1")]
private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2<TKey, TValue> item);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair`2[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2<TKey, TValue> item);
    private sealed virtual override void System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey key, TValue value);
    [EditorBrowsableAttribute("1")]
private sealed virtual override bool System.Collections.Generic.IDictionary<TKey,TValue>.ContainsKey(TKey key);
    private sealed virtual override bool System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey key);
    private sealed virtual override bool System.Collections.Generic.IDictionary<TKey,TValue>.TryGetValue(TKey key, TValue& value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator();
    protected virtual TKey ValidateKey(TKey key);
    protected virtual TKey Sanitize(TKey key);
}
internal class OpenSearch.Client.IsADictionaryBaseFormatter`3 : object {
    private ObjectActivator`1<TDictionary> _activator;
    private bool _parameterlessCtor;
    public IsADictionaryBaseFormatter`3(ObjectActivator`1<TDictionary> activator, bool parameterlessCtor);
    protected Dictionary`2<TKey, TValue> Create();
    protected void Add(Dictionary`2& collection, int index, TKey key, TValue value);
    protected TDictionary Complete(Dictionary`2& intermediateCollection);
    protected IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetSourceEnumerator(TDictionary source);
    public sealed virtual void Serialize(JsonWriter& writer, TDictionary value, IJsonFormatterResolver formatterResolver);
    public sealed virtual TDictionary Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public abstract class OpenSearch.Client.IsADictionaryDescriptorBase`4 : DescriptorPromiseBase`2<TDescriptor, TInterface> {
    protected IsADictionaryDescriptorBase`4(TInterface instance);
    protected TDescriptor Assign(TKey key, TValue value);
}
internal class OpenSearch.Client.IsADictionaryFormatterResolver : object {
    public static IsADictionaryFormatterResolver Instance;
    private static IsADictionaryFormatterResolver();
    public sealed virtual IJsonFormatter`1<T> GetFormatter();
    internal static bool IsIsADictionary(Type type);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SamplerAggregation")]
public interface OpenSearch.Client.ISamplerAggregation {
    [DataMemberAttribute]
public Nullable`1<int> ShardSize { get; public set; }
    public abstract virtual Nullable`1<int> get_ShardSize();
    public abstract virtual void set_ShardSize(Nullable`1<int> value);
}
[DefaultMemberAttribute("Item")]
public abstract class OpenSearch.Client.IsAReadOnlyDictionaryBase`2 : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<TKey, TValue> <BackingDictionary>k__BackingField;
    public int Count { get; }
    public TValue Item { get; }
    public IEnumerable`1<TKey> Keys { get; }
    public IEnumerable`1<TValue> Values { get; }
    protected internal IReadOnlyDictionary`2<TKey, TValue> BackingDictionary { get; }
    protected IsAReadOnlyDictionaryBase`2(IReadOnlyDictionary`2<TKey, TValue> backingDictionary);
    public sealed virtual int get_Count();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual IEnumerable`1<TKey> get_Keys();
    public sealed virtual IEnumerable`1<TValue> get_Values();
    [CompilerGeneratedAttribute]
protected internal IReadOnlyDictionary`2<TKey, TValue> get_BackingDictionary();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator();
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    protected virtual TKey Sanitize(TKey key);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.ScoreFunctionJsonFormatter")]
public interface OpenSearch.Client.IScoreFunction {
    [DataMemberAttribute]
public QueryContainer Filter { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Weight { get; public set; }
    public abstract virtual QueryContainer get_Filter();
    public abstract virtual void set_Filter(QueryContainer value);
    public abstract virtual Nullable`1<double> get_Weight();
    public abstract virtual void set_Weight(Nullable`1<double> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.ScriptFormatter")]
public interface OpenSearch.Client.IScript {
    [DataMemberAttribute]
public string Lang { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysPreservingNullFormatter`2<System.String,System.Object>")]
public Dictionary`2<string, object> Params { get; public set; }
    public abstract virtual string get_Lang();
    public abstract virtual void set_Lang(string value);
    public abstract virtual Dictionary`2<string, object> get_Params();
    public abstract virtual void set_Params(Dictionary`2<string, object> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ScriptedHeuristic")]
public interface OpenSearch.Client.IScriptedHeuristic {
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ScriptedMetricAggregation")]
public interface OpenSearch.Client.IScriptedMetricAggregation {
    [DataMemberAttribute]
public IScript CombineScript { get; public set; }
    [DataMemberAttribute]
public IScript InitScript { get; public set; }
    [DataMemberAttribute]
public IScript MapScript { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Params { get; public set; }
    [DataMemberAttribute]
public IScript ReduceScript { get; public set; }
    public abstract virtual IScript get_CombineScript();
    public abstract virtual void set_CombineScript(IScript value);
    public abstract virtual IScript get_InitScript();
    public abstract virtual void set_InitScript(IScript value);
    public abstract virtual IScript get_MapScript();
    public abstract virtual void set_MapScript(IScript value);
    public abstract virtual IDictionary`2<string, object> get_Params();
    public abstract virtual void set_Params(IDictionary`2<string, object> value);
    public abstract virtual IScript get_ReduceScript();
    public abstract virtual void set_ReduceScript(IScript value);
}
public interface OpenSearch.Client.IScriptedSimilarity {
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ScriptField")]
public interface OpenSearch.Client.IScriptField {
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.ScriptFields,OpenSearch.Client.IScriptFields,System.String,OpenSearch.Client.IScriptField>")]
public interface OpenSearch.Client.IScriptFields {
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IScriptProcessor {
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Lang { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`2<System.String,System.Object>")]
public Dictionary`2<string, object> Params { get; public set; }
    [DataMemberAttribute]
public string Source { get; public set; }
    public abstract virtual string get_Id();
    public abstract virtual void set_Id(string value);
    public abstract virtual string get_Lang();
    public abstract virtual void set_Lang(string value);
    public abstract virtual Dictionary`2<string, object> get_Params();
    public abstract virtual void set_Params(Dictionary`2<string, object> value);
    public abstract virtual string get_Source();
    public abstract virtual void set_Source(string value);
}
[ReadAsAttribute("OpenSearch.Client.ScriptQuery")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IScriptQuery {
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IScriptScoreFunction {
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[ReadAsAttribute("OpenSearch.Client.ScriptScoreQuery")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IScriptScoreQuery {
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> MinScore { get; public set; }
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual Nullable`1<double> get_MinScore();
    public abstract virtual void set_MinScore(Nullable`1<double> value);
}
[ReadAsAttribute("OpenSearch.Client.ScriptSort")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IScriptSort {
    [DataMemberAttribute]
public IScript Script { get; public set; }
    [DataMemberAttribute]
public string Type { get; public set; }
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual string get_Type();
    public abstract virtual void set_Type(string value);
}
public interface OpenSearch.Client.IScrollAllRequest {
    public ProducerConsumerBackPressure BackPressure { get; public set; }
    public Nullable`1<int> MaxDegreeOfParallelism { get; public set; }
    public Field RoutingField { get; public set; }
    public Time ScrollTime { get; public set; }
    public ISearchRequest Search { get; public set; }
    public int Slices { get; public set; }
    public abstract virtual ProducerConsumerBackPressure get_BackPressure();
    public abstract virtual void set_BackPressure(ProducerConsumerBackPressure value);
    public abstract virtual Nullable`1<int> get_MaxDegreeOfParallelism();
    public abstract virtual void set_MaxDegreeOfParallelism(Nullable`1<int> value);
    public abstract virtual Field get_RoutingField();
    public abstract virtual void set_RoutingField(Field value);
    public abstract virtual Time get_ScrollTime();
    public abstract virtual void set_ScrollTime(Time value);
    public abstract virtual ISearchRequest get_Search();
    public abstract virtual void set_Search(ISearchRequest value);
    public abstract virtual int get_Slices();
    public abstract virtual void set_Slices(int value);
}
public interface OpenSearch.Client.IScrollAllResponse`1 {
    public long Scroll { get; }
    public ISearchResponse`1<T> SearchResponse { get; }
    public int Slice { get; }
    public abstract virtual long get_Scroll();
    public abstract virtual ISearchResponse`1<T> get_SearchResponse();
    public abstract virtual int get_Slice();
}
[InterfaceDataContractAttribute]
[MapsApiAttribute("scroll.json")]
public interface OpenSearch.Client.IScrollRequest {
    [DataMemberAttribute]
public Time Scroll { get; public set; }
    [DataMemberAttribute]
public string ScrollId { get; public set; }
    public abstract virtual Time get_Scroll();
    public abstract virtual void set_Scroll(Time value);
    public abstract virtual string get_ScrollId();
    public abstract virtual void set_ScrollId(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISearchAsYouTypeProperty {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<IndexOptions> IndexOptions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxShingleSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Norms { get; public set; }
    [DataMemberAttribute]
public string SearchAnalyzer { get; public set; }
    [DataMemberAttribute]
public string SearchQuoteAnalyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<TermVectorOption> TermVector { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<bool> get_Index();
    public abstract virtual void set_Index(Nullable`1<bool> value);
    public abstract virtual Nullable`1<IndexOptions> get_IndexOptions();
    public abstract virtual void set_IndexOptions(Nullable`1<IndexOptions> value);
    public abstract virtual Nullable`1<int> get_MaxShingleSize();
    public abstract virtual void set_MaxShingleSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_Norms();
    public abstract virtual void set_Norms(Nullable`1<bool> value);
    public abstract virtual string get_SearchAnalyzer();
    public abstract virtual void set_SearchAnalyzer(string value);
    public abstract virtual string get_SearchQuoteAnalyzer();
    public abstract virtual void set_SearchQuoteAnalyzer(string value);
    public abstract virtual Nullable`1<TermVectorOption> get_TermVector();
    public abstract virtual void set_TermVector(Nullable`1<TermVectorOption> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SearchRequest")]
[MapsApiAttribute("search.json")]
public interface OpenSearch.Client.ISearchRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    [DataMemberAttribute]
public Fields DocValueFields { get; public set; }
    [DataMemberAttribute]
public Fields StoredFields { get; public set; }
    [DataMemberAttribute]
public TrackTotalHits TrackTotalHits { get; public set; }
    [DataMemberAttribute]
public AggregationDictionary Aggregations { get; public set; }
    [DataMemberAttribute]
public IFieldCollapse Collapse { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Explain { get; public set; }
    [DataMemberAttribute]
public Fields Fields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> From { get; public set; }
    [DataMemberAttribute]
public IHighlight Highlight { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.IndicesBoostFormatter")]
public IDictionary`2<IndexName, double> IndicesBoost { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> MinScore { get; public set; }
    [DataMemberAttribute]
public IPointInTime PointInTime { get; public set; }
    [DataMemberAttribute]
public QueryContainer PostFilter { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Profile { get; public set; }
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    [DataMemberAttribute]
public IList`1<IRescore> Rescore { get; public set; }
    [DataMemberAttribute]
public IScriptFields ScriptFields { get; public set; }
    [DataMemberAttribute]
public IList`1<object> SearchAfter { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    [DataMemberAttribute]
public ISlicedScroll Slice { get; public set; }
    [DataMemberAttribute]
public IList`1<ISort> Sort { get; public set; }
    [DataMemberAttribute]
public Union`2<bool, ISourceFilter> Source { get; public set; }
    [DataMemberAttribute]
public ISuggestContainer Suggest { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> TerminateAfter { get; public set; }
    [DataMemberAttribute]
public string Timeout { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> TrackScores { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Version { get; public set; }
    [DataMemberAttribute]
public IRuntimeFields RuntimeFields { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryInterfaceKeysFormatter`2<System.String,System.Object>")]
public IDictionary`2<string, object> Ext { get; public set; }
    public abstract virtual Indices get_Index();
    public abstract virtual Fields get_DocValueFields();
    public abstract virtual void set_DocValueFields(Fields value);
    public abstract virtual Fields get_StoredFields();
    public abstract virtual void set_StoredFields(Fields value);
    public abstract virtual TrackTotalHits get_TrackTotalHits();
    public abstract virtual void set_TrackTotalHits(TrackTotalHits value);
    public abstract virtual AggregationDictionary get_Aggregations();
    public abstract virtual void set_Aggregations(AggregationDictionary value);
    public abstract virtual IFieldCollapse get_Collapse();
    public abstract virtual void set_Collapse(IFieldCollapse value);
    public abstract virtual Nullable`1<bool> get_Explain();
    public abstract virtual void set_Explain(Nullable`1<bool> value);
    public abstract virtual Fields get_Fields();
    public abstract virtual void set_Fields(Fields value);
    public abstract virtual Nullable`1<int> get_From();
    public abstract virtual void set_From(Nullable`1<int> value);
    public abstract virtual IHighlight get_Highlight();
    public abstract virtual void set_Highlight(IHighlight value);
    public abstract virtual IDictionary`2<IndexName, double> get_IndicesBoost();
    public abstract virtual void set_IndicesBoost(IDictionary`2<IndexName, double> value);
    public abstract virtual Nullable`1<double> get_MinScore();
    public abstract virtual void set_MinScore(Nullable`1<double> value);
    public abstract virtual IPointInTime get_PointInTime();
    public abstract virtual void set_PointInTime(IPointInTime value);
    public abstract virtual QueryContainer get_PostFilter();
    public abstract virtual void set_PostFilter(QueryContainer value);
    public abstract virtual Nullable`1<bool> get_Profile();
    public abstract virtual void set_Profile(Nullable`1<bool> value);
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
    public abstract virtual IList`1<IRescore> get_Rescore();
    public abstract virtual void set_Rescore(IList`1<IRescore> value);
    public abstract virtual IScriptFields get_ScriptFields();
    public abstract virtual void set_ScriptFields(IScriptFields value);
    public abstract virtual IList`1<object> get_SearchAfter();
    public abstract virtual void set_SearchAfter(IList`1<object> value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
    public abstract virtual ISlicedScroll get_Slice();
    public abstract virtual void set_Slice(ISlicedScroll value);
    public abstract virtual IList`1<ISort> get_Sort();
    public abstract virtual void set_Sort(IList`1<ISort> value);
    public abstract virtual Union`2<bool, ISourceFilter> get_Source();
    public abstract virtual void set_Source(Union`2<bool, ISourceFilter> value);
    public abstract virtual ISuggestContainer get_Suggest();
    public abstract virtual void set_Suggest(ISuggestContainer value);
    public abstract virtual Nullable`1<long> get_TerminateAfter();
    public abstract virtual void set_TerminateAfter(Nullable`1<long> value);
    public abstract virtual string get_Timeout();
    public abstract virtual void set_Timeout(string value);
    public abstract virtual Nullable`1<bool> get_TrackScores();
    public abstract virtual void set_TrackScores(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Version();
    public abstract virtual void set_Version(Nullable`1<bool> value);
    public abstract virtual IRuntimeFields get_RuntimeFields();
    public abstract virtual void set_RuntimeFields(IRuntimeFields value);
    public abstract virtual IDictionary`2<string, object> get_Ext();
    public abstract virtual void set_Ext(IDictionary`2<string, object> value);
}
[ReadAsAttribute("OpenSearch.Client.SearchRequest`1")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISearchRequest`1 {
}
public interface OpenSearch.Client.ISearchResponse`1 {
    public AggregateDictionary Aggregations { get; }
    public ClusterStatistics Clusters { get; }
    public IReadOnlyCollection`1<TDocument> Documents { get; }
    public IReadOnlyCollection`1<FieldValues> Fields { get; }
    public IReadOnlyCollection`1<IHit`1<TDocument>> Hits { get; }
    public IHitsMetadata`1<TDocument> HitsMetadata { get; }
    public double MaxScore { get; }
    public long NumberOfReducePhases { get; }
    public Profile Profile { get; }
    public string ScrollId { get; }
    public ShardStatistics Shards { get; }
    public ISuggestDictionary`1<TDocument> Suggest { get; }
    public bool TerminatedEarly { get; }
    public bool TimedOut { get; }
    public long Took { get; }
    public long Total { get; }
    public abstract virtual AggregateDictionary get_Aggregations();
    public abstract virtual ClusterStatistics get_Clusters();
    public abstract virtual IReadOnlyCollection`1<TDocument> get_Documents();
    public abstract virtual IReadOnlyCollection`1<FieldValues> get_Fields();
    public abstract virtual IReadOnlyCollection`1<IHit`1<TDocument>> get_Hits();
    public abstract virtual IHitsMetadata`1<TDocument> get_HitsMetadata();
    public abstract virtual double get_MaxScore();
    public abstract virtual long get_NumberOfReducePhases();
    public abstract virtual Profile get_Profile();
    public abstract virtual string get_ScrollId();
    public abstract virtual ShardStatistics get_Shards();
    public abstract virtual ISuggestDictionary`1<TDocument> get_Suggest();
    public abstract virtual bool get_TerminatedEarly();
    public abstract virtual bool get_TimedOut();
    public abstract virtual long get_Took();
    public abstract virtual long get_Total();
}
[InterfaceDataContractAttribute]
[MapsApiAttribute("search_shards.json")]
public interface OpenSearch.Client.ISearchShardsRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual Indices get_Index();
}
public interface OpenSearch.Client.ISearchShardsRequest`1 {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SearchTemplateRequest")]
[MapsApiAttribute("search_template.json")]
public interface OpenSearch.Client.ISearchTemplateRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Params { get; public set; }
    [DataMemberAttribute]
public string Source { get; public set; }
    public abstract virtual Indices get_Index();
    public abstract virtual string get_Id();
    public abstract virtual void set_Id(string value);
    public abstract virtual IDictionary`2<string, object> get_Params();
    public abstract virtual void set_Params(IDictionary`2<string, object> value);
    public abstract virtual string get_Source();
    public abstract virtual void set_Source(string value);
}
public interface OpenSearch.Client.ISelector {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SerialDifferencingAggregation")]
public interface OpenSearch.Client.ISerialDifferencingAggregation {
    [DataMemberAttribute]
public Nullable`1<int> Lag { get; public set; }
    public abstract virtual Nullable`1<int> get_Lag();
    public abstract virtual void set_Lag(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISetProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceWriteFormatter`1")]
public object Value { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Override { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreEmptyValue { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual object get_Value();
    public abstract virtual void set_Value(object value);
    public abstract virtual Nullable`1<bool> get_Override();
    public abstract virtual void set_Override(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IgnoreEmptyValue();
    public abstract virtual void set_IgnoreEmptyValue(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.CompositeFormatter`3<OpenSearch.Client.IShapeQuery,OpenSearch.Client.ShapeQueryFormatter,OpenSearch.Client.ShapeQueryFieldNameFormatter>")]
public interface OpenSearch.Client.IShapeQuery {
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    [DataMemberAttribute]
public IFieldLookup IndexedShape { get; public set; }
    [DataMemberAttribute]
public Nullable`1<ShapeRelation> Relation { get; public set; }
    [DataMemberAttribute]
public IGeoShape Shape { get; public set; }
    public abstract virtual Nullable`1<bool> get_IgnoreUnmapped();
    public abstract virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    public abstract virtual IFieldLookup get_IndexedShape();
    public abstract virtual void set_IndexedShape(IFieldLookup value);
    public abstract virtual Nullable`1<ShapeRelation> get_Relation();
    public abstract virtual void set_Relation(Nullable`1<ShapeRelation> value);
    public abstract virtual IGeoShape get_Shape();
    public abstract virtual void set_Shape(IGeoShape value);
}
public interface OpenSearch.Client.IShardAllocationSettings {
    public Nullable`1<AllocationEnable> AllocationEnable { get; public set; }
    public Nullable`1<int> NodeConcurrentRecoveries { get; public set; }
    public Nullable`1<int> NodeInitialPrimariesRecoveries { get; public set; }
    public Nullable`1<bool> SameShardHost { get; public set; }
    public abstract virtual Nullable`1<AllocationEnable> get_AllocationEnable();
    public abstract virtual void set_AllocationEnable(Nullable`1<AllocationEnable> value);
    public abstract virtual Nullable`1<int> get_NodeConcurrentRecoveries();
    public abstract virtual void set_NodeConcurrentRecoveries(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_NodeInitialPrimariesRecoveries();
    public abstract virtual void set_NodeInitialPrimariesRecoveries(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_SameShardHost();
    public abstract virtual void set_SameShardHost(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IShardBalancingHeuristicsSettings {
    public Nullable`1<float> BalanceIndex { get; public set; }
    public Nullable`1<float> BalanceShard { get; public set; }
    public Nullable`1<float> BalanceThreshold { get; public set; }
    public abstract virtual Nullable`1<float> get_BalanceIndex();
    public abstract virtual void set_BalanceIndex(Nullable`1<float> value);
    public abstract virtual Nullable`1<float> get_BalanceShard();
    public abstract virtual void set_BalanceShard(Nullable`1<float> value);
    public abstract virtual Nullable`1<float> get_BalanceThreshold();
    public abstract virtual void set_BalanceThreshold(Nullable`1<float> value);
}
public interface OpenSearch.Client.IShardRebalancingSettings {
    public Nullable`1<AllowRebalance> AllowRebalance { get; public set; }
    public Nullable`1<int> ConcurrentRebalance { get; public set; }
    public Nullable`1<RebalanceEnable> RebalanceEnable { get; public set; }
    public abstract virtual Nullable`1<AllowRebalance> get_AllowRebalance();
    public abstract virtual void set_AllowRebalance(Nullable`1<AllowRebalance> value);
    public abstract virtual Nullable`1<int> get_ConcurrentRebalance();
    public abstract virtual void set_ConcurrentRebalance(Nullable`1<int> value);
    public abstract virtual Nullable`1<RebalanceEnable> get_RebalanceEnable();
    public abstract virtual void set_RebalanceEnable(Nullable`1<RebalanceEnable> value);
}
public interface OpenSearch.Client.IShingleTokenFilter {
    [DataMemberAttribute]
public string FillerToken { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxShingleSize { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MinShingleSize { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> OutputUnigrams { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> OutputUnigramsIfNoShingles { get; public set; }
    [DataMemberAttribute]
public string TokenSeparator { get; public set; }
    public abstract virtual string get_FillerToken();
    public abstract virtual void set_FillerToken(string value);
    public abstract virtual Nullable`1<int> get_MaxShingleSize();
    public abstract virtual void set_MaxShingleSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinShingleSize();
    public abstract virtual void set_MinShingleSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_OutputUnigrams();
    public abstract virtual void set_OutputUnigrams(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_OutputUnigramsIfNoShingles();
    public abstract virtual void set_OutputUnigramsIfNoShingles(Nullable`1<bool> value);
    public abstract virtual string get_TokenSeparator();
    public abstract virtual void set_TokenSeparator(string value);
}
[MapsApiAttribute("indices.shrink.json")]
[ReadAsAttribute("OpenSearch.Client.ShrinkIndexRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IShrinkIndexRequest {
    [DataMemberAttribute]
public IAliases Aliases { get; public set; }
    [DataMemberAttribute]
public IIndexSettings Settings { get; public set; }
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public IndexName Target { get; }
    public abstract virtual IAliases get_Aliases();
    public abstract virtual void set_Aliases(IAliases value);
    public abstract virtual IIndexSettings get_Settings();
    public abstract virtual void set_Settings(IIndexSettings value);
    public abstract virtual IndexName get_Index();
    public abstract virtual IndexName get_Target();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SignificantTermsAggregation")]
public interface OpenSearch.Client.ISignificantTermsAggregation {
    [DataMemberAttribute]
public QueryContainer BackgroundFilter { get; public set; }
    [DataMemberAttribute]
public IChiSquareHeuristic ChiSquare { get; public set; }
    [DataMemberAttribute]
public IncludeExclude Exclude { get; public set; }
    [DataMemberAttribute]
public Nullable`1<TermsAggregationExecutionHint> ExecutionHint { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public IGoogleNormalizedDistanceHeuristic GoogleNormalizedDistance { get; public set; }
    [DataMemberAttribute]
public IncludeExclude Include { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> MinimumDocumentCount { get; public set; }
    [DataMemberAttribute]
public IMutualInformationHeuristic MutualInformation { get; public set; }
    [DataMemberAttribute]
public IPercentageScoreHeuristic PercentageScore { get; public set; }
    [DataMemberAttribute]
public IScriptedHeuristic Script { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> ShardMinimumDocumentCount { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> ShardSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    public abstract virtual QueryContainer get_BackgroundFilter();
    public abstract virtual void set_BackgroundFilter(QueryContainer value);
    public abstract virtual IChiSquareHeuristic get_ChiSquare();
    public abstract virtual void set_ChiSquare(IChiSquareHeuristic value);
    public abstract virtual IncludeExclude get_Exclude();
    public abstract virtual void set_Exclude(IncludeExclude value);
    public abstract virtual Nullable`1<TermsAggregationExecutionHint> get_ExecutionHint();
    public abstract virtual void set_ExecutionHint(Nullable`1<TermsAggregationExecutionHint> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual IGoogleNormalizedDistanceHeuristic get_GoogleNormalizedDistance();
    public abstract virtual void set_GoogleNormalizedDistance(IGoogleNormalizedDistanceHeuristic value);
    public abstract virtual IncludeExclude get_Include();
    public abstract virtual void set_Include(IncludeExclude value);
    public abstract virtual Nullable`1<long> get_MinimumDocumentCount();
    public abstract virtual void set_MinimumDocumentCount(Nullable`1<long> value);
    public abstract virtual IMutualInformationHeuristic get_MutualInformation();
    public abstract virtual void set_MutualInformation(IMutualInformationHeuristic value);
    public abstract virtual IPercentageScoreHeuristic get_PercentageScore();
    public abstract virtual void set_PercentageScore(IPercentageScoreHeuristic value);
    public abstract virtual IScriptedHeuristic get_Script();
    public abstract virtual void set_Script(IScriptedHeuristic value);
    public abstract virtual Nullable`1<long> get_ShardMinimumDocumentCount();
    public abstract virtual void set_ShardMinimumDocumentCount(Nullable`1<long> value);
    public abstract virtual Nullable`1<int> get_ShardSize();
    public abstract virtual void set_ShardSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SignificantTextAggregation")]
public interface OpenSearch.Client.ISignificantTextAggregation {
    [DataMemberAttribute]
public QueryContainer BackgroundFilter { get; public set; }
    [DataMemberAttribute]
public IChiSquareHeuristic ChiSquare { get; public set; }
    [DataMemberAttribute]
public IncludeExclude Exclude { get; public set; }
    [DataMemberAttribute]
public Nullable`1<TermsAggregationExecutionHint> ExecutionHint { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> FilterDuplicateText { get; public set; }
    [DataMemberAttribute]
public IGoogleNormalizedDistanceHeuristic GoogleNormalizedDistance { get; public set; }
    [DataMemberAttribute]
public IncludeExclude Include { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> MinimumDocumentCount { get; public set; }
    [DataMemberAttribute]
public IMutualInformationHeuristic MutualInformation { get; public set; }
    [DataMemberAttribute]
public IPercentageScoreHeuristic PercentageScore { get; public set; }
    [DataMemberAttribute]
public IScriptedHeuristic Script { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> ShardMinimumDocumentCount { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> ShardSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    [DataMemberAttribute]
public Fields SourceFields { get; public set; }
    public abstract virtual QueryContainer get_BackgroundFilter();
    public abstract virtual void set_BackgroundFilter(QueryContainer value);
    public abstract virtual IChiSquareHeuristic get_ChiSquare();
    public abstract virtual void set_ChiSquare(IChiSquareHeuristic value);
    public abstract virtual IncludeExclude get_Exclude();
    public abstract virtual void set_Exclude(IncludeExclude value);
    public abstract virtual Nullable`1<TermsAggregationExecutionHint> get_ExecutionHint();
    public abstract virtual void set_ExecutionHint(Nullable`1<TermsAggregationExecutionHint> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_FilterDuplicateText();
    public abstract virtual void set_FilterDuplicateText(Nullable`1<bool> value);
    public abstract virtual IGoogleNormalizedDistanceHeuristic get_GoogleNormalizedDistance();
    public abstract virtual void set_GoogleNormalizedDistance(IGoogleNormalizedDistanceHeuristic value);
    public abstract virtual IncludeExclude get_Include();
    public abstract virtual void set_Include(IncludeExclude value);
    public abstract virtual Nullable`1<long> get_MinimumDocumentCount();
    public abstract virtual void set_MinimumDocumentCount(Nullable`1<long> value);
    public abstract virtual IMutualInformationHeuristic get_MutualInformation();
    public abstract virtual void set_MutualInformation(IMutualInformationHeuristic value);
    public abstract virtual IPercentageScoreHeuristic get_PercentageScore();
    public abstract virtual void set_PercentageScore(IPercentageScoreHeuristic value);
    public abstract virtual IScriptedHeuristic get_Script();
    public abstract virtual void set_Script(IScriptedHeuristic value);
    public abstract virtual Nullable`1<long> get_ShardMinimumDocumentCount();
    public abstract virtual void set_ShardMinimumDocumentCount(Nullable`1<long> value);
    public abstract virtual Nullable`1<int> get_ShardSize();
    public abstract virtual void set_ShardSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
    public abstract virtual Fields get_SourceFields();
    public abstract virtual void set_SourceFields(Fields value);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.Similarities,OpenSearch.Client.ISimilarities,System.String,OpenSearch.Client.ISimilarity>")]
public interface OpenSearch.Client.ISimilarities {
}
[JsonFormatterAttribute("OpenSearch.Client.SimilarityFormatter")]
public interface OpenSearch.Client.ISimilarity {
    [DataMemberAttribute]
public string Type { get; }
    public abstract virtual string get_Type();
}
public interface OpenSearch.Client.ISimpleAnalyzer {
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISimpleModel {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SimpleQueryStringQueryDescriptor`1<System.Object>")]
public interface OpenSearch.Client.ISimpleQueryStringQuery {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> AnalyzeWildcard { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> AutoGenerateSynonymsPhraseQuery { get; public set; }
    [DataMemberAttribute]
public Nullable`1<Operator> DefaultOperator { get; public set; }
    [DataMemberAttribute]
public Fields Fields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<SimpleQueryStringFlags> Flags { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> FuzzyMaxExpansions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> FuzzyPrefixLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> FuzzyTranspositions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Lenient { get; public set; }
    [DataMemberAttribute]
public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    [DataMemberAttribute]
public string Query { get; public set; }
    [DataMemberAttribute]
public string QuoteFieldSuffix { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<bool> get_AnalyzeWildcard();
    public abstract virtual void set_AnalyzeWildcard(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_AutoGenerateSynonymsPhraseQuery();
    public abstract virtual void set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    public abstract virtual Nullable`1<Operator> get_DefaultOperator();
    public abstract virtual void set_DefaultOperator(Nullable`1<Operator> value);
    public abstract virtual Fields get_Fields();
    public abstract virtual void set_Fields(Fields value);
    public abstract virtual Nullable`1<SimpleQueryStringFlags> get_Flags();
    public abstract virtual void set_Flags(Nullable`1<SimpleQueryStringFlags> value);
    public abstract virtual Nullable`1<int> get_FuzzyMaxExpansions();
    public abstract virtual void set_FuzzyMaxExpansions(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_FuzzyPrefixLength();
    public abstract virtual void set_FuzzyPrefixLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_FuzzyTranspositions();
    public abstract virtual void set_FuzzyTranspositions(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Lenient();
    public abstract virtual void set_Lenient(Nullable`1<bool> value);
    public abstract virtual MinimumShouldMatch get_MinimumShouldMatch();
    public abstract virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual string get_QuoteFieldSuffix();
    public abstract virtual void set_QuoteFieldSuffix(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISimulatePipelineDocument {
    [DataMemberAttribute]
public Id Id { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1")]
public object Source { get; public set; }
    public abstract virtual Id get_Id();
    public abstract virtual void set_Id(Id value);
    public abstract virtual IndexName get_Index();
    public abstract virtual void set_Index(IndexName value);
    public abstract virtual object get_Source();
    public abstract virtual void set_Source(object value);
}
[MapsApiAttribute("ingest.simulate.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISimulatePipelineRequest {
    [DataMemberAttribute]
public IEnumerable`1<ISimulatePipelineDocument> Documents { get; public set; }
    [DataMemberAttribute]
public IPipeline Pipeline { get; public set; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual IEnumerable`1<ISimulatePipelineDocument> get_Documents();
    public abstract virtual void set_Documents(IEnumerable`1<ISimulatePipelineDocument> value);
    public abstract virtual IPipeline get_Pipeline();
    public abstract virtual void set_Pipeline(IPipeline value);
    public abstract virtual Id get_Id();
}
[ReadAsAttribute("OpenSearch.Client.SizeField")]
public interface OpenSearch.Client.ISizeField {
    [DataMemberAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    public abstract virtual Nullable`1<bool> get_Enabled();
    public abstract virtual void set_Enabled(Nullable`1<bool> value);
}
[ReadAsAttribute("OpenSearch.Client.SlicedScroll")]
public interface OpenSearch.Client.ISlicedScroll {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Id { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Max { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<int> get_Id();
    public abstract virtual void set_Id(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Max();
    public abstract virtual void set_Max(Nullable`1<int> value);
}
public interface OpenSearch.Client.ISlowLog {
    public ISlowLogIndexing Indexing { get; public set; }
    public ISlowLogSearch Search { get; public set; }
    public abstract virtual ISlowLogIndexing get_Indexing();
    public abstract virtual void set_Indexing(ISlowLogIndexing value);
    public abstract virtual ISlowLogSearch get_Search();
    public abstract virtual void set_Search(ISlowLogSearch value);
}
public interface OpenSearch.Client.ISlowLogIndexing {
    public Nullable`1<LogLevel> LogLevel { get; public set; }
    public Nullable`1<int> Source { get; public set; }
    public Time ThresholdDebug { get; public set; }
    public Time ThresholdInfo { get; public set; }
    public Time ThresholdTrace { get; public set; }
    public Time ThresholdWarn { get; public set; }
    public abstract virtual Nullable`1<LogLevel> get_LogLevel();
    public abstract virtual void set_LogLevel(Nullable`1<LogLevel> value);
    public abstract virtual Nullable`1<int> get_Source();
    public abstract virtual void set_Source(Nullable`1<int> value);
    public abstract virtual Time get_ThresholdDebug();
    public abstract virtual void set_ThresholdDebug(Time value);
    public abstract virtual Time get_ThresholdInfo();
    public abstract virtual void set_ThresholdInfo(Time value);
    public abstract virtual Time get_ThresholdTrace();
    public abstract virtual void set_ThresholdTrace(Time value);
    public abstract virtual Time get_ThresholdWarn();
    public abstract virtual void set_ThresholdWarn(Time value);
}
public interface OpenSearch.Client.ISlowLogSearch {
    public ISlowLogSearchFetch Fetch { get; public set; }
    public Nullable`1<LogLevel> LogLevel { get; public set; }
    public ISlowLogSearchQuery Query { get; public set; }
    public abstract virtual ISlowLogSearchFetch get_Fetch();
    public abstract virtual void set_Fetch(ISlowLogSearchFetch value);
    public abstract virtual Nullable`1<LogLevel> get_LogLevel();
    public abstract virtual void set_LogLevel(Nullable`1<LogLevel> value);
    public abstract virtual ISlowLogSearchQuery get_Query();
    public abstract virtual void set_Query(ISlowLogSearchQuery value);
}
public interface OpenSearch.Client.ISlowLogSearchFetch {
    public Time ThresholdDebug { get; public set; }
    public Time ThresholdInfo { get; public set; }
    public Time ThresholdTrace { get; public set; }
    public Time ThresholdWarn { get; public set; }
    public abstract virtual Time get_ThresholdDebug();
    public abstract virtual void set_ThresholdDebug(Time value);
    public abstract virtual Time get_ThresholdInfo();
    public abstract virtual void set_ThresholdInfo(Time value);
    public abstract virtual Time get_ThresholdTrace();
    public abstract virtual void set_ThresholdTrace(Time value);
    public abstract virtual Time get_ThresholdWarn();
    public abstract virtual void set_ThresholdWarn(Time value);
}
public interface OpenSearch.Client.ISlowLogSearchQuery {
    public Time ThresholdDebug { get; public set; }
    public Time ThresholdInfo { get; public set; }
    public Time ThresholdTrace { get; public set; }
    public Time ThresholdWarn { get; public set; }
    public abstract virtual Time get_ThresholdDebug();
    public abstract virtual void set_ThresholdDebug(Time value);
    public abstract virtual Time get_ThresholdInfo();
    public abstract virtual void set_ThresholdInfo(Time value);
    public abstract virtual Time get_ThresholdTrace();
    public abstract virtual void set_ThresholdTrace(Time value);
    public abstract virtual Time get_ThresholdWarn();
    public abstract virtual void set_ThresholdWarn(Time value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISmoothingModel {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SmoothingModelContainer")]
public interface OpenSearch.Client.ISmoothingModelContainer {
    [DataMemberAttribute]
public ILaplaceSmoothingModel Laplace { get; public set; }
    [DataMemberAttribute]
public ILinearInterpolationSmoothingModel LinearInterpolation { get; public set; }
    [DataMemberAttribute]
public IStupidBackoffSmoothingModel StupidBackoff { get; public set; }
    public abstract virtual ILaplaceSmoothingModel get_Laplace();
    public abstract virtual void set_Laplace(ILaplaceSmoothingModel value);
    public abstract virtual ILinearInterpolationSmoothingModel get_LinearInterpolation();
    public abstract virtual void set_LinearInterpolation(ILinearInterpolationSmoothingModel value);
    public abstract virtual IStupidBackoffSmoothingModel get_StupidBackoff();
    public abstract virtual void set_StupidBackoff(IStupidBackoffSmoothingModel value);
}
public interface OpenSearch.Client.ISnapshotRepository {
    [DataMemberAttribute]
public string Type { get; }
    public abstract virtual string get_Type();
}
[MapsApiAttribute("snapshot.create.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISnapshotRequest {
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IncludeGlobalState { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.IndicesMultiSyntaxFormatter")]
public Indices Indices { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Partial { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Metadata { get; public set; }
    [IgnoreDataMemberAttribute]
public Name RepositoryName { get; }
    [IgnoreDataMemberAttribute]
public Name Snapshot { get; }
    public abstract virtual Nullable`1<bool> get_IgnoreUnavailable();
    public abstract virtual void set_IgnoreUnavailable(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeGlobalState();
    public abstract virtual void set_IncludeGlobalState(Nullable`1<bool> value);
    public abstract virtual Indices get_Indices();
    public abstract virtual void set_Indices(Indices value);
    public abstract virtual Nullable`1<bool> get_Partial();
    public abstract virtual void set_Partial(Nullable`1<bool> value);
    public abstract virtual IDictionary`2<string, object> get_Metadata();
    public abstract virtual void set_Metadata(IDictionary`2<string, object> value);
    public abstract virtual Name get_RepositoryName();
    public abstract virtual Name get_Snapshot();
}
[MapsApiAttribute("snapshot.status.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISnapshotStatusRequest {
    [IgnoreDataMemberAttribute]
public Name RepositoryName { get; }
    [IgnoreDataMemberAttribute]
public Names Snapshot { get; }
    public abstract virtual Name get_RepositoryName();
    public abstract virtual Names get_Snapshot();
}
public interface OpenSearch.Client.ISnowballAnalyzer {
    [DataMemberAttribute]
public Nullable`1<SnowballLanguage> Language { get; public set; }
    [DataMemberAttribute]
public StopWords StopWords { get; public set; }
    public abstract virtual Nullable`1<SnowballLanguage> get_Language();
    public abstract virtual void set_Language(Nullable`1<SnowballLanguage> value);
    public abstract virtual StopWords get_StopWords();
    public abstract virtual void set_StopWords(StopWords value);
}
public interface OpenSearch.Client.ISnowballTokenFilter {
    [DataMemberAttribute]
public Nullable`1<SnowballLanguage> Language { get; public set; }
    public abstract virtual Nullable`1<SnowballLanguage> get_Language();
    public abstract virtual void set_Language(Nullable`1<SnowballLanguage> value);
}
public interface OpenSearch.Client.ISoftDeleteRetentionSettings {
    public Nullable`1<long> Operations { get; public set; }
    public abstract virtual Nullable`1<long> get_Operations();
    public abstract virtual void set_Operations(Nullable`1<long> value);
}
public interface OpenSearch.Client.ISoftDeleteSettings {
    public ISoftDeleteRetentionSettings Retention { get; public set; }
    public abstract virtual ISoftDeleteRetentionSettings get_Retention();
    public abstract virtual void set_Retention(ISoftDeleteRetentionSettings value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SortFormatter")]
public interface OpenSearch.Client.ISort {
    [DataMemberAttribute]
public object Missing { get; public set; }
    [DataMemberAttribute]
public Nullable`1<SortMode> Mode { get; public set; }
    [DataMemberAttribute]
public Nullable`1<NumericType> NumericType { get; public set; }
    [DataMemberAttribute]
public INestedSort Nested { get; public set; }
    [DataMemberAttribute]
public Nullable`1<SortOrder> Order { get; public set; }
    [IgnoreDataMemberAttribute]
public Field SortKey { get; }
    public abstract virtual object get_Missing();
    public abstract virtual void set_Missing(object value);
    public abstract virtual Nullable`1<SortMode> get_Mode();
    public abstract virtual void set_Mode(Nullable`1<SortMode> value);
    public abstract virtual Nullable`1<NumericType> get_NumericType();
    public abstract virtual void set_NumericType(Nullable`1<NumericType> value);
    public abstract virtual INestedSort get_Nested();
    public abstract virtual void set_Nested(INestedSort value);
    public abstract virtual Nullable`1<SortOrder> get_Order();
    public abstract virtual void set_Order(Nullable`1<SortOrder> value);
    public abstract virtual Field get_SortKey();
}
public interface OpenSearch.Client.ISortingSettings {
    public Fields Fields { get; public set; }
    public IndexSortMissing[] Missing { get; public set; }
    public IndexSortMode[] Mode { get; public set; }
    public IndexSortOrder[] Order { get; public set; }
    public abstract virtual Fields get_Fields();
    public abstract virtual void set_Fields(Fields value);
    public abstract virtual IndexSortMissing[] get_Missing();
    public abstract virtual void set_Missing(IndexSortMissing[] value);
    public abstract virtual IndexSortMode[] get_Mode();
    public abstract virtual void set_Mode(IndexSortMode[] value);
    public abstract virtual IndexSortOrder[] get_Order();
    public abstract virtual void set_Order(IndexSortOrder[] value);
}
public interface OpenSearch.Client.ISortOrder {
    public string Key { get; public set; }
    public SortOrder Order { get; public set; }
    public abstract virtual string get_Key();
    public abstract virtual void set_Key(string value);
    public abstract virtual SortOrder get_Order();
    public abstract virtual void set_Order(SortOrder value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISortProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<SortOrder> Order { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<SortOrder> get_Order();
    public abstract virtual void set_Order(Nullable`1<SortOrder> value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
}
[MapsApiAttribute("exists_source.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISourceExistsRequest {
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual IndexName get_Index();
    public abstract virtual Id get_Id();
}
public interface OpenSearch.Client.ISourceExistsRequest`1 {
}
[ReadAsAttribute("OpenSearch.Client.SourceField")]
public interface OpenSearch.Client.ISourceField {
    [DataMemberAttribute]
public Nullable`1<bool> Compress { get; public set; }
    [DataMemberAttribute]
public string CompressThreshold { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Enabled { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Excludes { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Includes { get; public set; }
    public abstract virtual Nullable`1<bool> get_Compress();
    public abstract virtual void set_Compress(Nullable`1<bool> value);
    public abstract virtual string get_CompressThreshold();
    public abstract virtual void set_CompressThreshold(string value);
    public abstract virtual Nullable`1<bool> get_Enabled();
    public abstract virtual void set_Enabled(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_Excludes();
    public abstract virtual void set_Excludes(IEnumerable`1<string> value);
    public abstract virtual IEnumerable`1<string> get_Includes();
    public abstract virtual void set_Includes(IEnumerable`1<string> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFilterFormatter")]
public interface OpenSearch.Client.ISourceFilter {
    [DataMemberAttribute]
public Fields Excludes { get; public set; }
    [DataMemberAttribute]
public Fields Includes { get; public set; }
    public abstract virtual Fields get_Excludes();
    public abstract virtual void set_Excludes(Fields value);
    public abstract virtual Fields get_Includes();
    public abstract virtual void set_Includes(Fields value);
}
[JsonFormatterAttribute("OpenSearch.Client.SourceOnlyRepositoryFormatter")]
public interface OpenSearch.Client.ISourceOnlyRepository {
    [IgnoreDataMemberAttribute]
public string DelegateType { get; }
    public abstract virtual string get_DelegateType();
}
[MapsApiAttribute("get_source.json")]
[ResponseBuilderWithGeneric("SourceRequestResponseBuilder<TDocument>.Instance")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISourceRequest {
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual IndexName get_Index();
    public abstract virtual Id get_Id();
}
public interface OpenSearch.Client.ISourceRequest`1 {
}
public interface OpenSearch.Client.ISourceResponse`1 {
    public TDocument Body { get; }
    public abstract virtual TDocument get_Body();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SpanContainingQuery")]
public interface OpenSearch.Client.ISpanContainingQuery {
    [DataMemberAttribute]
public ISpanQuery Big { get; public set; }
    [DataMemberAttribute]
public ISpanQuery Little { get; public set; }
    public abstract virtual ISpanQuery get_Big();
    public abstract virtual void set_Big(ISpanQuery value);
    public abstract virtual ISpanQuery get_Little();
    public abstract virtual void set_Little(ISpanQuery value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SpanFieldMaskingQuery")]
public interface OpenSearch.Client.ISpanFieldMaskingQuery {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public ISpanQuery Query { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual ISpanQuery get_Query();
    public abstract virtual void set_Query(ISpanQuery value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SpanFirstQueryDescriptor`1<System.Object>")]
public interface OpenSearch.Client.ISpanFirstQuery {
    [DataMemberAttribute]
public Nullable`1<int> End { get; public set; }
    [DataMemberAttribute]
public ISpanQuery Match { get; public set; }
    public abstract virtual Nullable`1<int> get_End();
    public abstract virtual void set_End(Nullable`1<int> value);
    public abstract virtual ISpanQuery get_Match();
    public abstract virtual void set_Match(ISpanQuery value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SpanGapQueryFormatter")]
public interface OpenSearch.Client.ISpanGapQuery {
    public Field Field { get; public set; }
    public Nullable`1<int> Width { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<int> get_Width();
    public abstract virtual void set_Width(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SpanMultiTermQuery")]
public interface OpenSearch.Client.ISpanMultiTermQuery {
    [DataMemberAttribute]
public QueryContainer Match { get; public set; }
    public abstract virtual QueryContainer get_Match();
    public abstract virtual void set_Match(QueryContainer value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SpanNearQueryDescriptor`1<System.Object>")]
public interface OpenSearch.Client.ISpanNearQuery {
    [DataMemberAttribute]
public IEnumerable`1<ISpanQuery> Clauses { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> InOrder { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Slop { get; public set; }
    public abstract virtual IEnumerable`1<ISpanQuery> get_Clauses();
    public abstract virtual void set_Clauses(IEnumerable`1<ISpanQuery> value);
    public abstract virtual Nullable`1<bool> get_InOrder();
    public abstract virtual void set_InOrder(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_Slop();
    public abstract virtual void set_Slop(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SpanNotQuery")]
public interface OpenSearch.Client.ISpanNotQuery {
    [DataMemberAttribute]
public Nullable`1<int> Dist { get; public set; }
    [DataMemberAttribute]
public ISpanQuery Exclude { get; public set; }
    [DataMemberAttribute]
public ISpanQuery Include { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Post { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Pre { get; public set; }
    public abstract virtual Nullable`1<int> get_Dist();
    public abstract virtual void set_Dist(Nullable`1<int> value);
    public abstract virtual ISpanQuery get_Exclude();
    public abstract virtual void set_Exclude(ISpanQuery value);
    public abstract virtual ISpanQuery get_Include();
    public abstract virtual void set_Include(ISpanQuery value);
    public abstract virtual Nullable`1<int> get_Post();
    public abstract virtual void set_Post(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Pre();
    public abstract virtual void set_Pre(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SpanOrQuery")]
public interface OpenSearch.Client.ISpanOrQuery {
    [DataMemberAttribute]
public IEnumerable`1<ISpanQuery> Clauses { get; public set; }
    public abstract virtual IEnumerable`1<ISpanQuery> get_Clauses();
    public abstract virtual void set_Clauses(IEnumerable`1<ISpanQuery> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SpanQuery")]
public interface OpenSearch.Client.ISpanQuery {
    [DataMemberAttribute]
public ISpanContainingQuery SpanContaining { get; public set; }
    [DataMemberAttribute]
public ISpanFieldMaskingQuery SpanFieldMasking { get; public set; }
    [DataMemberAttribute]
public ISpanFirstQuery SpanFirst { get; public set; }
    [DataMemberAttribute]
public ISpanGapQuery SpanGap { get; public set; }
    [DataMemberAttribute]
public ISpanMultiTermQuery SpanMultiTerm { get; public set; }
    [DataMemberAttribute]
public ISpanNearQuery SpanNear { get; public set; }
    [DataMemberAttribute]
public ISpanNotQuery SpanNot { get; public set; }
    [DataMemberAttribute]
public ISpanOrQuery SpanOr { get; public set; }
    [DataMemberAttribute]
public ISpanTermQuery SpanTerm { get; public set; }
    [DataMemberAttribute]
public ISpanWithinQuery SpanWithin { get; public set; }
    public abstract virtual ISpanContainingQuery get_SpanContaining();
    public abstract virtual void set_SpanContaining(ISpanContainingQuery value);
    public abstract virtual ISpanFieldMaskingQuery get_SpanFieldMasking();
    public abstract virtual void set_SpanFieldMasking(ISpanFieldMaskingQuery value);
    public abstract virtual ISpanFirstQuery get_SpanFirst();
    public abstract virtual void set_SpanFirst(ISpanFirstQuery value);
    public abstract virtual ISpanGapQuery get_SpanGap();
    public abstract virtual void set_SpanGap(ISpanGapQuery value);
    public abstract virtual ISpanMultiTermQuery get_SpanMultiTerm();
    public abstract virtual void set_SpanMultiTerm(ISpanMultiTermQuery value);
    public abstract virtual ISpanNearQuery get_SpanNear();
    public abstract virtual void set_SpanNear(ISpanNearQuery value);
    public abstract virtual ISpanNotQuery get_SpanNot();
    public abstract virtual void set_SpanNot(ISpanNotQuery value);
    public abstract virtual ISpanOrQuery get_SpanOr();
    public abstract virtual void set_SpanOr(ISpanOrQuery value);
    public abstract virtual ISpanTermQuery get_SpanTerm();
    public abstract virtual void set_SpanTerm(ISpanTermQuery value);
    public abstract virtual ISpanWithinQuery get_SpanWithin();
    public abstract virtual void set_SpanWithin(ISpanWithinQuery value);
    public abstract virtual void Accept(IQueryVisitor visitor);
}
public interface OpenSearch.Client.ISpanSubQuery {
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.SpanTermQuery,OpenSearch.Client.ISpanTermQuery>")]
public interface OpenSearch.Client.ISpanTermQuery {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceWriteFormatter`1<System.Object>")]
public object Value { get; public set; }
    public abstract virtual object get_Value();
    public abstract virtual void set_Value(object value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SpanWithinQuery")]
public interface OpenSearch.Client.ISpanWithinQuery {
    [DataMemberAttribute]
public ISpanQuery Big { get; public set; }
    [DataMemberAttribute]
public ISpanQuery Little { get; public set; }
    public abstract virtual ISpanQuery get_Big();
    public abstract virtual void set_Big(ISpanQuery value);
    public abstract virtual ISpanQuery get_Little();
    public abstract virtual void set_Little(ISpanQuery value);
}
[MapsApiAttribute("indices.split.json")]
[ReadAsAttribute("OpenSearch.Client.SplitIndexRequest")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISplitIndexRequest {
    [DataMemberAttribute]
public IAliases Aliases { get; public set; }
    [DataMemberAttribute]
public IIndexSettings Settings { get; public set; }
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public IndexName Target { get; }
    public abstract virtual IAliases get_Aliases();
    public abstract virtual void set_Aliases(IAliases value);
    public abstract virtual IIndexSettings get_Settings();
    public abstract virtual void set_Settings(IIndexSettings value);
    public abstract virtual IndexName get_Index();
    public abstract virtual IndexName get_Target();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ISplitProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public string Separator { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> PreserveTrailing { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual string get_Separator();
    public abstract virtual void set_Separator(string value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
    public abstract virtual Nullable`1<bool> get_PreserveTrailing();
    public abstract virtual void set_PreserveTrailing(Nullable`1<bool> value);
}
public interface OpenSearch.Client.IStandardAnalyzer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxTokenLength { get; public set; }
    [DataMemberAttribute]
public StopWords StopWords { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxTokenLength();
    public abstract virtual void set_MaxTokenLength(Nullable`1<int> value);
    public abstract virtual StopWords get_StopWords();
    public abstract virtual void set_StopWords(StopWords value);
}
public interface OpenSearch.Client.IStandardTokenizer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxTokenLength { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxTokenLength();
    public abstract virtual void set_MaxTokenLength(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.StatsAggregation")]
public interface OpenSearch.Client.IStatsAggregation {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.StatsBucketAggregation")]
public interface OpenSearch.Client.IStatsBucketAggregation {
}
public interface OpenSearch.Client.IStemmerOverrideTokenFilter {
    [DataMemberAttribute]
public IEnumerable`1<string> Rules { get; public set; }
    [DataMemberAttribute]
public string RulesPath { get; public set; }
    public abstract virtual IEnumerable`1<string> get_Rules();
    public abstract virtual void set_Rules(IEnumerable`1<string> value);
    public abstract virtual string get_RulesPath();
    public abstract virtual void set_RulesPath(string value);
}
public interface OpenSearch.Client.IStemmerTokenFilter {
    [DataMemberAttribute]
public string Language { get; public set; }
    public abstract virtual string get_Language();
    public abstract virtual void set_Language(string value);
}
public interface OpenSearch.Client.IStopAnalyzer {
    [DataMemberAttribute]
public StopWords StopWords { get; public set; }
    [DataMemberAttribute]
public string StopwordsPath { get; public set; }
    public abstract virtual StopWords get_StopWords();
    public abstract virtual void set_StopWords(StopWords value);
    public abstract virtual string get_StopwordsPath();
    public abstract virtual void set_StopwordsPath(string value);
}
public interface OpenSearch.Client.IStopTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> IgnoreCase { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> RemoveTrailing { get; public set; }
    [DataMemberAttribute]
public StopWords StopWords { get; public set; }
    [DataMemberAttribute]
public string StopWordsPath { get; public set; }
    public abstract virtual Nullable`1<bool> get_IgnoreCase();
    public abstract virtual void set_IgnoreCase(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_RemoveTrailing();
    public abstract virtual void set_RemoveTrailing(Nullable`1<bool> value);
    public abstract virtual StopWords get_StopWords();
    public abstract virtual void set_StopWords(StopWords value);
    public abstract virtual string get_StopWordsPath();
    public abstract virtual void set_StopWordsPath(string value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.StoredScript")]
public interface OpenSearch.Client.IStoredScript {
    [DataMemberAttribute]
public string Lang { get; public set; }
    [DataMemberAttribute]
public string Source { get; public set; }
    public abstract virtual string get_Lang();
    public abstract virtual void set_Lang(string value);
    public abstract virtual string get_Source();
    public abstract virtual void set_Source(string value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.StringFielddata")]
public interface OpenSearch.Client.IStringFielddata {
    [DataMemberAttribute]
public Nullable`1<StringFielddataFormat> Format { get; public set; }
    public abstract virtual Nullable`1<StringFielddataFormat> get_Format();
    public abstract virtual void set_Format(Nullable`1<StringFielddataFormat> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.StupidBackoffSmoothingModel")]
public interface OpenSearch.Client.IStupidBackoffSmoothingModel {
    [DataMemberAttribute]
public Nullable`1<double> Discount { get; public set; }
    public abstract virtual Nullable`1<double> get_Discount();
    public abstract virtual void set_Discount(Nullable`1<double> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.Suggest`1")]
public interface OpenSearch.Client.ISuggest`1 {
    [DataMemberAttribute]
public int Length { get; }
    [DataMemberAttribute]
public int Offset { get; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ISuggestOption`1<T>> Options { get; }
    [DataMemberAttribute]
public string Text { get; }
    public abstract virtual int get_Length();
    public abstract virtual int get_Offset();
    public abstract virtual IReadOnlyCollection`1<ISuggestOption`1<T>> get_Options();
    public abstract virtual string get_Text();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SuggestBucket")]
public interface OpenSearch.Client.ISuggestBucket {
    [DataMemberAttribute]
public ICompletionSuggester Completion { get; public set; }
    [DataMemberAttribute]
public IPhraseSuggester Phrase { get; public set; }
    [DataMemberAttribute]
public string Prefix { get; public set; }
    [DataMemberAttribute]
public string Regex { get; public set; }
    [DataMemberAttribute]
public ITermSuggester Term { get; public set; }
    [DataMemberAttribute]
public string Text { get; public set; }
    public abstract virtual ICompletionSuggester get_Completion();
    public abstract virtual void set_Completion(ICompletionSuggester value);
    public abstract virtual IPhraseSuggester get_Phrase();
    public abstract virtual void set_Phrase(IPhraseSuggester value);
    public abstract virtual string get_Prefix();
    public abstract virtual void set_Prefix(string value);
    public abstract virtual string get_Regex();
    public abstract virtual void set_Regex(string value);
    public abstract virtual ITermSuggester get_Term();
    public abstract virtual void set_Term(ITermSuggester value);
    public abstract virtual string get_Text();
    public abstract virtual void set_Text(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.SuggestContainer,OpenSearch.Client.ISuggestContainer,System.String,OpenSearch.Client.ISuggestBucket>")]
public interface OpenSearch.Client.ISuggestContainer {
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SuggestContextFormatter")]
public interface OpenSearch.Client.ISuggestContext {
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public Field Path { get; public set; }
    [DataMemberAttribute]
public string Type { get; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual Field get_Path();
    public abstract virtual void set_Path(Field value);
    public abstract virtual string get_Type();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SuggestContextQuery")]
public interface OpenSearch.Client.ISuggestContextQuery {
    [DataMemberAttribute]
public Nullable`1<double> Boost { get; public set; }
    [DataMemberAttribute]
public Context Context { get; public set; }
    [DataMemberAttribute]
public Union`2<Distance[], Int32[]> Neighbours { get; public set; }
    [DataMemberAttribute]
public Union`2<Distance, int> Precision { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Prefix { get; public set; }
    public abstract virtual Nullable`1<double> get_Boost();
    public abstract virtual void set_Boost(Nullable`1<double> value);
    public abstract virtual Context get_Context();
    public abstract virtual void set_Context(Context value);
    public abstract virtual Union`2<Distance[], Int32[]> get_Neighbours();
    public abstract virtual void set_Neighbours(Union`2<Distance[], Int32[]> value);
    public abstract virtual Union`2<Distance, int> get_Precision();
    public abstract virtual void set_Precision(Union`2<Distance, int> value);
    public abstract virtual Nullable`1<bool> get_Prefix();
    public abstract virtual void set_Prefix(Nullable`1<bool> value);
}
[DefaultMemberAttribute("Item")]
[JsonFormatterAttribute("OpenSearch.Client.SuggestDictionaryFormatter`1")]
public interface OpenSearch.Client.ISuggestDictionary`1 {
    public ISuggest`1[] Item { get; }
    public IEnumerable`1<string> Keys { get; }
    public IEnumerable`1<ISuggest`1[]> Values { get; }
    public abstract virtual ISuggest`1[] get_Item(string key);
    public abstract virtual IEnumerable`1<string> get_Keys();
    public abstract virtual IEnumerable`1<ISuggest`1[]> get_Values();
    public abstract virtual bool ContainsKey(string key);
}
public interface OpenSearch.Client.ISuggester {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SuggestFuzziness")]
public interface OpenSearch.Client.ISuggestFuzziness {
    [DataMemberAttribute]
public IFuzziness Fuzziness { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> PrefixLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Transpositions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> UnicodeAware { get; public set; }
    public abstract virtual IFuzziness get_Fuzziness();
    public abstract virtual void set_Fuzziness(IFuzziness value);
    public abstract virtual Nullable`1<int> get_MinLength();
    public abstract virtual void set_MinLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_PrefixLength();
    public abstract virtual void set_PrefixLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_Transpositions();
    public abstract virtual void set_Transpositions(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_UnicodeAware();
    public abstract virtual void set_UnicodeAware(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SuggestOption`1")]
public interface OpenSearch.Client.ISuggestOption`1 {
    [DataMemberAttribute]
public bool CollateMatch { get; }
    [DataMemberAttribute]
public IDictionary`2<string, IEnumerable`1<Context>> Contexts { get; }
    [DataMemberAttribute]
public Nullable`1<double> DocumentScore { get; }
    [DataMemberAttribute]
public FieldValues Fields { get; }
    [DataMemberAttribute]
public long Frequency { get; public set; }
    [DataMemberAttribute]
public string Highlighted { get; }
    [DataMemberAttribute]
public string Id { get; }
    [DataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public double Score { get; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1")]
public TDocument Source { get; }
    [DataMemberAttribute]
public Nullable`1<double> SuggestScore { get; }
    [DataMemberAttribute]
public string Text { get; }
    public abstract virtual bool get_CollateMatch();
    public abstract virtual IDictionary`2<string, IEnumerable`1<Context>> get_Contexts();
    public abstract virtual Nullable`1<double> get_DocumentScore();
    public abstract virtual FieldValues get_Fields();
    public abstract virtual long get_Frequency();
    public abstract virtual void set_Frequency(long value);
    public abstract virtual string get_Highlighted();
    public abstract virtual string get_Id();
    public abstract virtual IndexName get_Index();
    public abstract virtual double get_Score();
    public abstract virtual TDocument get_Source();
    public abstract virtual Nullable`1<double> get_SuggestScore();
    public abstract virtual string get_Text();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SumAggregation")]
public interface OpenSearch.Client.ISumAggregation {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.SumBucketAggregation")]
public interface OpenSearch.Client.ISumBucketAggregation {
}
public interface OpenSearch.Client.ISynonymGraphTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Expand { get; public set; }
    [DataMemberAttribute]
public Nullable`1<SynonymFormat> Format { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Lenient { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Synonyms { get; public set; }
    [DataMemberAttribute]
public string SynonymsPath { get; public set; }
    [DataMemberAttribute]
public string Tokenizer { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Updateable { get; public set; }
    public abstract virtual Nullable`1<bool> get_Expand();
    public abstract virtual void set_Expand(Nullable`1<bool> value);
    public abstract virtual Nullable`1<SynonymFormat> get_Format();
    public abstract virtual void set_Format(Nullable`1<SynonymFormat> value);
    public abstract virtual Nullable`1<bool> get_Lenient();
    public abstract virtual void set_Lenient(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_Synonyms();
    public abstract virtual void set_Synonyms(IEnumerable`1<string> value);
    public abstract virtual string get_SynonymsPath();
    public abstract virtual void set_SynonymsPath(string value);
    public abstract virtual string get_Tokenizer();
    public abstract virtual void set_Tokenizer(string value);
    public abstract virtual Nullable`1<bool> get_Updateable();
    public abstract virtual void set_Updateable(Nullable`1<bool> value);
}
public interface OpenSearch.Client.ISynonymTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Expand { get; public set; }
    [DataMemberAttribute]
public Nullable`1<SynonymFormat> Format { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Lenient { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Synonyms { get; public set; }
    [DataMemberAttribute]
public string SynonymsPath { get; public set; }
    [DataMemberAttribute]
public string Tokenizer { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> Updateable { get; public set; }
    public abstract virtual Nullable`1<bool> get_Expand();
    public abstract virtual void set_Expand(Nullable`1<bool> value);
    public abstract virtual Nullable`1<SynonymFormat> get_Format();
    public abstract virtual void set_Format(Nullable`1<SynonymFormat> value);
    public abstract virtual Nullable`1<bool> get_Lenient();
    public abstract virtual void set_Lenient(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_Synonyms();
    public abstract virtual void set_Synonyms(IEnumerable`1<string> value);
    public abstract virtual string get_SynonymsPath();
    public abstract virtual void set_SynonymsPath(string value);
    public abstract virtual string get_Tokenizer();
    public abstract virtual void set_Tokenizer(string value);
    public abstract virtual Nullable`1<bool> get_Updateable();
    public abstract virtual void set_Updateable(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ITDigestMethod {
    [DataMemberAttribute]
public Nullable`1<double> Compression { get; public set; }
    public abstract virtual Nullable`1<double> get_Compression();
    public abstract virtual void set_Compression(Nullable`1<double> value);
}
[ReadAsAttribute("OpenSearch.Client.Template")]
public interface OpenSearch.Client.ITemplate {
    [DataMemberAttribute]
public IAliases Aliases { get; public set; }
    [DataMemberAttribute]
public ITypeMapping Mappings { get; public set; }
    [DataMemberAttribute]
public IIndexSettings Settings { get; public set; }
    public abstract virtual IAliases get_Aliases();
    public abstract virtual void set_Aliases(IAliases value);
    public abstract virtual ITypeMapping get_Mappings();
    public abstract virtual void set_Mappings(ITypeMapping value);
    public abstract virtual IIndexSettings get_Settings();
    public abstract virtual void set_Settings(IIndexSettings value);
}
public interface OpenSearch.Client.ITemplateMapping {
    [DataMemberAttribute]
public IAliases Aliases { get; public set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> IndexPatterns { get; public set; }
    [DataMemberAttribute]
public ITypeMapping Mappings { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Order { get; public set; }
    [DataMemberAttribute]
public IIndexSettings Settings { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Version { get; public set; }
    public abstract virtual IAliases get_Aliases();
    public abstract virtual void set_Aliases(IAliases value);
    public abstract virtual IReadOnlyCollection`1<string> get_IndexPatterns();
    public abstract virtual void set_IndexPatterns(IReadOnlyCollection`1<string> value);
    public abstract virtual ITypeMapping get_Mappings();
    public abstract virtual void set_Mappings(ITypeMapping value);
    public abstract virtual Nullable`1<int> get_Order();
    public abstract virtual void set_Order(Nullable`1<int> value);
    public abstract virtual IIndexSettings get_Settings();
    public abstract virtual void set_Settings(IIndexSettings value);
    public abstract virtual Nullable`1<int> get_Version();
    public abstract virtual void set_Version(Nullable`1<int> value);
}
[ReadAsAttribute("OpenSearch.Client.Term")]
public interface OpenSearch.Client.ITerm {
    public Field Field { get; public set; }
    public object Missing { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual object get_Missing();
    public abstract virtual void set_Missing(object value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.TermQuery,OpenSearch.Client.ITermQuery>")]
public interface OpenSearch.Client.ITermQuery {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceWriteFormatter`1<System.Object>")]
public object Value { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> CaseInsensitive { get; public set; }
    public abstract virtual object get_Value();
    public abstract virtual void set_Value(object value);
    public abstract virtual Nullable`1<bool> get_CaseInsensitive();
    public abstract virtual void set_CaseInsensitive(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.TermRangeQuery,OpenSearch.Client.ITermRangeQuery>")]
public interface OpenSearch.Client.ITermRangeQuery {
    [DataMemberAttribute]
public string GreaterThan { get; public set; }
    [DataMemberAttribute]
public string GreaterThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public string LessThan { get; public set; }
    [DataMemberAttribute]
public string LessThanOrEqualTo { get; public set; }
    public abstract virtual string get_GreaterThan();
    public abstract virtual void set_GreaterThan(string value);
    public abstract virtual string get_GreaterThanOrEqualTo();
    public abstract virtual void set_GreaterThanOrEqualTo(string value);
    public abstract virtual string get_LessThan();
    public abstract virtual void set_LessThan(string value);
    public abstract virtual string get_LessThanOrEqualTo();
    public abstract virtual void set_LessThanOrEqualTo(string value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.TermsAggregation")]
public interface OpenSearch.Client.ITermsAggregation {
    [DataMemberAttribute]
public Nullable`1<TermsAggregationCollectMode> CollectMode { get; public set; }
    [DataMemberAttribute]
public TermsExclude Exclude { get; public set; }
    [DataMemberAttribute]
public Nullable`1<TermsAggregationExecutionHint> ExecutionHint { get; public set; }
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public TermsInclude Include { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinimumDocumentCount { get; public set; }
    [DataMemberAttribute]
public object Missing { get; public set; }
    [DataMemberAttribute]
public IList`1<TermsOrder> Order { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> ShardSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> ShowTermDocCountError { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    public abstract virtual Nullable`1<TermsAggregationCollectMode> get_CollectMode();
    public abstract virtual void set_CollectMode(Nullable`1<TermsAggregationCollectMode> value);
    public abstract virtual TermsExclude get_Exclude();
    public abstract virtual void set_Exclude(TermsExclude value);
    public abstract virtual Nullable`1<TermsAggregationExecutionHint> get_ExecutionHint();
    public abstract virtual void set_ExecutionHint(Nullable`1<TermsAggregationExecutionHint> value);
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual TermsInclude get_Include();
    public abstract virtual void set_Include(TermsInclude value);
    public abstract virtual Nullable`1<int> get_MinimumDocumentCount();
    public abstract virtual void set_MinimumDocumentCount(Nullable`1<int> value);
    public abstract virtual object get_Missing();
    public abstract virtual void set_Missing(object value);
    public abstract virtual IList`1<TermsOrder> get_Order();
    public abstract virtual void set_Order(IList`1<TermsOrder> value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual Nullable`1<int> get_ShardSize();
    public abstract virtual void set_ShardSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_ShowTermDocCountError();
    public abstract virtual void set_ShowTermDocCountError(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
}
public interface OpenSearch.Client.ITermsCompositeAggregationSource {
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.TermsQueryFormatter")]
public interface OpenSearch.Client.ITermsQuery {
    public IEnumerable`1<object> Terms { get; public set; }
    public IFieldLookup TermsLookup { get; public set; }
    public abstract virtual IEnumerable`1<object> get_Terms();
    public abstract virtual void set_Terms(IEnumerable`1<object> value);
    public abstract virtual IFieldLookup get_TermsLookup();
    public abstract virtual void set_TermsLookup(IFieldLookup value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.TermsSetQuery,OpenSearch.Client.ITermsSetQuery>")]
public interface OpenSearch.Client.ITermsSetQuery {
    [DataMemberAttribute]
public Field MinimumShouldMatchField { get; public set; }
    [DataMemberAttribute]
public IScript MinimumShouldMatchScript { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceWriteFormatter`1<System.Collections.Generic.IEnumerable`1<System.Object>>")]
public IEnumerable`1<object> Terms { get; public set; }
    public abstract virtual Field get_MinimumShouldMatchField();
    public abstract virtual void set_MinimumShouldMatchField(Field value);
    public abstract virtual IScript get_MinimumShouldMatchScript();
    public abstract virtual void set_MinimumShouldMatchScript(IScript value);
    public abstract virtual IEnumerable`1<object> get_Terms();
    public abstract virtual void set_Terms(IEnumerable`1<object> value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.TermSuggester")]
public interface OpenSearch.Client.ITermSuggester {
    [DataMemberAttribute]
public Nullable`1<bool> LowercaseTerms { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxEdits { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxInspections { get; public set; }
    [DataMemberAttribute]
public Nullable`1<float> MaxTermFrequency { get; public set; }
    [DataMemberAttribute]
public Nullable`1<float> MinDocFrequency { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinWordLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> PrefixLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> ShardSize { get; public set; }
    [DataMemberAttribute]
public Nullable`1<SuggestSort> Sort { get; public set; }
    [DataMemberAttribute]
public Nullable`1<StringDistance> StringDistance { get; public set; }
    [DataMemberAttribute]
public Nullable`1<SuggestMode> SuggestMode { get; public set; }
    [IgnoreDataMemberAttribute]
public string Text { get; public set; }
    public abstract virtual Nullable`1<bool> get_LowercaseTerms();
    public abstract virtual void set_LowercaseTerms(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_MaxEdits();
    public abstract virtual void set_MaxEdits(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaxInspections();
    public abstract virtual void set_MaxInspections(Nullable`1<int> value);
    public abstract virtual Nullable`1<float> get_MaxTermFrequency();
    public abstract virtual void set_MaxTermFrequency(Nullable`1<float> value);
    public abstract virtual Nullable`1<float> get_MinDocFrequency();
    public abstract virtual void set_MinDocFrequency(Nullable`1<float> value);
    public abstract virtual Nullable`1<int> get_MinWordLength();
    public abstract virtual void set_MinWordLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_PrefixLength();
    public abstract virtual void set_PrefixLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_ShardSize();
    public abstract virtual void set_ShardSize(Nullable`1<int> value);
    public abstract virtual Nullable`1<SuggestSort> get_Sort();
    public abstract virtual void set_Sort(Nullable`1<SuggestSort> value);
    public abstract virtual Nullable`1<StringDistance> get_StringDistance();
    public abstract virtual void set_StringDistance(Nullable`1<StringDistance> value);
    public abstract virtual Nullable`1<SuggestMode> get_SuggestMode();
    public abstract virtual void set_SuggestMode(Nullable`1<SuggestMode> value);
    public abstract virtual string get_Text();
    public abstract virtual void set_Text(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ITermVectorFilter {
    [DataMemberAttribute]
public Nullable`1<int> MaximumDocumentFrequency { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaximumNumberOfTerms { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaximumTermFrequency { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaximumWordLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinimumDocumentFrequency { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinimumTermFrequency { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinimumWordLength { get; public set; }
    public abstract virtual Nullable`1<int> get_MaximumDocumentFrequency();
    public abstract virtual void set_MaximumDocumentFrequency(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaximumNumberOfTerms();
    public abstract virtual void set_MaximumNumberOfTerms(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaximumTermFrequency();
    public abstract virtual void set_MaximumTermFrequency(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaximumWordLength();
    public abstract virtual void set_MaximumWordLength(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinimumDocumentFrequency();
    public abstract virtual void set_MinimumDocumentFrequency(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinimumTermFrequency();
    public abstract virtual void set_MinimumTermFrequency(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinimumWordLength();
    public abstract virtual void set_MinimumWordLength(Nullable`1<int> value);
}
[ReadAsAttribute("OpenSearch.Client.TermVectorsResult")]
public interface OpenSearch.Client.ITermVectors {
    public bool Found { get; }
    public string Id { get; }
    public string Index { get; }
    public IReadOnlyDictionary`2<Field, TermVector> TermVectors { get; }
    public long Took { get; }
    public long Version { get; }
    public abstract virtual bool get_Found();
    public abstract virtual string get_Id();
    public abstract virtual string get_Index();
    public abstract virtual IReadOnlyDictionary`2<Field, TermVector> get_TermVectors();
    public abstract virtual long get_Took();
    public abstract virtual long get_Version();
}
[MapsApiAttribute("termvectors.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ITermVectorsRequest`1 {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1")]
public TDocument Document { get; public set; }
    [DataMemberAttribute]
public ITermVectorFilter Filter { get; public set; }
    [DataMemberAttribute]
public IPerFieldAnalyzer PerFieldAnalyzer { get; public set; }
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual TDocument get_Document();
    public abstract virtual void set_Document(TDocument value);
    public abstract virtual ITermVectorFilter get_Filter();
    public abstract virtual void set_Filter(ITermVectorFilter value);
    public abstract virtual IPerFieldAnalyzer get_PerFieldAnalyzer();
    public abstract virtual void set_PerFieldAnalyzer(IPerFieldAnalyzer value);
    public abstract virtual IndexName get_Index();
    public abstract virtual Id get_Id();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ITextEmbeddingProcessor {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.TextIndexPrefixes")]
public interface OpenSearch.Client.ITextIndexPrefixes {
    [DataMemberAttribute]
public Nullable`1<int> MaxCharacters { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinCharacters { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxCharacters();
    public abstract virtual void set_MaxCharacters(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MinCharacters();
    public abstract virtual void set_MinCharacters(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ITextProperty {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Boost { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> EagerGlobalOrdinals { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Fielddata { get; public set; }
    [DataMemberAttribute]
public IFielddataFrequencyFilter FielddataFrequencyFilter { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<IndexOptions> IndexOptions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IndexPhrases { get; public set; }
    [DataMemberAttribute]
public ITextIndexPrefixes IndexPrefixes { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Norms { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> PositionIncrementGap { get; public set; }
    [DataMemberAttribute]
public string SearchAnalyzer { get; public set; }
    [DataMemberAttribute]
public string SearchQuoteAnalyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<TermVectorOption> TermVector { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<double> get_Boost();
    public abstract virtual void set_Boost(Nullable`1<double> value);
    public abstract virtual Nullable`1<bool> get_EagerGlobalOrdinals();
    public abstract virtual void set_EagerGlobalOrdinals(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Fielddata();
    public abstract virtual void set_Fielddata(Nullable`1<bool> value);
    public abstract virtual IFielddataFrequencyFilter get_FielddataFrequencyFilter();
    public abstract virtual void set_FielddataFrequencyFilter(IFielddataFrequencyFilter value);
    public abstract virtual Nullable`1<bool> get_Index();
    public abstract virtual void set_Index(Nullable`1<bool> value);
    public abstract virtual Nullable`1<IndexOptions> get_IndexOptions();
    public abstract virtual void set_IndexOptions(Nullable`1<IndexOptions> value);
    public abstract virtual Nullable`1<bool> get_IndexPhrases();
    public abstract virtual void set_IndexPhrases(Nullable`1<bool> value);
    public abstract virtual ITextIndexPrefixes get_IndexPrefixes();
    public abstract virtual void set_IndexPrefixes(ITextIndexPrefixes value);
    public abstract virtual Nullable`1<bool> get_Norms();
    public abstract virtual void set_Norms(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_PositionIncrementGap();
    public abstract virtual void set_PositionIncrementGap(Nullable`1<int> value);
    public abstract virtual string get_SearchAnalyzer();
    public abstract virtual void set_SearchAnalyzer(string value);
    public abstract virtual string get_SearchQuoteAnalyzer();
    public abstract virtual void set_SearchQuoteAnalyzer(string value);
    public abstract virtual Nullable`1<TermVectorOption> get_TermVector();
    public abstract virtual void set_TermVector(Nullable`1<TermVectorOption> value);
}
[ReadAsAttribute("OpenSearch.Client.TimestampField")]
public interface OpenSearch.Client.ITimestampField {
    [DataMemberAttribute]
public string Name { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ITokenCountProperty {
    [DataMemberAttribute]
public string Analyzer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> EnablePositionIncrements { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Index { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> NullValue { get; public set; }
    public abstract virtual string get_Analyzer();
    public abstract virtual void set_Analyzer(string value);
    public abstract virtual Nullable`1<bool> get_EnablePositionIncrements();
    public abstract virtual void set_EnablePositionIncrements(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Index();
    public abstract virtual void set_Index(Nullable`1<bool> value);
    public abstract virtual Nullable`1<double> get_NullValue();
    public abstract virtual void set_NullValue(Nullable`1<double> value);
}
[JsonFormatterAttribute("OpenSearch.Client.TokenFilterFormatter")]
public interface OpenSearch.Client.ITokenFilter {
    [DataMemberAttribute]
public string Type { get; }
    [DataMemberAttribute]
public string Version { get; public set; }
    public abstract virtual string get_Type();
    public abstract virtual string get_Version();
    public abstract virtual void set_Version(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.TokenFilters,OpenSearch.Client.ITokenFilters,System.String,OpenSearch.Client.ITokenFilter>")]
public interface OpenSearch.Client.ITokenFilters {
}
[JsonFormatterAttribute("OpenSearch.Client.TokenizerFormatter")]
public interface OpenSearch.Client.ITokenizer {
    [DataMemberAttribute]
public string Type { get; }
    [DataMemberAttribute]
public string Version { get; public set; }
    public abstract virtual string get_Type();
    public abstract virtual string get_Version();
    public abstract virtual void set_Version(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.Tokenizers,OpenSearch.Client.ITokenizers,System.String,OpenSearch.Client.ITokenizer>")]
public interface OpenSearch.Client.ITokenizers {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.TopHitsAggregation")]
public interface OpenSearch.Client.ITopHitsAggregation {
    [DataMemberAttribute]
public Fields DocValueFields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Explain { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> From { get; public set; }
    [DataMemberAttribute]
public IHighlight Highlight { get; public set; }
    [DataMemberAttribute]
[ReadAsAttribute("OpenSearch.Client.ScriptFields")]
public IScriptFields ScriptFields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; public set; }
    [DataMemberAttribute]
public IList`1<ISort> Sort { get; public set; }
    [DataMemberAttribute]
public Union`2<bool, ISourceFilter> Source { get; public set; }
    [DataMemberAttribute]
public Fields StoredFields { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> TrackScores { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Version { get; public set; }
    public abstract virtual Fields get_DocValueFields();
    public abstract virtual void set_DocValueFields(Fields value);
    public abstract virtual Nullable`1<bool> get_Explain();
    public abstract virtual void set_Explain(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_From();
    public abstract virtual void set_From(Nullable`1<int> value);
    public abstract virtual IHighlight get_Highlight();
    public abstract virtual void set_Highlight(IHighlight value);
    public abstract virtual IScriptFields get_ScriptFields();
    public abstract virtual void set_ScriptFields(IScriptFields value);
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual void set_Size(Nullable`1<int> value);
    public abstract virtual IList`1<ISort> get_Sort();
    public abstract virtual void set_Sort(IList`1<ISort> value);
    public abstract virtual Union`2<bool, ISourceFilter> get_Source();
    public abstract virtual void set_Source(Union`2<bool, ISourceFilter> value);
    public abstract virtual Fields get_StoredFields();
    public abstract virtual void set_StoredFields(Fields value);
    public abstract virtual Nullable`1<bool> get_TrackScores();
    public abstract virtual void set_TrackScores(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_Version();
    public abstract virtual void set_Version(Nullable`1<bool> value);
}
public interface OpenSearch.Client.ITranslogFlushSettings {
    public Time Interval { get; public set; }
    public Time ThresholdPeriod { get; public set; }
    public string ThresholdSize { get; public set; }
    public abstract virtual Time get_Interval();
    public abstract virtual void set_Interval(Time value);
    public abstract virtual Time get_ThresholdPeriod();
    public abstract virtual void set_ThresholdPeriod(Time value);
    public abstract virtual string get_ThresholdSize();
    public abstract virtual void set_ThresholdSize(string value);
}
public interface OpenSearch.Client.ITranslogSettings {
    public Nullable`1<TranslogDurability> Durability { get; public set; }
    public ITranslogFlushSettings Flush { get; public set; }
    public Time SyncInterval { get; public set; }
    public abstract virtual Nullable`1<TranslogDurability> get_Durability();
    public abstract virtual void set_Durability(Nullable`1<TranslogDurability> value);
    public abstract virtual ITranslogFlushSettings get_Flush();
    public abstract virtual void set_Flush(ITranslogFlushSettings value);
    public abstract virtual Time get_SyncInterval();
    public abstract virtual void set_SyncInterval(Time value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ITrimProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
}
public interface OpenSearch.Client.ITrimTokenFilter {
}
public interface OpenSearch.Client.ITruncateTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> Length { get; public set; }
    public abstract virtual Nullable`1<int> get_Length();
    public abstract virtual void set_Length(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ITypedSearchRequest {
    public Type ClrType { get; }
    public abstract virtual Type get_ClrType();
}
[MapsApiAttribute("indices.exists_type.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.ITypeExistsRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    [IgnoreDataMemberAttribute]
public Names Type { get; }
    public abstract virtual Indices get_Index();
    public abstract virtual Names get_Type();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.TypeMapping")]
public interface OpenSearch.Client.ITypeMapping {
    [DataMemberAttribute]
public Nullable`1<bool> DateDetection { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.DynamicMappingFormatter")]
public Union`2<bool, DynamicMapping> Dynamic { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> DynamicDateFormats { get; public set; }
    [DataMemberAttribute]
public IDynamicTemplateContainer DynamicTemplates { get; public set; }
    [DataMemberAttribute]
public IFieldNamesField FieldNamesField { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryInterfaceKeysFormatter`2<System.String,System.Object>")]
public IDictionary`2<string, object> Meta { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> NumericDetection { get; public set; }
    [DataMemberAttribute]
public IProperties Properties { get; public set; }
    [DataMemberAttribute]
public IRoutingField RoutingField { get; public set; }
    [DataMemberAttribute]
public IRuntimeFields RuntimeFields { get; public set; }
    [DataMemberAttribute]
public ISizeField SizeField { get; public set; }
    [DataMemberAttribute]
public ISourceField SourceField { get; public set; }
    public abstract virtual Nullable`1<bool> get_DateDetection();
    public abstract virtual void set_DateDetection(Nullable`1<bool> value);
    public abstract virtual Union`2<bool, DynamicMapping> get_Dynamic();
    public abstract virtual void set_Dynamic(Union`2<bool, DynamicMapping> value);
    public abstract virtual IEnumerable`1<string> get_DynamicDateFormats();
    public abstract virtual void set_DynamicDateFormats(IEnumerable`1<string> value);
    public abstract virtual IDynamicTemplateContainer get_DynamicTemplates();
    public abstract virtual void set_DynamicTemplates(IDynamicTemplateContainer value);
    public abstract virtual IFieldNamesField get_FieldNamesField();
    public abstract virtual void set_FieldNamesField(IFieldNamesField value);
    public abstract virtual IDictionary`2<string, object> get_Meta();
    public abstract virtual void set_Meta(IDictionary`2<string, object> value);
    public abstract virtual Nullable`1<bool> get_NumericDetection();
    public abstract virtual void set_NumericDetection(Nullable`1<bool> value);
    public abstract virtual IProperties get_Properties();
    public abstract virtual void set_Properties(IProperties value);
    public abstract virtual IRoutingField get_RoutingField();
    public abstract virtual void set_RoutingField(IRoutingField value);
    public abstract virtual IRuntimeFields get_RuntimeFields();
    public abstract virtual void set_RuntimeFields(IRuntimeFields value);
    public abstract virtual ISizeField get_SizeField();
    public abstract virtual void set_SizeField(ISizeField value);
    public abstract virtual ISourceField get_SourceField();
    public abstract virtual void set_SourceField(ISourceField value);
}
public interface OpenSearch.Client.IUaxEmailUrlTokenizer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxTokenLength { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxTokenLength();
    public abstract virtual void set_MaxTokenLength(Nullable`1<int> value);
}
public interface OpenSearch.Client.IUniqueTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> OnlyOnSamePosition { get; public set; }
    public abstract virtual Nullable`1<bool> get_OnlyOnSamePosition();
    public abstract virtual void set_OnlyOnSamePosition(Nullable`1<bool> value);
}
[MapsApiAttribute("update_by_query.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IUpdateByQueryRequest {
    [DataMemberAttribute]
public ISlicedScroll Slice { get; public set; }
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> MaximumDocuments { get; public set; }
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual ISlicedScroll get_Slice();
    public abstract virtual void set_Slice(ISlicedScroll value);
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual Nullable`1<long> get_MaximumDocuments();
    public abstract virtual void set_MaximumDocuments(Nullable`1<long> value);
    public abstract virtual Indices get_Index();
}
public interface OpenSearch.Client.IUpdateByQueryRequest`1 {
}
[MapsApiAttribute("update_by_query_rethrottle")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IUpdateByQueryRethrottleRequest {
    [IgnoreDataMemberAttribute]
public TaskId TaskId { get; }
    public abstract virtual TaskId get_TaskId();
}
[MapsApiAttribute("indices.put_settings.json")]
[JsonFormatterAttribute("OpenSearch.Client.UpdateIndexSettingsRequestFormatter")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IUpdateIndexSettingsRequest {
    public IDynamicIndexSettings IndexSettings { get; public set; }
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    public abstract virtual IDynamicIndexSettings get_IndexSettings();
    public abstract virtual void set_IndexSettings(IDynamicIndexSettings value);
    public abstract virtual Indices get_Index();
}
[MapsApiAttribute("update.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IUpdateRequest`2 {
    [DataMemberAttribute]
public Nullable`1<bool> DetectNoop { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1")]
public TPartialDocument Doc { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> DocAsUpsert { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> ScriptedUpsert { get; public set; }
    [DataMemberAttribute]
public Union`2<bool, ISourceFilter> Source { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1")]
public TDocument Upsert { get; public set; }
    [IgnoreDataMemberAttribute]
public IndexName Index { get; }
    [IgnoreDataMemberAttribute]
public Id Id { get; }
    public abstract virtual Nullable`1<bool> get_DetectNoop();
    public abstract virtual void set_DetectNoop(Nullable`1<bool> value);
    public abstract virtual TPartialDocument get_Doc();
    public abstract virtual void set_Doc(TPartialDocument value);
    public abstract virtual Nullable`1<bool> get_DocAsUpsert();
    public abstract virtual void set_DocAsUpsert(Nullable`1<bool> value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
    public abstract virtual Nullable`1<bool> get_ScriptedUpsert();
    public abstract virtual void set_ScriptedUpsert(Nullable`1<bool> value);
    public abstract virtual Union`2<bool, ISourceFilter> get_Source();
    public abstract virtual void set_Source(Union`2<bool, ISourceFilter> value);
    public abstract virtual TDocument get_Upsert();
    public abstract virtual void set_Upsert(TDocument value);
    public abstract virtual IndexName get_Index();
    public abstract virtual Id get_Id();
}
public interface OpenSearch.Client.IUpdateResponse`1 {
    public IInlineGet`1<TDocument> Get { get; }
    public abstract virtual IInlineGet`1<TDocument> get_Get();
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IUppercaseProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
}
public interface OpenSearch.Client.IUppercaseTokenFilter {
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IUriPartsProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> KeepOriginal { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> RemoveIfSuccessful { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_KeepOriginal();
    public abstract virtual void set_KeepOriginal(Nullable`1<bool> value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
    public abstract virtual Nullable`1<bool> get_RemoveIfSuccessful();
    public abstract virtual void set_RemoveIfSuccessful(Nullable`1<bool> value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IUrlDecodeProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IUserAgentProcessor {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<UserAgentProperty> Properties { get; public set; }
    [DataMemberAttribute]
public string RegexFile { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<bool> get_IgnoreMissing();
    public abstract virtual void set_IgnoreMissing(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<UserAgentProperty> get_Properties();
    public abstract virtual void set_Properties(IEnumerable`1<UserAgentProperty> value);
    public abstract virtual string get_RegexFile();
    public abstract virtual void set_RegexFile(string value);
    public abstract virtual Field get_TargetField();
    public abstract virtual void set_TargetField(Field value);
}
[InterfaceDataContractAttribute]
[MapsApiAttribute("indices.validate_query.json")]
public interface OpenSearch.Client.IValidateQueryRequest {
    [IgnoreDataMemberAttribute]
public Indices Index { get; }
    [DataMemberAttribute]
public QueryContainer Query { get; public set; }
    public abstract virtual Indices get_Index();
    public abstract virtual QueryContainer get_Query();
    public abstract virtual void set_Query(QueryContainer value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IValidateQueryRequest`1 {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.ValueCountAggregation")]
public interface OpenSearch.Client.IValueCountAggregation {
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.VariableWidthHistogramAggregation")]
public interface OpenSearch.Client.IVariableWidthHistogramAggregation {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> Buckets { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> InitialBuffer { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> ShardSize { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<int> get_Buckets();
    public abstract virtual void set_Buckets(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_InitialBuffer();
    public abstract virtual void set_InitialBuffer(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_ShardSize();
    public abstract virtual void set_ShardSize(Nullable`1<int> value);
}
[MapsApiAttribute("snapshot.verify_repository.json")]
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IVerifyRepositoryRequest {
    [IgnoreDataMemberAttribute]
public Name RepositoryName { get; }
    public abstract virtual Name get_RepositoryName();
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.WeightedAverageAggregation")]
public interface OpenSearch.Client.IWeightedAverageAggregation {
    [DataMemberAttribute]
public string Format { get; public set; }
    [DataMemberAttribute]
public IWeightedAverageValue Value { get; public set; }
    [DataMemberAttribute]
public Nullable`1<ValueType> ValueType { get; public set; }
    [DataMemberAttribute]
public IWeightedAverageValue Weight { get; public set; }
    public abstract virtual string get_Format();
    public abstract virtual void set_Format(string value);
    public abstract virtual IWeightedAverageValue get_Value();
    public abstract virtual void set_Value(IWeightedAverageValue value);
    public abstract virtual Nullable`1<ValueType> get_ValueType();
    public abstract virtual void set_ValueType(Nullable`1<ValueType> value);
    public abstract virtual IWeightedAverageValue get_Weight();
    public abstract virtual void set_Weight(IWeightedAverageValue value);
}
[InterfaceDataContractAttribute]
[ReadAsAttribute("OpenSearch.Client.WeightedAverageValue")]
public interface OpenSearch.Client.IWeightedAverageValue {
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Missing { get; public set; }
    [DataMemberAttribute]
public IScript Script { get; public set; }
    public abstract virtual Field get_Field();
    public abstract virtual void set_Field(Field value);
    public abstract virtual Nullable`1<double> get_Missing();
    public abstract virtual void set_Missing(Nullable`1<double> value);
    public abstract virtual IScript get_Script();
    public abstract virtual void set_Script(IScript value);
}
[InterfaceDataContractAttribute]
public interface OpenSearch.Client.IWeightFunction {
}
public interface OpenSearch.Client.IWhitespaceAnalyzer {
}
public interface OpenSearch.Client.IWhitespaceTokenizer {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringIntFormatter")]
public Nullable`1<int> MaxTokenLength { get; public set; }
    public abstract virtual Nullable`1<int> get_MaxTokenLength();
    public abstract virtual void set_MaxTokenLength(Nullable`1<int> value);
}
[InterfaceDataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.FieldNameQueryFormatter`2<OpenSearch.Client.WildcardQuery,OpenSearch.Client.IWildcardQuery>")]
public interface OpenSearch.Client.IWildcardQuery {
    [DataMemberAttribute]
public MultiTermQueryRewrite Rewrite { get; public set; }
    public abstract virtual MultiTermQueryRewrite get_Rewrite();
    public abstract virtual void set_Rewrite(MultiTermQueryRewrite value);
}
public interface OpenSearch.Client.IWordDelimiterGraphTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> AdjustOffsets { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> CatenateAll { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> CatenateNumbers { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> CatenateWords { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> GenerateNumberParts { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> GenerateWordParts { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> IgnoreKeywords { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> PreserveOriginal { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> ProtectedWords { get; public set; }
    [DataMemberAttribute]
public string ProtectedWordsPath { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> SplitOnCaseChange { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> SplitOnNumerics { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> StemEnglishPossessive { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> TypeTable { get; public set; }
    [DataMemberAttribute]
public string TypeTablePath { get; public set; }
    public abstract virtual Nullable`1<bool> get_AdjustOffsets();
    public abstract virtual void set_AdjustOffsets(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_CatenateAll();
    public abstract virtual void set_CatenateAll(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_CatenateNumbers();
    public abstract virtual void set_CatenateNumbers(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_CatenateWords();
    public abstract virtual void set_CatenateWords(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_GenerateNumberParts();
    public abstract virtual void set_GenerateNumberParts(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_GenerateWordParts();
    public abstract virtual void set_GenerateWordParts(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IgnoreKeywords();
    public abstract virtual void set_IgnoreKeywords(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_PreserveOriginal();
    public abstract virtual void set_PreserveOriginal(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_ProtectedWords();
    public abstract virtual void set_ProtectedWords(IEnumerable`1<string> value);
    public abstract virtual string get_ProtectedWordsPath();
    public abstract virtual void set_ProtectedWordsPath(string value);
    public abstract virtual Nullable`1<bool> get_SplitOnCaseChange();
    public abstract virtual void set_SplitOnCaseChange(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_SplitOnNumerics();
    public abstract virtual void set_SplitOnNumerics(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_StemEnglishPossessive();
    public abstract virtual void set_StemEnglishPossessive(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_TypeTable();
    public abstract virtual void set_TypeTable(IEnumerable`1<string> value);
    public abstract virtual string get_TypeTablePath();
    public abstract virtual void set_TypeTablePath(string value);
}
public interface OpenSearch.Client.IWordDelimiterTokenFilter {
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> CatenateAll { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> CatenateNumbers { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> CatenateWords { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> GenerateNumberParts { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> GenerateWordParts { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> PreserveOriginal { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> ProtectedWords { get; public set; }
    [DataMemberAttribute]
public string ProtectedWordsPath { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> SplitOnCaseChange { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> SplitOnNumerics { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringBooleanFormatter")]
public Nullable`1<bool> StemEnglishPossessive { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> TypeTable { get; public set; }
    [DataMemberAttribute]
public string TypeTablePath { get; public set; }
    public abstract virtual Nullable`1<bool> get_CatenateAll();
    public abstract virtual void set_CatenateAll(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_CatenateNumbers();
    public abstract virtual void set_CatenateNumbers(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_CatenateWords();
    public abstract virtual void set_CatenateWords(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_GenerateNumberParts();
    public abstract virtual void set_GenerateNumberParts(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_GenerateWordParts();
    public abstract virtual void set_GenerateWordParts(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_PreserveOriginal();
    public abstract virtual void set_PreserveOriginal(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_ProtectedWords();
    public abstract virtual void set_ProtectedWords(IEnumerable`1<string> value);
    public abstract virtual string get_ProtectedWordsPath();
    public abstract virtual void set_ProtectedWordsPath(string value);
    public abstract virtual Nullable`1<bool> get_SplitOnCaseChange();
    public abstract virtual void set_SplitOnCaseChange(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_SplitOnNumerics();
    public abstract virtual void set_SplitOnNumerics(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_StemEnglishPossessive();
    public abstract virtual void set_StemEnglishPossessive(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<string> get_TypeTable();
    public abstract virtual void set_TypeTable(IEnumerable`1<string> value);
    public abstract virtual string get_TypeTablePath();
    public abstract virtual void set_TypeTablePath(string value);
}
public class OpenSearch.Client.JoinAttribute : OpenSearchPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private IRelations <OpenSearch.Client.IJoinProperty.Relations>k__BackingField;
    private IRelations OpenSearch.Client.IJoinProperty.Relations { get; private set; }
    private IJoinProperty Self { get; }
    public JoinAttribute(RelationName parent, RelationName child, RelationName[] moreChildren);
    public JoinAttribute(Type parent, Type child, Type[] moreChildren);
    public JoinAttribute(string parent, string child, String[] moreChildren);
    [CompilerGeneratedAttribute]
private sealed virtual override IRelations OpenSearch.Client.IJoinProperty.get_Relations();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IJoinProperty.set_Relations(IRelations value);
    private IJoinProperty get_Self();
}
[JsonFormatterAttribute("OpenSearch.Client.JoinFieldFormatter")]
public class OpenSearch.Client.JoinField : object {
    [CompilerGeneratedAttribute]
private Child <ChildOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Parent <ParentOption>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Tag>k__BackingField;
    internal Child ChildOption { get; }
    internal Parent ParentOption { get; }
    internal int Tag { get; }
    public JoinField(Parent parentName);
    public JoinField(Child child);
    [CompilerGeneratedAttribute]
internal Child get_ChildOption();
    [CompilerGeneratedAttribute]
internal Parent get_ParentOption();
    [CompilerGeneratedAttribute]
internal int get_Tag();
    public static JoinField Root();
    public static JoinField Root(RelationName parent);
    public static JoinField Link(RelationName child, Id parentId);
    public static JoinField Link(TParentDocument parent);
    public static JoinField Link(Id parentId);
    public static JoinField op_Implicit(Parent parent);
    public static JoinField op_Implicit(string parentName);
    public static JoinField op_Implicit(Type parentType);
    public static JoinField op_Implicit(Child child);
    public T Match(Func`2<Parent, T> first, Func`2<Child, T> second);
    public void Match(Action`1<Parent> first, Action`1<Child> second);
}
internal class OpenSearch.Client.JoinFieldFormatter : object {
    public sealed virtual JoinField Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, JoinField value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.JoinProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    public Field Field { get; public set; }
    public string Separator { get; public set; }
    public Field TargetField { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Separator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Separator(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.JoinProcessorDescriptor`1 : ProcessorDescriptorBase`2<JoinProcessorDescriptor`1<T>, IJoinProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IJoinProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IJoinProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IJoinProcessor.Separator>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IJoinProcessor.Field { get; private set; }
    private Field OpenSearch.Client.IJoinProcessor.TargetField { get; private set; }
    private string OpenSearch.Client.IJoinProcessor.Separator { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IJoinProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IJoinProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IJoinProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IJoinProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IJoinProcessor.get_Separator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IJoinProcessor.set_Separator(string value);
    public JoinProcessorDescriptor`1<T> Field(Field field);
    public JoinProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public JoinProcessorDescriptor`1<T> TargetField(Field field);
    public JoinProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, object>> objectPath);
    public JoinProcessorDescriptor`1<T> Separator(string separator);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.JoinProperty : PropertyBase {
    [CompilerGeneratedAttribute]
private IRelations <Relations>k__BackingField;
    public IRelations Relations { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IRelations get_Relations();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Relations(IRelations value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.JoinPropertyDescriptor`1 : PropertyDescriptorBase`3<JoinPropertyDescriptor`1<T>, IJoinProperty, T> {
    [CompilerGeneratedAttribute]
private IRelations <OpenSearch.Client.IJoinProperty.Relations>k__BackingField;
    private IRelations OpenSearch.Client.IJoinProperty.Relations { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IRelations OpenSearch.Client.IJoinProperty.get_Relations();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IJoinProperty.set_Relations(IRelations value);
    public JoinPropertyDescriptor`1<T> Relations(Func`2<RelationsDescriptor, IPromise`1<IRelations>> selector);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.JsonFormatterResolverExtensions : object {
    [ExtensionAttribute]
public static IConnectionSettingsValues GetConnectionSettings(IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.JsonNetCompatibleUriFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, Uri value, IJsonFormatterResolver formatterResolver);
    public sealed virtual Uri Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.JsonProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AddToRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    public Nullable`1<bool> AddToRoot { get; public set; }
    public Field Field { get; public set; }
    public Field TargetField { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AddToRoot();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AddToRoot(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.JsonProcessorDescriptor`1 : ProcessorDescriptorBase`2<JsonProcessorDescriptor`1<T>, IJsonProcessor> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IJsonProcessor.AddToRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IJsonProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IJsonProcessor.TargetField>k__BackingField;
    protected string Name { get; }
    private Nullable`1<bool> OpenSearch.Client.IJsonProcessor.AddToRoot { get; private set; }
    private Field OpenSearch.Client.IJsonProcessor.Field { get; private set; }
    private Field OpenSearch.Client.IJsonProcessor.TargetField { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IJsonProcessor.get_AddToRoot();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IJsonProcessor.set_AddToRoot(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IJsonProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IJsonProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IJsonProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IJsonProcessor.set_TargetField(Field value);
    public JsonProcessorDescriptor`1<T> Field(Field field);
    public JsonProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public JsonProcessorDescriptor`1<T> TargetField(Field field);
    public JsonProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public JsonProcessorDescriptor`1<T> AddToRoot(Nullable`1<bool> addToRoot);
}
[StringEnumAttribute]
public enum OpenSearch.Client.KeepTypesMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static KeepTypesMode Include;
    [EnumMemberAttribute]
public static KeepTypesMode Exclude;
}
public class OpenSearch.Client.KeepTypesTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<KeepTypesMode> <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Types>k__BackingField;
    public Nullable`1<KeepTypesMode> Mode { get; public set; }
    public IEnumerable`1<string> Types { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<KeepTypesMode> get_Mode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mode(Nullable`1<KeepTypesMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Types();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Types(IEnumerable`1<string> value);
}
public class OpenSearch.Client.KeepTypesTokenFilterDescriptor : TokenFilterDescriptorBase`2<KeepTypesTokenFilterDescriptor, IKeepTypesTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<KeepTypesMode> <OpenSearch.Client.IKeepTypesTokenFilter.Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IKeepTypesTokenFilter.Types>k__BackingField;
    protected string Type { get; }
    private Nullable`1<KeepTypesMode> OpenSearch.Client.IKeepTypesTokenFilter.Mode { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IKeepTypesTokenFilter.Types { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<KeepTypesMode> OpenSearch.Client.IKeepTypesTokenFilter.get_Mode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeepTypesTokenFilter.set_Mode(Nullable`1<KeepTypesMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IKeepTypesTokenFilter.get_Types();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeepTypesTokenFilter.set_Types(IEnumerable`1<string> value);
    public KeepTypesTokenFilterDescriptor Types(IEnumerable`1<string> types);
    public KeepTypesTokenFilterDescriptor Types(String[] types);
    public KeepTypesTokenFilterDescriptor Mode(Nullable`1<KeepTypesMode> mode);
}
public class OpenSearch.Client.KeepWordsTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <KeepWords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <KeepWordsCase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeepWordsPath>k__BackingField;
    public IEnumerable`1<string> KeepWords { get; public set; }
    public Nullable`1<bool> KeepWordsCase { get; public set; }
    public string KeepWordsPath { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_KeepWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_KeepWords(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_KeepWordsCase();
    [CompilerGeneratedAttribute]
public sealed virtual void set_KeepWordsCase(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_KeepWordsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_KeepWordsPath(string value);
}
public class OpenSearch.Client.KeepWordsTokenFilterDescriptor : TokenFilterDescriptorBase`2<KeepWordsTokenFilterDescriptor, IKeepWordsTokenFilter> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IKeepWordsTokenFilter.KeepWords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeepWordsTokenFilter.KeepWordsCase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeepWordsTokenFilter.KeepWordsPath>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.IKeepWordsTokenFilter.KeepWords { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKeepWordsTokenFilter.KeepWordsCase { get; private set; }
    private string OpenSearch.Client.IKeepWordsTokenFilter.KeepWordsPath { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IKeepWordsTokenFilter.get_KeepWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeepWordsTokenFilter.set_KeepWords(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeepWordsTokenFilter.get_KeepWordsCase();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeepWordsTokenFilter.set_KeepWordsCase(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeepWordsTokenFilter.get_KeepWordsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeepWordsTokenFilter.set_KeepWordsPath(string value);
    public KeepWordsTokenFilterDescriptor KeepWordsCase(Nullable`1<bool> keepCase);
    public KeepWordsTokenFilterDescriptor KeepWordsPath(string path);
    public KeepWordsTokenFilterDescriptor KeepWords(IEnumerable`1<string> keepWords);
    public KeepWordsTokenFilterDescriptor KeepWords(String[] keepWords);
}
public class OpenSearch.Client.KeyedBucket`1 : BucketBase {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <DocCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <DocCountErrorUpperBound>k__BackingField;
    [CompilerGeneratedAttribute]
private TKey <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyAsString>k__BackingField;
    public Nullable`1<long> DocCount { get; public set; }
    public Nullable`1<long> DocCountErrorUpperBound { get; public set; }
    public TKey Key { get; public set; }
    public string KeyAsString { get; public set; }
    public KeyedBucket`1(IReadOnlyDictionary`2<string, IAggregate> dict);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_DocCountErrorUpperBound();
    [CompilerGeneratedAttribute]
public void set_DocCountErrorUpperBound(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public TKey get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(TKey value);
    [CompilerGeneratedAttribute]
public string get_KeyAsString();
    [CompilerGeneratedAttribute]
public void set_KeyAsString(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.KeyedProcessorStatsFormatter")]
public class OpenSearch.Client.KeyedProcessorStats : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ProcessStats <Statistics>k__BackingField;
    public string Type { get; public set; }
    public ProcessStats Statistics { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public ProcessStats get_Statistics();
    [CompilerGeneratedAttribute]
public void set_Statistics(ProcessStats value);
}
internal class OpenSearch.Client.KeyedProcessorStatsFormatter : object {
    public sealed virtual KeyedProcessorStats Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, KeyedProcessorStats value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.KeyedValueAggregate : ValueAggregate {
    [CompilerGeneratedAttribute]
private IList`1<string> <Keys>k__BackingField;
    public IList`1<string> Keys { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<string> get_Keys();
    [CompilerGeneratedAttribute]
public void set_Keys(IList`1<string> value);
}
public class OpenSearch.Client.KeyValueProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ExcludeKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldSplit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <IncludeKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <StripBrackets>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TrimKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TrimValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValueSplit>k__BackingField;
    public IEnumerable`1<string> ExcludeKeys { get; public set; }
    public Field Field { get; public set; }
    public string FieldSplit { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public IEnumerable`1<string> IncludeKeys { get; public set; }
    public string Prefix { get; public set; }
    public Nullable`1<bool> StripBrackets { get; public set; }
    public Field TargetField { get; public set; }
    public string TrimKey { get; public set; }
    public string TrimValue { get; public set; }
    public string ValueSplit { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_ExcludeKeys();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExcludeKeys(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_FieldSplit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FieldSplit(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_IncludeKeys();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeKeys(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Prefix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_StripBrackets();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StripBrackets(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TrimKey();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrimKey(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TrimValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrimValue(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ValueSplit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ValueSplit(string value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.KeyValueProcessorDescriptor`1 : ProcessorDescriptorBase`2<KeyValueProcessorDescriptor`1<T>, IKeyValueProcessor> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IKeyValueProcessor.ExcludeKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IKeyValueProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeyValueProcessor.FieldSplit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeyValueProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IKeyValueProcessor.IncludeKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeyValueProcessor.Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeyValueProcessor.StripBrackets>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IKeyValueProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeyValueProcessor.TrimKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeyValueProcessor.TrimValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeyValueProcessor.ValueSplit>k__BackingField;
    protected string Name { get; }
    private IEnumerable`1<string> OpenSearch.Client.IKeyValueProcessor.ExcludeKeys { get; private set; }
    private Field OpenSearch.Client.IKeyValueProcessor.Field { get; private set; }
    private string OpenSearch.Client.IKeyValueProcessor.FieldSplit { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKeyValueProcessor.IgnoreMissing { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IKeyValueProcessor.IncludeKeys { get; private set; }
    private string OpenSearch.Client.IKeyValueProcessor.Prefix { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKeyValueProcessor.StripBrackets { get; private set; }
    private Field OpenSearch.Client.IKeyValueProcessor.TargetField { get; private set; }
    private string OpenSearch.Client.IKeyValueProcessor.TrimKey { get; private set; }
    private string OpenSearch.Client.IKeyValueProcessor.TrimValue { get; private set; }
    private string OpenSearch.Client.IKeyValueProcessor.ValueSplit { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IKeyValueProcessor.get_ExcludeKeys();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeyValueProcessor.set_ExcludeKeys(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IKeyValueProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeyValueProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeyValueProcessor.get_FieldSplit();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeyValueProcessor.set_FieldSplit(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeyValueProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeyValueProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IKeyValueProcessor.get_IncludeKeys();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeyValueProcessor.set_IncludeKeys(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeyValueProcessor.get_Prefix();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeyValueProcessor.set_Prefix(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeyValueProcessor.get_StripBrackets();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeyValueProcessor.set_StripBrackets(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IKeyValueProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeyValueProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeyValueProcessor.get_TrimKey();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeyValueProcessor.set_TrimKey(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeyValueProcessor.get_TrimValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeyValueProcessor.set_TrimValue(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeyValueProcessor.get_ValueSplit();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeyValueProcessor.set_ValueSplit(string value);
    public KeyValueProcessorDescriptor`1<T> Field(Field field);
    public KeyValueProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public KeyValueProcessorDescriptor`1<T> TargetField(Field field);
    public KeyValueProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public KeyValueProcessorDescriptor`1<T> FieldSplit(string split);
    public KeyValueProcessorDescriptor`1<T> ValueSplit(string split);
    public KeyValueProcessorDescriptor`1<T> Prefix(string prefix);
    public KeyValueProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
    public KeyValueProcessorDescriptor`1<T> IncludeKeys(IEnumerable`1<string> includeKeys);
    public KeyValueProcessorDescriptor`1<T> IncludeKeys(String[] includeKeys);
    public KeyValueProcessorDescriptor`1<T> ExcludeKeys(IEnumerable`1<string> excludeKeys);
    public KeyValueProcessorDescriptor`1<T> ExcludeKeys(String[] excludeKeys);
    public KeyValueProcessorDescriptor`1<T> TrimKey(string trimKeys);
    public KeyValueProcessorDescriptor`1<T> TrimValue(string trimValues);
    public KeyValueProcessorDescriptor`1<T> StripBrackets(Nullable`1<bool> skip);
}
public class OpenSearch.Client.KeywordAnalyzer : AnalyzerBase {
}
public class OpenSearch.Client.KeywordAnalyzerDescriptor : AnalyzerDescriptorBase`2<KeywordAnalyzerDescriptor, IKeywordAnalyzer> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public class OpenSearch.Client.KeywordAttribute : OpenSearchDocValuesPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IKeywordProperty.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeywordProperty.EagerGlobalOrdinals>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IKeywordProperty.IgnoreAbove>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeywordProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IndexOptions> <OpenSearch.Client.IKeywordProperty.IndexOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeywordProperty.Normalizer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeywordProperty.Norms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeywordProperty.NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeywordProperty.SplitQueriesOnWhitespace>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IKeywordProperty.Boost { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKeywordProperty.EagerGlobalOrdinals { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IKeywordProperty.IgnoreAbove { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKeywordProperty.Index { get; private set; }
    private Nullable`1<IndexOptions> OpenSearch.Client.IKeywordProperty.IndexOptions { get; private set; }
    private string OpenSearch.Client.IKeywordProperty.Normalizer { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKeywordProperty.Norms { get; private set; }
    private string OpenSearch.Client.IKeywordProperty.NullValue { get; private set; }
    private IKeywordProperty Self { get; }
    private Nullable`1<bool> OpenSearch.Client.IKeywordProperty.SplitQueriesOnWhitespace { get; private set; }
    public double Boost { get; public set; }
    public bool EagerGlobalOrdinals { get; public set; }
    public int IgnoreAbove { get; public set; }
    public bool Index { get; public set; }
    public IndexOptions IndexOptions { get; public set; }
    public string NullValue { get; public set; }
    public bool Norms { get; public set; }
    public bool SplitQueriesOnWhitespace { get; public set; }
    public string Normalizer { get; public set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IKeywordProperty.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeywordProperty.get_EagerGlobalOrdinals();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_EagerGlobalOrdinals(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IKeywordProperty.get_IgnoreAbove();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_IgnoreAbove(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeywordProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IndexOptions> OpenSearch.Client.IKeywordProperty.get_IndexOptions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_IndexOptions(Nullable`1<IndexOptions> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeywordProperty.get_Normalizer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_Normalizer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeywordProperty.get_Norms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_Norms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeywordProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_NullValue(string value);
    private IKeywordProperty get_Self();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeywordProperty.get_SplitQueriesOnWhitespace();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_SplitQueriesOnWhitespace(Nullable`1<bool> value);
    public double get_Boost();
    public void set_Boost(double value);
    public bool get_EagerGlobalOrdinals();
    public void set_EagerGlobalOrdinals(bool value);
    public int get_IgnoreAbove();
    public void set_IgnoreAbove(int value);
    public bool get_Index();
    public void set_Index(bool value);
    public IndexOptions get_IndexOptions();
    public void set_IndexOptions(IndexOptions value);
    public string get_NullValue();
    public void set_NullValue(string value);
    public bool get_Norms();
    public void set_Norms(bool value);
    public bool get_SplitQueriesOnWhitespace();
    public void set_SplitQueriesOnWhitespace(bool value);
    public string get_Normalizer();
    public void set_Normalizer(string value);
}
public class OpenSearch.Client.KeywordMarkerTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreCase>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Keywords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeywordsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeywordsPattern>k__BackingField;
    public Nullable`1<bool> IgnoreCase { get; public set; }
    public IEnumerable`1<string> Keywords { get; public set; }
    public string KeywordsPath { get; public set; }
    public string KeywordsPattern { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreCase();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreCase(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Keywords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Keywords(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_KeywordsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_KeywordsPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_KeywordsPattern();
    [CompilerGeneratedAttribute]
public sealed virtual void set_KeywordsPattern(string value);
}
public class OpenSearch.Client.KeywordMarkerTokenFilterDescriptor : TokenFilterDescriptorBase`2<KeywordMarkerTokenFilterDescriptor, IKeywordMarkerTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeywordMarkerTokenFilter.IgnoreCase>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IKeywordMarkerTokenFilter.Keywords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeywordMarkerTokenFilter.KeywordsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeywordMarkerTokenFilter.KeywordsPattern>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.IKeywordMarkerTokenFilter.IgnoreCase { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IKeywordMarkerTokenFilter.Keywords { get; private set; }
    private string OpenSearch.Client.IKeywordMarkerTokenFilter.KeywordsPath { get; private set; }
    private string OpenSearch.Client.IKeywordMarkerTokenFilter.KeywordsPattern { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeywordMarkerTokenFilter.get_IgnoreCase();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordMarkerTokenFilter.set_IgnoreCase(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IKeywordMarkerTokenFilter.get_Keywords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordMarkerTokenFilter.set_Keywords(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeywordMarkerTokenFilter.get_KeywordsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordMarkerTokenFilter.set_KeywordsPath(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeywordMarkerTokenFilter.get_KeywordsPattern();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordMarkerTokenFilter.set_KeywordsPattern(string value);
    public KeywordMarkerTokenFilterDescriptor IgnoreCase(Nullable`1<bool> ignoreCase);
    public KeywordMarkerTokenFilterDescriptor KeywordsPath(string path);
    public KeywordMarkerTokenFilterDescriptor KeywordsPattern(string pattern);
    public KeywordMarkerTokenFilterDescriptor Keywords(IEnumerable`1<string> keywords);
    public KeywordMarkerTokenFilterDescriptor Keywords(String[] keywords);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.KeywordProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EagerGlobalOrdinals>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <IgnoreAbove>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IndexOptions> <IndexOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Normalizer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Norms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SplitQueriesOnWhitespace>k__BackingField;
    public Nullable`1<double> Boost { get; public set; }
    public Nullable`1<bool> EagerGlobalOrdinals { get; public set; }
    public Nullable`1<int> IgnoreAbove { get; public set; }
    public Nullable`1<bool> Index { get; public set; }
    public Nullable`1<IndexOptions> IndexOptions { get; public set; }
    public string Normalizer { get; public set; }
    public Nullable`1<bool> Norms { get; public set; }
    public string NullValue { get; public set; }
    public Nullable`1<bool> SplitQueriesOnWhitespace { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Boost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_EagerGlobalOrdinals();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EagerGlobalOrdinals(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_IgnoreAbove();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreAbove(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IndexOptions> get_IndexOptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexOptions(Nullable`1<IndexOptions> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Normalizer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Normalizer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Norms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Norms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_NullValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NullValue(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SplitQueriesOnWhitespace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SplitQueriesOnWhitespace(Nullable`1<bool> value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.KeywordPropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<KeywordPropertyDescriptor`1<T>, IKeywordProperty, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IKeywordProperty.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeywordProperty.EagerGlobalOrdinals>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IKeywordProperty.IgnoreAbove>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeywordProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IndexOptions> <OpenSearch.Client.IKeywordProperty.IndexOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeywordProperty.Normalizer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeywordProperty.Norms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKeywordProperty.NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKeywordProperty.SplitQueriesOnWhitespace>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IKeywordProperty.Boost { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKeywordProperty.EagerGlobalOrdinals { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IKeywordProperty.IgnoreAbove { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKeywordProperty.Index { get; private set; }
    private Nullable`1<IndexOptions> OpenSearch.Client.IKeywordProperty.IndexOptions { get; private set; }
    private string OpenSearch.Client.IKeywordProperty.Normalizer { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKeywordProperty.Norms { get; private set; }
    private string OpenSearch.Client.IKeywordProperty.NullValue { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKeywordProperty.SplitQueriesOnWhitespace { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IKeywordProperty.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeywordProperty.get_EagerGlobalOrdinals();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_EagerGlobalOrdinals(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IKeywordProperty.get_IgnoreAbove();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_IgnoreAbove(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeywordProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IndexOptions> OpenSearch.Client.IKeywordProperty.get_IndexOptions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_IndexOptions(Nullable`1<IndexOptions> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeywordProperty.get_Normalizer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_Normalizer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeywordProperty.get_Norms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_Norms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKeywordProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_NullValue(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKeywordProperty.get_SplitQueriesOnWhitespace();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordProperty.set_SplitQueriesOnWhitespace(Nullable`1<bool> value);
    public KeywordPropertyDescriptor`1<T> Boost(Nullable`1<double> boost);
    public KeywordPropertyDescriptor`1<T> EagerGlobalOrdinals(Nullable`1<bool> eagerGlobalOrdinals);
    public KeywordPropertyDescriptor`1<T> IgnoreAbove(Nullable`1<int> ignoreAbove);
    public KeywordPropertyDescriptor`1<T> Index(Nullable`1<bool> index);
    public KeywordPropertyDescriptor`1<T> IndexOptions(Nullable`1<IndexOptions> indexOptions);
    public KeywordPropertyDescriptor`1<T> Norms(Nullable`1<bool> enabled);
    public KeywordPropertyDescriptor`1<T> SplitQueriesOnWhitespace(Nullable`1<bool> split);
    public KeywordPropertyDescriptor`1<T> NullValue(string nullValue);
    public KeywordPropertyDescriptor`1<T> Normalizer(string normalizer);
}
public class OpenSearch.Client.KeywordTokenizer : TokenizerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BufferSize>k__BackingField;
    public Nullable`1<int> BufferSize { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_BufferSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BufferSize(Nullable`1<int> value);
}
public class OpenSearch.Client.KeywordTokenizerDescriptor : TokenizerDescriptorBase`2<KeywordTokenizerDescriptor, IKeywordTokenizer> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IKeywordTokenizer.BufferSize>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.IKeywordTokenizer.BufferSize { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IKeywordTokenizer.get_BufferSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKeywordTokenizer.set_BufferSize(Nullable`1<int> value);
    public KeywordTokenizerDescriptor BufferSize(Nullable`1<int> size);
}
public class OpenSearch.Client.KnnMethod : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Engine>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceType>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Parameters>k__BackingField;
    public string Name { get; public set; }
    public string Engine { get; public set; }
    public string SpaceType { get; public set; }
    public IDictionary`2<string, object> Parameters { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Engine();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Engine(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Parameters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Parameters(IDictionary`2<string, object> value);
}
public class OpenSearch.Client.KnnMethodDescriptor : DescriptorBase`2<KnnMethodDescriptor, IKnnMethod> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKnnMethod.Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKnnMethod.Engine>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKnnMethod.SpaceType>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IKnnMethod.Parameters>k__BackingField;
    private string OpenSearch.Client.IKnnMethod.Name { get; private set; }
    private string OpenSearch.Client.IKnnMethod.Engine { get; private set; }
    private string OpenSearch.Client.IKnnMethod.SpaceType { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IKnnMethod.Parameters { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKnnMethod.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKnnMethod.set_Name(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKnnMethod.get_Engine();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKnnMethod.set_Engine(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKnnMethod.get_SpaceType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKnnMethod.set_SpaceType(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IKnnMethod.get_Parameters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKnnMethod.set_Parameters(IDictionary`2<string, object> value);
    public KnnMethodDescriptor Name(string name);
    public KnnMethodDescriptor Engine(string engine);
    public KnnMethodDescriptor SpaceType(string spaceType);
    public KnnMethodDescriptor Parameters(Func`2<KnnMethodParametersDescriptor, IPromise`1<IKnnMethodParameters>> selector);
}
public class OpenSearch.Client.KnnMethodParameters : IsADictionaryBase`2<string, object> {
    public KnnMethodParameters(IDictionary`2<string, object> container);
    public KnnMethodParameters(Dictionary`2<string, object> container);
    public sealed virtual void Add(string name, object value);
}
public class OpenSearch.Client.KnnMethodParametersDescriptor : IsADictionaryDescriptorBase`4<KnnMethodParametersDescriptor, IKnnMethodParameters, string, object> {
    public KnnMethodParametersDescriptor Parameter(string name, object value);
}
[DataContractAttribute]
public class OpenSearch.Client.KnnQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private Single[] <Vector>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <K>k__BackingField;
    [CompilerGeneratedAttribute]
private IQueryContainer <Filter>k__BackingField;
    public Single[] Vector { get; public set; }
    public Nullable`1<int> K { get; public set; }
    public IQueryContainer Filter { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Single[] get_Vector();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Vector(Single[] value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_K();
    [CompilerGeneratedAttribute]
public sealed virtual void set_K(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IQueryContainer get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(IQueryContainer value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer container);
    internal static bool IsConditionless(IKnnQuery q);
}
public class OpenSearch.Client.KnnQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<KnnQueryDescriptor`1<T>, IKnnQuery, T> {
    [CompilerGeneratedAttribute]
private Single[] <OpenSearch.Client.IKnnQuery.Vector>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IKnnQuery.K>k__BackingField;
    [CompilerGeneratedAttribute]
private IQueryContainer <OpenSearch.Client.IKnnQuery.Filter>k__BackingField;
    protected bool Conditionless { get; }
    private Single[] OpenSearch.Client.IKnnQuery.Vector { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IKnnQuery.K { get; private set; }
    private IQueryContainer OpenSearch.Client.IKnnQuery.Filter { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Single[] OpenSearch.Client.IKnnQuery.get_Vector();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKnnQuery.set_Vector(Single[] value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IKnnQuery.get_K();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKnnQuery.set_K(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IQueryContainer OpenSearch.Client.IKnnQuery.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKnnQuery.set_Filter(IQueryContainer value);
    public KnnQueryDescriptor`1<T> Vector(Single[] vector);
    public KnnQueryDescriptor`1<T> K(Nullable`1<int> k);
    public KnnQueryDescriptor`1<T> Filter(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> filterSelector);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.KnnVectorProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Dimension>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModelId>k__BackingField;
    [CompilerGeneratedAttribute]
private IKnnMethod <Method>k__BackingField;
    public Nullable`1<int> Dimension { get; public set; }
    public string ModelId { get; public set; }
    public IKnnMethod Method { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Dimension();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Dimension(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ModelId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ModelId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IKnnMethod get_Method();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Method(IKnnMethod value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.KnnVectorPropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<KnnVectorPropertyDescriptor`1<T>, IKnnVectorProperty, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IKnnVectorProperty.Dimension>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKnnVectorProperty.ModelId>k__BackingField;
    [CompilerGeneratedAttribute]
private IKnnMethod <OpenSearch.Client.IKnnVectorProperty.Method>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.IKnnVectorProperty.Dimension { get; private set; }
    private string OpenSearch.Client.IKnnVectorProperty.ModelId { get; private set; }
    private IKnnMethod OpenSearch.Client.IKnnVectorProperty.Method { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IKnnVectorProperty.get_Dimension();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKnnVectorProperty.set_Dimension(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKnnVectorProperty.get_ModelId();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKnnVectorProperty.set_ModelId(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IKnnMethod OpenSearch.Client.IKnnVectorProperty.get_Method();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKnnVectorProperty.set_Method(IKnnMethod value);
    public KnnVectorPropertyDescriptor`1<T> Dimension(Nullable`1<int> dimension);
    public KnnVectorPropertyDescriptor`1<T> ModelId(string modelId);
    public KnnVectorPropertyDescriptor`1<T> Method(Func`2<KnnMethodDescriptor, IKnnMethod> selector);
}
public class OpenSearch.Client.KStemTokenFilter : TokenFilterBase {
}
public class OpenSearch.Client.KStemTokenFilterDescriptor : TokenFilterDescriptorBase`2<KStemTokenFilterDescriptor, IKStemTokenFilter> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public class OpenSearch.Client.KuromojiAnalyzer : AnalyzerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<KuromojiTokenizationMode> <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserDictionary>k__BackingField;
    public Nullable`1<KuromojiTokenizationMode> Mode { get; public set; }
    public string UserDictionary { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<KuromojiTokenizationMode> get_Mode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mode(Nullable`1<KuromojiTokenizationMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_UserDictionary();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserDictionary(string value);
}
public class OpenSearch.Client.KuromojiAnalyzerDescriptor : AnalyzerDescriptorBase`2<KuromojiAnalyzerDescriptor, IKuromojiAnalyzer> {
    [CompilerGeneratedAttribute]
private Nullable`1<KuromojiTokenizationMode> <OpenSearch.Client.IKuromojiAnalyzer.Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKuromojiAnalyzer.UserDictionary>k__BackingField;
    protected string Type { get; }
    private Nullable`1<KuromojiTokenizationMode> OpenSearch.Client.IKuromojiAnalyzer.Mode { get; private set; }
    private string OpenSearch.Client.IKuromojiAnalyzer.UserDictionary { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<KuromojiTokenizationMode> OpenSearch.Client.IKuromojiAnalyzer.get_Mode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiAnalyzer.set_Mode(Nullable`1<KuromojiTokenizationMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKuromojiAnalyzer.get_UserDictionary();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiAnalyzer.set_UserDictionary(string value);
    public KuromojiAnalyzerDescriptor Mode(Nullable`1<KuromojiTokenizationMode> mode);
    public KuromojiAnalyzerDescriptor UserDictionary(string userDictionary);
}
public class OpenSearch.Client.KuromojiIterationMarkCharFilter : CharFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <NormalizeKana>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <NormalizeKanji>k__BackingField;
    public Nullable`1<bool> NormalizeKana { get; public set; }
    public Nullable`1<bool> NormalizeKanji { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_NormalizeKana();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormalizeKana(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_NormalizeKanji();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormalizeKanji(Nullable`1<bool> value);
}
public class OpenSearch.Client.KuromojiIterationMarkCharFilterDescriptor : CharFilterDescriptorBase`2<KuromojiIterationMarkCharFilterDescriptor, IKuromojiIterationMarkCharFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKuromojiIterationMarkCharFilter.NormalizeKana>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKuromojiIterationMarkCharFilter.NormalizeKanji>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.IKuromojiIterationMarkCharFilter.NormalizeKana { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKuromojiIterationMarkCharFilter.NormalizeKanji { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKuromojiIterationMarkCharFilter.get_NormalizeKana();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiIterationMarkCharFilter.set_NormalizeKana(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKuromojiIterationMarkCharFilter.get_NormalizeKanji();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiIterationMarkCharFilter.set_NormalizeKanji(Nullable`1<bool> value);
    public KuromojiIterationMarkCharFilterDescriptor NormalizeKanji(Nullable`1<bool> normalize);
    public KuromojiIterationMarkCharFilterDescriptor NormalizeKana(Nullable`1<bool> normalize);
}
public class OpenSearch.Client.KuromojiPartOfSpeechTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <StopTags>k__BackingField;
    public IEnumerable`1<string> StopTags { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_StopTags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopTags(IEnumerable`1<string> value);
}
public class OpenSearch.Client.KuromojiPartOfSpeechTokenFilterDescriptor : TokenFilterDescriptorBase`2<KuromojiPartOfSpeechTokenFilterDescriptor, IKuromojiPartOfSpeechTokenFilter> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IKuromojiPartOfSpeechTokenFilter.StopTags>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.IKuromojiPartOfSpeechTokenFilter.StopTags { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IKuromojiPartOfSpeechTokenFilter.get_StopTags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiPartOfSpeechTokenFilter.set_StopTags(IEnumerable`1<string> value);
    public KuromojiPartOfSpeechTokenFilterDescriptor StopTags(IEnumerable`1<string> stopTags);
    public KuromojiPartOfSpeechTokenFilterDescriptor StopTags(String[] stopTags);
}
public class OpenSearch.Client.KuromojiReadingFormTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseRomaji>k__BackingField;
    public Nullable`1<bool> UseRomaji { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_UseRomaji();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseRomaji(Nullable`1<bool> value);
}
public class OpenSearch.Client.KuromojiReadingFormTokenFilterDescriptor : TokenFilterDescriptorBase`2<KuromojiReadingFormTokenFilterDescriptor, IKuromojiReadingFormTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKuromojiReadingFormTokenFilter.UseRomaji>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.IKuromojiReadingFormTokenFilter.UseRomaji { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKuromojiReadingFormTokenFilter.get_UseRomaji();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiReadingFormTokenFilter.set_UseRomaji(Nullable`1<bool> value);
    public KuromojiReadingFormTokenFilterDescriptor UseRomaji(Nullable`1<bool> useRomaji);
}
public class OpenSearch.Client.KuromojiStemmerTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumLength>k__BackingField;
    public Nullable`1<int> MinimumLength { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinimumLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumLength(Nullable`1<int> value);
}
public class OpenSearch.Client.KuromojiStemmerTokenFilterDescriptor : TokenFilterDescriptorBase`2<KuromojiStemmerTokenFilterDescriptor, IKuromojiStemmerTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IKuromojiStemmerTokenFilter.MinimumLength>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.IKuromojiStemmerTokenFilter.MinimumLength { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IKuromojiStemmerTokenFilter.get_MinimumLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiStemmerTokenFilter.set_MinimumLength(Nullable`1<int> value);
    public KuromojiStemmerTokenFilterDescriptor MinimumLength(Nullable`1<int> minimumLength);
}
[StringEnumAttribute]
public enum OpenSearch.Client.KuromojiTokenizationMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static KuromojiTokenizationMode Normal;
    [EnumMemberAttribute]
public static KuromojiTokenizationMode Search;
    [EnumMemberAttribute]
public static KuromojiTokenizationMode Extended;
}
public class OpenSearch.Client.KuromojiTokenizer : TokenizerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DiscardPunctuation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DiscardCompoundToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<KuromojiTokenizationMode> <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NBestCost>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NBestExamples>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserDictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <UserDictionaryRules>k__BackingField;
    public Nullable`1<bool> DiscardPunctuation { get; public set; }
    public Nullable`1<bool> DiscardCompoundToken { get; public set; }
    public Nullable`1<KuromojiTokenizationMode> Mode { get; public set; }
    public Nullable`1<int> NBestCost { get; public set; }
    public string NBestExamples { get; public set; }
    public string UserDictionary { get; public set; }
    public IEnumerable`1<string> UserDictionaryRules { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DiscardPunctuation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DiscardPunctuation(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DiscardCompoundToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DiscardCompoundToken(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<KuromojiTokenizationMode> get_Mode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mode(Nullable`1<KuromojiTokenizationMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NBestCost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NBestCost(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_NBestExamples();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NBestExamples(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_UserDictionary();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserDictionary(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_UserDictionaryRules();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserDictionaryRules(IEnumerable`1<string> value);
}
public class OpenSearch.Client.KuromojiTokenizerDescriptor : TokenizerDescriptorBase`2<KuromojiTokenizerDescriptor, IKuromojiTokenizer> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKuromojiTokenizer.DiscardPunctuation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IKuromojiTokenizer.DiscardCompoundToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<KuromojiTokenizationMode> <OpenSearch.Client.IKuromojiTokenizer.Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IKuromojiTokenizer.NBestCost>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKuromojiTokenizer.NBestExamples>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IKuromojiTokenizer.UserDictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IKuromojiTokenizer.UserDictionaryRules>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.IKuromojiTokenizer.DiscardPunctuation { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IKuromojiTokenizer.DiscardCompoundToken { get; private set; }
    private Nullable`1<KuromojiTokenizationMode> OpenSearch.Client.IKuromojiTokenizer.Mode { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IKuromojiTokenizer.NBestCost { get; private set; }
    private string OpenSearch.Client.IKuromojiTokenizer.NBestExamples { get; private set; }
    private string OpenSearch.Client.IKuromojiTokenizer.UserDictionary { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IKuromojiTokenizer.UserDictionaryRules { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKuromojiTokenizer.get_DiscardPunctuation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiTokenizer.set_DiscardPunctuation(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IKuromojiTokenizer.get_DiscardCompoundToken();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiTokenizer.set_DiscardCompoundToken(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<KuromojiTokenizationMode> OpenSearch.Client.IKuromojiTokenizer.get_Mode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiTokenizer.set_Mode(Nullable`1<KuromojiTokenizationMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IKuromojiTokenizer.get_NBestCost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiTokenizer.set_NBestCost(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKuromojiTokenizer.get_NBestExamples();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiTokenizer.set_NBestExamples(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IKuromojiTokenizer.get_UserDictionary();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiTokenizer.set_UserDictionary(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IKuromojiTokenizer.get_UserDictionaryRules();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IKuromojiTokenizer.set_UserDictionaryRules(IEnumerable`1<string> value);
    public KuromojiTokenizerDescriptor Mode(Nullable`1<KuromojiTokenizationMode> mode);
    public KuromojiTokenizerDescriptor DiscardPunctuation(Nullable`1<bool> discard);
    public KuromojiTokenizerDescriptor DiscardCompoundToken(Nullable`1<bool> discard);
    public KuromojiTokenizerDescriptor UserDictionary(string userDictionary);
    public KuromojiTokenizerDescriptor NBestExamples(string examples);
    public KuromojiTokenizerDescriptor NBestCost(Nullable`1<int> cost);
    public KuromojiTokenizerDescriptor UserDictionaryRules(IEnumerable`1<string> rules);
    public KuromojiTokenizerDescriptor UserDictionaryRules(String[] rules);
}
[StringEnumAttribute]
public enum OpenSearch.Client.Language : Enum {
    public int value__;
    public static Language Arabic;
    public static Language Armenian;
    public static Language Basque;
    public static Language Brazilian;
    public static Language Bulgarian;
    public static Language Catalan;
    public static Language Chinese;
    public static Language Cjk;
    public static Language Czech;
    public static Language Danish;
    public static Language Dutch;
    public static Language English;
    public static Language Estonian;
    public static Language Finnish;
    public static Language French;
    public static Language Galician;
    public static Language German;
    public static Language Greek;
    public static Language Hindi;
    public static Language Hungarian;
    public static Language Indonesian;
    public static Language Irish;
    public static Language Italian;
    public static Language Latvian;
    public static Language Norwegian;
    public static Language Persian;
    public static Language Portuguese;
    public static Language Romanian;
    public static Language Russian;
    public static Language Sorani;
    public static Language Spanish;
    public static Language Swedish;
    public static Language Turkish;
    public static Language Thai;
}
public class OpenSearch.Client.LanguageAnalyzer : AnalyzerBase {
    private string _type;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <StemExclusionList>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <StopWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StopwordsPath>k__BackingField;
    [IgnoreDataMemberAttribute]
public Nullable`1<Language> Language { get; public set; }
    public IEnumerable`1<string> StemExclusionList { get; public set; }
    public StopWords StopWords { get; public set; }
    public string StopwordsPath { get; public set; }
    public string Type { get; protected set; }
    public Nullable`1<Language> get_Language();
    public void set_Language(Nullable`1<Language> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_StemExclusionList();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StemExclusionList(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual StopWords get_StopWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopWords(StopWords value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_StopwordsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopwordsPath(string value);
    public virtual string get_Type();
    protected virtual void set_Type(string value);
}
public class OpenSearch.Client.LanguageAnalyzerDescriptor : AnalyzerDescriptorBase`2<LanguageAnalyzerDescriptor, ILanguageAnalyzer> {
    private string _type;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ILanguageAnalyzer.StemExclusionList>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <OpenSearch.Client.ILanguageAnalyzer.StopWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ILanguageAnalyzer.StopwordsPath>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.ILanguageAnalyzer.StemExclusionList { get; private set; }
    private StopWords OpenSearch.Client.ILanguageAnalyzer.StopWords { get; private set; }
    private string OpenSearch.Client.ILanguageAnalyzer.StopwordsPath { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ILanguageAnalyzer.get_StemExclusionList();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILanguageAnalyzer.set_StemExclusionList(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override StopWords OpenSearch.Client.ILanguageAnalyzer.get_StopWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILanguageAnalyzer.set_StopWords(StopWords value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ILanguageAnalyzer.get_StopwordsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILanguageAnalyzer.set_StopwordsPath(string value);
    public LanguageAnalyzerDescriptor Language(Nullable`1<Language> language);
    public LanguageAnalyzerDescriptor StopWords(StopWords stopWords);
    public LanguageAnalyzerDescriptor StopWords(String[] stopWords);
    public LanguageAnalyzerDescriptor StopWords(IEnumerable`1<string> stopWords);
}
public class OpenSearch.Client.LaplaceSmoothingModel : SmoothingModelBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Alpha>k__BackingField;
    public Nullable`1<double> Alpha { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Alpha();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Alpha(Nullable`1<double> value);
    internal virtual void WrapInContainer(ISmoothingModelContainer container);
}
public class OpenSearch.Client.LaplaceSmoothingModelDescriptor : DescriptorBase`2<LaplaceSmoothingModelDescriptor, ILaplaceSmoothingModel> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ILaplaceSmoothingModel.Alpha>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.ILaplaceSmoothingModel.Alpha { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ILaplaceSmoothingModel.get_Alpha();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILaplaceSmoothingModel.set_Alpha(Nullable`1<double> value);
    public LaplaceSmoothingModelDescriptor Alpha(Nullable`1<double> alpha);
}
[DataContractAttribute]
public class OpenSearch.Client.LatLon : object {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Lat>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Lon>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<double> Lat { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Lon { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Lat();
    [CompilerGeneratedAttribute]
public void set_Lat(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Lon();
    [CompilerGeneratedAttribute]
public void set_Lon(Nullable`1<double> value);
}
[JsonFormatterAttribute("OpenSearch.Client.LazyDocumentFormatter")]
public class OpenSearch.Client.LazyDocument : object {
    private IOpenSearchSerializer _sourceSerializer;
    private IOpenSearchSerializer _requestResponseSerializer;
    private IMemoryStreamFactory _memoryStreamFactory;
    [CompilerGeneratedAttribute]
private Byte[] <Bytes>k__BackingField;
    internal Byte[] Bytes { get; }
    internal LazyDocument(Byte[] bytes, IJsonFormatterResolver formatterResolver);
    [CompilerGeneratedAttribute]
internal Byte[] get_Bytes();
    internal T AsUsingRequestResponseSerializer();
    public sealed virtual T As();
    public sealed virtual object As(Type objectType);
    public sealed virtual Task`1<T> AsAsync(CancellationToken ct);
    public sealed virtual Task`1<object> AsAsync(Type objectType, CancellationToken ct);
}
internal class OpenSearch.Client.LazyDocumentFormatter : object {
    internal static void WriteUnindented(JsonReader& reader, JsonWriter& writer);
    public sealed virtual void Serialize(JsonWriter& writer, LazyDocument value, IJsonFormatterResolver formatterResolver);
    public sealed virtual LazyDocument Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.LazyDocumentInterfaceFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, ILazyDocument value, IJsonFormatterResolver formatterResolver);
    public sealed virtual ILazyDocument Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.LengthTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Min>k__BackingField;
    public Nullable`1<int> Max { get; public set; }
    public Nullable`1<int> Min { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Max();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Max(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Min();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Min(Nullable`1<int> value);
}
public class OpenSearch.Client.LengthTokenFilterDescriptor : TokenFilterDescriptorBase`2<LengthTokenFilterDescriptor, ILengthTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ILengthTokenFilter.Max>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ILengthTokenFilter.Min>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.ILengthTokenFilter.Max { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ILengthTokenFilter.Min { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ILengthTokenFilter.get_Max();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILengthTokenFilter.set_Max(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ILengthTokenFilter.get_Min();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILengthTokenFilter.set_Min(Nullable`1<int> value);
    public LengthTokenFilterDescriptor Min(Nullable`1<int> minimum);
    public LengthTokenFilterDescriptor Max(Nullable`1<int> maximum);
}
public class OpenSearch.Client.LetterTokenizer : TokenizerBase {
}
public class OpenSearch.Client.LetterTokenizerDescriptor : TokenizerDescriptorBase`2<LetterTokenizerDescriptor, ILetterTokenizer> {
    protected string Type { get; }
    protected virtual string get_Type();
}
[JsonFormatterAttribute("OpenSearch.Client.LikeFormatter")]
public class OpenSearch.Client.Like : Union`2<string, ILikeDocument> {
    public Like(string item);
    public Like(ILikeDocument item);
    public static Like op_Implicit(string likeText);
    public static Like op_Implicit(LikeDocumentBase like);
    internal static bool IsConditionless(Like like);
}
public class OpenSearch.Client.LikeDescriptor`1 : DescriptorPromiseBase`2<LikeDescriptor`1<T>, List`1<Like>> {
    public LikeDescriptor`1<T> Text(string likeText);
    public LikeDescriptor`1<T> Document(Func`2<LikeDocumentDescriptor`1<T>, ILikeDocument> selector);
}
public class OpenSearch.Client.LikeDocument`1 : LikeDocumentBase {
    public LikeDocument`1(Id id);
    public LikeDocument`1(TDocument document);
}
public abstract class OpenSearch.Client.LikeDocumentBase : object {
    [CompilerGeneratedAttribute]
private object <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private IPerFieldAnalyzer <PerFieldAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <Routing>k__BackingField;
    public object Document { get; public set; }
    public Fields Fields { get; public set; }
    public Id Id { get; public set; }
    public IndexName Index { get; public set; }
    public IPerFieldAnalyzer PerFieldAnalyzer { get; public set; }
    public Routing Routing { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual object get_Document();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Document(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Id get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Id value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public sealed virtual IPerFieldAnalyzer get_PerFieldAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PerFieldAnalyzer(IPerFieldAnalyzer value);
    [CompilerGeneratedAttribute]
public sealed virtual Routing get_Routing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Routing(Routing value);
}
public class OpenSearch.Client.LikeDocumentDescriptor`1 : DescriptorBase`2<LikeDocumentDescriptor`1<TDocument>, ILikeDocument> {
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.ILikeDocument.Document>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ILikeDocument.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Id <OpenSearch.Client.ILikeDocument.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.ILikeDocument.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private IPerFieldAnalyzer <OpenSearch.Client.ILikeDocument.PerFieldAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <OpenSearch.Client.ILikeDocument.Routing>k__BackingField;
    private object OpenSearch.Client.ILikeDocument.Document { get; private set; }
    private Fields OpenSearch.Client.ILikeDocument.Fields { get; private set; }
    private Id OpenSearch.Client.ILikeDocument.Id { get; private set; }
    private IndexName OpenSearch.Client.ILikeDocument.Index { get; private set; }
    private IPerFieldAnalyzer OpenSearch.Client.ILikeDocument.PerFieldAnalyzer { get; private set; }
    private Routing OpenSearch.Client.ILikeDocument.Routing { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.ILikeDocument.get_Document();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILikeDocument.set_Document(object value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ILikeDocument.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILikeDocument.set_Fields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Id OpenSearch.Client.ILikeDocument.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILikeDocument.set_Id(Id value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.ILikeDocument.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILikeDocument.set_Index(IndexName value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPerFieldAnalyzer OpenSearch.Client.ILikeDocument.get_PerFieldAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILikeDocument.set_PerFieldAnalyzer(IPerFieldAnalyzer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Routing OpenSearch.Client.ILikeDocument.get_Routing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILikeDocument.set_Routing(Routing value);
    public LikeDocumentDescriptor`1<TDocument> Index(IndexName index);
    public LikeDocumentDescriptor`1<TDocument> Id(Id id);
    public LikeDocumentDescriptor`1<TDocument> Routing(Routing routing);
    public LikeDocumentDescriptor`1<TDocument> Fields(Func`2<FieldsDescriptor`1<TDocument>, IPromise`1<Fields>> fields);
    public LikeDocumentDescriptor`1<TDocument> Fields(Fields fields);
    public LikeDocumentDescriptor`1<TDocument> Document(TDocument document);
    public LikeDocumentDescriptor`1<TDocument> PerFieldAnalyzer(Func`2<PerFieldAnalyzerDescriptor`1<TDocument>, IPromise`1<IPerFieldAnalyzer>> analyzerSelector);
}
internal class OpenSearch.Client.LikeFormatter : object {
    private static UnionFormatter`2<string, ILikeDocument> UnionFormatter;
    private static LikeFormatter();
    public sealed virtual Like Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Like value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.LimitTokenCountTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ConsumeAllTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxTokenCount>k__BackingField;
    public Nullable`1<bool> ConsumeAllTokens { get; public set; }
    public Nullable`1<int> MaxTokenCount { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ConsumeAllTokens();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsumeAllTokens(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxTokenCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxTokenCount(Nullable`1<int> value);
}
public class OpenSearch.Client.LimitTokenCountTokenFilterDescriptor : TokenFilterDescriptorBase`2<LimitTokenCountTokenFilterDescriptor, ILimitTokenCountTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ILimitTokenCountTokenFilter.ConsumeAllTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ILimitTokenCountTokenFilter.MaxTokenCount>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.ILimitTokenCountTokenFilter.ConsumeAllTokens { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ILimitTokenCountTokenFilter.MaxTokenCount { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ILimitTokenCountTokenFilter.get_ConsumeAllTokens();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILimitTokenCountTokenFilter.set_ConsumeAllTokens(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ILimitTokenCountTokenFilter.get_MaxTokenCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILimitTokenCountTokenFilter.set_MaxTokenCount(Nullable`1<int> value);
    public LimitTokenCountTokenFilterDescriptor ConsumeAllToken(Nullable`1<bool> consumeAllTokens);
    public LimitTokenCountTokenFilterDescriptor MaxTokenCount(Nullable`1<int> maxTokenCount);
}
public class OpenSearch.Client.LinearDateDecayFunction : LinearDecayFunctionBase`2<DateMath, Time> {
}
public class OpenSearch.Client.LinearDecayFunction : LinearDecayFunctionBase`2<Nullable`1<double>, Nullable`1<double>> {
}
public abstract class OpenSearch.Client.LinearDecayFunctionBase`2 : DecayFunctionBase`2<TOrigin, TScale> {
    protected string DecayType { get; }
    protected virtual string get_DecayType();
}
public class OpenSearch.Client.LinearDecayFunctionDescriptor`3 : DecayFunctionDescriptorBase`4<LinearDecayFunctionDescriptor`3<TOrigin, TScale, T>, TOrigin, TScale, T> {
    protected string DecayType { get; }
    protected virtual string get_DecayType();
}
public class OpenSearch.Client.LinearGeoDecayFunction : LinearDecayFunctionBase`2<GeoLocation, Distance> {
}
public class OpenSearch.Client.LinearInterpolationSmoothingModel : SmoothingModelBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <BigramLambda>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <TrigramLambda>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <UnigramLambda>k__BackingField;
    public Nullable`1<double> BigramLambda { get; public set; }
    public Nullable`1<double> TrigramLambda { get; public set; }
    public Nullable`1<double> UnigramLambda { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_BigramLambda();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BigramLambda(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_TrigramLambda();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrigramLambda(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_UnigramLambda();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UnigramLambda(Nullable`1<double> value);
    internal virtual void WrapInContainer(ISmoothingModelContainer container);
}
public class OpenSearch.Client.LinearInterpolationSmoothingModelDescriptor : DescriptorBase`2<LinearInterpolationSmoothingModelDescriptor, ILinearInterpolationSmoothingModel> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ILinearInterpolationSmoothingModel.BigramLambda>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ILinearInterpolationSmoothingModel.TrigramLambda>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ILinearInterpolationSmoothingModel.UnigramLambda>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.ILinearInterpolationSmoothingModel.BigramLambda { get; private set; }
    private Nullable`1<double> OpenSearch.Client.ILinearInterpolationSmoothingModel.TrigramLambda { get; private set; }
    private Nullable`1<double> OpenSearch.Client.ILinearInterpolationSmoothingModel.UnigramLambda { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ILinearInterpolationSmoothingModel.get_BigramLambda();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILinearInterpolationSmoothingModel.set_BigramLambda(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ILinearInterpolationSmoothingModel.get_TrigramLambda();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILinearInterpolationSmoothingModel.set_TrigramLambda(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ILinearInterpolationSmoothingModel.get_UnigramLambda();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILinearInterpolationSmoothingModel.set_UnigramLambda(Nullable`1<double> value);
    public LinearInterpolationSmoothingModelDescriptor TrigramLambda(Nullable`1<double> lambda);
    public LinearInterpolationSmoothingModelDescriptor UnigramLambda(Nullable`1<double> lambda);
    public LinearInterpolationSmoothingModelDescriptor BigramLambda(Nullable`1<double> lambda);
}
public class OpenSearch.Client.LinearModel : object {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMovingAverageModel.Name>k__BackingField;
    private string OpenSearch.Client.IMovingAverageModel.Name { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMovingAverageModel.get_Name();
}
public class OpenSearch.Client.LinearModelDescriptor : DescriptorBase`2<LinearModelDescriptor, ILinearModel> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMovingAverageModel.Name>k__BackingField;
    private string OpenSearch.Client.IMovingAverageModel.Name { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMovingAverageModel.get_Name();
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.LineStringGeoShape>")]
public class OpenSearch.Client.LineStringGeoShape : GeoShapeBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<GeoCoordinate> <Coordinates>k__BackingField;
    public IEnumerable`1<GeoCoordinate> Coordinates { get; public set; }
    public LineStringGeoShape(IEnumerable`1<GeoCoordinate> coordinates);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<GeoCoordinate> get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(IEnumerable`1<GeoCoordinate> value);
}
public class OpenSearch.Client.ListDanglingIndicesDescriptor : RequestDescriptorBase`3<ListDanglingIndicesDescriptor, ListDanglingIndicesRequestParameters, IListDanglingIndicesRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
}
public class OpenSearch.Client.ListDanglingIndicesRequest : PlainRequestBase`1<ListDanglingIndicesRequestParameters> {
    protected IListDanglingIndicesRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    protected IListDanglingIndicesRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
}
[DataContractAttribute]
public class OpenSearch.Client.ListDanglingIndicesResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<AggregatedDanglingIndexInfo> <DanglingIndices>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<AggregatedDanglingIndexInfo> DanglingIndices { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<AggregatedDanglingIndexInfo> get_DanglingIndices();
    [CompilerGeneratedAttribute]
internal void set_DanglingIndices(IReadOnlyCollection`1<AggregatedDanglingIndexInfo> value);
}
public class OpenSearch.Client.ListTasksDescriptor : RequestDescriptorBase`3<ListTasksDescriptor, ListTasksRequestParameters, IListTasksRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
    public ListTasksDescriptor Actions(String[] actions);
    public ListTasksDescriptor Detailed(Nullable`1<bool> detailed);
    public ListTasksDescriptor GroupBy(Nullable`1<GroupBy> groupby);
    public ListTasksDescriptor Nodes(String[] nodes);
    public ListTasksDescriptor ParentTaskId(string parenttaskid);
    public ListTasksDescriptor Timeout(Time timeout);
    public ListTasksDescriptor WaitForCompletion(Nullable`1<bool> waitforcompletion);
}
public class OpenSearch.Client.ListTasksRequest : PlainRequestBase`1<ListTasksRequestParameters> {
    protected IListTasksRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public String[] Actions { get; public set; }
    public Nullable`1<bool> Detailed { get; public set; }
    public Nullable`1<GroupBy> GroupBy { get; public set; }
    public String[] Nodes { get; public set; }
    public string ParentTaskId { get; public set; }
    public Time Timeout { get; public set; }
    public Nullable`1<bool> WaitForCompletion { get; public set; }
    protected IListTasksRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public String[] get_Actions();
    public void set_Actions(String[] value);
    public Nullable`1<bool> get_Detailed();
    public void set_Detailed(Nullable`1<bool> value);
    public Nullable`1<GroupBy> get_GroupBy();
    public void set_GroupBy(Nullable`1<GroupBy> value);
    public String[] get_Nodes();
    public void set_Nodes(String[] value);
    public string get_ParentTaskId();
    public void set_ParentTaskId(string value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public Nullable`1<bool> get_WaitForCompletion();
    public void set_WaitForCompletion(Nullable`1<bool> value);
}
[DataContractAttribute]
public class OpenSearch.Client.ListTasksResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ErrorCause> <NodeFailures>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, TaskExecutingNode> <Nodes>k__BackingField;
    public bool IsValid { get; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ErrorCause> NodeFailures { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, TaskExecutingNode> Nodes { get; internal set; }
    public virtual bool get_IsValid();
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ErrorCause> get_NodeFailures();
    [CompilerGeneratedAttribute]
internal void set_NodeFailures(IReadOnlyCollection`1<ErrorCause> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, TaskExecutingNode> get_Nodes();
    [CompilerGeneratedAttribute]
internal void set_Nodes(IReadOnlyDictionary`2<string, TaskExecutingNode> value);
}
public class OpenSearch.Client.LMDirichletSimilarity : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Mu>k__BackingField;
    public Nullable`1<int> Mu { get; public set; }
    public string Type { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Mu();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mu(Nullable`1<int> value);
    public sealed virtual string get_Type();
}
public class OpenSearch.Client.LMDirichletSimilarityDescriptor : DescriptorBase`2<LMDirichletSimilarityDescriptor, ILMDirichletSimilarity> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ILMDirichletSimilarity.Mu>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.ILMDirichletSimilarity.Mu { get; private set; }
    private string OpenSearch.Client.ISimilarity.Type { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ILMDirichletSimilarity.get_Mu();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILMDirichletSimilarity.set_Mu(Nullable`1<int> value);
    private sealed virtual override string OpenSearch.Client.ISimilarity.get_Type();
    public LMDirichletSimilarityDescriptor Mu(Nullable`1<int> mu);
}
public class OpenSearch.Client.LMJelinekMercerSimilarity : object {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Lambda>k__BackingField;
    public Nullable`1<double> Lambda { get; public set; }
    public string Type { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Lambda();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lambda(Nullable`1<double> value);
    public sealed virtual string get_Type();
}
public class OpenSearch.Client.LMJelinekMercerSimilarityDescriptor : DescriptorBase`2<LMJelinekMercerSimilarityDescriptor, ILMJelinekMercerSimilarity> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ILMJelinekMercerSimilarity.Lambda>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.ILMJelinekMercerSimilarity.Lambda { get; private set; }
    private string OpenSearch.Client.ISimilarity.Type { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ILMJelinekMercerSimilarity.get_Lambda();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILMJelinekMercerSimilarity.set_Lambda(Nullable`1<double> value);
    private sealed virtual override string OpenSearch.Client.ISimilarity.get_Type();
    public LMJelinekMercerSimilarityDescriptor Lamdba(Nullable`1<double> lamda);
}
[StringEnumAttribute]
public enum OpenSearch.Client.LogLevel : Enum {
    public int value__;
    [EnumMemberAttribute]
public static LogLevel Error;
    [EnumMemberAttribute]
public static LogLevel Warn;
    [EnumMemberAttribute]
public static LogLevel Info;
    [EnumMemberAttribute]
public static LogLevel Debug;
    [EnumMemberAttribute]
public static LogLevel Trace;
}
public class OpenSearch.Client.LongId : object {
    internal long Value;
    public LongId(long value);
    public sealed virtual bool Equals(LongId other);
    public sealed virtual string GetString(IConnectionConfigurationValues settings);
    public static LongId op_Implicit(long value);
    public static long op_Implicit(LongId value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(LongId left, LongId right);
    public static bool op_Inequality(LongId left, LongId right);
}
public class OpenSearch.Client.LongRange : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LessThanOrEqualTo>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<long> GreaterThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> GreaterThanOrEqualTo { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> LessThan { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> LessThanOrEqualTo { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_GreaterThan();
    [CompilerGeneratedAttribute]
public void set_GreaterThan(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_GreaterThanOrEqualTo(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_LessThan();
    [CompilerGeneratedAttribute]
public void set_LessThan(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
public void set_LessThanOrEqualTo(Nullable`1<long> value);
}
public class OpenSearch.Client.LongRangeAttribute : RangePropertyAttributeBase {
}
public class OpenSearch.Client.LongRangeProperty : RangePropertyBase {
}
public class OpenSearch.Client.LongRangePropertyDescriptor`1 : RangePropertyDescriptorBase`3<LongRangePropertyDescriptor`1<T>, ILongRangeProperty, T> {
}
public class OpenSearch.Client.LongRangeQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LessThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RangeRelation> <Relation>k__BackingField;
    public Nullable`1<long> GreaterThan { get; public set; }
    public Nullable`1<long> GreaterThanOrEqualTo { get; public set; }
    public Nullable`1<long> LessThan { get; public set; }
    public Nullable`1<long> LessThanOrEqualTo { get; public set; }
    public Nullable`1<RangeRelation> Relation { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_GreaterThan();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GreaterThan(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GreaterThanOrEqualTo(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_LessThan();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LessThan(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LessThanOrEqualTo(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<RangeRelation> get_Relation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Relation(Nullable`1<RangeRelation> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ILongRangeQuery q);
}
[DataContractAttribute]
public class OpenSearch.Client.LongRangeQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<LongRangeQueryDescriptor`1<T>, ILongRangeQuery, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.ILongRangeQuery.GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.ILongRangeQuery.GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.ILongRangeQuery.LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.ILongRangeQuery.LessThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RangeRelation> <OpenSearch.Client.ILongRangeQuery.Relation>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<long> OpenSearch.Client.ILongRangeQuery.GreaterThan { get; private set; }
    private Nullable`1<long> OpenSearch.Client.ILongRangeQuery.GreaterThanOrEqualTo { get; private set; }
    private Nullable`1<long> OpenSearch.Client.ILongRangeQuery.LessThan { get; private set; }
    private Nullable`1<long> OpenSearch.Client.ILongRangeQuery.LessThanOrEqualTo { get; private set; }
    private Nullable`1<RangeRelation> OpenSearch.Client.ILongRangeQuery.Relation { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.ILongRangeQuery.get_GreaterThan();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILongRangeQuery.set_GreaterThan(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.ILongRangeQuery.get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILongRangeQuery.set_GreaterThanOrEqualTo(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.ILongRangeQuery.get_LessThan();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILongRangeQuery.set_LessThan(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.ILongRangeQuery.get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILongRangeQuery.set_LessThanOrEqualTo(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<RangeRelation> OpenSearch.Client.ILongRangeQuery.get_Relation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILongRangeQuery.set_Relation(Nullable`1<RangeRelation> value);
    public LongRangeQueryDescriptor`1<T> Relation(Nullable`1<RangeRelation> relation);
    public LongRangeQueryDescriptor`1<T> GreaterThan(Nullable`1<long> from);
    public LongRangeQueryDescriptor`1<T> GreaterThanOrEquals(Nullable`1<long> from);
    public LongRangeQueryDescriptor`1<T> LessThan(Nullable`1<long> to);
    public LongRangeQueryDescriptor`1<T> LessThanOrEquals(Nullable`1<long> to);
}
public class OpenSearch.Client.LowercaseProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public Field TargetField { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.LowercaseProcessorDescriptor`1 : ProcessorDescriptorBase`2<LowercaseProcessorDescriptor`1<T>, ILowercaseProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ILowercaseProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ILowercaseProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ILowercaseProcessor.TargetField>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.ILowercaseProcessor.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ILowercaseProcessor.IgnoreMissing { get; private set; }
    private Field OpenSearch.Client.ILowercaseProcessor.TargetField { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ILowercaseProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILowercaseProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ILowercaseProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILowercaseProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ILowercaseProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILowercaseProcessor.set_TargetField(Field value);
    public LowercaseProcessorDescriptor`1<T> Field(Field field);
    public LowercaseProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public LowercaseProcessorDescriptor`1<T> TargetField(Field field);
    public LowercaseProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, object>> objectPath);
    public LowercaseProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
}
public class OpenSearch.Client.LowercaseTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    public string Language { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Language();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Language(string value);
}
public class OpenSearch.Client.LowercaseTokenFilterDescriptor : TokenFilterDescriptorBase`2<LowercaseTokenFilterDescriptor, ILowercaseTokenFilter> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ILowercaseTokenFilter.Language>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.ILowercaseTokenFilter.Language { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ILowercaseTokenFilter.get_Language();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ILowercaseTokenFilter.set_Language(string value);
    public LowercaseTokenFilterDescriptor Language(string language);
}
public class OpenSearch.Client.LowercaseTokenizer : TokenizerBase {
}
public class OpenSearch.Client.LowercaseTokenizerDescriptor : TokenizerDescriptorBase`2<LowercaseTokenizerDescriptor, ILowercaseTokenizer> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public class OpenSearch.Client.LuceneExpressionScript : StoredScript {
    private static string Lang;
    public LuceneExpressionScript(string source);
    private static LuceneExpressionScript();
}
public class OpenSearch.Client.MappingCharFilter : CharFilterBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MappingsPath>k__BackingField;
    public IEnumerable`1<string> Mappings { get; public set; }
    public string MappingsPath { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Mappings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mappings(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MappingsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MappingsPath(string value);
}
public class OpenSearch.Client.MappingCharFilterDescriptor : CharFilterDescriptorBase`2<MappingCharFilterDescriptor, IMappingCharFilter> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IMappingCharFilter.Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMappingCharFilter.MappingsPath>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.IMappingCharFilter.Mappings { get; private set; }
    private string OpenSearch.Client.IMappingCharFilter.MappingsPath { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IMappingCharFilter.get_Mappings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMappingCharFilter.set_Mappings(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMappingCharFilter.get_MappingsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMappingCharFilter.set_MappingsPath(string value);
    public MappingCharFilterDescriptor Mappings(String[] mappings);
    public MappingCharFilterDescriptor Mappings(IEnumerable`1<string> mappings);
    public MappingCharFilterDescriptor MappingsPath(string path);
}
[ObsoleteAttribute("MappingsDescriptor is obsolete, no longer treats mappings as a dictionary. Please use TypeMappingsDescriptor")]
public class OpenSearch.Client.MappingsDescriptor : object {
    [ObsoleteAttribute("MappingsDescriptor is obsolete please call Map() on the parent descriptor")]
public ITypeMapping Map(Func`2<TypeMappingDescriptor`1<T>, ITypeMapping> selector);
    [ObsoleteAttribute("MappingsDescriptor is obsolete please call Map() on the parent descriptor")]
public ITypeMapping Map(Func`2<TypeMappingDescriptor`1<object>, ITypeMapping> selector);
    [ObsoleteAttribute("Types are gone from OpenSearch, the first argument is completely ignored please remove it")]
public ITypeMapping Map(object type, Func`2<TypeMappingDescriptor`1<T>, ITypeMapping> selector);
    [ObsoleteAttribute("Types are gone from OpenSearch, the first argument is completely ignored please remove it")]
public ITypeMapping Map(object type, Func`2<TypeMappingDescriptor`1<object>, ITypeMapping> selector);
}
public class OpenSearch.Client.MappingWalker : object {
    private IMappingVisitor _visitor;
    public MappingWalker(IMappingVisitor visitor);
    public void Accept(GetMappingResponse response);
    public void Accept(ITypeMapping mapping);
    private static void Visit(IProperty prop, Action`1<TProperty> act);
    public void Accept(IProperties properties);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_0(ITextProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_1(IKeywordProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_2(ISearchAsYouTypeProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_3(INumberProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_4(IDateProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_5(IDateNanosProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_6(IBooleanProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_7(IBinaryProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_8(IObjectProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_9(INestedProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_10(IIpProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_11(IGeoPointProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_12(IGeoShapeProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_13(ICompletionProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_14(IMurmur3HashProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_15(ITokenCountProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_16(IPercolatorProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_17(IIntegerRangeProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_18(IFloatRangeProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_19(ILongRangeProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_20(IDoubleRangeProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_21(IDateRangeProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_22(IIpRangeProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_23(IJoinProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_24(IRankFeatureProperty t);
    [CompilerGeneratedAttribute]
private void <Accept>b__5_25(IRankFeaturesProperty t);
}
[AttributeUsageAttribute("1024")]
internal class OpenSearch.Client.MapsApiAttribute : Attribute {
    public MapsApiAttribute(string restSpecName);
}
public class OpenSearch.Client.MatchAllQuery : QueryBase {
    [CompilerGeneratedAttribute]
private string <NormField>k__BackingField;
    public string NormField { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_NormField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormField(string value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer container);
}
public class OpenSearch.Client.MatchAllQueryDescriptor : QueryDescriptorBase`2<MatchAllQueryDescriptor, IMatchAllQuery> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMatchAllQuery.NormField>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.IMatchAllQuery.NormField { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMatchAllQuery.get_NormField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchAllQuery.set_NormField(string value);
    public MatchAllQueryDescriptor NormField(string normField);
}
public class OpenSearch.Client.MatchBoolPrefixQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private IFuzziness <Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <FuzzyRewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FuzzyTranspositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Operator> <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    public string Analyzer { get; public set; }
    public IFuzziness Fuzziness { get; public set; }
    public MultiTermQueryRewrite FuzzyRewrite { get; public set; }
    public Nullable`1<bool> FuzzyTranspositions { get; public set; }
    public Nullable`1<int> MaxExpansions { get; public set; }
    public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    public Nullable`1<Operator> Operator { get; public set; }
    public Nullable`1<int> PrefixLength { get; public set; }
    public string Query { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IFuzziness get_Fuzziness();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fuzziness(IFuzziness value);
    [CompilerGeneratedAttribute]
public sealed virtual MultiTermQueryRewrite get_FuzzyRewrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyRewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_FuzzyTranspositions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyTranspositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxExpansions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual MinimumShouldMatch get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Operator> get_Operator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Operator(Nullable`1<Operator> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PrefixLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IMatchBoolPrefixQuery q);
}
public class OpenSearch.Client.MatchBoolPrefixQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<MatchBoolPrefixQueryDescriptor`1<T>, IMatchBoolPrefixQuery, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMatchBoolPrefixQuery.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private IFuzziness <OpenSearch.Client.IMatchBoolPrefixQuery.Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <OpenSearch.Client.IMatchBoolPrefixQuery.FuzzyRewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMatchBoolPrefixQuery.FuzzyTranspositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMatchBoolPrefixQuery.MaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <OpenSearch.Client.IMatchBoolPrefixQuery.MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Operator> <OpenSearch.Client.IMatchBoolPrefixQuery.Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMatchBoolPrefixQuery.PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMatchBoolPrefixQuery.Query>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.IMatchBoolPrefixQuery.Analyzer { get; private set; }
    private IFuzziness OpenSearch.Client.IMatchBoolPrefixQuery.Fuzziness { get; private set; }
    private MultiTermQueryRewrite OpenSearch.Client.IMatchBoolPrefixQuery.FuzzyRewrite { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMatchBoolPrefixQuery.FuzzyTranspositions { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMatchBoolPrefixQuery.MaxExpansions { get; private set; }
    private MinimumShouldMatch OpenSearch.Client.IMatchBoolPrefixQuery.MinimumShouldMatch { get; private set; }
    private Nullable`1<Operator> OpenSearch.Client.IMatchBoolPrefixQuery.Operator { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMatchBoolPrefixQuery.PrefixLength { get; private set; }
    private string OpenSearch.Client.IMatchBoolPrefixQuery.Query { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMatchBoolPrefixQuery.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchBoolPrefixQuery.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFuzziness OpenSearch.Client.IMatchBoolPrefixQuery.get_Fuzziness();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchBoolPrefixQuery.set_Fuzziness(IFuzziness value);
    [CompilerGeneratedAttribute]
private sealed virtual override MultiTermQueryRewrite OpenSearch.Client.IMatchBoolPrefixQuery.get_FuzzyRewrite();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchBoolPrefixQuery.set_FuzzyRewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMatchBoolPrefixQuery.get_FuzzyTranspositions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchBoolPrefixQuery.set_FuzzyTranspositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMatchBoolPrefixQuery.get_MaxExpansions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchBoolPrefixQuery.set_MaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override MinimumShouldMatch OpenSearch.Client.IMatchBoolPrefixQuery.get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchBoolPrefixQuery.set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<Operator> OpenSearch.Client.IMatchBoolPrefixQuery.get_Operator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchBoolPrefixQuery.set_Operator(Nullable`1<Operator> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMatchBoolPrefixQuery.get_PrefixLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchBoolPrefixQuery.set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMatchBoolPrefixQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchBoolPrefixQuery.set_Query(string value);
    public MatchBoolPrefixQueryDescriptor`1<T> Analyzer(string analyzer);
    public MatchBoolPrefixQueryDescriptor`1<T> Fuzziness(Fuzziness fuzziness);
    public MatchBoolPrefixQueryDescriptor`1<T> FuzzyTranspositions(Nullable`1<bool> fuzzyTranspositions);
    public MatchBoolPrefixQueryDescriptor`1<T> FuzzyRewrite(MultiTermQueryRewrite rewrite);
    public MatchBoolPrefixQueryDescriptor`1<T> MaxExpansions(Nullable`1<int> maxExpansions);
    public MatchBoolPrefixQueryDescriptor`1<T> MinimumShouldMatch(MinimumShouldMatch minimumShouldMatch);
    public MatchBoolPrefixQueryDescriptor`1<T> Operator(Nullable`1<Operator> op);
    public MatchBoolPrefixQueryDescriptor`1<T> PrefixLength(Nullable`1<int> prefixLength);
    public MatchBoolPrefixQueryDescriptor`1<T> Query(string query);
}
public class OpenSearch.Client.MatchNoneQuery : QueryBase {
    protected bool Conditionless { get; }
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer container);
}
public class OpenSearch.Client.MatchNoneQueryDescriptor : QueryDescriptorBase`2<MatchNoneQueryDescriptor, IMatchNoneQuery> {
    protected bool Conditionless { get; }
    protected virtual bool get_Conditionless();
}
public class OpenSearch.Client.MatchPhrasePrefixQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Slop>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ZeroTermsQuery> <ZeroTermsQuery>k__BackingField;
    public string Analyzer { get; public set; }
    public Nullable`1<int> MaxExpansions { get; public set; }
    public string Query { get; public set; }
    public Nullable`1<int> Slop { get; public set; }
    public Nullable`1<ZeroTermsQuery> ZeroTermsQuery { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxExpansions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Slop();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slop(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ZeroTermsQuery> get_ZeroTermsQuery();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ZeroTermsQuery(Nullable`1<ZeroTermsQuery> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IMatchPhrasePrefixQuery q);
}
public class OpenSearch.Client.MatchPhrasePrefixQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<MatchPhrasePrefixQueryDescriptor`1<T>, IMatchPhrasePrefixQuery, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMatchPhrasePrefixQuery.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMatchPhrasePrefixQuery.MaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMatchPhrasePrefixQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMatchPhrasePrefixQuery.Slop>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ZeroTermsQuery> <OpenSearch.Client.IMatchPhrasePrefixQuery.ZeroTermsQuery>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.IMatchPhrasePrefixQuery.Analyzer { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMatchPhrasePrefixQuery.MaxExpansions { get; private set; }
    private string OpenSearch.Client.IMatchPhrasePrefixQuery.Query { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMatchPhrasePrefixQuery.Slop { get; private set; }
    private Nullable`1<ZeroTermsQuery> OpenSearch.Client.IMatchPhrasePrefixQuery.ZeroTermsQuery { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMatchPhrasePrefixQuery.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchPhrasePrefixQuery.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMatchPhrasePrefixQuery.get_MaxExpansions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchPhrasePrefixQuery.set_MaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMatchPhrasePrefixQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchPhrasePrefixQuery.set_Query(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMatchPhrasePrefixQuery.get_Slop();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchPhrasePrefixQuery.set_Slop(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<ZeroTermsQuery> OpenSearch.Client.IMatchPhrasePrefixQuery.get_ZeroTermsQuery();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchPhrasePrefixQuery.set_ZeroTermsQuery(Nullable`1<ZeroTermsQuery> value);
    public MatchPhrasePrefixQueryDescriptor`1<T> Query(string query);
    public MatchPhrasePrefixQueryDescriptor`1<T> Analyzer(string analyzer);
    public MatchPhrasePrefixQueryDescriptor`1<T> MaxExpansions(Nullable`1<int> maxExpansions);
    public MatchPhrasePrefixQueryDescriptor`1<T> Slop(Nullable`1<int> slop);
    public MatchPhrasePrefixQueryDescriptor`1<T> ZeroTermsQuery(Nullable`1<ZeroTermsQuery> zeroTermsQuery);
}
public class OpenSearch.Client.MatchPhraseQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Slop>k__BackingField;
    public string Analyzer { get; public set; }
    public string Query { get; public set; }
    public Nullable`1<int> Slop { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Slop();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slop(Nullable`1<int> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IMatchPhraseQuery q);
}
public class OpenSearch.Client.MatchPhraseQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<MatchPhraseQueryDescriptor`1<T>, IMatchPhraseQuery, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMatchPhraseQuery.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMatchPhraseQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMatchPhraseQuery.Slop>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.IMatchPhraseQuery.Analyzer { get; private set; }
    private string OpenSearch.Client.IMatchPhraseQuery.Query { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMatchPhraseQuery.Slop { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMatchPhraseQuery.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchPhraseQuery.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMatchPhraseQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchPhraseQuery.set_Query(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMatchPhraseQuery.get_Slop();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchPhraseQuery.set_Slop(Nullable`1<int> value);
    public MatchPhraseQueryDescriptor`1<T> Query(string query);
    public MatchPhraseQueryDescriptor`1<T> Analyzer(string analyzer);
    public MatchPhraseQueryDescriptor`1<T> Slop(Nullable`1<int> slop);
}
public class OpenSearch.Client.MatchQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoGenerateSynonymsPhraseQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private IFuzziness <Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <FuzzyRewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FuzzyTranspositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Operator> <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ZeroTermsQuery> <ZeroTermsQuery>k__BackingField;
    public string Analyzer { get; public set; }
    public Nullable`1<bool> AutoGenerateSynonymsPhraseQuery { get; public set; }
    public IFuzziness Fuzziness { get; public set; }
    public MultiTermQueryRewrite FuzzyRewrite { get; public set; }
    public Nullable`1<bool> FuzzyTranspositions { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public Nullable`1<int> MaxExpansions { get; public set; }
    public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    public Nullable`1<Operator> Operator { get; public set; }
    public Nullable`1<int> PrefixLength { get; public set; }
    public string Query { get; public set; }
    public Nullable`1<ZeroTermsQuery> ZeroTermsQuery { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AutoGenerateSynonymsPhraseQuery();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IFuzziness get_Fuzziness();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fuzziness(IFuzziness value);
    [CompilerGeneratedAttribute]
public sealed virtual MultiTermQueryRewrite get_FuzzyRewrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyRewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_FuzzyTranspositions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyTranspositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Lenient();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxExpansions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual MinimumShouldMatch get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Operator> get_Operator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Operator(Nullable`1<Operator> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PrefixLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ZeroTermsQuery> get_ZeroTermsQuery();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ZeroTermsQuery(Nullable`1<ZeroTermsQuery> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IMatchQuery q);
}
[DataContractAttribute]
public class OpenSearch.Client.MatchQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<MatchQueryDescriptor`1<T>, IMatchQuery, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMatchQuery.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMatchQuery.AutoGenerateSynonymsPhraseQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private IFuzziness <OpenSearch.Client.IMatchQuery.Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <OpenSearch.Client.IMatchQuery.FuzzyRewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMatchQuery.FuzzyTranspositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMatchQuery.Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMatchQuery.MaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <OpenSearch.Client.IMatchQuery.MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Operator> <OpenSearch.Client.IMatchQuery.Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMatchQuery.PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMatchQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ZeroTermsQuery> <OpenSearch.Client.IMatchQuery.ZeroTermsQuery>k__BackingField;
    protected bool Conditionless { get; }
    protected string MatchQueryType { get; }
    private string OpenSearch.Client.IMatchQuery.Analyzer { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMatchQuery.AutoGenerateSynonymsPhraseQuery { get; private set; }
    private IFuzziness OpenSearch.Client.IMatchQuery.Fuzziness { get; private set; }
    private MultiTermQueryRewrite OpenSearch.Client.IMatchQuery.FuzzyRewrite { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMatchQuery.FuzzyTranspositions { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMatchQuery.Lenient { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMatchQuery.MaxExpansions { get; private set; }
    private MinimumShouldMatch OpenSearch.Client.IMatchQuery.MinimumShouldMatch { get; private set; }
    private Nullable`1<Operator> OpenSearch.Client.IMatchQuery.Operator { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMatchQuery.PrefixLength { get; private set; }
    private string OpenSearch.Client.IMatchQuery.Query { get; private set; }
    private Nullable`1<ZeroTermsQuery> OpenSearch.Client.IMatchQuery.ZeroTermsQuery { get; private set; }
    protected virtual bool get_Conditionless();
    protected virtual string get_MatchQueryType();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMatchQuery.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMatchQuery.get_AutoGenerateSynonymsPhraseQuery();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFuzziness OpenSearch.Client.IMatchQuery.get_Fuzziness();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_Fuzziness(IFuzziness value);
    [CompilerGeneratedAttribute]
private sealed virtual override MultiTermQueryRewrite OpenSearch.Client.IMatchQuery.get_FuzzyRewrite();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_FuzzyRewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMatchQuery.get_FuzzyTranspositions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_FuzzyTranspositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMatchQuery.get_Lenient();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMatchQuery.get_MaxExpansions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_MaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override MinimumShouldMatch OpenSearch.Client.IMatchQuery.get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<Operator> OpenSearch.Client.IMatchQuery.get_Operator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_Operator(Nullable`1<Operator> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMatchQuery.get_PrefixLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMatchQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_Query(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<ZeroTermsQuery> OpenSearch.Client.IMatchQuery.get_ZeroTermsQuery();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatchQuery.set_ZeroTermsQuery(Nullable`1<ZeroTermsQuery> value);
    public MatchQueryDescriptor`1<T> Query(string query);
    public MatchQueryDescriptor`1<T> Lenient(Nullable`1<bool> lenient);
    public MatchQueryDescriptor`1<T> Analyzer(string analyzer);
    public MatchQueryDescriptor`1<T> Fuzziness(Fuzziness fuzziness);
    public MatchQueryDescriptor`1<T> FuzzyTranspositions(Nullable`1<bool> fuzzyTranspositions);
    public MatchQueryDescriptor`1<T> FuzzyRewrite(MultiTermQueryRewrite rewrite);
    public MatchQueryDescriptor`1<T> MinimumShouldMatch(MinimumShouldMatch minimumShouldMatch);
    public MatchQueryDescriptor`1<T> Operator(Nullable`1<Operator> op);
    public MatchQueryDescriptor`1<T> ZeroTermsQuery(Nullable`1<ZeroTermsQuery> zeroTermsQuery);
    public MatchQueryDescriptor`1<T> PrefixLength(Nullable`1<int> prefixLength);
    public MatchQueryDescriptor`1<T> MaxExpansions(Nullable`1<int> maxExpansions);
    public MatchQueryDescriptor`1<T> AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> autoGenerateSynonymsPhraseQuery);
}
[StringEnumAttribute]
public enum OpenSearch.Client.MatchType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static MatchType Simple;
    [EnumMemberAttribute]
public static MatchType Regex;
}
public abstract class OpenSearch.Client.MatrixAggregateBase : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Meta>k__BackingField;
    public IReadOnlyDictionary`2<string, object> Meta { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(IReadOnlyDictionary`2<string, object> value);
}
public abstract class OpenSearch.Client.MatrixAggregationBase : AggregationBase {
    [CompilerGeneratedAttribute]
private Fields <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<Field, double> <Missing>k__BackingField;
    public Fields Fields { get; public set; }
    public IDictionary`2<Field, double> Missing { get; public set; }
    protected MatrixAggregationBase(string name, Fields field);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<Field, double> get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(IDictionary`2<Field, double> value);
}
public abstract class OpenSearch.Client.MatrixAggregationDescriptorBase`3 : DescriptorBase`2<TMatrixAggregation, TMatrixAggregationInterface> {
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IMatrixAggregation.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IAggregation.Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<Field, double> <OpenSearch.Client.IMatrixAggregation.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAggregation.Name>k__BackingField;
    private Fields OpenSearch.Client.IMatrixAggregation.Fields { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IAggregation.Meta { get; private set; }
    private IDictionary`2<Field, double> OpenSearch.Client.IMatrixAggregation.Missing { get; private set; }
    private string OpenSearch.Client.IAggregation.Name { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IMatrixAggregation.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatrixAggregation.set_Fields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IAggregation.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<Field, double> OpenSearch.Client.IMatrixAggregation.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatrixAggregation.set_Missing(IDictionary`2<Field, double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAggregation.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Name(string value);
    public TMatrixAggregation Field(Fields fields);
    public TMatrixAggregation Fields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public TMatrixAggregation Missing(Func`2<FluentDictionary`2<Field, double>, FluentDictionary`2<Field, double>> selector);
    public TMatrixAggregation Meta(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
}
[DataContractAttribute]
public class OpenSearch.Client.MatrixStatsAggregate : MatrixAggregateBase {
    [CompilerGeneratedAttribute]
private long <DocCount>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<MatrixStatsField> <Fields>k__BackingField;
    [DataMemberAttribute]
public long DocCount { get; public set; }
    [DataMemberAttribute]
public List`1<MatrixStatsField> Fields { get; public set; }
    [CompilerGeneratedAttribute]
public long get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(long value);
    [CompilerGeneratedAttribute]
public List`1<MatrixStatsField> get_Fields();
    [CompilerGeneratedAttribute]
public void set_Fields(List`1<MatrixStatsField> value);
}
public class OpenSearch.Client.MatrixStatsAggregation : MatrixAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<MatrixStatsMode> <Mode>k__BackingField;
    public Nullable`1<MatrixStatsMode> Mode { get; public set; }
    public MatrixStatsAggregation(string name, Fields fields);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<MatrixStatsMode> get_Mode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mode(Nullable`1<MatrixStatsMode> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.MatrixStatsAggregationDescriptor`1 : MatrixAggregationDescriptorBase`3<MatrixStatsAggregationDescriptor`1<T>, IMatrixStatsAggregation, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<MatrixStatsMode> <OpenSearch.Client.IMatrixStatsAggregation.Mode>k__BackingField;
    private Nullable`1<MatrixStatsMode> OpenSearch.Client.IMatrixStatsAggregation.Mode { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<MatrixStatsMode> OpenSearch.Client.IMatrixStatsAggregation.get_Mode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMatrixStatsAggregation.set_Mode(Nullable`1<MatrixStatsMode> value);
    public MatrixStatsAggregationDescriptor`1<T> Mode(Nullable`1<MatrixStatsMode> mode);
}
[DataContractAttribute]
public class OpenSearch.Client.MatrixStatsField : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, double> <Correlation>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, double> <Covariance>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Kurtosis>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Mean>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Skewness>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Variance>k__BackingField;
    [DataMemberAttribute]
public Dictionary`2<string, double> Correlation { get; public set; }
    [DataMemberAttribute]
public int Count { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, double> Covariance { get; public set; }
    [DataMemberAttribute]
public double Kurtosis { get; public set; }
    [DataMemberAttribute]
public double Mean { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public double Skewness { get; public set; }
    [DataMemberAttribute]
public double Variance { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, double> get_Correlation();
    [CompilerGeneratedAttribute]
public void set_Correlation(Dictionary`2<string, double> value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, double> get_Covariance();
    [CompilerGeneratedAttribute]
public void set_Covariance(Dictionary`2<string, double> value);
    [CompilerGeneratedAttribute]
public double get_Kurtosis();
    [CompilerGeneratedAttribute]
public void set_Kurtosis(double value);
    [CompilerGeneratedAttribute]
public double get_Mean();
    [CompilerGeneratedAttribute]
public void set_Mean(double value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public double get_Skewness();
    [CompilerGeneratedAttribute]
public void set_Skewness(double value);
    [CompilerGeneratedAttribute]
public double get_Variance();
    [CompilerGeneratedAttribute]
public void set_Variance(double value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.MatrixStatsMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static MatrixStatsMode Avg;
    [EnumMemberAttribute]
public static MatrixStatsMode Min;
    [EnumMemberAttribute]
public static MatrixStatsMode Max;
    [EnumMemberAttribute]
public static MatrixStatsMode Sum;
    [EnumMemberAttribute]
public static MatrixStatsMode Median;
}
public class OpenSearch.Client.MaxAggregation : FormattableMetricAggregationBase {
    public MaxAggregation(string name, Field field);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.MaxAggregationDescriptor`1 : FormattableMetricAggregationDescriptorBase`3<MaxAggregationDescriptor`1<T>, IMaxAggregation, T> {
}
public class OpenSearch.Client.MaxBucketAggregation : PipelineAggregationBase {
    public MaxBucketAggregation(string name, SingleBucketsPath bucketsPath);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.MaxBucketAggregationDescriptor : PipelineAggregationDescriptorBase`3<MaxBucketAggregationDescriptor, IMaxBucketAggregation, SingleBucketsPath> {
}
public class OpenSearch.Client.MedianAbsoluteDeviationAggregation : FormattableMetricAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Compression>k__BackingField;
    public Nullable`1<double> Compression { get; public set; }
    public MedianAbsoluteDeviationAggregation(string name, Field field);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Compression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Compression(Nullable`1<double> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.MedianAbsoluteDeviationAggregationDescriptor`1 : FormattableMetricAggregationDescriptorBase`3<MedianAbsoluteDeviationAggregationDescriptor`1<T>, IMedianAbsoluteDeviationAggregation, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IMedianAbsoluteDeviationAggregation.Compression>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IMedianAbsoluteDeviationAggregation.Compression { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IMedianAbsoluteDeviationAggregation.get_Compression();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMedianAbsoluteDeviationAggregation.set_Compression(Nullable`1<double> value);
    public MedianAbsoluteDeviationAggregationDescriptor`1<T> Compression(Nullable`1<double> compression);
}
public class OpenSearch.Client.MemberInfoResolver : ExpressionVisitor {
    [CompilerGeneratedAttribute]
private IList`1<MemberInfo> <Members>k__BackingField;
    public IList`1<MemberInfo> Members { get; }
    public MemberInfoResolver(Expression expression);
    [CompilerGeneratedAttribute]
public IList`1<MemberInfo> get_Members();
    protected virtual Expression VisitMember(MemberExpression expression);
}
public class OpenSearch.Client.MergePolicySettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ExpungeDeletesAllowed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FloorSegment>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxMergeAtOnce>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxMergeAtOnceExplicit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaxMergedSegment>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <ReclaimDeletesWeight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SegmentsPerTier>k__BackingField;
    public Nullable`1<int> ExpungeDeletesAllowed { get; public set; }
    public string FloorSegment { get; public set; }
    public Nullable`1<int> MaxMergeAtOnce { get; public set; }
    public Nullable`1<int> MaxMergeAtOnceExplicit { get; public set; }
    public string MaxMergedSegment { get; public set; }
    public Nullable`1<double> ReclaimDeletesWeight { get; public set; }
    public Nullable`1<int> SegmentsPerTier { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ExpungeDeletesAllowed();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExpungeDeletesAllowed(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_FloorSegment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FloorSegment(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxMergeAtOnce();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxMergeAtOnce(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxMergeAtOnceExplicit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxMergeAtOnceExplicit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MaxMergedSegment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxMergedSegment(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_ReclaimDeletesWeight();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ReclaimDeletesWeight(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_SegmentsPerTier();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SegmentsPerTier(Nullable`1<int> value);
}
public class OpenSearch.Client.MergePolicySettingsDescriptor : DescriptorBase`2<MergePolicySettingsDescriptor, IMergePolicySettings> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMergePolicySettings.ExpungeDeletesAllowed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMergePolicySettings.FloorSegment>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMergePolicySettings.MaxMergeAtOnce>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMergePolicySettings.MaxMergeAtOnceExplicit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMergePolicySettings.MaxMergedSegment>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IMergePolicySettings.ReclaimDeletesWeight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMergePolicySettings.SegmentsPerTier>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.IMergePolicySettings.ExpungeDeletesAllowed { get; private set; }
    private string OpenSearch.Client.IMergePolicySettings.FloorSegment { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMergePolicySettings.MaxMergeAtOnce { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMergePolicySettings.MaxMergeAtOnceExplicit { get; private set; }
    private string OpenSearch.Client.IMergePolicySettings.MaxMergedSegment { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IMergePolicySettings.ReclaimDeletesWeight { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMergePolicySettings.SegmentsPerTier { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMergePolicySettings.get_ExpungeDeletesAllowed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMergePolicySettings.set_ExpungeDeletesAllowed(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMergePolicySettings.get_FloorSegment();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMergePolicySettings.set_FloorSegment(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMergePolicySettings.get_MaxMergeAtOnce();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMergePolicySettings.set_MaxMergeAtOnce(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMergePolicySettings.get_MaxMergeAtOnceExplicit();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMergePolicySettings.set_MaxMergeAtOnceExplicit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMergePolicySettings.get_MaxMergedSegment();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMergePolicySettings.set_MaxMergedSegment(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IMergePolicySettings.get_ReclaimDeletesWeight();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMergePolicySettings.set_ReclaimDeletesWeight(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMergePolicySettings.get_SegmentsPerTier();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMergePolicySettings.set_SegmentsPerTier(Nullable`1<int> value);
    public MergePolicySettingsDescriptor ExpungeDeletesAllowed(Nullable`1<int> allowed);
    public MergePolicySettingsDescriptor FloorSegment(string floorSegment);
    public MergePolicySettingsDescriptor MaxMergeAtOnce(Nullable`1<int> maxMergeAtOnce);
    public MergePolicySettingsDescriptor MaxMergeAtOnceExplicit(Nullable`1<int> maxMergeOnceAtOnceExplicit);
    public MergePolicySettingsDescriptor MaxMergedSegement(string maxMergedSegment);
    public MergePolicySettingsDescriptor ReclaimDeletesWeight(Nullable`1<double> weight);
    public MergePolicySettingsDescriptor SegmentsPerTier(Nullable`1<int> segmentsPerTier);
}
public class OpenSearch.Client.MergeSchedulerSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoThrottle>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxThreadCount>k__BackingField;
    public Nullable`1<bool> AutoThrottle { get; public set; }
    public Nullable`1<int> MaxThreadCount { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AutoThrottle();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AutoThrottle(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxThreadCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxThreadCount(Nullable`1<int> value);
}
public class OpenSearch.Client.MergeSchedulerSettingsDescriptor : DescriptorBase`2<MergeSchedulerSettingsDescriptor, IMergeSchedulerSettings> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMergeSchedulerSettings.AutoThrottle>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMergeSchedulerSettings.MaxThreadCount>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IMergeSchedulerSettings.AutoThrottle { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMergeSchedulerSettings.MaxThreadCount { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMergeSchedulerSettings.get_AutoThrottle();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMergeSchedulerSettings.set_AutoThrottle(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMergeSchedulerSettings.get_MaxThreadCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMergeSchedulerSettings.set_MaxThreadCount(Nullable`1<int> value);
    public MergeSchedulerSettingsDescriptor AutoThrottle(Nullable`1<bool> throttle);
    public MergeSchedulerSettingsDescriptor MaxThreadCount(Nullable`1<int> maxThreadCount);
}
public class OpenSearch.Client.MergeSettings : object {
    [CompilerGeneratedAttribute]
private IMergePolicySettings <Policy>k__BackingField;
    [CompilerGeneratedAttribute]
private IMergeSchedulerSettings <Scheduler>k__BackingField;
    public IMergePolicySettings Policy { get; public set; }
    public IMergeSchedulerSettings Scheduler { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IMergePolicySettings get_Policy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Policy(IMergePolicySettings value);
    [CompilerGeneratedAttribute]
public sealed virtual IMergeSchedulerSettings get_Scheduler();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Scheduler(IMergeSchedulerSettings value);
}
public class OpenSearch.Client.MergeSettingsDescriptor : DescriptorBase`2<MergeSettingsDescriptor, IMergeSettings> {
    [CompilerGeneratedAttribute]
private IMergePolicySettings <OpenSearch.Client.IMergeSettings.Policy>k__BackingField;
    [CompilerGeneratedAttribute]
private IMergeSchedulerSettings <OpenSearch.Client.IMergeSettings.Scheduler>k__BackingField;
    private IMergePolicySettings OpenSearch.Client.IMergeSettings.Policy { get; private set; }
    private IMergeSchedulerSettings OpenSearch.Client.IMergeSettings.Scheduler { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IMergePolicySettings OpenSearch.Client.IMergeSettings.get_Policy();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMergeSettings.set_Policy(IMergePolicySettings value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMergeSchedulerSettings OpenSearch.Client.IMergeSettings.get_Scheduler();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMergeSettings.set_Scheduler(IMergeSchedulerSettings value);
    public MergeSettingsDescriptor Policy(Func`2<MergePolicySettingsDescriptor, IMergePolicySettings> selector);
    public MergeSettingsDescriptor Scheduler(Func`2<MergeSchedulerSettingsDescriptor, IMergeSchedulerSettings> selector);
}
[DataContractAttribute]
public class OpenSearch.Client.MergesStats : object {
    [CompilerGeneratedAttribute]
private long <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CurrentDocuments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CurrentSizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TotalAutoThrottle>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalAutoThrottleInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalDocuments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TotalSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalSizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TotalStoppedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalStoppedTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TotalThrottledTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalThrottledTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TotalTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalTimeInMilliseconds>k__BackingField;
    [DataMemberAttribute]
public long Current { get; public set; }
    [DataMemberAttribute]
public long CurrentDocuments { get; public set; }
    [DataMemberAttribute]
public string CurrentSize { get; public set; }
    [DataMemberAttribute]
public long CurrentSizeInBytes { get; public set; }
    [DataMemberAttribute]
public long Total { get; public set; }
    [DataMemberAttribute]
public string TotalAutoThrottle { get; public set; }
    [DataMemberAttribute]
public long TotalAutoThrottleInBytes { get; public set; }
    [DataMemberAttribute]
public long TotalDocuments { get; public set; }
    [DataMemberAttribute]
public string TotalSize { get; public set; }
    [DataMemberAttribute]
public long TotalSizeInBytes { get; public set; }
    [DataMemberAttribute]
public string TotalStoppedTime { get; public set; }
    [DataMemberAttribute]
public long TotalStoppedTimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public string TotalThrottledTime { get; public set; }
    [DataMemberAttribute]
public long TotalThrottledTimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public string TotalTime { get; public set; }
    [DataMemberAttribute]
public long TotalTimeInMilliseconds { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(long value);
    [CompilerGeneratedAttribute]
public long get_CurrentDocuments();
    [CompilerGeneratedAttribute]
public void set_CurrentDocuments(long value);
    [CompilerGeneratedAttribute]
public string get_CurrentSize();
    [CompilerGeneratedAttribute]
public void set_CurrentSize(string value);
    [CompilerGeneratedAttribute]
public long get_CurrentSizeInBytes();
    [CompilerGeneratedAttribute]
public void set_CurrentSizeInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(long value);
    [CompilerGeneratedAttribute]
public string get_TotalAutoThrottle();
    [CompilerGeneratedAttribute]
public void set_TotalAutoThrottle(string value);
    [CompilerGeneratedAttribute]
public long get_TotalAutoThrottleInBytes();
    [CompilerGeneratedAttribute]
public void set_TotalAutoThrottleInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_TotalDocuments();
    [CompilerGeneratedAttribute]
public void set_TotalDocuments(long value);
    [CompilerGeneratedAttribute]
public string get_TotalSize();
    [CompilerGeneratedAttribute]
public void set_TotalSize(string value);
    [CompilerGeneratedAttribute]
public long get_TotalSizeInBytes();
    [CompilerGeneratedAttribute]
public void set_TotalSizeInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_TotalStoppedTime();
    [CompilerGeneratedAttribute]
public void set_TotalStoppedTime(string value);
    [CompilerGeneratedAttribute]
public long get_TotalStoppedTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_TotalStoppedTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public string get_TotalThrottledTime();
    [CompilerGeneratedAttribute]
public void set_TotalThrottledTime(string value);
    [CompilerGeneratedAttribute]
public long get_TotalThrottledTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_TotalThrottledTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public string get_TotalTime();
    [CompilerGeneratedAttribute]
public void set_TotalTime(string value);
    [CompilerGeneratedAttribute]
public long get_TotalTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_TotalTimeInMilliseconds(long value);
}
public abstract class OpenSearch.Client.MetricAggregateBase : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Meta>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, object> Meta { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(IReadOnlyDictionary`2<string, object> value);
}
public abstract class OpenSearch.Client.MetricAggregationBase : AggregationBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<double> Missing { get; public set; }
    public IScript Script { get; public set; }
    protected MetricAggregationBase(string name, Field field);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public virtual void set_Script(IScript value);
}
public abstract class OpenSearch.Client.MetricAggregationDescriptorBase`3 : DescriptorBase`2<TMetricAggregation, TMetricAggregationInterface> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IMetricAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IAggregation.Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IMetricAggregation.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAggregation.Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IMetricAggregation.Script>k__BackingField;
    private Field OpenSearch.Client.IMetricAggregation.Field { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IAggregation.Meta { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IMetricAggregation.Missing { get; private set; }
    private string OpenSearch.Client.IAggregation.Name { get; private set; }
    private IScript OpenSearch.Client.IMetricAggregation.Script { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IMetricAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMetricAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IAggregation.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IMetricAggregation.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMetricAggregation.set_Missing(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAggregation.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Name(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IMetricAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMetricAggregation.set_Script(IScript value);
    public TMetricAggregation Field(Field field);
    public TMetricAggregation Field(Expression`1<Func`2<T, TValue>> field);
    public virtual TMetricAggregation Script(string script);
    public virtual TMetricAggregation Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public TMetricAggregation Missing(Nullable`1<double> missing);
    public TMetricAggregation Meta(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
}
public class OpenSearch.Client.Metrics : object {
    [CompilerGeneratedAttribute]
private Enum <Value>k__BackingField;
    internal Enum Value { get; }
    internal Metrics(IndicesStatsMetric metric);
    internal Metrics(NodesStatsMetric metric);
    internal Metrics(NodesInfoMetric metric);
    internal Metrics(ClusterStateMetric metric);
    internal Metrics(NodesUsageMetric metric);
    [CompilerGeneratedAttribute]
internal Enum get_Value();
    public sealed virtual bool Equals(Metrics other);
    public sealed virtual string GetString(IConnectionConfigurationValues settings);
    public static Metrics op_Implicit(IndicesStatsMetric metric);
    public static Metrics op_Implicit(NodesStatsMetric metric);
    public static Metrics op_Implicit(NodesInfoMetric metric);
    public static Metrics op_Implicit(ClusterStateMetric metric);
    public static Metrics op_Implicit(NodesUsageMetric metric);
    public bool Equals(Enum other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Metrics left, Metrics right);
    public static bool op_Inequality(Metrics left, Metrics right);
}
public class OpenSearch.Client.MinAggregation : FormattableMetricAggregationBase {
    public MinAggregation(string name, Field field);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.MinAggregationDescriptor`1 : FormattableMetricAggregationDescriptorBase`3<MinAggregationDescriptor`1<T>, IMinAggregation, T> {
}
public class OpenSearch.Client.MinBucketAggregation : PipelineAggregationBase {
    public MinBucketAggregation(string name, SingleBucketsPath bucketsPath);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.MinBucketAggregationDescriptor : PipelineAggregationDescriptorBase`3<MinBucketAggregationDescriptor, IMinBucketAggregation, SingleBucketsPath> {
}
[StringEnumAttribute]
public enum OpenSearch.Client.MinimumInterval : Enum {
    public int value__;
    [EnumMemberAttribute]
public static MinimumInterval Second;
    [EnumMemberAttribute]
public static MinimumInterval Minute;
    [EnumMemberAttribute]
public static MinimumInterval Hour;
    [EnumMemberAttribute]
public static MinimumInterval Day;
    [EnumMemberAttribute]
public static MinimumInterval Month;
    [EnumMemberAttribute]
public static MinimumInterval Year;
}
[JsonFormatterAttribute("OpenSearch.Client.MinimumShouldMatchFormatter")]
public class OpenSearch.Client.MinimumShouldMatch : Union`2<Nullable`1<int>, string> {
    public MinimumShouldMatch(int count);
    public MinimumShouldMatch(string percentage);
    public static MinimumShouldMatch Fixed(int count);
    public static MinimumShouldMatch Percentage(double percentage);
    public static MinimumShouldMatch op_Implicit(string first);
    public static MinimumShouldMatch op_Implicit(int second);
    public static MinimumShouldMatch op_Implicit(double second);
}
internal class OpenSearch.Client.MinimumShouldMatchFormatter : object {
    public sealed virtual MinimumShouldMatch Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, MinimumShouldMatch value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.MissingAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    public Field Field { get; public set; }
    public MissingAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.MissingAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<MissingAggregationDescriptor`1<T>, IMissingAggregation, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IMissingAggregation.Field>k__BackingField;
    private Field OpenSearch.Client.IMissingAggregation.Field { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IMissingAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMissingAggregation.set_Field(Field value);
    public MissingAggregationDescriptor`1<T> Field(Field field);
    public MissingAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
}
public class OpenSearch.Client.MoreLikeThisQuery : QueryBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <BoostTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Include>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Like> <Like>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxDocumentFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxQueryTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxWordLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinDocumentFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinTermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinWordLength>k__BackingField;
    [CompilerGeneratedAttribute]
private IPerFieldAnalyzer <PerFieldAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <StopWords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <TermMatchPercentage>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Like> <Unlike>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VersionType> <VersionType>k__BackingField;
    public string Analyzer { get; public set; }
    public Nullable`1<double> BoostTerms { get; public set; }
    public Fields Fields { get; public set; }
    public Nullable`1<bool> Include { get; public set; }
    public IEnumerable`1<Like> Like { get; public set; }
    public Nullable`1<int> MaxDocumentFrequency { get; public set; }
    public Nullable`1<int> MaxQueryTerms { get; public set; }
    public Nullable`1<int> MaxWordLength { get; public set; }
    public Nullable`1<int> MinDocumentFrequency { get; public set; }
    public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    public Nullable`1<int> MinTermFrequency { get; public set; }
    public Nullable`1<int> MinWordLength { get; public set; }
    public IPerFieldAnalyzer PerFieldAnalyzer { get; public set; }
    public Routing Routing { get; public set; }
    public StopWords StopWords { get; public set; }
    public Nullable`1<double> TermMatchPercentage { get; public set; }
    public IEnumerable`1<Like> Unlike { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_BoostTerms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoostTerms(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Include();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Include(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<Like> get_Like();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Like(IEnumerable`1<Like> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxDocumentFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxDocumentFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxQueryTerms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxQueryTerms(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxWordLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxWordLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinDocumentFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinDocumentFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual MinimumShouldMatch get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinTermFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinTermFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinWordLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinWordLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IPerFieldAnalyzer get_PerFieldAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PerFieldAnalyzer(IPerFieldAnalyzer value);
    [CompilerGeneratedAttribute]
public sealed virtual Routing get_Routing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Routing(Routing value);
    [CompilerGeneratedAttribute]
public sealed virtual StopWords get_StopWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopWords(StopWords value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_TermMatchPercentage();
    [CompilerGeneratedAttribute]
public void set_TermMatchPercentage(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<Like> get_Unlike();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Unlike(IEnumerable`1<Like> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<VersionType> get_VersionType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_VersionType(Nullable`1<VersionType> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IMoreLikeThisQuery q);
}
public class OpenSearch.Client.MoreLikeThisQueryDescriptor`1 : QueryDescriptorBase`2<MoreLikeThisQueryDescriptor`1<T>, IMoreLikeThisQuery> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMoreLikeThisQuery.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IMoreLikeThisQuery.BoostTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IMoreLikeThisQuery.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMoreLikeThisQuery.Include>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Like> <OpenSearch.Client.IMoreLikeThisQuery.Like>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMoreLikeThisQuery.MaxDocumentFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMoreLikeThisQuery.MaxQueryTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMoreLikeThisQuery.MaxWordLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMoreLikeThisQuery.MinDocumentFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <OpenSearch.Client.IMoreLikeThisQuery.MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMoreLikeThisQuery.MinTermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMoreLikeThisQuery.MinWordLength>k__BackingField;
    [CompilerGeneratedAttribute]
private IPerFieldAnalyzer <OpenSearch.Client.IMoreLikeThisQuery.PerFieldAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <OpenSearch.Client.IMoreLikeThisQuery.Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <OpenSearch.Client.IMoreLikeThisQuery.StopWords>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Like> <OpenSearch.Client.IMoreLikeThisQuery.Unlike>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IMoreLikeThisQuery.Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VersionType> <OpenSearch.Client.IMoreLikeThisQuery.VersionType>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.IMoreLikeThisQuery.Analyzer { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IMoreLikeThisQuery.BoostTerms { get; private set; }
    private Fields OpenSearch.Client.IMoreLikeThisQuery.Fields { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMoreLikeThisQuery.Include { get; private set; }
    private IEnumerable`1<Like> OpenSearch.Client.IMoreLikeThisQuery.Like { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.MaxDocumentFrequency { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.MaxQueryTerms { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.MaxWordLength { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.MinDocumentFrequency { get; private set; }
    private MinimumShouldMatch OpenSearch.Client.IMoreLikeThisQuery.MinimumShouldMatch { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.MinTermFrequency { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.MinWordLength { get; private set; }
    private IPerFieldAnalyzer OpenSearch.Client.IMoreLikeThisQuery.PerFieldAnalyzer { get; private set; }
    private Routing OpenSearch.Client.IMoreLikeThisQuery.Routing { get; private set; }
    private StopWords OpenSearch.Client.IMoreLikeThisQuery.StopWords { get; private set; }
    private IEnumerable`1<Like> OpenSearch.Client.IMoreLikeThisQuery.Unlike { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IMoreLikeThisQuery.Version { get; private set; }
    private Nullable`1<VersionType> OpenSearch.Client.IMoreLikeThisQuery.VersionType { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMoreLikeThisQuery.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IMoreLikeThisQuery.get_BoostTerms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_BoostTerms(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IMoreLikeThisQuery.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_Fields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMoreLikeThisQuery.get_Include();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_Include(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<Like> OpenSearch.Client.IMoreLikeThisQuery.get_Like();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_Like(IEnumerable`1<Like> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.get_MaxDocumentFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_MaxDocumentFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.get_MaxQueryTerms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_MaxQueryTerms(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.get_MaxWordLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_MaxWordLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.get_MinDocumentFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_MinDocumentFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override MinimumShouldMatch OpenSearch.Client.IMoreLikeThisQuery.get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.get_MinTermFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_MinTermFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMoreLikeThisQuery.get_MinWordLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_MinWordLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPerFieldAnalyzer OpenSearch.Client.IMoreLikeThisQuery.get_PerFieldAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_PerFieldAnalyzer(IPerFieldAnalyzer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Routing OpenSearch.Client.IMoreLikeThisQuery.get_Routing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_Routing(Routing value);
    [CompilerGeneratedAttribute]
private sealed virtual override StopWords OpenSearch.Client.IMoreLikeThisQuery.get_StopWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_StopWords(StopWords value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<Like> OpenSearch.Client.IMoreLikeThisQuery.get_Unlike();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_Unlike(IEnumerable`1<Like> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IMoreLikeThisQuery.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<VersionType> OpenSearch.Client.IMoreLikeThisQuery.get_VersionType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoreLikeThisQuery.set_VersionType(Nullable`1<VersionType> value);
    public MoreLikeThisQueryDescriptor`1<T> Fields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public MoreLikeThisQueryDescriptor`1<T> Fields(Fields fields);
    public MoreLikeThisQueryDescriptor`1<T> StopWords(IEnumerable`1<string> stopWords);
    public MoreLikeThisQueryDescriptor`1<T> StopWords(String[] stopWords);
    public MoreLikeThisQueryDescriptor`1<T> StopWords(StopWords stopWords);
    public MoreLikeThisQueryDescriptor`1<T> MaxQueryTerms(Nullable`1<int> maxQueryTerms);
    public MoreLikeThisQueryDescriptor`1<T> MinTermFrequency(Nullable`1<int> minTermFrequency);
    public MoreLikeThisQueryDescriptor`1<T> MinDocumentFrequency(Nullable`1<int> minDocumentFrequency);
    public MoreLikeThisQueryDescriptor`1<T> MaxDocumentFrequency(Nullable`1<int> maxDocumentFrequency);
    public MoreLikeThisQueryDescriptor`1<T> MinWordLength(Nullable`1<int> minWordLength);
    public MoreLikeThisQueryDescriptor`1<T> MaxWordLength(Nullable`1<int> maxWordLength);
    public MoreLikeThisQueryDescriptor`1<T> BoostTerms(Nullable`1<double> boostTerms);
    public MoreLikeThisQueryDescriptor`1<T> MinimumShouldMatch(MinimumShouldMatch minMatch);
    public MoreLikeThisQueryDescriptor`1<T> Include(Nullable`1<bool> include);
    public MoreLikeThisQueryDescriptor`1<T> Analyzer(string analyzer);
    public MoreLikeThisQueryDescriptor`1<T> Like(Func`2<LikeDescriptor`1<T>, IPromise`1<List`1<Like>>> selector);
    public MoreLikeThisQueryDescriptor`1<T> Unlike(Func`2<LikeDescriptor`1<T>, IPromise`1<List`1<Like>>> selector);
    public MoreLikeThisQueryDescriptor`1<T> PerFieldAnalyzer(Func`2<PerFieldAnalyzerDescriptor`1<T>, IPromise`1<IPerFieldAnalyzer>> analyzerSelector);
    public MoreLikeThisQueryDescriptor`1<T> Version(Nullable`1<long> version);
    public MoreLikeThisQueryDescriptor`1<T> VersionType(Nullable`1<VersionType> versionType);
    public MoreLikeThisQueryDescriptor`1<T> Routing(Routing routing);
}
public class OpenSearch.Client.MoveClusterRerouteCommand : object {
    [CompilerGeneratedAttribute]
private string <FromNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Shard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToNode>k__BackingField;
    public string FromNode { get; public set; }
    public IndexName Index { get; public set; }
    public string Name { get; }
    public Nullable`1<int> Shard { get; public set; }
    public string ToNode { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_FromNode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FromNode(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Shard();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Shard(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ToNode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ToNode(string value);
}
public class OpenSearch.Client.MoveClusterRerouteCommandDescriptor : DescriptorBase`2<MoveClusterRerouteCommandDescriptor, IMoveClusterRerouteCommand> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMoveClusterRerouteCommand.FromNode>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IMoveClusterRerouteCommand.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMoveClusterRerouteCommand.Shard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMoveClusterRerouteCommand.ToNode>k__BackingField;
    private string OpenSearch.Client.IMoveClusterRerouteCommand.FromNode { get; private set; }
    private IndexName OpenSearch.Client.IMoveClusterRerouteCommand.Index { get; private set; }
    private string OpenSearch.Client.IClusterRerouteCommand.Name { get; }
    private Nullable`1<int> OpenSearch.Client.IMoveClusterRerouteCommand.Shard { get; private set; }
    private string OpenSearch.Client.IMoveClusterRerouteCommand.ToNode { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMoveClusterRerouteCommand.get_FromNode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoveClusterRerouteCommand.set_FromNode(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IMoveClusterRerouteCommand.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoveClusterRerouteCommand.set_Index(IndexName value);
    private sealed virtual override string OpenSearch.Client.IClusterRerouteCommand.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMoveClusterRerouteCommand.get_Shard();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoveClusterRerouteCommand.set_Shard(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMoveClusterRerouteCommand.get_ToNode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMoveClusterRerouteCommand.set_ToNode(string value);
    public MoveClusterRerouteCommandDescriptor Index(IndexName index);
    public MoveClusterRerouteCommandDescriptor Index();
    public MoveClusterRerouteCommandDescriptor Shard(Nullable`1<int> shard);
    public MoveClusterRerouteCommandDescriptor FromNode(string fromNode);
    public MoveClusterRerouteCommandDescriptor ToNode(string toNode);
}
public class OpenSearch.Client.MovingAverageAggregation : PipelineAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Minimize>k__BackingField;
    [CompilerGeneratedAttribute]
private IMovingAverageModel <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Predict>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Window>k__BackingField;
    public Nullable`1<bool> Minimize { get; public set; }
    public IMovingAverageModel Model { get; public set; }
    public Nullable`1<int> Predict { get; public set; }
    public Nullable`1<int> Window { get; public set; }
    public MovingAverageAggregation(string name, SingleBucketsPath bucketsPath);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Minimize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Minimize(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IMovingAverageModel get_Model();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Model(IMovingAverageModel value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Predict();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Predict(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Window();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Window(Nullable`1<int> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.MovingAverageAggregationDescriptor : PipelineAggregationDescriptorBase`3<MovingAverageAggregationDescriptor, IMovingAverageAggregation, SingleBucketsPath> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMovingAverageAggregation.Minimize>k__BackingField;
    [CompilerGeneratedAttribute]
private IMovingAverageModel <OpenSearch.Client.IMovingAverageAggregation.Model>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMovingAverageAggregation.Predict>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMovingAverageAggregation.Window>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IMovingAverageAggregation.Minimize { get; private set; }
    private IMovingAverageModel OpenSearch.Client.IMovingAverageAggregation.Model { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMovingAverageAggregation.Predict { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMovingAverageAggregation.Window { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMovingAverageAggregation.get_Minimize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMovingAverageAggregation.set_Minimize(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMovingAverageModel OpenSearch.Client.IMovingAverageAggregation.get_Model();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMovingAverageAggregation.set_Model(IMovingAverageModel value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMovingAverageAggregation.get_Predict();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMovingAverageAggregation.set_Predict(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMovingAverageAggregation.get_Window();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMovingAverageAggregation.set_Window(Nullable`1<int> value);
    public MovingAverageAggregationDescriptor Minimize(Nullable`1<bool> minimize);
    public MovingAverageAggregationDescriptor Window(Nullable`1<int> window);
    public MovingAverageAggregationDescriptor Predict(Nullable`1<int> predict);
    public MovingAverageAggregationDescriptor Model(Func`2<MovingAverageModelDescriptor, IMovingAverageModel> modelSelector);
}
internal class OpenSearch.Client.MovingAverageAggregationFormatter : object {
    private static AutomataDictionary AutomataDictionary;
    private static AutomataDictionary ModelDictionary;
    private static MovingAverageAggregationFormatter();
    public sealed virtual IMovingAverageAggregation Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IMovingAverageAggregation value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, TModel model, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.MovingAverageModelDescriptor : DescriptorBase`2<MovingAverageModelDescriptor, IDescriptor> {
    public IEwmaModel Ewma(Func`2<EwmaModelDescriptor, IEwmaModel> ewmaSelector);
    public IHoltLinearModel HoltLinear(Func`2<HoltLinearModelDescriptor, IHoltLinearModel> holtSelector);
    public IHoltWintersModel HoltWinters(Func`2<HoltWintersModelDescriptor, IHoltWintersModel> holtWintersSelector);
    public ILinearModel Linear(Func`2<LinearModelDescriptor, ILinearModel> linearSelector);
    public ISimpleModel Simple(Func`2<SimpleModelDescriptor, ISimpleModel> simpleSelector);
}
public class OpenSearch.Client.MovingFunctionAggregation : PipelineAggregationBase {
    [CompilerGeneratedAttribute]
private string <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Window>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Shift>k__BackingField;
    public string Script { get; public set; }
    public Nullable`1<int> Window { get; public set; }
    public Nullable`1<int> Shift { get; public set; }
    public MovingFunctionAggregation(string name, SingleBucketsPath bucketsPath);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Window();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Window(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Shift();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Shift(Nullable`1<int> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.MovingFunctionAggregationDescriptor : PipelineAggregationDescriptorBase`3<MovingFunctionAggregationDescriptor, IMovingFunctionAggregation, SingleBucketsPath> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMovingFunctionAggregation.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMovingFunctionAggregation.Window>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMovingFunctionAggregation.Shift>k__BackingField;
    private string OpenSearch.Client.IMovingFunctionAggregation.Script { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMovingFunctionAggregation.Window { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMovingFunctionAggregation.Shift { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMovingFunctionAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMovingFunctionAggregation.set_Script(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMovingFunctionAggregation.get_Window();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMovingFunctionAggregation.set_Window(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMovingFunctionAggregation.get_Shift();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMovingFunctionAggregation.set_Shift(Nullable`1<int> value);
    public MovingFunctionAggregationDescriptor Window(Nullable`1<int> windowSize);
    public MovingFunctionAggregationDescriptor Script(string script);
    public MovingFunctionAggregationDescriptor Shift(Nullable`1<int> shift);
}
public class OpenSearch.Client.MultiBucketAggregate`1 : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<TBucket> <Buckets>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Meta>k__BackingField;
    public IReadOnlyCollection`1<TBucket> Buckets { get; public set; }
    public IReadOnlyDictionary`2<string, object> Meta { get; public set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<TBucket> get_Buckets();
    [CompilerGeneratedAttribute]
public void set_Buckets(IReadOnlyCollection`1<TBucket> value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(IReadOnlyDictionary`2<string, object> value);
}
public class OpenSearch.Client.MultiBucketsPath : IsADictionaryBase`2<string, string> {
    public MultiBucketsPath(IDictionary`2<string, string> container);
    public MultiBucketsPath(Dictionary`2<string, string> container);
    public sealed virtual void Add(string name, string bucketsPath);
    public static MultiBucketsPath op_Implicit(Dictionary`2<string, string> bucketsPath);
}
public class OpenSearch.Client.MultiBucketsPathDescriptor : IsADictionaryDescriptorBase`4<MultiBucketsPathDescriptor, IMultiBucketsPath, string, string> {
    public MultiBucketsPathDescriptor Add(string name, string bucketsPath);
}
public class OpenSearch.Client.MultiGetDescriptor : RequestDescriptorBase`3<MultiGetDescriptor, MultiGetRequestParameters, IMultiGetRequest> {
    private List`1<IMultiGetOperation> _operations;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.IMultiGetRequest.Index { get; }
    private IEnumerable`1<IMultiGetOperation> OpenSearch.Client.IMultiGetRequest.Documents { get; private set; }
    private Fields OpenSearch.Client.IMultiGetRequest.StoredFields { get; private set; }
    public MultiGetDescriptor(IndexName index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IMultiGetRequest.get_Index();
    public MultiGetDescriptor Index(IndexName index);
    public MultiGetDescriptor Index();
    public MultiGetDescriptor Preference(string preference);
    public MultiGetDescriptor Realtime(Nullable`1<bool> realtime);
    public MultiGetDescriptor Refresh(Nullable`1<bool> refresh);
    public MultiGetDescriptor Routing(Routing routing);
    public MultiGetDescriptor SourceEnabled(Nullable`1<bool> sourceenabled);
    public MultiGetDescriptor SourceExcludes(Fields sourceexcludes);
    public MultiGetDescriptor SourceExcludes(Expression`1[] fields);
    public MultiGetDescriptor SourceIncludes(Fields sourceincludes);
    public MultiGetDescriptor SourceIncludes(Expression`1[] fields);
    protected sealed virtual void RequestDefaults(MultiGetRequestParameters parameters);
    private sealed virtual override IEnumerable`1<IMultiGetOperation> OpenSearch.Client.IMultiGetRequest.get_Documents();
    private sealed virtual override void OpenSearch.Client.IMultiGetRequest.set_Documents(IEnumerable`1<IMultiGetOperation> value);
    private sealed virtual override Fields OpenSearch.Client.IMultiGetRequest.get_StoredFields();
    private sealed virtual override void OpenSearch.Client.IMultiGetRequest.set_StoredFields(Fields value);
    public MultiGetDescriptor Get(Func`2<MultiGetOperationDescriptor`1<T>, IMultiGetOperation> getSelector);
    public MultiGetDescriptor GetMany(IEnumerable`1<long> ids, Func`3<MultiGetOperationDescriptor`1<T>, long, IMultiGetOperation> getSelector);
    public MultiGetDescriptor GetMany(IEnumerable`1<string> ids, Func`3<MultiGetOperationDescriptor`1<T>, string, IMultiGetOperation> getSelector);
    public MultiGetDescriptor GetMany(IEnumerable`1<Id> ids, Func`3<MultiGetOperationDescriptor`1<T>, Id, IMultiGetOperation> getSelector);
    public MultiGetDescriptor StoredFields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public MultiGetDescriptor StoredFields(Fields fields);
}
[DataContractAttribute]
public class OpenSearch.Client.MultiGetHit`1 : object {
    [CompilerGeneratedAttribute]
private Error <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private FieldValues <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Found>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <PrimaryTerm>k__BackingField;
    [DataMemberAttribute]
public Error Error { get; internal set; }
    [DataMemberAttribute]
public FieldValues Fields { get; internal set; }
    [DataMemberAttribute]
public bool Found { get; internal set; }
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public string Index { get; internal set; }
    [DataMemberAttribute]
public string Routing { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1")]
public TDocument Source { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [DataMemberAttribute]
public long Version { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<long> SequenceNumber { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<long> PrimaryTerm { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual Error get_Error();
    [CompilerGeneratedAttribute]
internal void set_Error(Error value);
    [CompilerGeneratedAttribute]
public FieldValues get_Fields();
    [CompilerGeneratedAttribute]
internal void set_Fields(FieldValues value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Found();
    [CompilerGeneratedAttribute]
internal void set_Found(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Routing();
    [CompilerGeneratedAttribute]
internal void set_Routing(string value);
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_Source();
    [CompilerGeneratedAttribute]
internal void set_Source(TDocument value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(long value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_SequenceNumber();
    [CompilerGeneratedAttribute]
internal void set_SequenceNumber(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_PrimaryTerm();
    [CompilerGeneratedAttribute]
internal void set_PrimaryTerm(Nullable`1<long> value);
}
public class OpenSearch.Client.MultiGetOperation`1 : object {
    [CompilerGeneratedAttribute]
private object <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <StoredFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VersionType> <VersionType>k__BackingField;
    public object Document { get; public set; }
    public Id Id { get; public set; }
    public IndexName Index { get; public set; }
    public string Routing { get; public set; }
    public Union`2<bool, ISourceFilter> Source { get; public set; }
    public Fields StoredFields { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    private bool OpenSearch.Client.IMultiGetOperation.CanBeFlattened { get; }
    private Type OpenSearch.Client.IMultiGetOperation.ClrType { get; }
    public MultiGetOperation`1(Id id);
    [CompilerGeneratedAttribute]
public object get_Document();
    [CompilerGeneratedAttribute]
public void set_Document(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Id get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Id value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Routing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Routing(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<bool, ISourceFilter> get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(Union`2<bool, ISourceFilter> value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_StoredFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StoredFields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<VersionType> get_VersionType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_VersionType(Nullable`1<VersionType> value);
    private sealed virtual override bool OpenSearch.Client.IMultiGetOperation.get_CanBeFlattened();
    private sealed virtual override Type OpenSearch.Client.IMultiGetOperation.get_ClrType();
}
public class OpenSearch.Client.MultiGetOperationDescriptor`1 : DescriptorBase`2<MultiGetOperationDescriptor`1<T>, IMultiGetOperation> {
    [CompilerGeneratedAttribute]
private Id <OpenSearch.Client.IMultiGetOperation.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IMultiGetOperation.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMultiGetOperation.Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <OpenSearch.Client.IMultiGetOperation.Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IMultiGetOperation.StoredFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IMultiGetOperation.Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VersionType> <OpenSearch.Client.IMultiGetOperation.VersionType>k__BackingField;
    private bool OpenSearch.Client.IMultiGetOperation.CanBeFlattened { get; }
    private Type OpenSearch.Client.IMultiGetOperation.ClrType { get; }
    private Id OpenSearch.Client.IMultiGetOperation.Id { get; private set; }
    private IndexName OpenSearch.Client.IMultiGetOperation.Index { get; private set; }
    private string OpenSearch.Client.IMultiGetOperation.Routing { get; private set; }
    private Union`2<bool, ISourceFilter> OpenSearch.Client.IMultiGetOperation.Source { get; private set; }
    private Fields OpenSearch.Client.IMultiGetOperation.StoredFields { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IMultiGetOperation.Version { get; private set; }
    private Nullable`1<VersionType> OpenSearch.Client.IMultiGetOperation.VersionType { get; private set; }
    public MultiGetOperationDescriptor`1(bool allowExplicitIndex);
    private sealed virtual override bool OpenSearch.Client.IMultiGetOperation.get_CanBeFlattened();
    private sealed virtual override Type OpenSearch.Client.IMultiGetOperation.get_ClrType();
    [CompilerGeneratedAttribute]
private sealed virtual override Id OpenSearch.Client.IMultiGetOperation.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiGetOperation.set_Id(Id value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IMultiGetOperation.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiGetOperation.set_Index(IndexName value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMultiGetOperation.get_Routing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiGetOperation.set_Routing(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<bool, ISourceFilter> OpenSearch.Client.IMultiGetOperation.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiGetOperation.set_Source(Union`2<bool, ISourceFilter> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IMultiGetOperation.get_StoredFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiGetOperation.set_StoredFields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IMultiGetOperation.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiGetOperation.set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<VersionType> OpenSearch.Client.IMultiGetOperation.get_VersionType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiGetOperation.set_VersionType(Nullable`1<VersionType> value);
    public MultiGetOperationDescriptor`1<T> Index(IndexName index);
    public MultiGetOperationDescriptor`1<T> Id(Id id);
    public MultiGetOperationDescriptor`1<T> Source(Nullable`1<bool> sourceEnabled);
    public MultiGetOperationDescriptor`1<T> Source(Func`2<SourceFilterDescriptor`1<T>, ISourceFilter> source);
    public MultiGetOperationDescriptor`1<T> Routing(string routing);
    public MultiGetOperationDescriptor`1<T> StoredFields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public MultiGetOperationDescriptor`1<T> StoredFields(Fields fields);
    public MultiGetOperationDescriptor`1<T> Version(Nullable`1<long> version);
    public MultiGetOperationDescriptor`1<T> VersionType(Nullable`1<VersionType> versionType);
}
public class OpenSearch.Client.MultiGetRequest : PlainRequestBase`1<MultiGetRequestParameters> {
    [CompilerGeneratedAttribute]
private Fields <StoredFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IMultiGetOperation> <Documents>k__BackingField;
    public Fields StoredFields { get; public set; }
    public IEnumerable`1<IMultiGetOperation> Documents { get; public set; }
    protected IMultiGetRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IMultiGetRequest.Index { get; }
    public string Preference { get; public set; }
    public Nullable`1<bool> Realtime { get; public set; }
    public Nullable`1<bool> Refresh { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<bool> SourceEnabled { get; public set; }
    public Fields SourceExcludes { get; public set; }
    public Fields SourceIncludes { get; public set; }
    public MultiGetRequest(IndexName index);
    protected sealed virtual void RequestDefaults(MultiGetRequestParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_StoredFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StoredFields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IMultiGetOperation> get_Documents();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Documents(IEnumerable`1<IMultiGetOperation> value);
    protected IMultiGetRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IMultiGetRequest.get_Index();
    public string get_Preference();
    public void set_Preference(string value);
    public Nullable`1<bool> get_Realtime();
    public void set_Realtime(Nullable`1<bool> value);
    public Nullable`1<bool> get_Refresh();
    public void set_Refresh(Nullable`1<bool> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Nullable`1<bool> get_SourceEnabled();
    public void set_SourceEnabled(Nullable`1<bool> value);
    public Fields get_SourceExcludes();
    public void set_SourceExcludes(Fields value);
    public Fields get_SourceIncludes();
    public void set_SourceIncludes(Fields value);
}
internal class OpenSearch.Client.MultiGetRequestFormatter : object {
    private static IdFormatter IdFormatter;
    private static MultiGetRequestFormatter();
    public sealed virtual IMultiGetRequest Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IMultiGetRequest value, IJsonFormatterResolver formatterResolver);
}
[DataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.MultiGetResponseFormatter")]
public class OpenSearch.Client.MultiGetResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private ICollection`1<IMultiGetHit`1<object>> <InternalHits>k__BackingField;
    public IReadOnlyCollection`1<IMultiGetHit`1<object>> Hits { get; }
    public bool IsValid { get; }
    internal ICollection`1<IMultiGetHit`1<object>> InternalHits { get; internal set; }
    public IReadOnlyCollection`1<IMultiGetHit`1<object>> get_Hits();
    public virtual bool get_IsValid();
    [CompilerGeneratedAttribute]
internal ICollection`1<IMultiGetHit`1<object>> get_InternalHits();
    [CompilerGeneratedAttribute]
internal void set_InternalHits(ICollection`1<IMultiGetHit`1<object>> value);
    public MultiGetHit`1<T> Get(string id);
    public MultiGetHit`1<T> Get(long id);
    public FieldValues GetFieldSelection(long id);
    public FieldValues GetFieldValues(string id);
    [IteratorStateMachineAttribute("OpenSearch.Client.MultiGetResponse/<GetMany>d__12`1")]
public IEnumerable`1<IMultiGetHit`1<T>> GetMany(IEnumerable`1<string> ids);
    public IEnumerable`1<IMultiGetHit`1<T>> GetMany(IEnumerable`1<long> ids);
    public T Source(string id);
    public T Source(long id);
    public IEnumerable`1<T> SourceMany(IEnumerable`1<string> ids);
    public IEnumerable`1<T> SourceMany(IEnumerable`1<long> ids);
}
internal class OpenSearch.Client.MultiGetResponseBuilder : CustomResponseBuilderBase {
    [CompilerGeneratedAttribute]
private MultiGetResponseFormatter <Formatter>k__BackingField;
    private MultiGetResponseFormatter Formatter { get; }
    public MultiGetResponseBuilder(IMultiGetRequest request);
    [CompilerGeneratedAttribute]
private MultiGetResponseFormatter get_Formatter();
    public virtual object DeserializeResponse(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream);
    [AsyncStateMachineAttribute("OpenSearch.Client.MultiGetResponseBuilder/<DeserializeResponseAsync>d__5")]
public virtual Task`1<object> DeserializeResponseAsync(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream, CancellationToken ctx);
}
internal class OpenSearch.Client.MultiGetResponseFormatter : object {
    private static MethodInfo MakeDelegateMethodInfo;
    private IMultiGetRequest _request;
    public MultiGetResponseFormatter(IMultiGetRequest request);
    private static MultiGetResponseFormatter();
    public sealed virtual MultiGetResponse Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, MultiGetResponse value, IJsonFormatterResolver formatterResolver);
    private static void CreateMultiHit(MultiHitTuple tuple, IJsonFormatterResolver formatterResolver, ICollection`1<IMultiGetHit`1<object>> collection);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.MultiLineStringGeoShape>")]
public class OpenSearch.Client.MultiLineStringGeoShape : GeoShapeBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IEnumerable`1<GeoCoordinate>> <Coordinates>k__BackingField;
    public IEnumerable`1<IEnumerable`1<GeoCoordinate>> Coordinates { get; public set; }
    public MultiLineStringGeoShape(IEnumerable`1<IEnumerable`1<GeoCoordinate>> coordinates);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IEnumerable`1<GeoCoordinate>> get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(IEnumerable`1<IEnumerable`1<GeoCoordinate>> value);
}
public class OpenSearch.Client.MultiMatchQuery : QueryBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoGenerateSynonymsPhraseQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <CutoffFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Fuzziness <Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <FuzzyRewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FuzzyTranspositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Operator> <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Slop>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <TieBreaker>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TextQueryType> <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseDisMax>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ZeroTermsQuery> <ZeroTermsQuery>k__BackingField;
    public string Analyzer { get; public set; }
    public Nullable`1<bool> AutoGenerateSynonymsPhraseQuery { get; public set; }
    public Nullable`1<double> CutoffFrequency { get; public set; }
    public Fields Fields { get; public set; }
    public Fuzziness Fuzziness { get; public set; }
    public MultiTermQueryRewrite FuzzyRewrite { get; public set; }
    public Nullable`1<bool> FuzzyTranspositions { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public Nullable`1<int> MaxExpansions { get; public set; }
    public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    public Nullable`1<Operator> Operator { get; public set; }
    public Nullable`1<int> PrefixLength { get; public set; }
    public string Query { get; public set; }
    public Nullable`1<int> Slop { get; public set; }
    public Nullable`1<double> TieBreaker { get; public set; }
    public Nullable`1<TextQueryType> Type { get; public set; }
    public Nullable`1<bool> UseDisMax { get; public set; }
    public Nullable`1<ZeroTermsQuery> ZeroTermsQuery { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AutoGenerateSynonymsPhraseQuery();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_CutoffFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CutoffFrequency(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Fuzziness get_Fuzziness();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fuzziness(Fuzziness value);
    [CompilerGeneratedAttribute]
public sealed virtual MultiTermQueryRewrite get_FuzzyRewrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyRewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_FuzzyTranspositions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyTranspositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Lenient();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxExpansions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual MinimumShouldMatch get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Operator> get_Operator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Operator(Nullable`1<Operator> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PrefixLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Slop();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slop(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_TieBreaker();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TieBreaker(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TextQueryType> get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(Nullable`1<TextQueryType> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_UseDisMax();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseDisMax(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ZeroTermsQuery> get_ZeroTermsQuery();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ZeroTermsQuery(Nullable`1<ZeroTermsQuery> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IMultiMatchQuery q);
}
[DataContractAttribute]
public class OpenSearch.Client.MultiMatchQueryDescriptor`1 : QueryDescriptorBase`2<MultiMatchQueryDescriptor`1<T>, IMultiMatchQuery> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMultiMatchQuery.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMultiMatchQuery.AutoGenerateSynonymsPhraseQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IMultiMatchQuery.CutoffFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IMultiMatchQuery.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Fuzziness <OpenSearch.Client.IMultiMatchQuery.Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <OpenSearch.Client.IMultiMatchQuery.FuzzyRewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMultiMatchQuery.FuzzyTranspositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMultiMatchQuery.Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMultiMatchQuery.MaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <OpenSearch.Client.IMultiMatchQuery.MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Operator> <OpenSearch.Client.IMultiMatchQuery.Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMultiMatchQuery.PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMultiMatchQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMultiMatchQuery.Slop>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IMultiMatchQuery.TieBreaker>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TextQueryType> <OpenSearch.Client.IMultiMatchQuery.Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMultiMatchQuery.UseDisMax>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ZeroTermsQuery> <OpenSearch.Client.IMultiMatchQuery.ZeroTermsQuery>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.IMultiMatchQuery.Analyzer { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMultiMatchQuery.AutoGenerateSynonymsPhraseQuery { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IMultiMatchQuery.CutoffFrequency { get; private set; }
    private Fields OpenSearch.Client.IMultiMatchQuery.Fields { get; private set; }
    private Fuzziness OpenSearch.Client.IMultiMatchQuery.Fuzziness { get; private set; }
    private MultiTermQueryRewrite OpenSearch.Client.IMultiMatchQuery.FuzzyRewrite { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMultiMatchQuery.FuzzyTranspositions { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMultiMatchQuery.Lenient { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMultiMatchQuery.MaxExpansions { get; private set; }
    private MinimumShouldMatch OpenSearch.Client.IMultiMatchQuery.MinimumShouldMatch { get; private set; }
    private Nullable`1<Operator> OpenSearch.Client.IMultiMatchQuery.Operator { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMultiMatchQuery.PrefixLength { get; private set; }
    private string OpenSearch.Client.IMultiMatchQuery.Query { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMultiMatchQuery.Slop { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IMultiMatchQuery.TieBreaker { get; private set; }
    private Nullable`1<TextQueryType> OpenSearch.Client.IMultiMatchQuery.Type { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMultiMatchQuery.UseDisMax { get; private set; }
    private Nullable`1<ZeroTermsQuery> OpenSearch.Client.IMultiMatchQuery.ZeroTermsQuery { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMultiMatchQuery.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMultiMatchQuery.get_AutoGenerateSynonymsPhraseQuery();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IMultiMatchQuery.get_CutoffFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_CutoffFrequency(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IMultiMatchQuery.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_Fields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fuzziness OpenSearch.Client.IMultiMatchQuery.get_Fuzziness();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_Fuzziness(Fuzziness value);
    [CompilerGeneratedAttribute]
private sealed virtual override MultiTermQueryRewrite OpenSearch.Client.IMultiMatchQuery.get_FuzzyRewrite();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_FuzzyRewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMultiMatchQuery.get_FuzzyTranspositions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_FuzzyTranspositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMultiMatchQuery.get_Lenient();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMultiMatchQuery.get_MaxExpansions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_MaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override MinimumShouldMatch OpenSearch.Client.IMultiMatchQuery.get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<Operator> OpenSearch.Client.IMultiMatchQuery.get_Operator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_Operator(Nullable`1<Operator> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMultiMatchQuery.get_PrefixLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMultiMatchQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_Query(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMultiMatchQuery.get_Slop();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_Slop(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IMultiMatchQuery.get_TieBreaker();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_TieBreaker(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TextQueryType> OpenSearch.Client.IMultiMatchQuery.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_Type(Nullable`1<TextQueryType> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMultiMatchQuery.get_UseDisMax();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_UseDisMax(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<ZeroTermsQuery> OpenSearch.Client.IMultiMatchQuery.get_ZeroTermsQuery();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiMatchQuery.set_ZeroTermsQuery(Nullable`1<ZeroTermsQuery> value);
    public MultiMatchQueryDescriptor`1<T> Fields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public MultiMatchQueryDescriptor`1<T> Fields(Fields fields);
    public MultiMatchQueryDescriptor`1<T> Query(string query);
    public MultiMatchQueryDescriptor`1<T> Analyzer(string analyzer);
    public MultiMatchQueryDescriptor`1<T> Fuzziness(Fuzziness fuzziness);
    public MultiMatchQueryDescriptor`1<T> CutoffFrequency(Nullable`1<double> cutoffFrequency);
    public MultiMatchQueryDescriptor`1<T> MinimumShouldMatch(MinimumShouldMatch minimumShouldMatch);
    public MultiMatchQueryDescriptor`1<T> FuzzyRewrite(MultiTermQueryRewrite rewrite);
    public MultiMatchQueryDescriptor`1<T> FuzzyTranspositions(Nullable`1<bool> fuzzyTranpositions);
    public MultiMatchQueryDescriptor`1<T> Lenient(Nullable`1<bool> lenient);
    public MultiMatchQueryDescriptor`1<T> PrefixLength(Nullable`1<int> prefixLength);
    public MultiMatchQueryDescriptor`1<T> MaxExpansions(Nullable`1<int> maxExpansions);
    public MultiMatchQueryDescriptor`1<T> Slop(Nullable`1<int> slop);
    public MultiMatchQueryDescriptor`1<T> Operator(Nullable`1<Operator> op);
    public MultiMatchQueryDescriptor`1<T> TieBreaker(Nullable`1<double> tieBreaker);
    public MultiMatchQueryDescriptor`1<T> Type(Nullable`1<TextQueryType> type);
    public MultiMatchQueryDescriptor`1<T> UseDisMax(Nullable`1<bool> useDisMax);
    public MultiMatchQueryDescriptor`1<T> ZeroTermsQuery(Nullable`1<ZeroTermsQuery> zeroTermsQuery);
    public MultiMatchQueryDescriptor`1<T> AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> autoGenerateSynonymsPhraseQuery);
}
public class OpenSearch.Client.MultiplexerTokenFilter : TokenFilterBase {
    internal static string TokenType;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreserveOriginal>k__BackingField;
    public IEnumerable`1<string> Filters { get; public set; }
    public Nullable`1<bool> PreserveOriginal { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Filters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filters(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PreserveOriginal();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreserveOriginal(Nullable`1<bool> value);
}
public class OpenSearch.Client.MultiplexerTokenFilterDescriptor : TokenFilterDescriptorBase`2<MultiplexerTokenFilterDescriptor, IMultiplexerTokenFilter> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IMultiplexerTokenFilter.Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMultiplexerTokenFilter.PreserveOriginal>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.IMultiplexerTokenFilter.Filters { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMultiplexerTokenFilter.PreserveOriginal { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IMultiplexerTokenFilter.get_Filters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiplexerTokenFilter.set_Filters(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMultiplexerTokenFilter.get_PreserveOriginal();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiplexerTokenFilter.set_PreserveOriginal(Nullable`1<bool> value);
    public MultiplexerTokenFilterDescriptor Filters(IEnumerable`1<string> filters);
    public MultiplexerTokenFilterDescriptor Filters(String[] filters);
    public MultiplexerTokenFilterDescriptor PreserveOriginal(Nullable`1<bool> preserve);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.MultiPointGeoShape>")]
public class OpenSearch.Client.MultiPointGeoShape : GeoShapeBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<GeoCoordinate> <Coordinates>k__BackingField;
    public IEnumerable`1<GeoCoordinate> Coordinates { get; public set; }
    public MultiPointGeoShape(IEnumerable`1<GeoCoordinate> coordinates);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<GeoCoordinate> get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(IEnumerable`1<GeoCoordinate> value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.MultiPolygonGeoShape>")]
public class OpenSearch.Client.MultiPolygonGeoShape : GeoShapeBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IEnumerable`1<IEnumerable`1<GeoCoordinate>>> <Coordinates>k__BackingField;
    public IEnumerable`1<IEnumerable`1<IEnumerable`1<GeoCoordinate>>> Coordinates { get; public set; }
    public MultiPolygonGeoShape(IEnumerable`1<IEnumerable`1<IEnumerable`1<GeoCoordinate>>> coordinates);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IEnumerable`1<IEnumerable`1<GeoCoordinate>>> get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(IEnumerable`1<IEnumerable`1<IEnumerable`1<GeoCoordinate>>> value);
}
public class OpenSearch.Client.MultiSearchDescriptor : RequestDescriptorBase`3<MultiSearchDescriptor, MultiSearchRequestParameters, IMultiSearchRequest> {
    private IDictionary`2<string, ISearchRequest> _operations;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IMultiSearchRequest.Index { get; }
    private IDictionary`2<string, ISearchRequest> OpenSearch.Client.IMultiSearchRequest.Operations { get; private set; }
    public MultiSearchDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IMultiSearchRequest.get_Index();
    public MultiSearchDescriptor Index(Indices index);
    public MultiSearchDescriptor Index();
    public MultiSearchDescriptor AllIndices();
    public MultiSearchDescriptor CcsMinimizeRoundtrips(Nullable`1<bool> ccsminimizeroundtrips);
    public MultiSearchDescriptor MaxConcurrentSearches(Nullable`1<long> maxconcurrentsearches);
    public MultiSearchDescriptor MaxConcurrentShardRequests(Nullable`1<long> maxconcurrentshardrequests);
    public MultiSearchDescriptor PreFilterShardSize(Nullable`1<long> prefiltershardsize);
    public MultiSearchDescriptor SearchType(Nullable`1<SearchType> searchtype);
    public MultiSearchDescriptor TotalHitsAsInteger(Nullable`1<bool> totalhitsasinteger);
    public MultiSearchDescriptor TypedKeys(Nullable`1<bool> typedkeys);
    protected sealed virtual void RequestDefaults(MultiSearchRequestParameters parameters);
    private sealed virtual override IDictionary`2<string, ISearchRequest> OpenSearch.Client.IMultiSearchRequest.get_Operations();
    private sealed virtual override void OpenSearch.Client.IMultiSearchRequest.set_Operations(IDictionary`2<string, ISearchRequest> value);
    public MultiSearchDescriptor Search(string name, Func`2<SearchDescriptor`1<T>, ISearchRequest> searchSelector);
    public MultiSearchDescriptor Search(Func`2<SearchDescriptor`1<T>, ISearchRequest> searchSelector);
}
internal class OpenSearch.Client.MultiSearchFormatter : object {
    private static byte Newline;
    public sealed virtual IMultiSearchRequest Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IMultiSearchRequest value, IJsonFormatterResolver formatterResolver);
    [CompilerGeneratedAttribute]
internal static string <Serialize>g__GetString|2_0(string key, <>c__DisplayClass2_0& , <>c__DisplayClass2_1& );
}
public class OpenSearch.Client.MultiSearchRequest : PlainRequestBase`1<MultiSearchRequestParameters> {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ISearchRequest> <Operations>k__BackingField;
    protected IMultiSearchRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IMultiSearchRequest.Index { get; }
    public Nullable`1<bool> CcsMinimizeRoundtrips { get; public set; }
    public Nullable`1<long> MaxConcurrentSearches { get; public set; }
    public Nullable`1<long> MaxConcurrentShardRequests { get; public set; }
    public Nullable`1<long> PreFilterShardSize { get; public set; }
    public Nullable`1<SearchType> SearchType { get; public set; }
    public Nullable`1<bool> TotalHitsAsInteger { get; public set; }
    public Nullable`1<bool> TypedKeys { get; public set; }
    public IDictionary`2<string, ISearchRequest> Operations { get; public set; }
    public MultiSearchRequest(Indices index);
    protected IMultiSearchRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IMultiSearchRequest.get_Index();
    public Nullable`1<bool> get_CcsMinimizeRoundtrips();
    public void set_CcsMinimizeRoundtrips(Nullable`1<bool> value);
    public Nullable`1<long> get_MaxConcurrentSearches();
    public void set_MaxConcurrentSearches(Nullable`1<long> value);
    public Nullable`1<long> get_MaxConcurrentShardRequests();
    public void set_MaxConcurrentShardRequests(Nullable`1<long> value);
    public Nullable`1<long> get_PreFilterShardSize();
    public void set_PreFilterShardSize(Nullable`1<long> value);
    public Nullable`1<SearchType> get_SearchType();
    public void set_SearchType(Nullable`1<SearchType> value);
    public Nullable`1<bool> get_TotalHitsAsInteger();
    public void set_TotalHitsAsInteger(Nullable`1<bool> value);
    public Nullable`1<bool> get_TypedKeys();
    public void set_TypedKeys(Nullable`1<bool> value);
    protected sealed virtual void RequestDefaults(MultiSearchRequestParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, ISearchRequest> get_Operations();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Operations(IDictionary`2<string, ISearchRequest> value);
}
[DataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.MultiSearchResponseFormatter")]
public class OpenSearch.Client.MultiSearchResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private long <Took>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IResponse> <Responses>k__BackingField;
    public long Took { get; public set; }
    public IEnumerable`1<IResponse> AllResponses { get; }
    public bool IsValid { get; }
    public int TotalResponses { get; }
    [JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryInterfaceKeysFormatter`2<System.String,OpenSearch.Client.IResponse>")]
internal IDictionary`2<string, IResponse> Responses { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Took();
    [CompilerGeneratedAttribute]
public void set_Took(long value);
    public IEnumerable`1<IResponse> get_AllResponses();
    public virtual bool get_IsValid();
    public int get_TotalResponses();
    [CompilerGeneratedAttribute]
internal IDictionary`2<string, IResponse> get_Responses();
    [CompilerGeneratedAttribute]
internal void set_Responses(IDictionary`2<string, IResponse> value);
    public IEnumerable`1<IResponse> GetInvalidResponses();
    public ISearchResponse`1<T> GetResponse(string name);
    public IEnumerable`1<ISearchResponse`1<T>> GetResponses();
    protected virtual void DebugIsValid(StringBuilder sb);
    [IteratorStateMachineAttribute("OpenSearch.Client.MultiSearchResponse/<_allResponses>d__19`1")]
private IEnumerable`1<T> _allResponses();
}
internal class OpenSearch.Client.MultiSearchResponseBuilder : CustomResponseBuilderBase {
    [CompilerGeneratedAttribute]
private MultiSearchResponseFormatter <Formatter>k__BackingField;
    private MultiSearchResponseFormatter Formatter { get; }
    public MultiSearchResponseBuilder(IRequest request);
    [CompilerGeneratedAttribute]
private MultiSearchResponseFormatter get_Formatter();
    public virtual object DeserializeResponse(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream);
    [AsyncStateMachineAttribute("OpenSearch.Client.MultiSearchResponseBuilder/<DeserializeResponseAsync>d__5")]
public virtual Task`1<object> DeserializeResponseAsync(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream, CancellationToken ctx);
}
internal class OpenSearch.Client.MultiSearchResponseFormatter : object {
    private static MethodInfo MakeDelegateMethodInfo;
    private IRequest _request;
    public MultiSearchResponseFormatter(IRequest request);
    private static MultiSearchResponseFormatter();
    public sealed virtual MultiSearchResponse Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, MultiSearchResponse value, IJsonFormatterResolver formatterResolver);
    private static void CreateSearchResponse(SearchHitTuple tuple, IJsonFormatterResolver formatterResolver, IDictionary`2<string, IResponse> collection);
}
public class OpenSearch.Client.MultiSearchTemplateDescriptor : RequestDescriptorBase`3<MultiSearchTemplateDescriptor, MultiSearchTemplateRequestParameters, IMultiSearchTemplateRequest> {
    private IDictionary`2<string, ISearchTemplateRequest> _operations;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IMultiSearchTemplateRequest.Index { get; }
    private IDictionary`2<string, ISearchTemplateRequest> OpenSearch.Client.IMultiSearchTemplateRequest.Operations { get; private set; }
    public MultiSearchTemplateDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IMultiSearchTemplateRequest.get_Index();
    public MultiSearchTemplateDescriptor Index(Indices index);
    public MultiSearchTemplateDescriptor Index();
    public MultiSearchTemplateDescriptor AllIndices();
    public MultiSearchTemplateDescriptor CcsMinimizeRoundtrips(Nullable`1<bool> ccsminimizeroundtrips);
    public MultiSearchTemplateDescriptor MaxConcurrentSearches(Nullable`1<long> maxconcurrentsearches);
    public MultiSearchTemplateDescriptor SearchType(Nullable`1<SearchType> searchtype);
    public MultiSearchTemplateDescriptor TotalHitsAsInteger(Nullable`1<bool> totalhitsasinteger);
    public MultiSearchTemplateDescriptor TypedKeys(Nullable`1<bool> typedkeys);
    protected sealed virtual void RequestDefaults(MultiSearchTemplateRequestParameters parameters);
    private sealed virtual override IDictionary`2<string, ISearchTemplateRequest> OpenSearch.Client.IMultiSearchTemplateRequest.get_Operations();
    private sealed virtual override void OpenSearch.Client.IMultiSearchTemplateRequest.set_Operations(IDictionary`2<string, ISearchTemplateRequest> value);
    public MultiSearchTemplateDescriptor Template(string name, Func`2<SearchTemplateDescriptor`1<T>, ISearchTemplateRequest> selector);
    public MultiSearchTemplateDescriptor Template(Func`2<SearchTemplateDescriptor`1<T>, ISearchTemplateRequest> selector);
}
internal class OpenSearch.Client.MultiSearchTemplateFormatter : object {
    private static byte Newline;
    public sealed virtual IMultiSearchTemplateRequest Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IMultiSearchTemplateRequest value, IJsonFormatterResolver formatterResolver);
    [CompilerGeneratedAttribute]
internal static string <Serialize>g__GetString|2_0(string key, <>c__DisplayClass2_0& , <>c__DisplayClass2_1& );
}
public class OpenSearch.Client.MultiSearchTemplateRequest : PlainRequestBase`1<MultiSearchTemplateRequestParameters> {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ISearchTemplateRequest> <Operations>k__BackingField;
    protected IMultiSearchTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IMultiSearchTemplateRequest.Index { get; }
    public Nullable`1<bool> CcsMinimizeRoundtrips { get; public set; }
    public Nullable`1<long> MaxConcurrentSearches { get; public set; }
    public Nullable`1<SearchType> SearchType { get; public set; }
    public Nullable`1<bool> TotalHitsAsInteger { get; public set; }
    public Nullable`1<bool> TypedKeys { get; public set; }
    public IDictionary`2<string, ISearchTemplateRequest> Operations { get; public set; }
    public MultiSearchTemplateRequest(Indices index);
    protected IMultiSearchTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IMultiSearchTemplateRequest.get_Index();
    public Nullable`1<bool> get_CcsMinimizeRoundtrips();
    public void set_CcsMinimizeRoundtrips(Nullable`1<bool> value);
    public Nullable`1<long> get_MaxConcurrentSearches();
    public void set_MaxConcurrentSearches(Nullable`1<long> value);
    public Nullable`1<SearchType> get_SearchType();
    public void set_SearchType(Nullable`1<SearchType> value);
    public Nullable`1<bool> get_TotalHitsAsInteger();
    public void set_TotalHitsAsInteger(Nullable`1<bool> value);
    public Nullable`1<bool> get_TypedKeys();
    public void set_TypedKeys(Nullable`1<bool> value);
    protected sealed virtual void RequestDefaults(MultiSearchTemplateRequestParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, ISearchTemplateRequest> get_Operations();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Operations(IDictionary`2<string, ISearchTemplateRequest> value);
}
[JsonFormatterAttribute("OpenSearch.Client.MultiTermQueryRewriteFormatter")]
public class OpenSearch.Client.MultiTermQueryRewrite : object {
    private static Char[] DigitCharacters;
    private string _value;
    [CompilerGeneratedAttribute]
private static MultiTermQueryRewrite <ConstantScore>k__BackingField;
    [CompilerGeneratedAttribute]
private static MultiTermQueryRewrite <ConstantScoreBoolean>k__BackingField;
    [CompilerGeneratedAttribute]
private RewriteMultiTerm <Rewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private static MultiTermQueryRewrite <ScoringBoolean>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    public static MultiTermQueryRewrite ConstantScore { get; }
    public static MultiTermQueryRewrite ConstantScoreBoolean { get; }
    public RewriteMultiTerm Rewrite { get; }
    public static MultiTermQueryRewrite ScoringBoolean { get; }
    public Nullable`1<int> Size { get; }
    internal MultiTermQueryRewrite(RewriteMultiTerm rewrite, Nullable`1<int> size);
    private static MultiTermQueryRewrite();
    [CompilerGeneratedAttribute]
public static MultiTermQueryRewrite get_ConstantScore();
    [CompilerGeneratedAttribute]
public static MultiTermQueryRewrite get_ConstantScoreBoolean();
    [CompilerGeneratedAttribute]
public RewriteMultiTerm get_Rewrite();
    [CompilerGeneratedAttribute]
public static MultiTermQueryRewrite get_ScoringBoolean();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Size();
    public sealed virtual bool Equals(MultiTermQueryRewrite other);
    public static MultiTermQueryRewrite TopTerms(int size);
    public static MultiTermQueryRewrite TopTermsBoost(int size);
    public static MultiTermQueryRewrite TopTermsBlendedFreqs(int size);
    internal static MultiTermQueryRewrite Create(string value);
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(MultiTermQueryRewrite left, MultiTermQueryRewrite right);
    public static bool op_Inequality(MultiTermQueryRewrite left, MultiTermQueryRewrite right);
}
internal class OpenSearch.Client.MultiTermQueryRewriteFormatter : object {
    public sealed virtual MultiTermQueryRewrite Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, MultiTermQueryRewrite value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.MultiTermsAggregate`1 : MultiBucketAggregate`1<MultiTermsBucket`1<TKey>> {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <DocCountErrorUpperBound>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SumOtherDocCount>k__BackingField;
    public Nullable`1<long> DocCountErrorUpperBound { get; public set; }
    public Nullable`1<long> SumOtherDocCount { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_DocCountErrorUpperBound();
    [CompilerGeneratedAttribute]
public void set_DocCountErrorUpperBound(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SumOtherDocCount();
    [CompilerGeneratedAttribute]
public void set_SumOtherDocCount(Nullable`1<long> value);
}
public class OpenSearch.Client.MultiTermsAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<TermsAggregationCollectMode> <CollectMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TermsOrder> <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardMinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ShowTermDocCountError>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ITerm> <Terms>k__BackingField;
    public Nullable`1<TermsAggregationCollectMode> CollectMode { get; public set; }
    public Nullable`1<int> MinimumDocumentCount { get; public set; }
    public IList`1<TermsOrder> Order { get; public set; }
    public IScript Script { get; public set; }
    public Nullable`1<int> ShardMinimumDocumentCount { get; public set; }
    public Nullable`1<int> ShardSize { get; public set; }
    public Nullable`1<bool> ShowTermDocCountError { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public IEnumerable`1<ITerm> Terms { get; public set; }
    public MultiTermsAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TermsAggregationCollectMode> get_CollectMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CollectMode(Nullable`1<TermsAggregationCollectMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumDocumentCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<TermsOrder> get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(IList`1<TermsOrder> value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardMinimumDocumentCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardMinimumDocumentCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ShowTermDocCountError();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShowTermDocCountError(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ITerm> get_Terms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Terms(IEnumerable`1<ITerm> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.MultiTermsAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<MultiTermsAggregationDescriptor`1<T>, IMultiTermsAggregation, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<TermsAggregationCollectMode> <OpenSearch.Client.IMultiTermsAggregation.CollectMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMultiTermsAggregation.MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TermsOrder> <OpenSearch.Client.IMultiTermsAggregation.Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IMultiTermsAggregation.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMultiTermsAggregation.ShardMinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMultiTermsAggregation.ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMultiTermsAggregation.ShowTermDocCountError>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IMultiTermsAggregation.Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ITerm> <OpenSearch.Client.IMultiTermsAggregation.Terms>k__BackingField;
    private Nullable`1<TermsAggregationCollectMode> OpenSearch.Client.IMultiTermsAggregation.CollectMode { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMultiTermsAggregation.MinimumDocumentCount { get; private set; }
    private IList`1<TermsOrder> OpenSearch.Client.IMultiTermsAggregation.Order { get; private set; }
    private IScript OpenSearch.Client.IMultiTermsAggregation.Script { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMultiTermsAggregation.ShardMinimumDocumentCount { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMultiTermsAggregation.ShardSize { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMultiTermsAggregation.ShowTermDocCountError { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IMultiTermsAggregation.Size { get; private set; }
    private IEnumerable`1<ITerm> OpenSearch.Client.IMultiTermsAggregation.Terms { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TermsAggregationCollectMode> OpenSearch.Client.IMultiTermsAggregation.get_CollectMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermsAggregation.set_CollectMode(Nullable`1<TermsAggregationCollectMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMultiTermsAggregation.get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermsAggregation.set_MinimumDocumentCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<TermsOrder> OpenSearch.Client.IMultiTermsAggregation.get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermsAggregation.set_Order(IList`1<TermsOrder> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IMultiTermsAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermsAggregation.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMultiTermsAggregation.get_ShardMinimumDocumentCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermsAggregation.set_ShardMinimumDocumentCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMultiTermsAggregation.get_ShardSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermsAggregation.set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMultiTermsAggregation.get_ShowTermDocCountError();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermsAggregation.set_ShowTermDocCountError(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IMultiTermsAggregation.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermsAggregation.set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<ITerm> OpenSearch.Client.IMultiTermsAggregation.get_Terms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermsAggregation.set_Terms(IEnumerable`1<ITerm> value);
    public MultiTermsAggregationDescriptor`1<T> CollectMode(Nullable`1<TermsAggregationCollectMode> collectMode);
    public MultiTermsAggregationDescriptor`1<T> MinimumDocumentCount(Nullable`1<int> minimumDocumentCount);
    public MultiTermsAggregationDescriptor`1<T> Order(Func`2<TermsOrderDescriptor`1<T>, IPromise`1<IList`1<TermsOrder>>> selector);
    public MultiTermsAggregationDescriptor`1<T> Script(string script);
    public MultiTermsAggregationDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public MultiTermsAggregationDescriptor`1<T> ShardMinimumDocumentCount(Nullable`1<int> shardMinimumDocumentCount);
    public MultiTermsAggregationDescriptor`1<T> ShardSize(Nullable`1<int> shardSize);
    public MultiTermsAggregationDescriptor`1<T> ShowTermDocCountError(Nullable`1<bool> showTermDocCountError);
    public MultiTermsAggregationDescriptor`1<T> Size(Nullable`1<int> size);
    public MultiTermsAggregationDescriptor`1<T> Terms(ITerm[] ranges);
    public MultiTermsAggregationDescriptor`1<T> Terms(Func`2[] ranges);
    public MultiTermsAggregationDescriptor`1<T> Terms(IEnumerable`1<Func`2<TermDescriptor`1<T>, ITerm>> ranges);
}
public class OpenSearch.Client.MultiTermsBucket`1 : BucketBase {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <DocCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <DocCountErrorUpperBound>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<TKey> <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyAsString>k__BackingField;
    public Nullable`1<long> DocCount { get; public set; }
    public Nullable`1<long> DocCountErrorUpperBound { get; public set; }
    public IEnumerable`1<TKey> Key { get; public set; }
    public string KeyAsString { get; public set; }
    public MultiTermsBucket`1(IReadOnlyDictionary`2<string, IAggregate> dict);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_DocCountErrorUpperBound();
    [CompilerGeneratedAttribute]
public void set_DocCountErrorUpperBound(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<TKey> get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(IEnumerable`1<TKey> value);
    [CompilerGeneratedAttribute]
public string get_KeyAsString();
    [CompilerGeneratedAttribute]
public void set_KeyAsString(string value);
}
public class OpenSearch.Client.MultiTermVectorOperation`1 : object {
    private Routing _routing;
    [CompilerGeneratedAttribute]
private object <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FieldStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private ITermVectorFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Offsets>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Payloads>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Positions>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TermStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VersionType> <VersionType>k__BackingField;
    public object Document { get; public set; }
    public Nullable`1<bool> FieldStatistics { get; public set; }
    public ITermVectorFilter Filter { get; public set; }
    public Id Id { get; public set; }
    public IndexName Index { get; public set; }
    public Nullable`1<bool> Offsets { get; public set; }
    public Nullable`1<bool> Payloads { get; public set; }
    public Nullable`1<bool> Positions { get; public set; }
    public Routing Routing { get; public set; }
    public Fields Fields { get; public set; }
    public Nullable`1<bool> TermStatistics { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    public MultiTermVectorOperation`1(Id id);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Document();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Document(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_FieldStatistics();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FieldStatistics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual ITermVectorFilter get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(ITermVectorFilter value);
    [CompilerGeneratedAttribute]
public sealed virtual Id get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Id value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Offsets();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Offsets(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Payloads();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Payloads(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Positions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Positions(Nullable`1<bool> value);
    public sealed virtual Routing get_Routing();
    public sealed virtual void set_Routing(Routing value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TermStatistics();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TermStatistics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<VersionType> get_VersionType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_VersionType(Nullable`1<VersionType> value);
}
public class OpenSearch.Client.MultiTermVectorOperationDescriptor`1 : DescriptorBase`2<MultiTermVectorOperationDescriptor`1<T>, IMultiTermVectorOperation> {
    private Routing _routing;
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.IMultiTermVectorOperation.Document>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMultiTermVectorOperation.FieldStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private ITermVectorFilter <OpenSearch.Client.IMultiTermVectorOperation.Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Id <OpenSearch.Client.IMultiTermVectorOperation.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IMultiTermVectorOperation.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMultiTermVectorOperation.Offsets>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMultiTermVectorOperation.Payloads>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMultiTermVectorOperation.Positions>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IMultiTermVectorOperation.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMultiTermVectorOperation.TermStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IMultiTermVectorOperation.Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VersionType> <OpenSearch.Client.IMultiTermVectorOperation.VersionType>k__BackingField;
    private object OpenSearch.Client.IMultiTermVectorOperation.Document { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMultiTermVectorOperation.FieldStatistics { get; private set; }
    private ITermVectorFilter OpenSearch.Client.IMultiTermVectorOperation.Filter { get; private set; }
    private Id OpenSearch.Client.IMultiTermVectorOperation.Id { get; private set; }
    private IndexName OpenSearch.Client.IMultiTermVectorOperation.Index { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMultiTermVectorOperation.Offsets { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMultiTermVectorOperation.Payloads { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMultiTermVectorOperation.Positions { get; private set; }
    private Routing OpenSearch.Client.IMultiTermVectorOperation.Routing { get; private set; }
    private Fields OpenSearch.Client.IMultiTermVectorOperation.Fields { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMultiTermVectorOperation.TermStatistics { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IMultiTermVectorOperation.Version { get; private set; }
    private Nullable`1<VersionType> OpenSearch.Client.IMultiTermVectorOperation.VersionType { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.IMultiTermVectorOperation.get_Document();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_Document(object value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMultiTermVectorOperation.get_FieldStatistics();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_FieldStatistics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITermVectorFilter OpenSearch.Client.IMultiTermVectorOperation.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_Filter(ITermVectorFilter value);
    [CompilerGeneratedAttribute]
private sealed virtual override Id OpenSearch.Client.IMultiTermVectorOperation.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_Id(Id value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IMultiTermVectorOperation.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_Index(IndexName value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMultiTermVectorOperation.get_Offsets();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_Offsets(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMultiTermVectorOperation.get_Payloads();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_Payloads(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMultiTermVectorOperation.get_Positions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_Positions(Nullable`1<bool> value);
    private sealed virtual override Routing OpenSearch.Client.IMultiTermVectorOperation.get_Routing();
    private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_Routing(Routing value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IMultiTermVectorOperation.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_Fields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMultiTermVectorOperation.get_TermStatistics();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_TermStatistics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IMultiTermVectorOperation.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<VersionType> OpenSearch.Client.IMultiTermVectorOperation.get_VersionType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorOperation.set_VersionType(Nullable`1<VersionType> value);
    public MultiTermVectorOperationDescriptor`1<T> Fields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public MultiTermVectorOperationDescriptor`1<T> Fields(Fields fields);
    public MultiTermVectorOperationDescriptor`1<T> Id(Id id);
    public MultiTermVectorOperationDescriptor`1<T> Index(IndexName index);
    public MultiTermVectorOperationDescriptor`1<T> Document(T document);
    public MultiTermVectorOperationDescriptor`1<T> Offsets(Nullable`1<bool> offsets);
    public MultiTermVectorOperationDescriptor`1<T> Payloads(Nullable`1<bool> payloads);
    public MultiTermVectorOperationDescriptor`1<T> Positions(Nullable`1<bool> positions);
    public MultiTermVectorOperationDescriptor`1<T> TermStatistics(Nullable`1<bool> termStatistics);
    public MultiTermVectorOperationDescriptor`1<T> FieldStatistics(Nullable`1<bool> fieldStatistics);
    public MultiTermVectorOperationDescriptor`1<T> Filter(Func`2<TermVectorFilterDescriptor, ITermVectorFilter> filterSelector);
    public MultiTermVectorOperationDescriptor`1<T> Version(Nullable`1<long> version);
    public MultiTermVectorOperationDescriptor`1<T> VersionType(Nullable`1<VersionType> versionType);
    public MultiTermVectorOperationDescriptor`1<T> Routing(Routing routing);
}
public class OpenSearch.Client.MultiTermVectorsDescriptor : RequestDescriptorBase`3<MultiTermVectorsDescriptor, MultiTermVectorsRequestParameters, IMultiTermVectorsRequest> {
    private List`1<IMultiTermVectorOperation> _operations;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Id> <OpenSearch.Client.IMultiTermVectorsRequest.Ids>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.IMultiTermVectorsRequest.Index { get; }
    private IEnumerable`1<IMultiTermVectorOperation> OpenSearch.Client.IMultiTermVectorsRequest.Documents { get; private set; }
    private IEnumerable`1<Id> OpenSearch.Client.IMultiTermVectorsRequest.Ids { get; private set; }
    private List`1<IMultiTermVectorOperation> Operations { get; }
    public MultiTermVectorsDescriptor(IndexName index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IMultiTermVectorsRequest.get_Index();
    public MultiTermVectorsDescriptor Index(IndexName index);
    public MultiTermVectorsDescriptor Index();
    public MultiTermVectorsDescriptor FieldStatistics(Nullable`1<bool> fieldstatistics);
    public MultiTermVectorsDescriptor Fields(Fields fields);
    public MultiTermVectorsDescriptor Fields(Expression`1[] fields);
    public MultiTermVectorsDescriptor Offsets(Nullable`1<bool> offsets);
    public MultiTermVectorsDescriptor Payloads(Nullable`1<bool> payloads);
    public MultiTermVectorsDescriptor Positions(Nullable`1<bool> positions);
    public MultiTermVectorsDescriptor Preference(string preference);
    public MultiTermVectorsDescriptor Realtime(Nullable`1<bool> realtime);
    public MultiTermVectorsDescriptor Routing(Routing routing);
    public MultiTermVectorsDescriptor TermStatistics(Nullable`1<bool> termstatistics);
    public MultiTermVectorsDescriptor Version(Nullable`1<long> version);
    public MultiTermVectorsDescriptor VersionType(Nullable`1<VersionType> versiontype);
    private sealed virtual override IEnumerable`1<IMultiTermVectorOperation> OpenSearch.Client.IMultiTermVectorsRequest.get_Documents();
    private sealed virtual override void OpenSearch.Client.IMultiTermVectorsRequest.set_Documents(IEnumerable`1<IMultiTermVectorOperation> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<Id> OpenSearch.Client.IMultiTermVectorsRequest.get_Ids();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMultiTermVectorsRequest.set_Ids(IEnumerable`1<Id> value);
    private List`1<IMultiTermVectorOperation> get_Operations();
    public MultiTermVectorsDescriptor Documents(Func`2<MultiTermVectorOperationDescriptor`1<T>, IMultiTermVectorOperation> selector);
    public MultiTermVectorsDescriptor Documents(IEnumerable`1<long> ids, Func`3<MultiTermVectorOperationDescriptor`1<T>, long, IMultiTermVectorOperation> selector);
    public MultiTermVectorsDescriptor Documents(IEnumerable`1<string> ids, Func`3<MultiTermVectorOperationDescriptor`1<T>, string, IMultiTermVectorOperation> getSelector);
    public MultiTermVectorsDescriptor Documents(IEnumerable`1<Id> ids, Func`3<MultiTermVectorOperationDescriptor`1<T>, Id, IMultiTermVectorOperation> getSelector);
    public MultiTermVectorsDescriptor Ids(IEnumerable`1<Id> ids);
    public MultiTermVectorsDescriptor Ids(Id[] ids);
}
public class OpenSearch.Client.MultiTermVectorsRequest : PlainRequestBase`1<MultiTermVectorsRequestParameters> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IMultiTermVectorOperation> <Documents>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Id> <Ids>k__BackingField;
    public IEnumerable`1<IMultiTermVectorOperation> Documents { get; public set; }
    public IEnumerable`1<Id> Ids { get; public set; }
    protected IMultiTermVectorsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IMultiTermVectorsRequest.Index { get; }
    public Nullable`1<bool> FieldStatistics { get; public set; }
    public Fields Fields { get; public set; }
    public Nullable`1<bool> Offsets { get; public set; }
    public Nullable`1<bool> Payloads { get; public set; }
    public Nullable`1<bool> Positions { get; public set; }
    public string Preference { get; public set; }
    public Nullable`1<bool> Realtime { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<bool> TermStatistics { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    public MultiTermVectorsRequest(IndexName index);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IMultiTermVectorOperation> get_Documents();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Documents(IEnumerable`1<IMultiTermVectorOperation> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<Id> get_Ids();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ids(IEnumerable`1<Id> value);
    protected IMultiTermVectorsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IMultiTermVectorsRequest.get_Index();
    public Nullable`1<bool> get_FieldStatistics();
    public void set_FieldStatistics(Nullable`1<bool> value);
    public Fields get_Fields();
    public void set_Fields(Fields value);
    public Nullable`1<bool> get_Offsets();
    public void set_Offsets(Nullable`1<bool> value);
    public Nullable`1<bool> get_Payloads();
    public void set_Payloads(Nullable`1<bool> value);
    public Nullable`1<bool> get_Positions();
    public void set_Positions(Nullable`1<bool> value);
    public string get_Preference();
    public void set_Preference(string value);
    public Nullable`1<bool> get_Realtime();
    public void set_Realtime(Nullable`1<bool> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Nullable`1<bool> get_TermStatistics();
    public void set_TermStatistics(Nullable`1<bool> value);
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    public Nullable`1<VersionType> get_VersionType();
    public void set_VersionType(Nullable`1<VersionType> value);
}
[DataContractAttribute]
public class OpenSearch.Client.MultiTermVectorsResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ITermVectors> <Documents>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<ITermVectors> Documents { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ITermVectors> get_Documents();
    [CompilerGeneratedAttribute]
internal void set_Documents(IReadOnlyCollection`1<ITermVectors> value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.MultiValueMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static MultiValueMode Min;
    [EnumMemberAttribute]
public static MultiValueMode Max;
    [EnumMemberAttribute]
public static MultiValueMode Average;
    [EnumMemberAttribute]
public static MultiValueMode Sum;
}
public class OpenSearch.Client.Murmur3HashAttribute : OpenSearchDocValuesPropertyAttributeBase {
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.Murmur3HashProperty : DocValuesPropertyBase {
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.Murmur3HashPropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<Murmur3HashPropertyDescriptor`1<T>, IMurmur3HashProperty, T> {
}
public class OpenSearch.Client.MustacheScript : StoredScript {
    private static string Lang;
    public MustacheScript(string source);
    private static MustacheScript();
}
public class OpenSearch.Client.MutualInformationHeuristic : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BackgroundIsSuperSet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeNegatives>k__BackingField;
    public Nullable`1<bool> BackgroundIsSuperSet { get; public set; }
    public Nullable`1<bool> IncludeNegatives { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_BackgroundIsSuperSet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BackgroundIsSuperSet(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeNegatives();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeNegatives(Nullable`1<bool> value);
}
public class OpenSearch.Client.MutualInformationHeuristicDescriptor : DescriptorBase`2<MutualInformationHeuristicDescriptor, IMutualInformationHeuristic> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMutualInformationHeuristic.BackgroundIsSuperSet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IMutualInformationHeuristic.IncludeNegatives>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IMutualInformationHeuristic.BackgroundIsSuperSet { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IMutualInformationHeuristic.IncludeNegatives { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMutualInformationHeuristic.get_BackgroundIsSuperSet();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMutualInformationHeuristic.set_BackgroundIsSuperSet(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IMutualInformationHeuristic.get_IncludeNegatives();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IMutualInformationHeuristic.set_IncludeNegatives(Nullable`1<bool> value);
    public MutualInformationHeuristicDescriptor IncludeNegatives(Nullable`1<bool> includeNegatives);
    public MutualInformationHeuristicDescriptor BackgroundIsSuperSet(Nullable`1<bool> backgroundIsSuperSet);
}
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.Name : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private static int <TypeHashCode>k__BackingField;
    internal string Value { get; }
    private string DebugDisplay { get; }
    private static int TypeHashCode { get; }
    public Name(string name);
    private static Name();
    [CompilerGeneratedAttribute]
internal string get_Value();
    private string get_DebugDisplay();
    public virtual string ToString();
    [CompilerGeneratedAttribute]
private static int get_TypeHashCode();
    public sealed virtual bool Equals(Name other);
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public static Name op_Implicit(string name);
    public static bool op_Equality(Name left, Name right);
    public static bool op_Inequality(Name left, Name right);
    public virtual bool Equals(object obj);
    private bool EqualsString(string other);
    public virtual int GetHashCode();
}
[DataContractAttribute]
public class OpenSearch.Client.NamedComponentTemplate : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ComponentTemplate <ComponentTemplate>k__BackingField;
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public ComponentTemplate ComponentTemplate { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public ComponentTemplate get_ComponentTemplate();
    [CompilerGeneratedAttribute]
internal void set_ComponentTemplate(ComponentTemplate value);
}
[DataContractAttribute]
public class OpenSearch.Client.NamedComposableIndexTemplate : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ComposableIndexTemplate <IndexTemplate>k__BackingField;
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public ComposableIndexTemplate IndexTemplate { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public ComposableIndexTemplate get_IndexTemplate();
    [CompilerGeneratedAttribute]
internal void set_IndexTemplate(ComposableIndexTemplate value);
}
public class OpenSearch.Client.NamedFiltersContainer : IsADictionaryBase`2<string, IQueryContainer> {
    public NamedFiltersContainer(IDictionary`2<string, IQueryContainer> container);
    public NamedFiltersContainer(Dictionary`2<string, QueryContainer> container);
    public sealed virtual void Add(string name, IQueryContainer filter);
    public void Add(string name, QueryContainer filter);
}
public class OpenSearch.Client.NamedFiltersContainerDescriptor`1 : IsADictionaryDescriptorBase`4<NamedFiltersContainerDescriptor`1<T>, INamedFiltersContainer, string, IQueryContainer> {
    public NamedFiltersContainerDescriptor`1<T> Filter(string name, IQueryContainer filter);
    public NamedFiltersContainerDescriptor`1<T> Filter(string name, Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
    public NamedFiltersContainerDescriptor`1<T> Filter(string name, Func`2<QueryContainerDescriptor`1<TOther>, QueryContainer> selector);
}
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.Names : object {
    [CompilerGeneratedAttribute]
private IList`1<Name> <Value>k__BackingField;
    internal IList`1<Name> Value { get; }
    private string DebugDisplay { get; }
    public Names(IEnumerable`1<string> names);
    public Names(IEnumerable`1<Name> names);
    [CompilerGeneratedAttribute]
internal IList`1<Name> get_Value();
    private string get_DebugDisplay();
    public virtual string ToString();
    public sealed virtual bool Equals(Names other);
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public static Names Parse(string names);
    public static Names op_Implicit(Name name);
    public static Names op_Implicit(string names);
    public static Names op_Implicit(String[] names);
    public static bool op_Equality(Names left, Names right);
    public static bool op_Inequality(Names left, Names right);
    private static bool EqualsAllIds(ICollection`1<Name> thisIds, ICollection`1<Name> otherIds);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public class OpenSearch.Client.NamespacedClientProxy : object {
    private OpenSearchClient _client;
    protected NamespacedClientProxy(OpenSearchClient client);
    internal TResponse DoRequest(TRequest request, IRequestParameters parameters, Action`1<IRequestConfiguration> forceConfiguration);
    internal Task`1<TResponse> DoRequestAsync(TRequest request, IRequestParameters parameters, CancellationToken ct, Action`1<IRequestConfiguration> forceConfiguration);
    internal TResponse DoRequest(TRequest request, IRequestParameters parameters, Func`2<TRequest, PostData> bodySelector, Action`1<IRequestConfiguration> forceConfiguration);
    internal Task`1<TResponse> DoRequestAsync(TRequest request, IRequestParameters parameters, Func`2<TRequest, PostData> bodySelector, CancellationToken ct, Action`1<IRequestConfiguration> forceConfiguration);
    protected CatResponse`1<TCatRecord> DoCat(TRequest request);
    protected Task`1<CatResponse`1<TCatRecord>> DoCatAsync(TRequest request, CancellationToken ct);
}
internal static class OpenSearch.Client.NativeMethods : object {
}
public class OpenSearch.Client.NestedAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Field <Path>k__BackingField;
    public Field Path { get; public set; }
    public NestedAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Path(Field value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.NestedAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<NestedAggregationDescriptor`1<T>, INestedAggregation, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INestedAggregation.Path>k__BackingField;
    private Field OpenSearch.Client.INestedAggregation.Path { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INestedAggregation.get_Path();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedAggregation.set_Path(Field value);
    public NestedAggregationDescriptor`1<T> Path(Field path);
    public NestedAggregationDescriptor`1<T> Path(Expression`1<Func`2<T, TValue>> path);
}
public class OpenSearch.Client.NestedAttribute : ObjectAttribute {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INestedProperty.IncludeInParent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INestedProperty.IncludeInRoot>k__BackingField;
    public bool IncludeInParent { get; public set; }
    public bool IncludeInRoot { get; public set; }
    private Nullable`1<bool> OpenSearch.Client.INestedProperty.IncludeInParent { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.INestedProperty.IncludeInRoot { get; private set; }
    private INestedProperty Self { get; }
    public bool get_IncludeInParent();
    public void set_IncludeInParent(bool value);
    public bool get_IncludeInRoot();
    public void set_IncludeInRoot(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INestedProperty.get_IncludeInParent();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedProperty.set_IncludeInParent(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INestedProperty.get_IncludeInRoot();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedProperty.set_IncludeInRoot(Nullable`1<bool> value);
    private INestedProperty get_Self();
}
public class OpenSearch.Client.NestedIdentity : object {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private NestedIdentity <Nested>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Offset>k__BackingField;
    [DataMemberAttribute]
public Field Field { get; internal set; }
    [DataMemberAttribute]
public NestedIdentity Nested { get; internal set; }
    [DataMemberAttribute]
public int Offset { get; internal set; }
    [CompilerGeneratedAttribute]
public Field get_Field();
    [CompilerGeneratedAttribute]
internal void set_Field(Field value);
    [CompilerGeneratedAttribute]
public NestedIdentity get_Nested();
    [CompilerGeneratedAttribute]
internal void set_Nested(NestedIdentity value);
    [CompilerGeneratedAttribute]
public int get_Offset();
    [CompilerGeneratedAttribute]
internal void set_Offset(int value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.NestedProperty : ObjectProperty {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeInParent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeInRoot>k__BackingField;
    public Nullable`1<bool> IncludeInParent { get; public set; }
    public Nullable`1<bool> IncludeInRoot { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeInParent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeInParent(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeInRoot();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeInRoot(Nullable`1<bool> value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.NestedPropertyDescriptor`2 : ObjectPropertyDescriptorBase`4<NestedPropertyDescriptor`2<TParent, TChild>, INestedProperty, TParent, TChild> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INestedProperty.IncludeInParent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INestedProperty.IncludeInRoot>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.INestedProperty.IncludeInParent { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.INestedProperty.IncludeInRoot { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INestedProperty.get_IncludeInParent();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedProperty.set_IncludeInParent(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INestedProperty.get_IncludeInRoot();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedProperty.set_IncludeInRoot(Nullable`1<bool> value);
    public NestedPropertyDescriptor`2<TParent, TChild> IncludeInParent(Nullable`1<bool> includeInParent);
    public NestedPropertyDescriptor`2<TParent, TChild> IncludeInRoot(Nullable`1<bool> includeInRoot);
}
public class OpenSearch.Client.NestedQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IInnerHits <InnerHits>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NestedScoreMode> <ScoreMode>k__BackingField;
    public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    public IInnerHits InnerHits { get; public set; }
    public Field Path { get; public set; }
    public QueryContainer Query { get; public set; }
    public Nullable`1<NestedScoreMode> ScoreMode { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IInnerHits get_InnerHits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InnerHits(IInnerHits value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Path(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<NestedScoreMode> get_ScoreMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScoreMode(Nullable`1<NestedScoreMode> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(INestedQuery q);
}
public class OpenSearch.Client.NestedQueryDescriptor`1 : QueryDescriptorBase`2<NestedQueryDescriptor`1<T>, INestedQuery> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INestedQuery.IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IInnerHits <OpenSearch.Client.INestedQuery.InnerHits>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INestedQuery.Path>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.INestedQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NestedScoreMode> <OpenSearch.Client.INestedQuery.ScoreMode>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<bool> OpenSearch.Client.INestedQuery.IgnoreUnmapped { get; private set; }
    private IInnerHits OpenSearch.Client.INestedQuery.InnerHits { get; private set; }
    private Field OpenSearch.Client.INestedQuery.Path { get; private set; }
    private QueryContainer OpenSearch.Client.INestedQuery.Query { get; private set; }
    private Nullable`1<NestedScoreMode> OpenSearch.Client.INestedQuery.ScoreMode { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INestedQuery.get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedQuery.set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IInnerHits OpenSearch.Client.INestedQuery.get_InnerHits();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedQuery.set_InnerHits(IInnerHits value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INestedQuery.get_Path();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedQuery.set_Path(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.INestedQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedQuery.set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<NestedScoreMode> OpenSearch.Client.INestedQuery.get_ScoreMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedQuery.set_ScoreMode(Nullable`1<NestedScoreMode> value);
    public NestedQueryDescriptor`1<T> Query(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
    public NestedQueryDescriptor`1<T> ScoreMode(Nullable`1<NestedScoreMode> scoreMode);
    public NestedQueryDescriptor`1<T> Path(Field path);
    public NestedQueryDescriptor`1<T> Path(Expression`1<Func`2<T, TValue>> objectPath);
    public NestedQueryDescriptor`1<T> InnerHits(Func`2<InnerHitsDescriptor`1<T>, IInnerHits> selector);
    public NestedQueryDescriptor`1<T> IgnoreUnmapped(Nullable`1<bool> ignoreUnmapped);
}
[StringEnumAttribute]
public enum OpenSearch.Client.NestedScoreMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static NestedScoreMode Average;
    [EnumMemberAttribute]
public static NestedScoreMode Sum;
    [EnumMemberAttribute]
public static NestedScoreMode Min;
    [EnumMemberAttribute]
public static NestedScoreMode Max;
    [EnumMemberAttribute]
public static NestedScoreMode None;
}
public class OpenSearch.Client.NestedSort : object {
    [CompilerGeneratedAttribute]
private QueryContainer <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private INestedSort <Nested>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxChildren>k__BackingField;
    public QueryContainer Filter { get; public set; }
    public INestedSort Nested { get; public set; }
    public Field Path { get; public set; }
    public Nullable`1<int> MaxChildren { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual INestedSort get_Nested();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Nested(INestedSort value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Path(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxChildren();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxChildren(Nullable`1<int> value);
}
public class OpenSearch.Client.NestedSortDescriptor`1 : DescriptorBase`2<NestedSortDescriptor`1<T>, INestedSort> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.INestedSort.Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private INestedSort <OpenSearch.Client.INestedSort.Nested>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INestedSort.Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.INestedSort.MaxChildren>k__BackingField;
    private QueryContainer OpenSearch.Client.INestedSort.Filter { get; private set; }
    private INestedSort OpenSearch.Client.INestedSort.Nested { get; private set; }
    private Field OpenSearch.Client.INestedSort.Path { get; private set; }
    private Nullable`1<int> OpenSearch.Client.INestedSort.MaxChildren { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.INestedSort.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedSort.set_Filter(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override INestedSort OpenSearch.Client.INestedSort.get_Nested();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedSort.set_Nested(INestedSort value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INestedSort.get_Path();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedSort.set_Path(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.INestedSort.get_MaxChildren();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INestedSort.set_MaxChildren(Nullable`1<int> value);
    public NestedSortDescriptor`1<T> Path(Field path);
    public NestedSortDescriptor`1<T> Path(Expression`1<Func`2<T, TValue>> objectPath);
    public NestedSortDescriptor`1<T> Filter(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> filterSelector);
    public NestedSortDescriptor`1<T> Nested(Func`2<NestedSortDescriptor`1<T>, INestedSort> filterSelector);
    public NestedSortDescriptor`1<T> MaxChildren(Nullable`1<int> maxChildren);
}
public class OpenSearch.Client.NetworkCommunityIdProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <DestinationIp>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <DestinationPort>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <IanaNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <IcmpType>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <IcmpCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Seed>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <SourceIp>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <SourcePort>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Transport>k__BackingField;
    protected string Name { get; }
    public Field DestinationIp { get; public set; }
    public Field DestinationPort { get; public set; }
    public Field IanaNumber { get; public set; }
    public Field IcmpType { get; public set; }
    public Field IcmpCode { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public Nullable`1<int> Seed { get; public set; }
    public Field SourceIp { get; public set; }
    public Field SourcePort { get; public set; }
    public Field TargetField { get; public set; }
    public Field Transport { get; public set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual Field get_DestinationIp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DestinationIp(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_DestinationPort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DestinationPort(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_IanaNumber();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IanaNumber(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_IcmpType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IcmpType(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_IcmpCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IcmpCode(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Seed();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Seed(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_SourceIp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SourceIp(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_SourcePort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SourcePort(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Transport();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Transport(Field value);
}
public class OpenSearch.Client.NetworkCommunityIdProcessorDescriptor`1 : ProcessorDescriptorBase`2<NetworkCommunityIdProcessorDescriptor`1<T>, INetworkCommunityIdProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkCommunityIdProcessor.DestinationIp>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkCommunityIdProcessor.DestinationPort>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkCommunityIdProcessor.IanaNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkCommunityIdProcessor.IcmpType>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkCommunityIdProcessor.IcmpCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INetworkCommunityIdProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.INetworkCommunityIdProcessor.Seed>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkCommunityIdProcessor.SourceIp>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkCommunityIdProcessor.SourcePort>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkCommunityIdProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkCommunityIdProcessor.Transport>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.INetworkCommunityIdProcessor.DestinationIp { get; private set; }
    private Field OpenSearch.Client.INetworkCommunityIdProcessor.DestinationPort { get; private set; }
    private Field OpenSearch.Client.INetworkCommunityIdProcessor.IanaNumber { get; private set; }
    private Field OpenSearch.Client.INetworkCommunityIdProcessor.IcmpType { get; private set; }
    private Field OpenSearch.Client.INetworkCommunityIdProcessor.IcmpCode { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.INetworkCommunityIdProcessor.IgnoreMissing { get; private set; }
    private Nullable`1<int> OpenSearch.Client.INetworkCommunityIdProcessor.Seed { get; private set; }
    private Field OpenSearch.Client.INetworkCommunityIdProcessor.SourceIp { get; private set; }
    private Field OpenSearch.Client.INetworkCommunityIdProcessor.SourcePort { get; private set; }
    private Field OpenSearch.Client.INetworkCommunityIdProcessor.TargetField { get; private set; }
    private Field OpenSearch.Client.INetworkCommunityIdProcessor.Transport { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkCommunityIdProcessor.get_DestinationIp();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkCommunityIdProcessor.set_DestinationIp(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkCommunityIdProcessor.get_DestinationPort();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkCommunityIdProcessor.set_DestinationPort(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkCommunityIdProcessor.get_IanaNumber();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkCommunityIdProcessor.set_IanaNumber(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkCommunityIdProcessor.get_IcmpType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkCommunityIdProcessor.set_IcmpType(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkCommunityIdProcessor.get_IcmpCode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkCommunityIdProcessor.set_IcmpCode(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INetworkCommunityIdProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkCommunityIdProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.INetworkCommunityIdProcessor.get_Seed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkCommunityIdProcessor.set_Seed(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkCommunityIdProcessor.get_SourceIp();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkCommunityIdProcessor.set_SourceIp(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkCommunityIdProcessor.get_SourcePort();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkCommunityIdProcessor.set_SourcePort(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkCommunityIdProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkCommunityIdProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkCommunityIdProcessor.get_Transport();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkCommunityIdProcessor.set_Transport(Field value);
    public NetworkCommunityIdProcessorDescriptor`1<T> DestinationIp(Field field);
    public NetworkCommunityIdProcessorDescriptor`1<T> DestinationIp(Expression`1<Func`2<T, TValue>> objectPath);
    public NetworkCommunityIdProcessorDescriptor`1<T> DestinationPort(Field field);
    public NetworkCommunityIdProcessorDescriptor`1<T> DestinationPort(Expression`1<Func`2<T, TValue>> objectPath);
    public NetworkCommunityIdProcessorDescriptor`1<T> IanaNumber(Field field);
    public NetworkCommunityIdProcessorDescriptor`1<T> IanaNumber(Expression`1<Func`2<T, TValue>> objectPath);
    public NetworkCommunityIdProcessorDescriptor`1<T> IcmpType(Field field);
    public NetworkCommunityIdProcessorDescriptor`1<T> IcmpType(Expression`1<Func`2<T, TValue>> objectPath);
    public NetworkCommunityIdProcessorDescriptor`1<T> IcmpCode(Field field);
    public NetworkCommunityIdProcessorDescriptor`1<T> IcmpCode(Expression`1<Func`2<T, TValue>> objectPath);
    public NetworkCommunityIdProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
    public NetworkCommunityIdProcessorDescriptor`1<T> Seed(Nullable`1<int> seed);
    public NetworkCommunityIdProcessorDescriptor`1<T> SourceIp(Field field);
    public NetworkCommunityIdProcessorDescriptor`1<T> SourceIp(Expression`1<Func`2<T, TValue>> objectPath);
    public NetworkCommunityIdProcessorDescriptor`1<T> SourcePort(Field field);
    public NetworkCommunityIdProcessorDescriptor`1<T> SourcePort(Expression`1<Func`2<T, TValue>> objectPath);
    public NetworkCommunityIdProcessorDescriptor`1<T> TargetField(Field field);
    public NetworkCommunityIdProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public NetworkCommunityIdProcessorDescriptor`1<T> Transport(Field field);
    public NetworkCommunityIdProcessorDescriptor`1<T> Transport(Expression`1<Func`2<T, TValue>> objectPath);
}
public class OpenSearch.Client.NetworkDirectionProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <DestinationIp>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <InternalNetworks>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <SourceIp>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    protected string Name { get; }
    public Field DestinationIp { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public IEnumerable`1<string> InternalNetworks { get; public set; }
    public Field SourceIp { get; public set; }
    public Field TargetField { get; public set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual Field get_DestinationIp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DestinationIp(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_InternalNetworks();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InternalNetworks(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_SourceIp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SourceIp(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
}
public class OpenSearch.Client.NetworkDirectionProcessorDescriptor`1 : ProcessorDescriptorBase`2<NetworkDirectionProcessorDescriptor`1<T>, INetworkDirectionProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkDirectionProcessor.DestinationIp>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INetworkDirectionProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.INetworkDirectionProcessor.InternalNetworks>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkDirectionProcessor.SourceIp>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.INetworkDirectionProcessor.TargetField>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.INetworkDirectionProcessor.DestinationIp { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.INetworkDirectionProcessor.IgnoreMissing { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.INetworkDirectionProcessor.InternalNetworks { get; private set; }
    private Field OpenSearch.Client.INetworkDirectionProcessor.SourceIp { get; private set; }
    private Field OpenSearch.Client.INetworkDirectionProcessor.TargetField { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkDirectionProcessor.get_DestinationIp();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkDirectionProcessor.set_DestinationIp(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INetworkDirectionProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkDirectionProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.INetworkDirectionProcessor.get_InternalNetworks();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkDirectionProcessor.set_InternalNetworks(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkDirectionProcessor.get_SourceIp();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkDirectionProcessor.set_SourceIp(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.INetworkDirectionProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INetworkDirectionProcessor.set_TargetField(Field value);
    public NetworkDirectionProcessorDescriptor`1<T> DestinationIp(Field field);
    public NetworkDirectionProcessorDescriptor`1<T> DestinationIp(Expression`1<Func`2<T, TValue>> objectPath);
    public NetworkDirectionProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
    public NetworkDirectionProcessorDescriptor`1<T> InternalNetworks(IEnumerable`1<string> internalNetworks);
    public NetworkDirectionProcessorDescriptor`1<T> InternalNetworks(String[] internalNetworks);
    public NetworkDirectionProcessorDescriptor`1<T> SourceIp(Field field);
    public NetworkDirectionProcessorDescriptor`1<T> SourceIp(Expression`1<Func`2<T, TValue>> objectPath);
    public NetworkDirectionProcessorDescriptor`1<T> TargetField(Field field);
    public NetworkDirectionProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
}
[DataContractAttribute]
public class OpenSearch.Client.NeuralQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private string <QueryText>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <K>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModelId>k__BackingField;
    public string QueryText { get; public set; }
    public Nullable`1<int> K { get; public set; }
    public string ModelId { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_QueryText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueryText(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_K();
    [CompilerGeneratedAttribute]
public sealed virtual void set_K(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ModelId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ModelId(string value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer container);
    internal static bool IsConditionless(INeuralQuery q);
}
public class OpenSearch.Client.NeuralQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<NeuralQueryDescriptor`1<T>, INeuralQuery, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.INeuralQuery.QueryText>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.INeuralQuery.K>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.INeuralQuery.ModelId>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.INeuralQuery.QueryText { get; private set; }
    private Nullable`1<int> OpenSearch.Client.INeuralQuery.K { get; private set; }
    private string OpenSearch.Client.INeuralQuery.ModelId { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.INeuralQuery.get_QueryText();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INeuralQuery.set_QueryText(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.INeuralQuery.get_K();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INeuralQuery.set_K(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.INeuralQuery.get_ModelId();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INeuralQuery.set_ModelId(string value);
    public NeuralQueryDescriptor`1<T> QueryText(string queryText);
    public NeuralQueryDescriptor`1<T> K(Nullable`1<int> k);
    public NeuralQueryDescriptor`1<T> ModelId(string modelId);
}
public class OpenSearch.Client.NGramTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreserveOriginal>k__BackingField;
    public Nullable`1<int> MaxGram { get; public set; }
    public Nullable`1<int> MinGram { get; public set; }
    public Nullable`1<bool> PreserveOriginal { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxGram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinGram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PreserveOriginal();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreserveOriginal(Nullable`1<bool> value);
}
public class OpenSearch.Client.NGramTokenFilterDescriptor : TokenFilterDescriptorBase`2<NGramTokenFilterDescriptor, INGramTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.INGramTokenFilter.MaxGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.INGramTokenFilter.MinGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INGramTokenFilter.PreserveOriginal>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.INGramTokenFilter.MaxGram { get; private set; }
    private Nullable`1<int> OpenSearch.Client.INGramTokenFilter.MinGram { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.INGramTokenFilter.PreserveOriginal { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.INGramTokenFilter.get_MaxGram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INGramTokenFilter.set_MaxGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.INGramTokenFilter.get_MinGram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INGramTokenFilter.set_MinGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INGramTokenFilter.get_PreserveOriginal();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INGramTokenFilter.set_PreserveOriginal(Nullable`1<bool> value);
    public NGramTokenFilterDescriptor MinGram(Nullable`1<int> minGram);
    public NGramTokenFilterDescriptor MaxGram(Nullable`1<int> maxGram);
    public NGramTokenFilterDescriptor PreserveOriginal(Nullable`1<bool> preserveOriginal);
}
public class OpenSearch.Client.NGramTokenizer : TokenizerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinGram>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<TokenChar> <TokenChars>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomTokenChars>k__BackingField;
    public Nullable`1<int> MaxGram { get; public set; }
    public Nullable`1<int> MinGram { get; public set; }
    public IEnumerable`1<TokenChar> TokenChars { get; public set; }
    public string CustomTokenChars { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxGram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinGram();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<TokenChar> get_TokenChars();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TokenChars(IEnumerable`1<TokenChar> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CustomTokenChars();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomTokenChars(string value);
}
public class OpenSearch.Client.NGramTokenizerDescriptor : TokenizerDescriptorBase`2<NGramTokenizerDescriptor, INGramTokenizer> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.INGramTokenizer.MaxGram>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.INGramTokenizer.MinGram>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<TokenChar> <OpenSearch.Client.INGramTokenizer.TokenChars>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.INGramTokenizer.CustomTokenChars>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.INGramTokenizer.MaxGram { get; private set; }
    private Nullable`1<int> OpenSearch.Client.INGramTokenizer.MinGram { get; private set; }
    private IEnumerable`1<TokenChar> OpenSearch.Client.INGramTokenizer.TokenChars { get; private set; }
    private string OpenSearch.Client.INGramTokenizer.CustomTokenChars { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.INGramTokenizer.get_MaxGram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INGramTokenizer.set_MaxGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.INGramTokenizer.get_MinGram();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INGramTokenizer.set_MinGram(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<TokenChar> OpenSearch.Client.INGramTokenizer.get_TokenChars();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INGramTokenizer.set_TokenChars(IEnumerable`1<TokenChar> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.INGramTokenizer.get_CustomTokenChars();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INGramTokenizer.set_CustomTokenChars(string value);
    public NGramTokenizerDescriptor MinGram(Nullable`1<int> minGram);
    public NGramTokenizerDescriptor MaxGram(Nullable`1<int> minGram);
    public NGramTokenizerDescriptor TokenChars(IEnumerable`1<TokenChar> tokenChars);
    public NGramTokenizerDescriptor TokenChars(TokenChar[] tokenChars);
    public NGramTokenizerDescriptor CustomTokenChars(string customTokenChars);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeAllocationExplanation : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<AllocationDecision> <Deciders>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <NodeAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Decision> <NodeDecision>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeName>k__BackingField;
    [CompilerGeneratedAttribute]
private AllocationStore <Store>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransportAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <WeightRanking>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<AllocationDecision> Deciders { get; public set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, string> NodeAttributes { get; public set; }
    [DataMemberAttribute]
public Nullable`1<Decision> NodeDecision { get; public set; }
    [DataMemberAttribute]
public string NodeId { get; public set; }
    [DataMemberAttribute]
public string NodeName { get; public set; }
    [DataMemberAttribute]
public AllocationStore Store { get; public set; }
    [DataMemberAttribute]
public string TransportAddress { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> WeightRanking { get; public set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<AllocationDecision> get_Deciders();
    [CompilerGeneratedAttribute]
public void set_Deciders(IReadOnlyCollection`1<AllocationDecision> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_NodeAttributes();
    [CompilerGeneratedAttribute]
public void set_NodeAttributes(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Decision> get_NodeDecision();
    [CompilerGeneratedAttribute]
public void set_NodeDecision(Nullable`1<Decision> value);
    [CompilerGeneratedAttribute]
public string get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(string value);
    [CompilerGeneratedAttribute]
public string get_NodeName();
    [CompilerGeneratedAttribute]
public void set_NodeName(string value);
    [CompilerGeneratedAttribute]
public AllocationStore get_Store();
    [CompilerGeneratedAttribute]
public void set_Store(AllocationStore value);
    [CompilerGeneratedAttribute]
public string get_TransportAddress();
    [CompilerGeneratedAttribute]
public void set_TransportAddress(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_WeightRanking();
    [CompilerGeneratedAttribute]
public void set_WeightRanking(Nullable`1<int> value);
}
internal class OpenSearch.Client.NodeHotThreadsResponseBuilder : CustomResponseBuilderBase {
    [CompilerGeneratedAttribute]
private static NodeHotThreadsResponseBuilder <Instance>k__BackingField;
    private static Regex NodeRegex;
    public static NodeHotThreadsResponseBuilder Instance { get; }
    private static NodeHotThreadsResponseBuilder();
    [CompilerGeneratedAttribute]
public static NodeHotThreadsResponseBuilder get_Instance();
    private static NodesHotThreadsResponse Parse(string plainTextResponse);
    public virtual object DeserializeResponse(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream);
    [AsyncStateMachineAttribute("OpenSearch.Client.NodeHotThreadsResponseBuilder/<DeserializeResponseAsync>d__6")]
public virtual Task`1<object> DeserializeResponseAsync(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream, CancellationToken ctx);
}
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.NodeIds : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Value>k__BackingField;
    internal IList`1<string> Value { get; }
    private string DebugDisplay { get; }
    public NodeIds(IEnumerable`1<string> nodeIds);
    [CompilerGeneratedAttribute]
internal IList`1<string> get_Value();
    private string get_DebugDisplay();
    public virtual string ToString();
    public sealed virtual bool Equals(NodeIds other);
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public static NodeIds Parse(string nodeIds);
    public static NodeIds op_Implicit(string nodes);
    public static NodeIds op_Implicit(String[] nodes);
    public static bool op_Equality(NodeIds left, NodeIds right);
    public static bool op_Inequality(NodeIds left, NodeIds right);
    private static bool EqualsAllIds(ICollection`1<string> thisIds, ICollection`1<string> otherIds);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[DataContractAttribute]
public class OpenSearch.Client.NodeInfo : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransportAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildHash>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TotalIndexingBuffer>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<NodeRole> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicDictionary <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeOperatingSystemInfo <OperatingSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeProcessInfo <Process>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeJvmInfo <Jvm>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeInfoHttp <Http>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeInfoNetwork <Network>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PluginStats> <Plugins>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, NodeThreadPoolInfo> <ThreadPool>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeInfoTransport <Transport>k__BackingField;
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public string TransportAddress { get; internal set; }
    [DataMemberAttribute]
public string Host { get; internal set; }
    [DataMemberAttribute]
public string Ip { get; internal set; }
    [DataMemberAttribute]
public string Version { get; internal set; }
    [DataMemberAttribute]
public string BuildType { get; internal set; }
    [DataMemberAttribute]
public string BuildHash { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<long> TotalIndexingBuffer { get; internal set; }
    [DataMemberAttribute]
public List`1<NodeRole> Roles { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, string> Attributes { get; internal set; }
    [DataMemberAttribute]
public DynamicDictionary Settings { get; internal set; }
    [DataMemberAttribute]
public NodeOperatingSystemInfo OperatingSystem { get; internal set; }
    [DataMemberAttribute]
public NodeProcessInfo Process { get; internal set; }
    [DataMemberAttribute]
public NodeJvmInfo Jvm { get; internal set; }
    [DataMemberAttribute]
public NodeInfoHttp Http { get; internal set; }
    [DataMemberAttribute]
public NodeInfoNetwork Network { get; internal set; }
    [DataMemberAttribute]
public List`1<PluginStats> Plugins { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.NodeThreadPoolInfo>")]
public IReadOnlyDictionary`2<string, NodeThreadPoolInfo> ThreadPool { get; internal set; }
    [DataMemberAttribute]
public NodeInfoTransport Transport { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_TransportAddress();
    [CompilerGeneratedAttribute]
internal void set_TransportAddress(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
internal void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
internal void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_BuildType();
    [CompilerGeneratedAttribute]
internal void set_BuildType(string value);
    [CompilerGeneratedAttribute]
public string get_BuildHash();
    [CompilerGeneratedAttribute]
internal void set_BuildHash(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TotalIndexingBuffer();
    [CompilerGeneratedAttribute]
internal void set_TotalIndexingBuffer(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public List`1<NodeRole> get_Roles();
    [CompilerGeneratedAttribute]
internal void set_Roles(List`1<NodeRole> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Attributes();
    [CompilerGeneratedAttribute]
internal void set_Attributes(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public DynamicDictionary get_Settings();
    [CompilerGeneratedAttribute]
internal void set_Settings(DynamicDictionary value);
    [CompilerGeneratedAttribute]
public NodeOperatingSystemInfo get_OperatingSystem();
    [CompilerGeneratedAttribute]
internal void set_OperatingSystem(NodeOperatingSystemInfo value);
    [CompilerGeneratedAttribute]
public NodeProcessInfo get_Process();
    [CompilerGeneratedAttribute]
internal void set_Process(NodeProcessInfo value);
    [CompilerGeneratedAttribute]
public NodeJvmInfo get_Jvm();
    [CompilerGeneratedAttribute]
internal void set_Jvm(NodeJvmInfo value);
    [CompilerGeneratedAttribute]
public NodeInfoHttp get_Http();
    [CompilerGeneratedAttribute]
internal void set_Http(NodeInfoHttp value);
    [CompilerGeneratedAttribute]
public NodeInfoNetwork get_Network();
    [CompilerGeneratedAttribute]
internal void set_Network(NodeInfoNetwork value);
    [CompilerGeneratedAttribute]
public List`1<PluginStats> get_Plugins();
    [CompilerGeneratedAttribute]
internal void set_Plugins(List`1<PluginStats> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, NodeThreadPoolInfo> get_ThreadPool();
    [CompilerGeneratedAttribute]
internal void set_ThreadPool(IReadOnlyDictionary`2<string, NodeThreadPoolInfo> value);
    [CompilerGeneratedAttribute]
public NodeInfoTransport get_Transport();
    [CompilerGeneratedAttribute]
internal void set_Transport(NodeInfoTransport value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeInfoHttp : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <BoundAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaxContentLength>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MaxContentLengthInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublishAddress>k__BackingField;
    [DataMemberAttribute]
public IEnumerable`1<string> BoundAddress { get; internal set; }
    [DataMemberAttribute]
public string MaxContentLength { get; internal set; }
    [DataMemberAttribute]
public long MaxContentLengthInBytes { get; internal set; }
    [DataMemberAttribute]
public string PublishAddress { get; internal set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_BoundAddress();
    [CompilerGeneratedAttribute]
internal void set_BoundAddress(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_MaxContentLength();
    [CompilerGeneratedAttribute]
internal void set_MaxContentLength(string value);
    [CompilerGeneratedAttribute]
public long get_MaxContentLengthInBytes();
    [CompilerGeneratedAttribute]
internal void set_MaxContentLengthInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_PublishAddress();
    [CompilerGeneratedAttribute]
internal void set_PublishAddress(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeInfoJvmMemory : object {
    [CompilerGeneratedAttribute]
private string <DirectMax>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DirectMaxInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HeapInit>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HeapInitInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HeapMax>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HeapMaxInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NonHeapInit>k__BackingField;
    [CompilerGeneratedAttribute]
private long <NonHeapInitInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NonHeapMax>k__BackingField;
    [CompilerGeneratedAttribute]
private long <NonHeapMaxInBytes>k__BackingField;
    [DataMemberAttribute]
public string DirectMax { get; internal set; }
    [DataMemberAttribute]
public long DirectMaxInBytes { get; internal set; }
    [DataMemberAttribute]
public string HeapInit { get; internal set; }
    [DataMemberAttribute]
public long HeapInitInBytes { get; internal set; }
    [DataMemberAttribute]
public string HeapMax { get; internal set; }
    [DataMemberAttribute]
public long HeapMaxInBytes { get; internal set; }
    [DataMemberAttribute]
public string NonHeapInit { get; internal set; }
    [DataMemberAttribute]
public long NonHeapInitInBytes { get; internal set; }
    [DataMemberAttribute]
public string NonHeapMax { get; internal set; }
    [DataMemberAttribute]
public long NonHeapMaxInBytes { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_DirectMax();
    [CompilerGeneratedAttribute]
internal void set_DirectMax(string value);
    [CompilerGeneratedAttribute]
public long get_DirectMaxInBytes();
    [CompilerGeneratedAttribute]
internal void set_DirectMaxInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_HeapInit();
    [CompilerGeneratedAttribute]
internal void set_HeapInit(string value);
    [CompilerGeneratedAttribute]
public long get_HeapInitInBytes();
    [CompilerGeneratedAttribute]
internal void set_HeapInitInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_HeapMax();
    [CompilerGeneratedAttribute]
internal void set_HeapMax(string value);
    [CompilerGeneratedAttribute]
public long get_HeapMaxInBytes();
    [CompilerGeneratedAttribute]
internal void set_HeapMaxInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_NonHeapInit();
    [CompilerGeneratedAttribute]
internal void set_NonHeapInit(string value);
    [CompilerGeneratedAttribute]
public long get_NonHeapInitInBytes();
    [CompilerGeneratedAttribute]
internal void set_NonHeapInitInBytes(long value);
    [CompilerGeneratedAttribute]
public string get_NonHeapMax();
    [CompilerGeneratedAttribute]
internal void set_NonHeapMax(string value);
    [CompilerGeneratedAttribute]
public long get_NonHeapMaxInBytes();
    [CompilerGeneratedAttribute]
internal void set_NonHeapMaxInBytes(long value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeInfoMemory : object {
    [CompilerGeneratedAttribute]
private string <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalInBytes>k__BackingField;
    [DataMemberAttribute]
public string Total { get; internal set; }
    [DataMemberAttribute]
public long TotalInBytes { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(string value);
    [CompilerGeneratedAttribute]
public long get_TotalInBytes();
    [CompilerGeneratedAttribute]
internal void set_TotalInBytes(long value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeInfoNetwork : object {
    [CompilerGeneratedAttribute]
private NodeInfoNetworkInterface <PrimaryInterface>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RefreshInterval>k__BackingField;
    [DataMemberAttribute]
public NodeInfoNetworkInterface PrimaryInterface { get; internal set; }
    [DataMemberAttribute]
public int RefreshInterval { get; internal set; }
    [CompilerGeneratedAttribute]
public NodeInfoNetworkInterface get_PrimaryInterface();
    [CompilerGeneratedAttribute]
internal void set_PrimaryInterface(NodeInfoNetworkInterface value);
    [CompilerGeneratedAttribute]
public int get_RefreshInterval();
    [CompilerGeneratedAttribute]
internal void set_RefreshInterval(int value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeInfoNetworkInterface : object {
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MacAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public string Address { get; internal set; }
    [DataMemberAttribute]
public string MacAddress { get; internal set; }
    [DataMemberAttribute]
public string Name { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
internal void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_MacAddress();
    [CompilerGeneratedAttribute]
internal void set_MacAddress(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeInfoOSCPU : object {
    [CompilerGeneratedAttribute]
private string <CacheSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CacheSizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CoresPerSocket>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Mhz>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalCores>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalSockets>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Vendor>k__BackingField;
    [DataMemberAttribute]
public string CacheSize { get; internal set; }
    [DataMemberAttribute]
public int CacheSizeInBytes { get; internal set; }
    [DataMemberAttribute]
public int CoresPerSocket { get; internal set; }
    [DataMemberAttribute]
public int Mhz { get; internal set; }
    [DataMemberAttribute]
public string Model { get; internal set; }
    [DataMemberAttribute]
public int TotalCores { get; internal set; }
    [DataMemberAttribute]
public int TotalSockets { get; internal set; }
    [DataMemberAttribute]
public string Vendor { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_CacheSize();
    [CompilerGeneratedAttribute]
internal void set_CacheSize(string value);
    [CompilerGeneratedAttribute]
public int get_CacheSizeInBytes();
    [CompilerGeneratedAttribute]
internal void set_CacheSizeInBytes(int value);
    [CompilerGeneratedAttribute]
public int get_CoresPerSocket();
    [CompilerGeneratedAttribute]
internal void set_CoresPerSocket(int value);
    [CompilerGeneratedAttribute]
public int get_Mhz();
    [CompilerGeneratedAttribute]
internal void set_Mhz(int value);
    [CompilerGeneratedAttribute]
public string get_Model();
    [CompilerGeneratedAttribute]
internal void set_Model(string value);
    [CompilerGeneratedAttribute]
public int get_TotalCores();
    [CompilerGeneratedAttribute]
internal void set_TotalCores(int value);
    [CompilerGeneratedAttribute]
public int get_TotalSockets();
    [CompilerGeneratedAttribute]
internal void set_TotalSockets(int value);
    [CompilerGeneratedAttribute]
public string get_Vendor();
    [CompilerGeneratedAttribute]
internal void set_Vendor(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeInfoTransport : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <BoundAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublishAddress>k__BackingField;
    [DataMemberAttribute]
public IEnumerable`1<string> BoundAddress { get; internal set; }
    [DataMemberAttribute]
public string PublishAddress { get; internal set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_BoundAddress();
    [CompilerGeneratedAttribute]
internal void set_BoundAddress(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_PublishAddress();
    [CompilerGeneratedAttribute]
internal void set_PublishAddress(string value);
}
public class OpenSearch.Client.NodeIngestStats : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, IngestStats> <Pipelines>k__BackingField;
    [CompilerGeneratedAttribute]
private IngestStats <Total>k__BackingField;
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.IngestStats>")]
public IReadOnlyDictionary`2<string, IngestStats> Pipelines { get; internal set; }
    [DataMemberAttribute]
public IngestStats Total { get; public set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, IngestStats> get_Pipelines();
    [CompilerGeneratedAttribute]
internal void set_Pipelines(IReadOnlyDictionary`2<string, IngestStats> value);
    [CompilerGeneratedAttribute]
public IngestStats get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(IngestStats value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeJvmInfo : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <GcCollectors>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeInfoJvmMemory <Memory>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <MemoryPools>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Pid>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VMName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VMVendor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VMVersion>k__BackingField;
    [DataMemberAttribute]
public IEnumerable`1<string> GcCollectors { get; internal set; }
    [DataMemberAttribute]
public NodeInfoJvmMemory Memory { get; internal set; }
    [DataMemberAttribute]
public IEnumerable`1<string> MemoryPools { get; internal set; }
    [DataMemberAttribute]
public int Pid { get; internal set; }
    [DataMemberAttribute]
public long StartTime { get; internal set; }
    [DataMemberAttribute]
public string Version { get; internal set; }
    [DataMemberAttribute]
public string VMName { get; internal set; }
    [DataMemberAttribute]
public string VMVendor { get; internal set; }
    [DataMemberAttribute]
public string VMVersion { get; internal set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_GcCollectors();
    [CompilerGeneratedAttribute]
internal void set_GcCollectors(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public NodeInfoJvmMemory get_Memory();
    [CompilerGeneratedAttribute]
internal void set_Memory(NodeInfoJvmMemory value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_MemoryPools();
    [CompilerGeneratedAttribute]
internal void set_MemoryPools(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public int get_Pid();
    [CompilerGeneratedAttribute]
internal void set_Pid(int value);
    [CompilerGeneratedAttribute]
public long get_StartTime();
    [CompilerGeneratedAttribute]
internal void set_StartTime(long value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_VMName();
    [CompilerGeneratedAttribute]
internal void set_VMName(string value);
    [CompilerGeneratedAttribute]
public string get_VMVendor();
    [CompilerGeneratedAttribute]
internal void set_VMVendor(string value);
    [CompilerGeneratedAttribute]
public string get_VMVersion();
    [CompilerGeneratedAttribute]
internal void set_VMVersion(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeJvmStats : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, NodeBufferPool> <BufferPools>k__BackingField;
    [CompilerGeneratedAttribute]
private JvmClassesStats <Classes>k__BackingField;
    [CompilerGeneratedAttribute]
private GarbageCollectionStats <GarbageCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private MemoryStats <Memory>k__BackingField;
    [CompilerGeneratedAttribute]
private ThreadStats <Threads>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uptime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <UptimeInMilliseconds>k__BackingField;
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.NodeJvmStats/NodeBufferPool>")]
public IReadOnlyDictionary`2<string, NodeBufferPool> BufferPools { get; internal set; }
    [DataMemberAttribute]
public JvmClassesStats Classes { get; internal set; }
    [DataMemberAttribute]
public GarbageCollectionStats GarbageCollection { get; internal set; }
    [DataMemberAttribute]
public MemoryStats Memory { get; internal set; }
    [DataMemberAttribute]
public ThreadStats Threads { get; internal set; }
    [DataMemberAttribute]
public long Timestamp { get; internal set; }
    [DataMemberAttribute]
public string Uptime { get; internal set; }
    [DataMemberAttribute]
public long UptimeInMilliseconds { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, NodeBufferPool> get_BufferPools();
    [CompilerGeneratedAttribute]
internal void set_BufferPools(IReadOnlyDictionary`2<string, NodeBufferPool> value);
    [CompilerGeneratedAttribute]
public JvmClassesStats get_Classes();
    [CompilerGeneratedAttribute]
internal void set_Classes(JvmClassesStats value);
    [CompilerGeneratedAttribute]
public GarbageCollectionStats get_GarbageCollection();
    [CompilerGeneratedAttribute]
internal void set_GarbageCollection(GarbageCollectionStats value);
    [CompilerGeneratedAttribute]
public MemoryStats get_Memory();
    [CompilerGeneratedAttribute]
internal void set_Memory(MemoryStats value);
    [CompilerGeneratedAttribute]
public ThreadStats get_Threads();
    [CompilerGeneratedAttribute]
internal void set_Threads(ThreadStats value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(long value);
    [CompilerGeneratedAttribute]
public string get_Uptime();
    [CompilerGeneratedAttribute]
internal void set_Uptime(string value);
    [CompilerGeneratedAttribute]
public long get_UptimeInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_UptimeInMilliseconds(long value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeOperatingSystemInfo : object {
    [CompilerGeneratedAttribute]
private string <Architecture>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AvailableProcessors>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeInfoOSCPU <Cpu>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeInfoMemory <Mem>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrettyName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RefreshInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeInfoMemory <Swap>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [DataMemberAttribute]
public string Architecture { get; internal set; }
    [DataMemberAttribute]
public int AvailableProcessors { get; internal set; }
    [DataMemberAttribute]
public NodeInfoOSCPU Cpu { get; internal set; }
    [DataMemberAttribute]
public NodeInfoMemory Mem { get; internal set; }
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public string PrettyName { get; internal set; }
    [DataMemberAttribute]
public int RefreshInterval { get; internal set; }
    [DataMemberAttribute]
public NodeInfoMemory Swap { get; internal set; }
    [DataMemberAttribute]
public string Version { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Architecture();
    [CompilerGeneratedAttribute]
internal void set_Architecture(string value);
    [CompilerGeneratedAttribute]
public int get_AvailableProcessors();
    [CompilerGeneratedAttribute]
internal void set_AvailableProcessors(int value);
    [CompilerGeneratedAttribute]
public NodeInfoOSCPU get_Cpu();
    [CompilerGeneratedAttribute]
internal void set_Cpu(NodeInfoOSCPU value);
    [CompilerGeneratedAttribute]
public NodeInfoMemory get_Mem();
    [CompilerGeneratedAttribute]
internal void set_Mem(NodeInfoMemory value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_PrettyName();
    [CompilerGeneratedAttribute]
internal void set_PrettyName(string value);
    [CompilerGeneratedAttribute]
public int get_RefreshInterval();
    [CompilerGeneratedAttribute]
internal void set_RefreshInterval(int value);
    [CompilerGeneratedAttribute]
public NodeInfoMemory get_Swap();
    [CompilerGeneratedAttribute]
internal void set_Swap(NodeInfoMemory value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(string value);
}
public class OpenSearch.Client.NodePackagingType : object {
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Flavor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public int Count { get; internal set; }
    [DataMemberAttribute]
public string Flavor { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
internal void set_Count(int value);
    [CompilerGeneratedAttribute]
public string get_Flavor();
    [CompilerGeneratedAttribute]
internal void set_Flavor(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeProcessInfo : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MlockAll>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RefreshIntervalInMilliseconds>k__BackingField;
    [DataMemberAttribute]
public long Id { get; internal set; }
    [DataMemberAttribute]
public bool MlockAll { get; internal set; }
    [DataMemberAttribute]
public long RefreshIntervalInMilliseconds { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(long value);
    [CompilerGeneratedAttribute]
public bool get_MlockAll();
    [CompilerGeneratedAttribute]
internal void set_MlockAll(bool value);
    [CompilerGeneratedAttribute]
public long get_RefreshIntervalInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_RefreshIntervalInMilliseconds(long value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.NodeRole : Enum {
    public int value__;
    [EnumMemberAttribute]
public static NodeRole Master;
    [EnumMemberAttribute]
public static NodeRole ClusterManager;
    [EnumMemberAttribute]
public static NodeRole Data;
    [EnumMemberAttribute]
public static NodeRole DataCold;
    [EnumMemberAttribute]
public static NodeRole DataFrozen;
    [EnumMemberAttribute]
public static NodeRole DataContent;
    [EnumMemberAttribute]
public static NodeRole DataHot;
    [EnumMemberAttribute]
public static NodeRole DataWarm;
    [EnumMemberAttribute]
public static NodeRole Client;
    [EnumMemberAttribute]
public static NodeRole Ingest;
    [EnumMemberAttribute]
public static NodeRole VotingOnly;
    [EnumMemberAttribute]
public static NodeRole Transform;
    [EnumMemberAttribute]
public static NodeRole RemoteClusterClient;
    [EnumMemberAttribute]
public static NodeRole CoordinatingOnly;
}
public class OpenSearch.Client.NodesHotThreadsDescriptor : RequestDescriptorBase`3<NodesHotThreadsDescriptor, NodesHotThreadsRequestParameters, INodesHotThreadsRequest> {
    protected string ContentType { get; }
    internal ApiUrls ApiUrls { get; }
    private NodeIds OpenSearch.Client.INodesHotThreadsRequest.NodeId { get; }
    public NodesHotThreadsDescriptor(NodeIds nodeId);
    protected virtual string get_ContentType();
    protected sealed virtual void RequestDefaults(NodesHotThreadsRequestParameters parameters);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.INodesHotThreadsRequest.get_NodeId();
    public NodesHotThreadsDescriptor NodeId(NodeIds nodeId);
    public NodesHotThreadsDescriptor IgnoreIdleThreads(Nullable`1<bool> ignoreidlethreads);
    public NodesHotThreadsDescriptor Interval(Time interval);
    public NodesHotThreadsDescriptor Snapshots(Nullable`1<long> snapshots);
    public NodesHotThreadsDescriptor ThreadType(Nullable`1<ThreadType> threadtype);
    public NodesHotThreadsDescriptor Threads(Nullable`1<long> threads);
    public NodesHotThreadsDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.NodesHotThreadsRequest : PlainRequestBase`1<NodesHotThreadsRequestParameters> {
    protected string ContentType { get; }
    protected INodesHotThreadsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private NodeIds OpenSearch.Client.INodesHotThreadsRequest.NodeId { get; }
    public Nullable`1<bool> IgnoreIdleThreads { get; public set; }
    public Time Interval { get; public set; }
    public Nullable`1<long> Snapshots { get; public set; }
    public Nullable`1<ThreadType> ThreadType { get; public set; }
    public Nullable`1<long> Threads { get; public set; }
    public Time Timeout { get; public set; }
    public NodesHotThreadsRequest(NodeIds nodeId);
    protected virtual string get_ContentType();
    protected sealed virtual void RequestDefaults(NodesHotThreadsRequestParameters parameters);
    protected INodesHotThreadsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.INodesHotThreadsRequest.get_NodeId();
    public Nullable`1<bool> get_IgnoreIdleThreads();
    public void set_IgnoreIdleThreads(Nullable`1<bool> value);
    public Time get_Interval();
    public void set_Interval(Time value);
    public Nullable`1<long> get_Snapshots();
    public void set_Snapshots(Nullable`1<long> value);
    public Nullable`1<ThreadType> get_ThreadType();
    public void set_ThreadType(Nullable`1<ThreadType> value);
    public Nullable`1<long> get_Threads();
    public void set_Threads(Nullable`1<long> value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.NodesHotThreadsResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<HotThreadInformation> <HotThreads>k__BackingField;
    public IReadOnlyCollection`1<HotThreadInformation> HotThreads { get; internal set; }
    internal NodesHotThreadsResponse(IReadOnlyCollection`1<HotThreadInformation> threadInfo);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<HotThreadInformation> get_HotThreads();
    [CompilerGeneratedAttribute]
internal void set_HotThreads(IReadOnlyCollection`1<HotThreadInformation> value);
}
public class OpenSearch.Client.NodesInfoDescriptor : RequestDescriptorBase`3<NodesInfoDescriptor, NodesInfoRequestParameters, INodesInfoRequest> {
    internal ApiUrls ApiUrls { get; }
    private NodeIds OpenSearch.Client.INodesInfoRequest.NodeId { get; }
    private Metrics OpenSearch.Client.INodesInfoRequest.Metric { get; }
    public NodesInfoDescriptor(NodeIds nodeId);
    public NodesInfoDescriptor(Metrics metric);
    public NodesInfoDescriptor(NodeIds nodeId, Metrics metric);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.INodesInfoRequest.get_NodeId();
    private sealed virtual override Metrics OpenSearch.Client.INodesInfoRequest.get_Metric();
    public NodesInfoDescriptor NodeId(NodeIds nodeId);
    public NodesInfoDescriptor Metric(Metrics metric);
    public NodesInfoDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public NodesInfoDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.NodesInfoRequest : PlainRequestBase`1<NodesInfoRequestParameters> {
    protected INodesInfoRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private NodeIds OpenSearch.Client.INodesInfoRequest.NodeId { get; }
    [IgnoreDataMemberAttribute]
private Metrics OpenSearch.Client.INodesInfoRequest.Metric { get; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Time Timeout { get; public set; }
    public NodesInfoRequest(NodeIds nodeId);
    public NodesInfoRequest(Metrics metric);
    public NodesInfoRequest(NodeIds nodeId, Metrics metric);
    protected INodesInfoRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.INodesInfoRequest.get_NodeId();
    private sealed virtual override Metrics OpenSearch.Client.INodesInfoRequest.get_Metric();
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodesInfoResponse : NodesResponseBase {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, NodeInfo> <Nodes>k__BackingField;
    [DataMemberAttribute]
public string ClusterName { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.NodeInfo>")]
public IReadOnlyDictionary`2<string, NodeInfo> Nodes { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
internal void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, NodeInfo> get_Nodes();
    [CompilerGeneratedAttribute]
internal void set_Nodes(IReadOnlyDictionary`2<string, NodeInfo> value);
}
public abstract class OpenSearch.Client.NodesResponseBase : ResponseBase {
    [CompilerGeneratedAttribute]
private NodeStatistics <NodeStatistics>k__BackingField;
    [DataMemberAttribute]
public NodeStatistics NodeStatistics { get; internal set; }
    [CompilerGeneratedAttribute]
public NodeStatistics get_NodeStatistics();
    [CompilerGeneratedAttribute]
internal void set_NodeStatistics(NodeStatistics value);
}
public class OpenSearch.Client.NodesStatsDescriptor : RequestDescriptorBase`3<NodesStatsDescriptor, NodesStatsRequestParameters, INodesStatsRequest> {
    internal ApiUrls ApiUrls { get; }
    private NodeIds OpenSearch.Client.INodesStatsRequest.NodeId { get; }
    private Metrics OpenSearch.Client.INodesStatsRequest.Metric { get; }
    private IndexMetrics OpenSearch.Client.INodesStatsRequest.IndexMetric { get; }
    public NodesStatsDescriptor(NodeIds nodeId);
    public NodesStatsDescriptor(Metrics metric);
    public NodesStatsDescriptor(NodeIds nodeId, Metrics metric);
    public NodesStatsDescriptor(Metrics metric, IndexMetrics indexMetric);
    public NodesStatsDescriptor(NodeIds nodeId, Metrics metric, IndexMetrics indexMetric);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.INodesStatsRequest.get_NodeId();
    private sealed virtual override Metrics OpenSearch.Client.INodesStatsRequest.get_Metric();
    private sealed virtual override IndexMetrics OpenSearch.Client.INodesStatsRequest.get_IndexMetric();
    public NodesStatsDescriptor NodeId(NodeIds nodeId);
    public NodesStatsDescriptor Metric(Metrics metric);
    public NodesStatsDescriptor IndexMetric(IndexMetrics indexMetric);
    public NodesStatsDescriptor CompletionFields(Fields completionfields);
    public NodesStatsDescriptor CompletionFields(Expression`1[] fields);
    public NodesStatsDescriptor FielddataFields(Fields fielddatafields);
    public NodesStatsDescriptor FielddataFields(Expression`1[] fields);
    public NodesStatsDescriptor Fields(Fields fields);
    public NodesStatsDescriptor Fields(Expression`1[] fields);
    public NodesStatsDescriptor Groups(Nullable`1<bool> groups);
    public NodesStatsDescriptor IncludeSegmentFileSizes(Nullable`1<bool> includesegmentfilesizes);
    public NodesStatsDescriptor Level(Nullable`1<Level> level);
    public NodesStatsDescriptor Timeout(Time timeout);
    public NodesStatsDescriptor Types(String[] types);
}
public class OpenSearch.Client.NodesStatsRequest : PlainRequestBase`1<NodesStatsRequestParameters> {
    protected INodesStatsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private NodeIds OpenSearch.Client.INodesStatsRequest.NodeId { get; }
    [IgnoreDataMemberAttribute]
private Metrics OpenSearch.Client.INodesStatsRequest.Metric { get; }
    [IgnoreDataMemberAttribute]
private IndexMetrics OpenSearch.Client.INodesStatsRequest.IndexMetric { get; }
    public Fields CompletionFields { get; public set; }
    public Fields FielddataFields { get; public set; }
    public Fields Fields { get; public set; }
    public Nullable`1<bool> Groups { get; public set; }
    public Nullable`1<bool> IncludeSegmentFileSizes { get; public set; }
    public Nullable`1<Level> Level { get; public set; }
    public Time Timeout { get; public set; }
    public String[] Types { get; public set; }
    public NodesStatsRequest(NodeIds nodeId);
    public NodesStatsRequest(Metrics metric);
    public NodesStatsRequest(NodeIds nodeId, Metrics metric);
    public NodesStatsRequest(Metrics metric, IndexMetrics indexMetric);
    public NodesStatsRequest(NodeIds nodeId, Metrics metric, IndexMetrics indexMetric);
    protected INodesStatsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.INodesStatsRequest.get_NodeId();
    private sealed virtual override Metrics OpenSearch.Client.INodesStatsRequest.get_Metric();
    private sealed virtual override IndexMetrics OpenSearch.Client.INodesStatsRequest.get_IndexMetric();
    public Fields get_CompletionFields();
    public void set_CompletionFields(Fields value);
    public Fields get_FielddataFields();
    public void set_FielddataFields(Fields value);
    public Fields get_Fields();
    public void set_Fields(Fields value);
    public Nullable`1<bool> get_Groups();
    public void set_Groups(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeSegmentFileSizes();
    public void set_IncludeSegmentFileSizes(Nullable`1<bool> value);
    public Nullable`1<Level> get_Level();
    public void set_Level(Nullable`1<Level> value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public String[] get_Types();
    public void set_Types(String[] value);
}
public class OpenSearch.Client.NodesStatsResponse : NodesResponseBase {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, NodeStats> <Nodes>k__BackingField;
    [DataMemberAttribute]
public string ClusterName { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.NodeStats>")]
public IReadOnlyDictionary`2<string, NodeStats> Nodes { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
internal void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, NodeStats> get_Nodes();
    [CompilerGeneratedAttribute]
internal void set_Nodes(IReadOnlyDictionary`2<string, NodeStats> value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeStatistics : object {
    [CompilerGeneratedAttribute]
private int <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Successful>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ErrorCause> <Failures>k__BackingField;
    [DataMemberAttribute]
public int Failed { get; internal set; }
    [DataMemberAttribute]
public int Successful { get; internal set; }
    [DataMemberAttribute]
public int Total { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ErrorCause> Failures { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_Failed();
    [CompilerGeneratedAttribute]
internal void set_Failed(int value);
    [CompilerGeneratedAttribute]
public int get_Successful();
    [CompilerGeneratedAttribute]
internal void set_Successful(int value);
    [CompilerGeneratedAttribute]
public int get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(int value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ErrorCause> get_Failures();
    [CompilerGeneratedAttribute]
internal void set_Failures(IReadOnlyCollection`1<ErrorCause> value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeStats : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, AdaptiveSelectionStats> <AdaptiveSelection>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, BreakerStats> <Breakers>k__BackingField;
    [CompilerGeneratedAttribute]
private FileSystemStats <FileSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStats <Http>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeIngestStats <Ingest>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeJvmStats <Jvm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private OperatingSystemStats <OperatingSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private ProcessStats <Process>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<NodeRole> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private ScriptStats <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private ScriptCacheStats <ScriptCache>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, ThreadCountStats> <ThreadPool>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private TransportStats <Transport>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransportAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexingPressureStats <IndexingPressure>k__BackingField;
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.AdaptiveSelectionStats>")]
public IReadOnlyDictionary`2<string, AdaptiveSelectionStats> AdaptiveSelection { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.BreakerStats>")]
public IReadOnlyDictionary`2<string, BreakerStats> Breakers { get; internal set; }
    [DataMemberAttribute]
public FileSystemStats FileSystem { get; internal set; }
    [DataMemberAttribute]
public string Host { get; internal set; }
    [DataMemberAttribute]
public HttpStats Http { get; internal set; }
    [DataMemberAttribute]
public NodeIngestStats Ingest { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SingleOrEnumerableFormatter`1<System.String>")]
public IEnumerable`1<string> Ip { get; internal set; }
    [DataMemberAttribute]
public NodeJvmStats Jvm { get; internal set; }
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public OperatingSystemStats OperatingSystem { get; internal set; }
    [DataMemberAttribute]
public ProcessStats Process { get; internal set; }
    [DataMemberAttribute]
public IEnumerable`1<NodeRole> Roles { get; internal set; }
    [DataMemberAttribute]
public ScriptStats Script { get; internal set; }
    [DataMemberAttribute]
public ScriptCacheStats ScriptCache { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.ThreadCountStats>")]
public IReadOnlyDictionary`2<string, ThreadCountStats> ThreadPool { get; internal set; }
    [DataMemberAttribute]
public long Timestamp { get; internal set; }
    [DataMemberAttribute]
public TransportStats Transport { get; internal set; }
    [DataMemberAttribute]
public string TransportAddress { get; internal set; }
    [DataMemberAttribute]
public IndexingPressureStats IndexingPressure { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, AdaptiveSelectionStats> get_AdaptiveSelection();
    [CompilerGeneratedAttribute]
internal void set_AdaptiveSelection(IReadOnlyDictionary`2<string, AdaptiveSelectionStats> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, BreakerStats> get_Breakers();
    [CompilerGeneratedAttribute]
internal void set_Breakers(IReadOnlyDictionary`2<string, BreakerStats> value);
    [CompilerGeneratedAttribute]
public FileSystemStats get_FileSystem();
    [CompilerGeneratedAttribute]
internal void set_FileSystem(FileSystemStats value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
internal void set_Host(string value);
    [CompilerGeneratedAttribute]
public HttpStats get_Http();
    [CompilerGeneratedAttribute]
internal void set_Http(HttpStats value);
    [CompilerGeneratedAttribute]
public NodeIngestStats get_Ingest();
    [CompilerGeneratedAttribute]
internal void set_Ingest(NodeIngestStats value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Ip();
    [CompilerGeneratedAttribute]
internal void set_Ip(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public NodeJvmStats get_Jvm();
    [CompilerGeneratedAttribute]
internal void set_Jvm(NodeJvmStats value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public OperatingSystemStats get_OperatingSystem();
    [CompilerGeneratedAttribute]
internal void set_OperatingSystem(OperatingSystemStats value);
    [CompilerGeneratedAttribute]
public ProcessStats get_Process();
    [CompilerGeneratedAttribute]
internal void set_Process(ProcessStats value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<NodeRole> get_Roles();
    [CompilerGeneratedAttribute]
internal void set_Roles(IEnumerable`1<NodeRole> value);
    [CompilerGeneratedAttribute]
public ScriptStats get_Script();
    [CompilerGeneratedAttribute]
internal void set_Script(ScriptStats value);
    [CompilerGeneratedAttribute]
public ScriptCacheStats get_ScriptCache();
    [CompilerGeneratedAttribute]
internal void set_ScriptCache(ScriptCacheStats value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, ThreadCountStats> get_ThreadPool();
    [CompilerGeneratedAttribute]
internal void set_ThreadPool(IReadOnlyDictionary`2<string, ThreadCountStats> value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(long value);
    [CompilerGeneratedAttribute]
public TransportStats get_Transport();
    [CompilerGeneratedAttribute]
internal void set_Transport(TransportStats value);
    [CompilerGeneratedAttribute]
public string get_TransportAddress();
    [CompilerGeneratedAttribute]
internal void set_TransportAddress(string value);
    [CompilerGeneratedAttribute]
public IndexingPressureStats get_IndexingPressure();
    [CompilerGeneratedAttribute]
internal void set_IndexingPressure(IndexingPressureStats value);
}
public class OpenSearch.Client.NodesUsageDescriptor : RequestDescriptorBase`3<NodesUsageDescriptor, NodesUsageRequestParameters, INodesUsageRequest> {
    internal ApiUrls ApiUrls { get; }
    private NodeIds OpenSearch.Client.INodesUsageRequest.NodeId { get; }
    private Metrics OpenSearch.Client.INodesUsageRequest.Metric { get; }
    public NodesUsageDescriptor(NodeIds nodeId);
    public NodesUsageDescriptor(Metrics metric);
    public NodesUsageDescriptor(NodeIds nodeId, Metrics metric);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.INodesUsageRequest.get_NodeId();
    private sealed virtual override Metrics OpenSearch.Client.INodesUsageRequest.get_Metric();
    public NodesUsageDescriptor NodeId(NodeIds nodeId);
    public NodesUsageDescriptor Metric(Metrics metric);
    public NodesUsageDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.NodesUsageRequest : PlainRequestBase`1<NodesUsageRequestParameters> {
    protected INodesUsageRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private NodeIds OpenSearch.Client.INodesUsageRequest.NodeId { get; }
    [IgnoreDataMemberAttribute]
private Metrics OpenSearch.Client.INodesUsageRequest.Metric { get; }
    public Time Timeout { get; public set; }
    public NodesUsageRequest(NodeIds nodeId);
    public NodesUsageRequest(Metrics metric);
    public NodesUsageRequest(NodeIds nodeId, Metrics metric);
    protected INodesUsageRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.INodesUsageRequest.get_NodeId();
    private sealed virtual override Metrics OpenSearch.Client.INodesUsageRequest.get_Metric();
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.NodesUsageResponse : NodesResponseBase {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, NodeUsageInformation> <Nodes>k__BackingField;
    [DataMemberAttribute]
public string ClusterName { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, NodeUsageInformation> Nodes { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
internal void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, NodeUsageInformation> get_Nodes();
    [CompilerGeneratedAttribute]
internal void set_Nodes(IReadOnlyDictionary`2<string, NodeUsageInformation> value);
}
[DataContractAttribute]
public class OpenSearch.Client.NodeThreadPoolInfo : object {
    [CompilerGeneratedAttribute]
private string <KeepAlive>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Core>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <QueueSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public string KeepAlive { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<int> Max { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<int> Core { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<int> Size { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<int> QueueSize { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_KeepAlive();
    [CompilerGeneratedAttribute]
internal void set_KeepAlive(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Max();
    [CompilerGeneratedAttribute]
internal void set_Max(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Core();
    [CompilerGeneratedAttribute]
internal void set_Core(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
internal void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_QueueSize();
    [CompilerGeneratedAttribute]
internal void set_QueueSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
public class OpenSearch.Client.NodeUsageInformation : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, IReadOnlyDictionary`2<string, long>> <Aggregations>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, int> <RestActions>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Since>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Timestamp>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, IReadOnlyDictionary`2<string, long>> Aggregations { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, int> RestActions { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.DateTimeOffsetEpochMillisecondsFormatter")]
public DateTimeOffset Since { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.DateTimeOffsetEpochMillisecondsFormatter")]
public DateTimeOffset Timestamp { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, IReadOnlyDictionary`2<string, long>> get_Aggregations();
    [CompilerGeneratedAttribute]
internal void set_Aggregations(IReadOnlyDictionary`2<string, IReadOnlyDictionary`2<string, long>> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, int> get_RestActions();
    [CompilerGeneratedAttribute]
internal void set_RestActions(IReadOnlyDictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Since();
    [CompilerGeneratedAttribute]
internal void set_Since(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(DateTimeOffset value);
}
public class OpenSearch.Client.NoopMappingVisitor : object {
    [CompilerGeneratedAttribute]
private int <Depth>k__BackingField;
    public int Depth { get; public set; }
    [CompilerGeneratedAttribute]
public virtual int get_Depth();
    [CompilerGeneratedAttribute]
public virtual void set_Depth(int value);
    public virtual void Visit(ITypeMapping mapping);
    public virtual void Visit(ITextProperty property);
    public virtual void Visit(IKeywordProperty property);
    public virtual void Visit(IDateProperty property);
    public virtual void Visit(IDateNanosProperty property);
    public virtual void Visit(IBooleanProperty property);
    public virtual void Visit(IBinaryProperty property);
    public virtual void Visit(INumberProperty property);
    public virtual void Visit(IObjectProperty property);
    public virtual void Visit(INestedProperty property);
    public virtual void Visit(IIpProperty property);
    public virtual void Visit(IGeoPointProperty property);
    public virtual void Visit(IGeoShapeProperty property);
    public virtual void Visit(ICompletionProperty property);
    public virtual void Visit(IMurmur3HashProperty property);
    public virtual void Visit(ITokenCountProperty property);
    public virtual void Visit(IPercolatorProperty property);
    public virtual void Visit(IIntegerRangeProperty property);
    public virtual void Visit(IFloatRangeProperty property);
    public virtual void Visit(ILongRangeProperty property);
    public virtual void Visit(IDoubleRangeProperty property);
    public virtual void Visit(IDateRangeProperty property);
    public virtual void Visit(IIpRangeProperty property);
    public virtual void Visit(IJoinProperty property);
    public virtual void Visit(IRankFeatureProperty property);
    public virtual void Visit(IRankFeaturesProperty property);
    public virtual void Visit(ISearchAsYouTypeProperty property);
}
public class OpenSearch.Client.NoopPropertyVisitor : object {
    public virtual bool SkipProperty(PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IBooleanProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IBinaryProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IObjectProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IGeoShapeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(ICompletionProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IMurmur3HashProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(ITokenCountProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public sealed virtual void Visit(IPercolatorProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public sealed virtual void Visit(IIntegerRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public sealed virtual void Visit(IFloatRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public sealed virtual void Visit(ILongRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public sealed virtual void Visit(IDoubleRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public sealed virtual void Visit(IDateRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public sealed virtual void Visit(IIpRangeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public sealed virtual void Visit(IJoinProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IRankFeatureProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IRankFeaturesProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IIpProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IGeoPointProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(INestedProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IDateProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IDateNanosProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(INumberProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(ITextProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IKeywordProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(ISearchAsYouTypeProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IFieldAliasProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual void Visit(IKnnVectorProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public virtual IProperty Visit(PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    public sealed virtual void Visit(IProperty type, PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
}
public class OpenSearch.Client.NoriAnalyzer : AnalyzerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<NoriDecompoundMode> <DecompoundMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <StopTags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserDictionary>k__BackingField;
    public Nullable`1<NoriDecompoundMode> DecompoundMode { get; public set; }
    public IEnumerable`1<string> StopTags { get; public set; }
    public string UserDictionary { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<NoriDecompoundMode> get_DecompoundMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DecompoundMode(Nullable`1<NoriDecompoundMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_StopTags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopTags(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_UserDictionary();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserDictionary(string value);
}
public class OpenSearch.Client.NoriAnalyzerDescriptor : AnalyzerDescriptorBase`2<NoriAnalyzerDescriptor, INoriAnalyzer> {
    [CompilerGeneratedAttribute]
private Nullable`1<NoriDecompoundMode> <OpenSearch.Client.INoriAnalyzer.DecompoundMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.INoriAnalyzer.StopTags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.INoriAnalyzer.UserDictionary>k__BackingField;
    protected string Type { get; }
    private Nullable`1<NoriDecompoundMode> OpenSearch.Client.INoriAnalyzer.DecompoundMode { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.INoriAnalyzer.StopTags { get; private set; }
    private string OpenSearch.Client.INoriAnalyzer.UserDictionary { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<NoriDecompoundMode> OpenSearch.Client.INoriAnalyzer.get_DecompoundMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INoriAnalyzer.set_DecompoundMode(Nullable`1<NoriDecompoundMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.INoriAnalyzer.get_StopTags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INoriAnalyzer.set_StopTags(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.INoriAnalyzer.get_UserDictionary();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INoriAnalyzer.set_UserDictionary(string value);
    public NoriAnalyzerDescriptor DecompoundMode(Nullable`1<NoriDecompoundMode> mode);
    public NoriAnalyzerDescriptor UserDictionary(string path);
    public NoriAnalyzerDescriptor StopTags(IEnumerable`1<string> stopTags);
    public NoriAnalyzerDescriptor StopTags(String[] stopTags);
}
[StringEnumAttribute]
public enum OpenSearch.Client.NoriDecompoundMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static NoriDecompoundMode Discard;
    [EnumMemberAttribute]
public static NoriDecompoundMode None;
    [EnumMemberAttribute]
public static NoriDecompoundMode Mixed;
}
public class OpenSearch.Client.NoriPartOfSpeechTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <StopTags>k__BackingField;
    public IEnumerable`1<string> StopTags { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_StopTags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopTags(IEnumerable`1<string> value);
}
public class OpenSearch.Client.NoriPartOfSpeechTokenFilterDescriptor : TokenFilterDescriptorBase`2<NoriPartOfSpeechTokenFilterDescriptor, INoriPartOfSpeechTokenFilter> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.INoriPartOfSpeechTokenFilter.StopTags>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.INoriPartOfSpeechTokenFilter.StopTags { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.INoriPartOfSpeechTokenFilter.get_StopTags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INoriPartOfSpeechTokenFilter.set_StopTags(IEnumerable`1<string> value);
    public NoriPartOfSpeechTokenFilterDescriptor StopTags(IEnumerable`1<string> stopTags);
    public NoriPartOfSpeechTokenFilterDescriptor StopTags(String[] stopTags);
}
public class OpenSearch.Client.NoriTokenizer : TokenizerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<NoriDecompoundMode> <DecompoundMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DiscardPunctuation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserDictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <UserDictionaryRules>k__BackingField;
    public Nullable`1<NoriDecompoundMode> DecompoundMode { get; public set; }
    public Nullable`1<bool> DiscardPunctuation { get; public set; }
    public string UserDictionary { get; public set; }
    public IEnumerable`1<string> UserDictionaryRules { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<NoriDecompoundMode> get_DecompoundMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DecompoundMode(Nullable`1<NoriDecompoundMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DiscardPunctuation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DiscardPunctuation(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_UserDictionary();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserDictionary(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_UserDictionaryRules();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserDictionaryRules(IEnumerable`1<string> value);
}
public class OpenSearch.Client.NoriTokenizerDescriptor : TokenizerDescriptorBase`2<NoriTokenizerDescriptor, INoriTokenizer> {
    [CompilerGeneratedAttribute]
private Nullable`1<NoriDecompoundMode> <OpenSearch.Client.INoriTokenizer.DecompoundMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.INoriTokenizer.UserDictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.INoriTokenizer.UserDictionaryRules>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INoriTokenizer.DiscardPunctuation>k__BackingField;
    protected string Type { get; }
    private Nullable`1<NoriDecompoundMode> OpenSearch.Client.INoriTokenizer.DecompoundMode { get; private set; }
    private string OpenSearch.Client.INoriTokenizer.UserDictionary { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.INoriTokenizer.UserDictionaryRules { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.INoriTokenizer.DiscardPunctuation { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<NoriDecompoundMode> OpenSearch.Client.INoriTokenizer.get_DecompoundMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INoriTokenizer.set_DecompoundMode(Nullable`1<NoriDecompoundMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.INoriTokenizer.get_UserDictionary();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INoriTokenizer.set_UserDictionary(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.INoriTokenizer.get_UserDictionaryRules();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INoriTokenizer.set_UserDictionaryRules(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INoriTokenizer.get_DiscardPunctuation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INoriTokenizer.set_DiscardPunctuation(Nullable`1<bool> value);
    public NoriTokenizerDescriptor DecompoundMode(Nullable`1<NoriDecompoundMode> mode);
    public NoriTokenizerDescriptor UserDictionary(string path);
    public NoriTokenizerDescriptor UserDictionaryRules(String[] rules);
    public NoriTokenizerDescriptor UserDictionaryRules(IEnumerable`1<string> rules);
    public NoriTokenizerDescriptor DiscardPunctuation(Nullable`1<bool> discard);
}
[StringEnumAttribute]
public enum OpenSearch.Client.Normalization : Enum {
    public int value__;
    [EnumMemberAttribute]
public static Normalization No;
    [EnumMemberAttribute]
public static Normalization H1;
    [EnumMemberAttribute]
public static Normalization H2;
    [EnumMemberAttribute]
public static Normalization H3;
    [EnumMemberAttribute]
public static Normalization Z;
}
public abstract class OpenSearch.Client.NormalizerBase : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    public string Type { get; protected set; }
    public string Version { get; public set; }
    protected NormalizerBase(string type);
    [CompilerGeneratedAttribute]
public virtual string get_Type();
    [CompilerGeneratedAttribute]
protected virtual void set_Type(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(string value);
}
public abstract class OpenSearch.Client.NormalizerDescriptorBase`2 : DescriptorBase`2<TNormalizer, TNormalizerInterface> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.INormalizer.Version>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.INormalizer.Type { get; }
    private string OpenSearch.Client.INormalizer.Version { get; private set; }
    protected abstract virtual string get_Type();
    private sealed virtual override string OpenSearch.Client.INormalizer.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.INormalizer.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INormalizer.set_Version(string value);
    public TNormalizer Version(string version);
}
internal class OpenSearch.Client.NormalizerFormatter : object {
    public sealed virtual INormalizer Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, INormalizer value, IJsonFormatterResolver formatterResolver);
    private static TNormalizer Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.Normalizers : IsADictionaryBase`2<string, INormalizer> {
    public Normalizers(IDictionary`2<string, INormalizer> container);
    public Normalizers(Dictionary`2<string, INormalizer> container);
    public sealed virtual void Add(string name, INormalizer analyzer);
}
public class OpenSearch.Client.NormalizersDescriptor : IsADictionaryDescriptorBase`4<NormalizersDescriptor, INormalizers, string, INormalizer> {
    public NormalizersDescriptor UserDefined(string name, INormalizer analyzer);
    public NormalizersDescriptor Custom(string name, Func`2<CustomNormalizerDescriptor, ICustomNormalizer> selector);
}
internal class OpenSearch.Client.NullableDateTimeEpochMillisecondsFormatter : object {
    public sealed virtual Nullable`1<DateTime> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Nullable`1<DateTime> value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.NullableDateTimeOffsetEpochMillisecondsFormatter : object {
    public sealed virtual Nullable`1<DateTimeOffset> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Nullable`1<DateTimeOffset> value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.NullableDateTimeOffsetEpochSecondsFormatter : object {
    public sealed virtual Nullable`1<DateTimeOffset> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Nullable`1<DateTimeOffset> value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.NullableGeoOrientationFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, Nullable`1<GeoOrientation> value, IJsonFormatterResolver formatterResolver);
    public sealed virtual Nullable`1<GeoOrientation> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.NullableShapeOrientationFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, Nullable`1<ShapeOrientation> value, IJsonFormatterResolver formatterResolver);
    public sealed virtual Nullable`1<ShapeOrientation> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.NullableStringBooleanFormatter : object {
    public sealed virtual Nullable`1<bool> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Nullable`1<bool> value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.NullableStringDoubleFormatter : object {
    public sealed virtual Nullable`1<double> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Nullable`1<double> value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.NullableStringIntFormatter : object {
    public sealed virtual Nullable`1<int> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Nullable`1<int> value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.NullableStringLongFormatter : object {
    public sealed virtual Nullable`1<long> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Nullable`1<long> value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.NullableTimeSpanTicksFormatter : object {
    public sealed virtual Nullable`1<TimeSpan> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Nullable`1<TimeSpan> value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.NumberAttribute : OpenSearchDocValuesPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INumberProperty.Coerce>k__BackingField;
    [CompilerGeneratedAttribute]
private INumericFielddata <OpenSearch.Client.INumberProperty.Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INumberProperty.IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INumberProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.INumberProperty.NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.INumberProperty.ScalingFactor>k__BackingField;
    public bool Coerce { get; public set; }
    public bool IgnoreMalformed { get; public set; }
    public bool Index { get; public set; }
    public double NullValue { get; public set; }
    public double ScalingFactor { get; public set; }
    private Nullable`1<bool> OpenSearch.Client.INumberProperty.Coerce { get; private set; }
    private INumericFielddata OpenSearch.Client.INumberProperty.Fielddata { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.INumberProperty.IgnoreMalformed { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.INumberProperty.Index { get; private set; }
    private Nullable`1<double> OpenSearch.Client.INumberProperty.NullValue { get; private set; }
    private Nullable`1<double> OpenSearch.Client.INumberProperty.ScalingFactor { get; private set; }
    private INumberProperty Self { get; }
    public NumberAttribute(NumberType type);
    public bool get_Coerce();
    public void set_Coerce(bool value);
    public bool get_IgnoreMalformed();
    public void set_IgnoreMalformed(bool value);
    public bool get_Index();
    public void set_Index(bool value);
    public double get_NullValue();
    public void set_NullValue(double value);
    public double get_ScalingFactor();
    public void set_ScalingFactor(double value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INumberProperty.get_Coerce();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_Coerce(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override INumericFielddata OpenSearch.Client.INumberProperty.get_Fielddata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_Fielddata(INumericFielddata value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INumberProperty.get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INumberProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.INumberProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_NullValue(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.INumberProperty.get_ScalingFactor();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_ScalingFactor(Nullable`1<double> value);
    private INumberProperty get_Self();
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.NumberProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Coerce>k__BackingField;
    [CompilerGeneratedAttribute]
private INumericFielddata <Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <ScalingFactor>k__BackingField;
    public Nullable`1<double> Boost { get; public set; }
    public Nullable`1<bool> Coerce { get; public set; }
    public INumericFielddata Fielddata { get; public set; }
    public Nullable`1<bool> IgnoreMalformed { get; public set; }
    public Nullable`1<bool> Index { get; public set; }
    public Nullable`1<double> NullValue { get; public set; }
    public Nullable`1<double> ScalingFactor { get; public set; }
    public NumberProperty(NumberType type);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Boost();
    [CompilerGeneratedAttribute]
public void set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Coerce();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coerce(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual INumericFielddata get_Fielddata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fielddata(INumericFielddata value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_NullValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NullValue(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_ScalingFactor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScalingFactor(Nullable`1<double> value);
}
public class OpenSearch.Client.NumberPropertyDescriptor`1 : NumberPropertyDescriptorBase`3<NumberPropertyDescriptor`1<T>, INumberProperty, T> {
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public abstract class OpenSearch.Client.NumberPropertyDescriptorBase`3 : DocValuesPropertyDescriptorBase`3<TDescriptor, TInterface, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INumberProperty.Coerce>k__BackingField;
    [CompilerGeneratedAttribute]
private INumericFielddata <OpenSearch.Client.INumberProperty.Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INumberProperty.IgnoreMalformed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.INumberProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.INumberProperty.NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.INumberProperty.ScalingFactor>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.INumberProperty.Coerce { get; private set; }
    private INumericFielddata OpenSearch.Client.INumberProperty.Fielddata { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.INumberProperty.IgnoreMalformed { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.INumberProperty.Index { get; private set; }
    private Nullable`1<double> OpenSearch.Client.INumberProperty.NullValue { get; private set; }
    private Nullable`1<double> OpenSearch.Client.INumberProperty.ScalingFactor { get; private set; }
    protected NumberPropertyDescriptorBase`3(FieldType type);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INumberProperty.get_Coerce();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_Coerce(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override INumericFielddata OpenSearch.Client.INumberProperty.get_Fielddata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_Fielddata(INumericFielddata value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INumberProperty.get_IgnoreMalformed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_IgnoreMalformed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.INumberProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.INumberProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_NullValue(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.INumberProperty.get_ScalingFactor();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumberProperty.set_ScalingFactor(Nullable`1<double> value);
    public TDescriptor Type(Nullable`1<NumberType> type);
    public TDescriptor Index(Nullable`1<bool> index);
    public TDescriptor NullValue(Nullable`1<double> nullValue);
    public TDescriptor IgnoreMalformed(Nullable`1<bool> ignoreMalformed);
    public TDescriptor Coerce(Nullable`1<bool> coerce);
    public TDescriptor Fielddata(Func`2<NumericFielddataDescriptor, INumericFielddata> selector);
    public TDescriptor ScalingFactor(Nullable`1<double> scalingFactor);
}
[StringEnumAttribute]
public enum OpenSearch.Client.NumberType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static NumberType Float;
    [EnumMemberAttribute]
public static NumberType HalfFloat;
    [EnumMemberAttribute]
public static NumberType ScaledFloat;
    [EnumMemberAttribute]
public static NumberType Double;
    [EnumMemberAttribute]
public static NumberType Integer;
    [EnumMemberAttribute]
public static NumberType Long;
    [EnumMemberAttribute]
public static NumberType Short;
    [EnumMemberAttribute]
public static NumberType Byte;
}
[ExtensionAttribute]
internal static class OpenSearch.Client.NumberTypeExtensions : object {
    [ExtensionAttribute]
public static FieldType ToFieldType(NumberType numberType);
}
public class OpenSearch.Client.NumericFielddata : FielddataBase {
    [CompilerGeneratedAttribute]
private Nullable`1<NumericFielddataFormat> <Format>k__BackingField;
    public Nullable`1<NumericFielddataFormat> Format { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<NumericFielddataFormat> get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(Nullable`1<NumericFielddataFormat> value);
}
public class OpenSearch.Client.NumericFielddataDescriptor : FielddataDescriptorBase`2<NumericFielddataDescriptor, INumericFielddata> {
    [CompilerGeneratedAttribute]
private Nullable`1<NumericFielddataFormat> <OpenSearch.Client.INumericFielddata.Format>k__BackingField;
    private Nullable`1<NumericFielddataFormat> OpenSearch.Client.INumericFielddata.Format { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<NumericFielddataFormat> OpenSearch.Client.INumericFielddata.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumericFielddata.set_Format(Nullable`1<NumericFielddataFormat> value);
    public NumericFielddataDescriptor Format(Nullable`1<NumericFielddataFormat> format);
}
[StringEnumAttribute]
public enum OpenSearch.Client.NumericFielddataFormat : Enum {
    public int value__;
    [EnumMemberAttribute]
public static NumericFielddataFormat Array;
    [EnumMemberAttribute]
public static NumericFielddataFormat Disabled;
}
public class OpenSearch.Client.NumericRangeQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <LessThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RangeRelation> <Relation>k__BackingField;
    public Nullable`1<double> GreaterThan { get; public set; }
    public Nullable`1<double> GreaterThanOrEqualTo { get; public set; }
    public Nullable`1<double> LessThan { get; public set; }
    public Nullable`1<double> LessThanOrEqualTo { get; public set; }
    public Nullable`1<RangeRelation> Relation { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_GreaterThan();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GreaterThan(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GreaterThanOrEqualTo(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_LessThan();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LessThan(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LessThanOrEqualTo(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<RangeRelation> get_Relation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Relation(Nullable`1<RangeRelation> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(INumericRangeQuery q);
}
[DataContractAttribute]
public class OpenSearch.Client.NumericRangeQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<NumericRangeQueryDescriptor`1<T>, INumericRangeQuery, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.INumericRangeQuery.GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.INumericRangeQuery.GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.INumericRangeQuery.LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.INumericRangeQuery.LessThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RangeRelation> <OpenSearch.Client.INumericRangeQuery.Relation>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<double> OpenSearch.Client.INumericRangeQuery.GreaterThan { get; private set; }
    private Nullable`1<double> OpenSearch.Client.INumericRangeQuery.GreaterThanOrEqualTo { get; private set; }
    private Nullable`1<double> OpenSearch.Client.INumericRangeQuery.LessThan { get; private set; }
    private Nullable`1<double> OpenSearch.Client.INumericRangeQuery.LessThanOrEqualTo { get; private set; }
    private Nullable`1<RangeRelation> OpenSearch.Client.INumericRangeQuery.Relation { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.INumericRangeQuery.get_GreaterThan();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumericRangeQuery.set_GreaterThan(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.INumericRangeQuery.get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumericRangeQuery.set_GreaterThanOrEqualTo(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.INumericRangeQuery.get_LessThan();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumericRangeQuery.set_LessThan(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.INumericRangeQuery.get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumericRangeQuery.set_LessThanOrEqualTo(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<RangeRelation> OpenSearch.Client.INumericRangeQuery.get_Relation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.INumericRangeQuery.set_Relation(Nullable`1<RangeRelation> value);
    public NumericRangeQueryDescriptor`1<T> GreaterThan(Nullable`1<double> from);
    public NumericRangeQueryDescriptor`1<T> GreaterThanOrEquals(Nullable`1<double> from);
    public NumericRangeQueryDescriptor`1<T> LessThan(Nullable`1<double> to);
    public NumericRangeQueryDescriptor`1<T> LessThanOrEquals(Nullable`1<double> to);
    public NumericRangeQueryDescriptor`1<T> Relation(Nullable`1<RangeRelation> relation);
}
[StringEnumAttribute]
public enum OpenSearch.Client.NumericType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static NumericType Long;
    [EnumMemberAttribute]
public static NumericType Double;
    [EnumMemberAttribute]
public static NumericType Date;
    [EnumMemberAttribute]
public static NumericType DateNanos;
}
public class OpenSearch.Client.ObjectAttribute : OpenSearchCorePropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Union`2<bool, DynamicMapping> <OpenSearch.Client.IObjectProperty.Dynamic>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IObjectProperty.Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IProperties <OpenSearch.Client.IObjectProperty.Properties>k__BackingField;
    public bool Enabled { get; public set; }
    private Union`2<bool, DynamicMapping> OpenSearch.Client.IObjectProperty.Dynamic { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IObjectProperty.Enabled { get; private set; }
    private IProperties OpenSearch.Client.IObjectProperty.Properties { get; private set; }
    private IObjectProperty Self { get; }
    protected ObjectAttribute(FieldType type);
    public bool get_Enabled();
    public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<bool, DynamicMapping> OpenSearch.Client.IObjectProperty.get_Dynamic();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IObjectProperty.set_Dynamic(Union`2<bool, DynamicMapping> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IObjectProperty.get_Enabled();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IObjectProperty.set_Enabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IProperties OpenSearch.Client.IObjectProperty.get_Properties();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IObjectProperty.set_Properties(IProperties value);
    private IObjectProperty get_Self();
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.ObjectProperty : CorePropertyBase {
    [CompilerGeneratedAttribute]
private Union`2<bool, DynamicMapping> <Dynamic>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IProperties <Properties>k__BackingField;
    public Union`2<bool, DynamicMapping> Dynamic { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public IProperties Properties { get; public set; }
    protected ObjectProperty(FieldType type);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<bool, DynamicMapping> get_Dynamic();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Dynamic(Union`2<bool, DynamicMapping> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Enabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Enabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IProperties get_Properties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Properties(IProperties value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public abstract class OpenSearch.Client.ObjectPropertyDescriptorBase`4 : CorePropertyDescriptorBase`3<TDescriptor, TInterface, TParent> {
    [CompilerGeneratedAttribute]
private Union`2<bool, DynamicMapping> <OpenSearch.Client.IObjectProperty.Dynamic>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IObjectProperty.Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IProperties <OpenSearch.Client.IObjectProperty.Properties>k__BackingField;
    private Union`2<bool, DynamicMapping> OpenSearch.Client.IObjectProperty.Dynamic { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IObjectProperty.Enabled { get; private set; }
    private IProperties OpenSearch.Client.IObjectProperty.Properties { get; private set; }
    protected ObjectPropertyDescriptorBase`4(FieldType fieldType);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<bool, DynamicMapping> OpenSearch.Client.IObjectProperty.get_Dynamic();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IObjectProperty.set_Dynamic(Union`2<bool, DynamicMapping> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IObjectProperty.get_Enabled();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IObjectProperty.set_Enabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IProperties OpenSearch.Client.IObjectProperty.get_Properties();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IObjectProperty.set_Properties(IProperties value);
    public TDescriptor Dynamic(Union`2<bool, DynamicMapping> dynamic);
    public TDescriptor Dynamic(bool dynamic);
    public TDescriptor Enabled(Nullable`1<bool> enabled);
    public TDescriptor Properties(Func`2<PropertiesDescriptor`1<TChild>, IPromise`1<IProperties>> selector);
    public TDescriptor AutoMap(IPropertyVisitor visitor, int maxRecursion);
    public TDescriptor AutoMap(int maxRecursion);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.ObjectTypeDescriptor`2 : ObjectPropertyDescriptorBase`4<ObjectTypeDescriptor`2<TParent, TChild>, IObjectProperty, TParent, TChild> {
}
public abstract class OpenSearch.Client.ObsoleteMappingsBase : object {
    [CompilerGeneratedAttribute]
private ITypeMapping <Wrapped>k__BackingField;
    [DataMemberAttribute]
private Nullable`1<bool> OpenSearch.Client.ITypeMapping.DateDetection { get; private set; }
    [DataMemberAttribute]
private Union`2<bool, DynamicMapping> OpenSearch.Client.ITypeMapping.Dynamic { get; private set; }
    [DataMemberAttribute]
private IEnumerable`1<string> OpenSearch.Client.ITypeMapping.DynamicDateFormats { get; private set; }
    [DataMemberAttribute]
private IDynamicTemplateContainer OpenSearch.Client.ITypeMapping.DynamicTemplates { get; private set; }
    [DataMemberAttribute]
private IFieldNamesField OpenSearch.Client.ITypeMapping.FieldNamesField { get; private set; }
    [DataMemberAttribute]
private IDictionary`2<string, object> OpenSearch.Client.ITypeMapping.Meta { get; private set; }
    [DataMemberAttribute]
private Nullable`1<bool> OpenSearch.Client.ITypeMapping.NumericDetection { get; private set; }
    [DataMemberAttribute]
private IProperties OpenSearch.Client.ITypeMapping.Properties { get; private set; }
    [DataMemberAttribute]
private IRoutingField OpenSearch.Client.ITypeMapping.RoutingField { get; private set; }
    [DataMemberAttribute]
private IRuntimeFields OpenSearch.Client.ITypeMapping.RuntimeFields { get; private set; }
    [DataMemberAttribute]
private ISizeField OpenSearch.Client.ITypeMapping.SizeField { get; private set; }
    [DataMemberAttribute]
private ISourceField OpenSearch.Client.ITypeMapping.SourceField { get; private set; }
    protected ITypeMapping Wrapped { get; protected set; }
    private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITypeMapping.get_DateDetection();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_DateDetection(Nullable`1<bool> value);
    private sealed virtual override Union`2<bool, DynamicMapping> OpenSearch.Client.ITypeMapping.get_Dynamic();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_Dynamic(Union`2<bool, DynamicMapping> value);
    private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ITypeMapping.get_DynamicDateFormats();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_DynamicDateFormats(IEnumerable`1<string> value);
    private sealed virtual override IDynamicTemplateContainer OpenSearch.Client.ITypeMapping.get_DynamicTemplates();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_DynamicTemplates(IDynamicTemplateContainer value);
    private sealed virtual override IFieldNamesField OpenSearch.Client.ITypeMapping.get_FieldNamesField();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_FieldNamesField(IFieldNamesField value);
    private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.ITypeMapping.get_Meta();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_Meta(IDictionary`2<string, object> value);
    private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITypeMapping.get_NumericDetection();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_NumericDetection(Nullable`1<bool> value);
    private sealed virtual override IProperties OpenSearch.Client.ITypeMapping.get_Properties();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_Properties(IProperties value);
    private sealed virtual override IRoutingField OpenSearch.Client.ITypeMapping.get_RoutingField();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_RoutingField(IRoutingField value);
    private sealed virtual override IRuntimeFields OpenSearch.Client.ITypeMapping.get_RuntimeFields();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_RuntimeFields(IRuntimeFields value);
    private sealed virtual override ISizeField OpenSearch.Client.ITypeMapping.get_SizeField();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_SizeField(ISizeField value);
    private sealed virtual override ISourceField OpenSearch.Client.ITypeMapping.get_SourceField();
    private sealed virtual override void OpenSearch.Client.ITypeMapping.set_SourceField(ISourceField value);
    [CompilerGeneratedAttribute]
protected ITypeMapping get_Wrapped();
    [CompilerGeneratedAttribute]
protected void set_Wrapped(ITypeMapping value);
}
public class OpenSearch.Client.OpenIndexDescriptor : RequestDescriptorBase`3<OpenIndexDescriptor, OpenIndexRequestParameters, IOpenIndexRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IOpenIndexRequest.Index { get; }
    public OpenIndexDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IOpenIndexRequest.get_Index();
    public OpenIndexDescriptor Index(Indices index);
    public OpenIndexDescriptor Index();
    public OpenIndexDescriptor AllIndices();
    public OpenIndexDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public OpenIndexDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public OpenIndexDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public OpenIndexDescriptor MasterTimeout(Time mastertimeout);
    public OpenIndexDescriptor ClusterManagerTimeout(Time timeout);
    public OpenIndexDescriptor Timeout(Time timeout);
    public OpenIndexDescriptor WaitForActiveShards(string waitforactiveshards);
}
public class OpenSearch.Client.OpenIndexRequest : PlainRequestBase`1<OpenIndexRequestParameters> {
    protected IOpenIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IOpenIndexRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public OpenIndexRequest(Indices index);
    protected IOpenIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IOpenIndexRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
public class OpenSearch.Client.OpenIndexResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.OpenSearchClient : object {
    [CompilerGeneratedAttribute]
private IOpenSearchLowLevelClient <LowLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private ITransport`1<IConnectionSettingsValues> <Transport>k__BackingField;
    [CompilerGeneratedAttribute]
private DanglingIndicesNamespace <DanglingIndices>k__BackingField;
    [CompilerGeneratedAttribute]
private IngestNamespace <Ingest>k__BackingField;
    [CompilerGeneratedAttribute]
private NodesNamespace <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
private SnapshotNamespace <Snapshot>k__BackingField;
    [CompilerGeneratedAttribute]
private TasksNamespace <Tasks>k__BackingField;
    [CompilerGeneratedAttribute]
private CatNamespace <Cat>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterNamespace <Cluster>k__BackingField;
    [CompilerGeneratedAttribute]
private IndicesNamespace <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpNamespace <Http>k__BackingField;
    public IConnectionSettingsValues ConnectionSettings { get; }
    public Inferrer Infer { get; }
    public IOpenSearchLowLevelClient LowLevel { get; }
    public IOpenSearchSerializer RequestResponseSerializer { get; }
    public IOpenSearchSerializer SourceSerializer { get; }
    private ITransport`1<IConnectionSettingsValues> Transport { get; }
    public DanglingIndicesNamespace DanglingIndices { get; private set; }
    public IngestNamespace Ingest { get; private set; }
    public NodesNamespace Nodes { get; private set; }
    public SnapshotNamespace Snapshot { get; private set; }
    public TasksNamespace Tasks { get; private set; }
    public CatNamespace Cat { get; private set; }
    public ClusterNamespace Cluster { get; private set; }
    public IndicesNamespace Indices { get; private set; }
    public HttpNamespace Http { get; private set; }
    public OpenSearchClient(Uri uri);
    public OpenSearchClient(string cloudId, BasicAuthenticationCredentials credentials);
    public OpenSearchClient(string cloudId, ApiKeyAuthenticationCredentials credentials);
    public OpenSearchClient(IConnectionSettingsValues connectionSettings);
    public OpenSearchClient(ITransport`1<IConnectionSettingsValues> transport);
    public sealed virtual BulkAllObservable`1<T> BulkAll(IEnumerable`1<T> documents, Func`2<BulkAllDescriptor`1<T>, IBulkAllRequest`1<T>> selector, CancellationToken cancellationToken);
    public sealed virtual BulkAllObservable`1<T> BulkAll(IBulkAllRequest`1<T> request, CancellationToken cancellationToken);
    public sealed virtual IObservable`1<BulkAllResponse> Reindex(Func`2<ReindexDescriptor`2<TSource, TSource>, IReindexRequest`2<TSource, TSource>> selector, CancellationToken cancellationToken);
    public sealed virtual IObservable`1<BulkAllResponse> Reindex(Func`2<TSource, TTarget> mapper, Func`2<ReindexDescriptor`2<TSource, TTarget>, IReindexRequest`2<TSource, TTarget>> selector, CancellationToken cancellationToken);
    public sealed virtual IObservable`1<BulkAllResponse> Reindex(IReindexRequest`1<TSource> request, CancellationToken cancellationToken);
    public sealed virtual IObservable`1<BulkAllResponse> Reindex(IReindexRequest`2<TSource, TTarget> request, CancellationToken cancellationToken);
    public sealed virtual IObservable`1<BulkAllResponse> Reindex(IndexName fromIndex, IndexName toIndex, Func`2<TSource, TTarget> mapper, Func`2<QueryContainerDescriptor`1<TSource>, QueryContainer> selector, CancellationToken cancellationToken);
    public sealed virtual IObservable`1<BulkAllResponse> Reindex(IndexName fromIndex, IndexName toIndex, Func`2<QueryContainerDescriptor`1<TSource>, QueryContainer> selector, CancellationToken cancellationToken);
    private static Func`2<ReindexDescriptor`2<TSource, TTarget>, IReindexRequest`2<TSource, TTarget>> SimplifiedReindexer(IndexName fromIndex, IndexName toIndex, Func`2<QueryContainerDescriptor`1<TSource>, QueryContainer> selector);
    public sealed virtual IObservable`1<ScrollAllResponse`1<T>> ScrollAll(Time scrollTime, int numberOfSlices, Func`2<ScrollAllDescriptor`1<T>, IScrollAllRequest> selector, CancellationToken cancellationToken);
    public sealed virtual IObservable`1<ScrollAllResponse`1<T>> ScrollAll(IScrollAllRequest request, CancellationToken cancellationToken);
    public sealed virtual CreateResponse CreateDocument(TDocument document);
    public sealed virtual Task`1<CreateResponse> CreateDocumentAsync(TDocument document, CancellationToken cancellationToken);
    public sealed virtual IndexResponse IndexDocument(TDocument document);
    public sealed virtual Task`1<IndexResponse> IndexDocumentAsync(TDocument document, CancellationToken ct);
    public sealed virtual PutMappingResponse Map(Func`2<PutMappingDescriptor`1<T>, IPutMappingRequest> selector);
    public sealed virtual PutMappingResponse Map(IPutMappingRequest request);
    public sealed virtual Task`1<PutMappingResponse> MapAsync(Func`2<PutMappingDescriptor`1<T>, IPutMappingRequest> selector, CancellationToken ct);
    public sealed virtual Task`1<PutMappingResponse> MapAsync(IPutMappingRequest request, CancellationToken ct);
    private void SetupNamespaces();
    private void SetupGeneratedNamespaces();
    public sealed virtual IConnectionSettingsValues get_ConnectionSettings();
    public sealed virtual Inferrer get_Infer();
    [CompilerGeneratedAttribute]
public sealed virtual IOpenSearchLowLevelClient get_LowLevel();
    public sealed virtual IOpenSearchSerializer get_RequestResponseSerializer();
    public sealed virtual IOpenSearchSerializer get_SourceSerializer();
    [CompilerGeneratedAttribute]
private ITransport`1<IConnectionSettingsValues> get_Transport();
    internal TResponse DoRequest(TRequest request, IRequestParameters parameters, Action`1<IRequestConfiguration> forceConfiguration);
    internal Task`1<TResponse> DoRequestAsync(TRequest request, IRequestParameters parameters, CancellationToken ct, Action`1<IRequestConfiguration> forceConfiguration);
    internal TResponse DoRequest(TRequest request, IRequestParameters parameters, Func`2<TRequest, PostData> bodySelector, Action`1<IRequestConfiguration> forceConfiguration);
    internal Task`1<TResponse> DoRequestAsync(TRequest request, IRequestParameters parameters, Func`2<TRequest, PostData> bodySelector, CancellationToken ct, Action`1<IRequestConfiguration> forceConfiguration);
    private ValueTuple`3<HttpMethod, string, PostData> PrepareRequest(TRequest request, IRequestParameters parameters, Func`2<TRequest, PostData> bodySelector, Action`1<IRequestConfiguration> forceConfiguration);
    private static void ForceConfiguration(IRequest request, Action`1<IRequestConfiguration> forceConfiguration);
    private void ForceContentType(TRequest request, string contentType);
    internal static void ForceJson(IRequestConfiguration requestConfiguration);
    internal static void ForceTextPlain(IRequestConfiguration requestConfiguration);
    internal IRequestParameters ResponseBuilder(SourceRequestParameters parameters, CustomResponseBuilderBase builder);
    [CompilerGeneratedAttribute]
public sealed virtual DanglingIndicesNamespace get_DanglingIndices();
    [CompilerGeneratedAttribute]
private void set_DanglingIndices(DanglingIndicesNamespace value);
    [CompilerGeneratedAttribute]
public sealed virtual IngestNamespace get_Ingest();
    [CompilerGeneratedAttribute]
private void set_Ingest(IngestNamespace value);
    [CompilerGeneratedAttribute]
public sealed virtual NodesNamespace get_Nodes();
    [CompilerGeneratedAttribute]
private void set_Nodes(NodesNamespace value);
    [CompilerGeneratedAttribute]
public sealed virtual SnapshotNamespace get_Snapshot();
    [CompilerGeneratedAttribute]
private void set_Snapshot(SnapshotNamespace value);
    [CompilerGeneratedAttribute]
public sealed virtual TasksNamespace get_Tasks();
    [CompilerGeneratedAttribute]
private void set_Tasks(TasksNamespace value);
    public sealed virtual BulkResponse Bulk(Func`2<BulkDescriptor, IBulkRequest> selector);
    public sealed virtual Task`1<BulkResponse> BulkAsync(Func`2<BulkDescriptor, IBulkRequest> selector, CancellationToken ct);
    public sealed virtual BulkResponse Bulk(IBulkRequest request);
    public sealed virtual Task`1<BulkResponse> BulkAsync(IBulkRequest request, CancellationToken ct);
    public sealed virtual ClearScrollResponse ClearScroll(Func`2<ClearScrollDescriptor, IClearScrollRequest> selector);
    public sealed virtual Task`1<ClearScrollResponse> ClearScrollAsync(Func`2<ClearScrollDescriptor, IClearScrollRequest> selector, CancellationToken ct);
    public sealed virtual ClearScrollResponse ClearScroll(IClearScrollRequest request);
    public sealed virtual Task`1<ClearScrollResponse> ClearScrollAsync(IClearScrollRequest request, CancellationToken ct);
    public sealed virtual CountResponse Count(Func`2<CountDescriptor`1<TDocument>, ICountRequest> selector);
    public sealed virtual Task`1<CountResponse> CountAsync(Func`2<CountDescriptor`1<TDocument>, ICountRequest> selector, CancellationToken ct);
    public sealed virtual CountResponse Count(ICountRequest request);
    public sealed virtual Task`1<CountResponse> CountAsync(ICountRequest request, CancellationToken ct);
    public sealed virtual CreateResponse Create(TDocument document, Func`2<CreateDescriptor`1<TDocument>, ICreateRequest`1<TDocument>> selector);
    public sealed virtual Task`1<CreateResponse> CreateAsync(TDocument document, Func`2<CreateDescriptor`1<TDocument>, ICreateRequest`1<TDocument>> selector, CancellationToken ct);
    public sealed virtual CreateResponse Create(ICreateRequest`1<TDocument> request);
    public sealed virtual Task`1<CreateResponse> CreateAsync(ICreateRequest`1<TDocument> request, CancellationToken ct);
    public sealed virtual DeleteResponse Delete(DocumentPath`1<TDocument> id, Func`2<DeleteDescriptor`1<TDocument>, IDeleteRequest> selector);
    public sealed virtual Task`1<DeleteResponse> DeleteAsync(DocumentPath`1<TDocument> id, Func`2<DeleteDescriptor`1<TDocument>, IDeleteRequest> selector, CancellationToken ct);
    public sealed virtual DeleteResponse Delete(IDeleteRequest request);
    public sealed virtual Task`1<DeleteResponse> DeleteAsync(IDeleteRequest request, CancellationToken ct);
    public sealed virtual DeleteByQueryResponse DeleteByQuery(Func`2<DeleteByQueryDescriptor`1<TDocument>, IDeleteByQueryRequest> selector);
    public sealed virtual Task`1<DeleteByQueryResponse> DeleteByQueryAsync(Func`2<DeleteByQueryDescriptor`1<TDocument>, IDeleteByQueryRequest> selector, CancellationToken ct);
    public sealed virtual DeleteByQueryResponse DeleteByQuery(IDeleteByQueryRequest request);
    public sealed virtual Task`1<DeleteByQueryResponse> DeleteByQueryAsync(IDeleteByQueryRequest request, CancellationToken ct);
    public sealed virtual ListTasksResponse DeleteByQueryRethrottle(TaskId taskId, Func`2<DeleteByQueryRethrottleDescriptor, IDeleteByQueryRethrottleRequest> selector);
    public sealed virtual Task`1<ListTasksResponse> DeleteByQueryRethrottleAsync(TaskId taskId, Func`2<DeleteByQueryRethrottleDescriptor, IDeleteByQueryRethrottleRequest> selector, CancellationToken ct);
    public sealed virtual ListTasksResponse DeleteByQueryRethrottle(IDeleteByQueryRethrottleRequest request);
    public sealed virtual Task`1<ListTasksResponse> DeleteByQueryRethrottleAsync(IDeleteByQueryRethrottleRequest request, CancellationToken ct);
    public sealed virtual DeleteScriptResponse DeleteScript(Id id, Func`2<DeleteScriptDescriptor, IDeleteScriptRequest> selector);
    public sealed virtual Task`1<DeleteScriptResponse> DeleteScriptAsync(Id id, Func`2<DeleteScriptDescriptor, IDeleteScriptRequest> selector, CancellationToken ct);
    public sealed virtual DeleteScriptResponse DeleteScript(IDeleteScriptRequest request);
    public sealed virtual Task`1<DeleteScriptResponse> DeleteScriptAsync(IDeleteScriptRequest request, CancellationToken ct);
    public sealed virtual ExistsResponse DocumentExists(DocumentPath`1<TDocument> id, Func`2<DocumentExistsDescriptor`1<TDocument>, IDocumentExistsRequest> selector);
    public sealed virtual Task`1<ExistsResponse> DocumentExistsAsync(DocumentPath`1<TDocument> id, Func`2<DocumentExistsDescriptor`1<TDocument>, IDocumentExistsRequest> selector, CancellationToken ct);
    public sealed virtual ExistsResponse DocumentExists(IDocumentExistsRequest request);
    public sealed virtual Task`1<ExistsResponse> DocumentExistsAsync(IDocumentExistsRequest request, CancellationToken ct);
    public sealed virtual ExistsResponse SourceExists(DocumentPath`1<TDocument> id, Func`2<SourceExistsDescriptor`1<TDocument>, ISourceExistsRequest> selector);
    public sealed virtual Task`1<ExistsResponse> SourceExistsAsync(DocumentPath`1<TDocument> id, Func`2<SourceExistsDescriptor`1<TDocument>, ISourceExistsRequest> selector, CancellationToken ct);
    public sealed virtual ExistsResponse SourceExists(ISourceExistsRequest request);
    public sealed virtual Task`1<ExistsResponse> SourceExistsAsync(ISourceExistsRequest request, CancellationToken ct);
    public sealed virtual ExplainResponse`1<TDocument> Explain(DocumentPath`1<TDocument> id, Func`2<ExplainDescriptor`1<TDocument>, IExplainRequest> selector);
    public sealed virtual Task`1<ExplainResponse`1<TDocument>> ExplainAsync(DocumentPath`1<TDocument> id, Func`2<ExplainDescriptor`1<TDocument>, IExplainRequest> selector, CancellationToken ct);
    public sealed virtual ExplainResponse`1<TDocument> Explain(IExplainRequest request);
    public sealed virtual Task`1<ExplainResponse`1<TDocument>> ExplainAsync(IExplainRequest request, CancellationToken ct);
    public sealed virtual FieldCapabilitiesResponse FieldCapabilities(Indices index, Func`2<FieldCapabilitiesDescriptor, IFieldCapabilitiesRequest> selector);
    public sealed virtual Task`1<FieldCapabilitiesResponse> FieldCapabilitiesAsync(Indices index, Func`2<FieldCapabilitiesDescriptor, IFieldCapabilitiesRequest> selector, CancellationToken ct);
    public sealed virtual FieldCapabilitiesResponse FieldCapabilities(IFieldCapabilitiesRequest request);
    public sealed virtual Task`1<FieldCapabilitiesResponse> FieldCapabilitiesAsync(IFieldCapabilitiesRequest request, CancellationToken ct);
    public sealed virtual GetResponse`1<TDocument> Get(DocumentPath`1<TDocument> id, Func`2<GetDescriptor`1<TDocument>, IGetRequest> selector);
    public sealed virtual Task`1<GetResponse`1<TDocument>> GetAsync(DocumentPath`1<TDocument> id, Func`2<GetDescriptor`1<TDocument>, IGetRequest> selector, CancellationToken ct);
    public sealed virtual GetResponse`1<TDocument> Get(IGetRequest request);
    public sealed virtual Task`1<GetResponse`1<TDocument>> GetAsync(IGetRequest request, CancellationToken ct);
    public sealed virtual GetScriptResponse GetScript(Id id, Func`2<GetScriptDescriptor, IGetScriptRequest> selector);
    public sealed virtual Task`1<GetScriptResponse> GetScriptAsync(Id id, Func`2<GetScriptDescriptor, IGetScriptRequest> selector, CancellationToken ct);
    public sealed virtual GetScriptResponse GetScript(IGetScriptRequest request);
    public sealed virtual Task`1<GetScriptResponse> GetScriptAsync(IGetScriptRequest request, CancellationToken ct);
    public sealed virtual SourceResponse`1<TDocument> Source(DocumentPath`1<TDocument> id, Func`2<SourceDescriptor`1<TDocument>, ISourceRequest> selector);
    public sealed virtual Task`1<SourceResponse`1<TDocument>> SourceAsync(DocumentPath`1<TDocument> id, Func`2<SourceDescriptor`1<TDocument>, ISourceRequest> selector, CancellationToken ct);
    public sealed virtual SourceResponse`1<TDocument> Source(ISourceRequest request);
    public sealed virtual Task`1<SourceResponse`1<TDocument>> SourceAsync(ISourceRequest request, CancellationToken ct);
    public sealed virtual IndexResponse Index(TDocument document, Func`2<IndexDescriptor`1<TDocument>, IIndexRequest`1<TDocument>> selector);
    public sealed virtual Task`1<IndexResponse> IndexAsync(TDocument document, Func`2<IndexDescriptor`1<TDocument>, IIndexRequest`1<TDocument>> selector, CancellationToken ct);
    public sealed virtual IndexResponse Index(IIndexRequest`1<TDocument> request);
    public sealed virtual Task`1<IndexResponse> IndexAsync(IIndexRequest`1<TDocument> request, CancellationToken ct);
    public sealed virtual RootNodeInfoResponse RootNodeInfo(Func`2<RootNodeInfoDescriptor, IRootNodeInfoRequest> selector);
    public sealed virtual Task`1<RootNodeInfoResponse> RootNodeInfoAsync(Func`2<RootNodeInfoDescriptor, IRootNodeInfoRequest> selector, CancellationToken ct);
    public sealed virtual RootNodeInfoResponse RootNodeInfo(IRootNodeInfoRequest request);
    public sealed virtual Task`1<RootNodeInfoResponse> RootNodeInfoAsync(IRootNodeInfoRequest request, CancellationToken ct);
    public sealed virtual MultiGetResponse MultiGet(Func`2<MultiGetDescriptor, IMultiGetRequest> selector);
    public sealed virtual Task`1<MultiGetResponse> MultiGetAsync(Func`2<MultiGetDescriptor, IMultiGetRequest> selector, CancellationToken ct);
    public sealed virtual MultiGetResponse MultiGet(IMultiGetRequest request);
    public sealed virtual Task`1<MultiGetResponse> MultiGetAsync(IMultiGetRequest request, CancellationToken ct);
    public sealed virtual MultiSearchResponse MultiSearch(Indices index, Func`2<MultiSearchDescriptor, IMultiSearchRequest> selector);
    public sealed virtual Task`1<MultiSearchResponse> MultiSearchAsync(Indices index, Func`2<MultiSearchDescriptor, IMultiSearchRequest> selector, CancellationToken ct);
    public sealed virtual MultiSearchResponse MultiSearch(IMultiSearchRequest request);
    public sealed virtual Task`1<MultiSearchResponse> MultiSearchAsync(IMultiSearchRequest request, CancellationToken ct);
    public sealed virtual MultiSearchResponse MultiSearchTemplate(Indices index, Func`2<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest> selector);
    public sealed virtual Task`1<MultiSearchResponse> MultiSearchTemplateAsync(Indices index, Func`2<MultiSearchTemplateDescriptor, IMultiSearchTemplateRequest> selector, CancellationToken ct);
    public sealed virtual MultiSearchResponse MultiSearchTemplate(IMultiSearchTemplateRequest request);
    public sealed virtual Task`1<MultiSearchResponse> MultiSearchTemplateAsync(IMultiSearchTemplateRequest request, CancellationToken ct);
    public sealed virtual MultiTermVectorsResponse MultiTermVectors(Func`2<MultiTermVectorsDescriptor, IMultiTermVectorsRequest> selector);
    public sealed virtual Task`1<MultiTermVectorsResponse> MultiTermVectorsAsync(Func`2<MultiTermVectorsDescriptor, IMultiTermVectorsRequest> selector, CancellationToken ct);
    public sealed virtual MultiTermVectorsResponse MultiTermVectors(IMultiTermVectorsRequest request);
    public sealed virtual Task`1<MultiTermVectorsResponse> MultiTermVectorsAsync(IMultiTermVectorsRequest request, CancellationToken ct);
    public sealed virtual PingResponse Ping(Func`2<PingDescriptor, IPingRequest> selector);
    public sealed virtual Task`1<PingResponse> PingAsync(Func`2<PingDescriptor, IPingRequest> selector, CancellationToken ct);
    public sealed virtual PingResponse Ping(IPingRequest request);
    public sealed virtual Task`1<PingResponse> PingAsync(IPingRequest request, CancellationToken ct);
    public sealed virtual PutScriptResponse PutScript(Id id, Func`2<PutScriptDescriptor, IPutScriptRequest> selector);
    public sealed virtual Task`1<PutScriptResponse> PutScriptAsync(Id id, Func`2<PutScriptDescriptor, IPutScriptRequest> selector, CancellationToken ct);
    public sealed virtual PutScriptResponse PutScript(IPutScriptRequest request);
    public sealed virtual Task`1<PutScriptResponse> PutScriptAsync(IPutScriptRequest request, CancellationToken ct);
    public sealed virtual ReindexOnServerResponse ReindexOnServer(Func`2<ReindexOnServerDescriptor, IReindexOnServerRequest> selector);
    public sealed virtual Task`1<ReindexOnServerResponse> ReindexOnServerAsync(Func`2<ReindexOnServerDescriptor, IReindexOnServerRequest> selector, CancellationToken ct);
    public sealed virtual ReindexOnServerResponse ReindexOnServer(IReindexOnServerRequest request);
    public sealed virtual Task`1<ReindexOnServerResponse> ReindexOnServerAsync(IReindexOnServerRequest request, CancellationToken ct);
    public sealed virtual ReindexRethrottleResponse ReindexRethrottle(TaskId taskId, Func`2<ReindexRethrottleDescriptor, IReindexRethrottleRequest> selector);
    public sealed virtual Task`1<ReindexRethrottleResponse> ReindexRethrottleAsync(TaskId taskId, Func`2<ReindexRethrottleDescriptor, IReindexRethrottleRequest> selector, CancellationToken ct);
    public sealed virtual ReindexRethrottleResponse ReindexRethrottle(IReindexRethrottleRequest request);
    public sealed virtual Task`1<ReindexRethrottleResponse> ReindexRethrottleAsync(IReindexRethrottleRequest request, CancellationToken ct);
    public sealed virtual RenderSearchTemplateResponse RenderSearchTemplate(Func`2<RenderSearchTemplateDescriptor, IRenderSearchTemplateRequest> selector);
    public sealed virtual Task`1<RenderSearchTemplateResponse> RenderSearchTemplateAsync(Func`2<RenderSearchTemplateDescriptor, IRenderSearchTemplateRequest> selector, CancellationToken ct);
    public sealed virtual RenderSearchTemplateResponse RenderSearchTemplate(IRenderSearchTemplateRequest request);
    public sealed virtual Task`1<RenderSearchTemplateResponse> RenderSearchTemplateAsync(IRenderSearchTemplateRequest request, CancellationToken ct);
    public sealed virtual ExecutePainlessScriptResponse`1<TResult> ExecutePainlessScript(Func`2<ExecutePainlessScriptDescriptor, IExecutePainlessScriptRequest> selector);
    public sealed virtual Task`1<ExecutePainlessScriptResponse`1<TResult>> ExecutePainlessScriptAsync(Func`2<ExecutePainlessScriptDescriptor, IExecutePainlessScriptRequest> selector, CancellationToken ct);
    public sealed virtual ExecutePainlessScriptResponse`1<TResult> ExecutePainlessScript(IExecutePainlessScriptRequest request);
    public sealed virtual Task`1<ExecutePainlessScriptResponse`1<TResult>> ExecutePainlessScriptAsync(IExecutePainlessScriptRequest request, CancellationToken ct);
    public sealed virtual ISearchResponse`1<TDocument> Scroll(Time scroll, string scrollId, Func`2<ScrollDescriptor`1<TInferDocument>, IScrollRequest> selector);
    [AsyncStateMachineAttribute("OpenSearch.Client.OpenSearchClient/<ScrollAsync>d__180`2")]
public sealed virtual Task`1<ISearchResponse`1<TDocument>> ScrollAsync(Time scroll, string scrollId, Func`2<ScrollDescriptor`1<TInferDocument>, IScrollRequest> selector, CancellationToken ct);
    public sealed virtual ISearchResponse`1<TDocument> Scroll(Time scroll, string scrollId, Func`2<ScrollDescriptor`1<TDocument>, IScrollRequest> selector);
    [AsyncStateMachineAttribute("OpenSearch.Client.OpenSearchClient/<ScrollAsync>d__182`1")]
public sealed virtual Task`1<ISearchResponse`1<TDocument>> ScrollAsync(Time scroll, string scrollId, Func`2<ScrollDescriptor`1<TDocument>, IScrollRequest> selector, CancellationToken ct);
    public sealed virtual ISearchResponse`1<TDocument> Scroll(IScrollRequest request);
    [AsyncStateMachineAttribute("OpenSearch.Client.OpenSearchClient/<ScrollAsync>d__184`1")]
public sealed virtual Task`1<ISearchResponse`1<TDocument>> ScrollAsync(IScrollRequest request, CancellationToken ct);
    public sealed virtual ISearchResponse`1<TDocument> Search(Func`2<SearchDescriptor`1<TInferDocument>, ISearchRequest> selector);
    [AsyncStateMachineAttribute("OpenSearch.Client.OpenSearchClient/<SearchAsync>d__186`2")]
public sealed virtual Task`1<ISearchResponse`1<TDocument>> SearchAsync(Func`2<SearchDescriptor`1<TInferDocument>, ISearchRequest> selector, CancellationToken ct);
    public sealed virtual ISearchResponse`1<TDocument> Search(Func`2<SearchDescriptor`1<TDocument>, ISearchRequest> selector);
    [AsyncStateMachineAttribute("OpenSearch.Client.OpenSearchClient/<SearchAsync>d__188`1")]
public sealed virtual Task`1<ISearchResponse`1<TDocument>> SearchAsync(Func`2<SearchDescriptor`1<TDocument>, ISearchRequest> selector, CancellationToken ct);
    public sealed virtual ISearchResponse`1<TDocument> Search(ISearchRequest request);
    [AsyncStateMachineAttribute("OpenSearch.Client.OpenSearchClient/<SearchAsync>d__190`1")]
public sealed virtual Task`1<ISearchResponse`1<TDocument>> SearchAsync(ISearchRequest request, CancellationToken ct);
    public sealed virtual SearchShardsResponse SearchShards(Func`2<SearchShardsDescriptor`1<TDocument>, ISearchShardsRequest> selector);
    public sealed virtual Task`1<SearchShardsResponse> SearchShardsAsync(Func`2<SearchShardsDescriptor`1<TDocument>, ISearchShardsRequest> selector, CancellationToken ct);
    public sealed virtual SearchShardsResponse SearchShards(ISearchShardsRequest request);
    public sealed virtual Task`1<SearchShardsResponse> SearchShardsAsync(ISearchShardsRequest request, CancellationToken ct);
    public sealed virtual ISearchResponse`1<TDocument> SearchTemplate(Func`2<SearchTemplateDescriptor`1<TDocument>, ISearchTemplateRequest> selector);
    [AsyncStateMachineAttribute("OpenSearch.Client.OpenSearchClient/<SearchTemplateAsync>d__196`1")]
public sealed virtual Task`1<ISearchResponse`1<TDocument>> SearchTemplateAsync(Func`2<SearchTemplateDescriptor`1<TDocument>, ISearchTemplateRequest> selector, CancellationToken ct);
    public sealed virtual ISearchResponse`1<TDocument> SearchTemplate(ISearchTemplateRequest request);
    [AsyncStateMachineAttribute("OpenSearch.Client.OpenSearchClient/<SearchTemplateAsync>d__198`1")]
public sealed virtual Task`1<ISearchResponse`1<TDocument>> SearchTemplateAsync(ISearchTemplateRequest request, CancellationToken ct);
    public sealed virtual TermVectorsResponse TermVectors(Func`2<TermVectorsDescriptor`1<TDocument>, ITermVectorsRequest`1<TDocument>> selector);
    public sealed virtual Task`1<TermVectorsResponse> TermVectorsAsync(Func`2<TermVectorsDescriptor`1<TDocument>, ITermVectorsRequest`1<TDocument>> selector, CancellationToken ct);
    public sealed virtual TermVectorsResponse TermVectors(ITermVectorsRequest`1<TDocument> request);
    public sealed virtual Task`1<TermVectorsResponse> TermVectorsAsync(ITermVectorsRequest`1<TDocument> request, CancellationToken ct);
    public sealed virtual UpdateResponse`1<TDocument> Update(DocumentPath`1<TDocument> id, Func`2<UpdateDescriptor`2<TDocument, TPartialDocument>, IUpdateRequest`2<TDocument, TPartialDocument>> selector);
    public sealed virtual Task`1<UpdateResponse`1<TDocument>> UpdateAsync(DocumentPath`1<TDocument> id, Func`2<UpdateDescriptor`2<TDocument, TPartialDocument>, IUpdateRequest`2<TDocument, TPartialDocument>> selector, CancellationToken ct);
    public sealed virtual UpdateResponse`1<TDocument> Update(DocumentPath`1<TDocument> id, Func`2<UpdateDescriptor`2<TDocument, TDocument>, IUpdateRequest`2<TDocument, TDocument>> selector);
    public sealed virtual Task`1<UpdateResponse`1<TDocument>> UpdateAsync(DocumentPath`1<TDocument> id, Func`2<UpdateDescriptor`2<TDocument, TDocument>, IUpdateRequest`2<TDocument, TDocument>> selector, CancellationToken ct);
    public sealed virtual UpdateResponse`1<TDocument> Update(IUpdateRequest`2<TDocument, TPartialDocument> request);
    public sealed virtual Task`1<UpdateResponse`1<TDocument>> UpdateAsync(IUpdateRequest`2<TDocument, TPartialDocument> request, CancellationToken ct);
    public sealed virtual UpdateByQueryResponse UpdateByQuery(Func`2<UpdateByQueryDescriptor`1<TDocument>, IUpdateByQueryRequest> selector);
    public sealed virtual Task`1<UpdateByQueryResponse> UpdateByQueryAsync(Func`2<UpdateByQueryDescriptor`1<TDocument>, IUpdateByQueryRequest> selector, CancellationToken ct);
    public sealed virtual UpdateByQueryResponse UpdateByQuery(IUpdateByQueryRequest request);
    public sealed virtual Task`1<UpdateByQueryResponse> UpdateByQueryAsync(IUpdateByQueryRequest request, CancellationToken ct);
    public sealed virtual ListTasksResponse UpdateByQueryRethrottle(TaskId taskId, Func`2<UpdateByQueryRethrottleDescriptor, IUpdateByQueryRethrottleRequest> selector);
    public sealed virtual Task`1<ListTasksResponse> UpdateByQueryRethrottleAsync(TaskId taskId, Func`2<UpdateByQueryRethrottleDescriptor, IUpdateByQueryRethrottleRequest> selector, CancellationToken ct);
    public sealed virtual ListTasksResponse UpdateByQueryRethrottle(IUpdateByQueryRethrottleRequest request);
    public sealed virtual Task`1<ListTasksResponse> UpdateByQueryRethrottleAsync(IUpdateByQueryRethrottleRequest request, CancellationToken ct);
    [CompilerGeneratedAttribute]
public sealed virtual CatNamespace get_Cat();
    [CompilerGeneratedAttribute]
private void set_Cat(CatNamespace value);
    [CompilerGeneratedAttribute]
public sealed virtual ClusterNamespace get_Cluster();
    [CompilerGeneratedAttribute]
private void set_Cluster(ClusterNamespace value);
    [CompilerGeneratedAttribute]
public sealed virtual IndicesNamespace get_Indices();
    [CompilerGeneratedAttribute]
private void set_Indices(IndicesNamespace value);
    [CompilerGeneratedAttribute]
public sealed virtual HttpNamespace get_Http();
    [CompilerGeneratedAttribute]
private void set_Http(HttpNamespace value);
    public sealed virtual CreatePitResponse CreatePit(Indices index, Func`2<CreatePitDescriptor, ICreatePitRequest> selector);
    public sealed virtual Task`1<CreatePitResponse> CreatePitAsync(Indices index, Func`2<CreatePitDescriptor, ICreatePitRequest> selector, CancellationToken ct);
    public sealed virtual CreatePitResponse CreatePit(ICreatePitRequest request);
    public sealed virtual Task`1<CreatePitResponse> CreatePitAsync(ICreatePitRequest request, CancellationToken ct);
    public sealed virtual DeleteAllPitsResponse DeleteAllPits(Func`2<DeleteAllPitsDescriptor, IDeleteAllPitsRequest> selector);
    public sealed virtual Task`1<DeleteAllPitsResponse> DeleteAllPitsAsync(Func`2<DeleteAllPitsDescriptor, IDeleteAllPitsRequest> selector, CancellationToken ct);
    public sealed virtual DeleteAllPitsResponse DeleteAllPits(IDeleteAllPitsRequest request);
    public sealed virtual Task`1<DeleteAllPitsResponse> DeleteAllPitsAsync(IDeleteAllPitsRequest request, CancellationToken ct);
    public sealed virtual DeletePitResponse DeletePit(Func`2<DeletePitDescriptor, IDeletePitRequest> selector);
    public sealed virtual Task`1<DeletePitResponse> DeletePitAsync(Func`2<DeletePitDescriptor, IDeletePitRequest> selector, CancellationToken ct);
    public sealed virtual DeletePitResponse DeletePit(IDeletePitRequest request);
    public sealed virtual Task`1<DeletePitResponse> DeletePitAsync(IDeletePitRequest request, CancellationToken ct);
    public sealed virtual GetAllPitsResponse GetAllPits(Func`2<GetAllPitsDescriptor, IGetAllPitsRequest> selector);
    public sealed virtual Task`1<GetAllPitsResponse> GetAllPitsAsync(Func`2<GetAllPitsDescriptor, IGetAllPitsRequest> selector, CancellationToken ct);
    public sealed virtual GetAllPitsResponse GetAllPits(IGetAllPitsRequest request);
    public sealed virtual Task`1<GetAllPitsResponse> GetAllPitsAsync(IGetAllPitsRequest request, CancellationToken ct);
}
internal class OpenSearch.Client.OpenSearchClientFormatterResolver : object {
    private IJsonFormatter`1<object> _fallbackFormatter;
    private InnerResolver _innerFormatterResolver;
    [CompilerGeneratedAttribute]
private IConnectionSettingsValues <Settings>k__BackingField;
    public IConnectionSettingsValues Settings { get; }
    public OpenSearchClientFormatterResolver(IConnectionSettingsValues settings);
    [CompilerGeneratedAttribute]
public sealed virtual IConnectionSettingsValues get_Settings();
    public sealed virtual IJsonFormatter`1<T> GetFormatter();
}
[AttributeUsageAttribute("128")]
[DataContractAttribute]
public abstract class OpenSearch.Client.OpenSearchCorePropertyAttributeBase : OpenSearchPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ICoreProperty.CopyTo>k__BackingField;
    [CompilerGeneratedAttribute]
private IProperties <OpenSearch.Client.ICoreProperty.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ICoreProperty.Similarity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ICoreProperty.Store>k__BackingField;
    public string Similarity { get; public set; }
    public bool Store { get; public set; }
    private Fields OpenSearch.Client.ICoreProperty.CopyTo { get; private set; }
    private IProperties OpenSearch.Client.ICoreProperty.Fields { get; private set; }
    private ICoreProperty Self { get; }
    private string OpenSearch.Client.ICoreProperty.Similarity { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ICoreProperty.Store { get; private set; }
    protected OpenSearchCorePropertyAttributeBase(FieldType type);
    public void set_Similarity(string value);
    public string get_Similarity();
    public bool get_Store();
    public void set_Store(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ICoreProperty.get_CopyTo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICoreProperty.set_CopyTo(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override IProperties OpenSearch.Client.ICoreProperty.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICoreProperty.set_Fields(IProperties value);
    private ICoreProperty get_Self();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ICoreProperty.get_Similarity();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICoreProperty.set_Similarity(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ICoreProperty.get_Store();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ICoreProperty.set_Store(Nullable`1<bool> value);
    public static OpenSearchCorePropertyAttributeBase From(MemberInfo memberInfo);
}
[AttributeUsageAttribute("128")]
[DataContractAttribute]
public abstract class OpenSearch.Client.OpenSearchDocValuesPropertyAttributeBase : OpenSearchCorePropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IDocValuesProperty.DocValues>k__BackingField;
    public bool DocValues { get; public set; }
    private Nullable`1<bool> OpenSearch.Client.IDocValuesProperty.DocValues { get; private set; }
    private IDocValuesProperty Self { get; }
    protected OpenSearchDocValuesPropertyAttributeBase(FieldType type);
    public bool get_DocValues();
    public void set_DocValues(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IDocValuesProperty.get_DocValues();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IDocValuesProperty.set_DocValues(Nullable`1<bool> value);
    private IDocValuesProperty get_Self();
    public static OpenSearchDocValuesPropertyAttributeBase From(MemberInfo memberInfo);
}
[AttributeUsageAttribute("128")]
[DataContractAttribute]
public abstract class OpenSearch.Client.OpenSearchPropertyAttributeBase : Attribute {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowPrivate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Ignore>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IProperty.LocalMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <OpenSearch.Client.IProperty.Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyName <OpenSearch.Client.IProperty.Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IProperty.Type>k__BackingField;
    public Nullable`1<bool> AllowPrivate { get; public set; }
    public bool Ignore { get; public set; }
    public string Name { get; public set; }
    public int Order { get; }
    private IDictionary`2<string, object> OpenSearch.Client.IProperty.LocalMetadata { get; private set; }
    private IDictionary`2<string, string> OpenSearch.Client.IProperty.Meta { get; private set; }
    private PropertyName OpenSearch.Client.IProperty.Name { get; private set; }
    private IProperty Self { get; }
    private string OpenSearch.Client.IProperty.Type { get; private set; }
    protected OpenSearchPropertyAttributeBase(FieldType type);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AllowPrivate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowPrivate(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Ignore();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ignore(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IProperty.get_LocalMetadata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProperty.set_LocalMetadata(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, string> OpenSearch.Client.IProperty.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProperty.set_Meta(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override PropertyName OpenSearch.Client.IProperty.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProperty.set_Name(PropertyName value);
    private IProperty get_Self();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IProperty.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProperty.set_Type(string value);
    public static OpenSearchPropertyAttributeBase From(MemberInfo memberInfo);
}
[AttributeUsageAttribute("4")]
public class OpenSearch.Client.OpenSearchTypeAttribute : Attribute {
    private static ConcurrentDictionary`2<Type, OpenSearchTypeAttribute> CachedTypeLookups;
    [CompilerGeneratedAttribute]
private string <IdProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelationName>k__BackingField;
    public string IdProperty { get; public set; }
    public string RelationName { get; public set; }
    private static OpenSearchTypeAttribute();
    [CompilerGeneratedAttribute]
public string get_IdProperty();
    [CompilerGeneratedAttribute]
public void set_IdProperty(string value);
    [CompilerGeneratedAttribute]
public string get_RelationName();
    [CompilerGeneratedAttribute]
public void set_RelationName(string value);
    public static OpenSearchTypeAttribute From(Type type);
}
public class OpenSearch.Client.OpenSearchVersionInfo : object {
    [CompilerGeneratedAttribute]
private string <LuceneVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Number>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildHash>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <BuildDate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BuildSnapshot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Distribution>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MinimumWireCompatibilityVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MinimumIndexCompatibilityVersion>k__BackingField;
    [DataMemberAttribute]
public string LuceneVersion { get; public set; }
    [DataMemberAttribute]
public string Number { get; public set; }
    [DataMemberAttribute]
public string BuildType { get; public set; }
    [DataMemberAttribute]
public string BuildHash { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset BuildDate { get; public set; }
    [DataMemberAttribute]
public bool BuildSnapshot { get; public set; }
    [DataMemberAttribute]
public string Distribution { get; public set; }
    [DataMemberAttribute]
public string MinimumWireCompatibilityVersion { get; public set; }
    [DataMemberAttribute]
public string MinimumIndexCompatibilityVersion { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LuceneVersion();
    [CompilerGeneratedAttribute]
public void set_LuceneVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Number();
    [CompilerGeneratedAttribute]
public void set_Number(string value);
    [CompilerGeneratedAttribute]
public string get_BuildType();
    [CompilerGeneratedAttribute]
public void set_BuildType(string value);
    [CompilerGeneratedAttribute]
public string get_BuildHash();
    [CompilerGeneratedAttribute]
public void set_BuildHash(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_BuildDate();
    [CompilerGeneratedAttribute]
public void set_BuildDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public bool get_BuildSnapshot();
    [CompilerGeneratedAttribute]
public void set_BuildSnapshot(bool value);
    [CompilerGeneratedAttribute]
public string get_Distribution();
    [CompilerGeneratedAttribute]
public void set_Distribution(string value);
    [CompilerGeneratedAttribute]
public string get_MinimumWireCompatibilityVersion();
    [CompilerGeneratedAttribute]
public void set_MinimumWireCompatibilityVersion(string value);
    [CompilerGeneratedAttribute]
public string get_MinimumIndexCompatibilityVersion();
    [CompilerGeneratedAttribute]
public void set_MinimumIndexCompatibilityVersion(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.OperatingSystemMemoryInfo : object {
    [CompilerGeneratedAttribute]
private long <FreeBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FreePercent>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <UsedBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UsedPercent>k__BackingField;
    [DataMemberAttribute]
public long FreeBytes { get; internal set; }
    [DataMemberAttribute]
public int FreePercent { get; internal set; }
    [DataMemberAttribute]
public long TotalBytes { get; internal set; }
    [DataMemberAttribute]
public long UsedBytes { get; internal set; }
    [DataMemberAttribute]
public int UsedPercent { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_FreeBytes();
    [CompilerGeneratedAttribute]
internal void set_FreeBytes(long value);
    [CompilerGeneratedAttribute]
public int get_FreePercent();
    [CompilerGeneratedAttribute]
internal void set_FreePercent(int value);
    [CompilerGeneratedAttribute]
public long get_TotalBytes();
    [CompilerGeneratedAttribute]
internal void set_TotalBytes(long value);
    [CompilerGeneratedAttribute]
public long get_UsedBytes();
    [CompilerGeneratedAttribute]
internal void set_UsedBytes(long value);
    [CompilerGeneratedAttribute]
public int get_UsedPercent();
    [CompilerGeneratedAttribute]
internal void set_UsedPercent(int value);
}
[DataContractAttribute]
public class OpenSearch.Client.OperatingSystemStats : object {
    [CompilerGeneratedAttribute]
private CPUStats <Cpu>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtendedMemoryStats <Memory>k__BackingField;
    [CompilerGeneratedAttribute]
private MemoryStats <Swap>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [DataMemberAttribute]
public CPUStats Cpu { get; internal set; }
    [DataMemberAttribute]
public ExtendedMemoryStats Memory { get; internal set; }
    [DataMemberAttribute]
public MemoryStats Swap { get; internal set; }
    [DataMemberAttribute]
public long Timestamp { get; internal set; }
    [CompilerGeneratedAttribute]
public CPUStats get_Cpu();
    [CompilerGeneratedAttribute]
internal void set_Cpu(CPUStats value);
    [CompilerGeneratedAttribute]
public ExtendedMemoryStats get_Memory();
    [CompilerGeneratedAttribute]
internal void set_Memory(ExtendedMemoryStats value);
    [CompilerGeneratedAttribute]
public MemoryStats get_Swap();
    [CompilerGeneratedAttribute]
internal void set_Swap(MemoryStats value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(long value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.Operator : Enum {
    public int value__;
    [EnumMemberAttribute]
public static Operator And;
    [EnumMemberAttribute]
public static Operator Or;
}
public class OpenSearch.Client.PainlessContextSetup : object {
    [CompilerGeneratedAttribute]
private object <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    public object Document { get; public set; }
    public IndexName Index { get; public set; }
    public QueryContainer Query { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual object get_Document();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Document(object value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
}
public class OpenSearch.Client.PainlessContextSetupDescriptor : DescriptorBase`2<PainlessContextSetupDescriptor, IPainlessContextSetup> {
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.IPainlessContextSetup.Document>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IPainlessContextSetup.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IPainlessContextSetup.Query>k__BackingField;
    private object OpenSearch.Client.IPainlessContextSetup.Document { get; private set; }
    private IndexName OpenSearch.Client.IPainlessContextSetup.Index { get; private set; }
    private QueryContainer OpenSearch.Client.IPainlessContextSetup.Query { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.IPainlessContextSetup.get_Document();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPainlessContextSetup.set_Document(object value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IPainlessContextSetup.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPainlessContextSetup.set_Index(IndexName value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IPainlessContextSetup.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPainlessContextSetup.set_Query(QueryContainer value);
    public PainlessContextSetupDescriptor Document(T document);
    public PainlessContextSetupDescriptor Index(IndexName index);
    public PainlessContextSetupDescriptor Query(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> querySelector);
}
public class OpenSearch.Client.PainlessScript : StoredScript {
    private static string Lang;
    public PainlessScript(string source);
    private static PainlessScript();
}
public class OpenSearch.Client.ParentAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private RelationName <Type>k__BackingField;
    public RelationName Type { get; public set; }
    public ParentAggregation(string name, RelationName type);
    [CompilerGeneratedAttribute]
public sealed virtual RelationName get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(RelationName value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.ParentAggregationDescriptor`2 : BucketAggregationDescriptorBase`3<ParentAggregationDescriptor`2<T, TParent>, IParentAggregation, TParent> {
    [CompilerGeneratedAttribute]
private RelationName <OpenSearch.Client.IParentAggregation.Type>k__BackingField;
    private RelationName OpenSearch.Client.IParentAggregation.Type { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override RelationName OpenSearch.Client.IParentAggregation.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IParentAggregation.set_Type(RelationName value);
    public ParentAggregationDescriptor`2<T, TParent> Type(RelationName type);
    public ParentAggregationDescriptor`2<T, TParent> Type();
}
public class OpenSearch.Client.ParentIdQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private RelationName <Type>k__BackingField;
    public Id Id { get; public set; }
    public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    public RelationName Type { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Id get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Id value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual RelationName get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(RelationName value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IParentIdQuery q);
}
[DataContractAttribute]
public class OpenSearch.Client.ParentIdQueryDescriptor`1 : QueryDescriptorBase`2<ParentIdQueryDescriptor`1<T>, IParentIdQuery> {
    [CompilerGeneratedAttribute]
private Id <OpenSearch.Client.IParentIdQuery.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IParentIdQuery.IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private RelationName <OpenSearch.Client.IParentIdQuery.Type>k__BackingField;
    protected bool Conditionless { get; }
    private Id OpenSearch.Client.IParentIdQuery.Id { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IParentIdQuery.IgnoreUnmapped { get; private set; }
    private RelationName OpenSearch.Client.IParentIdQuery.Type { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Id OpenSearch.Client.IParentIdQuery.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IParentIdQuery.set_Id(Id value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IParentIdQuery.get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IParentIdQuery.set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override RelationName OpenSearch.Client.IParentIdQuery.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IParentIdQuery.set_Type(RelationName value);
    public ParentIdQueryDescriptor`1<T> Id(Id id);
    public ParentIdQueryDescriptor`1<T> Type(RelationName type);
    public ParentIdQueryDescriptor`1<T> Type();
    public ParentIdQueryDescriptor`1<T> IgnoreUnmapped(Nullable`1<bool> ignoreUnmapped);
}
internal class OpenSearch.Client.PartitionHelper`1 : object {
    private IEnumerable`1<TDocument> _items;
    private int _partitionSize;
    private bool _hasMoreItems;
    internal PartitionHelper`1(IEnumerable`1<TDocument> i, int ps);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [IteratorStateMachineAttribute("OpenSearch.Client.PartitionHelper`1/<GetEnumerator>d__5")]
public sealed virtual IEnumerator`1<IList`1<TDocument>> GetEnumerator();
    [IteratorStateMachineAttribute("OpenSearch.Client.PartitionHelper`1/<GetNextBatch>d__6")]
private IEnumerable`1<TDocument> GetNextBatch(IEnumerator`1<TDocument> enumerator);
}
public class OpenSearch.Client.PathHierarchyTokenizer : TokenizerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<char> <Delimiter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<char> <Replacement>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Reverse>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Skip>k__BackingField;
    public Nullable`1<int> BufferSize { get; public set; }
    public Nullable`1<char> Delimiter { get; public set; }
    public Nullable`1<char> Replacement { get; public set; }
    public Nullable`1<bool> Reverse { get; public set; }
    public Nullable`1<int> Skip { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_BufferSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BufferSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<char> get_Delimiter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Delimiter(Nullable`1<char> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<char> get_Replacement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Replacement(Nullable`1<char> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Reverse();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Reverse(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Skip();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Skip(Nullable`1<int> value);
}
public class OpenSearch.Client.PathHierarchyTokenizerDescriptor : TokenizerDescriptorBase`2<PathHierarchyTokenizerDescriptor, IPathHierarchyTokenizer> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IPathHierarchyTokenizer.BufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<char> <OpenSearch.Client.IPathHierarchyTokenizer.Delimiter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<char> <OpenSearch.Client.IPathHierarchyTokenizer.Replacement>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IPathHierarchyTokenizer.Reverse>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IPathHierarchyTokenizer.Skip>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.IPathHierarchyTokenizer.BufferSize { get; private set; }
    private Nullable`1<char> OpenSearch.Client.IPathHierarchyTokenizer.Delimiter { get; private set; }
    private Nullable`1<char> OpenSearch.Client.IPathHierarchyTokenizer.Replacement { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IPathHierarchyTokenizer.Reverse { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IPathHierarchyTokenizer.Skip { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IPathHierarchyTokenizer.get_BufferSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPathHierarchyTokenizer.set_BufferSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<char> OpenSearch.Client.IPathHierarchyTokenizer.get_Delimiter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPathHierarchyTokenizer.set_Delimiter(Nullable`1<char> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<char> OpenSearch.Client.IPathHierarchyTokenizer.get_Replacement();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPathHierarchyTokenizer.set_Replacement(Nullable`1<char> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IPathHierarchyTokenizer.get_Reverse();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPathHierarchyTokenizer.set_Reverse(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IPathHierarchyTokenizer.get_Skip();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPathHierarchyTokenizer.set_Skip(Nullable`1<int> value);
    public PathHierarchyTokenizerDescriptor BufferSize(Nullable`1<int> bufferSize);
    public PathHierarchyTokenizerDescriptor Skip(Nullable`1<int> skip);
    public PathHierarchyTokenizerDescriptor Reverse(Nullable`1<bool> reverse);
    public PathHierarchyTokenizerDescriptor Delimiter(Nullable`1<char> delimiter);
    public PathHierarchyTokenizerDescriptor Replacement(Nullable`1<char> replacement);
}
public class OpenSearch.Client.PatternAnalyzer : AnalyzerBase {
    [CompilerGeneratedAttribute]
private string <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Lowercase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <StopWords>k__BackingField;
    public string Flags { get; public set; }
    public Nullable`1<bool> Lowercase { get; public set; }
    public string Pattern { get; public set; }
    public StopWords StopWords { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Flags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Flags(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Lowercase();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lowercase(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pattern();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public sealed virtual StopWords get_StopWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopWords(StopWords value);
}
public class OpenSearch.Client.PatternAnalyzerDescriptor : AnalyzerDescriptorBase`2<PatternAnalyzerDescriptor, IPatternAnalyzer> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPatternAnalyzer.Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IPatternAnalyzer.Lowercase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPatternAnalyzer.Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <OpenSearch.Client.IPatternAnalyzer.StopWords>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.IPatternAnalyzer.Flags { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IPatternAnalyzer.Lowercase { get; private set; }
    private string OpenSearch.Client.IPatternAnalyzer.Pattern { get; private set; }
    private StopWords OpenSearch.Client.IPatternAnalyzer.StopWords { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPatternAnalyzer.get_Flags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternAnalyzer.set_Flags(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IPatternAnalyzer.get_Lowercase();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternAnalyzer.set_Lowercase(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPatternAnalyzer.get_Pattern();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternAnalyzer.set_Pattern(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override StopWords OpenSearch.Client.IPatternAnalyzer.get_StopWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternAnalyzer.set_StopWords(StopWords value);
    public PatternAnalyzerDescriptor StopWords(String[] stopWords);
    public PatternAnalyzerDescriptor StopWords(IEnumerable`1<string> stopWords);
    public PatternAnalyzerDescriptor StopWords(StopWords stopWords);
    public PatternAnalyzerDescriptor Pattern(string pattern);
    public PatternAnalyzerDescriptor Flags(string flags);
    public PatternAnalyzerDescriptor Lowercase(Nullable`1<bool> lowercase);
}
public class OpenSearch.Client.PatternCaptureTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Patterns>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreserveOriginal>k__BackingField;
    public IEnumerable`1<string> Patterns { get; public set; }
    public Nullable`1<bool> PreserveOriginal { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Patterns();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Patterns(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PreserveOriginal();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreserveOriginal(Nullable`1<bool> value);
}
public class OpenSearch.Client.PatternCaptureTokenFilterDescriptor : TokenFilterDescriptorBase`2<PatternCaptureTokenFilterDescriptor, IPatternCaptureTokenFilter> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IPatternCaptureTokenFilter.Patterns>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IPatternCaptureTokenFilter.PreserveOriginal>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.IPatternCaptureTokenFilter.Patterns { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IPatternCaptureTokenFilter.PreserveOriginal { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IPatternCaptureTokenFilter.get_Patterns();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternCaptureTokenFilter.set_Patterns(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IPatternCaptureTokenFilter.get_PreserveOriginal();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternCaptureTokenFilter.set_PreserveOriginal(Nullable`1<bool> value);
    public PatternCaptureTokenFilterDescriptor PreserveOriginal(Nullable`1<bool> preserve);
    public PatternCaptureTokenFilterDescriptor Patterns(IEnumerable`1<string> patterns);
    public PatternCaptureTokenFilterDescriptor Patterns(String[] patterns);
}
public class OpenSearch.Client.PatternReplaceCharFilter : CharFilterBase {
    [CompilerGeneratedAttribute]
private string <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Replacement>k__BackingField;
    public string Flags { get; public set; }
    public string Pattern { get; public set; }
    public string Replacement { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Flags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Flags(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pattern();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Replacement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Replacement(string value);
}
public class OpenSearch.Client.PatternReplaceCharFilterDescriptor : CharFilterDescriptorBase`2<PatternReplaceCharFilterDescriptor, IPatternReplaceCharFilter> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPatternReplaceCharFilter.Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPatternReplaceCharFilter.Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPatternReplaceCharFilter.Replacement>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.IPatternReplaceCharFilter.Flags { get; private set; }
    private string OpenSearch.Client.IPatternReplaceCharFilter.Pattern { get; private set; }
    private string OpenSearch.Client.IPatternReplaceCharFilter.Replacement { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPatternReplaceCharFilter.get_Flags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternReplaceCharFilter.set_Flags(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPatternReplaceCharFilter.get_Pattern();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternReplaceCharFilter.set_Pattern(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPatternReplaceCharFilter.get_Replacement();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternReplaceCharFilter.set_Replacement(string value);
    public PatternReplaceCharFilterDescriptor Flags(string flags);
    public PatternReplaceCharFilterDescriptor Pattern(string pattern);
    public PatternReplaceCharFilterDescriptor Replacement(string replacement);
}
public class OpenSearch.Client.PatternReplaceTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private string <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Replacement>k__BackingField;
    public string Flags { get; public set; }
    public string Pattern { get; public set; }
    public string Replacement { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Flags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Flags(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pattern();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Replacement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Replacement(string value);
}
public class OpenSearch.Client.PatternReplaceTokenFilterDescriptor : TokenFilterDescriptorBase`2<PatternReplaceTokenFilterDescriptor, IPatternReplaceTokenFilter> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPatternReplaceTokenFilter.Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPatternReplaceTokenFilter.Replacement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPatternReplaceTokenFilter.Flags>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.IPatternReplaceTokenFilter.Pattern { get; private set; }
    private string OpenSearch.Client.IPatternReplaceTokenFilter.Replacement { get; private set; }
    private string OpenSearch.Client.IPatternReplaceTokenFilter.Flags { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPatternReplaceTokenFilter.get_Pattern();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternReplaceTokenFilter.set_Pattern(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPatternReplaceTokenFilter.get_Replacement();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternReplaceTokenFilter.set_Replacement(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPatternReplaceTokenFilter.get_Flags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternReplaceTokenFilter.set_Flags(string value);
    public PatternReplaceTokenFilterDescriptor Flags(string flags);
    public PatternReplaceTokenFilterDescriptor Pattern(string pattern);
    public PatternReplaceTokenFilterDescriptor Replacement(string replacement);
}
public class OpenSearch.Client.PatternTokenizer : TokenizerBase {
    [CompilerGeneratedAttribute]
private string <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    public string Flags { get; public set; }
    public Nullable`1<int> Group { get; public set; }
    public string Pattern { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Flags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Flags(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Group();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Group(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pattern();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pattern(string value);
}
public class OpenSearch.Client.PatternTokenizerDescriptor : TokenizerDescriptorBase`2<PatternTokenizerDescriptor, IPatternTokenizer> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPatternTokenizer.Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IPatternTokenizer.Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPatternTokenizer.Pattern>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.IPatternTokenizer.Flags { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IPatternTokenizer.Group { get; private set; }
    private string OpenSearch.Client.IPatternTokenizer.Pattern { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPatternTokenizer.get_Flags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternTokenizer.set_Flags(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IPatternTokenizer.get_Group();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternTokenizer.set_Group(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPatternTokenizer.get_Pattern();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPatternTokenizer.set_Pattern(string value);
    public PatternTokenizerDescriptor Group(Nullable`1<int> group);
    public PatternTokenizerDescriptor Pattern(string pattern);
    public PatternTokenizerDescriptor Flags(string flags);
}
[DataContractAttribute]
public class OpenSearch.Client.PendingTask : object {
    [CompilerGeneratedAttribute]
private int <InsertOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeInQueue>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TimeInQueueMilliseconds>k__BackingField;
    [DataMemberAttribute]
public int InsertOrder { get; internal set; }
    [DataMemberAttribute]
public string Priority { get; internal set; }
    [DataMemberAttribute]
public string Source { get; internal set; }
    [DataMemberAttribute]
public string TimeInQueue { get; internal set; }
    [DataMemberAttribute]
public int TimeInQueueMilliseconds { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_InsertOrder();
    [CompilerGeneratedAttribute]
internal void set_InsertOrder(int value);
    [CompilerGeneratedAttribute]
public string get_Priority();
    [CompilerGeneratedAttribute]
internal void set_Priority(string value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
internal void set_Source(string value);
    [CompilerGeneratedAttribute]
public string get_TimeInQueue();
    [CompilerGeneratedAttribute]
internal void set_TimeInQueue(string value);
    [CompilerGeneratedAttribute]
public int get_TimeInQueueMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_TimeInQueueMilliseconds(int value);
}
public class OpenSearch.Client.PercentageScoreHeuristic : object {
}
public class OpenSearch.Client.PercentageScoreHeuristicDescriptor : DescriptorBase`2<PercentageScoreHeuristicDescriptor, IPercentageScoreHeuristic> {
}
public class OpenSearch.Client.PercentileItem : object {
    [CompilerGeneratedAttribute]
private double <Percentile>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Value>k__BackingField;
    public double Percentile { get; internal set; }
    public Nullable`1<double> Value { get; internal set; }
    [CompilerGeneratedAttribute]
public double get_Percentile();
    [CompilerGeneratedAttribute]
internal void set_Percentile(double value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Value();
    [CompilerGeneratedAttribute]
internal void set_Value(Nullable`1<double> value);
}
public class OpenSearch.Client.PercentileRanksAggregation : FormattableMetricAggregationBase {
    [CompilerGeneratedAttribute]
private IPercentilesMethod <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<double> <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Keyed>k__BackingField;
    public IPercentilesMethod Method { get; public set; }
    public IEnumerable`1<double> Values { get; public set; }
    public Nullable`1<bool> Keyed { get; public set; }
    public PercentileRanksAggregation(string name, Field field);
    [CompilerGeneratedAttribute]
public sealed virtual IPercentilesMethod get_Method();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Method(IPercentilesMethod value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<double> get_Values();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Values(IEnumerable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Keyed();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Keyed(Nullable`1<bool> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.PercentileRanksAggregationDescriptor`1 : FormattableMetricAggregationDescriptorBase`3<PercentileRanksAggregationDescriptor`1<T>, IPercentileRanksAggregation, T> {
    [CompilerGeneratedAttribute]
private IPercentilesMethod <OpenSearch.Client.IPercentileRanksAggregation.Method>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<double> <OpenSearch.Client.IPercentileRanksAggregation.Values>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IPercentileRanksAggregation.Keyed>k__BackingField;
    private IPercentilesMethod OpenSearch.Client.IPercentileRanksAggregation.Method { get; private set; }
    private IEnumerable`1<double> OpenSearch.Client.IPercentileRanksAggregation.Values { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IPercentileRanksAggregation.Keyed { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IPercentilesMethod OpenSearch.Client.IPercentileRanksAggregation.get_Method();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercentileRanksAggregation.set_Method(IPercentilesMethod value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<double> OpenSearch.Client.IPercentileRanksAggregation.get_Values();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercentileRanksAggregation.set_Values(IEnumerable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IPercentileRanksAggregation.get_Keyed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercentileRanksAggregation.set_Keyed(Nullable`1<bool> value);
    public PercentileRanksAggregationDescriptor`1<T> Values(IEnumerable`1<double> values);
    public PercentileRanksAggregationDescriptor`1<T> Values(Double[] values);
    public PercentileRanksAggregationDescriptor`1<T> Method(Func`2<PercentilesMethodDescriptor, IPercentilesMethod> methodSelctor);
    public PercentileRanksAggregationDescriptor`1<T> Keyed(Nullable`1<bool> keyed);
}
internal class OpenSearch.Client.PercentileRanksAggregationFormatter : object {
    private static AutomataDictionary AutomataDictionary;
    private static PercentileRanksAggregationFormatter();
    public sealed virtual IPercentileRanksAggregation Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IPercentileRanksAggregation value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.PercentilesAggregate : MetricAggregateBase {
    [CompilerGeneratedAttribute]
private IList`1<PercentileItem> <Items>k__BackingField;
    public IList`1<PercentileItem> Items { get; internal set; }
    [CompilerGeneratedAttribute]
public IList`1<PercentileItem> get_Items();
    [CompilerGeneratedAttribute]
internal void set_Items(IList`1<PercentileItem> value);
}
public class OpenSearch.Client.PercentilesAggregation : FormattableMetricAggregationBase {
    [CompilerGeneratedAttribute]
private IPercentilesMethod <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<double> <Percents>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Keyed>k__BackingField;
    public IPercentilesMethod Method { get; public set; }
    public IEnumerable`1<double> Percents { get; public set; }
    public Nullable`1<bool> Keyed { get; public set; }
    public PercentilesAggregation(string name, Field field);
    [CompilerGeneratedAttribute]
public sealed virtual IPercentilesMethod get_Method();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Method(IPercentilesMethod value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<double> get_Percents();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Percents(IEnumerable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Keyed();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Keyed(Nullable`1<bool> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.PercentilesAggregationDescriptor`1 : FormattableMetricAggregationDescriptorBase`3<PercentilesAggregationDescriptor`1<T>, IPercentilesAggregation, T> {
    [CompilerGeneratedAttribute]
private IPercentilesMethod <OpenSearch.Client.IPercentilesAggregation.Method>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<double> <OpenSearch.Client.IPercentilesAggregation.Percents>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IPercentilesAggregation.Keyed>k__BackingField;
    private IPercentilesMethod OpenSearch.Client.IPercentilesAggregation.Method { get; private set; }
    private IEnumerable`1<double> OpenSearch.Client.IPercentilesAggregation.Percents { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IPercentilesAggregation.Keyed { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IPercentilesMethod OpenSearch.Client.IPercentilesAggregation.get_Method();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercentilesAggregation.set_Method(IPercentilesMethod value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<double> OpenSearch.Client.IPercentilesAggregation.get_Percents();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercentilesAggregation.set_Percents(IEnumerable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IPercentilesAggregation.get_Keyed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercentilesAggregation.set_Keyed(Nullable`1<bool> value);
    public PercentilesAggregationDescriptor`1<T> Percents(IEnumerable`1<double> percentages);
    public PercentilesAggregationDescriptor`1<T> Percents(Double[] percentages);
    public PercentilesAggregationDescriptor`1<T> Method(Func`2<PercentilesMethodDescriptor, IPercentilesMethod> methodSelector);
    public PercentilesAggregationDescriptor`1<T> Keyed(Nullable`1<bool> keyed);
}
internal class OpenSearch.Client.PercentilesAggregationFormatter : object {
    private static AutomataDictionary AutomataDictionary;
    private static PercentilesAggregationFormatter();
    public sealed virtual IPercentilesAggregation Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IPercentilesAggregation value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.PercentilesBucketAggregation : PipelineAggregationBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<double> <Percents>k__BackingField;
    public IEnumerable`1<double> Percents { get; public set; }
    public PercentilesBucketAggregation(string name, SingleBucketsPath bucketsPath);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<double> get_Percents();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Percents(IEnumerable`1<double> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.PercentilesBucketAggregationDescriptor : PipelineAggregationDescriptorBase`3<PercentilesBucketAggregationDescriptor, IPercentilesBucketAggregation, SingleBucketsPath> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<double> <OpenSearch.Client.IPercentilesBucketAggregation.Percents>k__BackingField;
    private IEnumerable`1<double> OpenSearch.Client.IPercentilesBucketAggregation.Percents { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<double> OpenSearch.Client.IPercentilesBucketAggregation.get_Percents();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercentilesBucketAggregation.set_Percents(IEnumerable`1<double> value);
    public PercentilesBucketAggregationDescriptor Percents(IEnumerable`1<double> percentages);
    public PercentilesBucketAggregationDescriptor Percents(Double[] percentages);
}
public class OpenSearch.Client.PercentilesMethodDescriptor : DescriptorBase`2<PercentilesMethodDescriptor, IPercentilesMethod> {
    public IPercentilesMethod HDRHistogram(Func`2<HDRHistogramMethodDescriptor, IHDRHistogramMethod> hdrSelector);
    public IPercentilesMethod TDigest(Func`2<TDigestMethodDescriptor, ITDigestMethod> tdigestSelector);
}
public class OpenSearch.Client.PercolateQuery : QueryBase {
    private Routing _routing;
    [CompilerGeneratedAttribute]
private object <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <Documents>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Preference>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Version>k__BackingField;
    public object Document { get; public set; }
    public IEnumerable`1<object> Documents { get; public set; }
    public Field Field { get; public set; }
    public Id Id { get; public set; }
    public IndexName Index { get; public set; }
    public string Preference { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual object get_Document();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Document(object value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<object> get_Documents();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Documents(IEnumerable`1<object> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Id get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Id value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Preference();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Preference(string value);
    public sealed virtual Routing get_Routing();
    public sealed virtual void set_Routing(Routing value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<long> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IPercolateQuery q);
}
public class OpenSearch.Client.PercolateQueryDescriptor`1 : QueryDescriptorBase`2<PercolateQueryDescriptor`1<T>, IPercolateQuery> {
    private Routing _routing;
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.IPercolateQuery.Document>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <OpenSearch.Client.IPercolateQuery.Documents>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IPercolateQuery.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Id <OpenSearch.Client.IPercolateQuery.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IPercolateQuery.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPercolateQuery.Preference>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IPercolateQuery.Version>k__BackingField;
    protected bool Conditionless { get; }
    private object OpenSearch.Client.IPercolateQuery.Document { get; private set; }
    private IEnumerable`1<object> OpenSearch.Client.IPercolateQuery.Documents { get; private set; }
    private Field OpenSearch.Client.IPercolateQuery.Field { get; private set; }
    private Id OpenSearch.Client.IPercolateQuery.Id { get; private set; }
    private IndexName OpenSearch.Client.IPercolateQuery.Index { get; private set; }
    private string OpenSearch.Client.IPercolateQuery.Preference { get; private set; }
    private Routing OpenSearch.Client.IPercolateQuery.Routing { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IPercolateQuery.Version { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.IPercolateQuery.get_Document();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercolateQuery.set_Document(object value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<object> OpenSearch.Client.IPercolateQuery.get_Documents();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercolateQuery.set_Documents(IEnumerable`1<object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IPercolateQuery.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercolateQuery.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Id OpenSearch.Client.IPercolateQuery.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercolateQuery.set_Id(Id value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IPercolateQuery.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercolateQuery.set_Index(IndexName value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPercolateQuery.get_Preference();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercolateQuery.set_Preference(string value);
    private sealed virtual override Routing OpenSearch.Client.IPercolateQuery.get_Routing();
    private sealed virtual override void OpenSearch.Client.IPercolateQuery.set_Routing(Routing value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IPercolateQuery.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPercolateQuery.set_Version(Nullable`1<long> value);
    public PercolateQueryDescriptor`1<T> Field(Field field);
    public PercolateQueryDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public PercolateQueryDescriptor`1<T> Document(TDocument document);
    public PercolateQueryDescriptor`1<T> Documents(TDocument[] documents);
    public PercolateQueryDescriptor`1<T> Documents(IEnumerable`1<TDocument> documents);
    public PercolateQueryDescriptor`1<T> Id(string id);
    public PercolateQueryDescriptor`1<T> Index(IndexName index);
    public PercolateQueryDescriptor`1<T> Index();
    public PercolateQueryDescriptor`1<T> Routing(Routing routing);
    public PercolateQueryDescriptor`1<T> Preference(string preference);
    public PercolateQueryDescriptor`1<T> Version(Nullable`1<long> version);
}
public class OpenSearch.Client.PercolatorAttribute : OpenSearchPropertyAttributeBase {
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.PercolatorProperty : PropertyBase {
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.PercolatorPropertyDescriptor`1 : PropertyDescriptorBase`3<PercolatorPropertyDescriptor`1<T>, IPercolatorProperty, T> {
}
public class OpenSearch.Client.PerFieldAnalyzer : IsADictionaryBase`2<Field, string> {
    public PerFieldAnalyzer(IDictionary`2<Field, string> container);
    public PerFieldAnalyzer(Dictionary`2<Field, string> container);
    public sealed virtual void Add(Field field, string analyzer);
}
public class OpenSearch.Client.PerFieldAnalyzer`1 : PerFieldAnalyzer {
    public void Add(Expression`1<Func`2<T, TValue>> field, string analyzer);
}
public class OpenSearch.Client.PerFieldAnalyzerDescriptor`1 : IsADictionaryDescriptorBase`4<PerFieldAnalyzerDescriptor`1<T>, IPerFieldAnalyzer, Field, string> {
    public PerFieldAnalyzerDescriptor`1<T> Field(Field field, string analyzer);
    public PerFieldAnalyzerDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field, string analyzer);
}
[StringEnumAttribute]
public enum OpenSearch.Client.PhoneticEncoder : Enum {
    public int value__;
    [EnumMemberAttribute]
public static PhoneticEncoder Metaphone;
    [EnumMemberAttribute]
public static PhoneticEncoder DoubleMetaphone;
    [EnumMemberAttribute]
public static PhoneticEncoder Soundex;
    [EnumMemberAttribute]
public static PhoneticEncoder RefinedSoundex;
    [EnumMemberAttribute]
public static PhoneticEncoder Caverphone1;
    [EnumMemberAttribute]
public static PhoneticEncoder Caverphone2;
    [EnumMemberAttribute]
public static PhoneticEncoder Cologne;
    [EnumMemberAttribute]
public static PhoneticEncoder Nysiis;
    [EnumMemberAttribute]
public static PhoneticEncoder KoelnerPhonetik;
    [EnumMemberAttribute]
public static PhoneticEncoder HaasePhonetik;
    [EnumMemberAttribute]
public static PhoneticEncoder Beidermorse;
    [EnumMemberAttribute]
public static PhoneticEncoder DaitchMokotoff;
}
[StringEnumAttribute]
public enum OpenSearch.Client.PhoneticLanguage : Enum {
    public int value__;
    [EnumMemberAttribute]
public static PhoneticLanguage Any;
    [EnumMemberAttribute]
public static PhoneticLanguage Comomon;
    [EnumMemberAttribute]
public static PhoneticLanguage Cyrillic;
    [EnumMemberAttribute]
public static PhoneticLanguage English;
    [EnumMemberAttribute]
public static PhoneticLanguage French;
    [EnumMemberAttribute]
public static PhoneticLanguage German;
    [EnumMemberAttribute]
public static PhoneticLanguage Hebrew;
    [EnumMemberAttribute]
public static PhoneticLanguage Hungarian;
    [EnumMemberAttribute]
public static PhoneticLanguage Polish;
    [EnumMemberAttribute]
public static PhoneticLanguage Romanian;
    [EnumMemberAttribute]
public static PhoneticLanguage Russian;
    [EnumMemberAttribute]
public static PhoneticLanguage Spanish;
}
[StringEnumAttribute]
public enum OpenSearch.Client.PhoneticNameType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static PhoneticNameType Generic;
    [EnumMemberAttribute]
public static PhoneticNameType Ashkenazi;
    [EnumMemberAttribute]
public static PhoneticNameType Sephardic;
}
[StringEnumAttribute]
public enum OpenSearch.Client.PhoneticRuleType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static PhoneticRuleType Approximate;
    [EnumMemberAttribute]
public static PhoneticRuleType Exact;
}
public class OpenSearch.Client.PhoneticTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<PhoneticEncoder> <Encoder>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<PhoneticLanguage> <LanguageSet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxCodeLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PhoneticNameType> <NameType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Replace>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PhoneticRuleType> <RuleType>k__BackingField;
    public Nullable`1<PhoneticEncoder> Encoder { get; public set; }
    public IEnumerable`1<PhoneticLanguage> LanguageSet { get; public set; }
    public Nullable`1<int> MaxCodeLength { get; public set; }
    public Nullable`1<PhoneticNameType> NameType { get; public set; }
    public Nullable`1<bool> Replace { get; public set; }
    public Nullable`1<PhoneticRuleType> RuleType { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<PhoneticEncoder> get_Encoder();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Encoder(Nullable`1<PhoneticEncoder> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<PhoneticLanguage> get_LanguageSet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LanguageSet(IEnumerable`1<PhoneticLanguage> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxCodeLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxCodeLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<PhoneticNameType> get_NameType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NameType(Nullable`1<PhoneticNameType> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Replace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Replace(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<PhoneticRuleType> get_RuleType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RuleType(Nullable`1<PhoneticRuleType> value);
}
public class OpenSearch.Client.PhoneticTokenFilterDescriptor : TokenFilterDescriptorBase`2<PhoneticTokenFilterDescriptor, IPhoneticTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<PhoneticEncoder> <OpenSearch.Client.IPhoneticTokenFilter.Encoder>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<PhoneticLanguage> <OpenSearch.Client.IPhoneticTokenFilter.LanguageSet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IPhoneticTokenFilter.MaxCodeLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PhoneticNameType> <OpenSearch.Client.IPhoneticTokenFilter.NameType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IPhoneticTokenFilter.Replace>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PhoneticRuleType> <OpenSearch.Client.IPhoneticTokenFilter.RuleType>k__BackingField;
    protected string Type { get; }
    private Nullable`1<PhoneticEncoder> OpenSearch.Client.IPhoneticTokenFilter.Encoder { get; private set; }
    private IEnumerable`1<PhoneticLanguage> OpenSearch.Client.IPhoneticTokenFilter.LanguageSet { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IPhoneticTokenFilter.MaxCodeLength { get; private set; }
    private Nullable`1<PhoneticNameType> OpenSearch.Client.IPhoneticTokenFilter.NameType { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IPhoneticTokenFilter.Replace { get; private set; }
    private Nullable`1<PhoneticRuleType> OpenSearch.Client.IPhoneticTokenFilter.RuleType { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<PhoneticEncoder> OpenSearch.Client.IPhoneticTokenFilter.get_Encoder();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhoneticTokenFilter.set_Encoder(Nullable`1<PhoneticEncoder> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<PhoneticLanguage> OpenSearch.Client.IPhoneticTokenFilter.get_LanguageSet();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhoneticTokenFilter.set_LanguageSet(IEnumerable`1<PhoneticLanguage> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IPhoneticTokenFilter.get_MaxCodeLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhoneticTokenFilter.set_MaxCodeLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<PhoneticNameType> OpenSearch.Client.IPhoneticTokenFilter.get_NameType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhoneticTokenFilter.set_NameType(Nullable`1<PhoneticNameType> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IPhoneticTokenFilter.get_Replace();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhoneticTokenFilter.set_Replace(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<PhoneticRuleType> OpenSearch.Client.IPhoneticTokenFilter.get_RuleType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhoneticTokenFilter.set_RuleType(Nullable`1<PhoneticRuleType> value);
    public PhoneticTokenFilterDescriptor Replace(Nullable`1<bool> replace);
    public PhoneticTokenFilterDescriptor Encoder(Nullable`1<PhoneticEncoder> encoder);
    public PhoneticTokenFilterDescriptor MaxCodeLength(Nullable`1<int> maxCodeLength);
    public PhoneticTokenFilterDescriptor RuleType(Nullable`1<PhoneticRuleType> ruleType);
    public PhoneticTokenFilterDescriptor NameType(Nullable`1<PhoneticNameType> nameType);
    public PhoneticTokenFilterDescriptor LanguageSet(PhoneticLanguage[] languageSet);
    public PhoneticTokenFilterDescriptor LanguageSet(IEnumerable`1<PhoneticLanguage> languageSet);
}
public class OpenSearch.Client.PhraseSuggestCollate : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Params>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Prune>k__BackingField;
    [CompilerGeneratedAttribute]
private IPhraseSuggestCollateQuery <Query>k__BackingField;
    public IDictionary`2<string, object> Params { get; public set; }
    public Nullable`1<bool> Prune { get; public set; }
    public IPhraseSuggestCollateQuery Query { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Params();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Params(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Prune();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Prune(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IPhraseSuggestCollateQuery get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(IPhraseSuggestCollateQuery value);
}
public class OpenSearch.Client.PhraseSuggestCollateDescriptor`1 : DescriptorBase`2<PhraseSuggestCollateDescriptor`1<T>, IPhraseSuggestCollate> {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IPhraseSuggestCollate.Params>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IPhraseSuggestCollate.Prune>k__BackingField;
    [CompilerGeneratedAttribute]
private IPhraseSuggestCollateQuery <OpenSearch.Client.IPhraseSuggestCollate.Query>k__BackingField;
    private IDictionary`2<string, object> OpenSearch.Client.IPhraseSuggestCollate.Params { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IPhraseSuggestCollate.Prune { get; private set; }
    private IPhraseSuggestCollateQuery OpenSearch.Client.IPhraseSuggestCollate.Query { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IPhraseSuggestCollate.get_Params();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggestCollate.set_Params(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IPhraseSuggestCollate.get_Prune();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggestCollate.set_Prune(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPhraseSuggestCollateQuery OpenSearch.Client.IPhraseSuggestCollate.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggestCollate.set_Query(IPhraseSuggestCollateQuery value);
    public PhraseSuggestCollateDescriptor`1<T> Query(Func`2<PhraseSuggestCollateQueryDescriptor, IPhraseSuggestCollateQuery> selector);
    public PhraseSuggestCollateDescriptor`1<T> Prune(Nullable`1<bool> prune);
    public PhraseSuggestCollateDescriptor`1<T> Params(IDictionary`2<string, object> paramsDictionary);
    public PhraseSuggestCollateDescriptor`1<T> Params(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> paramsDictionary);
}
public class OpenSearch.Client.PhraseSuggestCollateQuery : object {
    [CompilerGeneratedAttribute]
private Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    public Id Id { get; public set; }
    public string Source { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Id get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Id value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(string value);
}
public class OpenSearch.Client.PhraseSuggestCollateQueryDescriptor : DescriptorBase`2<PhraseSuggestCollateQueryDescriptor, IPhraseSuggestCollateQuery> {
    [CompilerGeneratedAttribute]
private Id <OpenSearch.Client.IPhraseSuggestCollateQuery.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPhraseSuggestCollateQuery.Source>k__BackingField;
    private Id OpenSearch.Client.IPhraseSuggestCollateQuery.Id { get; private set; }
    private string OpenSearch.Client.IPhraseSuggestCollateQuery.Source { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Id OpenSearch.Client.IPhraseSuggestCollateQuery.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggestCollateQuery.set_Id(Id value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPhraseSuggestCollateQuery.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggestCollateQuery.set_Source(string value);
    public PhraseSuggestCollateQueryDescriptor Source(string source);
    public PhraseSuggestCollateQueryDescriptor Id(Id id);
}
public class OpenSearch.Client.PhraseSuggester : SuggesterBase {
    [CompilerGeneratedAttribute]
private IPhraseSuggestCollate <Collate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Confidence>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IDirectGenerator> <DirectGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ForceUnigrams>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <GramSize>k__BackingField;
    [CompilerGeneratedAttribute]
private IPhraseSuggestHighlight <Highlight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MaxErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <RealWordErrorLikelihood>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<char> <Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private SmoothingModelContainer <Smoothing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TokenLimit>k__BackingField;
    public IPhraseSuggestCollate Collate { get; public set; }
    public Nullable`1<double> Confidence { get; public set; }
    public IEnumerable`1<IDirectGenerator> DirectGenerator { get; public set; }
    public Nullable`1<bool> ForceUnigrams { get; public set; }
    public Nullable`1<int> GramSize { get; public set; }
    public IPhraseSuggestHighlight Highlight { get; public set; }
    public Nullable`1<double> MaxErrors { get; public set; }
    public Nullable`1<double> RealWordErrorLikelihood { get; public set; }
    public Nullable`1<char> Separator { get; public set; }
    public Nullable`1<int> ShardSize { get; public set; }
    public SmoothingModelContainer Smoothing { get; public set; }
    public string Text { get; public set; }
    public Nullable`1<int> TokenLimit { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IPhraseSuggestCollate get_Collate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Collate(IPhraseSuggestCollate value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Confidence();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Confidence(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IDirectGenerator> get_DirectGenerator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DirectGenerator(IEnumerable`1<IDirectGenerator> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ForceUnigrams();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ForceUnigrams(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_GramSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GramSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IPhraseSuggestHighlight get_Highlight();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Highlight(IPhraseSuggestHighlight value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_MaxErrors();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxErrors(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_RealWordErrorLikelihood();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RealWordErrorLikelihood(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<char> get_Separator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Separator(Nullable`1<char> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual SmoothingModelContainer get_Smoothing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Smoothing(SmoothingModelContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Text(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_TokenLimit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TokenLimit(Nullable`1<int> value);
}
public class OpenSearch.Client.PhraseSuggesterDescriptor`1 : SuggestDescriptorBase`3<PhraseSuggesterDescriptor`1<T>, IPhraseSuggester, T> {
    [CompilerGeneratedAttribute]
private IPhraseSuggestCollate <OpenSearch.Client.IPhraseSuggester.Collate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IPhraseSuggester.Confidence>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IDirectGenerator> <OpenSearch.Client.IPhraseSuggester.DirectGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IPhraseSuggester.ForceUnigrams>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IPhraseSuggester.GramSize>k__BackingField;
    [CompilerGeneratedAttribute]
private IPhraseSuggestHighlight <OpenSearch.Client.IPhraseSuggester.Highlight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IPhraseSuggester.MaxErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IPhraseSuggester.RealWordErrorLikelihood>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<char> <OpenSearch.Client.IPhraseSuggester.Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IPhraseSuggester.ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private SmoothingModelContainer <OpenSearch.Client.IPhraseSuggester.Smoothing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPhraseSuggester.Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IPhraseSuggester.TokenLimit>k__BackingField;
    private IPhraseSuggestCollate OpenSearch.Client.IPhraseSuggester.Collate { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IPhraseSuggester.Confidence { get; private set; }
    private IEnumerable`1<IDirectGenerator> OpenSearch.Client.IPhraseSuggester.DirectGenerator { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IPhraseSuggester.ForceUnigrams { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IPhraseSuggester.GramSize { get; private set; }
    private IPhraseSuggestHighlight OpenSearch.Client.IPhraseSuggester.Highlight { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IPhraseSuggester.MaxErrors { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IPhraseSuggester.RealWordErrorLikelihood { get; private set; }
    private Nullable`1<char> OpenSearch.Client.IPhraseSuggester.Separator { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IPhraseSuggester.ShardSize { get; private set; }
    private SmoothingModelContainer OpenSearch.Client.IPhraseSuggester.Smoothing { get; private set; }
    private string OpenSearch.Client.IPhraseSuggester.Text { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IPhraseSuggester.TokenLimit { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IPhraseSuggestCollate OpenSearch.Client.IPhraseSuggester.get_Collate();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_Collate(IPhraseSuggestCollate value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IPhraseSuggester.get_Confidence();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_Confidence(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IDirectGenerator> OpenSearch.Client.IPhraseSuggester.get_DirectGenerator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_DirectGenerator(IEnumerable`1<IDirectGenerator> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IPhraseSuggester.get_ForceUnigrams();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_ForceUnigrams(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IPhraseSuggester.get_GramSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_GramSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPhraseSuggestHighlight OpenSearch.Client.IPhraseSuggester.get_Highlight();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_Highlight(IPhraseSuggestHighlight value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IPhraseSuggester.get_MaxErrors();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_MaxErrors(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IPhraseSuggester.get_RealWordErrorLikelihood();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_RealWordErrorLikelihood(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<char> OpenSearch.Client.IPhraseSuggester.get_Separator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_Separator(Nullable`1<char> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IPhraseSuggester.get_ShardSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override SmoothingModelContainer OpenSearch.Client.IPhraseSuggester.get_Smoothing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_Smoothing(SmoothingModelContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPhraseSuggester.get_Text();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_Text(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IPhraseSuggester.get_TokenLimit();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggester.set_TokenLimit(Nullable`1<int> value);
    public PhraseSuggesterDescriptor`1<T> Text(string text);
    public PhraseSuggesterDescriptor`1<T> ShardSize(Nullable`1<int> shardSize);
    public PhraseSuggesterDescriptor`1<T> GramSize(Nullable`1<int> gramSize);
    public PhraseSuggesterDescriptor`1<T> Confidence(Nullable`1<double> confidence);
    public PhraseSuggesterDescriptor`1<T> MaxErrors(Nullable`1<double> maxErrors);
    public PhraseSuggesterDescriptor`1<T> Separator(Nullable`1<char> separator);
    public PhraseSuggesterDescriptor`1<T> DirectGenerator(Func`2[] generators);
    public PhraseSuggesterDescriptor`1<T> RealWordErrorLikelihood(Nullable`1<double> realWordErrorLikelihood);
    public PhraseSuggesterDescriptor`1<T> Highlight(Func`2<PhraseSuggestHighlightDescriptor, IPhraseSuggestHighlight> selector);
    public PhraseSuggesterDescriptor`1<T> Collate(Func`2<PhraseSuggestCollateDescriptor`1<T>, IPhraseSuggestCollate> selector);
    public PhraseSuggesterDescriptor`1<T> Smoothing(Func`2<SmoothingModelContainerDescriptor, SmoothingModelContainer> selector);
    public PhraseSuggesterDescriptor`1<T> TokenLimit(Nullable`1<int> tokenLimit);
    public PhraseSuggesterDescriptor`1<T> ForceUnigrams(Nullable`1<bool> forceUnigrams);
}
public class OpenSearch.Client.PhraseSuggestHighlight : object {
    [CompilerGeneratedAttribute]
private string <PostTag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreTag>k__BackingField;
    public string PostTag { get; public set; }
    public string PreTag { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_PostTag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PostTag(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PreTag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreTag(string value);
}
public class OpenSearch.Client.PhraseSuggestHighlightDescriptor : DescriptorBase`2<PhraseSuggestHighlightDescriptor, IPhraseSuggestHighlight> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPhraseSuggestHighlight.PostTag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPhraseSuggestHighlight.PreTag>k__BackingField;
    private string OpenSearch.Client.IPhraseSuggestHighlight.PostTag { get; private set; }
    private string OpenSearch.Client.IPhraseSuggestHighlight.PreTag { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPhraseSuggestHighlight.get_PostTag();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggestHighlight.set_PostTag(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPhraseSuggestHighlight.get_PreTag();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPhraseSuggestHighlight.set_PreTag(string value);
    public PhraseSuggestHighlightDescriptor PreTag(string preTag);
    public PhraseSuggestHighlightDescriptor PostTag(string postTag);
}
public class OpenSearch.Client.PingDescriptor : RequestDescriptorBase`3<PingDescriptor, PingRequestParameters, IPingRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
}
public class OpenSearch.Client.PingRequest : PlainRequestBase`1<PingRequestParameters> {
    protected IPingRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    protected IPingRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
}
[DataContractAttribute]
public class OpenSearch.Client.PingResponse : ResponseBase {
}
public class OpenSearch.Client.Pipeline : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IProcessor> <OnFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IProcessor> <Processors>k__BackingField;
    public string Description { get; public set; }
    public IEnumerable`1<IProcessor> OnFailure { get; public set; }
    public IEnumerable`1<IProcessor> Processors { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IProcessor> get_OnFailure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OnFailure(IEnumerable`1<IProcessor> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IProcessor> get_Processors();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Processors(IEnumerable`1<IProcessor> value);
}
public abstract class OpenSearch.Client.PipelineAggregationBase : AggregationBase {
    [CompilerGeneratedAttribute]
private IBucketsPath <BucketsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GapPolicy> <GapPolicy>k__BackingField;
    public IBucketsPath BucketsPath { get; public set; }
    public string Format { get; public set; }
    public Nullable`1<GapPolicy> GapPolicy { get; public set; }
    public PipelineAggregationBase(string name, IBucketsPath bucketsPath);
    [CompilerGeneratedAttribute]
public sealed virtual IBucketsPath get_BucketsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BucketsPath(IBucketsPath value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GapPolicy> get_GapPolicy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GapPolicy(Nullable`1<GapPolicy> value);
}
public abstract class OpenSearch.Client.PipelineAggregationDescriptorBase`3 : DescriptorBase`2<TPipelineAggregation, TPipelineAggregationInterface> {
    [CompilerGeneratedAttribute]
private IBucketsPath <OpenSearch.Client.IPipelineAggregation.BucketsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPipelineAggregation.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GapPolicy> <OpenSearch.Client.IPipelineAggregation.GapPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IAggregation.Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAggregation.Name>k__BackingField;
    private IBucketsPath OpenSearch.Client.IPipelineAggregation.BucketsPath { get; private set; }
    private string OpenSearch.Client.IPipelineAggregation.Format { get; private set; }
    private Nullable`1<GapPolicy> OpenSearch.Client.IPipelineAggregation.GapPolicy { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IAggregation.Meta { get; private set; }
    private string OpenSearch.Client.IAggregation.Name { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IBucketsPath OpenSearch.Client.IPipelineAggregation.get_BucketsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPipelineAggregation.set_BucketsPath(IBucketsPath value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPipelineAggregation.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPipelineAggregation.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<GapPolicy> OpenSearch.Client.IPipelineAggregation.get_GapPolicy();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPipelineAggregation.set_GapPolicy(Nullable`1<GapPolicy> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IAggregation.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAggregation.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Name(string value);
    public TPipelineAggregation Format(string format);
    public TPipelineAggregation GapPolicy(Nullable`1<GapPolicy> gapPolicy);
    public TPipelineAggregation BucketsPath(TBucketsPath bucketsPath);
    public TPipelineAggregation Meta(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
}
public class OpenSearch.Client.PipelineDescriptor : DescriptorBase`2<PipelineDescriptor, IPipeline> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPipeline.Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IProcessor> <OpenSearch.Client.IPipeline.OnFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IProcessor> <OpenSearch.Client.IPipeline.Processors>k__BackingField;
    private string OpenSearch.Client.IPipeline.Description { get; private set; }
    private IEnumerable`1<IProcessor> OpenSearch.Client.IPipeline.OnFailure { get; private set; }
    private IEnumerable`1<IProcessor> OpenSearch.Client.IPipeline.Processors { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPipeline.get_Description();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPipeline.set_Description(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IProcessor> OpenSearch.Client.IPipeline.get_OnFailure();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPipeline.set_OnFailure(IEnumerable`1<IProcessor> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IProcessor> OpenSearch.Client.IPipeline.get_Processors();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPipeline.set_Processors(IEnumerable`1<IProcessor> value);
    public PipelineDescriptor Description(string description);
    public PipelineDescriptor Processors(IEnumerable`1<IProcessor> processors);
    public PipelineDescriptor Processors(Func`2<ProcessorsDescriptor, IPromise`1<IList`1<IProcessor>>> selector);
    public PipelineDescriptor OnFailure(IEnumerable`1<IProcessor> processors);
    public PipelineDescriptor OnFailure(Func`2<ProcessorsDescriptor, IPromise`1<IList`1<IProcessor>>> selector);
}
public class OpenSearch.Client.PipelineProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private string <ProcessorName>k__BackingField;
    internal static string ProcessorTypeName;
    [DataMemberAttribute]
public string ProcessorName { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProcessorName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProcessorName(string value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.PipelineProcessorDescriptor : ProcessorDescriptorBase`2<PipelineProcessorDescriptor, IPipelineProcessor> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPipelineProcessor.ProcessorName>k__BackingField;
    protected string Name { get; }
    private string OpenSearch.Client.IPipelineProcessor.ProcessorName { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPipelineProcessor.get_ProcessorName();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPipelineProcessor.set_ProcessorName(string value);
    public PipelineProcessorDescriptor ProcessorName(string processorName);
}
[DataContractAttribute]
public class OpenSearch.Client.PipelineSimulation : object {
    [CompilerGeneratedAttribute]
private DocumentSimulation <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<PipelineSimulation> <ProcessorResults>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [DataMemberAttribute]
public DocumentSimulation Document { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<PipelineSimulation> ProcessorResults { get; internal set; }
    [DataMemberAttribute]
public string Tag { get; internal set; }
    [CompilerGeneratedAttribute]
public DocumentSimulation get_Document();
    [CompilerGeneratedAttribute]
internal void set_Document(DocumentSimulation value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<PipelineSimulation> get_ProcessorResults();
    [CompilerGeneratedAttribute]
internal void set_ProcessorResults(IReadOnlyCollection`1<PipelineSimulation> value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
internal void set_Tag(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.PitDetail : object {
    [CompilerGeneratedAttribute]
private string <PitId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <KeepAlive>k__BackingField;
    [DataMemberAttribute]
public string PitId { get; internal set; }
    [DataMemberAttribute]
public long CreationTime { get; internal set; }
    [DataMemberAttribute]
public long KeepAlive { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_PitId();
    [CompilerGeneratedAttribute]
internal void set_PitId(string value);
    [CompilerGeneratedAttribute]
public long get_CreationTime();
    [CompilerGeneratedAttribute]
internal void set_CreationTime(long value);
    [CompilerGeneratedAttribute]
public long get_KeepAlive();
    [CompilerGeneratedAttribute]
internal void set_KeepAlive(long value);
}
public abstract class OpenSearch.Client.PlainRequestBase`1 : RequestBase`1<TParameters> {
    public IRequestConfiguration RequestConfiguration { get; public set; }
    public Nullable`1<bool> ErrorTrace { get; public set; }
    public String[] FilterPath { get; public set; }
    public Nullable`1<bool> Human { get; public set; }
    public Nullable`1<bool> Pretty { get; public set; }
    public string SourceQueryString { get; public set; }
    protected PlainRequestBase`1(Func`2<RouteValues, RouteValues> pathSelector);
    public IRequestConfiguration get_RequestConfiguration();
    public void set_RequestConfiguration(IRequestConfiguration value);
    public Nullable`1<bool> get_ErrorTrace();
    public void set_ErrorTrace(Nullable`1<bool> value);
    public String[] get_FilterPath();
    public void set_FilterPath(String[] value);
    public Nullable`1<bool> get_Human();
    public void set_Human(Nullable`1<bool> value);
    public Nullable`1<bool> get_Pretty();
    public void set_Pretty(Nullable`1<bool> value);
    public string get_SourceQueryString();
    public void set_SourceQueryString(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.PluginStats : object {
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearchVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <ExtendedPlugins>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HasNativeController>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JavaVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [DataMemberAttribute]
public string ClassName { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public string OpenSearchVersion { get; public set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> ExtendedPlugins { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> HasNativeController { get; public set; }
    [DataMemberAttribute]
public string JavaVersion { get; public set; }
    [DataMemberAttribute]
public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public void set_ClassName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_OpenSearchVersion();
    [CompilerGeneratedAttribute]
public void set_OpenSearchVersion(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_ExtendedPlugins();
    [CompilerGeneratedAttribute]
public void set_ExtendedPlugins(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_HasNativeController();
    [CompilerGeneratedAttribute]
public void set_HasNativeController(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_JavaVersion();
    [CompilerGeneratedAttribute]
public void set_JavaVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.PointGeoShape>")]
public class OpenSearch.Client.PointGeoShape : GeoShapeBase {
    [CompilerGeneratedAttribute]
private GeoCoordinate <Coordinates>k__BackingField;
    public GeoCoordinate Coordinates { get; public set; }
    public PointGeoShape(GeoCoordinate coordinates);
    [CompilerGeneratedAttribute]
public sealed virtual GeoCoordinate get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(GeoCoordinate value);
}
public class OpenSearch.Client.PointInTime : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <KeepAlive>k__BackingField;
    public string Id { get; public set; }
    public Time KeepAlive { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_KeepAlive();
    [CompilerGeneratedAttribute]
public sealed virtual void set_KeepAlive(Time value);
}
public class OpenSearch.Client.PointInTimeDescriptor : DescriptorBase`2<PointInTimeDescriptor, IPointInTime> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPointInTime.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IPointInTime.KeepAlive>k__BackingField;
    private string OpenSearch.Client.IPointInTime.Id { get; private set; }
    private Time OpenSearch.Client.IPointInTime.KeepAlive { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPointInTime.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPointInTime.set_Id(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IPointInTime.get_KeepAlive();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPointInTime.set_KeepAlive(Time value);
    public PointInTimeDescriptor Id(string id);
    public PointInTimeDescriptor KeepAlive(Time keepAlive);
}
[JsonFormatterAttribute("OpenSearch.Client.GeoShapeFormatter`1<OpenSearch.Client.PolygonGeoShape>")]
public class OpenSearch.Client.PolygonGeoShape : GeoShapeBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IEnumerable`1<GeoCoordinate>> <Coordinates>k__BackingField;
    public IEnumerable`1<IEnumerable`1<GeoCoordinate>> Coordinates { get; public set; }
    public PolygonGeoShape(IEnumerable`1<IEnumerable`1<GeoCoordinate>> coordinates);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IEnumerable`1<GeoCoordinate>> get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(IEnumerable`1<IEnumerable`1<GeoCoordinate>> value);
}
public class OpenSearch.Client.PorterStemTokenFilter : TokenFilterBase {
}
public class OpenSearch.Client.PorterStemTokenFilterDescriptor : TokenFilterDescriptorBase`2<PorterStemTokenFilterDescriptor, IPorterStemTokenFilter> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public class OpenSearch.Client.PostVotingConfigExclusionsDescriptor : RequestDescriptorBase`3<PostVotingConfigExclusionsDescriptor, PostVotingConfigExclusionsRequestParameters, IPostVotingConfigExclusionsRequest> {
    internal ApiUrls ApiUrls { get; }
    protected sealed virtual void RequestDefaults(PostVotingConfigExclusionsRequestParameters parameters);
    internal virtual ApiUrls get_ApiUrls();
    public PostVotingConfigExclusionsDescriptor NodeIds(string nodeids);
    public PostVotingConfigExclusionsDescriptor NodeNames(string nodenames);
    public PostVotingConfigExclusionsDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.PostVotingConfigExclusionsRequest : PlainRequestBase`1<PostVotingConfigExclusionsRequestParameters> {
    protected IPostVotingConfigExclusionsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public string NodeIds { get; public set; }
    public string NodeNames { get; public set; }
    public Time Timeout { get; public set; }
    protected sealed virtual void RequestDefaults(PostVotingConfigExclusionsRequestParameters parameters);
    protected IPostVotingConfigExclusionsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public string get_NodeIds();
    public void set_NodeIds(string value);
    public string get_NodeNames();
    public void set_NodeNames(string value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.PostVotingConfigExclusionsResponse : ResponseBase {
}
internal class OpenSearch.Client.PostVotingConfigExclusionsResponseBuilder : CustomResponseBuilderBase {
    public virtual object DeserializeResponse(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream);
    public virtual Task`1<object> DeserializeResponseAsync(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream, CancellationToken ctx);
}
public class OpenSearch.Client.PredicateTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public IScript Script { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
}
public class OpenSearch.Client.PredicateTokenFilterDescriptor : TokenFilterDescriptorBase`2<PredicateTokenFilterDescriptor, IPredicateTokenFilter> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IPredicateTokenFilter.Script>k__BackingField;
    protected string Type { get; }
    private IScript OpenSearch.Client.IPredicateTokenFilter.Script { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IPredicateTokenFilter.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPredicateTokenFilter.set_Script(IScript value);
    public PredicateTokenFilterDescriptor Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public PredicateTokenFilterDescriptor Script(string predicate);
}
[DataContractAttribute]
public class OpenSearch.Client.PrefixQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <Rewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CaseInsensitive>k__BackingField;
    public MultiTermQueryRewrite Rewrite { get; public set; }
    public object Value { get; public set; }
    public Nullable`1<bool> CaseInsensitive { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual MultiTermQueryRewrite get_Rewrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Rewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_CaseInsensitive();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CaseInsensitive(Nullable`1<bool> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
}
public class OpenSearch.Client.PrefixQueryDescriptor`1 : TermQueryDescriptorBase`3<PrefixQueryDescriptor`1<T>, IPrefixQuery, T> {
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <OpenSearch.Client.IPrefixQuery.Rewrite>k__BackingField;
    private MultiTermQueryRewrite OpenSearch.Client.IPrefixQuery.Rewrite { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override MultiTermQueryRewrite OpenSearch.Client.IPrefixQuery.get_Rewrite();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPrefixQuery.set_Rewrite(MultiTermQueryRewrite value);
    public PrefixQueryDescriptor`1<T> Rewrite(MultiTermQueryRewrite rewrite);
}
public class OpenSearch.Client.PreventMappingMultipleTypesDescriptor : ObsoleteMappingsBase {
    internal PreventMappingMultipleTypesDescriptor(ITypeMapping mapping);
}
public abstract class OpenSearch.Client.ProcessorBase : object {
    [CompilerGeneratedAttribute]
private string <If>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IProcessor> <OnFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string If { get; public set; }
    public string Tag { get; public set; }
    public Nullable`1<bool> IgnoreFailure { get; public set; }
    public IEnumerable`1<IProcessor> OnFailure { get; public set; }
    protected string Name { get; }
    public string Description { get; public set; }
    private string OpenSearch.Client.IProcessor.Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_If();
    [CompilerGeneratedAttribute]
public sealed virtual void set_If(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Tag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tag(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreFailure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreFailure(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IProcessor> get_OnFailure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OnFailure(IEnumerable`1<IProcessor> value);
    protected abstract virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Description(string value);
    private sealed virtual override string OpenSearch.Client.IProcessor.get_Name();
}
public abstract class OpenSearch.Client.ProcessorDescriptorBase`2 : DescriptorBase`2<TProcessorDescriptor, TProcessorInterface> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IProcessor.Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IProcessor> <OpenSearch.Client.IProcessor.OnFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IProcessor.If>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IProcessor.Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IProcessor.IgnoreFailure>k__BackingField;
    protected string Name { get; }
    private string OpenSearch.Client.IProcessor.Name { get; }
    private string OpenSearch.Client.IProcessor.Description { get; private set; }
    private IEnumerable`1<IProcessor> OpenSearch.Client.IProcessor.OnFailure { get; private set; }
    private string OpenSearch.Client.IProcessor.If { get; private set; }
    private string OpenSearch.Client.IProcessor.Tag { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IProcessor.IgnoreFailure { get; private set; }
    protected abstract virtual string get_Name();
    private sealed virtual override string OpenSearch.Client.IProcessor.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IProcessor.get_Description();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProcessor.set_Description(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IProcessor> OpenSearch.Client.IProcessor.get_OnFailure();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProcessor.set_OnFailure(IEnumerable`1<IProcessor> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IProcessor.get_If();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProcessor.set_If(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IProcessor.get_Tag();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProcessor.set_Tag(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IProcessor.get_IgnoreFailure();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProcessor.set_IgnoreFailure(Nullable`1<bool> value);
    public TProcessorDescriptor Description(string description);
    public TProcessorDescriptor OnFailure(IEnumerable`1<IProcessor> processors);
    public TProcessorDescriptor OnFailure(Func`2<ProcessorsDescriptor, IPromise`1<IList`1<IProcessor>>> selector);
    public TProcessorDescriptor If(string painlessPredicate);
    public TProcessorDescriptor Tag(string tag);
    public TProcessorDescriptor IgnoreFailure(Nullable`1<bool> ignoreFailure);
}
internal class OpenSearch.Client.ProcessorFormatter : object {
    private static AutomataDictionary Processors;
    private static ProcessorFormatter();
    public sealed virtual IProcessor Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IProcessor value, IJsonFormatterResolver formatterResolver);
    private static TProcessor Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, IProcessor value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.ProcessorsDescriptor : DescriptorPromiseBase`2<ProcessorsDescriptor, IList`1<IProcessor>> {
    public ProcessorsDescriptor Attachment(Func`2<AttachmentProcessorDescriptor`1<T>, IAttachmentProcessor> selector);
    public ProcessorsDescriptor Append(Func`2<AppendProcessorDescriptor`1<T>, IAppendProcessor> selector);
    public ProcessorsDescriptor Csv(Func`2<CsvProcessorDescriptor`1<T>, ICsvProcessor> selector);
    public ProcessorsDescriptor Convert(Func`2<ConvertProcessorDescriptor`1<T>, IConvertProcessor> selector);
    public ProcessorsDescriptor Date(Func`2<DateProcessorDescriptor`1<T>, IDateProcessor> selector);
    public ProcessorsDescriptor DateIndexName(Func`2<DateIndexNameProcessorDescriptor`1<T>, IDateIndexNameProcessor> selector);
    public ProcessorsDescriptor DotExpander(Func`2<DotExpanderProcessorDescriptor`1<T>, IDotExpanderProcessor> selector);
    public ProcessorsDescriptor Fail(Func`2<FailProcessorDescriptor, IFailProcessor> selector);
    public ProcessorsDescriptor Foreach(Func`2<ForeachProcessorDescriptor`1<T>, IForeachProcessor> selector);
    public ProcessorsDescriptor GeoIp(Func`2<GeoIpProcessorDescriptor`1<T>, IGeoIpProcessor> selector);
    public ProcessorsDescriptor Grok(Func`2<GrokProcessorDescriptor`1<T>, IGrokProcessor> selector);
    public ProcessorsDescriptor Gsub(Func`2<GsubProcessorDescriptor`1<T>, IGsubProcessor> selector);
    public ProcessorsDescriptor Join(Func`2<JoinProcessorDescriptor`1<T>, IJoinProcessor> selector);
    public ProcessorsDescriptor Lowercase(Func`2<LowercaseProcessorDescriptor`1<T>, ILowercaseProcessor> selector);
    public ProcessorsDescriptor Remove(Func`2<RemoveProcessorDescriptor`1<T>, IRemoveProcessor> selector);
    public ProcessorsDescriptor Rename(Func`2<RenameProcessorDescriptor`1<T>, IRenameProcessor> selector);
    public ProcessorsDescriptor Script(Func`2<ScriptProcessorDescriptor, IScriptProcessor> selector);
    public ProcessorsDescriptor Set(Func`2<SetProcessorDescriptor`1<T>, ISetProcessor> selector);
    public ProcessorsDescriptor Sort(Func`2<SortProcessorDescriptor`1<T>, ISortProcessor> selector);
    public ProcessorsDescriptor Split(Func`2<SplitProcessorDescriptor`1<T>, ISplitProcessor> selector);
    public ProcessorsDescriptor Trim(Func`2<TrimProcessorDescriptor`1<T>, ITrimProcessor> selector);
    public ProcessorsDescriptor Uppercase(Func`2<UppercaseProcessorDescriptor`1<T>, IUppercaseProcessor> selector);
    public ProcessorsDescriptor Json(Func`2<JsonProcessorDescriptor`1<T>, IJsonProcessor> selector);
    public ProcessorsDescriptor UserAgent(Func`2<UserAgentProcessorDescriptor`1<T>, IUserAgentProcessor> selector);
    public ProcessorsDescriptor Kv(Func`2<KeyValueProcessorDescriptor`1<T>, IKeyValueProcessor> selector);
    public ProcessorsDescriptor UrlDecode(Func`2<UrlDecodeProcessorDescriptor`1<T>, IUrlDecodeProcessor> selector);
    public ProcessorsDescriptor Bytes(Func`2<BytesProcessorDescriptor`1<T>, IBytesProcessor> selector);
    public ProcessorsDescriptor Dissect(Func`2<DissectProcessorDescriptor`1<T>, IDissectProcessor> selector);
    public ProcessorsDescriptor Drop(Func`2<DropProcessorDescriptor, IDropProcessor> selector);
    public ProcessorsDescriptor Pipeline(Func`2<PipelineProcessorDescriptor, IPipelineProcessor> selector);
    public ProcessorsDescriptor UriParts(Func`2<UriPartsProcessorDescriptor`1<T>, IUriPartsProcessor> selector);
    public ProcessorsDescriptor Fingerprint(Func`2<FingerprintProcessorDescriptor`1<T>, IFingerprintProcessor> selector);
    public ProcessorsDescriptor NetworkCommunityId(Func`2<NetworkCommunityIdProcessorDescriptor`1<T>, INetworkCommunityIdProcessor> selector);
    public ProcessorsDescriptor NetworkDirection(Func`2<NetworkDirectionProcessorDescriptor`1<T>, INetworkDirectionProcessor> selector);
    public ProcessorsDescriptor TextEmbedding(Func`2<TextEmbeddingProcessorDescriptor`1<T>, ITextEmbeddingProcessor> selector);
}
public class OpenSearch.Client.ProcessorStats : object {
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TimeInMilliseconds>k__BackingField;
    [DataMemberAttribute]
public long Count { get; internal set; }
    [DataMemberAttribute]
public long Current { get; internal set; }
    [DataMemberAttribute]
public long Failed { get; internal set; }
    [DataMemberAttribute]
public long TimeInMilliseconds { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
internal void set_Count(long value);
    [CompilerGeneratedAttribute]
public long get_Current();
    [CompilerGeneratedAttribute]
internal void set_Current(long value);
    [CompilerGeneratedAttribute]
public long get_Failed();
    [CompilerGeneratedAttribute]
internal void set_Failed(long value);
    [CompilerGeneratedAttribute]
public long get_TimeInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_TimeInMilliseconds(long value);
}
[DataContractAttribute]
public class OpenSearch.Client.ProcessStats : object {
    [CompilerGeneratedAttribute]
private CPUStats <CPU>k__BackingField;
    [CompilerGeneratedAttribute]
private MemoryStats <Memory>k__BackingField;
    [CompilerGeneratedAttribute]
private int <OpenFileDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [DataMemberAttribute]
public CPUStats CPU { get; internal set; }
    [DataMemberAttribute]
public MemoryStats Memory { get; internal set; }
    [DataMemberAttribute]
public int OpenFileDescriptors { get; internal set; }
    [DataMemberAttribute]
public long Timestamp { get; internal set; }
    [CompilerGeneratedAttribute]
public CPUStats get_CPU();
    [CompilerGeneratedAttribute]
internal void set_CPU(CPUStats value);
    [CompilerGeneratedAttribute]
public MemoryStats get_Memory();
    [CompilerGeneratedAttribute]
internal void set_Memory(MemoryStats value);
    [CompilerGeneratedAttribute]
public int get_OpenFileDescriptors();
    [CompilerGeneratedAttribute]
internal void set_OpenFileDescriptors(int value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(long value);
}
public class OpenSearch.Client.ProducerConsumerBackPressure : object {
    private int _backPressureFactor;
    private SemaphoreSlim _consumerLimiter;
    private int _slots;
    internal ProducerConsumerBackPressure(Nullable`1<int> backPressureFactor, int maxConcurrency);
    public Task WaitAsync(CancellationToken token);
    public void Release();
}
public class OpenSearch.Client.Profile : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ShardProfile> <Shards>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<ShardProfile> Shards { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ShardProfile> get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(IReadOnlyCollection`1<ShardProfile> value);
}
public class OpenSearch.Client.Properties : IsADictionaryBase`2<PropertyName, IProperty> {
    private IConnectionSettingsValues _settings;
    public Properties(IDictionary`2<PropertyName, IProperty> container);
    public Properties(Dictionary`2<PropertyName, IProperty> container);
    internal Properties(IConnectionSettingsValues values);
    public sealed virtual void Add(PropertyName name, IProperty property);
    protected virtual PropertyName Sanitize(PropertyName key);
}
public class OpenSearch.Client.Properties`1 : IsADictionaryBase`2<PropertyName, IProperty> {
    public Properties`1(IDictionary`2<PropertyName, IProperty> container);
    public Properties`1(IProperties properties);
    public Properties`1(Dictionary`2<PropertyName, IProperty> container);
    public sealed virtual void Add(PropertyName name, IProperty property);
    public void Add(Expression`1<Func`2<T, TValue>> name, IProperty property);
}
public class OpenSearch.Client.PropertiesDescriptor`1 : IsADictionaryDescriptorBase`4<PropertiesDescriptor`1<T>, IProperties, PropertyName, IProperty> {
    public PropertiesDescriptor`1(IProperties properties);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, int>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<int>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<int>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<int>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, float>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<float>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<float>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<float>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, sbyte>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<sbyte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<sbyte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<sbyte>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, short>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<short>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<short>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<short>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, byte>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<byte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<byte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<byte>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, long>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<long>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<long>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<long>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, UInt32>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<UInt32>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<UInt32>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<UInt32>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, TimeSpan>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<TimeSpan>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<TimeSpan>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<TimeSpan>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, decimal>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<decimal>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<decimal>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<decimal>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, ulong>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<ulong>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<ulong>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<ulong>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, double>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<double>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<double>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<double>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Enum>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, DateTime>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<DateTime>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<DateTime>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<DateTime>>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, DateTimeOffset>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<DateTimeOffset>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<DateTimeOffset>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<DateTimeOffset>>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, bool>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<bool>>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<bool>>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<bool>>>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, char>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<char>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<char>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<char>>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Guid>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, Nullable`1<Guid>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Guid>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<Guid>>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, string>> field, Func`2<TextPropertyDescriptor`1<T>, ITextProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IEnumerable`1<string>>> field, Func`2<TextPropertyDescriptor`1<T>, ITextProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, DateRange>> field, Func`2<DateRangePropertyDescriptor`1<T>, IDateRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, DoubleRange>> field, Func`2<DoubleRangePropertyDescriptor`1<T>, IDoubleRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, LongRange>> field, Func`2<LongRangePropertyDescriptor`1<T>, ILongRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IntegerRange>> field, Func`2<IntegerRangePropertyDescriptor`1<T>, IIntegerRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, FloatRange>> field, Func`2<FloatRangePropertyDescriptor`1<T>, IFloatRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Scalar(Expression`1<Func`2<T, IpAddressRange>> field, Func`2<IpRangePropertyDescriptor`1<T>, IIpRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Binary(Func`2<BinaryPropertyDescriptor`1<T>, IBinaryProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Boolean(Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Completion(Func`2<CompletionPropertyDescriptor`1<T>, ICompletionProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Date(Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> DateNanos(Func`2<DateNanosPropertyDescriptor`1<T>, IDateNanosProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> DateRange(Func`2<DateRangePropertyDescriptor`1<T>, IDateRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> DoubleRange(Func`2<DoubleRangePropertyDescriptor`1<T>, IDoubleRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> FloatRange(Func`2<FloatRangePropertyDescriptor`1<T>, IFloatRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> GeoPoint(Func`2<GeoPointPropertyDescriptor`1<T>, IGeoPointProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> GeoShape(Func`2<GeoShapePropertyDescriptor`1<T>, IGeoShapeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> IntegerRange(Func`2<IntegerRangePropertyDescriptor`1<T>, IIntegerRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Ip(Func`2<IpPropertyDescriptor`1<T>, IIpProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> IpRange(Func`2<IpRangePropertyDescriptor`1<T>, IIpRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Join(Func`2<JoinPropertyDescriptor`1<T>, IJoinProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Keyword(Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> LongRange(Func`2<LongRangePropertyDescriptor`1<T>, ILongRangeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Murmur3Hash(Func`2<Murmur3HashPropertyDescriptor`1<T>, IMurmur3HashProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Nested(Func`2<NestedPropertyDescriptor`2<T, TChild>, INestedProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Number(Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Object(Func`2<ObjectTypeDescriptor`2<T, TChild>, IObjectProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Percolator(Func`2<PercolatorPropertyDescriptor`1<T>, IPercolatorProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> Text(Func`2<TextPropertyDescriptor`1<T>, ITextProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> SearchAsYouType(Func`2<SearchAsYouTypePropertyDescriptor`1<T>, ISearchAsYouTypeProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> TokenCount(Func`2<TokenCountPropertyDescriptor`1<T>, ITokenCountProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> FieldAlias(Func`2<FieldAliasPropertyDescriptor`1<T>, IFieldAliasProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> RankFeature(Func`2<RankFeaturePropertyDescriptor`1<T>, IRankFeatureProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> RankFeatures(Func`2<RankFeaturesPropertyDescriptor`1<T>, IRankFeaturesProperty> selector);
    public sealed virtual PropertiesDescriptor`1<T> KnnVector(Func`2<KnnVectorPropertyDescriptor`1<T>, IKnnVectorProperty> selector);
    public PropertiesDescriptor`1<T> Custom(IProperty customType);
    private PropertiesDescriptor`1<T> SetProperty(Func`2<TDescriptor, TInterface> selector);
    private PropertiesDescriptor`1<T> SetProperty(IProperty type);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.PropertiesExtensions : object {
    [ExtensionAttribute]
internal static IProperties AutoMap(IProperties existingProperties, Type documentType, IPropertyVisitor visitor, int maxRecursion);
    [ExtensionAttribute]
internal static IProperties AutoMap(IProperties existingProperties, IPropertyVisitor visitor, int maxRecursion);
}
internal class OpenSearch.Client.PropertiesFormatter : object {
    private static InterfaceDictionaryFormatter`2<PropertyName, IProperty> Formatter;
    private static PropertiesFormatter();
    public sealed virtual IProperties Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IProperties value, IJsonFormatterResolver formatterResolver);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public abstract class OpenSearch.Client.PropertyBase : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <LocalMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyName <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyInfo <OpenSearch.Client.IPropertyWithClrOrigin.ClrOrigin>k__BackingField;
    public IDictionary`2<string, object> LocalMetadata { get; public set; }
    public IDictionary`2<string, string> Meta { get; public set; }
    public PropertyName Name { get; public set; }
    protected string DebugDisplay { get; }
    protected string TypeOverride { get; protected set; }
    private PropertyInfo OpenSearch.Client.IPropertyWithClrOrigin.ClrOrigin { get; private set; }
    private string OpenSearch.Client.IProperty.Type { get; private set; }
    protected PropertyBase(FieldType type);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_LocalMetadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LocalMetadata(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_Meta();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Meta(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual PropertyName get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(PropertyName value);
    protected string get_DebugDisplay();
    public virtual string ToString();
    [CompilerGeneratedAttribute]
protected string get_TypeOverride();
    [CompilerGeneratedAttribute]
protected void set_TypeOverride(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override PropertyInfo OpenSearch.Client.IPropertyWithClrOrigin.get_ClrOrigin();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPropertyWithClrOrigin.set_ClrOrigin(PropertyInfo value);
    private sealed virtual override string OpenSearch.Client.IProperty.get_Type();
    private sealed virtual override void OpenSearch.Client.IProperty.set_Type(string value);
}
public abstract class OpenSearch.Client.PropertyDescriptorBase`3 : DescriptorBase`2<TDescriptor, TInterface> {
    private string _type;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IProperty.LocalMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyName <OpenSearch.Client.IProperty.Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <OpenSearch.Client.IProperty.Meta>k__BackingField;
    protected string DebugDisplay { get; }
    unknown string TypeOverride {protected set; }
    private IDictionary`2<string, object> OpenSearch.Client.IProperty.LocalMetadata { get; private set; }
    private PropertyName OpenSearch.Client.IProperty.Name { get; private set; }
    private IDictionary`2<string, string> OpenSearch.Client.IProperty.Meta { get; private set; }
    private string OpenSearch.Client.IProperty.Type { get; private set; }
    protected PropertyDescriptorBase`3(FieldType type);
    protected string get_DebugDisplay();
    protected void set_TypeOverride(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IProperty.get_LocalMetadata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProperty.set_LocalMetadata(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override PropertyName OpenSearch.Client.IProperty.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProperty.set_Name(PropertyName value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, string> OpenSearch.Client.IProperty.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IProperty.set_Meta(IDictionary`2<string, string> value);
    private sealed virtual override string OpenSearch.Client.IProperty.get_Type();
    private sealed virtual override void OpenSearch.Client.IProperty.set_Type(string value);
    public TDescriptor Name(PropertyName name);
    public TDescriptor Name(Expression`1<Func`2<T, TValue>> objectPath);
    public TDescriptor LocalMetadata(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
    public TDescriptor Meta(Func`2<FluentDictionary`2<string, string>, FluentDictionary`2<string, string>> selector);
}
internal class OpenSearch.Client.PropertyFormatter : object {
    private static AutomataDictionary AutomataDictionary;
    private static PropertyFormatter();
    public sealed virtual IProperty Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IProperty value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, TProperty value, IJsonFormatterResolver formatterResolver);
    private static TProperty Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.PropertyMapping : object {
    public static PropertyMapping Ignored;
    [CompilerGeneratedAttribute]
private bool <Ignore>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public bool Ignore { get; public set; }
    public string Name { get; public set; }
    private static PropertyMapping();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Ignore();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ignore(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
}
public class OpenSearch.Client.PropertyMappingDescriptor`1 : DescriptorBase`2<PropertyMappingDescriptor`1<TDocument>, IDescriptor> {
    [CompilerGeneratedAttribute]
private IList`1<IClrPropertyMapping`1<TDocument>> <Mappings>k__BackingField;
    internal IList`1<IClrPropertyMapping`1<TDocument>> Mappings { get; }
    [CompilerGeneratedAttribute]
internal IList`1<IClrPropertyMapping`1<TDocument>> get_Mappings();
    public PropertyMappingDescriptor`1<TDocument> PropertyName(Expression`1<Func`2<TDocument, object>> property, string field);
    public PropertyMappingDescriptor`1<TDocument> Ignore(Expression`1<Func`2<TDocument, object>> property);
}
public class OpenSearch.Client.PropertyMappingProvider : object {
    protected ConcurrentDictionary`2<string, IPropertyMapping> Properties;
    public virtual IPropertyMapping CreatePropertyMapping(MemberInfo memberInfo);
    private static IPropertyMapping PropertyMappingFromAttributes(MemberInfo memberInfo);
}
[JsonFormatterAttribute("OpenSearch.Client.PropertyNameFormatter")]
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.PropertyName : object {
    private object _comparisonValue;
    private Type _type;
    [CompilerGeneratedAttribute]
private bool <CacheableExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyInfo <Property>k__BackingField;
    [CompilerGeneratedAttribute]
private static int <TypeHashCode>k__BackingField;
    public bool CacheableExpression { get; }
    public Expression Expression { get; }
    public string Name { get; }
    public PropertyInfo Property { get; }
    internal string DebugDisplay { get; }
    private string PropertyDebug { get; }
    private static int TypeHashCode { get; }
    public PropertyName(string name);
    public PropertyName(Expression expression);
    public PropertyName(PropertyInfo property);
    private static PropertyName();
    [CompilerGeneratedAttribute]
public bool get_CacheableExpression();
    [CompilerGeneratedAttribute]
public Expression get_Expression();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public PropertyInfo get_Property();
    internal string get_DebugDisplay();
    public virtual string ToString();
    private string get_PropertyDebug();
    [CompilerGeneratedAttribute]
private static int get_TypeHashCode();
    public sealed virtual bool Equals(PropertyName other);
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public static PropertyName op_Implicit(string name);
    public static PropertyName op_Implicit(Expression expression);
    public static PropertyName op_Implicit(PropertyInfo property);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    private bool EqualsString(string other);
    public bool EqualsMarker(PropertyName other);
    public static bool op_Equality(PropertyName left, PropertyName right);
    public static bool op_Inequality(PropertyName left, PropertyName right);
}
[AttributeUsageAttribute("128")]
public class OpenSearch.Client.PropertyNameAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Ignore>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowPrivate>k__BackingField;
    public string Name { get; public set; }
    public int Order { get; }
    public bool Ignore { get; public set; }
    public Nullable`1<bool> AllowPrivate { get; public set; }
    public PropertyNameAttribute(string name);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Ignore();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ignore(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AllowPrivate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowPrivate(Nullable`1<bool> value);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.PropertyNameExtensions : object {
    [ExtensionAttribute]
internal static bool IsConditionless(PropertyName property);
}
internal class OpenSearch.Client.PropertyNameFormatter : object {
    public sealed virtual PropertyName Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, PropertyName value, IJsonFormatterResolver formatterResolver);
    public sealed virtual void SerializeToPropertyName(JsonWriter& writer, PropertyName value, IJsonFormatterResolver formatterResolver);
    public sealed virtual PropertyName DeserializeFromPropertyName(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.PropertyWalker : object {
    private int _maxRecursion;
    private ConcurrentDictionary`2<Type, int> _seenTypes;
    private Type _type;
    private IPropertyVisitor _visitor;
    public PropertyWalker(Type type, IPropertyVisitor visitor, int maxRecursion);
    private PropertyWalker(Type type, IPropertyVisitor visitor, int maxRecursion, ConcurrentDictionary`2<Type, int> seenTypes);
    public IProperties GetProperties(ConcurrentDictionary`2<Type, int> seenTypes, int maxRecursion);
    private IProperty GetProperty(PropertyInfo propertyInfo, OpenSearchPropertyAttributeBase attribute);
    private static IProperty InferProperty(PropertyInfo propertyInfo);
    private static Type GetUnderlyingType(Type type);
    private static bool ShouldUnwrapType(Type ty);
}
internal abstract class OpenSearch.Client.ProxyRequestFormatterBase`2 : object {
    public sealed virtual TRequestInterface Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TRequestInterface value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.PutAliasDescriptor : RequestDescriptorBase`3<PutAliasDescriptor, PutAliasRequestParameters, IPutAliasRequest> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IPutAliasRequest.Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <OpenSearch.Client.IPutAliasRequest.IndexRouting>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IPutAliasRequest.IsWriteIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <OpenSearch.Client.IPutAliasRequest.Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <OpenSearch.Client.IPutAliasRequest.SearchRouting>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IPutAliasRequest.Index { get; }
    private Name OpenSearch.Client.IPutAliasRequest.Name { get; }
    private QueryContainer OpenSearch.Client.IPutAliasRequest.Filter { get; private set; }
    private Routing OpenSearch.Client.IPutAliasRequest.IndexRouting { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IPutAliasRequest.IsWriteIndex { get; private set; }
    private Routing OpenSearch.Client.IPutAliasRequest.Routing { get; private set; }
    private Routing OpenSearch.Client.IPutAliasRequest.SearchRouting { get; private set; }
    public PutAliasDescriptor(Indices index, Name name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IPutAliasRequest.get_Index();
    private sealed virtual override Name OpenSearch.Client.IPutAliasRequest.get_Name();
    public PutAliasDescriptor Index(Indices index);
    public PutAliasDescriptor Index();
    public PutAliasDescriptor AllIndices();
    public PutAliasDescriptor MasterTimeout(Time mastertimeout);
    public PutAliasDescriptor ClusterManagerTimeout(Time timeout);
    public PutAliasDescriptor Timeout(Time timeout);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IPutAliasRequest.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPutAliasRequest.set_Filter(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Routing OpenSearch.Client.IPutAliasRequest.get_IndexRouting();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPutAliasRequest.set_IndexRouting(Routing value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IPutAliasRequest.get_IsWriteIndex();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPutAliasRequest.set_IsWriteIndex(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Routing OpenSearch.Client.IPutAliasRequest.get_Routing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPutAliasRequest.set_Routing(Routing value);
    [CompilerGeneratedAttribute]
private sealed virtual override Routing OpenSearch.Client.IPutAliasRequest.get_SearchRouting();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPutAliasRequest.set_SearchRouting(Routing value);
    public PutAliasDescriptor Routing(Routing routing);
    public PutAliasDescriptor IndexRouting(Routing routing);
    public PutAliasDescriptor SearchRouting(Routing routing);
    public PutAliasDescriptor IsWriteIndex(Nullable`1<bool> isWriteIndex);
    public PutAliasDescriptor Filter(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> filterSelector);
}
public class OpenSearch.Client.PutAliasRequest : PlainRequestBase`1<PutAliasRequestParameters> {
    [CompilerGeneratedAttribute]
private QueryContainer <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <IndexRouting>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsWriteIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Routing <SearchRouting>k__BackingField;
    public QueryContainer Filter { get; public set; }
    public Routing IndexRouting { get; public set; }
    public Nullable`1<bool> IsWriteIndex { get; public set; }
    public Routing Routing { get; public set; }
    public Routing SearchRouting { get; public set; }
    protected IPutAliasRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IPutAliasRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IPutAliasRequest.Name { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public PutAliasRequest(Indices index, Name name);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Routing get_IndexRouting();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexRouting(Routing value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IsWriteIndex();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsWriteIndex(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Routing get_Routing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Routing(Routing value);
    [CompilerGeneratedAttribute]
public sealed virtual Routing get_SearchRouting();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchRouting(Routing value);
    protected IPutAliasRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IPutAliasRequest.get_Index();
    private sealed virtual override Name OpenSearch.Client.IPutAliasRequest.get_Name();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.PutAliasResponse : ResponseBase {
}
public class OpenSearch.Client.PutComponentTemplateDescriptor : RequestDescriptorBase`3<PutComponentTemplateDescriptor, PutComponentTemplateRequestParameters, IPutComponentTemplateRequest> {
    [CompilerGeneratedAttribute]
private ITemplate <OpenSearch.Client.IComponentTemplate.Template>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IComponentTemplate.Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IComponentTemplate.Meta>k__BackingField;
    private ITemplate OpenSearch.Client.IComponentTemplate.Template { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IComponentTemplate.Version { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IComponentTemplate.Meta { get; private set; }
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IPutComponentTemplateRequest.Name { get; }
    public PutComponentTemplateDescriptor(Name name);
    [CompilerGeneratedAttribute]
private sealed virtual override ITemplate OpenSearch.Client.IComponentTemplate.get_Template();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IComponentTemplate.set_Template(ITemplate value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IComponentTemplate.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IComponentTemplate.set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IComponentTemplate.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IComponentTemplate.set_Meta(IDictionary`2<string, object> value);
    public PutComponentTemplateDescriptor Version(Nullable`1<long> version);
    public PutComponentTemplateDescriptor Meta(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> metaSelector);
    public PutComponentTemplateDescriptor Meta(Dictionary`2<string, object> metaDictionary);
    public PutComponentTemplateDescriptor Template(Func`2<TemplateDescriptor, ITemplate> selector);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IPutComponentTemplateRequest.get_Name();
    public PutComponentTemplateDescriptor ClusterManagerTimeout(Time clustermanagertimeout);
    public PutComponentTemplateDescriptor Create(Nullable`1<bool> create);
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public PutComponentTemplateDescriptor MasterTimeout(Time mastertimeout);
    public PutComponentTemplateDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.PutComponentTemplateRequest : PlainRequestBase`1<PutComponentTemplateRequestParameters> {
    [CompilerGeneratedAttribute]
private ITemplate <Template>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Meta>k__BackingField;
    public ITemplate Template { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public IDictionary`2<string, object> Meta { get; public set; }
    protected IPutComponentTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IPutComponentTemplateRequest.Name { get; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<bool> Create { get; public set; }
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public Time MasterTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public PutComponentTemplateRequest(Name name);
    [CompilerGeneratedAttribute]
public sealed virtual ITemplate get_Template();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Template(ITemplate value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Meta(IDictionary`2<string, object> value);
    protected IPutComponentTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IPutComponentTemplateRequest.get_Name();
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<bool> get_Create();
    public void set_Create(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.PutComponentTemplateResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.PutComposableIndexTemplateDescriptor : RequestDescriptorBase`3<PutComposableIndexTemplateDescriptor, PutComposableIndexTemplateRequestParameters, IPutComposableIndexTemplateRequest> {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <OpenSearch.Client.IComposableIndexTemplate.ComposedOf>k__BackingField;
    [CompilerGeneratedAttribute]
private IDataStreamTemplate <OpenSearch.Client.IComposableIndexTemplate.DataStream>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <OpenSearch.Client.IComposableIndexTemplate.IndexPatterns>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IComposableIndexTemplate.Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private ITemplate <OpenSearch.Client.IComposableIndexTemplate.Template>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IComposableIndexTemplate.Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IComposableIndexTemplate.Meta>k__BackingField;
    private IReadOnlyCollection`1<string> OpenSearch.Client.IComposableIndexTemplate.ComposedOf { get; private set; }
    private IDataStreamTemplate OpenSearch.Client.IComposableIndexTemplate.DataStream { get; private set; }
    private IReadOnlyCollection`1<string> OpenSearch.Client.IComposableIndexTemplate.IndexPatterns { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IComposableIndexTemplate.Priority { get; private set; }
    private ITemplate OpenSearch.Client.IComposableIndexTemplate.Template { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IComposableIndexTemplate.Version { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IComposableIndexTemplate.Meta { get; private set; }
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IPutComposableIndexTemplateRequest.Name { get; }
    public PutComposableIndexTemplateDescriptor(Name name);
    [CompilerGeneratedAttribute]
private sealed virtual override IReadOnlyCollection`1<string> OpenSearch.Client.IComposableIndexTemplate.get_ComposedOf();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IComposableIndexTemplate.set_ComposedOf(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDataStreamTemplate OpenSearch.Client.IComposableIndexTemplate.get_DataStream();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IComposableIndexTemplate.set_DataStream(IDataStreamTemplate value);
    [CompilerGeneratedAttribute]
private sealed virtual override IReadOnlyCollection`1<string> OpenSearch.Client.IComposableIndexTemplate.get_IndexPatterns();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IComposableIndexTemplate.set_IndexPatterns(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IComposableIndexTemplate.get_Priority();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IComposableIndexTemplate.set_Priority(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITemplate OpenSearch.Client.IComposableIndexTemplate.get_Template();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IComposableIndexTemplate.set_Template(ITemplate value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IComposableIndexTemplate.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IComposableIndexTemplate.set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IComposableIndexTemplate.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IComposableIndexTemplate.set_Meta(IDictionary`2<string, object> value);
    public PutComposableIndexTemplateDescriptor ComposedOf(String[] composedOf);
    public PutComposableIndexTemplateDescriptor ComposedOf(IEnumerable`1<string> composedOf);
    public PutComposableIndexTemplateDescriptor DataStream(Func`2<DataStreamTemplateDescriptor, IDataStreamTemplate> dataStreamSelector);
    public PutComposableIndexTemplateDescriptor IndexPatterns(String[] patterns);
    public PutComposableIndexTemplateDescriptor IndexPatterns(IEnumerable`1<string> patterns);
    public PutComposableIndexTemplateDescriptor Priority(Nullable`1<long> priority);
    public PutComposableIndexTemplateDescriptor Template(Func`2<TemplateDescriptor, ITemplate> selector);
    public PutComposableIndexTemplateDescriptor Version(Nullable`1<long> version);
    public PutComposableIndexTemplateDescriptor Meta(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
    public PutComposableIndexTemplateDescriptor Meta(Dictionary`2<string, object> meta);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IPutComposableIndexTemplateRequest.get_Name();
    public PutComposableIndexTemplateDescriptor Cause(string cause);
    public PutComposableIndexTemplateDescriptor ClusterManagerTimeout(Time clustermanagertimeout);
    public PutComposableIndexTemplateDescriptor Create(Nullable`1<bool> create);
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public PutComposableIndexTemplateDescriptor MasterTimeout(Time mastertimeout);
}
public class OpenSearch.Client.PutComposableIndexTemplateRequest : PlainRequestBase`1<PutComposableIndexTemplateRequestParameters> {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <ComposedOf>k__BackingField;
    [CompilerGeneratedAttribute]
private IDataStreamTemplate <DataStream>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <IndexPatterns>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private ITemplate <Template>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Meta>k__BackingField;
    public IReadOnlyCollection`1<string> ComposedOf { get; public set; }
    public IDataStreamTemplate DataStream { get; public set; }
    public IReadOnlyCollection`1<string> IndexPatterns { get; public set; }
    public Nullable`1<long> Priority { get; public set; }
    public ITemplate Template { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public IDictionary`2<string, object> Meta { get; public set; }
    protected IPutComposableIndexTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IPutComposableIndexTemplateRequest.Name { get; }
    public string Cause { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<bool> Create { get; public set; }
    [ObsoleteAttribute("Deprecated as of: 2.0.0, reason: To promote inclusive language, use 'cluster_manager_timeout' instead.")]
public Time MasterTimeout { get; public set; }
    public PutComposableIndexTemplateRequest(Name name);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<string> get_ComposedOf();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ComposedOf(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDataStreamTemplate get_DataStream();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DataStream(IDataStreamTemplate value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<string> get_IndexPatterns();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexPatterns(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Priority(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual ITemplate get_Template();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Template(ITemplate value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Meta(IDictionary`2<string, object> value);
    protected IPutComposableIndexTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IPutComposableIndexTemplateRequest.get_Name();
    public string get_Cause();
    public void set_Cause(string value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<bool> get_Create();
    public void set_Create(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
}
public class OpenSearch.Client.PutComposableIndexTemplateResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.PutIndexTemplateDescriptor : RequestDescriptorBase`3<PutIndexTemplateDescriptor, PutIndexTemplateRequestParameters, IPutIndexTemplateRequest> {
    [CompilerGeneratedAttribute]
private IAliases <OpenSearch.Client.ITemplateMapping.Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <OpenSearch.Client.ITemplateMapping.IndexPatterns>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeMapping <OpenSearch.Client.ITemplateMapping.Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITemplateMapping.Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <OpenSearch.Client.ITemplateMapping.Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITemplateMapping.Version>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IPutIndexTemplateRequest.Name { get; }
    private IAliases OpenSearch.Client.ITemplateMapping.Aliases { get; private set; }
    private IReadOnlyCollection`1<string> OpenSearch.Client.ITemplateMapping.IndexPatterns { get; private set; }
    private ITypeMapping OpenSearch.Client.ITemplateMapping.Mappings { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITemplateMapping.Order { get; private set; }
    private IIndexSettings OpenSearch.Client.ITemplateMapping.Settings { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITemplateMapping.Version { get; private set; }
    public PutIndexTemplateDescriptor(Name name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IPutIndexTemplateRequest.get_Name();
    public PutIndexTemplateDescriptor Create(Nullable`1<bool> create);
    public PutIndexTemplateDescriptor IncludeTypeName(Nullable`1<bool> includetypename);
    public PutIndexTemplateDescriptor MasterTimeout(Time mastertimeout);
    public PutIndexTemplateDescriptor ClusterManagerTimeout(Time timeout);
    [CompilerGeneratedAttribute]
private sealed virtual override IAliases OpenSearch.Client.ITemplateMapping.get_Aliases();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITemplateMapping.set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
private sealed virtual override IReadOnlyCollection`1<string> OpenSearch.Client.ITemplateMapping.get_IndexPatterns();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITemplateMapping.set_IndexPatterns(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITypeMapping OpenSearch.Client.ITemplateMapping.get_Mappings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITemplateMapping.set_Mappings(ITypeMapping value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITemplateMapping.get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITemplateMapping.set_Order(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIndexSettings OpenSearch.Client.ITemplateMapping.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITemplateMapping.set_Settings(IIndexSettings value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITemplateMapping.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITemplateMapping.set_Version(Nullable`1<int> value);
    public PutIndexTemplateDescriptor Order(Nullable`1<int> order);
    public PutIndexTemplateDescriptor Version(Nullable`1<int> version);
    public PutIndexTemplateDescriptor IndexPatterns(String[] patterns);
    public PutIndexTemplateDescriptor IndexPatterns(IEnumerable`1<string> patterns);
    public PutIndexTemplateDescriptor Settings(Func`2<IndexSettingsDescriptor, IPromise`1<IIndexSettings>> settingsSelector);
    public PutIndexTemplateDescriptor Map(Func`2<TypeMappingDescriptor`1<T>, ITypeMapping> selector);
    public PutIndexTemplateDescriptor Map(Func`2<TypeMappingDescriptor`1<object>, ITypeMapping> selector);
    [ObsoleteAttribute("Mappings is no longer a dictionary, please use the simplified Map() method on this descriptor instead")]
public PutIndexTemplateDescriptor Mappings(Func`2<MappingsDescriptor, ITypeMapping> mappingSelector);
    public PutIndexTemplateDescriptor Aliases(Func`2<AliasesDescriptor, IPromise`1<IAliases>> aliasDescriptor);
}
public class OpenSearch.Client.PutIndexTemplateRequest : PlainRequestBase`1<PutIndexTemplateRequestParameters> {
    [CompilerGeneratedAttribute]
private IAliases <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <IndexPatterns>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeMapping <Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Version>k__BackingField;
    public IAliases Aliases { get; public set; }
    public IReadOnlyCollection`1<string> IndexPatterns { get; public set; }
    public ITypeMapping Mappings { get; public set; }
    public Nullable`1<int> Order { get; public set; }
    public IIndexSettings Settings { get; public set; }
    public Nullable`1<int> Version { get; public set; }
    protected IPutIndexTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IPutIndexTemplateRequest.Name { get; }
    public Nullable`1<bool> Create { get; public set; }
    public Nullable`1<bool> IncludeTypeName { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public PutIndexTemplateRequest(Name name);
    [CompilerGeneratedAttribute]
public sealed virtual IAliases get_Aliases();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<string> get_IndexPatterns();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexPatterns(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual ITypeMapping get_Mappings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mappings(ITypeMapping value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IIndexSettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IIndexSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<int> value);
    protected IPutIndexTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IPutIndexTemplateRequest.get_Name();
    public Nullable`1<bool> get_Create();
    public void set_Create(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeTypeName();
    public void set_IncludeTypeName(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
public class OpenSearch.Client.PutIndexTemplateResponse : AcknowledgedResponseBase {
}
[DataContractAttribute]
public class OpenSearch.Client.PutMappingDescriptor`1 : RequestDescriptorBase`3<PutMappingDescriptor`1<TDocument>, PutMappingRequestParameters, IPutMappingRequest`1<TDocument>> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITypeMapping.DateDetection>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, DynamicMapping> <OpenSearch.Client.ITypeMapping.Dynamic>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ITypeMapping.DynamicDateFormats>k__BackingField;
    [CompilerGeneratedAttribute]
private IDynamicTemplateContainer <OpenSearch.Client.ITypeMapping.DynamicTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IFieldNamesField <OpenSearch.Client.ITypeMapping.FieldNamesField>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.ITypeMapping.Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITypeMapping.NumericDetection>k__BackingField;
    [CompilerGeneratedAttribute]
private IProperties <OpenSearch.Client.ITypeMapping.Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IRoutingField <OpenSearch.Client.ITypeMapping.RoutingField>k__BackingField;
    [CompilerGeneratedAttribute]
private IRuntimeFields <OpenSearch.Client.ITypeMapping.RuntimeFields>k__BackingField;
    [CompilerGeneratedAttribute]
private ISizeField <OpenSearch.Client.ITypeMapping.SizeField>k__BackingField;
    [CompilerGeneratedAttribute]
private ISourceField <OpenSearch.Client.ITypeMapping.SourceField>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IPutMappingRequest.Index { get; }
    private Nullable`1<bool> OpenSearch.Client.ITypeMapping.DateDetection { get; private set; }
    private Union`2<bool, DynamicMapping> OpenSearch.Client.ITypeMapping.Dynamic { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.ITypeMapping.DynamicDateFormats { get; private set; }
    private IDynamicTemplateContainer OpenSearch.Client.ITypeMapping.DynamicTemplates { get; private set; }
    private IFieldNamesField OpenSearch.Client.ITypeMapping.FieldNamesField { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.ITypeMapping.Meta { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITypeMapping.NumericDetection { get; private set; }
    private IProperties OpenSearch.Client.ITypeMapping.Properties { get; private set; }
    private IRoutingField OpenSearch.Client.ITypeMapping.RoutingField { get; private set; }
    private IRuntimeFields OpenSearch.Client.ITypeMapping.RuntimeFields { get; private set; }
    private ISizeField OpenSearch.Client.ITypeMapping.SizeField { get; private set; }
    private ISourceField OpenSearch.Client.ITypeMapping.SourceField { get; private set; }
    public PutMappingDescriptor`1(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IPutMappingRequest.get_Index();
    public PutMappingDescriptor`1<TDocument> Index(Indices index);
    public PutMappingDescriptor`1<TDocument> Index();
    public PutMappingDescriptor`1<TDocument> AllIndices();
    public PutMappingDescriptor`1<TDocument> AllowNoIndices(Nullable`1<bool> allownoindices);
    public PutMappingDescriptor`1<TDocument> ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public PutMappingDescriptor`1<TDocument> IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public PutMappingDescriptor`1<TDocument> IncludeTypeName(Nullable`1<bool> includetypename);
    public PutMappingDescriptor`1<TDocument> MasterTimeout(Time mastertimeout);
    public PutMappingDescriptor`1<TDocument> ClusterManagerTimeout(Time timeout);
    public PutMappingDescriptor`1<TDocument> Timeout(Time timeout);
    public PutMappingDescriptor`1<TDocument> WriteIndexOnly(Nullable`1<bool> writeindexonly);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITypeMapping.get_DateDetection();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_DateDetection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<bool, DynamicMapping> OpenSearch.Client.ITypeMapping.get_Dynamic();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_Dynamic(Union`2<bool, DynamicMapping> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ITypeMapping.get_DynamicDateFormats();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_DynamicDateFormats(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDynamicTemplateContainer OpenSearch.Client.ITypeMapping.get_DynamicTemplates();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_DynamicTemplates(IDynamicTemplateContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFieldNamesField OpenSearch.Client.ITypeMapping.get_FieldNamesField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_FieldNamesField(IFieldNamesField value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.ITypeMapping.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITypeMapping.get_NumericDetection();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_NumericDetection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IProperties OpenSearch.Client.ITypeMapping.get_Properties();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_Properties(IProperties value);
    [CompilerGeneratedAttribute]
private sealed virtual override IRoutingField OpenSearch.Client.ITypeMapping.get_RoutingField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_RoutingField(IRoutingField value);
    [CompilerGeneratedAttribute]
private sealed virtual override IRuntimeFields OpenSearch.Client.ITypeMapping.get_RuntimeFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_RuntimeFields(IRuntimeFields value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISizeField OpenSearch.Client.ITypeMapping.get_SizeField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_SizeField(ISizeField value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISourceField OpenSearch.Client.ITypeMapping.get_SourceField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_SourceField(ISourceField value);
    protected PutMappingDescriptor`1<TDocument> Assign(TValue value, Action`2<ITypeMapping, TValue> assigner);
    public PutMappingDescriptor`1<TDocument> AutoMap(IPropertyVisitor visitor, int maxRecursion);
    public PutMappingDescriptor`1<TDocument> AutoMap(int maxRecursion);
    public PutMappingDescriptor`1<TDocument> Dynamic(Union`2<bool, DynamicMapping> dynamic);
    public PutMappingDescriptor`1<TDocument> Dynamic(Nullable`1<bool> dynamic);
    public PutMappingDescriptor`1<TDocument> SizeField(Func`2<SizeFieldDescriptor, ISizeField> sizeFieldSelector);
    public PutMappingDescriptor`1<TDocument> DisableSizeField(Nullable`1<bool> disabled);
    public PutMappingDescriptor`1<TDocument> DynamicDateFormats(IEnumerable`1<string> dateFormats);
    public PutMappingDescriptor`1<TDocument> DateDetection(Nullable`1<bool> detect);
    public PutMappingDescriptor`1<TDocument> NumericDetection(Nullable`1<bool> detect);
    public PutMappingDescriptor`1<TDocument> SourceField(Func`2<SourceFieldDescriptor, ISourceField> sourceFieldSelector);
    public PutMappingDescriptor`1<TDocument> RoutingField(Func`2<RoutingFieldDescriptor`1<TDocument>, IRoutingField> routingFieldSelector);
    public PutMappingDescriptor`1<TDocument> RuntimeFields(Func`2<RuntimeFieldsDescriptor`1<TDocument>, IPromise`1<IRuntimeFields>> runtimeFieldsSelector);
    public PutMappingDescriptor`1<TDocument> RuntimeFields(Func`2<RuntimeFieldsDescriptor`1<TSource>, IPromise`1<IRuntimeFields>> runtimeFieldsSelector);
    public PutMappingDescriptor`1<TDocument> FieldNamesField(Func`2<FieldNamesFieldDescriptor`1<TDocument>, IFieldNamesField> fieldNamesFieldSelector);
    public PutMappingDescriptor`1<TDocument> Meta(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> metaSelector);
    public PutMappingDescriptor`1<TDocument> Meta(Dictionary`2<string, object> metaDictionary);
    public PutMappingDescriptor`1<TDocument> Properties(Func`2<PropertiesDescriptor`1<TDocument>, IPromise`1<IProperties>> propertiesSelector);
    public PutMappingDescriptor`1<TDocument> DynamicTemplates(Func`2<DynamicTemplateContainerDescriptor`1<TDocument>, IPromise`1<IDynamicTemplateContainer>> dynamicTemplatesSelector);
}
[DataContractAttribute]
public class OpenSearch.Client.PutMappingRequest : PlainRequestBase`1<PutMappingRequestParameters> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DateDetection>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, DynamicMapping> <Dynamic>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <DynamicDateFormats>k__BackingField;
    [CompilerGeneratedAttribute]
private IDynamicTemplateContainer <DynamicTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IFieldNamesField <FieldNamesField>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <NumericDetection>k__BackingField;
    [CompilerGeneratedAttribute]
private IProperties <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IRoutingField <RoutingField>k__BackingField;
    [CompilerGeneratedAttribute]
private IRuntimeFields <RuntimeFields>k__BackingField;
    [CompilerGeneratedAttribute]
private ISizeField <SizeField>k__BackingField;
    [CompilerGeneratedAttribute]
private ISourceField <SourceField>k__BackingField;
    public Nullable`1<bool> DateDetection { get; public set; }
    public Union`2<bool, DynamicMapping> Dynamic { get; public set; }
    public IEnumerable`1<string> DynamicDateFormats { get; public set; }
    public IDynamicTemplateContainer DynamicTemplates { get; public set; }
    public IFieldNamesField FieldNamesField { get; public set; }
    public IDictionary`2<string, object> Meta { get; public set; }
    public Nullable`1<bool> NumericDetection { get; public set; }
    public IProperties Properties { get; public set; }
    public IRoutingField RoutingField { get; public set; }
    public IRuntimeFields RuntimeFields { get; public set; }
    public ISizeField SizeField { get; public set; }
    public ISourceField SourceField { get; public set; }
    protected IPutMappingRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IPutMappingRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> IncludeTypeName { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public Nullable`1<bool> WriteIndexOnly { get; public set; }
    public PutMappingRequest(Indices index);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DateDetection();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateDetection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<bool, DynamicMapping> get_Dynamic();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Dynamic(Union`2<bool, DynamicMapping> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_DynamicDateFormats();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DynamicDateFormats(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDynamicTemplateContainer get_DynamicTemplates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DynamicTemplates(IDynamicTemplateContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IFieldNamesField get_FieldNamesField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FieldNamesField(IFieldNamesField value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_NumericDetection();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NumericDetection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IProperties get_Properties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Properties(IProperties value);
    [CompilerGeneratedAttribute]
public sealed virtual IRoutingField get_RoutingField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RoutingField(IRoutingField value);
    [CompilerGeneratedAttribute]
public sealed virtual IRuntimeFields get_RuntimeFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RuntimeFields(IRuntimeFields value);
    [CompilerGeneratedAttribute]
public sealed virtual ISizeField get_SizeField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SizeField(ISizeField value);
    [CompilerGeneratedAttribute]
public sealed virtual ISourceField get_SourceField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SourceField(ISourceField value);
    protected IPutMappingRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IPutMappingRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeTypeName();
    public void set_IncludeTypeName(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public Nullable`1<bool> get_WriteIndexOnly();
    public void set_WriteIndexOnly(Nullable`1<bool> value);
}
public class OpenSearch.Client.PutMappingRequest`1 : PutMappingRequest {
    protected IPutMappingRequest`1<TDocument> TypedSelf { get; }
    public PutMappingRequest`1(Indices index);
    protected IPutMappingRequest`1<TDocument> get_TypedSelf();
}
public class OpenSearch.Client.PutMappingResponse : IndicesResponseBase {
}
public class OpenSearch.Client.PutPipelineDescriptor : RequestDescriptorBase`3<PutPipelineDescriptor, PutPipelineRequestParameters, IPutPipelineRequest> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IPipeline.Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IProcessor> <OpenSearch.Client.IPipeline.OnFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IProcessor> <OpenSearch.Client.IPipeline.Processors>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Id OpenSearch.Client.IPutPipelineRequest.Id { get; }
    private string OpenSearch.Client.IPipeline.Description { get; private set; }
    private IEnumerable`1<IProcessor> OpenSearch.Client.IPipeline.OnFailure { get; private set; }
    private IEnumerable`1<IProcessor> OpenSearch.Client.IPipeline.Processors { get; private set; }
    public PutPipelineDescriptor(Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IPutPipelineRequest.get_Id();
    public PutPipelineDescriptor MasterTimeout(Time mastertimeout);
    public PutPipelineDescriptor ClusterManagerTimeout(Time timeout);
    public PutPipelineDescriptor Timeout(Time timeout);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IPipeline.get_Description();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPipeline.set_Description(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IProcessor> OpenSearch.Client.IPipeline.get_OnFailure();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPipeline.set_OnFailure(IEnumerable`1<IProcessor> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IProcessor> OpenSearch.Client.IPipeline.get_Processors();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPipeline.set_Processors(IEnumerable`1<IProcessor> value);
    public PutPipelineDescriptor Description(string description);
    public PutPipelineDescriptor Processors(IEnumerable`1<IProcessor> processors);
    public PutPipelineDescriptor Processors(Func`2<ProcessorsDescriptor, IPromise`1<IList`1<IProcessor>>> selector);
    public PutPipelineDescriptor OnFailure(IEnumerable`1<IProcessor> processors);
    public PutPipelineDescriptor OnFailure(Func`2<ProcessorsDescriptor, IPromise`1<IList`1<IProcessor>>> selector);
}
public class OpenSearch.Client.PutPipelineRequest : PlainRequestBase`1<PutPipelineRequestParameters> {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IProcessor> <OnFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IProcessor> <Processors>k__BackingField;
    public string Description { get; public set; }
    public IEnumerable`1<IProcessor> OnFailure { get; public set; }
    public IEnumerable`1<IProcessor> Processors { get; public set; }
    protected IPutPipelineRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IPutPipelineRequest.Id { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public PutPipelineRequest(Id id);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IProcessor> get_OnFailure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OnFailure(IEnumerable`1<IProcessor> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IProcessor> get_Processors();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Processors(IEnumerable`1<IProcessor> value);
    protected IPutPipelineRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IPutPipelineRequest.get_Id();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.PutPipelineResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.PutScriptDescriptor : RequestDescriptorBase`3<PutScriptDescriptor, PutScriptRequestParameters, IPutScriptRequest> {
    [CompilerGeneratedAttribute]
private IStoredScript <OpenSearch.Client.IPutScriptRequest.Script>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Id OpenSearch.Client.IPutScriptRequest.Id { get; }
    private Name OpenSearch.Client.IPutScriptRequest.Context { get; }
    private IStoredScript OpenSearch.Client.IPutScriptRequest.Script { get; private set; }
    public PutScriptDescriptor(Id id);
    public PutScriptDescriptor(Id id, Name context);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IPutScriptRequest.get_Id();
    private sealed virtual override Name OpenSearch.Client.IPutScriptRequest.get_Context();
    public PutScriptDescriptor Context(Name context);
    public PutScriptDescriptor MasterTimeout(Time mastertimeout);
    public PutScriptDescriptor ClusterManagerTimeout(Time timeout);
    public PutScriptDescriptor Timeout(Time timeout);
    [CompilerGeneratedAttribute]
private sealed virtual override IStoredScript OpenSearch.Client.IPutScriptRequest.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IPutScriptRequest.set_Script(IStoredScript value);
    public PutScriptDescriptor Script(Func`2<StoredScriptDescriptor, IStoredScript> selector);
    public PutScriptDescriptor Painless(string source);
    public PutScriptDescriptor LuceneExpression(string source);
    public PutScriptDescriptor Mustache(string source);
}
public class OpenSearch.Client.PutScriptRequest : PlainRequestBase`1<PutScriptRequestParameters> {
    [CompilerGeneratedAttribute]
private IStoredScript <Script>k__BackingField;
    public IStoredScript Script { get; public set; }
    protected IPutScriptRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IPutScriptRequest.Id { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IPutScriptRequest.Context { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public PutScriptRequest(Id id);
    public PutScriptRequest(Id id, Name context);
    [CompilerGeneratedAttribute]
public sealed virtual IStoredScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IStoredScript value);
    protected IPutScriptRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IPutScriptRequest.get_Id();
    private sealed virtual override Name OpenSearch.Client.IPutScriptRequest.get_Context();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.PutScriptResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.QueriesCacheSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enabled>k__BackingField;
    public Nullable`1<bool> Enabled { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Enabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Enabled(Nullable`1<bool> value);
}
public class OpenSearch.Client.QueriesCacheSettingsDescriptor : DescriptorBase`2<QueriesCacheSettingsDescriptor, IQueriesCacheSettings> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IQueriesCacheSettings.Enabled>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IQueriesCacheSettings.Enabled { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IQueriesCacheSettings.get_Enabled();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueriesCacheSettings.set_Enabled(Nullable`1<bool> value);
    public QueriesCacheSettingsDescriptor Enabled(Nullable`1<bool> enabled);
}
public class OpenSearch.Client.QueriesSettings : object {
    [CompilerGeneratedAttribute]
private IQueriesCacheSettings <Cache>k__BackingField;
    public IQueriesCacheSettings Cache { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IQueriesCacheSettings get_Cache();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Cache(IQueriesCacheSettings value);
}
public class OpenSearch.Client.QueriesSettingsDescriptor : DescriptorBase`2<QueriesSettingsDescriptor, IQueriesSettings> {
    [CompilerGeneratedAttribute]
private IQueriesCacheSettings <OpenSearch.Client.IQueriesSettings.Cache>k__BackingField;
    private IQueriesCacheSettings OpenSearch.Client.IQueriesSettings.Cache { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IQueriesCacheSettings OpenSearch.Client.IQueriesSettings.get_Cache();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueriesSettings.set_Cache(IQueriesCacheSettings value);
    public QueriesSettingsDescriptor Cache(Func`2<QueriesCacheSettingsDescriptor, IQueriesCacheSettings> selector);
}
public static class OpenSearch.Client.Query`1 : object {
    public static QueryContainer Bool(Func`2<BoolQueryDescriptor`1<T>, IBoolQuery> selector);
    public static QueryContainer Boosting(Func`2<BoostingQueryDescriptor`1<T>, IBoostingQuery> selector);
    public static QueryContainer Conditionless(Func`2<ConditionlessQueryDescriptor`1<T>, IConditionlessQuery> selector);
    public static QueryContainer ConstantScore(Func`2<ConstantScoreQueryDescriptor`1<T>, IConstantScoreQuery> selector);
    public static QueryContainer DateRange(Func`2<DateRangeQueryDescriptor`1<T>, IDateRangeQuery> selector);
    public static QueryContainer DisMax(Func`2<DisMaxQueryDescriptor`1<T>, IDisMaxQuery> selector);
    public static QueryContainer DistanceFeature(Func`2<DistanceFeatureQueryDescriptor`1<T>, IDistanceFeatureQuery> selector);
    public static QueryContainer Exists(Func`2<ExistsQueryDescriptor`1<T>, IExistsQuery> selector);
    public static QueryContainer FunctionScore(Func`2<FunctionScoreQueryDescriptor`1<T>, IFunctionScoreQuery> selector);
    public static QueryContainer Fuzzy(Func`2<FuzzyQueryDescriptor`1<T>, IFuzzyQuery> selector);
    public static QueryContainer GeoBoundingBox(Func`2<GeoBoundingBoxQueryDescriptor`1<T>, IGeoBoundingBoxQuery> selector);
    public static QueryContainer GeoDistance(Func`2<GeoDistanceQueryDescriptor`1<T>, IGeoDistanceQuery> selector);
    public static QueryContainer GeoPolygon(Func`2<GeoPolygonQueryDescriptor`1<T>, IGeoPolygonQuery> selector);
    public static QueryContainer GeoShape(Func`2<GeoShapeQueryDescriptor`1<T>, IGeoShapeQuery> selector);
    public static QueryContainer Shape(Func`2<ShapeQueryDescriptor`1<T>, IShapeQuery> selector);
    public static QueryContainer HasChild(Func`2<HasChildQueryDescriptor`1<TChild>, IHasChildQuery> selector);
    public static QueryContainer HasParent(Func`2<HasParentQueryDescriptor`1<TParent>, IHasParentQuery> selector);
    public static QueryContainer Ids(Func`2<IdsQueryDescriptor, IIdsQuery> selector);
    public static QueryContainer Intervals(Func`2<IntervalsQueryDescriptor`1<T>, IIntervalsQuery> selector);
    public static QueryContainer Knn(Func`2<KnnQueryDescriptor`1<T>, IKnnQuery> selector);
    public static QueryContainer Match(Func`2<MatchQueryDescriptor`1<T>, IMatchQuery> selector);
    public static QueryContainer MatchAll(Func`2<MatchAllQueryDescriptor, IMatchAllQuery> selector);
    public static QueryContainer MatchBoolPrefix(Func`2<MatchBoolPrefixQueryDescriptor`1<T>, IMatchBoolPrefixQuery> selector);
    public static QueryContainer MatchNone(Func`2<MatchNoneQueryDescriptor, IMatchNoneQuery> selector);
    public static QueryContainer MatchPhrase(Func`2<MatchPhraseQueryDescriptor`1<T>, IMatchPhraseQuery> selector);
    public static QueryContainer MatchPhrasePrefix(Func`2<MatchPhrasePrefixQueryDescriptor`1<T>, IMatchPhrasePrefixQuery> selector);
    public static QueryContainer MoreLikeThis(Func`2<MoreLikeThisQueryDescriptor`1<T>, IMoreLikeThisQuery> selector);
    public static QueryContainer MultiMatch(Func`2<MultiMatchQueryDescriptor`1<T>, IMultiMatchQuery> selector);
    public static QueryContainer Nested(Func`2<NestedQueryDescriptor`1<T>, INestedQuery> selector);
    public static QueryContainer Neural(Func`2<NeuralQueryDescriptor`1<T>, INeuralQuery> selector);
    public static QueryContainer ParentId(Func`2<ParentIdQueryDescriptor`1<T>, IParentIdQuery> selector);
    public static QueryContainer Percolate(Func`2<PercolateQueryDescriptor`1<T>, IPercolateQuery> selector);
    public static QueryContainer Prefix(Expression`1<Func`2<T, TValue>> fieldDescriptor, string value, Nullable`1<double> boost, MultiTermQueryRewrite rewrite, string name);
    public static QueryContainer Prefix(Field field, string value, Nullable`1<double> boost, MultiTermQueryRewrite rewrite, string name);
    public static QueryContainer Prefix(Func`2<PrefixQueryDescriptor`1<T>, IPrefixQuery> selector);
    public static QueryContainer QueryString(Func`2<QueryStringQueryDescriptor`1<T>, IQueryStringQuery> selector);
    public static QueryContainer Range(Func`2<NumericRangeQueryDescriptor`1<T>, INumericRangeQuery> selector);
    public static QueryContainer LongRange(Func`2<LongRangeQueryDescriptor`1<T>, ILongRangeQuery> selector);
    public static QueryContainer Regexp(Func`2<RegexpQueryDescriptor`1<T>, IRegexpQuery> selector);
    public static QueryContainer RankFeature(Func`2<RankFeatureQueryDescriptor`1<T>, IRankFeatureQuery> selector);
    public static QueryContainer Script(Func`2<ScriptQueryDescriptor`1<T>, IScriptQuery> selector);
    public static QueryContainer ScriptScore(Func`2<ScriptScoreQueryDescriptor`1<T>, IScriptScoreQuery> selector);
    public static QueryContainer SimpleQueryString(Func`2<SimpleQueryStringQueryDescriptor`1<T>, ISimpleQueryStringQuery> selector);
    public static QueryContainer SpanContaining(Func`2<SpanContainingQueryDescriptor`1<T>, ISpanContainingQuery> selector);
    public static QueryContainer SpanFirst(Func`2<SpanFirstQueryDescriptor`1<T>, ISpanFirstQuery> selector);
    public static QueryContainer SpanMultiTerm(Func`2<SpanMultiTermQueryDescriptor`1<T>, ISpanMultiTermQuery> selector);
    public static QueryContainer SpanNear(Func`2<SpanNearQueryDescriptor`1<T>, ISpanNearQuery> selector);
    public static QueryContainer SpanNot(Func`2<SpanNotQueryDescriptor`1<T>, ISpanNotQuery> selector);
    public static QueryContainer SpanOr(Func`2<SpanOrQueryDescriptor`1<T>, ISpanOrQuery> selector);
    public static QueryContainer SpanTerm(Func`2<SpanTermQueryDescriptor`1<T>, ISpanTermQuery> selector);
    public static QueryContainer SpanWithin(Func`2<SpanWithinQueryDescriptor`1<T>, ISpanWithinQuery> selector);
    public static QueryContainer SpanFieldMasking(Func`2<SpanFieldMaskingQueryDescriptor`1<T>, ISpanFieldMaskingQuery> selector);
    public static QueryContainer Term(Expression`1<Func`2<T, TValue>> fieldDescriptor, object value, Nullable`1<double> boost, string name);
    public static QueryContainer Term(Field field, object value, Nullable`1<double> boost, string name);
    public static QueryContainer Term(Func`2<TermQueryDescriptor`1<T>, ITermQuery> selector);
    public static QueryContainer TermRange(Func`2<TermRangeQueryDescriptor`1<T>, ITermRangeQuery> selector);
    public static QueryContainer Terms(Func`2<TermsQueryDescriptor`1<T>, ITermsQuery> selector);
    public static QueryContainer TermsSet(Func`2<TermsSetQueryDescriptor`1<T>, ITermsSetQuery> selector);
    public static QueryContainer Wildcard(Expression`1<Func`2<T, TValue>> fieldDescriptor, string value, Nullable`1<double> boost, MultiTermQueryRewrite rewrite, string name);
    public static QueryContainer Wildcard(Field field, string value, Nullable`1<double> boost, MultiTermQueryRewrite rewrite, string name);
    public static QueryContainer Wildcard(Func`2<WildcardQueryDescriptor`1<T>, IWildcardQuery> selector);
}
public abstract class OpenSearch.Client.QueryBase : object {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStrict>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVerbatim>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public Nullable`1<double> Boost { get; public set; }
    public bool IsStrict { get; public set; }
    public bool IsVerbatim { get; public set; }
    public bool IsWritable { get; }
    public string Name { get; public set; }
    protected bool Conditionless { get; }
    private bool OpenSearch.Client.IQuery.Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Boost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsStrict();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsStrict(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsVerbatim();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsVerbatim(bool value);
    public sealed virtual bool get_IsWritable();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    protected abstract virtual bool get_Conditionless();
    private sealed virtual override bool OpenSearch.Client.IQuery.get_Conditionless();
    public static bool op_False(QueryBase a);
    public static bool op_True(QueryBase a);
    public static QueryBase op_BitwiseAnd(QueryBase leftQuery, QueryBase rightQuery);
    public static QueryBase op_BitwiseOr(QueryBase leftQuery, QueryBase rightQuery);
    public static QueryBase op_LogicalNot(QueryBase query);
    public static QueryBase op_UnaryPlus(QueryBase query);
    private static QueryBase Combine(QueryBase leftQuery, QueryBase rightQuery, Func`3<QueryContainer, QueryContainer, QueryContainer> combine);
    private static bool IfEitherIsEmptyReturnTheOtherOrEmpty(QueryBase leftQuery, QueryBase rightQuery, QueryBase& query);
    public static QueryContainer op_Implicit(QueryBase query);
    internal void WrapInContainer(IQueryContainer container);
    internal abstract virtual void InternalWrapInContainer(IQueryContainer container);
}
public class OpenSearch.Client.QueryBreakdown : object {
    [CompilerGeneratedAttribute]
private long <Advance>k__BackingField;
    [CompilerGeneratedAttribute]
private long <BuildScorer>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CreateWeight>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Match>k__BackingField;
    [CompilerGeneratedAttribute]
private long <NextDoc>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Score>k__BackingField;
    [DataMemberAttribute]
public long Advance { get; internal set; }
    [DataMemberAttribute]
public long BuildScorer { get; internal set; }
    [DataMemberAttribute]
public long CreateWeight { get; internal set; }
    [DataMemberAttribute]
public long Match { get; internal set; }
    [DataMemberAttribute]
public long NextDoc { get; internal set; }
    [DataMemberAttribute]
public long Score { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Advance();
    [CompilerGeneratedAttribute]
internal void set_Advance(long value);
    [CompilerGeneratedAttribute]
public long get_BuildScorer();
    [CompilerGeneratedAttribute]
internal void set_BuildScorer(long value);
    [CompilerGeneratedAttribute]
public long get_CreateWeight();
    [CompilerGeneratedAttribute]
internal void set_CreateWeight(long value);
    [CompilerGeneratedAttribute]
public long get_Match();
    [CompilerGeneratedAttribute]
internal void set_Match(long value);
    [CompilerGeneratedAttribute]
public long get_NextDoc();
    [CompilerGeneratedAttribute]
internal void set_NextDoc(long value);
    [CompilerGeneratedAttribute]
public long get_Score();
    [CompilerGeneratedAttribute]
internal void set_Score(long value);
}
[DataContractAttribute]
public class OpenSearch.Client.QueryCacheStats : object {
    [CompilerGeneratedAttribute]
private long <CacheCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CacheSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Evictions>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HitCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MemorySizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MissCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalCount>k__BackingField;
    [DataMemberAttribute]
public long CacheCount { get; public set; }
    [DataMemberAttribute]
public long CacheSize { get; public set; }
    [DataMemberAttribute]
public long Evictions { get; public set; }
    [DataMemberAttribute]
public long HitCount { get; public set; }
    [DataMemberAttribute]
public long MemorySizeInBytes { get; public set; }
    [DataMemberAttribute]
public long MissCount { get; public set; }
    [DataMemberAttribute]
public long TotalCount { get; public set; }
    [CompilerGeneratedAttribute]
public long get_CacheCount();
    [CompilerGeneratedAttribute]
public void set_CacheCount(long value);
    [CompilerGeneratedAttribute]
public long get_CacheSize();
    [CompilerGeneratedAttribute]
public void set_CacheSize(long value);
    [CompilerGeneratedAttribute]
public long get_Evictions();
    [CompilerGeneratedAttribute]
public void set_Evictions(long value);
    [CompilerGeneratedAttribute]
public long get_HitCount();
    [CompilerGeneratedAttribute]
public void set_HitCount(long value);
    [CompilerGeneratedAttribute]
public long get_MemorySizeInBytes();
    [CompilerGeneratedAttribute]
public void set_MemorySizeInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_MissCount();
    [CompilerGeneratedAttribute]
public void set_MissCount(long value);
    [CompilerGeneratedAttribute]
public long get_TotalCount();
    [CompilerGeneratedAttribute]
public void set_TotalCount(long value);
}
[DataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.QueryContainerFormatter")]
public class OpenSearch.Client.QueryContainer : object {
    private IBoolQuery _bool;
    private IBoostingQuery _boosting;
    private IConstantScoreQuery _constantScore;
    private IDisMaxQuery _disMax;
    private IDistanceFeatureQuery _distanceFeature;
    private IExistsQuery _exists;
    private IFunctionScoreQuery _functionScore;
    private IFuzzyQuery _fuzzy;
    private IGeoBoundingBoxQuery _geoBoundingBox;
    private IGeoDistanceQuery _geoDistance;
    private IGeoPolygonQuery _geoPolygon;
    private IGeoShapeQuery _geoShape;
    private IShapeQuery _shape;
    private IHasChildQuery _hasChild;
    private IHasParentQuery _hasParent;
    private IIdsQuery _ids;
    private IIntervalsQuery _intervals;
    private IKnnQuery _knn;
    private IMatchQuery _match;
    private IMatchAllQuery _matchAllQuery;
    private IMatchBoolPrefixQuery _matchBoolPrefixQuery;
    private IMatchNoneQuery _matchNoneQuery;
    private IMatchPhraseQuery _matchPhrase;
    private IMatchPhrasePrefixQuery _matchPhrasePrefix;
    private IMoreLikeThisQuery _moreLikeThis;
    private IMultiMatchQuery _multiMatch;
    private INestedQuery _nested;
    private INeuralQuery _neural;
    private IParentIdQuery _parentId;
    private IPercolateQuery _percolate;
    private IPrefixQuery _prefix;
    private IQueryStringQuery _queryString;
    private IRangeQuery _range;
    private IRawQuery _raw;
    private IRegexpQuery _regexp;
    private IScriptQuery _script;
    private IScriptScoreQuery _scriptScore;
    private ISimpleQueryStringQuery _simpleQueryString;
    private ISpanContainingQuery _spanContaining;
    private ISpanFieldMaskingQuery _spanFieldMasking;
    private ISpanFirstQuery _spanFirst;
    private ISpanMultiTermQuery _spanMultiTerm;
    private ISpanNearQuery _spanNear;
    private ISpanNotQuery _spanNot;
    private ISpanOrQuery _spanOr;
    private ISpanTermQuery _spanTerm;
    private ISpanWithinQuery _spanWithin;
    private ITermQuery _term;
    private ITermsQuery _terms;
    private ITermsSetQuery _termsSet;
    private IWildcardQuery _wildcard;
    private IRankFeatureQuery _rankFeature;
    [CompilerGeneratedAttribute]
private IQuery <ContainedQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HoldsOnlyShouldMusts>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IQueryContainer.IsStrict>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IQueryContainer.IsVerbatim>k__BackingField;
    [IgnoreDataMemberAttribute]
private IQueryContainer Self { get; }
    [IgnoreDataMemberAttribute]
internal IQuery ContainedQuery { get; internal set; }
    private IBoolQuery OpenSearch.Client.IQueryContainer.Bool { get; private set; }
    private IBoostingQuery OpenSearch.Client.IQueryContainer.Boosting { get; private set; }
    private IConstantScoreQuery OpenSearch.Client.IQueryContainer.ConstantScore { get; private set; }
    private IDisMaxQuery OpenSearch.Client.IQueryContainer.DisMax { get; private set; }
    private IDistanceFeatureQuery OpenSearch.Client.IQueryContainer.DistanceFeature { get; private set; }
    private IExistsQuery OpenSearch.Client.IQueryContainer.Exists { get; private set; }
    private IFunctionScoreQuery OpenSearch.Client.IQueryContainer.FunctionScore { get; private set; }
    private IFuzzyQuery OpenSearch.Client.IQueryContainer.Fuzzy { get; private set; }
    private IGeoBoundingBoxQuery OpenSearch.Client.IQueryContainer.GeoBoundingBox { get; private set; }
    private IGeoDistanceQuery OpenSearch.Client.IQueryContainer.GeoDistance { get; private set; }
    private IGeoPolygonQuery OpenSearch.Client.IQueryContainer.GeoPolygon { get; private set; }
    private IGeoShapeQuery OpenSearch.Client.IQueryContainer.GeoShape { get; private set; }
    private IShapeQuery OpenSearch.Client.IQueryContainer.Shape { get; private set; }
    private IHasChildQuery OpenSearch.Client.IQueryContainer.HasChild { get; private set; }
    private IHasParentQuery OpenSearch.Client.IQueryContainer.HasParent { get; private set; }
    private IIdsQuery OpenSearch.Client.IQueryContainer.Ids { get; private set; }
    private IIntervalsQuery OpenSearch.Client.IQueryContainer.Intervals { get; private set; }
    private IKnnQuery OpenSearch.Client.IQueryContainer.Knn { get; private set; }
    private IMatchQuery OpenSearch.Client.IQueryContainer.Match { get; private set; }
    private IMatchAllQuery OpenSearch.Client.IQueryContainer.MatchAll { get; private set; }
    private IMatchBoolPrefixQuery OpenSearch.Client.IQueryContainer.MatchBoolPrefix { get; private set; }
    private IMatchNoneQuery OpenSearch.Client.IQueryContainer.MatchNone { get; private set; }
    private IMatchPhraseQuery OpenSearch.Client.IQueryContainer.MatchPhrase { get; private set; }
    private IMatchPhrasePrefixQuery OpenSearch.Client.IQueryContainer.MatchPhrasePrefix { get; private set; }
    private IMoreLikeThisQuery OpenSearch.Client.IQueryContainer.MoreLikeThis { get; private set; }
    private IMultiMatchQuery OpenSearch.Client.IQueryContainer.MultiMatch { get; private set; }
    private INestedQuery OpenSearch.Client.IQueryContainer.Nested { get; private set; }
    private INeuralQuery OpenSearch.Client.IQueryContainer.Neural { get; private set; }
    private IParentIdQuery OpenSearch.Client.IQueryContainer.ParentId { get; private set; }
    private IPercolateQuery OpenSearch.Client.IQueryContainer.Percolate { get; private set; }
    private IPrefixQuery OpenSearch.Client.IQueryContainer.Prefix { get; private set; }
    private IQueryStringQuery OpenSearch.Client.IQueryContainer.QueryString { get; private set; }
    private IRangeQuery OpenSearch.Client.IQueryContainer.Range { get; private set; }
    private IRawQuery OpenSearch.Client.IQueryContainer.RawQuery { get; private set; }
    private IRegexpQuery OpenSearch.Client.IQueryContainer.Regexp { get; private set; }
    private IScriptQuery OpenSearch.Client.IQueryContainer.Script { get; private set; }
    private IScriptScoreQuery OpenSearch.Client.IQueryContainer.ScriptScore { get; private set; }
    private ISimpleQueryStringQuery OpenSearch.Client.IQueryContainer.SimpleQueryString { get; private set; }
    private ISpanContainingQuery OpenSearch.Client.IQueryContainer.SpanContaining { get; private set; }
    private ISpanFieldMaskingQuery OpenSearch.Client.IQueryContainer.SpanFieldMasking { get; private set; }
    private ISpanFirstQuery OpenSearch.Client.IQueryContainer.SpanFirst { get; private set; }
    private ISpanMultiTermQuery OpenSearch.Client.IQueryContainer.SpanMultiTerm { get; private set; }
    private ISpanNearQuery OpenSearch.Client.IQueryContainer.SpanNear { get; private set; }
    private ISpanNotQuery OpenSearch.Client.IQueryContainer.SpanNot { get; private set; }
    private ISpanOrQuery OpenSearch.Client.IQueryContainer.SpanOr { get; private set; }
    private ISpanTermQuery OpenSearch.Client.IQueryContainer.SpanTerm { get; private set; }
    private ISpanWithinQuery OpenSearch.Client.IQueryContainer.SpanWithin { get; private set; }
    private ITermQuery OpenSearch.Client.IQueryContainer.Term { get; private set; }
    private ITermsQuery OpenSearch.Client.IQueryContainer.Terms { get; private set; }
    private ITermsSetQuery OpenSearch.Client.IQueryContainer.TermsSet { get; private set; }
    private IWildcardQuery OpenSearch.Client.IQueryContainer.Wildcard { get; private set; }
    private IRankFeatureQuery OpenSearch.Client.IQueryContainer.RankFeature { get; private set; }
    [IgnoreDataMemberAttribute]
internal bool HoldsOnlyShouldMusts { get; internal set; }
    [IgnoreDataMemberAttribute]
internal bool IsConditionless { get; }
    [IgnoreDataMemberAttribute]
internal bool IsStrict { get; }
    [IgnoreDataMemberAttribute]
internal bool IsVerbatim { get; }
    [IgnoreDataMemberAttribute]
internal bool IsWritable { get; }
    [IgnoreDataMemberAttribute]
private bool OpenSearch.Client.IQueryContainer.IsConditionless { get; }
    [IgnoreDataMemberAttribute]
private bool OpenSearch.Client.IQueryContainer.IsStrict { get; private set; }
    [IgnoreDataMemberAttribute]
private bool OpenSearch.Client.IQueryContainer.IsVerbatim { get; private set; }
    [IgnoreDataMemberAttribute]
private bool OpenSearch.Client.IQueryContainer.IsWritable { get; }
    public QueryContainer(QueryBase query);
    private IQueryContainer get_Self();
    [CompilerGeneratedAttribute]
internal IQuery get_ContainedQuery();
    [CompilerGeneratedAttribute]
internal void set_ContainedQuery(IQuery value);
    private sealed virtual override IBoolQuery OpenSearch.Client.IQueryContainer.get_Bool();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Bool(IBoolQuery value);
    private sealed virtual override IBoostingQuery OpenSearch.Client.IQueryContainer.get_Boosting();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Boosting(IBoostingQuery value);
    private sealed virtual override IConstantScoreQuery OpenSearch.Client.IQueryContainer.get_ConstantScore();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_ConstantScore(IConstantScoreQuery value);
    private sealed virtual override IDisMaxQuery OpenSearch.Client.IQueryContainer.get_DisMax();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_DisMax(IDisMaxQuery value);
    private sealed virtual override IDistanceFeatureQuery OpenSearch.Client.IQueryContainer.get_DistanceFeature();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_DistanceFeature(IDistanceFeatureQuery value);
    private sealed virtual override IExistsQuery OpenSearch.Client.IQueryContainer.get_Exists();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Exists(IExistsQuery value);
    private sealed virtual override IFunctionScoreQuery OpenSearch.Client.IQueryContainer.get_FunctionScore();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_FunctionScore(IFunctionScoreQuery value);
    private sealed virtual override IFuzzyQuery OpenSearch.Client.IQueryContainer.get_Fuzzy();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Fuzzy(IFuzzyQuery value);
    private sealed virtual override IGeoBoundingBoxQuery OpenSearch.Client.IQueryContainer.get_GeoBoundingBox();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_GeoBoundingBox(IGeoBoundingBoxQuery value);
    private sealed virtual override IGeoDistanceQuery OpenSearch.Client.IQueryContainer.get_GeoDistance();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_GeoDistance(IGeoDistanceQuery value);
    private sealed virtual override IGeoPolygonQuery OpenSearch.Client.IQueryContainer.get_GeoPolygon();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_GeoPolygon(IGeoPolygonQuery value);
    private sealed virtual override IGeoShapeQuery OpenSearch.Client.IQueryContainer.get_GeoShape();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_GeoShape(IGeoShapeQuery value);
    private sealed virtual override IShapeQuery OpenSearch.Client.IQueryContainer.get_Shape();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Shape(IShapeQuery value);
    private sealed virtual override IHasChildQuery OpenSearch.Client.IQueryContainer.get_HasChild();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_HasChild(IHasChildQuery value);
    private sealed virtual override IHasParentQuery OpenSearch.Client.IQueryContainer.get_HasParent();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_HasParent(IHasParentQuery value);
    private sealed virtual override IIdsQuery OpenSearch.Client.IQueryContainer.get_Ids();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Ids(IIdsQuery value);
    private sealed virtual override IIntervalsQuery OpenSearch.Client.IQueryContainer.get_Intervals();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Intervals(IIntervalsQuery value);
    private sealed virtual override IKnnQuery OpenSearch.Client.IQueryContainer.get_Knn();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Knn(IKnnQuery value);
    private sealed virtual override IMatchQuery OpenSearch.Client.IQueryContainer.get_Match();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Match(IMatchQuery value);
    private sealed virtual override IMatchAllQuery OpenSearch.Client.IQueryContainer.get_MatchAll();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_MatchAll(IMatchAllQuery value);
    private sealed virtual override IMatchBoolPrefixQuery OpenSearch.Client.IQueryContainer.get_MatchBoolPrefix();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_MatchBoolPrefix(IMatchBoolPrefixQuery value);
    private sealed virtual override IMatchNoneQuery OpenSearch.Client.IQueryContainer.get_MatchNone();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_MatchNone(IMatchNoneQuery value);
    private sealed virtual override IMatchPhraseQuery OpenSearch.Client.IQueryContainer.get_MatchPhrase();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_MatchPhrase(IMatchPhraseQuery value);
    private sealed virtual override IMatchPhrasePrefixQuery OpenSearch.Client.IQueryContainer.get_MatchPhrasePrefix();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_MatchPhrasePrefix(IMatchPhrasePrefixQuery value);
    private sealed virtual override IMoreLikeThisQuery OpenSearch.Client.IQueryContainer.get_MoreLikeThis();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_MoreLikeThis(IMoreLikeThisQuery value);
    private sealed virtual override IMultiMatchQuery OpenSearch.Client.IQueryContainer.get_MultiMatch();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_MultiMatch(IMultiMatchQuery value);
    private sealed virtual override INestedQuery OpenSearch.Client.IQueryContainer.get_Nested();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Nested(INestedQuery value);
    private sealed virtual override INeuralQuery OpenSearch.Client.IQueryContainer.get_Neural();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Neural(INeuralQuery value);
    private sealed virtual override IParentIdQuery OpenSearch.Client.IQueryContainer.get_ParentId();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_ParentId(IParentIdQuery value);
    private sealed virtual override IPercolateQuery OpenSearch.Client.IQueryContainer.get_Percolate();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Percolate(IPercolateQuery value);
    private sealed virtual override IPrefixQuery OpenSearch.Client.IQueryContainer.get_Prefix();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Prefix(IPrefixQuery value);
    private sealed virtual override IQueryStringQuery OpenSearch.Client.IQueryContainer.get_QueryString();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_QueryString(IQueryStringQuery value);
    private sealed virtual override IRangeQuery OpenSearch.Client.IQueryContainer.get_Range();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Range(IRangeQuery value);
    private sealed virtual override IRawQuery OpenSearch.Client.IQueryContainer.get_RawQuery();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_RawQuery(IRawQuery value);
    private sealed virtual override IRegexpQuery OpenSearch.Client.IQueryContainer.get_Regexp();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Regexp(IRegexpQuery value);
    private sealed virtual override IScriptQuery OpenSearch.Client.IQueryContainer.get_Script();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Script(IScriptQuery value);
    private sealed virtual override IScriptScoreQuery OpenSearch.Client.IQueryContainer.get_ScriptScore();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_ScriptScore(IScriptScoreQuery value);
    private sealed virtual override ISimpleQueryStringQuery OpenSearch.Client.IQueryContainer.get_SimpleQueryString();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_SimpleQueryString(ISimpleQueryStringQuery value);
    private sealed virtual override ISpanContainingQuery OpenSearch.Client.IQueryContainer.get_SpanContaining();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_SpanContaining(ISpanContainingQuery value);
    private sealed virtual override ISpanFieldMaskingQuery OpenSearch.Client.IQueryContainer.get_SpanFieldMasking();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_SpanFieldMasking(ISpanFieldMaskingQuery value);
    private sealed virtual override ISpanFirstQuery OpenSearch.Client.IQueryContainer.get_SpanFirst();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_SpanFirst(ISpanFirstQuery value);
    private sealed virtual override ISpanMultiTermQuery OpenSearch.Client.IQueryContainer.get_SpanMultiTerm();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_SpanMultiTerm(ISpanMultiTermQuery value);
    private sealed virtual override ISpanNearQuery OpenSearch.Client.IQueryContainer.get_SpanNear();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_SpanNear(ISpanNearQuery value);
    private sealed virtual override ISpanNotQuery OpenSearch.Client.IQueryContainer.get_SpanNot();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_SpanNot(ISpanNotQuery value);
    private sealed virtual override ISpanOrQuery OpenSearch.Client.IQueryContainer.get_SpanOr();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_SpanOr(ISpanOrQuery value);
    private sealed virtual override ISpanTermQuery OpenSearch.Client.IQueryContainer.get_SpanTerm();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_SpanTerm(ISpanTermQuery value);
    private sealed virtual override ISpanWithinQuery OpenSearch.Client.IQueryContainer.get_SpanWithin();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_SpanWithin(ISpanWithinQuery value);
    private sealed virtual override ITermQuery OpenSearch.Client.IQueryContainer.get_Term();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Term(ITermQuery value);
    private sealed virtual override ITermsQuery OpenSearch.Client.IQueryContainer.get_Terms();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Terms(ITermsQuery value);
    private sealed virtual override ITermsSetQuery OpenSearch.Client.IQueryContainer.get_TermsSet();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_TermsSet(ITermsSetQuery value);
    private sealed virtual override IWildcardQuery OpenSearch.Client.IQueryContainer.get_Wildcard();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_Wildcard(IWildcardQuery value);
    private sealed virtual override IRankFeatureQuery OpenSearch.Client.IQueryContainer.get_RankFeature();
    private sealed virtual override void OpenSearch.Client.IQueryContainer.set_RankFeature(IRankFeatureQuery value);
    private T Set(T value);
    [CompilerGeneratedAttribute]
internal bool get_HoldsOnlyShouldMusts();
    [CompilerGeneratedAttribute]
internal void set_HoldsOnlyShouldMusts(bool value);
    internal bool get_IsConditionless();
    internal bool get_IsStrict();
    internal bool get_IsVerbatim();
    internal bool get_IsWritable();
    private sealed virtual override bool OpenSearch.Client.IQueryContainer.get_IsConditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IQueryContainer.get_IsStrict();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryContainer.set_IsStrict(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IQueryContainer.get_IsVerbatim();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryContainer.set_IsVerbatim(bool value);
    private sealed virtual override bool OpenSearch.Client.IQueryContainer.get_IsWritable();
    public sealed virtual void Accept(IQueryVisitor visitor);
    public static QueryContainer op_BitwiseAnd(QueryContainer leftContainer, QueryContainer rightContainer);
    internal static QueryContainer And(QueryContainer leftContainer, QueryContainer rightContainer);
    public static QueryContainer op_BitwiseOr(QueryContainer leftContainer, QueryContainer rightContainer);
    internal static QueryContainer Or(QueryContainer leftContainer, QueryContainer rightContainer);
    private static bool IfEitherIsEmptyReturnTheOtherOrEmpty(QueryContainer leftContainer, QueryContainer rightContainer, QueryContainer& queryContainer);
    public static QueryContainer op_LogicalNot(QueryContainer queryContainer);
    public static QueryContainer op_UnaryPlus(QueryContainer queryContainer);
    public static bool op_False(QueryContainer a);
    public static bool op_True(QueryContainer a);
    internal bool ShouldSerialize(IJsonFormatterResolver formatterResolver);
    public QueryContainer Name(string name);
    public QueryContainer Strict(bool strict, bool recurse);
    public QueryContainer Verbatim(bool verbatim, bool recurse);
}
internal class OpenSearch.Client.QueryContainerCollectionFormatter : object {
    private static QueryContainerFormatter QueryContainerFormatter;
    private static QueryContainerInterfaceFormatter QueryContainerInterfaceFormatter;
    private static QueryContainerCollectionFormatter();
    public sealed virtual IEnumerable`1<QueryContainer> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IEnumerable`1<QueryContainer> value, IJsonFormatterResolver formatterResolver);
}
[DataContractAttribute]
public class OpenSearch.Client.QueryContainerDescriptor`1 : QueryContainer {
    private QueryContainer WrapInContainer(Func`2<TQuery, TQueryInterface> create, Action`2<TQueryInterface, IQueryContainer> assign);
    public QueryContainer Raw(string rawJson);
    public QueryContainer QueryString(Func`2<QueryStringQueryDescriptor`1<T>, IQueryStringQuery> selector);
    public QueryContainer SimpleQueryString(Func`2<SimpleQueryStringQueryDescriptor`1<T>, ISimpleQueryStringQuery> selector);
    public QueryContainer Terms(Func`2<TermsQueryDescriptor`1<T>, ITermsQuery> selector);
    public QueryContainer Fuzzy(Func`2<FuzzyQueryDescriptor`1<T>, IFuzzyQuery> selector);
    public QueryContainer FuzzyNumeric(Func`2<FuzzyNumericQueryDescriptor`1<T>, IFuzzyQuery> selector);
    public QueryContainer FuzzyDate(Func`2<FuzzyDateQueryDescriptor`1<T>, IFuzzyQuery> selector);
    public QueryContainer Match(Func`2<MatchQueryDescriptor`1<T>, IMatchQuery> selector);
    public QueryContainer MatchPhrase(Func`2<MatchPhraseQueryDescriptor`1<T>, IMatchPhraseQuery> selector);
    public QueryContainer MatchBoolPrefix(Func`2<MatchBoolPrefixQueryDescriptor`1<T>, IMatchBoolPrefixQuery> selector);
    public QueryContainer MatchPhrasePrefix(Func`2<MatchPhrasePrefixQueryDescriptor`1<T>, IMatchPhrasePrefixQuery> selector);
    public QueryContainer MultiMatch(Func`2<MultiMatchQueryDescriptor`1<T>, IMultiMatchQuery> selector);
    public QueryContainer Nested(Func`2<NestedQueryDescriptor`1<T>, INestedQuery> selector);
    public QueryContainer Conditionless(Func`2<ConditionlessQueryDescriptor`1<T>, IConditionlessQuery> selector);
    public QueryContainer Range(Func`2<NumericRangeQueryDescriptor`1<T>, INumericRangeQuery> selector);
    public QueryContainer LongRange(Func`2<LongRangeQueryDescriptor`1<T>, ILongRangeQuery> selector);
    public QueryContainer DateRange(Func`2<DateRangeQueryDescriptor`1<T>, IDateRangeQuery> selector);
    public QueryContainer TermRange(Func`2<TermRangeQueryDescriptor`1<T>, ITermRangeQuery> selector);
    public QueryContainer MoreLikeThis(Func`2<MoreLikeThisQueryDescriptor`1<T>, IMoreLikeThisQuery> selector);
    public QueryContainer GeoShape(Func`2<GeoShapeQueryDescriptor`1<T>, IGeoShapeQuery> selector);
    public QueryContainer Shape(Func`2<ShapeQueryDescriptor`1<T>, IShapeQuery> selector);
    public QueryContainer GeoPolygon(Func`2<GeoPolygonQueryDescriptor`1<T>, IGeoPolygonQuery> selector);
    public QueryContainer GeoDistance(Func`2<GeoDistanceQueryDescriptor`1<T>, IGeoDistanceQuery> selector);
    public QueryContainer GeoBoundingBox(Func`2<GeoBoundingBoxQueryDescriptor`1<T>, IGeoBoundingBoxQuery> selector);
    public QueryContainer HasChild(Func`2<HasChildQueryDescriptor`1<TChild>, IHasChildQuery> selector);
    public QueryContainer HasParent(Func`2<HasParentQueryDescriptor`1<TParent>, IHasParentQuery> selector);
    public QueryContainer Knn(Func`2<KnnQueryDescriptor`1<T>, IKnnQuery> selector);
    public QueryContainer DisMax(Func`2<DisMaxQueryDescriptor`1<T>, IDisMaxQuery> selector);
    public QueryContainer DistanceFeature(Func`2<DistanceFeatureQueryDescriptor`1<T>, IDistanceFeatureQuery> selector);
    public QueryContainer ConstantScore(Func`2<ConstantScoreQueryDescriptor`1<T>, IConstantScoreQuery> selector);
    public QueryContainer Bool(Func`2<BoolQueryDescriptor`1<T>, IBoolQuery> selector);
    public QueryContainer Boosting(Func`2<BoostingQueryDescriptor`1<T>, IBoostingQuery> selector);
    public QueryContainer MatchAll(Func`2<MatchAllQueryDescriptor, IMatchAllQuery> selector);
    public QueryContainer MatchNone(Func`2<MatchNoneQueryDescriptor, IMatchNoneQuery> selector);
    public QueryContainer Term(Expression`1<Func`2<T, TValue>> field, object value, Nullable`1<double> boost, string name);
    public QueryContainer HasRelationName(Expression`1<Func`2<T, JoinField>> field, RelationName value);
    public QueryContainer HasRelationName(Expression`1<Func`2<T, JoinField>> field);
    public QueryContainer Term(Field field, object value, Nullable`1<double> boost, string name);
    public QueryContainer Term(Func`2<TermQueryDescriptor`1<T>, ITermQuery> selector);
    public QueryContainer Wildcard(Expression`1<Func`2<T, TValue>> field, string value, Nullable`1<double> boost, MultiTermQueryRewrite rewrite, string name);
    public QueryContainer Wildcard(Field field, string value, Nullable`1<double> boost, MultiTermQueryRewrite rewrite, string name);
    public QueryContainer Wildcard(Func`2<WildcardQueryDescriptor`1<T>, IWildcardQuery> selector);
    public QueryContainer Prefix(Expression`1<Func`2<T, TValue>> field, string value, Nullable`1<double> boost, MultiTermQueryRewrite rewrite, string name);
    public QueryContainer Prefix(Field field, string value, Nullable`1<double> boost, MultiTermQueryRewrite rewrite, string name);
    public QueryContainer Prefix(Func`2<PrefixQueryDescriptor`1<T>, IPrefixQuery> selector);
    public QueryContainer Ids(Func`2<IdsQueryDescriptor, IIdsQuery> selector);
    public QueryContainer Intervals(Func`2<IntervalsQueryDescriptor`1<T>, IIntervalsQuery> selector);
    public QueryContainer RankFeature(Func`2<RankFeatureQueryDescriptor`1<T>, IRankFeatureQuery> selector);
    public QueryContainer SpanTerm(Func`2<SpanTermQueryDescriptor`1<T>, ISpanTermQuery> selector);
    public QueryContainer SpanFirst(Func`2<SpanFirstQueryDescriptor`1<T>, ISpanFirstQuery> selector);
    public QueryContainer SpanNear(Func`2<SpanNearQueryDescriptor`1<T>, ISpanNearQuery> selector);
    public QueryContainer SpanOr(Func`2<SpanOrQueryDescriptor`1<T>, ISpanOrQuery> selector);
    public QueryContainer SpanNot(Func`2<SpanNotQueryDescriptor`1<T>, ISpanNotQuery> selector);
    public QueryContainer SpanMultiTerm(Func`2<SpanMultiTermQueryDescriptor`1<T>, ISpanMultiTermQuery> selector);
    public QueryContainer SpanContaining(Func`2<SpanContainingQueryDescriptor`1<T>, ISpanContainingQuery> selector);
    public QueryContainer SpanWithin(Func`2<SpanWithinQueryDescriptor`1<T>, ISpanWithinQuery> selector);
    public QueryContainer SpanFieldMasking(Func`2<SpanFieldMaskingQueryDescriptor`1<T>, ISpanFieldMaskingQuery> selector);
    public QueryContainer Regexp(Func`2<RegexpQueryDescriptor`1<T>, IRegexpQuery> selector);
    public QueryContainer FunctionScore(Func`2<FunctionScoreQueryDescriptor`1<T>, IFunctionScoreQuery> selector);
    public QueryContainer Script(Func`2<ScriptQueryDescriptor`1<T>, IScriptQuery> selector);
    public QueryContainer ScriptScore(Func`2<ScriptScoreQueryDescriptor`1<T>, IScriptScoreQuery> selector);
    public QueryContainer Exists(Func`2<ExistsQueryDescriptor`1<T>, IExistsQuery> selector);
    public QueryContainer Percolate(Func`2<PercolateQueryDescriptor`1<T>, IPercolateQuery> selector);
    public QueryContainer ParentId(Func`2<ParentIdQueryDescriptor`1<T>, IParentIdQuery> selector);
    public QueryContainer TermsSet(Func`2<TermsSetQueryDescriptor`1<T>, ITermsSetQuery> selector);
    public QueryContainer Neural(Func`2<NeuralQueryDescriptor`1<T>, INeuralQuery> selector);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.QueryContainerExtensions : object {
    [ExtensionAttribute]
public static bool IsConditionless(QueryContainer q);
}
internal class OpenSearch.Client.QueryContainerFormatter : object {
    private static IJsonFormatter`1<QueryContainer> QueryFormatter;
    private static QueryContainerFormatter();
    public sealed virtual QueryContainer Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, QueryContainer value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.QueryContainerInterfaceFormatter : object {
    public sealed virtual IQueryContainer Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IQueryContainer value, IJsonFormatterResolver formatterResolver);
}
public abstract class OpenSearch.Client.QueryDescriptorBase`2 : DescriptorBase`2<TDescriptor, TInterface> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IQuery.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IQuery.IsStrict>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IQuery.IsVerbatim>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IQuery.Name>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<double> OpenSearch.Client.IQuery.Boost { get; private set; }
    private bool OpenSearch.Client.IQuery.Conditionless { get; }
    private bool OpenSearch.Client.IQuery.IsStrict { get; private set; }
    private bool OpenSearch.Client.IQuery.IsVerbatim { get; private set; }
    private bool OpenSearch.Client.IQuery.IsWritable { get; }
    private string OpenSearch.Client.IQuery.Name { get; private set; }
    protected abstract virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IQuery.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQuery.set_Boost(Nullable`1<double> value);
    private sealed virtual override bool OpenSearch.Client.IQuery.get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IQuery.get_IsStrict();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQuery.set_IsStrict(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IQuery.get_IsVerbatim();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQuery.set_IsVerbatim(bool value);
    private sealed virtual override bool OpenSearch.Client.IQuery.get_IsWritable();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IQuery.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQuery.set_Name(string value);
    public TDescriptor Name(string name);
    public TDescriptor Boost(Nullable`1<double> boost);
    public TDescriptor Verbatim(bool verbatim);
    public TDescriptor Strict(bool strict);
}
public class OpenSearch.Client.QueryProfile : object {
    [CompilerGeneratedAttribute]
private QueryBreakdown <Breakdown>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<QueryProfile> <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TimeInNanoseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public QueryBreakdown Breakdown { get; internal set; }
    [DataMemberAttribute]
public IEnumerable`1<QueryProfile> Children { get; internal set; }
    [DataMemberAttribute]
public string Description { get; internal set; }
    [DataMemberAttribute]
public long TimeInNanoseconds { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public QueryBreakdown get_Breakdown();
    [CompilerGeneratedAttribute]
internal void set_Breakdown(QueryBreakdown value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<QueryProfile> get_Children();
    [CompilerGeneratedAttribute]
internal void set_Children(IEnumerable`1<QueryProfile> value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
internal void set_Description(string value);
    [CompilerGeneratedAttribute]
public long get_TimeInNanoseconds();
    [CompilerGeneratedAttribute]
internal void set_TimeInNanoseconds(long value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.QueryStringQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowLeadingWildcard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AnalyzeWildcard>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoGenerateSynonymsPhraseQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <DefaultField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Operator> <DefaultOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnablePositionIncrements>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Escape>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Fuzziness <Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FuzzyMaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FuzzyPrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <FuzzyRewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FuzzyTranspositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumDeterminizedStates>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <PhraseSlop>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QuoteAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QuoteFieldSuffix>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <Rewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <TieBreaker>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeZone>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TextQueryType> <Type>k__BackingField;
    public Nullable`1<bool> AllowLeadingWildcard { get; public set; }
    public string Analyzer { get; public set; }
    public Nullable`1<bool> AnalyzeWildcard { get; public set; }
    public Nullable`1<bool> AutoGenerateSynonymsPhraseQuery { get; public set; }
    public Field DefaultField { get; public set; }
    public Nullable`1<Operator> DefaultOperator { get; public set; }
    public Nullable`1<bool> EnablePositionIncrements { get; public set; }
    public Nullable`1<bool> Escape { get; public set; }
    public Fields Fields { get; public set; }
    public Fuzziness Fuzziness { get; public set; }
    public Nullable`1<int> FuzzyMaxExpansions { get; public set; }
    public Nullable`1<int> FuzzyPrefixLength { get; public set; }
    public MultiTermQueryRewrite FuzzyRewrite { get; public set; }
    public Nullable`1<bool> FuzzyTranspositions { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public Nullable`1<int> MaximumDeterminizedStates { get; public set; }
    public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    public Nullable`1<double> PhraseSlop { get; public set; }
    public string Query { get; public set; }
    public string QuoteAnalyzer { get; public set; }
    public string QuoteFieldSuffix { get; public set; }
    public MultiTermQueryRewrite Rewrite { get; public set; }
    public Nullable`1<double> TieBreaker { get; public set; }
    public string TimeZone { get; public set; }
    public Nullable`1<TextQueryType> Type { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AllowLeadingWildcard();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowLeadingWildcard(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AnalyzeWildcard();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AnalyzeWildcard(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AutoGenerateSynonymsPhraseQuery();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_DefaultField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Operator> get_DefaultOperator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultOperator(Nullable`1<Operator> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_EnablePositionIncrements();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnablePositionIncrements(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Escape();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Escape(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Fuzziness get_Fuzziness();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fuzziness(Fuzziness value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_FuzzyMaxExpansions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyMaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_FuzzyPrefixLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyPrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual MultiTermQueryRewrite get_FuzzyRewrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyRewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_FuzzyTranspositions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyTranspositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Lenient();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaximumDeterminizedStates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumDeterminizedStates(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual MinimumShouldMatch get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_PhraseSlop();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PhraseSlop(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_QuoteAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuoteAnalyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_QuoteFieldSuffix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuoteFieldSuffix(string value);
    [CompilerGeneratedAttribute]
public sealed virtual MultiTermQueryRewrite get_Rewrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Rewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_TieBreaker();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TieBreaker(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TimeZone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeZone(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TextQueryType> get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(Nullable`1<TextQueryType> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IQueryStringQuery q);
}
[DataContractAttribute]
public class OpenSearch.Client.QueryStringQueryDescriptor`1 : QueryDescriptorBase`2<QueryStringQueryDescriptor`1<T>, IQueryStringQuery> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IQueryStringQuery.AllowLeadingWildcard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IQueryStringQuery.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IQueryStringQuery.AnalyzeWildcard>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IQueryStringQuery.AutoGenerateSynonymsPhraseQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IQueryStringQuery.DefaultField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Operator> <OpenSearch.Client.IQueryStringQuery.DefaultOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IQueryStringQuery.EnablePositionIncrements>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IQueryStringQuery.Escape>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IQueryStringQuery.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Fuzziness <OpenSearch.Client.IQueryStringQuery.Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IQueryStringQuery.FuzzyMaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IQueryStringQuery.FuzzyPrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <OpenSearch.Client.IQueryStringQuery.FuzzyRewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IQueryStringQuery.FuzzyTranspositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IQueryStringQuery.Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IQueryStringQuery.MaximumDeterminizedStates>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <OpenSearch.Client.IQueryStringQuery.MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IQueryStringQuery.PhraseSlop>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IQueryStringQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IQueryStringQuery.QuoteAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IQueryStringQuery.QuoteFieldSuffix>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <OpenSearch.Client.IQueryStringQuery.Rewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IQueryStringQuery.TieBreaker>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IQueryStringQuery.TimeZone>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TextQueryType> <OpenSearch.Client.IQueryStringQuery.Type>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.AllowLeadingWildcard { get; private set; }
    private string OpenSearch.Client.IQueryStringQuery.Analyzer { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.AnalyzeWildcard { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.AutoGenerateSynonymsPhraseQuery { get; private set; }
    private Field OpenSearch.Client.IQueryStringQuery.DefaultField { get; private set; }
    private Nullable`1<Operator> OpenSearch.Client.IQueryStringQuery.DefaultOperator { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.EnablePositionIncrements { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.Escape { get; private set; }
    private Fields OpenSearch.Client.IQueryStringQuery.Fields { get; private set; }
    private Fuzziness OpenSearch.Client.IQueryStringQuery.Fuzziness { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IQueryStringQuery.FuzzyMaxExpansions { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IQueryStringQuery.FuzzyPrefixLength { get; private set; }
    private MultiTermQueryRewrite OpenSearch.Client.IQueryStringQuery.FuzzyRewrite { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.FuzzyTranspositions { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.Lenient { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IQueryStringQuery.MaximumDeterminizedStates { get; private set; }
    private MinimumShouldMatch OpenSearch.Client.IQueryStringQuery.MinimumShouldMatch { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IQueryStringQuery.PhraseSlop { get; private set; }
    private string OpenSearch.Client.IQueryStringQuery.Query { get; private set; }
    private string OpenSearch.Client.IQueryStringQuery.QuoteAnalyzer { get; private set; }
    private string OpenSearch.Client.IQueryStringQuery.QuoteFieldSuffix { get; private set; }
    private MultiTermQueryRewrite OpenSearch.Client.IQueryStringQuery.Rewrite { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IQueryStringQuery.TieBreaker { get; private set; }
    private string OpenSearch.Client.IQueryStringQuery.TimeZone { get; private set; }
    private Nullable`1<TextQueryType> OpenSearch.Client.IQueryStringQuery.Type { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.get_AllowLeadingWildcard();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_AllowLeadingWildcard(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IQueryStringQuery.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.get_AnalyzeWildcard();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_AnalyzeWildcard(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.get_AutoGenerateSynonymsPhraseQuery();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IQueryStringQuery.get_DefaultField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_DefaultField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<Operator> OpenSearch.Client.IQueryStringQuery.get_DefaultOperator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_DefaultOperator(Nullable`1<Operator> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.get_EnablePositionIncrements();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_EnablePositionIncrements(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.get_Escape();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_Escape(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IQueryStringQuery.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_Fields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fuzziness OpenSearch.Client.IQueryStringQuery.get_Fuzziness();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_Fuzziness(Fuzziness value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IQueryStringQuery.get_FuzzyMaxExpansions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_FuzzyMaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IQueryStringQuery.get_FuzzyPrefixLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_FuzzyPrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override MultiTermQueryRewrite OpenSearch.Client.IQueryStringQuery.get_FuzzyRewrite();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_FuzzyRewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.get_FuzzyTranspositions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_FuzzyTranspositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IQueryStringQuery.get_Lenient();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IQueryStringQuery.get_MaximumDeterminizedStates();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_MaximumDeterminizedStates(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override MinimumShouldMatch OpenSearch.Client.IQueryStringQuery.get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IQueryStringQuery.get_PhraseSlop();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_PhraseSlop(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IQueryStringQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_Query(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IQueryStringQuery.get_QuoteAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_QuoteAnalyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IQueryStringQuery.get_QuoteFieldSuffix();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_QuoteFieldSuffix(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override MultiTermQueryRewrite OpenSearch.Client.IQueryStringQuery.get_Rewrite();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_Rewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IQueryStringQuery.get_TieBreaker();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_TieBreaker(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IQueryStringQuery.get_TimeZone();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_TimeZone(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TextQueryType> OpenSearch.Client.IQueryStringQuery.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQueryStringQuery.set_Type(Nullable`1<TextQueryType> value);
    public QueryStringQueryDescriptor`1<T> DefaultField(Field field);
    public QueryStringQueryDescriptor`1<T> DefaultField(Expression`1<Func`2<T, TValue>> field);
    public QueryStringQueryDescriptor`1<T> Fields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public QueryStringQueryDescriptor`1<T> Fields(Fields fields);
    public QueryStringQueryDescriptor`1<T> Type(Nullable`1<TextQueryType> type);
    public QueryStringQueryDescriptor`1<T> Query(string query);
    public QueryStringQueryDescriptor`1<T> DefaultOperator(Nullable`1<Operator> op);
    public QueryStringQueryDescriptor`1<T> Analyzer(string analyzer);
    public QueryStringQueryDescriptor`1<T> QuoteAnalyzer(string analyzer);
    public QueryStringQueryDescriptor`1<T> AllowLeadingWildcard(Nullable`1<bool> allowLeadingWildcard);
    public QueryStringQueryDescriptor`1<T> Fuzziness(Fuzziness fuzziness);
    public QueryStringQueryDescriptor`1<T> FuzzyPrefixLength(Nullable`1<int> fuzzyPrefixLength);
    public QueryStringQueryDescriptor`1<T> FuzzyMaxExpansions(Nullable`1<int> fuzzyMaxExpansions);
    public QueryStringQueryDescriptor`1<T> FuzzyTranspositions(Nullable`1<bool> fuzzyTranspositions);
    public QueryStringQueryDescriptor`1<T> PhraseSlop(Nullable`1<double> phraseSlop);
    public QueryStringQueryDescriptor`1<T> MinimumShouldMatch(MinimumShouldMatch minimumShouldMatch);
    public QueryStringQueryDescriptor`1<T> Lenient(Nullable`1<bool> lenient);
    public QueryStringQueryDescriptor`1<T> AnalyzeWildcard(Nullable`1<bool> analyzeWildcard);
    public QueryStringQueryDescriptor`1<T> TieBreaker(Nullable`1<double> tieBreaker);
    public QueryStringQueryDescriptor`1<T> MaximumDeterminizedStates(Nullable`1<int> maxDeterminizedStates);
    public QueryStringQueryDescriptor`1<T> FuzzyRewrite(MultiTermQueryRewrite rewrite);
    public QueryStringQueryDescriptor`1<T> Rewrite(MultiTermQueryRewrite rewrite);
    public QueryStringQueryDescriptor`1<T> QuoteFieldSuffix(string quoteFieldSuffix);
    public QueryStringQueryDescriptor`1<T> Escape(Nullable`1<bool> escape);
    public QueryStringQueryDescriptor`1<T> EnablePositionIncrements(Nullable`1<bool> enablePositionIncrements);
    public QueryStringQueryDescriptor`1<T> TimeZone(string timezone);
    public QueryStringQueryDescriptor`1<T> AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> autoGenerateSynonymsPhraseQuery);
}
public class OpenSearch.Client.QueryVisitor : object {
    [CompilerGeneratedAttribute]
private int <Depth>k__BackingField;
    [CompilerGeneratedAttribute]
private VisitorScope <Scope>k__BackingField;
    public int Depth { get; public set; }
    public VisitorScope Scope { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Depth();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Depth(int value);
    [CompilerGeneratedAttribute]
public sealed virtual VisitorScope get_Scope();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Scope(VisitorScope value);
    public virtual void Visit(IQueryContainer query);
    public virtual void Visit(IQuery query);
    public virtual void Visit(IBoolQuery query);
    public virtual void Visit(IBoostingQuery query);
    public virtual void Visit(IConstantScoreQuery query);
    public virtual void Visit(IDisMaxQuery query);
    public virtual void Visit(IDistanceFeatureQuery query);
    public virtual void Visit(ISpanContainingQuery query);
    public virtual void Visit(ISpanWithinQuery query);
    public virtual void Visit(IDateRangeQuery query);
    public virtual void Visit(INumericRangeQuery query);
    public virtual void Visit(ILongRangeQuery query);
    public virtual void Visit(ITermRangeQuery query);
    public virtual void Visit(IFunctionScoreQuery query);
    public virtual void Visit(IFuzzyQuery query);
    public virtual void Visit(IFuzzyStringQuery query);
    public virtual void Visit(IFuzzyNumericQuery query);
    public virtual void Visit(IFuzzyDateQuery query);
    public virtual void Visit(IGeoShapeQuery query);
    public virtual void Visit(IShapeQuery query);
    public virtual void Visit(IHasChildQuery query);
    public virtual void Visit(IHasParentQuery query);
    public virtual void Visit(IIdsQuery query);
    public virtual void Visit(IIntervalsQuery query);
    public virtual void Visit(IKnnQuery query);
    public virtual void Visit(IMatchQuery query);
    public virtual void Visit(IMatchPhraseQuery query);
    public virtual void Visit(IMatchPhrasePrefixQuery query);
    public virtual void Visit(IMatchAllQuery query);
    public virtual void Visit(IMatchBoolPrefixQuery query);
    public virtual void Visit(IMatchNoneQuery query);
    public virtual void Visit(IMoreLikeThisQuery query);
    public virtual void Visit(IMultiMatchQuery query);
    public virtual void Visit(INestedQuery query);
    public virtual void Visit(INeuralQuery query);
    public virtual void Visit(IPrefixQuery query);
    public virtual void Visit(IQueryStringQuery query);
    public virtual void Visit(IRankFeatureQuery query);
    public virtual void Visit(IRangeQuery query);
    public virtual void Visit(IRegexpQuery query);
    public virtual void Visit(ISimpleQueryStringQuery query);
    public virtual void Visit(ISpanFirstQuery query);
    public virtual void Visit(ISpanNearQuery query);
    public virtual void Visit(ISpanNotQuery query);
    public virtual void Visit(ISpanOrQuery query);
    public virtual void Visit(ISpanTermQuery query);
    public virtual void Visit(ISpanSubQuery query);
    public virtual void Visit(ISpanMultiTermQuery query);
    public virtual void Visit(ISpanFieldMaskingQuery query);
    public virtual void Visit(ITermQuery query);
    public virtual void Visit(IWildcardQuery query);
    public virtual void Visit(ITermsQuery query);
    public virtual void Visit(IScriptQuery query);
    public virtual void Visit(IScriptScoreQuery query);
    public virtual void Visit(IGeoPolygonQuery query);
    public virtual void Visit(IGeoDistanceQuery query);
    public virtual void Visit(ISpanQuery query);
    public virtual void Visit(IGeoBoundingBoxQuery query);
    public virtual void Visit(IExistsQuery query);
    public virtual void Visit(IRawQuery query);
    public virtual void Visit(IPercolateQuery query);
    public virtual void Visit(IParentIdQuery query);
    public virtual void Visit(ITermsSetQuery query);
    public virtual void Visit(IQueryVisitor visitor);
}
public class OpenSearch.Client.QueryWalker : object {
    public void Walk(IQueryContainer qd, IQueryVisitor visitor);
    public void Walk(ISpanQuery qd, IQueryVisitor visitor);
    private static void Accept(IQueryVisitor visitor, IEnumerable`1<IQueryContainer> queries, VisitorScope scope);
    private static void Accept(IQueryVisitor visitor, IQueryContainer query, VisitorScope scope);
    private static void Accept(IQueryVisitor visitor, ISpanQuery query, VisitorScope scope);
    private static void VisitSpan(T qd, IQueryVisitor visitor);
    private static void VisitQuery(T qd, IQueryVisitor visitor, Action`2<IQueryVisitor, T> scoped);
    private static void VisitSpanSubQuery(T qd, IQueryVisitor visitor, Action`2<IQueryVisitor, T> scoped);
}
public class OpenSearch.Client.RandomScoreFunction : FunctionScoreFunctionBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<long, string> <Seed>k__BackingField;
    public Field Field { get; public set; }
    public Union`2<long, string> Seed { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<long, string> get_Seed();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Seed(Union`2<long, string> value);
}
public class OpenSearch.Client.RandomScoreFunctionDescriptor`1 : FunctionScoreFunctionDescriptorBase`3<RandomScoreFunctionDescriptor`1<T>, IRandomScoreFunction, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IRandomScoreFunction.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<long, string> <OpenSearch.Client.IRandomScoreFunction.Seed>k__BackingField;
    private Field OpenSearch.Client.IRandomScoreFunction.Field { get; private set; }
    private Union`2<long, string> OpenSearch.Client.IRandomScoreFunction.Seed { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IRandomScoreFunction.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRandomScoreFunction.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<long, string> OpenSearch.Client.IRandomScoreFunction.get_Seed();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRandomScoreFunction.set_Seed(Union`2<long, string> value);
    public RandomScoreFunctionDescriptor`1<T> Seed(Nullable`1<long> seed);
    public RandomScoreFunctionDescriptor`1<T> Seed(string seed);
    public RandomScoreFunctionDescriptor`1<T> Field(Field field);
    public RandomScoreFunctionDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
}
public class OpenSearch.Client.RangeAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IAggregationRange> <Ranges>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public Field Field { get; public set; }
    public IEnumerable`1<IAggregationRange> Ranges { get; public set; }
    public IScript Script { get; public set; }
    public RangeAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IAggregationRange> get_Ranges();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ranges(IEnumerable`1<IAggregationRange> value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.RangeAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<RangeAggregationDescriptor`1<T>, IRangeAggregation, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IRangeAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IAggregationRange> <OpenSearch.Client.IRangeAggregation.Ranges>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IRangeAggregation.Script>k__BackingField;
    private Field OpenSearch.Client.IRangeAggregation.Field { get; private set; }
    private IEnumerable`1<IAggregationRange> OpenSearch.Client.IRangeAggregation.Ranges { get; private set; }
    private IScript OpenSearch.Client.IRangeAggregation.Script { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IRangeAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRangeAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<IAggregationRange> OpenSearch.Client.IRangeAggregation.get_Ranges();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRangeAggregation.set_Ranges(IEnumerable`1<IAggregationRange> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IRangeAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRangeAggregation.set_Script(IScript value);
    public RangeAggregationDescriptor`1<T> Field(Field field);
    public RangeAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public RangeAggregationDescriptor`1<T> Script(string script);
    public RangeAggregationDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public RangeAggregationDescriptor`1<T> Ranges(Func`2[] ranges);
}
public class OpenSearch.Client.RangeBucket : BucketBase {
    [CompilerGeneratedAttribute]
private long <DocCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FromAsString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <To>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToAsString>k__BackingField;
    public long DocCount { get; public set; }
    public Nullable`1<double> From { get; public set; }
    public string FromAsString { get; public set; }
    public string Key { get; public set; }
    public Nullable`1<double> To { get; public set; }
    public string ToAsString { get; public set; }
    public RangeBucket(IReadOnlyDictionary`2<string, IAggregate> dict);
    [CompilerGeneratedAttribute]
public long get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_From();
    [CompilerGeneratedAttribute]
public void set_From(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public string get_FromAsString();
    [CompilerGeneratedAttribute]
public void set_FromAsString(string value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_To();
    [CompilerGeneratedAttribute]
public void set_To(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public string get_ToAsString();
    [CompilerGeneratedAttribute]
public void set_ToAsString(string value);
}
public abstract class OpenSearch.Client.RangePropertyAttributeBase : OpenSearchDocValuesPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRangeProperty.Coerce>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRangeProperty.Index>k__BackingField;
    public bool Coerce { get; public set; }
    public bool Index { get; public set; }
    private Nullable`1<bool> OpenSearch.Client.IRangeProperty.Coerce { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IRangeProperty.Index { get; private set; }
    private IRangeProperty Self { get; }
    protected RangePropertyAttributeBase(RangeType type);
    public bool get_Coerce();
    public void set_Coerce(bool value);
    public bool get_Index();
    public void set_Index(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRangeProperty.get_Coerce();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRangeProperty.set_Coerce(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRangeProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRangeProperty.set_Index(Nullable`1<bool> value);
    private IRangeProperty get_Self();
}
public abstract class OpenSearch.Client.RangePropertyBase : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Coerce>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Index>k__BackingField;
    public Nullable`1<bool> Coerce { get; public set; }
    public Nullable`1<bool> Index { get; public set; }
    protected RangePropertyBase(RangeType rangeType);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Coerce();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coerce(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<bool> value);
}
public abstract class OpenSearch.Client.RangePropertyDescriptorBase`3 : DocValuesPropertyDescriptorBase`3<TDescriptor, TInterface, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRangeProperty.Coerce>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRangeProperty.Index>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IRangeProperty.Coerce { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IRangeProperty.Index { get; private set; }
    protected RangePropertyDescriptorBase`3(RangeType type);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRangeProperty.get_Coerce();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRangeProperty.set_Coerce(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRangeProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRangeProperty.set_Index(Nullable`1<bool> value);
    public TDescriptor Coerce(Nullable`1<bool> coerce);
    public TDescriptor Index(Nullable`1<bool> index);
}
internal class OpenSearch.Client.RangeQueryFormatter : object {
    private static AutomataDictionary RangeFields;
    private static RangeQueryFormatter();
    public sealed virtual IRangeQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IRangeQuery value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, TQuery value, IJsonFormatterResolver formatterResolver);
    private static IRangeQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.RangeRelation : Enum {
    public int value__;
    [EnumMemberAttribute]
public static RangeRelation Within;
    [EnumMemberAttribute]
public static RangeRelation Contains;
    [EnumMemberAttribute]
public static RangeRelation Intersects;
}
[StringEnumAttribute]
public enum OpenSearch.Client.RangeType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static RangeType IntegerRange;
    [EnumMemberAttribute]
public static RangeType FloatRange;
    [EnumMemberAttribute]
public static RangeType LongRange;
    [EnumMemberAttribute]
public static RangeType DoubleRange;
    [EnumMemberAttribute]
public static RangeType DateRange;
    [EnumMemberAttribute]
public static RangeType IpRange;
}
[ExtensionAttribute]
internal static class OpenSearch.Client.RangeTypeExtensions : object {
    [ExtensionAttribute]
public static FieldType ToFieldType(RangeType rangeType);
}
public class OpenSearch.Client.RankFeatureAttribute : OpenSearchPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRankFeatureProperty.PositiveScoreImpact>k__BackingField;
    private IRankFeatureProperty Self { get; }
    public bool PositiveScoreImpact { get; public set; }
    private Nullable`1<bool> OpenSearch.Client.IRankFeatureProperty.PositiveScoreImpact { get; private set; }
    private IRankFeatureProperty get_Self();
    public bool get_PositiveScoreImpact();
    public void set_PositiveScoreImpact(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRankFeatureProperty.get_PositiveScoreImpact();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRankFeatureProperty.set_PositiveScoreImpact(Nullable`1<bool> value);
}
public class OpenSearch.Client.RankFeatureLinearFunction : object {
}
public class OpenSearch.Client.RankFeatureLogarithmFunction : object {
    [CompilerGeneratedAttribute]
private float <ScalingFactor>k__BackingField;
    public float ScalingFactor { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual float get_ScalingFactor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScalingFactor(float value);
}
public class OpenSearch.Client.RankFeatureLogarithmFunctionDescriptor : DescriptorBase`2<RankFeatureLogarithmFunctionDescriptor, IRankFeatureLogarithmFunction> {
    [CompilerGeneratedAttribute]
private float <OpenSearch.Client.IRankFeatureLogarithmFunction.ScalingFactor>k__BackingField;
    private float OpenSearch.Client.IRankFeatureLogarithmFunction.ScalingFactor { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override float OpenSearch.Client.IRankFeatureLogarithmFunction.get_ScalingFactor();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRankFeatureLogarithmFunction.set_ScalingFactor(float value);
    public RankFeatureLogarithmFunctionDescriptor ScalingFactor(float scalingFactor);
}
public class OpenSearch.Client.RankFeatureProperty : PropertyBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PositiveScoreImpact>k__BackingField;
    public Nullable`1<bool> PositiveScoreImpact { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PositiveScoreImpact();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PositiveScoreImpact(Nullable`1<bool> value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.RankFeaturePropertyDescriptor`1 : PropertyDescriptorBase`3<RankFeaturePropertyDescriptor`1<T>, IRankFeatureProperty, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRankFeatureProperty.PositiveScoreImpact>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IRankFeatureProperty.PositiveScoreImpact { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRankFeatureProperty.get_PositiveScoreImpact();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRankFeatureProperty.set_PositiveScoreImpact(Nullable`1<bool> value);
    public RankFeaturePropertyDescriptor`1<T> PositiveScoreImpact(Nullable`1<bool> positiveScoreImpact);
}
public class OpenSearch.Client.RankFeatureQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private IRankFeatureFunction <Function>k__BackingField;
    protected bool Conditionless { get; }
    public IRankFeatureFunction Function { get; public set; }
    protected virtual bool get_Conditionless();
    internal static bool IsConditionless(IRankFeatureQuery q);
    internal virtual void InternalWrapInContainer(IQueryContainer container);
    [CompilerGeneratedAttribute]
public sealed virtual IRankFeatureFunction get_Function();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Function(IRankFeatureFunction value);
}
public class OpenSearch.Client.RankFeatureQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<RankFeatureQueryDescriptor`1<T>, IRankFeatureQuery, T> {
    [CompilerGeneratedAttribute]
private IRankFeatureFunction <OpenSearch.Client.IRankFeatureQuery.Function>k__BackingField;
    private IRankFeatureFunction OpenSearch.Client.IRankFeatureQuery.Function { get; private set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IRankFeatureFunction OpenSearch.Client.IRankFeatureQuery.get_Function();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRankFeatureQuery.set_Function(IRankFeatureFunction value);
    protected virtual bool get_Conditionless();
    public RankFeatureQueryDescriptor`1<T> Saturation(Func`2<RankFeatureSaturationFunctionDescriptor, IRankFeatureSaturationFunction> selector);
    public RankFeatureQueryDescriptor`1<T> Logarithm(Func`2<RankFeatureLogarithmFunctionDescriptor, IRankFeatureLogarithmFunction> selector);
    public RankFeatureQueryDescriptor`1<T> Sigmoid(Func`2<RankFeatureSigmoidFunctionDescriptor, IRankFeatureSigmoidFunction> selector);
    public RankFeatureQueryDescriptor`1<T> Linear();
}
internal class OpenSearch.Client.RankFeatureQueryFormatter : object {
    private static AutomataDictionary Fields;
    private static RankFeatureQueryFormatter();
    public sealed virtual void Serialize(JsonWriter& writer, IRankFeatureQuery value, IJsonFormatterResolver formatterResolver);
    private static void SerializeScoreFunction(JsonWriter& writer, string name, TScoreFunction scoreFunction, IJsonFormatterResolver formatterResolver);
    private static IRankFeatureFunction DeserializeScoreFunction(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual IRankFeatureQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.RankFeaturesAttribute : OpenSearchPropertyAttributeBase {
}
public class OpenSearch.Client.RankFeatureSaturationFunction : object {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Pivot>k__BackingField;
    public Nullable`1<float> Pivot { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_Pivot();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pivot(Nullable`1<float> value);
}
public class OpenSearch.Client.RankFeatureSaturationFunctionDescriptor : DescriptorBase`2<RankFeatureSaturationFunctionDescriptor, IRankFeatureSaturationFunction> {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IRankFeatureSaturationFunction.Pivot>k__BackingField;
    private Nullable`1<float> OpenSearch.Client.IRankFeatureSaturationFunction.Pivot { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IRankFeatureSaturationFunction.get_Pivot();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRankFeatureSaturationFunction.set_Pivot(Nullable`1<float> value);
    public RankFeatureSaturationFunctionDescriptor Pivot(Nullable`1<float> pivot);
}
public class OpenSearch.Client.RankFeatureSigmoidFunction : object {
    [CompilerGeneratedAttribute]
private float <Pivot>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Exponent>k__BackingField;
    public float Pivot { get; public set; }
    public float Exponent { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual float get_Pivot();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pivot(float value);
    [CompilerGeneratedAttribute]
public sealed virtual float get_Exponent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Exponent(float value);
}
public class OpenSearch.Client.RankFeatureSigmoidFunctionDescriptor : DescriptorBase`2<RankFeatureSigmoidFunctionDescriptor, IRankFeatureSigmoidFunction> {
    [CompilerGeneratedAttribute]
private float <OpenSearch.Client.IRankFeatureSigmoidFunction.Exponent>k__BackingField;
    [CompilerGeneratedAttribute]
private float <OpenSearch.Client.IRankFeatureSigmoidFunction.Pivot>k__BackingField;
    private float OpenSearch.Client.IRankFeatureSigmoidFunction.Exponent { get; private set; }
    private float OpenSearch.Client.IRankFeatureSigmoidFunction.Pivot { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override float OpenSearch.Client.IRankFeatureSigmoidFunction.get_Exponent();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRankFeatureSigmoidFunction.set_Exponent(float value);
    [CompilerGeneratedAttribute]
private sealed virtual override float OpenSearch.Client.IRankFeatureSigmoidFunction.get_Pivot();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRankFeatureSigmoidFunction.set_Pivot(float value);
    public RankFeatureSigmoidFunctionDescriptor Exponent(float exponent);
    public RankFeatureSigmoidFunctionDescriptor Pivot(float pivot);
}
public class OpenSearch.Client.RankFeaturesProperty : PropertyBase {
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.RankFeaturesPropertyDescriptor`1 : PropertyDescriptorBase`3<RankFeaturesPropertyDescriptor`1<T>, IRankFeaturesProperty, T> {
}
public class OpenSearch.Client.RareTermsAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private TermsExclude <Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private TermsInclude <Include>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaximumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Precision>k__BackingField;
    public TermsExclude Exclude { get; public set; }
    public Field Field { get; public set; }
    public TermsInclude Include { get; public set; }
    public Nullable`1<long> MaximumDocumentCount { get; public set; }
    public object Missing { get; public set; }
    public Nullable`1<double> Precision { get; public set; }
    public RareTermsAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual TermsExclude get_Exclude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Exclude(TermsExclude value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual TermsInclude get_Include();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Include(TermsInclude value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MaximumDocumentCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumDocumentCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Precision();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Precision(Nullable`1<double> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.RareTermsAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<RareTermsAggregationDescriptor`1<T>, IRareTermsAggregation, T> {
    [CompilerGeneratedAttribute]
private TermsExclude <OpenSearch.Client.IRareTermsAggregation.Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IRareTermsAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private TermsInclude <OpenSearch.Client.IRareTermsAggregation.Include>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IRareTermsAggregation.MaximumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.IRareTermsAggregation.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IRareTermsAggregation.Precision>k__BackingField;
    private TermsExclude OpenSearch.Client.IRareTermsAggregation.Exclude { get; private set; }
    private Field OpenSearch.Client.IRareTermsAggregation.Field { get; private set; }
    private TermsInclude OpenSearch.Client.IRareTermsAggregation.Include { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IRareTermsAggregation.MaximumDocumentCount { get; private set; }
    private object OpenSearch.Client.IRareTermsAggregation.Missing { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IRareTermsAggregation.Precision { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override TermsExclude OpenSearch.Client.IRareTermsAggregation.get_Exclude();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRareTermsAggregation.set_Exclude(TermsExclude value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IRareTermsAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRareTermsAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override TermsInclude OpenSearch.Client.IRareTermsAggregation.get_Include();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRareTermsAggregation.set_Include(TermsInclude value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IRareTermsAggregation.get_MaximumDocumentCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRareTermsAggregation.set_MaximumDocumentCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.IRareTermsAggregation.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRareTermsAggregation.set_Missing(object value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IRareTermsAggregation.get_Precision();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRareTermsAggregation.set_Precision(Nullable`1<double> value);
    public RareTermsAggregationDescriptor`1<T> Field(Field field);
    public RareTermsAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public RareTermsAggregationDescriptor`1<T> MaximumDocumentCount(Nullable`1<long> maximumDocumentCount);
    public RareTermsAggregationDescriptor`1<T> Include(long partition, long numberOfPartitions);
    public RareTermsAggregationDescriptor`1<T> Include(string includePattern);
    public RareTermsAggregationDescriptor`1<T> Include(IEnumerable`1<string> values);
    public RareTermsAggregationDescriptor`1<T> Exclude(string excludePattern);
    public RareTermsAggregationDescriptor`1<T> Exclude(IEnumerable`1<string> values);
    public RareTermsAggregationDescriptor`1<T> Missing(object missing);
    public RareTermsAggregationDescriptor`1<T> Precision(Nullable`1<double> precision);
}
public class OpenSearch.Client.RareTermsBucket`1 : BucketBase {
    [CompilerGeneratedAttribute]
private long <DocCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TKey <Key>k__BackingField;
    public long DocCount { get; public set; }
    public TKey Key { get; public set; }
    public RareTermsBucket`1(IReadOnlyDictionary`2<string, IAggregate> dict);
    [CompilerGeneratedAttribute]
public long get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(long value);
    [CompilerGeneratedAttribute]
public TKey get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(TKey value);
}
public class OpenSearch.Client.RawQuery : QueryBase {
    [CompilerGeneratedAttribute]
private string <Raw>k__BackingField;
    public string Raw { get; public set; }
    protected bool Conditionless { get; }
    public RawQuery(string rawQuery);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Raw();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Raw(string value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer container);
}
public class OpenSearch.Client.RawQueryDescriptor : QueryDescriptorBase`2<RawQueryDescriptor, IRawQuery> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IRawQuery.Raw>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.IRawQuery.Raw { get; private set; }
    public RawQueryDescriptor(string rawQuery);
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IRawQuery.get_Raw();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRawQuery.set_Raw(string value);
    public RawQueryDescriptor Raw(string rawQuery);
}
internal class OpenSearch.Client.ReadAsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public Type Type { get; }
    public ReadAsAttribute(Type readAs);
    [CompilerGeneratedAttribute]
public Type get_Type();
}
internal class OpenSearch.Client.ReadAsFormatter`2 : object {
    public virtual T Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public virtual void Serialize(JsonWriter& writer, T value, IJsonFormatterResolver formatterResolver);
    public virtual void SerializeInternal(JsonWriter& writer, T value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.ReadAsFormatterResolver : object {
    public static IJsonFormatterResolver Instance;
    private static ReadAsFormatterResolver();
    public sealed virtual IJsonFormatter`1<T> GetFormatter();
}
public class OpenSearch.Client.ReadOnlyUrlRepository : object {
    [CompilerGeneratedAttribute]
private IReadOnlyUrlRepositorySettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public IReadOnlyUrlRepositorySettings Settings { get; public set; }
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    public string Type { get; }
    public ReadOnlyUrlRepository(ReadOnlyUrlRepositorySettings settings);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyUrlRepositorySettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IReadOnlyUrlRepositorySettings value);
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
}
public class OpenSearch.Client.ReadOnlyUrlRepositoryDescriptor : DescriptorBase`2<ReadOnlyUrlRepositoryDescriptor, IReadOnlyUrlRepository> {
    [CompilerGeneratedAttribute]
private IReadOnlyUrlRepositorySettings <OpenSearch.Client.IRepository<OpenSearch.Client.IReadOnlyUrlRepositorySettings>.Settings>k__BackingField;
    private IReadOnlyUrlRepositorySettings OpenSearch.Client.IRepository<OpenSearch.Client.IReadOnlyUrlRepositorySettings>.Settings { get; private set; }
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    private string OpenSearch.Client.ISnapshotRepository.Type { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IReadOnlyUrlRepositorySettings OpenSearch.Client.IRepository<OpenSearch.Client.IReadOnlyUrlRepositorySettings>.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRepository<OpenSearch.Client.IReadOnlyUrlRepositorySettings>.set_Settings(IReadOnlyUrlRepositorySettings value);
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    private sealed virtual override string OpenSearch.Client.ISnapshotRepository.get_Type();
    public ReadOnlyUrlRepositoryDescriptor Settings(string location, Func`2<ReadOnlyUrlRepositorySettingsDescriptor, IReadOnlyUrlRepositorySettings> settingsSelector);
}
public class OpenSearch.Client.ReadOnlyUrlRepositorySettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConcurrentStreams>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    public Nullable`1<int> ConcurrentStreams { get; public set; }
    public string Location { get; public set; }
    public ReadOnlyUrlRepositorySettings(string location);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ConcurrentStreams();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConcurrentStreams(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Location();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Location(string value);
}
public class OpenSearch.Client.ReadOnlyUrlRepositorySettingsDescriptor : DescriptorBase`2<ReadOnlyUrlRepositorySettingsDescriptor, IReadOnlyUrlRepositorySettings> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IReadOnlyUrlRepositorySettings.ConcurrentStreams>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IReadOnlyUrlRepositorySettings.Location>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.IReadOnlyUrlRepositorySettings.ConcurrentStreams { get; private set; }
    private string OpenSearch.Client.IReadOnlyUrlRepositorySettings.Location { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IReadOnlyUrlRepositorySettings.get_ConcurrentStreams();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReadOnlyUrlRepositorySettings.set_ConcurrentStreams(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IReadOnlyUrlRepositorySettings.get_Location();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReadOnlyUrlRepositorySettings.set_Location(string value);
    public ReadOnlyUrlRepositorySettingsDescriptor Location(string location);
    public ReadOnlyUrlRepositorySettingsDescriptor ConcurrentStreams(Nullable`1<int> concurrentStreams);
}
[StringEnumAttribute]
public enum OpenSearch.Client.RebalanceEnable : Enum {
    public int value__;
    [EnumMemberAttribute]
public static RebalanceEnable All;
    [EnumMemberAttribute]
public static RebalanceEnable Primaries;
    [EnumMemberAttribute]
public static RebalanceEnable Replicas;
    [EnumMemberAttribute]
public static RebalanceEnable None;
}
[StringEnumAttribute]
public enum OpenSearch.Client.RecoveryInitialShards : Enum {
    public int value__;
    [EnumMemberAttribute]
public static RecoveryInitialShards Quorem;
    [EnumMemberAttribute]
public static RecoveryInitialShards QuoremMinusOne;
    [EnumMemberAttribute]
public static RecoveryInitialShards Full;
    [EnumMemberAttribute]
public static RecoveryInitialShards FullMinusOne;
}
[DataContractAttribute]
public class OpenSearch.Client.RecoveryStats : object {
    [CompilerGeneratedAttribute]
private long <CurrentAsSource>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CurrentAsTarget>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ThrottleTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ThrottleTimeInMilliseconds>k__BackingField;
    [DataMemberAttribute]
public long CurrentAsSource { get; public set; }
    [DataMemberAttribute]
public long CurrentAsTarget { get; public set; }
    [DataMemberAttribute]
public string ThrottleTime { get; public set; }
    [DataMemberAttribute]
public long ThrottleTimeInMilliseconds { get; public set; }
    [CompilerGeneratedAttribute]
public long get_CurrentAsSource();
    [CompilerGeneratedAttribute]
public void set_CurrentAsSource(long value);
    [CompilerGeneratedAttribute]
public long get_CurrentAsTarget();
    [CompilerGeneratedAttribute]
public void set_CurrentAsTarget(long value);
    [CompilerGeneratedAttribute]
public string get_ThrottleTime();
    [CompilerGeneratedAttribute]
public void set_ThrottleTime(string value);
    [CompilerGeneratedAttribute]
public long get_ThrottleTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_ThrottleTimeInMilliseconds(long value);
}
public class OpenSearch.Client.RefreshDescriptor : RequestDescriptorBase`3<RefreshDescriptor, RefreshRequestParameters, IRefreshRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IRefreshRequest.Index { get; }
    public RefreshDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IRefreshRequest.get_Index();
    public RefreshDescriptor Index(Indices index);
    public RefreshDescriptor Index();
    public RefreshDescriptor AllIndices();
    public RefreshDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public RefreshDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public RefreshDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
}
public class OpenSearch.Client.RefreshRequest : PlainRequestBase`1<RefreshRequestParameters> {
    protected IRefreshRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IRefreshRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public RefreshRequest(Indices index);
    protected IRefreshRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IRefreshRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
}
public class OpenSearch.Client.RefreshResponse : ShardsOperationResponseBase {
}
[DataContractAttribute]
public class OpenSearch.Client.RefreshStats : object {
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TotalTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ExternalTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ExternalTotalTimeInMilliseconds>k__BackingField;
    [DataMemberAttribute]
public long Total { get; public set; }
    [DataMemberAttribute]
public string TotalTime { get; public set; }
    [DataMemberAttribute]
public long TotalTimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public long ExternalTotal { get; public set; }
    [DataMemberAttribute]
public long ExternalTotalTimeInMilliseconds { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(long value);
    [CompilerGeneratedAttribute]
public string get_TotalTime();
    [CompilerGeneratedAttribute]
public void set_TotalTime(string value);
    [CompilerGeneratedAttribute]
public long get_TotalTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_TotalTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_ExternalTotal();
    [CompilerGeneratedAttribute]
public void set_ExternalTotal(long value);
    [CompilerGeneratedAttribute]
public long get_ExternalTotalTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_ExternalTotalTimeInMilliseconds(long value);
}
public class OpenSearch.Client.RegexpQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private string <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumDeterminizedStates>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <Rewrite>k__BackingField;
    public string Flags { get; public set; }
    public Nullable`1<int> MaximumDeterminizedStates { get; public set; }
    public string Value { get; public set; }
    public MultiTermQueryRewrite Rewrite { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Flags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Flags(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaximumDeterminizedStates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumDeterminizedStates(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(string value);
    [CompilerGeneratedAttribute]
public sealed virtual MultiTermQueryRewrite get_Rewrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Rewrite(MultiTermQueryRewrite value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IRegexpQuery q);
}
public class OpenSearch.Client.RegexpQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<RegexpQueryDescriptor`1<T>, IRegexpQuery, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IRegexpQuery.Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IRegexpQuery.MaximumDeterminizedStates>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IRegexpQuery.Value>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <OpenSearch.Client.IRegexpQuery.Rewrite>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.IRegexpQuery.Flags { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IRegexpQuery.MaximumDeterminizedStates { get; private set; }
    private string OpenSearch.Client.IRegexpQuery.Value { get; private set; }
    private MultiTermQueryRewrite OpenSearch.Client.IRegexpQuery.Rewrite { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IRegexpQuery.get_Flags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRegexpQuery.set_Flags(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IRegexpQuery.get_MaximumDeterminizedStates();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRegexpQuery.set_MaximumDeterminizedStates(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IRegexpQuery.get_Value();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRegexpQuery.set_Value(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override MultiTermQueryRewrite OpenSearch.Client.IRegexpQuery.get_Rewrite();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRegexpQuery.set_Rewrite(MultiTermQueryRewrite value);
    public RegexpQueryDescriptor`1<T> MaximumDeterminizedStates(Nullable`1<int> maxDeterminizedStates);
    public RegexpQueryDescriptor`1<T> Value(string regex);
    public RegexpQueryDescriptor`1<T> Flags(string flags);
    public RegexpQueryDescriptor`1<T> Rewrite(MultiTermQueryRewrite rewrite);
}
public class OpenSearch.Client.ReindexDescriptor`2 : DescriptorBase`2<ReindexDescriptor`2<TSource, TTarget>, IReindexRequest`2<TSource, TTarget>> {
    private Func`2<BulkAllDescriptor`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> _createBulkAll;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IReindexRequest<TSource,TTarget>.BackPressureFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> <OpenSearch.Client.IReindexRequest<TSource,TTarget>.BulkAll>k__BackingField;
    [CompilerGeneratedAttribute]
private ICreateIndexRequest <OpenSearch.Client.IReindexRequest<TSource,TTarget>.CreateIndexRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<TSource, TTarget> <OpenSearch.Client.IReindexRequest<TSource,TTarget>.Map>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenSearch.Client.IReindexRequest<TSource,TTarget>.OmitIndexCreation>k__BackingField;
    [CompilerGeneratedAttribute]
private IScrollAllRequest <OpenSearch.Client.IReindexRequest<TSource,TTarget>.ScrollAll>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.IReindexRequest<TSource,TTarget>.BackPressureFactor { get; private set; }
    private Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> OpenSearch.Client.IReindexRequest<TSource,TTarget>.BulkAll { get; private set; }
    private ICreateIndexRequest OpenSearch.Client.IReindexRequest<TSource,TTarget>.CreateIndexRequest { get; private set; }
    private Func`2<TSource, TTarget> OpenSearch.Client.IReindexRequest<TSource,TTarget>.Map { get; private set; }
    private bool OpenSearch.Client.IReindexRequest<TSource,TTarget>.OmitIndexCreation { get; private set; }
    private IScrollAllRequest OpenSearch.Client.IReindexRequest<TSource,TTarget>.ScrollAll { get; private set; }
    public ReindexDescriptor`2(Func`2<TSource, TTarget> mapper);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IReindexRequest<TSource,TTarget>.get_BackPressureFactor();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexRequest<TSource,TTarget>.set_BackPressureFactor(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> OpenSearch.Client.IReindexRequest<TSource,TTarget>.get_BulkAll();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexRequest<TSource,TTarget>.set_BulkAll(Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ICreateIndexRequest OpenSearch.Client.IReindexRequest<TSource,TTarget>.get_CreateIndexRequest();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexRequest<TSource,TTarget>.set_CreateIndexRequest(ICreateIndexRequest value);
    [CompilerGeneratedAttribute]
private sealed virtual override Func`2<TSource, TTarget> OpenSearch.Client.IReindexRequest<TSource,TTarget>.get_Map();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexRequest<TSource,TTarget>.set_Map(Func`2<TSource, TTarget> value);
    [CompilerGeneratedAttribute]
private sealed virtual override bool OpenSearch.Client.IReindexRequest<TSource,TTarget>.get_OmitIndexCreation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexRequest<TSource,TTarget>.set_OmitIndexCreation(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScrollAllRequest OpenSearch.Client.IReindexRequest<TSource,TTarget>.get_ScrollAll();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexRequest<TSource,TTarget>.set_ScrollAll(IScrollAllRequest value);
    public ReindexDescriptor`2<TSource, TTarget> ScrollAll(Time scrollTime, int slices, Func`2<ScrollAllDescriptor`1<TSource>, IScrollAllRequest> selector);
    public ReindexDescriptor`2<TSource, TTarget> BackPressureFactor(Nullable`1<int> maximum);
    public ReindexDescriptor`2<TSource, TTarget> BulkAll(Func`2<BulkAllDescriptor`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> selector);
    public ReindexDescriptor`2<TSource, TTarget> OmitIndexCreation(bool omit);
    public ReindexDescriptor`2<TSource, TTarget> CreateIndex(Func`2<CreateIndexDescriptor, ICreateIndexRequest> createIndexSelector);
    [CompilerGeneratedAttribute]
private IBulkAllRequest`1<IHitMetadata`1<TTarget>> <.ctor>b__1_0(IEnumerable`1<IHitMetadata`1<TTarget>> d);
}
public class OpenSearch.Client.ReindexDestination : object {
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<OpType> <OpType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pipeline>k__BackingField;
    [CompilerGeneratedAttribute]
private ReindexRouting <Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VersionType> <VersionType>k__BackingField;
    public IndexName Index { get; public set; }
    public Nullable`1<OpType> OpType { get; public set; }
    public string Pipeline { get; public set; }
    public ReindexRouting Routing { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<OpType> get_OpType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OpType(Nullable`1<OpType> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pipeline();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pipeline(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ReindexRouting get_Routing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Routing(ReindexRouting value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<VersionType> get_VersionType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_VersionType(Nullable`1<VersionType> value);
}
public class OpenSearch.Client.ReindexDestinationDescriptor : DescriptorBase`2<ReindexDestinationDescriptor, IReindexDestination> {
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.IReindexDestination.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<OpType> <OpenSearch.Client.IReindexDestination.OpType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IReindexDestination.Pipeline>k__BackingField;
    [CompilerGeneratedAttribute]
private ReindexRouting <OpenSearch.Client.IReindexDestination.Routing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VersionType> <OpenSearch.Client.IReindexDestination.VersionType>k__BackingField;
    private IndexName OpenSearch.Client.IReindexDestination.Index { get; private set; }
    private Nullable`1<OpType> OpenSearch.Client.IReindexDestination.OpType { get; private set; }
    private string OpenSearch.Client.IReindexDestination.Pipeline { get; private set; }
    private ReindexRouting OpenSearch.Client.IReindexDestination.Routing { get; private set; }
    private Nullable`1<VersionType> OpenSearch.Client.IReindexDestination.VersionType { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.IReindexDestination.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexDestination.set_Index(IndexName value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<OpType> OpenSearch.Client.IReindexDestination.get_OpType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexDestination.set_OpType(Nullable`1<OpType> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IReindexDestination.get_Pipeline();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexDestination.set_Pipeline(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override ReindexRouting OpenSearch.Client.IReindexDestination.get_Routing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexDestination.set_Routing(ReindexRouting value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<VersionType> OpenSearch.Client.IReindexDestination.get_VersionType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexDestination.set_VersionType(Nullable`1<VersionType> value);
    public ReindexDestinationDescriptor Routing(ReindexRouting routing);
    public ReindexDestinationDescriptor Pipeline(string pipeline);
    public ReindexDestinationDescriptor OpType(Nullable`1<OpType> opType);
    public ReindexDestinationDescriptor VersionType(Nullable`1<VersionType> versionType);
    public ReindexDestinationDescriptor Index(IndexName index);
}
public class OpenSearch.Client.ReindexNode : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<TaskId, ReindexTask> <Tasks>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransportAddress>k__BackingField;
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,System.String>")]
public IReadOnlyDictionary`2<string, string> Attributes { get; internal set; }
    [DataMemberAttribute]
public string Host { get; internal set; }
    [DataMemberAttribute]
public string Ip { get; internal set; }
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Roles { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<OpenSearch.Client.TaskId,OpenSearch.Client.ReindexTask>")]
public IReadOnlyDictionary`2<TaskId, ReindexTask> Tasks { get; internal set; }
    [DataMemberAttribute]
public string TransportAddress { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Attributes();
    [CompilerGeneratedAttribute]
internal void set_Attributes(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
internal void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
internal void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Roles();
    [CompilerGeneratedAttribute]
internal void set_Roles(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<TaskId, ReindexTask> get_Tasks();
    [CompilerGeneratedAttribute]
internal void set_Tasks(IReadOnlyDictionary`2<TaskId, ReindexTask> value);
    [CompilerGeneratedAttribute]
public string get_TransportAddress();
    [CompilerGeneratedAttribute]
internal void set_TransportAddress(string value);
}
public class OpenSearch.Client.ReindexObservable`1 : ReindexObservable`2<TSource, TSource> {
    public ReindexObservable`1(IOpenSearchClient client, IConnectionSettingsValues connectionSettings, IReindexRequest`2<TSource, TSource> reindexRequest, CancellationToken cancellationToken);
}
public class OpenSearch.Client.ReindexObservable`2 : object {
    private IOpenSearchClient _client;
    private CancellationToken _compositeCancelToken;
    private CancellationTokenSource _compositeCancelTokenSource;
    private IConnectionSettingsValues _connectionSettings;
    private IReindexRequest`2<TSource, TTarget> _reindexRequest;
    private Action`1<long> _incrementSeenDocuments;
    private Action _incrementSeenScrollOperations;
    [CompilerGeneratedAttribute]
private bool <IsDisposed>k__BackingField;
    public bool IsDisposed { get; private set; }
    public ReindexObservable`2(IOpenSearchClient client, IConnectionSettingsValues connectionSettings, IReindexRequest`2<TSource, TTarget> reindexRequest, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public bool get_IsDisposed();
    [CompilerGeneratedAttribute]
private void set_IsDisposed(bool value);
    public sealed virtual void Dispose();
    public sealed virtual IDisposable Subscribe(IObserver`1<BulkAllResponse> observer);
    public IDisposable Subscribe(ReindexObserver observer);
    private void Reindex(IObserver`1<BulkAllResponse> observer);
    private BulkAllObservable`1<IHitMetadata`1<TTarget>> BulkAll(IEnumerable`1<IHitMetadata`1<TTarget>> scrollDocuments, ProducerConsumerBackPressure backPressure, string toIndex);
    private ProducerConsumerBackPressure CreateBackPressure(IBulkAllRequest`1<IHitMetadata`1<TTarget>> bulkMeta, IScrollAllRequest scrollAll, int slices);
    private IEnumerable`1<IScrollAllResponse`1<TSource>> ScrollAll(int slices, ProducerConsumerBackPressure backPressure);
    private IScrollAllResponse`1<TSource> ObserveScrollAllResponse(IScrollAllResponse`1<TSource> response);
    private static OpenSearchClientException Throw(string message, IApiCallDetails details);
    private int CreateIndex(string toIndex, IScrollAllRequest scrollAll);
    private Nullable`1<int> CreateIndexIfNeeded(Indices fromIndices, string resolvedTo);
    [CompilerGeneratedAttribute]
private IHitMetadata`1<TTarget> <Reindex>b__15_1(IHit`1<TSource> r);
}
public class OpenSearch.Client.ReindexObserver : BulkAllObserver {
    private long _seenScrollDocuments;
    private long _seenScrollOperations;
    public long SeenScrollDocuments { get; }
    public long SeenScrollOperations { get; }
    public ReindexObserver(Action`1<BulkAllResponse> onNext, Action`1<Exception> onError, Action onCompleted);
    public long get_SeenScrollDocuments();
    public long get_SeenScrollOperations();
    internal void IncrementSeenScrollDocuments(long documentCount);
    internal void IncrementSeenScrollOperations();
}
public class OpenSearch.Client.ReindexOnServerDescriptor : RequestDescriptorBase`3<ReindexOnServerDescriptor, ReindexOnServerRequestParameters, IReindexOnServerRequest> {
    [CompilerGeneratedAttribute]
private Nullable`1<Conflicts> <OpenSearch.Client.IReindexOnServerRequest.Conflicts>k__BackingField;
    [CompilerGeneratedAttribute]
private IReindexDestination <OpenSearch.Client.IReindexOnServerRequest.Destination>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IReindexOnServerRequest.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private IReindexSource <OpenSearch.Client.IReindexOnServerRequest.Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IReindexOnServerRequest.MaximumDocuments>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Nullable`1<Conflicts> OpenSearch.Client.IReindexOnServerRequest.Conflicts { get; private set; }
    private IReindexDestination OpenSearch.Client.IReindexOnServerRequest.Destination { get; private set; }
    private IScript OpenSearch.Client.IReindexOnServerRequest.Script { get; private set; }
    private IReindexSource OpenSearch.Client.IReindexOnServerRequest.Source { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IReindexOnServerRequest.MaximumDocuments { get; private set; }
    internal virtual ApiUrls get_ApiUrls();
    public ReindexOnServerDescriptor Refresh(Nullable`1<bool> refresh);
    public ReindexOnServerDescriptor RequestsPerSecond(Nullable`1<long> requestspersecond);
    public ReindexOnServerDescriptor Scroll(Time scroll);
    public ReindexOnServerDescriptor Slices(Slices slices);
    public ReindexOnServerDescriptor Timeout(Time timeout);
    public ReindexOnServerDescriptor WaitForActiveShards(string waitforactiveshards);
    public ReindexOnServerDescriptor WaitForCompletion(Nullable`1<bool> waitforcompletion);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<Conflicts> OpenSearch.Client.IReindexOnServerRequest.get_Conflicts();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexOnServerRequest.set_Conflicts(Nullable`1<Conflicts> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IReindexDestination OpenSearch.Client.IReindexOnServerRequest.get_Destination();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexOnServerRequest.set_Destination(IReindexDestination value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IReindexOnServerRequest.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexOnServerRequest.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override IReindexSource OpenSearch.Client.IReindexOnServerRequest.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexOnServerRequest.set_Source(IReindexSource value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IReindexOnServerRequest.get_MaximumDocuments();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexOnServerRequest.set_MaximumDocuments(Nullable`1<long> value);
    public ReindexOnServerDescriptor Source(Func`2<ReindexSourceDescriptor, IReindexSource> selector);
    public ReindexOnServerDescriptor Destination(Func`2<ReindexDestinationDescriptor, IReindexDestination> selector);
    public ReindexOnServerDescriptor Script(string script);
    public ReindexOnServerDescriptor Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public ReindexOnServerDescriptor Conflicts(Nullable`1<Conflicts> conflicts);
    public ReindexOnServerDescriptor MaximumDocuments(Nullable`1<long> maximumDocuments);
}
public class OpenSearch.Client.ReindexOnServerRequest : PlainRequestBase`1<ReindexOnServerRequestParameters> {
    [CompilerGeneratedAttribute]
private Nullable`1<Conflicts> <Conflicts>k__BackingField;
    [CompilerGeneratedAttribute]
private IReindexDestination <Destination>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaximumDocuments>k__BackingField;
    [CompilerGeneratedAttribute]
private IReindexSource <Source>k__BackingField;
    public Nullable`1<Conflicts> Conflicts { get; public set; }
    public IReindexDestination Destination { get; public set; }
    public IScript Script { get; public set; }
    public Nullable`1<long> MaximumDocuments { get; public set; }
    public IReindexSource Source { get; public set; }
    protected IReindexOnServerRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<bool> Refresh { get; public set; }
    public Nullable`1<long> RequestsPerSecond { get; public set; }
    public Time Scroll { get; public set; }
    public Slices Slices { get; public set; }
    public Time Timeout { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public Nullable`1<bool> WaitForCompletion { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Conflicts> get_Conflicts();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Conflicts(Nullable`1<Conflicts> value);
    [CompilerGeneratedAttribute]
public sealed virtual IReindexDestination get_Destination();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Destination(IReindexDestination value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MaximumDocuments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumDocuments(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual IReindexSource get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(IReindexSource value);
    protected IReindexOnServerRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<bool> get_Refresh();
    public void set_Refresh(Nullable`1<bool> value);
    public Nullable`1<long> get_RequestsPerSecond();
    public void set_RequestsPerSecond(Nullable`1<long> value);
    public Time get_Scroll();
    public void set_Scroll(Time value);
    public Slices get_Slices();
    public void set_Slices(Slices value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
    public Nullable`1<bool> get_WaitForCompletion();
    public void set_WaitForCompletion(Nullable`1<bool> value);
}
public class OpenSearch.Client.ReindexOnServerResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private long <Batches>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<BulkIndexByScrollFailure> <Failures>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Noops>k__BackingField;
    [CompilerGeneratedAttribute]
private Retries <Retries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SliceId>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskId <Task>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TimedOut>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <Took>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Updated>k__BackingField;
    [CompilerGeneratedAttribute]
private long <VersionConflicts>k__BackingField;
    public bool IsValid { get; }
    [DataMemberAttribute]
public long Batches { get; internal set; }
    [DataMemberAttribute]
public long Created { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<BulkIndexByScrollFailure> Failures { get; internal set; }
    [DataMemberAttribute]
public long Noops { get; internal set; }
    [DataMemberAttribute]
public Retries Retries { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<int> SliceId { get; internal set; }
    [DataMemberAttribute]
public TaskId Task { get; internal set; }
    [DataMemberAttribute]
public bool TimedOut { get; internal set; }
    [DataMemberAttribute]
public Time Took { get; internal set; }
    [DataMemberAttribute]
public long Total { get; internal set; }
    [DataMemberAttribute]
public long Updated { get; internal set; }
    [DataMemberAttribute]
public long VersionConflicts { get; internal set; }
    public virtual bool get_IsValid();
    [CompilerGeneratedAttribute]
public long get_Batches();
    [CompilerGeneratedAttribute]
internal void set_Batches(long value);
    [CompilerGeneratedAttribute]
public long get_Created();
    [CompilerGeneratedAttribute]
internal void set_Created(long value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<BulkIndexByScrollFailure> get_Failures();
    [CompilerGeneratedAttribute]
internal void set_Failures(IReadOnlyCollection`1<BulkIndexByScrollFailure> value);
    [CompilerGeneratedAttribute]
public long get_Noops();
    [CompilerGeneratedAttribute]
internal void set_Noops(long value);
    [CompilerGeneratedAttribute]
public Retries get_Retries();
    [CompilerGeneratedAttribute]
internal void set_Retries(Retries value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SliceId();
    [CompilerGeneratedAttribute]
internal void set_SliceId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public TaskId get_Task();
    [CompilerGeneratedAttribute]
internal void set_Task(TaskId value);
    [CompilerGeneratedAttribute]
public bool get_TimedOut();
    [CompilerGeneratedAttribute]
internal void set_TimedOut(bool value);
    [CompilerGeneratedAttribute]
public Time get_Took();
    [CompilerGeneratedAttribute]
internal void set_Took(Time value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(long value);
    [CompilerGeneratedAttribute]
public long get_Updated();
    [CompilerGeneratedAttribute]
internal void set_Updated(long value);
    [CompilerGeneratedAttribute]
public long get_VersionConflicts();
    [CompilerGeneratedAttribute]
internal void set_VersionConflicts(long value);
}
public class OpenSearch.Client.ReindexRequest`1 : ReindexRequest`2<TSource, TSource> {
    public ReindexRequest`1(IScrollAllRequest scrollSource, Func`2<IEnumerable`1<IHitMetadata`1<TSource>>, IBulkAllRequest`1<IHitMetadata`1<TSource>>> bulkAllTarget);
}
public class OpenSearch.Client.ReindexRequest`2 : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <BackPressureFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private ICreateIndexRequest <CreateIndexRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OmitIndexCreation>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> <OpenSearch.Client.IReindexRequest<TSource,TTarget>.BulkAll>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<TSource, TTarget> <OpenSearch.Client.IReindexRequest<TSource,TTarget>.Map>k__BackingField;
    [CompilerGeneratedAttribute]
private IScrollAllRequest <OpenSearch.Client.IReindexRequest<TSource,TTarget>.ScrollAll>k__BackingField;
    public Nullable`1<int> BackPressureFactor { get; public set; }
    public ICreateIndexRequest CreateIndexRequest { get; public set; }
    public bool OmitIndexCreation { get; public set; }
    private Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> OpenSearch.Client.IReindexRequest<TSource,TTarget>.BulkAll { get; private set; }
    private Func`2<TSource, TTarget> OpenSearch.Client.IReindexRequest<TSource,TTarget>.Map { get; private set; }
    private IScrollAllRequest OpenSearch.Client.IReindexRequest<TSource,TTarget>.ScrollAll { get; private set; }
    public ReindexRequest`2(IScrollAllRequest scrollSource, Func`2<TSource, TTarget> map, Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> bulkAllTarget);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_BackPressureFactor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BackPressureFactor(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual ICreateIndexRequest get_CreateIndexRequest();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CreateIndexRequest(ICreateIndexRequest value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_OmitIndexCreation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OmitIndexCreation(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> OpenSearch.Client.IReindexRequest<TSource,TTarget>.get_BulkAll();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexRequest<TSource,TTarget>.set_BulkAll(Func`2<IEnumerable`1<IHitMetadata`1<TTarget>>, IBulkAllRequest`1<IHitMetadata`1<TTarget>>> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Func`2<TSource, TTarget> OpenSearch.Client.IReindexRequest<TSource,TTarget>.get_Map();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexRequest<TSource,TTarget>.set_Map(Func`2<TSource, TTarget> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScrollAllRequest OpenSearch.Client.IReindexRequest<TSource,TTarget>.get_ScrollAll();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexRequest<TSource,TTarget>.set_ScrollAll(IScrollAllRequest value);
}
public class OpenSearch.Client.ReindexRethrottleDescriptor : RequestDescriptorBase`3<ReindexRethrottleDescriptor, ReindexRethrottleRequestParameters, IReindexRethrottleRequest> {
    internal ApiUrls ApiUrls { get; }
    private TaskId OpenSearch.Client.IReindexRethrottleRequest.TaskId { get; }
    public ReindexRethrottleDescriptor(TaskId taskId);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override TaskId OpenSearch.Client.IReindexRethrottleRequest.get_TaskId();
    public ReindexRethrottleDescriptor RequestsPerSecond(Nullable`1<long> requestspersecond);
}
public class OpenSearch.Client.ReindexRethrottleRequest : PlainRequestBase`1<ReindexRethrottleRequestParameters> {
    protected IReindexRethrottleRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private TaskId OpenSearch.Client.IReindexRethrottleRequest.TaskId { get; }
    public Nullable`1<long> RequestsPerSecond { get; public set; }
    public ReindexRethrottleRequest(TaskId taskId);
    protected IReindexRethrottleRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override TaskId OpenSearch.Client.IReindexRethrottleRequest.get_TaskId();
    public Nullable`1<long> get_RequestsPerSecond();
    public void set_RequestsPerSecond(Nullable`1<long> value);
}
public class OpenSearch.Client.ReindexRethrottleResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, ReindexNode> <Nodes>k__BackingField;
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.ReindexNode>")]
public IReadOnlyDictionary`2<string, ReindexNode> Nodes { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, ReindexNode> get_Nodes();
    [CompilerGeneratedAttribute]
internal void set_Nodes(IReadOnlyDictionary`2<string, ReindexNode> value);
}
[JsonFormatterAttribute("OpenSearch.Client.ReindexRoutingFormatter")]
public class OpenSearch.Client.ReindexRouting : object {
    public static ReindexRouting Discard;
    public static ReindexRouting Keep;
    private string _newRoutingValue;
    public ReindexRouting(string newRoutingValue);
    private ReindexRouting(string newRoutingValue, bool noPrefix);
    private static ReindexRouting();
    public static ReindexRouting op_Implicit(string routing);
    public virtual string ToString();
}
internal class OpenSearch.Client.ReindexRoutingFormatter : object {
    public sealed virtual ReindexRouting Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, ReindexRouting value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.ReindexSource : object {
    [CompilerGeneratedAttribute]
private Indices <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private IRemoteSource <Remote>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlicedScroll <Slice>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <Source>k__BackingField;
    public Indices Index { get; public set; }
    public QueryContainer Query { get; public set; }
    public IRemoteSource Remote { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public ISlicedScroll Slice { get; public set; }
    public Fields Source { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Indices get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Indices value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IRemoteSource get_Remote();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Remote(IRemoteSource value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISlicedScroll get_Slice();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slice(ISlicedScroll value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(Fields value);
}
public class OpenSearch.Client.ReindexSourceDescriptor : DescriptorBase`2<ReindexSourceDescriptor, IReindexSource> {
    [CompilerGeneratedAttribute]
private Indices <OpenSearch.Client.IReindexSource.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IReindexSource.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private IRemoteSource <OpenSearch.Client.IReindexSource.Remote>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IReindexSource.Size>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlicedScroll <OpenSearch.Client.IReindexSource.Slice>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IReindexSource.Source>k__BackingField;
    private Indices OpenSearch.Client.IReindexSource.Index { get; private set; }
    private QueryContainer OpenSearch.Client.IReindexSource.Query { get; private set; }
    private IRemoteSource OpenSearch.Client.IReindexSource.Remote { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IReindexSource.Size { get; private set; }
    private ISlicedScroll OpenSearch.Client.IReindexSource.Slice { get; private set; }
    private Fields OpenSearch.Client.IReindexSource.Source { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Indices OpenSearch.Client.IReindexSource.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexSource.set_Index(Indices value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IReindexSource.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexSource.set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IRemoteSource OpenSearch.Client.IReindexSource.get_Remote();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexSource.set_Remote(IRemoteSource value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IReindexSource.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexSource.set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISlicedScroll OpenSearch.Client.IReindexSource.get_Slice();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexSource.set_Slice(ISlicedScroll value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IReindexSource.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReindexSource.set_Source(Fields value);
    public ReindexSourceDescriptor Query(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> querySelector);
    public ReindexSourceDescriptor Remote(Func`2<RemoteSourceDescriptor, IRemoteSource> selector);
    public ReindexSourceDescriptor Index(Indices indices);
    public ReindexSourceDescriptor Size(Nullable`1<int> size);
    public ReindexSourceDescriptor Slice(Func`2<SlicedScrollDescriptor`1<T>, ISlicedScroll> selector);
    public ReindexSourceDescriptor Source(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
}
public class OpenSearch.Client.ReindexStatus : object {
    [CompilerGeneratedAttribute]
private long <Batches>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Deleted>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Noops>k__BackingField;
    [CompilerGeneratedAttribute]
private float <RequestsPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private Retries <Retries>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ThrottledInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ThrottledUntilInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Updated>k__BackingField;
    [CompilerGeneratedAttribute]
private long <VersionConflicts>k__BackingField;
    [DataMemberAttribute]
public long Batches { get; internal set; }
    [DataMemberAttribute]
public long Created { get; internal set; }
    [DataMemberAttribute]
public long Deleted { get; internal set; }
    [DataMemberAttribute]
public long Noops { get; internal set; }
    [DataMemberAttribute]
public float RequestsPerSecond { get; internal set; }
    [DataMemberAttribute]
public Retries Retries { get; internal set; }
    [DataMemberAttribute]
public long ThrottledInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public long ThrottledUntilInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public long Total { get; internal set; }
    [DataMemberAttribute]
public long Updated { get; internal set; }
    [DataMemberAttribute]
public long VersionConflicts { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Batches();
    [CompilerGeneratedAttribute]
internal void set_Batches(long value);
    [CompilerGeneratedAttribute]
public long get_Created();
    [CompilerGeneratedAttribute]
internal void set_Created(long value);
    [CompilerGeneratedAttribute]
public long get_Deleted();
    [CompilerGeneratedAttribute]
internal void set_Deleted(long value);
    [CompilerGeneratedAttribute]
public long get_Noops();
    [CompilerGeneratedAttribute]
internal void set_Noops(long value);
    [CompilerGeneratedAttribute]
public float get_RequestsPerSecond();
    [CompilerGeneratedAttribute]
internal void set_RequestsPerSecond(float value);
    [CompilerGeneratedAttribute]
public Retries get_Retries();
    [CompilerGeneratedAttribute]
internal void set_Retries(Retries value);
    [CompilerGeneratedAttribute]
public long get_ThrottledInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_ThrottledInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_ThrottledUntilInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_ThrottledUntilInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(long value);
    [CompilerGeneratedAttribute]
public long get_Updated();
    [CompilerGeneratedAttribute]
internal void set_Updated(long value);
    [CompilerGeneratedAttribute]
public long get_VersionConflicts();
    [CompilerGeneratedAttribute]
internal void set_VersionConflicts(long value);
}
public class OpenSearch.Client.ReindexTask : object {
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Cancellable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RunningTimeInNanoseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StartTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReindexStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public string Action { get; internal set; }
    [DataMemberAttribute]
public bool Cancellable { get; internal set; }
    [DataMemberAttribute]
public string Description { get; internal set; }
    [DataMemberAttribute]
public long Id { get; internal set; }
    [DataMemberAttribute]
public string Node { get; internal set; }
    [DataMemberAttribute]
public long RunningTimeInNanoseconds { get; internal set; }
    [DataMemberAttribute]
public long StartTimeInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public ReindexStatus Status { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
internal void set_Action(string value);
    [CompilerGeneratedAttribute]
public bool get_Cancellable();
    [CompilerGeneratedAttribute]
internal void set_Cancellable(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
internal void set_Description(string value);
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
internal void set_Node(string value);
    [CompilerGeneratedAttribute]
public long get_RunningTimeInNanoseconds();
    [CompilerGeneratedAttribute]
internal void set_RunningTimeInNanoseconds(long value);
    [CompilerGeneratedAttribute]
public long get_StartTimeInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_StartTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public ReindexStatus get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(ReindexStatus value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
[JsonFormatterAttribute("OpenSearch.Client.RelationNameFormatter")]
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.RelationName : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private static int <TypeHashCode>k__BackingField;
    public string Name { get; }
    public Type Type { get; }
    internal string DebugDisplay { get; }
    private static int TypeHashCode { get; }
    private RelationName(string type);
    private RelationName(Type type);
    private static RelationName();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Type get_Type();
    internal string get_DebugDisplay();
    [CompilerGeneratedAttribute]
private static int get_TypeHashCode();
    public sealed virtual bool Equals(RelationName other);
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public static RelationName From();
    public static RelationName Create(Type type);
    public static RelationName Create();
    private static RelationName GetRelationNameForType(Type type);
    public static RelationName op_Implicit(string typeName);
    public static RelationName op_Implicit(Type type);
    public virtual int GetHashCode();
    public static bool op_Equality(RelationName left, RelationName right);
    public static bool op_Inequality(RelationName left, RelationName right);
    public virtual bool Equals(object obj);
    public bool EqualsMarker(RelationName other);
    private bool EqualsString(string other);
    public virtual string ToString();
}
[ExtensionAttribute]
internal static class OpenSearch.Client.RelationNameExtensions : object {
    [ExtensionAttribute]
internal static bool IsConditionless(RelationName marker);
}
internal class OpenSearch.Client.RelationNameFormatter : object {
    public sealed virtual RelationName Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, RelationName value, IJsonFormatterResolver formatterResolver);
    public sealed virtual void SerializeToPropertyName(JsonWriter& writer, RelationName value, IJsonFormatterResolver formatterResolver);
    public sealed virtual RelationName DeserializeFromPropertyName(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.RelationNameResolver : object {
    private IConnectionSettingsValues _connectionSettings;
    private ConcurrentDictionary`2<Type, string> _relationNames;
    public RelationNameResolver(IConnectionSettingsValues connectionSettings);
    public string Resolve();
    public string Resolve(RelationName t);
    private string ResolveType(Type type);
}
public class OpenSearch.Client.Relations : IsADictionaryBase`2<RelationName, Children> {
    public Relations(IDictionary`2<RelationName, Children> container);
    public Relations(Dictionary`2<RelationName, Children> container);
    public sealed virtual void Add(RelationName type, Children children);
    public void Add(RelationName type, RelationName child, RelationName[] moreChildren);
}
public class OpenSearch.Client.RelationsDescriptor : IsADictionaryDescriptorBase`4<RelationsDescriptor, IRelations, RelationName, Children> {
    internal RelationsDescriptor(IRelations relations);
    public RelationsDescriptor Join(RelationName parent, RelationName child, RelationName[] moreChildren);
    public RelationsDescriptor Join(RelationName child, RelationName[] moreChildren);
    public RelationsDescriptor Join();
    private static string Message(Type t);
}
public class OpenSearch.Client.ReloadSecureSettingsDescriptor : RequestDescriptorBase`3<ReloadSecureSettingsDescriptor, ReloadSecureSettingsRequestParameters, IReloadSecureSettingsRequest> {
    internal ApiUrls ApiUrls { get; }
    private NodeIds OpenSearch.Client.IReloadSecureSettingsRequest.NodeId { get; }
    public ReloadSecureSettingsDescriptor(NodeIds nodeId);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.IReloadSecureSettingsRequest.get_NodeId();
    public ReloadSecureSettingsDescriptor NodeId(NodeIds nodeId);
    public ReloadSecureSettingsDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.ReloadSecureSettingsRequest : PlainRequestBase`1<ReloadSecureSettingsRequestParameters> {
    protected IReloadSecureSettingsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private NodeIds OpenSearch.Client.IReloadSecureSettingsRequest.NodeId { get; }
    public Time Timeout { get; public set; }
    public ReloadSecureSettingsRequest(NodeIds nodeId);
    protected IReloadSecureSettingsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override NodeIds OpenSearch.Client.IReloadSecureSettingsRequest.get_NodeId();
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
public class OpenSearch.Client.ReloadSecureSettingsResponse : NodesResponseBase {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, NodeStats> <Nodes>k__BackingField;
    [DataMemberAttribute]
public string ClusterName { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.NodeStats>")]
public IReadOnlyDictionary`2<string, NodeStats> Nodes { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
internal void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, NodeStats> get_Nodes();
    [CompilerGeneratedAttribute]
internal void set_Nodes(IReadOnlyDictionary`2<string, NodeStats> value);
}
public class OpenSearch.Client.RemoteClusterConfiguration : IsADictionaryBase`2<string, object> {
    private Dictionary`2<string, object> _remoteDictionary;
    public void Add(string name, Uri[] seeds);
    public void Add(string name, String[] seeds);
    public void Add(string name, Dictionary`2<string, object> remoteSettings);
    public static Dictionary`2<string, object> op_Addition(RemoteClusterConfiguration left, IDictionary`2<string, object> right);
    public static Dictionary`2<string, object> op_Addition(IDictionary`2<string, object> left, RemoteClusterConfiguration right);
    private static Dictionary`2<string, object> Combine(IDictionary`2<string, object> left, IDictionary`2<string, object> right);
}
public class OpenSearch.Client.RemoteInfo : object {
    [CompilerGeneratedAttribute]
private bool <Connected>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SkipUnavailable>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <InitialConnectTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxConnectionsPerCluster>k__BackingField;
    [CompilerGeneratedAttribute]
private long <NumNodesConnected>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <Seeds>k__BackingField;
    [DataMemberAttribute]
public bool Connected { get; internal set; }
    [DataMemberAttribute]
public bool SkipUnavailable { get; internal set; }
    [DataMemberAttribute]
public Time InitialConnectTimeout { get; internal set; }
    [DataMemberAttribute]
public int MaxConnectionsPerCluster { get; internal set; }
    [DataMemberAttribute]
public long NumNodesConnected { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> Seeds { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_Connected();
    [CompilerGeneratedAttribute]
internal void set_Connected(bool value);
    [CompilerGeneratedAttribute]
public bool get_SkipUnavailable();
    [CompilerGeneratedAttribute]
internal void set_SkipUnavailable(bool value);
    [CompilerGeneratedAttribute]
public Time get_InitialConnectTimeout();
    [CompilerGeneratedAttribute]
internal void set_InitialConnectTimeout(Time value);
    [CompilerGeneratedAttribute]
public int get_MaxConnectionsPerCluster();
    [CompilerGeneratedAttribute]
internal void set_MaxConnectionsPerCluster(int value);
    [CompilerGeneratedAttribute]
public long get_NumNodesConnected();
    [CompilerGeneratedAttribute]
internal void set_NumNodesConnected(long value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_Seeds();
    [CompilerGeneratedAttribute]
internal void set_Seeds(IReadOnlyCollection`1<string> value);
}
public class OpenSearch.Client.RemoteInfoDescriptor : RequestDescriptorBase`3<RemoteInfoDescriptor, RemoteInfoRequestParameters, IRemoteInfoRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
}
public class OpenSearch.Client.RemoteInfoRequest : PlainRequestBase`1<RemoteInfoRequestParameters> {
    protected IRemoteInfoRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    protected IRemoteInfoRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
}
[DataContractAttribute]
[JsonFormatterAttribute("OpenSearch.Client.DictionaryResponseFormatter`3<OpenSearch.Client.RemoteInfoResponse,System.String,OpenSearch.Client.RemoteInfo>")]
public class OpenSearch.Client.RemoteInfoResponse : DictionaryResponseBase`2<string, RemoteInfo> {
    [IgnoreDataMemberAttribute]
public IReadOnlyDictionary`2<string, RemoteInfo> Remotes { get; }
    public IReadOnlyDictionary`2<string, RemoteInfo> get_Remotes();
}
public class OpenSearch.Client.RemoteSource : object {
    [CompilerGeneratedAttribute]
private Uri <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <SocketTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ConnectTimeout>k__BackingField;
    public Uri Host { get; public set; }
    public string Password { get; public set; }
    public string Username { get; public set; }
    public Time SocketTimeout { get; public set; }
    public Time ConnectTimeout { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_Host();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Host(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Password();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Password(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Username();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Username(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_SocketTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SocketTimeout(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ConnectTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConnectTimeout(Time value);
}
public class OpenSearch.Client.RemoteSourceDescriptor : DescriptorBase`2<RemoteSourceDescriptor, IRemoteSource> {
    [CompilerGeneratedAttribute]
private Uri <OpenSearch.Client.IRemoteSource.Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IRemoteSource.Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IRemoteSource.Username>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IRemoteSource.SocketTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IRemoteSource.ConnectTimeout>k__BackingField;
    private Uri OpenSearch.Client.IRemoteSource.Host { get; private set; }
    private string OpenSearch.Client.IRemoteSource.Password { get; private set; }
    private string OpenSearch.Client.IRemoteSource.Username { get; private set; }
    private Time OpenSearch.Client.IRemoteSource.SocketTimeout { get; private set; }
    private Time OpenSearch.Client.IRemoteSource.ConnectTimeout { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Uri OpenSearch.Client.IRemoteSource.get_Host();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRemoteSource.set_Host(Uri value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IRemoteSource.get_Password();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRemoteSource.set_Password(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IRemoteSource.get_Username();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRemoteSource.set_Username(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IRemoteSource.get_SocketTimeout();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRemoteSource.set_SocketTimeout(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IRemoteSource.get_ConnectTimeout();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRemoteSource.set_ConnectTimeout(Time value);
    public RemoteSourceDescriptor Host(Uri host);
    public RemoteSourceDescriptor Username(string username);
    public RemoteSourceDescriptor Password(string password);
    public RemoteSourceDescriptor SocketTimeout(Time socketTimeout);
    public RemoteSourceDescriptor ConnectTimeout(Time connectTimeout);
}
public class OpenSearch.Client.RemoveDuplicatesTokenFilter : TokenFilterBase {
    internal static string TokenType;
}
public class OpenSearch.Client.RemoveDuplicatesTokenFilterDescriptor : TokenFilterDescriptorBase`2<RemoveDuplicatesTokenFilterDescriptor, IRemoveDuplicatesTokenFilter> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public class OpenSearch.Client.RemoveProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Fields <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    public Fields Field { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.RemoveProcessorDescriptor`1 : ProcessorDescriptorBase`2<RemoveProcessorDescriptor`1<T>, IRemoveProcessor> {
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.IRemoveProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRemoveProcessor.IgnoreMissing>k__BackingField;
    protected string Name { get; }
    private Fields OpenSearch.Client.IRemoveProcessor.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IRemoveProcessor.IgnoreMissing { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.IRemoveProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRemoveProcessor.set_Field(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRemoveProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRemoveProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    public RemoveProcessorDescriptor`1<T> Field(Fields fields);
    public RemoveProcessorDescriptor`1<T> Field(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> selector);
    public RemoveProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
}
public class OpenSearch.Client.RenameClrPropertyMapping`1 : ClrPropertyMappingBase`1<TDocument> {
    public RenameClrPropertyMapping`1(Expression`1<Func`2<TDocument, object>> property, string newName);
}
public class OpenSearch.Client.RenameProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    public Field Field { get; public set; }
    public Field TargetField { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.RenameProcessorDescriptor`1 : ProcessorDescriptorBase`2<RenameProcessorDescriptor`1<T>, IRenameProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IRenameProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IRenameProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRenameProcessor.IgnoreMissing>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IRenameProcessor.Field { get; private set; }
    private Field OpenSearch.Client.IRenameProcessor.TargetField { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IRenameProcessor.IgnoreMissing { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IRenameProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRenameProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IRenameProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRenameProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRenameProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRenameProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    public RenameProcessorDescriptor`1<T> Field(Field field);
    public RenameProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public RenameProcessorDescriptor`1<T> TargetField(Field field);
    public RenameProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public RenameProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
}
public class OpenSearch.Client.RenderSearchTemplateDescriptor : RequestDescriptorBase`3<RenderSearchTemplateDescriptor, RenderSearchTemplateRequestParameters, IRenderSearchTemplateRequest> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IRenderSearchTemplateRequest.File>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <OpenSearch.Client.IRenderSearchTemplateRequest.Params>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IRenderSearchTemplateRequest.Source>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Id OpenSearch.Client.IRenderSearchTemplateRequest.Id { get; }
    private string OpenSearch.Client.IRenderSearchTemplateRequest.File { get; private set; }
    private Dictionary`2<string, object> OpenSearch.Client.IRenderSearchTemplateRequest.Params { get; private set; }
    private string OpenSearch.Client.IRenderSearchTemplateRequest.Source { get; private set; }
    public RenderSearchTemplateDescriptor(Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IRenderSearchTemplateRequest.get_Id();
    public RenderSearchTemplateDescriptor Id(Id id);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IRenderSearchTemplateRequest.get_File();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRenderSearchTemplateRequest.set_File(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Dictionary`2<string, object> OpenSearch.Client.IRenderSearchTemplateRequest.get_Params();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRenderSearchTemplateRequest.set_Params(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IRenderSearchTemplateRequest.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRenderSearchTemplateRequest.set_Source(string value);
    public RenderSearchTemplateDescriptor Source(string source);
    public RenderSearchTemplateDescriptor File(string file);
    public RenderSearchTemplateDescriptor Params(Dictionary`2<string, object> scriptParams);
    public RenderSearchTemplateDescriptor Params(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> paramsSelector);
}
public class OpenSearch.Client.RenderSearchTemplateRequest : PlainRequestBase`1<RenderSearchTemplateRequestParameters> {
    [CompilerGeneratedAttribute]
private string <File>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Params>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    protected IRenderSearchTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IRenderSearchTemplateRequest.Id { get; }
    public string File { get; public set; }
    public Dictionary`2<string, object> Params { get; public set; }
    public string Source { get; public set; }
    public RenderSearchTemplateRequest(Id id);
    protected IRenderSearchTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.IRenderSearchTemplateRequest.get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual string get_File();
    [CompilerGeneratedAttribute]
public sealed virtual void set_File(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, object> get_Params();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Params(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.RenderSearchTemplateResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private ILazyDocument <TemplateOutput>k__BackingField;
    [DataMemberAttribute]
public ILazyDocument TemplateOutput { get; public set; }
    [CompilerGeneratedAttribute]
public ILazyDocument get_TemplateOutput();
    [CompilerGeneratedAttribute]
public void set_TemplateOutput(ILazyDocument value);
}
public abstract class OpenSearch.Client.RequestBase`1 : object {
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    private TParameters _parameters;
    [CompilerGeneratedAttribute]
private RouteValues <OpenSearch.Client.IRequest.RouteValues>k__BackingField;
    protected HttpMethod HttpMethod { get; }
    [IgnoreDataMemberAttribute]
protected IRequest`1<TParameters> RequestState { get; }
    [IgnoreDataMemberAttribute]
private HttpMethod OpenSearch.Client.IRequest.HttpMethod { get; }
    [IgnoreDataMemberAttribute]
private string OpenSearch.Client.IRequest.ContentType { get; }
    protected string ContentType { get; }
    [IgnoreDataMemberAttribute]
private TParameters OpenSearch.Client.IRequest<TParameters>.RequestParameters { get; }
    private IRequestParameters OpenSearch.Client.IRequest.RequestParameters { get; }
    [IgnoreDataMemberAttribute]
private RouteValues OpenSearch.Client.IRequest.RouteValues { get; }
    internal ApiUrls ApiUrls { get; }
    protected RequestBase`1(Func`2<RouteValues, RouteValues> pathSelector);
    protected virtual HttpMethod get_HttpMethod();
    protected IRequest`1<TParameters> get_RequestState();
    private sealed virtual override HttpMethod OpenSearch.Client.IRequest.get_HttpMethod();
    private sealed virtual override string OpenSearch.Client.IRequest.get_ContentType();
    [CompilerGeneratedAttribute]
protected virtual string get_ContentType();
    private sealed virtual override TParameters OpenSearch.Client.IRequest<TParameters>.get_RequestParameters();
    private sealed virtual override IRequestParameters OpenSearch.Client.IRequest.get_RequestParameters();
    [CompilerGeneratedAttribute]
private sealed virtual override RouteValues OpenSearch.Client.IRequest.get_RouteValues();
    internal abstract virtual ApiUrls get_ApiUrls();
    private sealed virtual override string OpenSearch.Client.IRequest.GetUrl(IConnectionSettingsValues settings);
    protected virtual string ResolveUrl(RouteValues routeValues, IConnectionSettingsValues settings);
    protected virtual void RequestDefaults(TParameters parameters);
    protected TOut Q(string name);
    protected void Q(string name, object value);
    protected void SetAcceptHeader(string format);
}
[DataContractAttribute]
public class OpenSearch.Client.RequestCacheStats : object {
    [CompilerGeneratedAttribute]
private long <Evictions>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HitCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MemorySize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MemorySizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MissCount>k__BackingField;
    [DataMemberAttribute]
public long Evictions { get; public set; }
    [DataMemberAttribute]
public long HitCount { get; public set; }
    [DataMemberAttribute]
public string MemorySize { get; public set; }
    [DataMemberAttribute]
public long MemorySizeInBytes { get; public set; }
    [DataMemberAttribute]
public long MissCount { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Evictions();
    [CompilerGeneratedAttribute]
public void set_Evictions(long value);
    [CompilerGeneratedAttribute]
public long get_HitCount();
    [CompilerGeneratedAttribute]
public void set_HitCount(long value);
    [CompilerGeneratedAttribute]
public string get_MemorySize();
    [CompilerGeneratedAttribute]
public void set_MemorySize(string value);
    [CompilerGeneratedAttribute]
public long get_MemorySizeInBytes();
    [CompilerGeneratedAttribute]
public void set_MemorySizeInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_MissCount();
    [CompilerGeneratedAttribute]
public void set_MissCount(long value);
}
public abstract class OpenSearch.Client.RequestDescriptorBase`3 : RequestBase`1<TParameters> {
    private TDescriptor _descriptor;
    protected TInterface Self { get; }
    protected RequestDescriptorBase`3(Func`2<RouteValues, RouteValues> pathSelector);
    protected TInterface get_Self();
    protected TDescriptor Assign(TValue value, Action`2<TInterface, TValue> assign);
    protected TDescriptor Qs(string name, object value);
    public TDescriptor RequestConfiguration(Func`2<RequestConfigurationDescriptor, IRequestConfiguration> configurationSelector);
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
    public TDescriptor ErrorTrace(Nullable`1<bool> errortrace);
    public TDescriptor FilterPath(String[] filterpath);
    public TDescriptor FilterPath(IEnumerable`1<string> filterpath);
    public TDescriptor Human(Nullable`1<bool> human);
    public TDescriptor Pretty(Nullable`1<bool> pretty);
    public TDescriptor SourceQueryString(string sourcequerystring);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.RequestMetaDataExtensions : object {
    [ExtensionAttribute]
internal static void AddHelper(RequestMetaData metaData, string helperValue);
    [ExtensionAttribute]
internal static void AddSnapshotHelper(RequestMetaData metaData);
    [ExtensionAttribute]
internal static void AddScrollHelper(RequestMetaData metaData);
    [ExtensionAttribute]
internal static void AddReindexHelper(RequestMetaData metaData);
    [ExtensionAttribute]
internal static void AddBulkHelper(RequestMetaData metaData);
    [ExtensionAttribute]
internal static void AddRestoreHelper(RequestMetaData metaData);
}
internal static class OpenSearch.Client.RequestMetaDataFactory : object {
    internal static RequestMetaData ReindexHelperRequestMetaData();
    internal static RequestMetaData ScrollHelperRequestMetaData();
    internal static RequestMetaData BulkHelperRequestMetaData();
    internal static RequestMetaData SnapshotHelperRequestMetaData();
    internal static RequestMetaData RestoreHelperRequestMetaData();
}
public class OpenSearch.Client.Rescore : object {
    [CompilerGeneratedAttribute]
private IRescoreQuery <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <WindowSize>k__BackingField;
    public IRescoreQuery Query { get; public set; }
    public Nullable`1<int> WindowSize { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IRescoreQuery get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(IRescoreQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_WindowSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WindowSize(Nullable`1<int> value);
}
public class OpenSearch.Client.RescoreDescriptor`1 : DescriptorBase`2<RescoreDescriptor`1<T>, IRescore> {
    [CompilerGeneratedAttribute]
private IRescoreQuery <OpenSearch.Client.IRescore.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IRescore.WindowSize>k__BackingField;
    private IRescoreQuery OpenSearch.Client.IRescore.Query { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IRescore.WindowSize { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IRescoreQuery OpenSearch.Client.IRescore.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRescore.set_Query(IRescoreQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IRescore.get_WindowSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRescore.set_WindowSize(Nullable`1<int> value);
    public virtual RescoreDescriptor`1<T> RescoreQuery(Func`2<RescoreQueryDescriptor`1<T>, IRescoreQuery> rescoreQuerySelector);
    public virtual RescoreDescriptor`1<T> WindowSize(Nullable`1<int> windowSize);
}
public class OpenSearch.Client.RescoreQuery : object {
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <QueryWeight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <RescoreQueryWeight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ScoreMode> <ScoreMode>k__BackingField;
    public QueryContainer Query { get; public set; }
    public Nullable`1<double> QueryWeight { get; public set; }
    public Nullable`1<double> RescoreQueryWeight { get; public set; }
    public Nullable`1<ScoreMode> ScoreMode { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_QueryWeight();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueryWeight(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_RescoreQueryWeight();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RescoreQueryWeight(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ScoreMode> get_ScoreMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScoreMode(Nullable`1<ScoreMode> value);
}
public class OpenSearch.Client.RescoreQueryDescriptor`1 : DescriptorBase`2<RescoreQueryDescriptor`1<T>, IRescoreQuery> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IRescoreQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IRescoreQuery.QueryWeight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IRescoreQuery.RescoreQueryWeight>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ScoreMode> <OpenSearch.Client.IRescoreQuery.ScoreMode>k__BackingField;
    private QueryContainer OpenSearch.Client.IRescoreQuery.Query { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IRescoreQuery.QueryWeight { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IRescoreQuery.RescoreQueryWeight { get; private set; }
    private Nullable`1<ScoreMode> OpenSearch.Client.IRescoreQuery.ScoreMode { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IRescoreQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRescoreQuery.set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IRescoreQuery.get_QueryWeight();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRescoreQuery.set_QueryWeight(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IRescoreQuery.get_RescoreQueryWeight();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRescoreQuery.set_RescoreQueryWeight(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<ScoreMode> OpenSearch.Client.IRescoreQuery.get_ScoreMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRescoreQuery.set_ScoreMode(Nullable`1<ScoreMode> value);
    public virtual RescoreQueryDescriptor`1<T> QueryWeight(Nullable`1<double> queryWeight);
    public virtual RescoreQueryDescriptor`1<T> RescoreQueryWeight(Nullable`1<double> rescoreQueryWeight);
    public virtual RescoreQueryDescriptor`1<T> ScoreMode(Nullable`1<ScoreMode> scoreMode);
    public virtual RescoreQueryDescriptor`1<T> Query(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> query);
}
public class OpenSearch.Client.RescoringDescriptor`1 : DescriptorPromiseBase`2<RescoringDescriptor`1<T>, IList`1<IRescore>> {
    public RescoringDescriptor`1<T> Rescore(Func`2<RescoreDescriptor`1<T>, IRescore> selector);
    private RescoringDescriptor`1<T> AddRescore(IRescore rescore);
}
internal abstract class OpenSearch.Client.ResolvableDictionaryFormatterBase`3 : object {
    public sealed virtual TDictionary Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TDictionary value, IJsonFormatterResolver formatterResolver);
    protected abstract virtual TDictionary Create(IConnectionSettingsValues settings, Dictionary`2<TKey, TValue> dictionary);
}
[DefaultMemberAttribute("Item")]
public class OpenSearch.Client.ResolvableDictionaryProxy`2 : object {
    private IConnectionConfigurationValues _connectionSettings;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, TValue> <BackingDictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<TKey, TValue> <Original>k__BackingField;
    public int Count { get; }
    public TValue Item { get; }
    public TValue Item { get; }
    public IEnumerable`1<TKey> Keys { get; }
    public IEnumerable`1<string> ResolvedKeys { get; }
    public IEnumerable`1<TValue> Values { get; }
    protected internal IReadOnlyDictionary`2<string, TValue> BackingDictionary { get; }
    private IReadOnlyDictionary`2<TKey, TValue> Original { get; }
    internal ResolvableDictionaryProxy`2(IConnectionConfigurationValues connectionSettings, IReadOnlyDictionary`2<TKey, TValue> backingDictionary);
    public sealed virtual int get_Count();
    public sealed virtual TValue get_Item(TKey key);
    public TValue get_Item(string key);
    public sealed virtual IEnumerable`1<TKey> get_Keys();
    public IEnumerable`1<string> get_ResolvedKeys();
    public sealed virtual IEnumerable`1<TValue> get_Values();
    [CompilerGeneratedAttribute]
protected internal IReadOnlyDictionary`2<string, TValue> get_BackingDictionary();
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<TKey, TValue> get_Original();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator();
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    private string Sanitize(TKey key);
}
internal class OpenSearch.Client.ResolvableDictionaryResponseFormatter`3 : object {
    public sealed virtual TResponse Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TResponse value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.ResolvableReadOnlyDictionaryFormatter`2 : ResolvableDictionaryFormatterBase`3<IReadOnlyDictionary`2<TKey, TValue>, TKey, TValue> {
    protected virtual IReadOnlyDictionary`2<TKey, TValue> Create(IConnectionSettingsValues settings, Dictionary`2<TKey, TValue> dictionary);
}
public class OpenSearch.Client.ResolvedAlias : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <Indices>k__BackingField;
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> Indices { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_Indices();
    [CompilerGeneratedAttribute]
internal void set_Indices(IReadOnlyCollection`1<string> value);
}
public class OpenSearch.Client.ResolvedIndex : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <Attributes>k__BackingField;
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> Aliases { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> Attributes { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_Aliases();
    [CompilerGeneratedAttribute]
internal void set_Aliases(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_Attributes();
    [CompilerGeneratedAttribute]
internal void set_Attributes(IReadOnlyCollection`1<string> value);
}
internal class OpenSearch.Client.ResolvedRouteValues : Dictionary`2<string, string> {
    internal static ResolvedRouteValues Empty;
    public ResolvedRouteValues(int size);
    private static ResolvedRouteValues();
}
public class OpenSearch.Client.ResolveIndexDescriptor : RequestDescriptorBase`3<ResolveIndexDescriptor, ResolveIndexRequestParameters, IResolveIndexRequest> {
    internal ApiUrls ApiUrls { get; }
    private Names OpenSearch.Client.IResolveIndexRequest.Name { get; }
    public ResolveIndexDescriptor(Names name);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IResolveIndexRequest.get_Name();
    public ResolveIndexDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
}
public class OpenSearch.Client.ResolveIndexRequest : PlainRequestBase`1<ResolveIndexRequestParameters> {
    protected IResolveIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.IResolveIndexRequest.Name { get; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public ResolveIndexRequest(Names name);
    protected IResolveIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Names OpenSearch.Client.IResolveIndexRequest.get_Name();
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
}
public class OpenSearch.Client.ResolveIndexResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ResolvedIndex> <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ResolvedAlias> <Aliases>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<ResolvedIndex> Indices { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ResolvedAlias> Aliases { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ResolvedIndex> get_Indices();
    [CompilerGeneratedAttribute]
internal void set_Indices(IReadOnlyCollection`1<ResolvedIndex> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ResolvedAlias> get_Aliases();
    [CompilerGeneratedAttribute]
internal void set_Aliases(IReadOnlyCollection`1<ResolvedAlias> value);
}
public abstract class OpenSearch.Client.ResponseBase : object {
    private Error _error;
    private IApiCallDetails _originalApiCall;
    private ServerError _serverError;
    private Nullable`1<int> _statusCode;
    public IApiCallDetails ApiCall { get; }
    public string DebugInformation { get; }
    public bool IsValid { get; }
    public Exception OriginalException { get; }
    public ServerError ServerError { get; }
    [DataMemberAttribute]
internal Error Error { get; internal set; }
    [DataMemberAttribute]
internal Nullable`1<int> StatusCode { get; internal set; }
    [IgnoreDataMemberAttribute]
private IApiCallDetails OpenSearch.Net.IOpenSearchResponse.ApiCall { get; private set; }
    public virtual IApiCallDetails get_ApiCall();
    public sealed virtual string get_DebugInformation();
    public virtual bool get_IsValid();
    public sealed virtual Exception get_OriginalException();
    public sealed virtual ServerError get_ServerError();
    internal Error get_Error();
    internal void set_Error(Error value);
    internal Nullable`1<int> get_StatusCode();
    internal void set_StatusCode(Nullable`1<int> value);
    private sealed virtual override IApiCallDetails OpenSearch.Net.IOpenSearchResponse.get_ApiCall();
    private sealed virtual override void OpenSearch.Net.IOpenSearchResponse.set_ApiCall(IApiCallDetails value);
    private sealed virtual override bool OpenSearch.Net.IOpenSearchResponse.TryGetServerErrorReason(String& reason);
    protected virtual void DebugIsValid(StringBuilder sb);
    public virtual string ToString();
}
[AttributeUsageAttribute("1024")]
internal class OpenSearch.Client.ResponseBuilderWithGeneric : Attribute {
    public ResponseBuilderWithGeneric(string pathToBuilder);
}
internal class OpenSearch.Client.ResponseFormatterHelpers : object {
    internal static AutomataDictionary ServerErrorFields;
    private static ResponseFormatterHelpers();
}
public class OpenSearch.Client.RestoreDescriptor : RequestDescriptorBase`3<RestoreDescriptor, RestoreRequestParameters, IRestoreRequest> {
    [CompilerGeneratedAttribute]
private List`1<string> <OpenSearch.Client.IRestoreRequest.IgnoreIndexSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRestoreRequest.IgnoreUnavailable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRestoreRequest.IncludeAliases>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRestoreRequest.IncludeGlobalState>k__BackingField;
    [CompilerGeneratedAttribute]
private IUpdateIndexSettingsRequest <OpenSearch.Client.IRestoreRequest.IndexSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Indices <OpenSearch.Client.IRestoreRequest.Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRestoreRequest.Partial>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IRestoreRequest.RenamePattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IRestoreRequest.RenameReplacement>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IRestoreRequest.RepositoryName { get; }
    private Name OpenSearch.Client.IRestoreRequest.Snapshot { get; }
    private List`1<string> OpenSearch.Client.IRestoreRequest.IgnoreIndexSettings { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IRestoreRequest.IgnoreUnavailable { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IRestoreRequest.IncludeAliases { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IRestoreRequest.IncludeGlobalState { get; private set; }
    private IUpdateIndexSettingsRequest OpenSearch.Client.IRestoreRequest.IndexSettings { get; private set; }
    private Indices OpenSearch.Client.IRestoreRequest.Indices { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IRestoreRequest.Partial { get; private set; }
    private string OpenSearch.Client.IRestoreRequest.RenamePattern { get; private set; }
    private string OpenSearch.Client.IRestoreRequest.RenameReplacement { get; private set; }
    public RestoreDescriptor(Name repository, Name snapshot);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IRestoreRequest.get_RepositoryName();
    private sealed virtual override Name OpenSearch.Client.IRestoreRequest.get_Snapshot();
    public RestoreDescriptor MasterTimeout(Time mastertimeout);
    public RestoreDescriptor ClusterManagerTimeout(Time timeout);
    public RestoreDescriptor WaitForCompletion(Nullable`1<bool> waitforcompletion);
    [CompilerGeneratedAttribute]
private sealed virtual override List`1<string> OpenSearch.Client.IRestoreRequest.get_IgnoreIndexSettings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRestoreRequest.set_IgnoreIndexSettings(List`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRestoreRequest.get_IgnoreUnavailable();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRestoreRequest.set_IgnoreUnavailable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRestoreRequest.get_IncludeAliases();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRestoreRequest.set_IncludeAliases(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRestoreRequest.get_IncludeGlobalState();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRestoreRequest.set_IncludeGlobalState(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IUpdateIndexSettingsRequest OpenSearch.Client.IRestoreRequest.get_IndexSettings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRestoreRequest.set_IndexSettings(IUpdateIndexSettingsRequest value);
    [CompilerGeneratedAttribute]
private sealed virtual override Indices OpenSearch.Client.IRestoreRequest.get_Indices();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRestoreRequest.set_Indices(Indices value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRestoreRequest.get_Partial();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRestoreRequest.set_Partial(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IRestoreRequest.get_RenamePattern();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRestoreRequest.set_RenamePattern(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IRestoreRequest.get_RenameReplacement();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRestoreRequest.set_RenameReplacement(string value);
    public RestoreDescriptor Index(IndexName index);
    public RestoreDescriptor Index();
    public RestoreDescriptor Indices(Indices indices);
    public RestoreDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreUnavailable);
    public RestoreDescriptor IncludeGlobalState(Nullable`1<bool> includeGlobalState);
    public RestoreDescriptor RenamePattern(string renamePattern);
    public RestoreDescriptor RenameReplacement(string renameReplacement);
    public RestoreDescriptor IndexSettings(Func`2<UpdateIndexSettingsDescriptor, IUpdateIndexSettingsRequest> settingsSelector);
    public RestoreDescriptor IgnoreIndexSettings(List`1<string> ignoreIndexSettings);
    public RestoreDescriptor IgnoreIndexSettings(String[] ignoreIndexSettings);
    public RestoreDescriptor IncludeAliases(Nullable`1<bool> includeAliases);
    public RestoreDescriptor Partial(Nullable`1<bool> partial);
}
public class OpenSearch.Client.RestoreErrorEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public Exception Exception { get; }
    public RestoreErrorEventArgs(Exception exception);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
}
public class OpenSearch.Client.RestoreRequest : PlainRequestBase`1<RestoreRequestParameters> {
    [CompilerGeneratedAttribute]
private List`1<string> <IgnoreIndexSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnavailable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeAliases>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeGlobalState>k__BackingField;
    [CompilerGeneratedAttribute]
private IUpdateIndexSettingsRequest <IndexSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Indices <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Partial>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RenamePattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RenameReplacement>k__BackingField;
    public List`1<string> IgnoreIndexSettings { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> IncludeAliases { get; public set; }
    public Nullable`1<bool> IncludeGlobalState { get; public set; }
    public IUpdateIndexSettingsRequest IndexSettings { get; public set; }
    public Indices Indices { get; public set; }
    public Nullable`1<bool> Partial { get; public set; }
    public string RenamePattern { get; public set; }
    public string RenameReplacement { get; public set; }
    protected IRestoreRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IRestoreRequest.RepositoryName { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IRestoreRequest.Snapshot { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<bool> WaitForCompletion { get; public set; }
    public RestoreRequest(Name repository, Name snapshot);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_IgnoreIndexSettings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreIndexSettings(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreUnavailable();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreUnavailable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeAliases();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeAliases(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeGlobalState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeGlobalState(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IUpdateIndexSettingsRequest get_IndexSettings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexSettings(IUpdateIndexSettingsRequest value);
    [CompilerGeneratedAttribute]
public sealed virtual Indices get_Indices();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Indices(Indices value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Partial();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Partial(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RenamePattern();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RenamePattern(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RenameReplacement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RenameReplacement(string value);
    protected IRestoreRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IRestoreRequest.get_RepositoryName();
    private sealed virtual override Name OpenSearch.Client.IRestoreRequest.get_Snapshot();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<bool> get_WaitForCompletion();
    public void set_WaitForCompletion(Nullable`1<bool> value);
}
[DataContractAttribute]
public class OpenSearch.Client.RestoreResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private SnapshotRestore <Snapshot>k__BackingField;
    [DataMemberAttribute]
public SnapshotRestore Snapshot { get; public set; }
    [CompilerGeneratedAttribute]
public SnapshotRestore get_Snapshot();
    [CompilerGeneratedAttribute]
public void set_Snapshot(SnapshotRestore value);
}
public class OpenSearch.Client.RestoreStatusHumbleObject : object {
    private IOpenSearchClient _opensearchClient;
    private string _renamePattern;
    private string _renameReplacement;
    private IRestoreRequest _restoreRequest;
    public RestoreStatusHumbleObject(IOpenSearchClient opensearchClient, IRestoreRequest restoreRequest);
}
[StringEnumAttribute]
public enum OpenSearch.Client.Result : Enum {
    public int value__;
    public static Result Error;
    [EnumMemberAttribute]
public static Result Created;
    [EnumMemberAttribute]
public static Result Updated;
    [EnumMemberAttribute]
public static Result Deleted;
    [EnumMemberAttribute]
public static Result NotFound;
    [EnumMemberAttribute]
public static Result Noop;
}
public class OpenSearch.Client.Retries : object {
    [CompilerGeneratedAttribute]
private long <Bulk>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Search>k__BackingField;
    [DataMemberAttribute]
public long Bulk { get; internal set; }
    [DataMemberAttribute]
public long Search { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Bulk();
    [CompilerGeneratedAttribute]
internal void set_Bulk(long value);
    [CompilerGeneratedAttribute]
public long get_Search();
    [CompilerGeneratedAttribute]
internal void set_Search(long value);
}
public class OpenSearch.Client.ReverseNestedAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Field <Path>k__BackingField;
    [DataMemberAttribute]
public Field Path { get; public set; }
    public ReverseNestedAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Path(Field value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.ReverseNestedAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<ReverseNestedAggregationDescriptor`1<T>, IReverseNestedAggregation, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IReverseNestedAggregation.Path>k__BackingField;
    private Field OpenSearch.Client.IReverseNestedAggregation.Path { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IReverseNestedAggregation.get_Path();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IReverseNestedAggregation.set_Path(Field value);
    public ReverseNestedAggregationDescriptor`1<T> Path(Field path);
    public ReverseNestedAggregationDescriptor`1<T> Path(Expression`1<Func`2<T, TValue>> path);
}
public class OpenSearch.Client.ReverseTokenFilter : TokenFilterBase {
}
public class OpenSearch.Client.ReverseTokenFilterDescriptor : TokenFilterDescriptorBase`2<ReverseTokenFilterDescriptor, IReverseTokenFilter> {
    protected string Type { get; }
    protected virtual string get_Type();
}
[StringEnumAttribute]
public enum OpenSearch.Client.RewriteMultiTerm : Enum {
    public int value__;
    [EnumMemberAttribute]
public static RewriteMultiTerm ConstantScore;
    [EnumMemberAttribute]
public static RewriteMultiTerm ScoringBoolean;
    [EnumMemberAttribute]
public static RewriteMultiTerm ConstantScoreBoolean;
    [EnumMemberAttribute]
public static RewriteMultiTerm TopTermsN;
    [EnumMemberAttribute]
public static RewriteMultiTerm TopTermsBoostN;
    [EnumMemberAttribute]
public static RewriteMultiTerm TopTermsBlendedFreqsN;
}
public class OpenSearch.Client.RolloverConditions : object {
    [CompilerGeneratedAttribute]
private Time <MaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxDocs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaxSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaxPrimaryShardSize>k__BackingField;
    public Time MaxAge { get; public set; }
    public Nullable`1<long> MaxDocs { get; public set; }
    public string MaxSize { get; public set; }
    public string MaxPrimaryShardSize { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Time get_MaxAge();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxAge(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MaxDocs();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxDocs(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MaxSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxSize(string value);
    [CompilerGeneratedAttribute]
public string get_MaxPrimaryShardSize();
    [CompilerGeneratedAttribute]
public void set_MaxPrimaryShardSize(string value);
}
public class OpenSearch.Client.RolloverConditionsDescriptor : DescriptorBase`2<RolloverConditionsDescriptor, IRolloverConditions> {
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IRolloverConditions.MaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IRolloverConditions.MaxDocs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IRolloverConditions.MaxSize>k__BackingField;
    private Time OpenSearch.Client.IRolloverConditions.MaxAge { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IRolloverConditions.MaxDocs { get; private set; }
    private string OpenSearch.Client.IRolloverConditions.MaxSize { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IRolloverConditions.get_MaxAge();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRolloverConditions.set_MaxAge(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IRolloverConditions.get_MaxDocs();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRolloverConditions.set_MaxDocs(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IRolloverConditions.get_MaxSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRolloverConditions.set_MaxSize(string value);
    public RolloverConditionsDescriptor MaxAge(Time maxAge);
    public RolloverConditionsDescriptor MaxDocs(Nullable`1<long> maxDocs);
    public RolloverConditionsDescriptor MaxSize(string maxSize);
}
public class OpenSearch.Client.RolloverIndexDescriptor : RequestDescriptorBase`3<RolloverIndexDescriptor, RolloverIndexRequestParameters, IRolloverIndexRequest> {
    [CompilerGeneratedAttribute]
private IAliases <OpenSearch.Client.IIndexState.Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IRolloverConditions <OpenSearch.Client.IRolloverIndexRequest.Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeMapping <OpenSearch.Client.IIndexState.Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <OpenSearch.Client.IIndexState.Settings>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IRolloverIndexRequest.Alias { get; }
    private IndexName OpenSearch.Client.IRolloverIndexRequest.NewIndex { get; }
    private IAliases OpenSearch.Client.IIndexState.Aliases { get; private set; }
    private IRolloverConditions OpenSearch.Client.IRolloverIndexRequest.Conditions { get; private set; }
    private ITypeMapping OpenSearch.Client.IIndexState.Mappings { get; private set; }
    private IIndexSettings OpenSearch.Client.IIndexState.Settings { get; private set; }
    public RolloverIndexDescriptor(Name alias);
    public RolloverIndexDescriptor(Name alias, IndexName newIndex);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IRolloverIndexRequest.get_Alias();
    private sealed virtual override IndexName OpenSearch.Client.IRolloverIndexRequest.get_NewIndex();
    public RolloverIndexDescriptor NewIndex(IndexName newIndex);
    public RolloverIndexDescriptor DryRun(Nullable`1<bool> dryrun);
    public RolloverIndexDescriptor IncludeTypeName(Nullable`1<bool> includetypename);
    public RolloverIndexDescriptor MasterTimeout(Time mastertimeout);
    public RolloverIndexDescriptor ClusterManagerTimeout(Time timeout);
    public RolloverIndexDescriptor Timeout(Time timeout);
    public RolloverIndexDescriptor WaitForActiveShards(string waitforactiveshards);
    [CompilerGeneratedAttribute]
private sealed virtual override IAliases OpenSearch.Client.IIndexState.get_Aliases();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndexState.set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
private sealed virtual override IRolloverConditions OpenSearch.Client.IRolloverIndexRequest.get_Conditions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRolloverIndexRequest.set_Conditions(IRolloverConditions value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITypeMapping OpenSearch.Client.IIndexState.get_Mappings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndexState.set_Mappings(ITypeMapping value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIndexSettings OpenSearch.Client.IIndexState.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IIndexState.set_Settings(IIndexSettings value);
    public RolloverIndexDescriptor Conditions(Func`2<RolloverConditionsDescriptor, IRolloverConditions> selector);
    public RolloverIndexDescriptor Settings(Func`2<IndexSettingsDescriptor, IPromise`1<IIndexSettings>> selector);
    public RolloverIndexDescriptor Map(Func`2<TypeMappingDescriptor`1<T>, ITypeMapping> selector);
    public RolloverIndexDescriptor Map(Func`2<TypeMappingDescriptor`1<object>, ITypeMapping> selector);
    [ObsoleteAttribute("Mappings is no longer a dictionary, please use the simplified Map() method on this descriptor instead")]
public RolloverIndexDescriptor Mappings(Func`2<MappingsDescriptor, ITypeMapping> selector);
    public RolloverIndexDescriptor Aliases(Func`2<AliasesDescriptor, IPromise`1<IAliases>> selector);
}
public class OpenSearch.Client.RolloverIndexRequest : PlainRequestBase`1<RolloverIndexRequestParameters> {
    [CompilerGeneratedAttribute]
private IAliases <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IRolloverConditions <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeMapping <Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <Settings>k__BackingField;
    public IAliases Aliases { get; public set; }
    public IRolloverConditions Conditions { get; public set; }
    public ITypeMapping Mappings { get; public set; }
    public IIndexSettings Settings { get; public set; }
    protected IRolloverIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IRolloverIndexRequest.Alias { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IRolloverIndexRequest.NewIndex { get; }
    public Nullable`1<bool> DryRun { get; public set; }
    public Nullable`1<bool> IncludeTypeName { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public RolloverIndexRequest(Name alias);
    public RolloverIndexRequest(Name alias, IndexName newIndex);
    [CompilerGeneratedAttribute]
public sealed virtual IAliases get_Aliases();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
public sealed virtual IRolloverConditions get_Conditions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Conditions(IRolloverConditions value);
    [CompilerGeneratedAttribute]
public sealed virtual ITypeMapping get_Mappings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mappings(ITypeMapping value);
    [CompilerGeneratedAttribute]
public sealed virtual IIndexSettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IIndexSettings value);
    protected IRolloverIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IRolloverIndexRequest.get_Alias();
    private sealed virtual override IndexName OpenSearch.Client.IRolloverIndexRequest.get_NewIndex();
    public Nullable`1<bool> get_DryRun();
    public void set_DryRun(Nullable`1<bool> value);
    public Nullable`1<bool> get_IncludeTypeName();
    public void set_IncludeTypeName(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
public class OpenSearch.Client.RolloverIndexResponse : AcknowledgedResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, bool> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DryRun>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OldIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RolledOver>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShardsAcknowledged>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, bool> Conditions { get; internal set; }
    [DataMemberAttribute]
public bool DryRun { get; internal set; }
    [DataMemberAttribute]
public string NewIndex { get; internal set; }
    [DataMemberAttribute]
public string OldIndex { get; internal set; }
    [DataMemberAttribute]
public bool RolledOver { get; internal set; }
    [DataMemberAttribute]
public bool ShardsAcknowledged { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, bool> get_Conditions();
    [CompilerGeneratedAttribute]
internal void set_Conditions(IReadOnlyDictionary`2<string, bool> value);
    [CompilerGeneratedAttribute]
public bool get_DryRun();
    [CompilerGeneratedAttribute]
internal void set_DryRun(bool value);
    [CompilerGeneratedAttribute]
public string get_NewIndex();
    [CompilerGeneratedAttribute]
internal void set_NewIndex(string value);
    [CompilerGeneratedAttribute]
public string get_OldIndex();
    [CompilerGeneratedAttribute]
internal void set_OldIndex(string value);
    [CompilerGeneratedAttribute]
public bool get_RolledOver();
    [CompilerGeneratedAttribute]
internal void set_RolledOver(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShardsAcknowledged();
    [CompilerGeneratedAttribute]
internal void set_ShardsAcknowledged(bool value);
}
public class OpenSearch.Client.RootNodeInfoDescriptor : RequestDescriptorBase`3<RootNodeInfoDescriptor, RootNodeInfoRequestParameters, IRootNodeInfoRequest> {
    internal ApiUrls ApiUrls { get; }
    internal virtual ApiUrls get_ApiUrls();
}
public class OpenSearch.Client.RootNodeInfoRequest : PlainRequestBase`1<RootNodeInfoRequestParameters> {
    protected IRootNodeInfoRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    protected IRootNodeInfoRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
}
[DataContractAttribute]
public class OpenSearch.Client.RootNodeInfoResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterUUID>k__BackingField;
    [CompilerGeneratedAttribute]
private OpenSearchVersionInfo <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tagline>k__BackingField;
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public string ClusterName { get; internal set; }
    [DataMemberAttribute]
public string ClusterUUID { get; internal set; }
    [DataMemberAttribute]
public OpenSearchVersionInfo Version { get; internal set; }
    [DataMemberAttribute]
public string Tagline { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
internal void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public string get_ClusterUUID();
    [CompilerGeneratedAttribute]
internal void set_ClusterUUID(string value);
    [CompilerGeneratedAttribute]
public OpenSearchVersionInfo get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(OpenSearchVersionInfo value);
    [CompilerGeneratedAttribute]
public string get_Tagline();
    [CompilerGeneratedAttribute]
internal void set_Tagline(string value);
}
public class OpenSearch.Client.RouteValues : Dictionary`2<string, IUrlParameter> {
    [CompilerGeneratedAttribute]
private bool <ContainsId>k__BackingField;
    internal bool ContainsId { get; private set; }
    [CompilerGeneratedAttribute]
internal bool get_ContainsId();
    [CompilerGeneratedAttribute]
private void set_ContainsId(bool value);
    internal ResolvedRouteValues Resolve(IConnectionSettingsValues configurationValues);
    private RouteValues Route(string name, IUrlParameter routeValue, bool required);
    private static bool IsId(string key);
    internal RouteValues Required(string route, IUrlParameter value);
    internal RouteValues Optional(string route, IUrlParameter value);
    internal RouteValues Optional(string route, Metrics value);
    internal RouteValues Optional(string route, IndexMetrics value);
    internal TActual Get(string route);
}
[JsonFormatterAttribute("OpenSearch.Client.RoutingFormatter")]
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
public class OpenSearch.Client.Routing : object {
    private static Char[] Separator;
    [CompilerGeneratedAttribute]
private object <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<object> <DocumentGetter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LongValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringValue>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private static int <TypeHashCode>k__BackingField;
    internal object Document { get; }
    internal Func`1<object> DocumentGetter { get; }
    internal Nullable`1<long> LongValue { get; }
    internal string StringOrLongValue { get; }
    internal string StringValue { get; }
    internal int Tag { get; }
    private string DebugDisplay { get; }
    private static int TypeHashCode { get; }
    internal Routing(Func`1<object> documentGetter);
    public Routing(string routing);
    public Routing(long routing);
    public Routing(object document);
    private static Routing();
    [CompilerGeneratedAttribute]
internal object get_Document();
    [CompilerGeneratedAttribute]
internal Func`1<object> get_DocumentGetter();
    [CompilerGeneratedAttribute]
internal Nullable`1<long> get_LongValue();
    internal string get_StringOrLongValue();
    [CompilerGeneratedAttribute]
internal string get_StringValue();
    [CompilerGeneratedAttribute]
internal int get_Tag();
    private string get_DebugDisplay();
    public virtual string ToString();
    [CompilerGeneratedAttribute]
private static int get_TypeHashCode();
    public sealed virtual bool Equals(Routing other);
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public static Routing op_Implicit(string routing);
    public static Routing op_Implicit(String[] routing);
    public static Routing op_Implicit(long routing);
    public static Routing op_Implicit(Guid routing);
    public static Routing From(T document);
    private string GetString(IConnectionSettingsValues oscSettings);
    public static bool op_Equality(Routing left, Routing right);
    public static bool op_Inequality(Routing left, Routing right);
    private static bool StringEquals(string left, string right);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    internal bool ShouldSerialize(IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.RoutingField : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Required>k__BackingField;
    public Nullable`1<bool> Required { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Required();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Required(Nullable`1<bool> value);
}
public class OpenSearch.Client.RoutingFieldDescriptor`1 : DescriptorBase`2<RoutingFieldDescriptor`1<T>, IRoutingField> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IRoutingField.Required>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.IRoutingField.Required { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IRoutingField.get_Required();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRoutingField.set_Required(Nullable`1<bool> value);
    public RoutingFieldDescriptor`1<T> Required(Nullable`1<bool> required);
}
internal class OpenSearch.Client.RoutingFormatter : object {
    public sealed virtual Routing Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Routing value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.RoutingResolver : object {
    private static ConcurrentDictionary`2<Type, Func`2<object, JoinField>> PropertyGetDelegates;
    private static MethodInfo MakeDelegateMethodInfo;
    private IConnectionSettingsValues _connectionSettings;
    private IdResolver _idResolver;
    private ConcurrentDictionary`2<Type, Func`2<object, string>> _localRouteDelegates;
    public RoutingResolver(IConnectionSettingsValues connectionSettings, IdResolver idResolver);
    private static RoutingResolver();
    private PropertyInfo GetPropertyCaseInsensitive(Type type, string fieldName);
    internal static Func`2<object, object> MakeDelegate(MethodInfo get);
    public string Resolve(T object);
    public string Resolve(Type type, object object);
    private bool TryConnectionSettingsRoute(Type type, object object, String& route);
    private string ResolveId(Id id, IConnectionSettingsValues oscSettings);
    private static JoinField GetJoinFieldFromObject(Type type, object object);
    private static Func`2<object, object> CreateGetterFunc(Type type, PropertyInfo joinProperty);
    private static PropertyInfo GetJoinFieldProperty(Type type);
}
public class OpenSearch.Client.RuntimeField : object {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private IStoredScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private FieldType <Type>k__BackingField;
    public string Format { get; public set; }
    public IStoredScript Script { get; public set; }
    public FieldType Type { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IStoredScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IStoredScript value);
    [CompilerGeneratedAttribute]
public sealed virtual FieldType get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(FieldType value);
}
public class OpenSearch.Client.RuntimeFieldDescriptor : DescriptorBase`2<RuntimeFieldDescriptor, IRuntimeField> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IRuntimeField.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private IStoredScript <OpenSearch.Client.IRuntimeField.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private FieldType <OpenSearch.Client.IRuntimeField.Type>k__BackingField;
    private string OpenSearch.Client.IRuntimeField.Format { get; private set; }
    private IStoredScript OpenSearch.Client.IRuntimeField.Script { get; private set; }
    private FieldType OpenSearch.Client.IRuntimeField.Type { get; private set; }
    public RuntimeFieldDescriptor(FieldType fieldType);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IRuntimeField.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRuntimeField.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IStoredScript OpenSearch.Client.IRuntimeField.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRuntimeField.set_Script(IStoredScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override FieldType OpenSearch.Client.IRuntimeField.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRuntimeField.set_Type(FieldType value);
    public RuntimeFieldDescriptor Format(string format);
    public RuntimeFieldDescriptor Script(IStoredScript script);
    public RuntimeFieldDescriptor Script(string source);
}
public class OpenSearch.Client.RuntimeFields : IsADictionaryBase`2<Field, IRuntimeField> {
    public RuntimeFields(IDictionary`2<Field, IRuntimeField> container);
    public RuntimeFields(Dictionary`2<Field, IRuntimeField> container);
    public sealed virtual void Add(Field name, IRuntimeField runtimeField);
}
public class OpenSearch.Client.RuntimeFieldsDescriptor`1 : IsADictionaryDescriptorBase`4<RuntimeFieldsDescriptor`1<TDocument>, RuntimeFields, Field, IRuntimeField> {
    public RuntimeFieldsDescriptor`1<TDocument> RuntimeField(string name, FieldType type, Func`2<RuntimeFieldDescriptor, IRuntimeField> selector);
    public RuntimeFieldsDescriptor`1<TDocument> RuntimeField(Expression`1<Func`2<TDocument, Field>> field, FieldType type, Func`2<RuntimeFieldDescriptor, IRuntimeField> selector);
    public RuntimeFieldsDescriptor`1<TDocument> RuntimeField(string name, FieldType type);
    public RuntimeFieldsDescriptor`1<TDocument> RuntimeField(Expression`1<Func`2<TDocument, Field>> field, FieldType type);
}
public class OpenSearch.Client.S3Repository : object {
    [CompilerGeneratedAttribute]
private IS3RepositorySettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public IS3RepositorySettings Settings { get; public set; }
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    public string Type { get; }
    public S3Repository(IS3RepositorySettings settings);
    [CompilerGeneratedAttribute]
public sealed virtual IS3RepositorySettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IS3RepositorySettings value);
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
}
public class OpenSearch.Client.S3RepositoryDescriptor : DescriptorBase`2<S3RepositoryDescriptor, IS3Repository> {
    [CompilerGeneratedAttribute]
private IS3RepositorySettings <OpenSearch.Client.IRepository<OpenSearch.Client.IS3RepositorySettings>.Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISnapshotRepository.Type>k__BackingField;
    private IS3RepositorySettings OpenSearch.Client.IRepository<OpenSearch.Client.IS3RepositorySettings>.Settings { get; private set; }
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    private string OpenSearch.Client.ISnapshotRepository.Type { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IS3RepositorySettings OpenSearch.Client.IRepository<OpenSearch.Client.IS3RepositorySettings>.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IRepository<OpenSearch.Client.IS3RepositorySettings>.set_Settings(IS3RepositorySettings value);
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISnapshotRepository.get_Type();
    public S3RepositoryDescriptor Settings(string bucket, Func`2<S3RepositorySettingsDescriptor, IS3RepositorySettings> settingsSelector);
}
public class OpenSearch.Client.S3RepositorySettings : object {
    [CompilerGeneratedAttribute]
private string <BasePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Bucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CannedAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ServerSideEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageClass>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PathStyleAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableChunkedEncoding>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaxRestoreBytesPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaxSnapshotBytesPerSecond>k__BackingField;
    public string BasePath { get; public set; }
    public string Bucket { get; public set; }
    public string BufferSize { get; public set; }
    public string CannedAcl { get; public set; }
    public string ChunkSize { get; public set; }
    public string Client { get; public set; }
    public Nullable`1<bool> Compress { get; public set; }
    public Nullable`1<bool> ServerSideEncryption { get; public set; }
    public string StorageClass { get; public set; }
    public Nullable`1<bool> PathStyleAccess { get; public set; }
    public Nullable`1<bool> DisableChunkedEncoding { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    public string MaxRestoreBytesPerSecond { get; public set; }
    public string MaxSnapshotBytesPerSecond { get; public set; }
    public S3RepositorySettings(string bucket);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BasePath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BasePath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Bucket();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Bucket(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BufferSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BufferSize(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CannedAcl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CannedAcl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChunkSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChunkSize(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Client();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Client(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Compress();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ServerSideEncryption();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ServerSideEncryption(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_StorageClass();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StorageClass(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PathStyleAccess();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PathStyleAccess(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DisableChunkedEncoding();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisableChunkedEncoding(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ReadOnly();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ReadOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MaxRestoreBytesPerSecond();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxRestoreBytesPerSecond(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MaxSnapshotBytesPerSecond();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxSnapshotBytesPerSecond(string value);
}
public class OpenSearch.Client.S3RepositorySettingsDescriptor : DescriptorBase`2<S3RepositorySettingsDescriptor, IS3RepositorySettings> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IS3RepositorySettings.BasePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IS3RepositorySettings.Bucket>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IS3RepositorySettings.BufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IS3RepositorySettings.CannedAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IS3RepositorySettings.ChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IS3RepositorySettings.Client>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IS3RepositorySettings.Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IS3RepositorySettings.ServerSideEncryption>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IS3RepositorySettings.StorageClass>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IS3RepositorySettings.PathStyleAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IS3RepositorySettings.DisableChunkedEncoding>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IS3RepositorySettings.ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IS3RepositorySettings.MaxRestoreBytesPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IS3RepositorySettings.MaxSnapshotBytesPerSecond>k__BackingField;
    private string OpenSearch.Client.IS3RepositorySettings.BasePath { get; private set; }
    private string OpenSearch.Client.IS3RepositorySettings.Bucket { get; private set; }
    private string OpenSearch.Client.IS3RepositorySettings.BufferSize { get; private set; }
    private string OpenSearch.Client.IS3RepositorySettings.CannedAcl { get; private set; }
    private string OpenSearch.Client.IS3RepositorySettings.ChunkSize { get; private set; }
    private string OpenSearch.Client.IS3RepositorySettings.Client { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IS3RepositorySettings.Compress { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IS3RepositorySettings.ServerSideEncryption { get; private set; }
    private string OpenSearch.Client.IS3RepositorySettings.StorageClass { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IS3RepositorySettings.PathStyleAccess { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IS3RepositorySettings.DisableChunkedEncoding { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IS3RepositorySettings.ReadOnly { get; private set; }
    private string OpenSearch.Client.IS3RepositorySettings.MaxRestoreBytesPerSecond { get; private set; }
    private string OpenSearch.Client.IS3RepositorySettings.MaxSnapshotBytesPerSecond { get; private set; }
    public S3RepositorySettingsDescriptor(string bucket);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IS3RepositorySettings.get_BasePath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_BasePath(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IS3RepositorySettings.get_Bucket();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_Bucket(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IS3RepositorySettings.get_BufferSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_BufferSize(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IS3RepositorySettings.get_CannedAcl();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_CannedAcl(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IS3RepositorySettings.get_ChunkSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_ChunkSize(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IS3RepositorySettings.get_Client();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_Client(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IS3RepositorySettings.get_Compress();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IS3RepositorySettings.get_ServerSideEncryption();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_ServerSideEncryption(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IS3RepositorySettings.get_StorageClass();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_StorageClass(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IS3RepositorySettings.get_PathStyleAccess();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_PathStyleAccess(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IS3RepositorySettings.get_DisableChunkedEncoding();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_DisableChunkedEncoding(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IS3RepositorySettings.get_ReadOnly();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_ReadOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IS3RepositorySettings.get_MaxRestoreBytesPerSecond();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_MaxRestoreBytesPerSecond(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IS3RepositorySettings.get_MaxSnapshotBytesPerSecond();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IS3RepositorySettings.set_MaxSnapshotBytesPerSecond(string value);
    public S3RepositorySettingsDescriptor Bucket(string bucket);
    public S3RepositorySettingsDescriptor Client(string client);
    public S3RepositorySettingsDescriptor BasePath(string basePath);
    public S3RepositorySettingsDescriptor Compress(Nullable`1<bool> compress);
    public S3RepositorySettingsDescriptor ChunkSize(string chunkSize);
    public S3RepositorySettingsDescriptor ServerSideEncryption(Nullable`1<bool> serverSideEncryption);
    public S3RepositorySettingsDescriptor BufferSize(string bufferSize);
    public S3RepositorySettingsDescriptor CannedAcl(string cannedAcl);
    public S3RepositorySettingsDescriptor StorageClass(string storageClass);
    public S3RepositorySettingsDescriptor PathStyleAccess(Nullable`1<bool> pathStyleAccess);
    public S3RepositorySettingsDescriptor DisableChunkedEncoding(Nullable`1<bool> disableChunkedEncoding);
    public S3RepositorySettingsDescriptor ReadOnly(Nullable`1<bool> readOnly);
    public S3RepositorySettingsDescriptor MaxRestoreBytesPerSecond(string maxRestoreBytesPerSecond);
    public S3RepositorySettingsDescriptor MaxSnapshotBytesPerSecond(string maxSnapshotBytesPerSecond);
}
public class OpenSearch.Client.SamplerAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardSize>k__BackingField;
    public Nullable`1<int> ShardSize { get; public set; }
    public SamplerAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardSize(Nullable`1<int> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.SamplerAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<SamplerAggregationDescriptor`1<T>, ISamplerAggregation, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISamplerAggregation.ShardSize>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.ISamplerAggregation.ShardSize { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISamplerAggregation.get_ShardSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISamplerAggregation.set_ShardSize(Nullable`1<int> value);
    public SamplerAggregationDescriptor`1<T> ShardSize(Nullable`1<int> shardSize);
}
[StringEnumAttribute]
public enum OpenSearch.Client.SamplerAggregationExecutionHint : Enum {
    public int value__;
    [EnumMemberAttribute]
public static SamplerAggregationExecutionHint Map;
    [EnumMemberAttribute]
public static SamplerAggregationExecutionHint GlobalOrdinals;
    [EnumMemberAttribute]
public static SamplerAggregationExecutionHint BytesHash;
}
internal class OpenSearch.Client.ScoreFunctionJsonFormatter : object {
    private static AutomataDictionary AutomataDictionary;
    private static ScoreFunctionJsonFormatter();
    public sealed virtual IScoreFunction Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IScoreFunction value, IJsonFormatterResolver formatterResolver);
    private static void WriteScriptScore(JsonWriter& writer, IScriptScoreFunction value, IJsonFormatterResolver formatterResolver);
    private static void WriteRandomScore(JsonWriter& writer, IRandomScoreFunction value, IJsonFormatterResolver formatterResolver);
    private static void WriteFieldValueFactor(JsonWriter& writer, IFieldValueFactorFunction value, IJsonFormatterResolver formatterResolver);
    private void WriteDecay(JsonWriter& writer, IDecayFunction decay, IJsonFormatterResolver formatterResolver);
    private static void WriteNumericDecay(JsonWriter& writer, Boolean& written, IDecayFunction`2<Nullable`1<double>, Nullable`1<double>> value);
    private static void WriteDateDecay(JsonWriter& writer, Boolean& written, IDecayFunction`2<DateMath, Time> value, IJsonFormatterResolver formatterResolver);
    private static void WriteGeoDecay(JsonWriter& writer, Boolean& written, IDecayFunction`2<GeoLocation, Distance> value, IJsonFormatterResolver formatterResolver);
    private static IDecayFunction ReadDecayFunction(JsonReader& reader, string type, IJsonFormatterResolver formatterResolver);
    private static TDecayFunction Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.ScoreFunctionsDescriptor`1 : DescriptorPromiseBase`2<ScoreFunctionsDescriptor`1<T>, IList`1<IScoreFunction>> {
    public ScoreFunctionsDescriptor`1<T> Gauss(Func`2<GaussDecayFunctionDescriptor`3<Nullable`1<double>, Nullable`1<double>, T>, IDecayFunction`2<Nullable`1<double>, Nullable`1<double>>> selector);
    public ScoreFunctionsDescriptor`1<T> GaussDate(Func`2<GaussDecayFunctionDescriptor`3<DateMath, Time, T>, IDecayFunction`2<DateMath, Time>> selector);
    public ScoreFunctionsDescriptor`1<T> GaussGeoLocation(Func`2<GaussDecayFunctionDescriptor`3<GeoLocation, Distance, T>, IDecayFunction`2<GeoLocation, Distance>> selector);
    public ScoreFunctionsDescriptor`1<T> Linear(Func`2<LinearDecayFunctionDescriptor`3<Nullable`1<double>, Nullable`1<double>, T>, IDecayFunction`2<Nullable`1<double>, Nullable`1<double>>> selector);
    public ScoreFunctionsDescriptor`1<T> LinearDate(Func`2<LinearDecayFunctionDescriptor`3<DateMath, Time, T>, IDecayFunction`2<DateMath, Time>> selector);
    public ScoreFunctionsDescriptor`1<T> LinearGeoLocation(Func`2<LinearDecayFunctionDescriptor`3<GeoLocation, Distance, T>, IDecayFunction`2<GeoLocation, Distance>> selector);
    public ScoreFunctionsDescriptor`1<T> Exponential(Func`2<ExponentialDecayFunctionDescriptor`3<Nullable`1<double>, Nullable`1<double>, T>, IDecayFunction`2<Nullable`1<double>, Nullable`1<double>>> selector);
    public ScoreFunctionsDescriptor`1<T> ExponentialDate(Func`2<ExponentialDecayFunctionDescriptor`3<DateMath, Time, T>, IDecayFunction`2<DateMath, Time>> selector);
    public ScoreFunctionsDescriptor`1<T> ExponentialGeoLocation(Func`2<ExponentialDecayFunctionDescriptor`3<GeoLocation, Distance, T>, IDecayFunction`2<GeoLocation, Distance>> selector);
    public ScoreFunctionsDescriptor`1<T> ScriptScore(Func`2<ScriptScoreFunctionDescriptor`1<T>, IScriptScoreFunction> selector);
    public ScoreFunctionsDescriptor`1<T> FieldValueFactor(Func`2<FieldValueFactorFunctionDescriptor`1<T>, IFieldValueFactorFunction> selector);
    public ScoreFunctionsDescriptor`1<T> RandomScore(Func`2<RandomScoreFunctionDescriptor`1<T>, IRandomScoreFunction> selector);
    public ScoreFunctionsDescriptor`1<T> Weight(Func`2<WeightFunctionDescriptor`1<T>, IWeightFunction> selector);
    public ScoreFunctionsDescriptor`1<T> Weight(double weight);
}
[StringEnumAttribute]
public enum OpenSearch.Client.ScoreMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ScoreMode Average;
    [EnumMemberAttribute]
public static ScoreMode Max;
    [EnumMemberAttribute]
public static ScoreMode Min;
    [EnumMemberAttribute]
public static ScoreMode Multiply;
    [EnumMemberAttribute]
public static ScoreMode Total;
}
public abstract class OpenSearch.Client.ScriptBase : object {
    [CompilerGeneratedAttribute]
private string <Lang>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Params>k__BackingField;
    public string Lang { get; public set; }
    public Dictionary`2<string, object> Params { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Lang();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lang(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, object> get_Params();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Params(Dictionary`2<string, object> value);
    public static ScriptBase op_Implicit(string script);
}
[DataContractAttribute]
public class OpenSearch.Client.ScriptCacheStats : object {
    [CompilerGeneratedAttribute]
private ScriptStats <Sum>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ContextScriptStats> <Contexts>k__BackingField;
    [DataMemberAttribute]
public ScriptStats Sum { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ContextScriptStats> Contexts { get; internal set; }
    [CompilerGeneratedAttribute]
public ScriptStats get_Sum();
    [CompilerGeneratedAttribute]
internal void set_Sum(ScriptStats value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ContextScriptStats> get_Contexts();
    [CompilerGeneratedAttribute]
internal void set_Contexts(IReadOnlyCollection`1<ContextScriptStats> value);
}
public class OpenSearch.Client.ScriptDescriptor : DescriptorBase`2<ScriptDescriptor, IDescriptor> {
    public IndexedScriptDescriptor Id(string id);
    public InlineScriptDescriptor Source(string script);
}
public abstract class OpenSearch.Client.ScriptDescriptorBase`2 : DescriptorBase`2<TDescriptor, TInterface> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IScript.Lang>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <OpenSearch.Client.IScript.Params>k__BackingField;
    private string OpenSearch.Client.IScript.Lang { get; private set; }
    private Dictionary`2<string, object> OpenSearch.Client.IScript.Params { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IScript.get_Lang();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScript.set_Lang(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Dictionary`2<string, object> OpenSearch.Client.IScript.get_Params();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScript.set_Params(Dictionary`2<string, object> value);
    public TDescriptor Params(Dictionary`2<string, object> scriptParams);
    public TDescriptor Params(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> paramsDictionary);
    public TDescriptor Lang(string lang);
    public TDescriptor Lang(ScriptLang lang);
}
public class OpenSearch.Client.ScriptedHeuristic : object {
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public IScript Script { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
}
public class OpenSearch.Client.ScriptedHeuristicDescriptor : DescriptorBase`2<ScriptedHeuristicDescriptor, IScriptedHeuristic> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IScriptedHeuristic.Script>k__BackingField;
    private IScript OpenSearch.Client.IScriptedHeuristic.Script { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IScriptedHeuristic.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptedHeuristic.set_Script(IScript value);
    public ScriptedHeuristicDescriptor Script(string script);
    public ScriptedHeuristicDescriptor Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
}
public class OpenSearch.Client.ScriptedMetricAggregate : MetricAggregateBase {
    private object _value;
    internal ScriptedMetricAggregate(object value);
    public T Value();
}
public class OpenSearch.Client.ScriptedMetricAggregation : MetricAggregationBase {
    [CompilerGeneratedAttribute]
private IScript <CombineScript>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <InitScript>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <MapScript>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Params>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <ReduceScript>k__BackingField;
    public IScript CombineScript { get; public set; }
    public IScript InitScript { get; public set; }
    public IScript MapScript { get; public set; }
    public IDictionary`2<string, object> Params { get; public set; }
    public IScript ReduceScript { get; public set; }
    public ScriptedMetricAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_CombineScript();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CombineScript(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_InitScript();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InitScript(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_MapScript();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MapScript(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Params();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Params(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_ReduceScript();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ReduceScript(IScript value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.ScriptedMetricAggregationDescriptor`1 : MetricAggregationDescriptorBase`3<ScriptedMetricAggregationDescriptor`1<T>, IScriptedMetricAggregation, T> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IScriptedMetricAggregation.CombineScript>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IScriptedMetricAggregation.InitScript>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IScriptedMetricAggregation.MapScript>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IScriptedMetricAggregation.Params>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IScriptedMetricAggregation.ReduceScript>k__BackingField;
    private IScript OpenSearch.Client.IScriptedMetricAggregation.CombineScript { get; private set; }
    private IScript OpenSearch.Client.IScriptedMetricAggregation.InitScript { get; private set; }
    private IScript OpenSearch.Client.IScriptedMetricAggregation.MapScript { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IScriptedMetricAggregation.Params { get; private set; }
    private IScript OpenSearch.Client.IScriptedMetricAggregation.ReduceScript { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IScriptedMetricAggregation.get_CombineScript();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptedMetricAggregation.set_CombineScript(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IScriptedMetricAggregation.get_InitScript();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptedMetricAggregation.set_InitScript(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IScriptedMetricAggregation.get_MapScript();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptedMetricAggregation.set_MapScript(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IScriptedMetricAggregation.get_Params();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptedMetricAggregation.set_Params(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IScriptedMetricAggregation.get_ReduceScript();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptedMetricAggregation.set_ReduceScript(IScript value);
    public ScriptedMetricAggregationDescriptor`1<T> InitScript(string script);
    public ScriptedMetricAggregationDescriptor`1<T> InitScript(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public ScriptedMetricAggregationDescriptor`1<T> MapScript(string script);
    public ScriptedMetricAggregationDescriptor`1<T> MapScript(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public ScriptedMetricAggregationDescriptor`1<T> CombineScript(string script);
    public ScriptedMetricAggregationDescriptor`1<T> CombineScript(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public ScriptedMetricAggregationDescriptor`1<T> ReduceScript(string script);
    public ScriptedMetricAggregationDescriptor`1<T> ReduceScript(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public ScriptedMetricAggregationDescriptor`1<T> Params(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> paramSelector);
}
public class OpenSearch.Client.ScriptedSimilarity : object {
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public IScript Script { get; public set; }
    public string Type { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    public sealed virtual string get_Type();
}
public class OpenSearch.Client.ScriptedSimilarityDescriptor : DescriptorBase`2<ScriptedSimilarityDescriptor, IScriptedSimilarity> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IScriptedSimilarity.Script>k__BackingField;
    private IScript OpenSearch.Client.IScriptedSimilarity.Script { get; private set; }
    private string OpenSearch.Client.ISimilarity.Type { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IScriptedSimilarity.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptedSimilarity.set_Script(IScript value);
    private sealed virtual override string OpenSearch.Client.ISimilarity.get_Type();
    public ScriptedSimilarityDescriptor Script(Func`2<ScriptDescriptor, IScript> selector);
}
public class OpenSearch.Client.ScriptField : object {
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public IScript Script { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
}
public class OpenSearch.Client.ScriptFieldDescriptor : DescriptorBase`2<ScriptFieldDescriptor, IScriptField> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IScriptField.Script>k__BackingField;
    private IScript OpenSearch.Client.IScriptField.Script { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IScriptField.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptField.set_Script(IScript value);
    public ScriptFieldDescriptor Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
}
public class OpenSearch.Client.ScriptFields : IsADictionaryBase`2<string, IScriptField> {
    public ScriptFields(IDictionary`2<string, IScriptField> container);
    public ScriptFields(Dictionary`2<string, IScriptField> container);
    public sealed virtual void Add(string name, IScriptField script);
    public void Add(string name, IScript script);
}
public class OpenSearch.Client.ScriptFieldsDescriptor : IsADictionaryDescriptorBase`4<ScriptFieldsDescriptor, IScriptFields, string, IScriptField> {
    public ScriptFieldsDescriptor ScriptField(string name, Func`2<ScriptDescriptor, IScript> selector);
    private static IScriptField ToScript(IScript script);
}
internal class OpenSearch.Client.ScriptFormatter : object {
    private static AutomataDictionary AutomataDictionary;
    private static ScriptFormatter();
    public sealed virtual IScript Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IScript value, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.ScriptLang : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ScriptLang Painless;
    [EnumMemberAttribute]
public static ScriptLang Expression;
    [EnumMemberAttribute]
public static ScriptLang Mustache;
}
public class OpenSearch.Client.ScriptProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Lang>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Params>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    public string Id { get; public set; }
    public string Lang { get; public set; }
    public Dictionary`2<string, object> Params { get; public set; }
    public string Source { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Lang();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lang(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, object> get_Params();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Params(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(string value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.ScriptProcessorDescriptor : ProcessorDescriptorBase`2<ScriptProcessorDescriptor, IScriptProcessor> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IScriptProcessor.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IScriptProcessor.Lang>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <OpenSearch.Client.IScriptProcessor.Params>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IScriptProcessor.Source>k__BackingField;
    protected string Name { get; }
    private string OpenSearch.Client.IScriptProcessor.Id { get; private set; }
    private string OpenSearch.Client.IScriptProcessor.Lang { get; private set; }
    private Dictionary`2<string, object> OpenSearch.Client.IScriptProcessor.Params { get; private set; }
    private string OpenSearch.Client.IScriptProcessor.Source { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IScriptProcessor.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptProcessor.set_Id(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IScriptProcessor.get_Lang();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptProcessor.set_Lang(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Dictionary`2<string, object> OpenSearch.Client.IScriptProcessor.get_Params();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptProcessor.set_Params(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IScriptProcessor.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptProcessor.set_Source(string value);
    public ScriptProcessorDescriptor Lang(string lang);
    public ScriptProcessorDescriptor Id(string id);
    public ScriptProcessorDescriptor Source(string source);
    public ScriptProcessorDescriptor Params(Dictionary`2<string, object> scriptParams);
    public ScriptProcessorDescriptor Params(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> paramsSelector);
}
public class OpenSearch.Client.ScriptQuery : QueryBase {
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public IScript Script { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IScriptQuery q);
}
public class OpenSearch.Client.ScriptQueryDescriptor`1 : QueryDescriptorBase`2<ScriptQueryDescriptor`1<T>, IScriptQuery> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IScriptQuery.Script>k__BackingField;
    protected bool Conditionless { get; }
    private IScript OpenSearch.Client.IScriptQuery.Script { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IScriptQuery.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptQuery.set_Script(IScript value);
    public ScriptQueryDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> selector);
}
public class OpenSearch.Client.ScriptScoreFunction : FunctionScoreFunctionBase {
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public IScript Script { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
}
public class OpenSearch.Client.ScriptScoreFunctionDescriptor`1 : FunctionScoreFunctionDescriptorBase`3<ScriptScoreFunctionDescriptor`1<T>, IScriptScoreFunction, T> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IScriptScoreFunction.Script>k__BackingField;
    private IScript OpenSearch.Client.IScriptScoreFunction.Script { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IScriptScoreFunction.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptScoreFunction.set_Script(IScript value);
    public ScriptScoreFunctionDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> selector);
}
public class OpenSearch.Client.ScriptScoreQuery : QueryBase {
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MinScore>k__BackingField;
    public QueryContainer Query { get; public set; }
    public IScript Script { get; public set; }
    public Nullable`1<double> MinScore { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_MinScore();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinScore(Nullable`1<double> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(IScriptScoreQuery q);
}
public class OpenSearch.Client.ScriptScoreQueryDescriptor`1 : QueryDescriptorBase`2<ScriptScoreQueryDescriptor`1<T>, IScriptScoreQuery> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IScriptScoreQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IScriptScoreQuery.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IScriptScoreQuery.MinScore>k__BackingField;
    protected bool Conditionless { get; }
    private QueryContainer OpenSearch.Client.IScriptScoreQuery.Query { get; private set; }
    private IScript OpenSearch.Client.IScriptScoreQuery.Script { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IScriptScoreQuery.MinScore { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IScriptScoreQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptScoreQuery.set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IScriptScoreQuery.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptScoreQuery.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IScriptScoreQuery.get_MinScore();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptScoreQuery.set_MinScore(Nullable`1<double> value);
    public ScriptScoreQueryDescriptor`1<T> Query(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
    public ScriptScoreQueryDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> selector);
    public ScriptScoreQueryDescriptor`1<T> MinScore(Nullable`1<double> minScore);
}
public class OpenSearch.Client.ScriptSort : SortBase {
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Language { get; public set; }
    public IScript Script { get; public set; }
    public string Type { get; public set; }
    protected Field SortKey { get; }
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(string value);
    protected virtual Field get_SortKey();
}
public class OpenSearch.Client.ScriptSortDescriptor`1 : SortDescriptorBase`3<ScriptSortDescriptor`1<T>, IScriptSort, T> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IScriptSort.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IScriptSort.Type>k__BackingField;
    protected Field SortKey { get; }
    private IScript OpenSearch.Client.IScriptSort.Script { get; private set; }
    private string OpenSearch.Client.IScriptSort.Type { get; private set; }
    protected virtual Field get_SortKey();
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IScriptSort.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptSort.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IScriptSort.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScriptSort.set_Type(string value);
    public virtual ScriptSortDescriptor`1<T> Type(string type);
    public ScriptSortDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
}
[DataContractAttribute]
public class OpenSearch.Client.ScriptStats : object {
    [CompilerGeneratedAttribute]
private long <CacheEvictions>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Compilations>k__BackingField;
    [CompilerGeneratedAttribute]
private long <CompilationLimitTriggered>k__BackingField;
    [DataMemberAttribute]
public long CacheEvictions { get; internal set; }
    [DataMemberAttribute]
public long Compilations { get; internal set; }
    [DataMemberAttribute]
public long CompilationLimitTriggered { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_CacheEvictions();
    [CompilerGeneratedAttribute]
internal void set_CacheEvictions(long value);
    [CompilerGeneratedAttribute]
public long get_Compilations();
    [CompilerGeneratedAttribute]
internal void set_Compilations(long value);
    [CompilerGeneratedAttribute]
public long get_CompilationLimitTriggered();
    [CompilerGeneratedAttribute]
internal void set_CompilationLimitTriggered(long value);
}
public class OpenSearch.Client.ScrollAllDescriptor`1 : DescriptorBase`2<ScrollAllDescriptor`1<T>, IScrollAllRequest> {
    [CompilerGeneratedAttribute]
private ProducerConsumerBackPressure <OpenSearch.Client.IScrollAllRequest.BackPressure>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IScrollAllRequest.MaxDegreeOfParallelism>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IScrollAllRequest.RoutingField>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IScrollAllRequest.ScrollTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ISearchRequest <OpenSearch.Client.IScrollAllRequest.Search>k__BackingField;
    [CompilerGeneratedAttribute]
private int <OpenSearch.Client.IScrollAllRequest.Slices>k__BackingField;
    private ProducerConsumerBackPressure OpenSearch.Client.IScrollAllRequest.BackPressure { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IScrollAllRequest.MaxDegreeOfParallelism { get; private set; }
    private Field OpenSearch.Client.IScrollAllRequest.RoutingField { get; private set; }
    private Time OpenSearch.Client.IScrollAllRequest.ScrollTime { get; private set; }
    private ISearchRequest OpenSearch.Client.IScrollAllRequest.Search { get; private set; }
    private int OpenSearch.Client.IScrollAllRequest.Slices { get; private set; }
    public ScrollAllDescriptor`1(Time scrollTime, int numberOfSlices);
    [CompilerGeneratedAttribute]
private sealed virtual override ProducerConsumerBackPressure OpenSearch.Client.IScrollAllRequest.get_BackPressure();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScrollAllRequest.set_BackPressure(ProducerConsumerBackPressure value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IScrollAllRequest.get_MaxDegreeOfParallelism();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScrollAllRequest.set_MaxDegreeOfParallelism(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IScrollAllRequest.get_RoutingField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScrollAllRequest.set_RoutingField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IScrollAllRequest.get_ScrollTime();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScrollAllRequest.set_ScrollTime(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISearchRequest OpenSearch.Client.IScrollAllRequest.get_Search();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScrollAllRequest.set_Search(ISearchRequest value);
    [CompilerGeneratedAttribute]
private sealed virtual override int OpenSearch.Client.IScrollAllRequest.get_Slices();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScrollAllRequest.set_Slices(int value);
    public ScrollAllDescriptor`1<T> MaxDegreeOfParallelism(Nullable`1<int> maxDegreeOfParallelism);
    public ScrollAllDescriptor`1<T> RoutingField(Field field);
    public ScrollAllDescriptor`1<T> RoutingField(Expression`1<Func`2<T, TValue>> objectPath);
    public ScrollAllDescriptor`1<T> Search(Func`2<SearchDescriptor`1<T>, ISearchRequest> selector);
    public ScrollAllDescriptor`1<T> BackPressure(int maxConcurrency, Nullable`1<int> backPressureFactor);
}
public class OpenSearch.Client.ScrollAllObservable`1 : object {
    private ProducerConsumerBackPressure _backPressure;
    private IOpenSearchClient _client;
    private CancellationToken _compositeCancelToken;
    private CancellationTokenSource _compositeCancelTokenSource;
    private IScrollAllRequest _scrollAllRequest;
    private SemaphoreSlim _scrollInitiationLock;
    private ISearchRequest _searchRequest;
    [CompilerGeneratedAttribute]
private bool <IsDisposed>k__BackingField;
    public bool IsDisposed { get; private set; }
    public ScrollAllObservable`1(IOpenSearchClient client, IScrollAllRequest scrollAllRequest, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public bool get_IsDisposed();
    [CompilerGeneratedAttribute]
private void set_IsDisposed(bool value);
    public sealed virtual void Dispose();
    public sealed virtual IDisposable Subscribe(IObserver`1<ScrollAllResponse`1<T>> observer);
    private void ScrollAll(IObserver`1<ScrollAllResponse`1<T>> observer);
    [AsyncStateMachineAttribute("OpenSearch.Client.ScrollAllObservable`1/<ScrollSliceAsync>d__15")]
private Task`1<bool> ScrollSliceAsync(IObserver`1<ScrollAllResponse`1<T>> observer, int slice);
    private static OpenSearchClientException Throw(string message, IApiCallDetails details);
    private void ThrowOnBadSearchResult(ISearchResponse`1<T> result, int slice, int page);
    [AsyncStateMachineAttribute("OpenSearch.Client.ScrollAllObservable`1/<ScrollToCompletionAsync>d__18")]
private Task ScrollToCompletionAsync(int slice, IObserver`1<ScrollAllResponse`1<T>> observer, ISearchResponse`1<T> searchResult);
    [AsyncStateMachineAttribute("OpenSearch.Client.ScrollAllObservable`1/<InitiateSearchAsync>d__19")]
private Task`1<ISearchResponse`1<T>> InitiateSearchAsync(int slice);
    private static void OnCompleted(Exception exception, IObserver`1<ScrollAllResponse`1<T>> observer);
}
public class OpenSearch.Client.ScrollAllObserver`1 : CoordinatedRequestObserverBase`1<IScrollAllResponse`1<T>> {
    public ScrollAllObserver`1(Action`1<IScrollAllResponse`1<T>> onNext, Action`1<Exception> onError, Action onCompleted);
}
public class OpenSearch.Client.ScrollAllRequest : object {
    [CompilerGeneratedAttribute]
private ProducerConsumerBackPressure <BackPressure>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxDegreeOfParallelism>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <RoutingField>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMetaData <ParentMetaData>k__BackingField;
    [CompilerGeneratedAttribute]
private ISearchRequest <Search>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IScrollAllRequest.ScrollTime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <OpenSearch.Client.IScrollAllRequest.Slices>k__BackingField;
    public ProducerConsumerBackPressure BackPressure { get; public set; }
    public Nullable`1<int> MaxDegreeOfParallelism { get; public set; }
    public Field RoutingField { get; public set; }
    internal RequestMetaData ParentMetaData { get; internal set; }
    public ISearchRequest Search { get; public set; }
    private RequestMetaData OpenSearch.Client.IHelperCallable.ParentMetaData { get; private set; }
    private Time OpenSearch.Client.IScrollAllRequest.ScrollTime { get; private set; }
    private int OpenSearch.Client.IScrollAllRequest.Slices { get; private set; }
    public ScrollAllRequest(Time scrollTime, int numberOfSlices);
    public ScrollAllRequest(Time scrollTime, int numberOfSlices, Field routingField);
    [CompilerGeneratedAttribute]
public sealed virtual ProducerConsumerBackPressure get_BackPressure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BackPressure(ProducerConsumerBackPressure value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxDegreeOfParallelism();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxDegreeOfParallelism(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_RoutingField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RoutingField(Field value);
    [CompilerGeneratedAttribute]
internal RequestMetaData get_ParentMetaData();
    [CompilerGeneratedAttribute]
internal void set_ParentMetaData(RequestMetaData value);
    [CompilerGeneratedAttribute]
public sealed virtual ISearchRequest get_Search();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Search(ISearchRequest value);
    private sealed virtual override RequestMetaData OpenSearch.Client.IHelperCallable.get_ParentMetaData();
    private sealed virtual override void OpenSearch.Client.IHelperCallable.set_ParentMetaData(RequestMetaData value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IScrollAllRequest.get_ScrollTime();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScrollAllRequest.set_ScrollTime(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override int OpenSearch.Client.IScrollAllRequest.get_Slices();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScrollAllRequest.set_Slices(int value);
}
[DataContractAttribute]
public class OpenSearch.Client.ScrollAllResponse`1 : object {
    [CompilerGeneratedAttribute]
private long <Scroll>k__BackingField;
    [CompilerGeneratedAttribute]
private ISearchResponse`1<T> <SearchResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Slice>k__BackingField;
    public bool IsValid { get; }
    public long Scroll { get; internal set; }
    public ISearchResponse`1<T> SearchResponse { get; internal set; }
    public int Slice { get; internal set; }
    public bool get_IsValid();
    [CompilerGeneratedAttribute]
public sealed virtual long get_Scroll();
    [CompilerGeneratedAttribute]
internal void set_Scroll(long value);
    [CompilerGeneratedAttribute]
public sealed virtual ISearchResponse`1<T> get_SearchResponse();
    [CompilerGeneratedAttribute]
internal void set_SearchResponse(ISearchResponse`1<T> value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Slice();
    [CompilerGeneratedAttribute]
internal void set_Slice(int value);
}
public class OpenSearch.Client.ScrollDescriptor`1 : RequestDescriptorBase`3<ScrollDescriptor`1<TInferDocument>, ScrollRequestParameters, IScrollRequest> {
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.IScrollRequest.Scroll>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IScrollRequest.ScrollId>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Type OpenSearch.Client.ITypedSearchRequest.ClrType { get; }
    private Time OpenSearch.Client.IScrollRequest.Scroll { get; private set; }
    private string OpenSearch.Client.IScrollRequest.ScrollId { get; private set; }
    public ScrollDescriptor`1(Time scroll, string scrollId);
    internal virtual ApiUrls get_ApiUrls();
    public ScrollDescriptor`1<TInferDocument> TotalHitsAsInteger(Nullable`1<bool> totalhitsasinteger);
    private sealed virtual override Type OpenSearch.Client.ITypedSearchRequest.get_ClrType();
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.IScrollRequest.get_Scroll();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScrollRequest.set_Scroll(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IScrollRequest.get_ScrollId();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IScrollRequest.set_ScrollId(string value);
    public ScrollDescriptor`1<TInferDocument> Scroll(Time scroll);
    public ScrollDescriptor`1<TInferDocument> ScrollId(string scrollId);
}
public class OpenSearch.Client.ScrollRequest : PlainRequestBase`1<ScrollRequestParameters> {
    [CompilerGeneratedAttribute]
private Time <Scroll>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScrollId>k__BackingField;
    protected IScrollRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    public Nullable`1<bool> TotalHitsAsInteger { get; public set; }
    public Time Scroll { get; public set; }
    public string ScrollId { get; public set; }
    private Type OpenSearch.Client.ITypedSearchRequest.ClrType { get; }
    public ScrollRequest(string scrollId, Time scroll);
    protected IScrollRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    public Nullable`1<bool> get_TotalHitsAsInteger();
    public void set_TotalHitsAsInteger(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_Scroll();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Scroll(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ScrollId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScrollId(string value);
    private sealed virtual override Type OpenSearch.Client.ITypedSearchRequest.get_ClrType();
}
public class OpenSearch.Client.SearchAsYouTypeAttribute : OpenSearchCorePropertyAttributeBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchQuoteAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISearchAsYouTypeProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IndexOptions> <OpenSearch.Client.ISearchAsYouTypeProperty.IndexOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISearchAsYouTypeProperty.MaxShingleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISearchAsYouTypeProperty.Norms>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermVectorOption> <OpenSearch.Client.ISearchAsYouTypeProperty.TermVector>k__BackingField;
    public string Analyzer { get; public set; }
    public bool Index { get; public set; }
    public IndexOptions IndexOptions { get; public set; }
    public int MaxShingleSize { get; public set; }
    public bool Norms { get; public set; }
    public string SearchAnalyzer { get; public set; }
    public string SearchQuoteAnalyzer { get; public set; }
    public TermVectorOption TermVector { get; public set; }
    private Nullable`1<bool> OpenSearch.Client.ISearchAsYouTypeProperty.Index { get; private set; }
    private Nullable`1<IndexOptions> OpenSearch.Client.ISearchAsYouTypeProperty.IndexOptions { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISearchAsYouTypeProperty.MaxShingleSize { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISearchAsYouTypeProperty.Norms { get; private set; }
    private ISearchAsYouTypeProperty Self { get; }
    private Nullable`1<TermVectorOption> OpenSearch.Client.ISearchAsYouTypeProperty.TermVector { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    public bool get_Index();
    public void set_Index(bool value);
    public IndexOptions get_IndexOptions();
    public void set_IndexOptions(IndexOptions value);
    public int get_MaxShingleSize();
    public void set_MaxShingleSize(int value);
    public bool get_Norms();
    public void set_Norms(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SearchAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchAnalyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SearchQuoteAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchQuoteAnalyzer(string value);
    public TermVectorOption get_TermVector();
    public void set_TermVector(TermVectorOption value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISearchAsYouTypeProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IndexOptions> OpenSearch.Client.ISearchAsYouTypeProperty.get_IndexOptions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_IndexOptions(Nullable`1<IndexOptions> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISearchAsYouTypeProperty.get_MaxShingleSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_MaxShingleSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISearchAsYouTypeProperty.get_Norms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_Norms(Nullable`1<bool> value);
    private ISearchAsYouTypeProperty get_Self();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TermVectorOption> OpenSearch.Client.ISearchAsYouTypeProperty.get_TermVector();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_TermVector(Nullable`1<TermVectorOption> value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.SearchAsYouTypeProperty : CorePropertyBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IndexOptions> <IndexOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxShingleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Norms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchQuoteAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermVectorOption> <TermVector>k__BackingField;
    public string Analyzer { get; public set; }
    public Nullable`1<bool> Index { get; public set; }
    public Nullable`1<IndexOptions> IndexOptions { get; public set; }
    public Nullable`1<int> MaxShingleSize { get; public set; }
    public Nullable`1<bool> Norms { get; public set; }
    public string SearchAnalyzer { get; public set; }
    public string SearchQuoteAnalyzer { get; public set; }
    public Nullable`1<TermVectorOption> TermVector { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IndexOptions> get_IndexOptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexOptions(Nullable`1<IndexOptions> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxShingleSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxShingleSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Norms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Norms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SearchAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchAnalyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SearchQuoteAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchQuoteAnalyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TermVectorOption> get_TermVector();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TermVector(Nullable`1<TermVectorOption> value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.SearchAsYouTypePropertyDescriptor`1 : CorePropertyDescriptorBase`3<SearchAsYouTypePropertyDescriptor`1<T>, ISearchAsYouTypeProperty, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISearchAsYouTypeProperty.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISearchAsYouTypeProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IndexOptions> <OpenSearch.Client.ISearchAsYouTypeProperty.IndexOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISearchAsYouTypeProperty.MaxShingleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISearchAsYouTypeProperty.Norms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISearchAsYouTypeProperty.SearchAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISearchAsYouTypeProperty.SearchQuoteAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermVectorOption> <OpenSearch.Client.ISearchAsYouTypeProperty.TermVector>k__BackingField;
    private string OpenSearch.Client.ISearchAsYouTypeProperty.Analyzer { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISearchAsYouTypeProperty.Index { get; private set; }
    private Nullable`1<IndexOptions> OpenSearch.Client.ISearchAsYouTypeProperty.IndexOptions { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISearchAsYouTypeProperty.MaxShingleSize { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISearchAsYouTypeProperty.Norms { get; private set; }
    private string OpenSearch.Client.ISearchAsYouTypeProperty.SearchAnalyzer { get; private set; }
    private string OpenSearch.Client.ISearchAsYouTypeProperty.SearchQuoteAnalyzer { get; private set; }
    private Nullable`1<TermVectorOption> OpenSearch.Client.ISearchAsYouTypeProperty.TermVector { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISearchAsYouTypeProperty.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISearchAsYouTypeProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IndexOptions> OpenSearch.Client.ISearchAsYouTypeProperty.get_IndexOptions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_IndexOptions(Nullable`1<IndexOptions> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISearchAsYouTypeProperty.get_MaxShingleSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_MaxShingleSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISearchAsYouTypeProperty.get_Norms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_Norms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISearchAsYouTypeProperty.get_SearchAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_SearchAnalyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISearchAsYouTypeProperty.get_SearchQuoteAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_SearchQuoteAnalyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TermVectorOption> OpenSearch.Client.ISearchAsYouTypeProperty.get_TermVector();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchAsYouTypeProperty.set_TermVector(Nullable`1<TermVectorOption> value);
    public SearchAsYouTypePropertyDescriptor`1<T> Analyzer(string analyzer);
    public SearchAsYouTypePropertyDescriptor`1<T> Index(Nullable`1<bool> index);
    public SearchAsYouTypePropertyDescriptor`1<T> IndexOptions(Nullable`1<IndexOptions> indexOptions);
    public SearchAsYouTypePropertyDescriptor`1<T> MaxShingleSize(Nullable`1<int> maxShingleSize);
    public SearchAsYouTypePropertyDescriptor`1<T> Norms(Nullable`1<bool> enabled);
    public SearchAsYouTypePropertyDescriptor`1<T> SearchAnalyzer(string searchAnalyzer);
    public SearchAsYouTypePropertyDescriptor`1<T> SearchQuoteAnalyzer(string searchQuoteAnalyzer);
    public SearchAsYouTypePropertyDescriptor`1<T> TermVector(Nullable`1<TermVectorOption> termVector);
}
[DataContractAttribute]
public class OpenSearch.Client.SearchDescriptor`1 : RequestDescriptorBase`3<SearchDescriptor`1<TInferDocument>, SearchRequestParameters, ISearchRequest`1<TInferDocument>> {
    [CompilerGeneratedAttribute]
private AggregationDictionary <OpenSearch.Client.ISearchRequest.Aggregations>k__BackingField;
    [CompilerGeneratedAttribute]
private IFieldCollapse <OpenSearch.Client.ISearchRequest.Collapse>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ISearchRequest.DocValueFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISearchRequest.Explain>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ISearchRequest.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISearchRequest.From>k__BackingField;
    [CompilerGeneratedAttribute]
private IHighlight <OpenSearch.Client.ISearchRequest.Highlight>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<IndexName, double> <OpenSearch.Client.ISearchRequest.IndicesBoost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ISearchRequest.MinScore>k__BackingField;
    [CompilerGeneratedAttribute]
private IPointInTime <OpenSearch.Client.ISearchRequest.PointInTime>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.ISearchRequest.PostFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISearchRequest.Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.ISearchRequest.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IRescore> <OpenSearch.Client.ISearchRequest.Rescore>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptFields <OpenSearch.Client.ISearchRequest.ScriptFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<object> <OpenSearch.Client.ISearchRequest.SearchAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISearchRequest.Size>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlicedScroll <OpenSearch.Client.ISearchRequest.Slice>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISort> <OpenSearch.Client.ISearchRequest.Sort>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <OpenSearch.Client.ISearchRequest.Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ISearchRequest.StoredFields>k__BackingField;
    [CompilerGeneratedAttribute]
private ISuggestContainer <OpenSearch.Client.ISearchRequest.Suggest>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.ISearchRequest.TerminateAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISearchRequest.Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISearchRequest.TrackScores>k__BackingField;
    [CompilerGeneratedAttribute]
private TrackTotalHits <OpenSearch.Client.ISearchRequest.TrackTotalHits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISearchRequest.Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IRuntimeFields <OpenSearch.Client.ISearchRequest.RuntimeFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.ISearchRequest.Ext>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ISearchRequest.Index { get; }
    protected HttpMethod HttpMethod { get; }
    private AggregationDictionary OpenSearch.Client.ISearchRequest.Aggregations { get; private set; }
    private Type OpenSearch.Client.ITypedSearchRequest.ClrType { get; }
    private IFieldCollapse OpenSearch.Client.ISearchRequest.Collapse { get; private set; }
    private Fields OpenSearch.Client.ISearchRequest.DocValueFields { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISearchRequest.Explain { get; private set; }
    private Fields OpenSearch.Client.ISearchRequest.Fields { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISearchRequest.From { get; private set; }
    private IHighlight OpenSearch.Client.ISearchRequest.Highlight { get; private set; }
    private IDictionary`2<IndexName, double> OpenSearch.Client.ISearchRequest.IndicesBoost { get; private set; }
    private Nullable`1<double> OpenSearch.Client.ISearchRequest.MinScore { get; private set; }
    private IPointInTime OpenSearch.Client.ISearchRequest.PointInTime { get; private set; }
    private QueryContainer OpenSearch.Client.ISearchRequest.PostFilter { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISearchRequest.Profile { get; private set; }
    private QueryContainer OpenSearch.Client.ISearchRequest.Query { get; private set; }
    private IList`1<IRescore> OpenSearch.Client.ISearchRequest.Rescore { get; private set; }
    private IScriptFields OpenSearch.Client.ISearchRequest.ScriptFields { get; private set; }
    private IList`1<object> OpenSearch.Client.ISearchRequest.SearchAfter { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISearchRequest.Size { get; private set; }
    private ISlicedScroll OpenSearch.Client.ISearchRequest.Slice { get; private set; }
    private IList`1<ISort> OpenSearch.Client.ISearchRequest.Sort { get; private set; }
    private Union`2<bool, ISourceFilter> OpenSearch.Client.ISearchRequest.Source { get; private set; }
    private Fields OpenSearch.Client.ISearchRequest.StoredFields { get; private set; }
    private ISuggestContainer OpenSearch.Client.ISearchRequest.Suggest { get; private set; }
    private Nullable`1<long> OpenSearch.Client.ISearchRequest.TerminateAfter { get; private set; }
    private string OpenSearch.Client.ISearchRequest.Timeout { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISearchRequest.TrackScores { get; private set; }
    private TrackTotalHits OpenSearch.Client.ISearchRequest.TrackTotalHits { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISearchRequest.Version { get; private set; }
    private IRuntimeFields OpenSearch.Client.ISearchRequest.RuntimeFields { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.ISearchRequest.Ext { get; private set; }
    public SearchDescriptor`1(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ISearchRequest.get_Index();
    public SearchDescriptor`1<TInferDocument> Index(Indices index);
    public SearchDescriptor`1<TInferDocument> Index();
    public SearchDescriptor`1<TInferDocument> AllIndices();
    public SearchDescriptor`1<TInferDocument> AllowNoIndices(Nullable`1<bool> allownoindices);
    public SearchDescriptor`1<TInferDocument> AllowPartialSearchResults(Nullable`1<bool> allowpartialsearchresults);
    public SearchDescriptor`1<TInferDocument> AnalyzeWildcard(Nullable`1<bool> analyzewildcard);
    public SearchDescriptor`1<TInferDocument> Analyzer(string analyzer);
    public SearchDescriptor`1<TInferDocument> BatchedReduceSize(Nullable`1<long> batchedreducesize);
    public SearchDescriptor`1<TInferDocument> CcsMinimizeRoundtrips(Nullable`1<bool> ccsminimizeroundtrips);
    public SearchDescriptor`1<TInferDocument> DefaultOperator(Nullable`1<DefaultOperator> defaultoperator);
    public SearchDescriptor`1<TInferDocument> Df(string df);
    public SearchDescriptor`1<TInferDocument> ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public SearchDescriptor`1<TInferDocument> IgnoreThrottled(Nullable`1<bool> ignorethrottled);
    public SearchDescriptor`1<TInferDocument> IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public SearchDescriptor`1<TInferDocument> Lenient(Nullable`1<bool> lenient);
    public SearchDescriptor`1<TInferDocument> MaxConcurrentShardRequests(Nullable`1<long> maxconcurrentshardrequests);
    public SearchDescriptor`1<TInferDocument> PreFilterShardSize(Nullable`1<long> prefiltershardsize);
    public SearchDescriptor`1<TInferDocument> Preference(string preference);
    public SearchDescriptor`1<TInferDocument> QueryOnQueryString(string queryonquerystring);
    public SearchDescriptor`1<TInferDocument> RequestCache(Nullable`1<bool> requestcache);
    public SearchDescriptor`1<TInferDocument> Routing(Routing routing);
    public SearchDescriptor`1<TInferDocument> Scroll(Time scroll);
    public SearchDescriptor`1<TInferDocument> SearchType(Nullable`1<SearchType> searchtype);
    public SearchDescriptor`1<TInferDocument> SequenceNumberPrimaryTerm(Nullable`1<bool> sequencenumberprimaryterm);
    public SearchDescriptor`1<TInferDocument> Stats(String[] stats);
    public SearchDescriptor`1<TInferDocument> SuggestField(Field suggestfield);
    public SearchDescriptor`1<TInferDocument> SuggestField(Expression`1<Func`2<TInferDocument, object>> field);
    public SearchDescriptor`1<TInferDocument> SuggestMode(Nullable`1<SuggestMode> suggestmode);
    public SearchDescriptor`1<TInferDocument> SuggestSize(Nullable`1<long> suggestsize);
    public SearchDescriptor`1<TInferDocument> SuggestText(string suggesttext);
    public SearchDescriptor`1<TInferDocument> TotalHitsAsInteger(Nullable`1<bool> totalhitsasinteger);
    public SearchDescriptor`1<TInferDocument> TypedKeys(Nullable`1<bool> typedkeys);
    protected virtual HttpMethod get_HttpMethod();
    [CompilerGeneratedAttribute]
private sealed virtual override AggregationDictionary OpenSearch.Client.ISearchRequest.get_Aggregations();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Aggregations(AggregationDictionary value);
    private sealed virtual override Type OpenSearch.Client.ITypedSearchRequest.get_ClrType();
    [CompilerGeneratedAttribute]
private sealed virtual override IFieldCollapse OpenSearch.Client.ISearchRequest.get_Collapse();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Collapse(IFieldCollapse value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ISearchRequest.get_DocValueFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_DocValueFields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISearchRequest.get_Explain();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Explain(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ISearchRequest.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Fields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISearchRequest.get_From();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_From(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IHighlight OpenSearch.Client.ISearchRequest.get_Highlight();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Highlight(IHighlight value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<IndexName, double> OpenSearch.Client.ISearchRequest.get_IndicesBoost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_IndicesBoost(IDictionary`2<IndexName, double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ISearchRequest.get_MinScore();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_MinScore(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPointInTime OpenSearch.Client.ISearchRequest.get_PointInTime();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_PointInTime(IPointInTime value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.ISearchRequest.get_PostFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_PostFilter(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISearchRequest.get_Profile();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Profile(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.ISearchRequest.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<IRescore> OpenSearch.Client.ISearchRequest.get_Rescore();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Rescore(IList`1<IRescore> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScriptFields OpenSearch.Client.ISearchRequest.get_ScriptFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_ScriptFields(IScriptFields value);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<object> OpenSearch.Client.ISearchRequest.get_SearchAfter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_SearchAfter(IList`1<object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISearchRequest.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISlicedScroll OpenSearch.Client.ISearchRequest.get_Slice();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Slice(ISlicedScroll value);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<ISort> OpenSearch.Client.ISearchRequest.get_Sort();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Sort(IList`1<ISort> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<bool, ISourceFilter> OpenSearch.Client.ISearchRequest.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Source(Union`2<bool, ISourceFilter> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ISearchRequest.get_StoredFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_StoredFields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISuggestContainer OpenSearch.Client.ISearchRequest.get_Suggest();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Suggest(ISuggestContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.ISearchRequest.get_TerminateAfter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_TerminateAfter(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISearchRequest.get_Timeout();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Timeout(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISearchRequest.get_TrackScores();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_TrackScores(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override TrackTotalHits OpenSearch.Client.ISearchRequest.get_TrackTotalHits();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_TrackTotalHits(TrackTotalHits value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISearchRequest.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Version(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IRuntimeFields OpenSearch.Client.ISearchRequest.get_RuntimeFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_RuntimeFields(IRuntimeFields value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.ISearchRequest.get_Ext();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchRequest.set_Ext(IDictionary`2<string, object> value);
    protected sealed virtual void RequestDefaults(SearchRequestParameters parameters);
    public SearchDescriptor`1<TInferDocument> Aggregations(Func`2<AggregationContainerDescriptor`1<TInferDocument>, IAggregationContainer> aggregationsSelector);
    public SearchDescriptor`1<TInferDocument> Aggregations(AggregationDictionary aggregations);
    public SearchDescriptor`1<TInferDocument> Source(bool enabled);
    public SearchDescriptor`1<TInferDocument> Source(Func`2<SourceFilterDescriptor`1<TInferDocument>, ISourceFilter> selector);
    public SearchDescriptor`1<TInferDocument> Size(Nullable`1<int> size);
    public SearchDescriptor`1<TInferDocument> Take(Nullable`1<int> take);
    public SearchDescriptor`1<TInferDocument> Fields(Func`2<FieldsDescriptor`1<TInferDocument>, IPromise`1<Fields>> fields);
    public SearchDescriptor`1<TInferDocument> Fields(Func`2<FieldsDescriptor`1<TSource>, IPromise`1<Fields>> fields);
    public SearchDescriptor`1<TInferDocument> Fields(Fields fields);
    public SearchDescriptor`1<TInferDocument> From(Nullable`1<int> from);
    public SearchDescriptor`1<TInferDocument> Skip(Nullable`1<int> skip);
    public SearchDescriptor`1<TInferDocument> Timeout(string timeout);
    public SearchDescriptor`1<TInferDocument> Explain(Nullable`1<bool> explain);
    public SearchDescriptor`1<TInferDocument> Version(Nullable`1<bool> version);
    public SearchDescriptor`1<TInferDocument> TrackScores(Nullable`1<bool> trackscores);
    public SearchDescriptor`1<TInferDocument> Profile(Nullable`1<bool> profile);
    public SearchDescriptor`1<TInferDocument> MinScore(Nullable`1<double> minScore);
    public SearchDescriptor`1<TInferDocument> TerminateAfter(Nullable`1<long> terminateAfter);
    public SearchDescriptor`1<TInferDocument> ExecuteOnLocalShard();
    public SearchDescriptor`1<TInferDocument> ExecuteOnNode(string node);
    public SearchDescriptor`1<TInferDocument> ExecuteOnPreferredNode(string node);
    public SearchDescriptor`1<TInferDocument> IndicesBoost(Func`2<FluentDictionary`2<IndexName, double>, FluentDictionary`2<IndexName, double>> boost);
    public SearchDescriptor`1<TInferDocument> StoredFields(Func`2<FieldsDescriptor`1<TInferDocument>, IPromise`1<Fields>> fields);
    public SearchDescriptor`1<TInferDocument> StoredFields(Fields fields);
    public SearchDescriptor`1<TInferDocument> ScriptFields(Func`2<ScriptFieldsDescriptor, IPromise`1<IScriptFields>> selector);
    public SearchDescriptor`1<TInferDocument> DocValueFields(Func`2<FieldsDescriptor`1<TInferDocument>, IPromise`1<Fields>> fields);
    public SearchDescriptor`1<TInferDocument> DocValueFields(Fields fields);
    public SearchDescriptor`1<TInferDocument> Sort(Func`2<SortDescriptor`1<TInferDocument>, IPromise`1<IList`1<ISort>>> selector);
    public SearchDescriptor`1<TInferDocument> SearchAfter(IEnumerable`1<object> searchAfter);
    public SearchDescriptor`1<TInferDocument> SearchAfter(IList`1<object> searchAfter);
    public SearchDescriptor`1<TInferDocument> SearchAfter(Object[] searchAfter);
    public SearchDescriptor`1<TInferDocument> Suggest(Func`2<SuggestContainerDescriptor`1<TInferDocument>, IPromise`1<ISuggestContainer>> selector);
    public SearchDescriptor`1<TInferDocument> Query(Func`2<QueryContainerDescriptor`1<TInferDocument>, QueryContainer> query);
    public SearchDescriptor`1<TInferDocument> Slice(Func`2<SlicedScrollDescriptor`1<TInferDocument>, ISlicedScroll> selector);
    public SearchDescriptor`1<TInferDocument> MatchAll(Func`2<MatchAllQueryDescriptor, IMatchAllQuery> selector);
    public SearchDescriptor`1<TInferDocument> PostFilter(Func`2<QueryContainerDescriptor`1<TInferDocument>, QueryContainer> filter);
    public SearchDescriptor`1<TInferDocument> Highlight(Func`2<HighlightDescriptor`1<TInferDocument>, IHighlight> highlightSelector);
    public SearchDescriptor`1<TInferDocument> Collapse(Func`2<FieldCollapseDescriptor`1<TInferDocument>, IFieldCollapse> collapseSelector);
    public SearchDescriptor`1<TInferDocument> Rescore(Func`2<RescoringDescriptor`1<TInferDocument>, IPromise`1<IList`1<IRescore>>> rescoreSelector);
    public SearchDescriptor`1<TInferDocument> TrackTotalHits();
    public SearchDescriptor`1<TInferDocument> TrackTotalHits(TrackTotalHits trackTotalHits);
    public SearchDescriptor`1<TInferDocument> RuntimeFields(Func`2<RuntimeFieldsDescriptor`1<TInferDocument>, IPromise`1<IRuntimeFields>> runtimeFieldsSelector);
    public SearchDescriptor`1<TInferDocument> RuntimeFields(Func`2<RuntimeFieldsDescriptor`1<TSource>, IPromise`1<IRuntimeFields>> runtimeFieldsSelector);
    public SearchDescriptor`1<TInferDocument> PointInTime(Func`2<PointInTimeDescriptor, IPointInTime> selector);
    public SearchDescriptor`1<TInferDocument> Ext(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
    public SearchDescriptor`1<TInferDocument> Ext(IDictionary`2<string, object> dictionary);
    protected virtual string ResolveUrl(RouteValues routeValues, IConnectionSettingsValues settings);
}
[DataContractAttribute]
public class OpenSearch.Client.SearchNode : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransportAddress>k__BackingField;
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public string TransportAddress { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_TransportAddress();
    [CompilerGeneratedAttribute]
internal void set_TransportAddress(string value);
}
public class OpenSearch.Client.SearchProfile : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<Collector> <Collector>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<QueryProfile> <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RewriteTime>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<Collector> Collector { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<QueryProfile> Query { get; internal set; }
    [DataMemberAttribute]
public long RewriteTime { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<Collector> get_Collector();
    [CompilerGeneratedAttribute]
internal void set_Collector(IReadOnlyCollection`1<Collector> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<QueryProfile> get_Query();
    [CompilerGeneratedAttribute]
internal void set_Query(IReadOnlyCollection`1<QueryProfile> value);
    [CompilerGeneratedAttribute]
public long get_RewriteTime();
    [CompilerGeneratedAttribute]
internal void set_RewriteTime(long value);
}
[DataContractAttribute]
public class OpenSearch.Client.SearchRequest : PlainRequestBase`1<SearchRequestParameters> {
    [DataMemberAttribute]
private AggregationDictionary _aggs;
    [CompilerGeneratedAttribute]
private IFieldCollapse <Collapse>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <DocValueFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Explain>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <From>k__BackingField;
    [CompilerGeneratedAttribute]
private IHighlight <Highlight>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<IndexName, double> <IndicesBoost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MinScore>k__BackingField;
    [CompilerGeneratedAttribute]
private IPointInTime <PointInTime>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <PostFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IRescore> <Rescore>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptFields <ScriptFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<object> <SearchAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlicedScroll <Slice>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISort> <Sort>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <StoredFields>k__BackingField;
    [CompilerGeneratedAttribute]
private ISuggestContainer <Suggest>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TerminateAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TrackScores>k__BackingField;
    [CompilerGeneratedAttribute]
private TrackTotalHits <TrackTotalHits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IRuntimeFields <RuntimeFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Ext>k__BackingField;
    protected ISearchRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ISearchRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<bool> AllowPartialSearchResults { get; public set; }
    public Nullable`1<bool> AnalyzeWildcard { get; public set; }
    public string Analyzer { get; public set; }
    public Nullable`1<long> BatchedReduceSize { get; public set; }
    public Nullable`1<bool> CcsMinimizeRoundtrips { get; public set; }
    public Nullable`1<DefaultOperator> DefaultOperator { get; public set; }
    public string Df { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreThrottled { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public Nullable`1<long> MaxConcurrentShardRequests { get; public set; }
    public Nullable`1<long> PreFilterShardSize { get; public set; }
    public string Preference { get; public set; }
    public string QueryOnQueryString { get; public set; }
    public Nullable`1<bool> RequestCache { get; public set; }
    public Routing Routing { get; public set; }
    public Time Scroll { get; public set; }
    public Nullable`1<SearchType> SearchType { get; public set; }
    public Nullable`1<bool> SequenceNumberPrimaryTerm { get; public set; }
    public String[] Stats { get; public set; }
    public Field SuggestField { get; public set; }
    public Nullable`1<SuggestMode> SuggestMode { get; public set; }
    public Nullable`1<long> SuggestSize { get; public set; }
    public string SuggestText { get; public set; }
    public Nullable`1<bool> TotalHitsAsInteger { get; public set; }
    public Nullable`1<bool> TypedKeys { get; public set; }
    public AggregationDictionary Aggregations { get; public set; }
    public IFieldCollapse Collapse { get; public set; }
    public Fields DocValueFields { get; public set; }
    public Nullable`1<bool> Explain { get; public set; }
    public Fields Fields { get; public set; }
    public Nullable`1<int> From { get; public set; }
    public IHighlight Highlight { get; public set; }
    [JsonFormatterAttribute("OpenSearch.Client.IndicesBoostFormatter")]
public IDictionary`2<IndexName, double> IndicesBoost { get; public set; }
    public Nullable`1<double> MinScore { get; public set; }
    public IPointInTime PointInTime { get; public set; }
    public QueryContainer PostFilter { get; public set; }
    public Nullable`1<bool> Profile { get; public set; }
    public QueryContainer Query { get; public set; }
    public IList`1<IRescore> Rescore { get; public set; }
    public IScriptFields ScriptFields { get; public set; }
    public IList`1<object> SearchAfter { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public ISlicedScroll Slice { get; public set; }
    public IList`1<ISort> Sort { get; public set; }
    public Union`2<bool, ISourceFilter> Source { get; public set; }
    public Fields StoredFields { get; public set; }
    public ISuggestContainer Suggest { get; public set; }
    public Nullable`1<long> TerminateAfter { get; public set; }
    public string Timeout { get; public set; }
    public Nullable`1<bool> TrackScores { get; public set; }
    public TrackTotalHits TrackTotalHits { get; public set; }
    public Nullable`1<bool> Version { get; public set; }
    public IRuntimeFields RuntimeFields { get; public set; }
    public IDictionary`2<string, object> Ext { get; public set; }
    protected HttpMethod HttpMethod { get; }
    private Type OpenSearch.Client.ITypedSearchRequest.ClrType { get; }
    public SearchRequest(Indices index);
    protected ISearchRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ISearchRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<bool> get_AllowPartialSearchResults();
    public void set_AllowPartialSearchResults(Nullable`1<bool> value);
    public Nullable`1<bool> get_AnalyzeWildcard();
    public void set_AnalyzeWildcard(Nullable`1<bool> value);
    public string get_Analyzer();
    public void set_Analyzer(string value);
    public Nullable`1<long> get_BatchedReduceSize();
    public void set_BatchedReduceSize(Nullable`1<long> value);
    public Nullable`1<bool> get_CcsMinimizeRoundtrips();
    public void set_CcsMinimizeRoundtrips(Nullable`1<bool> value);
    public Nullable`1<DefaultOperator> get_DefaultOperator();
    public void set_DefaultOperator(Nullable`1<DefaultOperator> value);
    public string get_Df();
    public void set_Df(string value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreThrottled();
    public void set_IgnoreThrottled(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_Lenient();
    public void set_Lenient(Nullable`1<bool> value);
    public Nullable`1<long> get_MaxConcurrentShardRequests();
    public void set_MaxConcurrentShardRequests(Nullable`1<long> value);
    public Nullable`1<long> get_PreFilterShardSize();
    public void set_PreFilterShardSize(Nullable`1<long> value);
    public string get_Preference();
    public void set_Preference(string value);
    public string get_QueryOnQueryString();
    public void set_QueryOnQueryString(string value);
    public Nullable`1<bool> get_RequestCache();
    public void set_RequestCache(Nullable`1<bool> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Time get_Scroll();
    public void set_Scroll(Time value);
    public Nullable`1<SearchType> get_SearchType();
    public void set_SearchType(Nullable`1<SearchType> value);
    public Nullable`1<bool> get_SequenceNumberPrimaryTerm();
    public void set_SequenceNumberPrimaryTerm(Nullable`1<bool> value);
    public String[] get_Stats();
    public void set_Stats(String[] value);
    public Field get_SuggestField();
    public void set_SuggestField(Field value);
    public Nullable`1<SuggestMode> get_SuggestMode();
    public void set_SuggestMode(Nullable`1<SuggestMode> value);
    public Nullable`1<long> get_SuggestSize();
    public void set_SuggestSize(Nullable`1<long> value);
    public string get_SuggestText();
    public void set_SuggestText(string value);
    public Nullable`1<bool> get_TotalHitsAsInteger();
    public void set_TotalHitsAsInteger(Nullable`1<bool> value);
    public Nullable`1<bool> get_TypedKeys();
    public void set_TypedKeys(Nullable`1<bool> value);
    public sealed virtual AggregationDictionary get_Aggregations();
    public sealed virtual void set_Aggregations(AggregationDictionary value);
    [CompilerGeneratedAttribute]
public sealed virtual IFieldCollapse get_Collapse();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Collapse(IFieldCollapse value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_DocValueFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DocValueFields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Explain();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Explain(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_From();
    [CompilerGeneratedAttribute]
public sealed virtual void set_From(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IHighlight get_Highlight();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Highlight(IHighlight value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<IndexName, double> get_IndicesBoost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndicesBoost(IDictionary`2<IndexName, double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_MinScore();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinScore(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual IPointInTime get_PointInTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PointInTime(IPointInTime value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_PostFilter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PostFilter(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Profile();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Profile(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<IRescore> get_Rescore();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Rescore(IList`1<IRescore> value);
    [CompilerGeneratedAttribute]
public sealed virtual IScriptFields get_ScriptFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScriptFields(IScriptFields value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<object> get_SearchAfter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchAfter(IList`1<object> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISlicedScroll get_Slice();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slice(ISlicedScroll value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<ISort> get_Sort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sort(IList`1<ISort> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<bool, ISourceFilter> get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(Union`2<bool, ISourceFilter> value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_StoredFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StoredFields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual ISuggestContainer get_Suggest();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Suggest(ISuggestContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_TerminateAfter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TerminateAfter(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TrackScores();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrackScores(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual TrackTotalHits get_TrackTotalHits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrackTotalHits(TrackTotalHits value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IRuntimeFields get_RuntimeFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RuntimeFields(IRuntimeFields value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Ext();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ext(IDictionary`2<string, object> value);
    protected virtual HttpMethod get_HttpMethod();
    private sealed virtual override Type OpenSearch.Client.ITypedSearchRequest.get_ClrType();
    protected sealed virtual void RequestDefaults(SearchRequestParameters parameters);
    protected virtual string ResolveUrl(RouteValues routeValues, IConnectionSettingsValues settings);
}
[DataContractAttribute]
public class OpenSearch.Client.SearchRequest`1 : SearchRequest {
    protected ISearchRequest`1<TInferDocument> TypedSelf { get; }
    private Type OpenSearch.Client.ITypedSearchRequest.ClrType { get; }
    public SearchRequest`1(Indices index);
    protected ISearchRequest`1<TInferDocument> get_TypedSelf();
    private sealed virtual override Type OpenSearch.Client.ITypedSearchRequest.get_ClrType();
}
public class OpenSearch.Client.SearchResponse`1 : ResponseBase {
    private IReadOnlyCollection`1<TDocument> _documents;
    private IReadOnlyCollection`1<FieldValues> _fields;
    private IReadOnlyCollection`1<IHit`1<TDocument>> _hits;
    [CompilerGeneratedAttribute]
private AggregateDictionary <Aggregations>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterStatistics <Clusters>k__BackingField;
    [CompilerGeneratedAttribute]
private IHitsMetadata`1<TDocument> <HitsMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private long <NumberOfReducePhases>k__BackingField;
    [CompilerGeneratedAttribute]
private Profile <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScrollId>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardStatistics <Shards>k__BackingField;
    [CompilerGeneratedAttribute]
private ISuggestDictionary`1<TDocument> <Suggest>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TerminatedEarly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TimedOut>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Took>k__BackingField;
    [DataMemberAttribute]
public AggregateDictionary Aggregations { get; internal set; }
    [DataMemberAttribute]
public ClusterStatistics Clusters { get; internal set; }
    [IgnoreDataMemberAttribute]
public IReadOnlyCollection`1<TDocument> Documents { get; }
    [IgnoreDataMemberAttribute]
public IReadOnlyCollection`1<FieldValues> Fields { get; }
    [IgnoreDataMemberAttribute]
public IReadOnlyCollection`1<IHit`1<TDocument>> Hits { get; }
    [DataMemberAttribute]
public IHitsMetadata`1<TDocument> HitsMetadata { get; internal set; }
    [IgnoreDataMemberAttribute]
public double MaxScore { get; }
    [DataMemberAttribute]
public long NumberOfReducePhases { get; internal set; }
    [DataMemberAttribute]
public Profile Profile { get; internal set; }
    [DataMemberAttribute]
public string ScrollId { get; internal set; }
    [DataMemberAttribute]
public ShardStatistics Shards { get; internal set; }
    [DataMemberAttribute]
public ISuggestDictionary`1<TDocument> Suggest { get; internal set; }
    [DataMemberAttribute]
public bool TerminatedEarly { get; internal set; }
    [DataMemberAttribute]
public bool TimedOut { get; internal set; }
    [DataMemberAttribute]
public long Took { get; internal set; }
    [IgnoreDataMemberAttribute]
public long Total { get; }
    [CompilerGeneratedAttribute]
public sealed virtual AggregateDictionary get_Aggregations();
    [CompilerGeneratedAttribute]
internal void set_Aggregations(AggregateDictionary value);
    [CompilerGeneratedAttribute]
public sealed virtual ClusterStatistics get_Clusters();
    [CompilerGeneratedAttribute]
internal void set_Clusters(ClusterStatistics value);
    public sealed virtual IReadOnlyCollection`1<TDocument> get_Documents();
    public sealed virtual IReadOnlyCollection`1<FieldValues> get_Fields();
    public sealed virtual IReadOnlyCollection`1<IHit`1<TDocument>> get_Hits();
    [CompilerGeneratedAttribute]
public sealed virtual IHitsMetadata`1<TDocument> get_HitsMetadata();
    [CompilerGeneratedAttribute]
internal void set_HitsMetadata(IHitsMetadata`1<TDocument> value);
    public sealed virtual double get_MaxScore();
    [CompilerGeneratedAttribute]
public sealed virtual long get_NumberOfReducePhases();
    [CompilerGeneratedAttribute]
internal void set_NumberOfReducePhases(long value);
    [CompilerGeneratedAttribute]
public sealed virtual Profile get_Profile();
    [CompilerGeneratedAttribute]
internal void set_Profile(Profile value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ScrollId();
    [CompilerGeneratedAttribute]
internal void set_ScrollId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ShardStatistics get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ShardStatistics value);
    [CompilerGeneratedAttribute]
public sealed virtual ISuggestDictionary`1<TDocument> get_Suggest();
    [CompilerGeneratedAttribute]
internal void set_Suggest(ISuggestDictionary`1<TDocument> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_TerminatedEarly();
    [CompilerGeneratedAttribute]
internal void set_TerminatedEarly(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_TimedOut();
    [CompilerGeneratedAttribute]
internal void set_TimedOut(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Took();
    [CompilerGeneratedAttribute]
internal void set_Took(long value);
    public sealed virtual long get_Total();
}
[DataContractAttribute]
public class OpenSearch.Client.SearchShard : object {
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Primary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelocatingNode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Shard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [DataMemberAttribute]
public string Index { get; internal set; }
    [DataMemberAttribute]
public string Node { get; internal set; }
    [DataMemberAttribute]
public bool Primary { get; internal set; }
    [DataMemberAttribute]
public string RelocatingNode { get; internal set; }
    [DataMemberAttribute]
public int Shard { get; internal set; }
    [DataMemberAttribute]
public string State { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
internal void set_Node(string value);
    [CompilerGeneratedAttribute]
public bool get_Primary();
    [CompilerGeneratedAttribute]
internal void set_Primary(bool value);
    [CompilerGeneratedAttribute]
public string get_RelocatingNode();
    [CompilerGeneratedAttribute]
internal void set_RelocatingNode(string value);
    [CompilerGeneratedAttribute]
public int get_Shard();
    [CompilerGeneratedAttribute]
internal void set_Shard(int value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
internal void set_State(string value);
}
public class OpenSearch.Client.SearchShardsDescriptor`1 : RequestDescriptorBase`3<SearchShardsDescriptor`1<TDocument>, SearchShardsRequestParameters, ISearchShardsRequest`1<TDocument>> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ISearchShardsRequest.Index { get; }
    public SearchShardsDescriptor`1(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ISearchShardsRequest.get_Index();
    public SearchShardsDescriptor`1<TDocument> Index(Indices index);
    public SearchShardsDescriptor`1<TDocument> Index();
    public SearchShardsDescriptor`1<TDocument> AllIndices();
    public SearchShardsDescriptor`1<TDocument> AllowNoIndices(Nullable`1<bool> allownoindices);
    public SearchShardsDescriptor`1<TDocument> ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public SearchShardsDescriptor`1<TDocument> IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public SearchShardsDescriptor`1<TDocument> Local(Nullable`1<bool> local);
    public SearchShardsDescriptor`1<TDocument> Preference(string preference);
    public SearchShardsDescriptor`1<TDocument> Routing(Routing routing);
}
public class OpenSearch.Client.SearchShardsRequest : PlainRequestBase`1<SearchShardsRequestParameters> {
    protected ISearchShardsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ISearchShardsRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public string Preference { get; public set; }
    public Routing Routing { get; public set; }
    public SearchShardsRequest(Indices index);
    protected ISearchShardsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ISearchShardsRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
    public string get_Preference();
    public void set_Preference(string value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
}
public class OpenSearch.Client.SearchShardsRequest`1 : SearchShardsRequest {
    protected ISearchShardsRequest`1<TDocument> TypedSelf { get; }
    public SearchShardsRequest`1(Indices index);
    protected ISearchShardsRequest`1<TDocument> get_TypedSelf();
}
public class OpenSearch.Client.SearchShardsResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, SearchNode> <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<IReadOnlyCollection`1<SearchShard>> <Shards>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, SearchNode> Nodes { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<IReadOnlyCollection`1<SearchShard>> Shards { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, SearchNode> get_Nodes();
    [CompilerGeneratedAttribute]
internal void set_Nodes(IReadOnlyDictionary`2<string, SearchNode> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<IReadOnlyCollection`1<SearchShard>> get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(IReadOnlyCollection`1<IReadOnlyCollection`1<SearchShard>> value);
}
[DataContractAttribute]
public class OpenSearch.Client.SearchStats : object {
    [CompilerGeneratedAttribute]
private long <FetchCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private long <FetchTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <FetchTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private long <OpenContexts>k__BackingField;
    [CompilerGeneratedAttribute]
private long <QueryCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private long <QueryTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <QueryTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ScrollCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ScrollTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ScrollTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SuggestCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SuggestTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SuggestTotal>k__BackingField;
    [DataMemberAttribute]
public long FetchCurrent { get; public set; }
    [DataMemberAttribute]
public long FetchTimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public long FetchTotal { get; public set; }
    [DataMemberAttribute]
public long OpenContexts { get; public set; }
    [DataMemberAttribute]
public long QueryCurrent { get; public set; }
    [DataMemberAttribute]
public long QueryTimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public long QueryTotal { get; public set; }
    [DataMemberAttribute]
public long ScrollCurrent { get; public set; }
    [DataMemberAttribute]
public long ScrollTimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public long ScrollTotal { get; public set; }
    [DataMemberAttribute]
public long SuggestCurrent { get; public set; }
    [DataMemberAttribute]
public long SuggestTimeInMilliseconds { get; public set; }
    [DataMemberAttribute]
public long SuggestTotal { get; public set; }
    [CompilerGeneratedAttribute]
public long get_FetchCurrent();
    [CompilerGeneratedAttribute]
public void set_FetchCurrent(long value);
    [CompilerGeneratedAttribute]
public long get_FetchTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_FetchTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_FetchTotal();
    [CompilerGeneratedAttribute]
public void set_FetchTotal(long value);
    [CompilerGeneratedAttribute]
public long get_OpenContexts();
    [CompilerGeneratedAttribute]
public void set_OpenContexts(long value);
    [CompilerGeneratedAttribute]
public long get_QueryCurrent();
    [CompilerGeneratedAttribute]
public void set_QueryCurrent(long value);
    [CompilerGeneratedAttribute]
public long get_QueryTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_QueryTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_QueryTotal();
    [CompilerGeneratedAttribute]
public void set_QueryTotal(long value);
    [CompilerGeneratedAttribute]
public long get_ScrollCurrent();
    [CompilerGeneratedAttribute]
public void set_ScrollCurrent(long value);
    [CompilerGeneratedAttribute]
public long get_ScrollTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_ScrollTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_ScrollTotal();
    [CompilerGeneratedAttribute]
public void set_ScrollTotal(long value);
    [CompilerGeneratedAttribute]
public long get_SuggestCurrent();
    [CompilerGeneratedAttribute]
public void set_SuggestCurrent(long value);
    [CompilerGeneratedAttribute]
public long get_SuggestTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_SuggestTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_SuggestTotal();
    [CompilerGeneratedAttribute]
public void set_SuggestTotal(long value);
}
public class OpenSearch.Client.SearchTemplateDescriptor`1 : RequestDescriptorBase`3<SearchTemplateDescriptor`1<TDocument>, SearchTemplateRequestParameters, ISearchTemplateRequest> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISearchTemplateRequest.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.ISearchTemplateRequest.Params>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISearchTemplateRequest.Source>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ISearchTemplateRequest.Index { get; }
    private Type OpenSearch.Client.ITypedSearchRequest.ClrType { get; }
    private string OpenSearch.Client.ISearchTemplateRequest.Id { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.ISearchTemplateRequest.Params { get; private set; }
    private string OpenSearch.Client.ISearchTemplateRequest.Source { get; private set; }
    public SearchTemplateDescriptor`1(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ISearchTemplateRequest.get_Index();
    public SearchTemplateDescriptor`1<TDocument> Index(Indices index);
    public SearchTemplateDescriptor`1<TDocument> Index();
    public SearchTemplateDescriptor`1<TDocument> AllIndices();
    public SearchTemplateDescriptor`1<TDocument> AllowNoIndices(Nullable`1<bool> allownoindices);
    public SearchTemplateDescriptor`1<TDocument> CcsMinimizeRoundtrips(Nullable`1<bool> ccsminimizeroundtrips);
    public SearchTemplateDescriptor`1<TDocument> ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public SearchTemplateDescriptor`1<TDocument> Explain(Nullable`1<bool> explain);
    public SearchTemplateDescriptor`1<TDocument> IgnoreThrottled(Nullable`1<bool> ignorethrottled);
    public SearchTemplateDescriptor`1<TDocument> IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public SearchTemplateDescriptor`1<TDocument> Preference(string preference);
    public SearchTemplateDescriptor`1<TDocument> Profile(Nullable`1<bool> profile);
    public SearchTemplateDescriptor`1<TDocument> Routing(Routing routing);
    public SearchTemplateDescriptor`1<TDocument> Scroll(Time scroll);
    public SearchTemplateDescriptor`1<TDocument> SearchType(Nullable`1<SearchType> searchtype);
    public SearchTemplateDescriptor`1<TDocument> TotalHitsAsInteger(Nullable`1<bool> totalhitsasinteger);
    public SearchTemplateDescriptor`1<TDocument> TypedKeys(Nullable`1<bool> typedkeys);
    private sealed virtual override Type OpenSearch.Client.ITypedSearchRequest.get_ClrType();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISearchTemplateRequest.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchTemplateRequest.set_Id(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.ISearchTemplateRequest.get_Params();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchTemplateRequest.set_Params(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISearchTemplateRequest.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISearchTemplateRequest.set_Source(string value);
    protected sealed virtual void RequestDefaults(SearchTemplateRequestParameters parameters);
    public SearchTemplateDescriptor`1<TDocument> Source(string template);
    public SearchTemplateDescriptor`1<TDocument> Id(string id);
    public SearchTemplateDescriptor`1<TDocument> Params(Dictionary`2<string, object> paramDictionary);
    public SearchTemplateDescriptor`1<TDocument> Params(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> paramDictionary);
}
public class OpenSearch.Client.SearchTemplateRequest : PlainRequestBase`1<SearchTemplateRequestParameters> {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Params>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ClrType>k__BackingField;
    protected ISearchTemplateRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ISearchTemplateRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<bool> CcsMinimizeRoundtrips { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> Explain { get; public set; }
    public Nullable`1<bool> IgnoreThrottled { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public string Preference { get; public set; }
    public Nullable`1<bool> Profile { get; public set; }
    public Routing Routing { get; public set; }
    public Time Scroll { get; public set; }
    public Nullable`1<SearchType> SearchType { get; public set; }
    public Nullable`1<bool> TotalHitsAsInteger { get; public set; }
    public Nullable`1<bool> TypedKeys { get; public set; }
    public string Id { get; public set; }
    public IDictionary`2<string, object> Params { get; public set; }
    public string Source { get; public set; }
    protected Type ClrType { get; protected set; }
    private Type OpenSearch.Client.ITypedSearchRequest.ClrType { get; }
    public SearchTemplateRequest(Indices index);
    protected ISearchTemplateRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ISearchTemplateRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<bool> get_CcsMinimizeRoundtrips();
    public void set_CcsMinimizeRoundtrips(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_Explain();
    public void set_Explain(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreThrottled();
    public void set_IgnoreThrottled(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public string get_Preference();
    public void set_Preference(string value);
    public Nullable`1<bool> get_Profile();
    public void set_Profile(Nullable`1<bool> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Time get_Scroll();
    public void set_Scroll(Time value);
    public Nullable`1<SearchType> get_SearchType();
    public void set_SearchType(Nullable`1<SearchType> value);
    public Nullable`1<bool> get_TotalHitsAsInteger();
    public void set_TotalHitsAsInteger(Nullable`1<bool> value);
    public Nullable`1<bool> get_TypedKeys();
    public void set_TypedKeys(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Params();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Params(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(string value);
    [CompilerGeneratedAttribute]
protected Type get_ClrType();
    [CompilerGeneratedAttribute]
protected void set_ClrType(Type value);
    private sealed virtual override Type OpenSearch.Client.ITypedSearchRequest.get_ClrType();
    protected sealed virtual void RequestDefaults(SearchTemplateRequestParameters parameters);
}
public class OpenSearch.Client.SearchTemplateRequest`1 : SearchTemplateRequest {
    public SearchTemplateRequest`1(Indices indices);
}
[DataContractAttribute]
public class OpenSearch.Client.SegmentsStats : object {
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DocValuesMemoryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <FixedBitSetMemoryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <IndexWriterMaxMemoryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <IndexWriterMemoryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MaximumUnsafeAutoIdTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MemoryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <NormsMemoryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <PointsMemoryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StoredFieldsMemoryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TermsMemoryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TermVectorsMemoryInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <VersionMapMemoryInBytes>k__BackingField;
    [DataMemberAttribute]
public long Count { get; public set; }
    [DataMemberAttribute]
public long DocValuesMemoryInBytes { get; public set; }
    [DataMemberAttribute]
public long FixedBitSetMemoryInBytes { get; public set; }
    [DataMemberAttribute]
public long IndexWriterMaxMemoryInBytes { get; public set; }
    [DataMemberAttribute]
public long IndexWriterMemoryInBytes { get; public set; }
    [DataMemberAttribute]
public long MaximumUnsafeAutoIdTimestamp { get; public set; }
    [DataMemberAttribute]
public long MemoryInBytes { get; public set; }
    [DataMemberAttribute]
public long NormsMemoryInBytes { get; public set; }
    [DataMemberAttribute]
public long PointsMemoryInBytes { get; public set; }
    [DataMemberAttribute]
public long StoredFieldsMemoryInBytes { get; public set; }
    [DataMemberAttribute]
public long TermsMemoryInBytes { get; public set; }
    [DataMemberAttribute]
public long TermVectorsMemoryInBytes { get; public set; }
    [DataMemberAttribute]
public long VersionMapMemoryInBytes { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public long get_DocValuesMemoryInBytes();
    [CompilerGeneratedAttribute]
public void set_DocValuesMemoryInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_FixedBitSetMemoryInBytes();
    [CompilerGeneratedAttribute]
public void set_FixedBitSetMemoryInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_IndexWriterMaxMemoryInBytes();
    [CompilerGeneratedAttribute]
public void set_IndexWriterMaxMemoryInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_IndexWriterMemoryInBytes();
    [CompilerGeneratedAttribute]
public void set_IndexWriterMemoryInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_MaximumUnsafeAutoIdTimestamp();
    [CompilerGeneratedAttribute]
public void set_MaximumUnsafeAutoIdTimestamp(long value);
    [CompilerGeneratedAttribute]
public long get_MemoryInBytes();
    [CompilerGeneratedAttribute]
public void set_MemoryInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_NormsMemoryInBytes();
    [CompilerGeneratedAttribute]
public void set_NormsMemoryInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_PointsMemoryInBytes();
    [CompilerGeneratedAttribute]
public void set_PointsMemoryInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_StoredFieldsMemoryInBytes();
    [CompilerGeneratedAttribute]
public void set_StoredFieldsMemoryInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_TermsMemoryInBytes();
    [CompilerGeneratedAttribute]
public void set_TermsMemoryInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_TermVectorsMemoryInBytes();
    [CompilerGeneratedAttribute]
public void set_TermVectorsMemoryInBytes(long value);
    [CompilerGeneratedAttribute]
public long get_VersionMapMemoryInBytes();
    [CompilerGeneratedAttribute]
public void set_VersionMapMemoryInBytes(long value);
}
public abstract class OpenSearch.Client.SelectorBase : object {
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
}
public class OpenSearch.Client.SerialDifferencingAggregation : PipelineAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Lag>k__BackingField;
    public Nullable`1<int> Lag { get; public set; }
    public SerialDifferencingAggregation(string name, SingleBucketsPath bucketsPath);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Lag();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lag(Nullable`1<int> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.SerialDifferencingAggregationDescriptor : PipelineAggregationDescriptorBase`3<SerialDifferencingAggregationDescriptor, ISerialDifferencingAggregation, SingleBucketsPath> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISerialDifferencingAggregation.Lag>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.ISerialDifferencingAggregation.Lag { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISerialDifferencingAggregation.get_Lag();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISerialDifferencingAggregation.set_Lag(Nullable`1<int> value);
    public SerialDifferencingAggregationDescriptor Lag(Nullable`1<int> lag);
}
internal class OpenSearch.Client.SerializeAsSingleFormatter`1 : object {
    public sealed virtual IEnumerable`1<T> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IEnumerable`1<T> value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.SetProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Override>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreEmptyValue>k__BackingField;
    public Field Field { get; public set; }
    public object Value { get; public set; }
    public Nullable`1<bool> Override { get; public set; }
    public Nullable`1<bool> IgnoreEmptyValue { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Override();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Override(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreEmptyValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreEmptyValue(Nullable`1<bool> value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.SetProcessorDescriptor`1 : ProcessorDescriptorBase`2<SetProcessorDescriptor`1<T>, ISetProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISetProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.ISetProcessor.Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISetProcessor.Override>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISetProcessor.IgnoreEmptyValue>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.ISetProcessor.Field { get; private set; }
    private object OpenSearch.Client.ISetProcessor.Value { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISetProcessor.Override { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISetProcessor.IgnoreEmptyValue { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISetProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISetProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.ISetProcessor.get_Value();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISetProcessor.set_Value(object value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISetProcessor.get_Override();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISetProcessor.set_Override(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISetProcessor.get_IgnoreEmptyValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISetProcessor.set_IgnoreEmptyValue(Nullable`1<bool> value);
    public SetProcessorDescriptor`1<T> Field(Field field);
    public SetProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public SetProcessorDescriptor`1<T> Value(TValue value);
    public SetProcessorDescriptor`1<T> Override(Nullable`1<bool> override);
    public SetProcessorDescriptor`1<T> IgnoreEmptyValue(Nullable`1<bool> ignoreEmptyValue);
}
internal enum OpenSearch.Client.ShapeFormat : Enum {
    public int value__;
    public static ShapeFormat Object;
    public static ShapeFormat Array;
    public static ShapeFormat WellKnownText;
    public static ShapeFormat String;
}
public enum OpenSearch.Client.ShapeOrientation : Enum {
    public int value__;
    public static ShapeOrientation ClockWise;
    public static ShapeOrientation CounterClockWise;
}
internal class OpenSearch.Client.ShapeOrientationFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, ShapeOrientation value, IJsonFormatterResolver formatterResolver);
    public sealed virtual ShapeOrientation Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.ShapeQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IFieldLookup <IndexedShape>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ShapeRelation> <Relation>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoShape <Shape>k__BackingField;
    public Nullable`1<bool> IgnoreUnmapped { get; public set; }
    public IFieldLookup IndexedShape { get; public set; }
    public Nullable`1<ShapeRelation> Relation { get; public set; }
    public IGeoShape Shape { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IFieldLookup get_IndexedShape();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexedShape(IFieldLookup value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ShapeRelation> get_Relation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Relation(Nullable`1<ShapeRelation> value);
    [CompilerGeneratedAttribute]
public sealed virtual IGeoShape get_Shape();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Shape(IGeoShape value);
    protected virtual bool get_Conditionless();
    internal static bool IsConditionless(IShapeQuery q);
    internal virtual void InternalWrapInContainer(IQueryContainer container);
}
public class OpenSearch.Client.ShapeQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<ShapeQueryDescriptor`1<T>, IShapeQuery, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IShapeQuery.IgnoreUnmapped>k__BackingField;
    [CompilerGeneratedAttribute]
private IFieldLookup <OpenSearch.Client.IShapeQuery.IndexedShape>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ShapeRelation> <OpenSearch.Client.IShapeQuery.Relation>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoShape <OpenSearch.Client.IShapeQuery.Shape>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<bool> OpenSearch.Client.IShapeQuery.IgnoreUnmapped { get; private set; }
    private IFieldLookup OpenSearch.Client.IShapeQuery.IndexedShape { get; private set; }
    private Nullable`1<ShapeRelation> OpenSearch.Client.IShapeQuery.Relation { get; private set; }
    private IGeoShape OpenSearch.Client.IShapeQuery.Shape { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IShapeQuery.get_IgnoreUnmapped();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShapeQuery.set_IgnoreUnmapped(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFieldLookup OpenSearch.Client.IShapeQuery.get_IndexedShape();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShapeQuery.set_IndexedShape(IFieldLookup value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<ShapeRelation> OpenSearch.Client.IShapeQuery.get_Relation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShapeQuery.set_Relation(Nullable`1<ShapeRelation> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IGeoShape OpenSearch.Client.IShapeQuery.get_Shape();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShapeQuery.set_Shape(IGeoShape value);
    public ShapeQueryDescriptor`1<T> Relation(Nullable`1<ShapeRelation> relation);
    public ShapeQueryDescriptor`1<T> IgnoreUnmapped(Nullable`1<bool> ignoreUnmapped);
    public ShapeQueryDescriptor`1<T> Shape(Func`2<GeoShapeDescriptor, IGeoShape> selector);
    public ShapeQueryDescriptor`1<T> IndexedShape(Func`2<FieldLookupDescriptor`1<T>, IFieldLookup> selector);
}
internal class OpenSearch.Client.ShapeQueryFieldNameFormatter : object {
    public sealed virtual IShapeQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IShapeQuery value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.ShapeQueryFormatter : object {
    private static AutomataDictionary Fields;
    private static AutomataDictionary ShapeFields;
    private static ShapeQueryFormatter();
    public sealed virtual IShapeQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IShapeQuery value, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.ShapeRelation : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ShapeRelation Intersects;
    [EnumMemberAttribute]
public static ShapeRelation Disjoint;
    [EnumMemberAttribute]
public static ShapeRelation Within;
}
public class OpenSearch.Client.ShardAllocationExplanation : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexUniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Primary>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public IndexName Index { get; public set; }
    [DataMemberAttribute]
public string IndexUniqueId { get; public set; }
    [DataMemberAttribute]
public bool Primary { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public IndexName get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(IndexName value);
    [CompilerGeneratedAttribute]
public string get_IndexUniqueId();
    [CompilerGeneratedAttribute]
public void set_IndexUniqueId(string value);
    [CompilerGeneratedAttribute]
public bool get_Primary();
    [CompilerGeneratedAttribute]
public void set_Primary(bool value);
}
public class OpenSearch.Client.ShardAllocationSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<AllocationEnable> <AllocationEnable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NodeConcurrentRecoveries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NodeInitialPrimariesRecoveries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SameShardHost>k__BackingField;
    public Nullable`1<AllocationEnable> AllocationEnable { get; public set; }
    public Nullable`1<int> NodeConcurrentRecoveries { get; public set; }
    public Nullable`1<int> NodeInitialPrimariesRecoveries { get; public set; }
    public Nullable`1<bool> SameShardHost { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<AllocationEnable> get_AllocationEnable();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllocationEnable(Nullable`1<AllocationEnable> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NodeConcurrentRecoveries();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NodeConcurrentRecoveries(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_NodeInitialPrimariesRecoveries();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NodeInitialPrimariesRecoveries(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SameShardHost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SameShardHost(Nullable`1<bool> value);
}
public class OpenSearch.Client.ShardAllocationSettingsDescriptor : DescriptorBase`2<ShardAllocationSettingsDescriptor, IShardAllocationSettings> {
    [CompilerGeneratedAttribute]
private Nullable`1<AllocationEnable> <OpenSearch.Client.IShardAllocationSettings.AllocationEnable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IShardAllocationSettings.NodeConcurrentRecoveries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IShardAllocationSettings.NodeInitialPrimariesRecoveries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IShardAllocationSettings.SameShardHost>k__BackingField;
    private Nullable`1<AllocationEnable> OpenSearch.Client.IShardAllocationSettings.AllocationEnable { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IShardAllocationSettings.NodeConcurrentRecoveries { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IShardAllocationSettings.NodeInitialPrimariesRecoveries { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IShardAllocationSettings.SameShardHost { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<AllocationEnable> OpenSearch.Client.IShardAllocationSettings.get_AllocationEnable();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShardAllocationSettings.set_AllocationEnable(Nullable`1<AllocationEnable> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IShardAllocationSettings.get_NodeConcurrentRecoveries();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShardAllocationSettings.set_NodeConcurrentRecoveries(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IShardAllocationSettings.get_NodeInitialPrimariesRecoveries();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShardAllocationSettings.set_NodeInitialPrimariesRecoveries(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IShardAllocationSettings.get_SameShardHost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShardAllocationSettings.set_SameShardHost(Nullable`1<bool> value);
    public ShardAllocationSettingsDescriptor AllocationEnable(Nullable`1<AllocationEnable> enable);
    public ShardAllocationSettingsDescriptor NodeConcurrentRecoveries(Nullable`1<int> concurrent);
    public ShardAllocationSettingsDescriptor NodeInitialPrimariesRecoveries(Nullable`1<int> initial);
    public ShardAllocationSettingsDescriptor SameShardHost(Nullable`1<bool> same);
}
public class OpenSearch.Client.ShardBalancingHeuristicsSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <BalanceIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <BalanceShard>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <BalanceThreshold>k__BackingField;
    public Nullable`1<float> BalanceIndex { get; public set; }
    public Nullable`1<float> BalanceShard { get; public set; }
    public Nullable`1<float> BalanceThreshold { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_BalanceIndex();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BalanceIndex(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_BalanceShard();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BalanceShard(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_BalanceThreshold();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BalanceThreshold(Nullable`1<float> value);
}
public class OpenSearch.Client.ShardBalancingHeuristicsSettingsDescriptor : DescriptorBase`2<ShardBalancingHeuristicsSettingsDescriptor, IShardBalancingHeuristicsSettings> {
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IShardBalancingHeuristicsSettings.BalanceIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IShardBalancingHeuristicsSettings.BalanceShard>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.IShardBalancingHeuristicsSettings.BalanceThreshold>k__BackingField;
    private Nullable`1<float> OpenSearch.Client.IShardBalancingHeuristicsSettings.BalanceIndex { get; private set; }
    private Nullable`1<float> OpenSearch.Client.IShardBalancingHeuristicsSettings.BalanceShard { get; private set; }
    private Nullable`1<float> OpenSearch.Client.IShardBalancingHeuristicsSettings.BalanceThreshold { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IShardBalancingHeuristicsSettings.get_BalanceIndex();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShardBalancingHeuristicsSettings.set_BalanceIndex(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IShardBalancingHeuristicsSettings.get_BalanceShard();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShardBalancingHeuristicsSettings.set_BalanceShard(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.IShardBalancingHeuristicsSettings.get_BalanceThreshold();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShardBalancingHeuristicsSettings.set_BalanceThreshold(Nullable`1<float> value);
    public ShardBalancingHeuristicsSettingsDescriptor BalanceShard(Nullable`1<float> balance);
    public ShardBalancingHeuristicsSettingsDescriptor BalanceIndex(Nullable`1<float> balance);
    public ShardBalancingHeuristicsSettingsDescriptor BalanceThreshold(Nullable`1<float> balance);
}
[DataContractAttribute]
public class OpenSearch.Client.ShardCommitStats : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Generation>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumDocs>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <UserData>k__BackingField;
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public long Generation { get; internal set; }
    [DataMemberAttribute]
public int NumDocs { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, string> UserData { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public long get_Generation();
    [CompilerGeneratedAttribute]
internal void set_Generation(long value);
    [CompilerGeneratedAttribute]
public int get_NumDocs();
    [CompilerGeneratedAttribute]
internal void set_NumDocs(int value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_UserData();
    [CompilerGeneratedAttribute]
internal void set_UserData(IReadOnlyDictionary`2<string, string> value);
}
[DataContractAttribute]
public class OpenSearch.Client.ShardHealthStats : object {
    [CompilerGeneratedAttribute]
private int <ActiveShards>k__BackingField;
    [CompilerGeneratedAttribute]
private int <InitializingShards>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PrimaryActive>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RelocatingShards>k__BackingField;
    [CompilerGeneratedAttribute]
private Health <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UnassignedShards>k__BackingField;
    [DataMemberAttribute]
public int ActiveShards { get; internal set; }
    [DataMemberAttribute]
public int InitializingShards { get; internal set; }
    [DataMemberAttribute]
public bool PrimaryActive { get; internal set; }
    [DataMemberAttribute]
public int RelocatingShards { get; internal set; }
    [DataMemberAttribute]
public Health Status { get; internal set; }
    [DataMemberAttribute]
public int UnassignedShards { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_ActiveShards();
    [CompilerGeneratedAttribute]
internal void set_ActiveShards(int value);
    [CompilerGeneratedAttribute]
public int get_InitializingShards();
    [CompilerGeneratedAttribute]
internal void set_InitializingShards(int value);
    [CompilerGeneratedAttribute]
public bool get_PrimaryActive();
    [CompilerGeneratedAttribute]
internal void set_PrimaryActive(bool value);
    [CompilerGeneratedAttribute]
public int get_RelocatingShards();
    [CompilerGeneratedAttribute]
internal void set_RelocatingShards(int value);
    [CompilerGeneratedAttribute]
public Health get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(Health value);
    [CompilerGeneratedAttribute]
public int get_UnassignedShards();
    [CompilerGeneratedAttribute]
internal void set_UnassignedShards(int value);
}
[DataContractAttribute]
public class OpenSearch.Client.ShardPath : object {
    [CompilerGeneratedAttribute]
private string <StatePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataPath>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCustomDataPath>k__BackingField;
    [DataMemberAttribute]
public string StatePath { get; internal set; }
    [DataMemberAttribute]
public string DataPath { get; internal set; }
    [DataMemberAttribute]
public bool IsCustomDataPath { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_StatePath();
    [CompilerGeneratedAttribute]
internal void set_StatePath(string value);
    [CompilerGeneratedAttribute]
public string get_DataPath();
    [CompilerGeneratedAttribute]
internal void set_DataPath(string value);
    [CompilerGeneratedAttribute]
public bool get_IsCustomDataPath();
    [CompilerGeneratedAttribute]
internal void set_IsCustomDataPath(bool value);
}
public class OpenSearch.Client.ShardProfile : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<AggregationProfile> <Aggregations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<SearchProfile> <Searches>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<AggregationProfile> Aggregations { get; internal set; }
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<SearchProfile> Searches { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<AggregationProfile> get_Aggregations();
    [CompilerGeneratedAttribute]
internal void set_Aggregations(IReadOnlyCollection`1<AggregationProfile> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<SearchProfile> get_Searches();
    [CompilerGeneratedAttribute]
internal void set_Searches(IReadOnlyCollection`1<SearchProfile> value);
}
public class OpenSearch.Client.ShardRebalancingSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<AllowRebalance> <AllowRebalance>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConcurrentRebalance>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RebalanceEnable> <RebalanceEnable>k__BackingField;
    public Nullable`1<AllowRebalance> AllowRebalance { get; public set; }
    public Nullable`1<int> ConcurrentRebalance { get; public set; }
    public Nullable`1<RebalanceEnable> RebalanceEnable { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<AllowRebalance> get_AllowRebalance();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowRebalance(Nullable`1<AllowRebalance> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ConcurrentRebalance();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConcurrentRebalance(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<RebalanceEnable> get_RebalanceEnable();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RebalanceEnable(Nullable`1<RebalanceEnable> value);
}
public class OpenSearch.Client.ShardRebalancingSettingsDescriptor : DescriptorBase`2<ShardRebalancingSettingsDescriptor, IShardRebalancingSettings> {
    [CompilerGeneratedAttribute]
private Nullable`1<AllowRebalance> <OpenSearch.Client.IShardRebalancingSettings.AllowRebalance>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IShardRebalancingSettings.ConcurrentRebalance>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RebalanceEnable> <OpenSearch.Client.IShardRebalancingSettings.RebalanceEnable>k__BackingField;
    private Nullable`1<AllowRebalance> OpenSearch.Client.IShardRebalancingSettings.AllowRebalance { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IShardRebalancingSettings.ConcurrentRebalance { get; private set; }
    private Nullable`1<RebalanceEnable> OpenSearch.Client.IShardRebalancingSettings.RebalanceEnable { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<AllowRebalance> OpenSearch.Client.IShardRebalancingSettings.get_AllowRebalance();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShardRebalancingSettings.set_AllowRebalance(Nullable`1<AllowRebalance> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IShardRebalancingSettings.get_ConcurrentRebalance();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShardRebalancingSettings.set_ConcurrentRebalance(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<RebalanceEnable> OpenSearch.Client.IShardRebalancingSettings.get_RebalanceEnable();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShardRebalancingSettings.set_RebalanceEnable(Nullable`1<RebalanceEnable> value);
    public ShardRebalancingSettingsDescriptor RebalanceEnable(Nullable`1<RebalanceEnable> enable);
    public ShardRebalancingSettingsDescriptor AllowRebalance(Nullable`1<AllowRebalance> enable);
    public ShardRebalancingSettingsDescriptor ConcurrentRebalance(Nullable`1<int> concurrent);
}
[DataContractAttribute]
public class OpenSearch.Client.ShardRetentionLease : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RetainingSequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public long RetainingSequenceNumber { get; internal set; }
    [DataMemberAttribute]
public long Timestamp { get; internal set; }
    [DataMemberAttribute]
public string Source { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public long get_RetainingSequenceNumber();
    [CompilerGeneratedAttribute]
internal void set_RetainingSequenceNumber(long value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(long value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
internal void set_Source(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.ShardRetentionLeasesStats : object {
    [CompilerGeneratedAttribute]
private long <PrimaryTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ShardRetentionLease> <Leases>k__BackingField;
    [DataMemberAttribute]
public long PrimaryTerm { get; internal set; }
    [DataMemberAttribute]
public long Version { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ShardRetentionLease> Leases { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_PrimaryTerm();
    [CompilerGeneratedAttribute]
internal void set_PrimaryTerm(long value);
    [CompilerGeneratedAttribute]
public long get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(long value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ShardRetentionLease> get_Leases();
    [CompilerGeneratedAttribute]
internal void set_Leases(IReadOnlyCollection`1<ShardRetentionLease> value);
}
[DataContractAttribute]
public class OpenSearch.Client.ShardRouting : object {
    [CompilerGeneratedAttribute]
private ShardRoutingState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Primary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelocatingNode>k__BackingField;
    [DataMemberAttribute]
public ShardRoutingState State { get; internal set; }
    [DataMemberAttribute]
public bool Primary { get; internal set; }
    [DataMemberAttribute]
public string Node { get; internal set; }
    [DataMemberAttribute]
public string RelocatingNode { get; internal set; }
    [CompilerGeneratedAttribute]
public ShardRoutingState get_State();
    [CompilerGeneratedAttribute]
internal void set_State(ShardRoutingState value);
    [CompilerGeneratedAttribute]
public bool get_Primary();
    [CompilerGeneratedAttribute]
internal void set_Primary(bool value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
internal void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_RelocatingNode();
    [CompilerGeneratedAttribute]
internal void set_RelocatingNode(string value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.ShardRoutingState : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ShardRoutingState Initializing;
    [EnumMemberAttribute]
public static ShardRoutingState Relocating;
    [EnumMemberAttribute]
public static ShardRoutingState Started;
    [EnumMemberAttribute]
public static ShardRoutingState Unassigned;
}
[DataContractAttribute]
public class OpenSearch.Client.ShardSequenceNumberStats : object {
    [CompilerGeneratedAttribute]
private long <MaxSequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private long <LocalCheckpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private long <GlobalCheckpoint>k__BackingField;
    [DataMemberAttribute]
public long MaxSequenceNumber { get; internal set; }
    [DataMemberAttribute]
public long LocalCheckpoint { get; internal set; }
    [DataMemberAttribute]
public long GlobalCheckpoint { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_MaxSequenceNumber();
    [CompilerGeneratedAttribute]
internal void set_MaxSequenceNumber(long value);
    [CompilerGeneratedAttribute]
public long get_LocalCheckpoint();
    [CompilerGeneratedAttribute]
internal void set_LocalCheckpoint(long value);
    [CompilerGeneratedAttribute]
public long get_GlobalCheckpoint();
    [CompilerGeneratedAttribute]
internal void set_GlobalCheckpoint(long value);
}
public abstract class OpenSearch.Client.ShardsOperationResponseBase : ResponseBase {
    [CompilerGeneratedAttribute]
private ShardStatistics <Shards>k__BackingField;
    [DataMemberAttribute]
public ShardStatistics Shards { get; internal set; }
    [CompilerGeneratedAttribute]
public ShardStatistics get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ShardStatistics value);
}
public class OpenSearch.Client.ShardStatistics : object {
    [CompilerGeneratedAttribute]
private int <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ShardFailure> <Failures>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Successful>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Total>k__BackingField;
    [DataMemberAttribute]
public int Failed { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ShardFailure> Failures { get; internal set; }
    [DataMemberAttribute]
public int Successful { get; internal set; }
    [DataMemberAttribute]
public int Total { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_Failed();
    [CompilerGeneratedAttribute]
internal void set_Failed(int value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ShardFailure> get_Failures();
    [CompilerGeneratedAttribute]
internal void set_Failures(IReadOnlyCollection`1<ShardFailure> value);
    [CompilerGeneratedAttribute]
public int get_Successful();
    [CompilerGeneratedAttribute]
internal void set_Successful(int value);
    [CompilerGeneratedAttribute]
public int get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(int value);
}
public class OpenSearch.Client.ShingleTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private string <FillerToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxShingleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinShingleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OutputUnigrams>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OutputUnigramsIfNoShingles>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenSeparator>k__BackingField;
    public string FillerToken { get; public set; }
    public Nullable`1<int> MaxShingleSize { get; public set; }
    public Nullable`1<int> MinShingleSize { get; public set; }
    public Nullable`1<bool> OutputUnigrams { get; public set; }
    public Nullable`1<bool> OutputUnigramsIfNoShingles { get; public set; }
    public string TokenSeparator { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_FillerToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FillerToken(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxShingleSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxShingleSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinShingleSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinShingleSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_OutputUnigrams();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OutputUnigrams(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_OutputUnigramsIfNoShingles();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OutputUnigramsIfNoShingles(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TokenSeparator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TokenSeparator(string value);
}
public class OpenSearch.Client.ShingleTokenFilterDescriptor : TokenFilterDescriptorBase`2<ShingleTokenFilterDescriptor, IShingleTokenFilter> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IShingleTokenFilter.FillerToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IShingleTokenFilter.MaxShingleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IShingleTokenFilter.MinShingleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IShingleTokenFilter.OutputUnigrams>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IShingleTokenFilter.OutputUnigramsIfNoShingles>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IShingleTokenFilter.TokenSeparator>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.IShingleTokenFilter.FillerToken { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IShingleTokenFilter.MaxShingleSize { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IShingleTokenFilter.MinShingleSize { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IShingleTokenFilter.OutputUnigrams { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IShingleTokenFilter.OutputUnigramsIfNoShingles { get; private set; }
    private string OpenSearch.Client.IShingleTokenFilter.TokenSeparator { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IShingleTokenFilter.get_FillerToken();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShingleTokenFilter.set_FillerToken(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IShingleTokenFilter.get_MaxShingleSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShingleTokenFilter.set_MaxShingleSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IShingleTokenFilter.get_MinShingleSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShingleTokenFilter.set_MinShingleSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IShingleTokenFilter.get_OutputUnigrams();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShingleTokenFilter.set_OutputUnigrams(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IShingleTokenFilter.get_OutputUnigramsIfNoShingles();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShingleTokenFilter.set_OutputUnigramsIfNoShingles(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IShingleTokenFilter.get_TokenSeparator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShingleTokenFilter.set_TokenSeparator(string value);
    public ShingleTokenFilterDescriptor OutputUnigrams(Nullable`1<bool> output);
    public ShingleTokenFilterDescriptor OutputUnigramsIfNoShingles(Nullable`1<bool> outputIfNo);
    public ShingleTokenFilterDescriptor MinShingleSize(Nullable`1<int> minShingleSize);
    public ShingleTokenFilterDescriptor MaxShingleSize(Nullable`1<int> maxShingleSize);
    public ShingleTokenFilterDescriptor TokenSeparator(string separator);
    public ShingleTokenFilterDescriptor FillerToken(string filler);
}
public class OpenSearch.Client.ShrinkIndexDescriptor : RequestDescriptorBase`3<ShrinkIndexDescriptor, ShrinkIndexRequestParameters, IShrinkIndexRequest> {
    [CompilerGeneratedAttribute]
private IAliases <OpenSearch.Client.IShrinkIndexRequest.Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <OpenSearch.Client.IShrinkIndexRequest.Settings>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.IShrinkIndexRequest.Index { get; }
    private IndexName OpenSearch.Client.IShrinkIndexRequest.Target { get; }
    private IAliases OpenSearch.Client.IShrinkIndexRequest.Aliases { get; private set; }
    private IIndexSettings OpenSearch.Client.IShrinkIndexRequest.Settings { get; private set; }
    public ShrinkIndexDescriptor(IndexName index, IndexName target);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IShrinkIndexRequest.get_Index();
    private sealed virtual override IndexName OpenSearch.Client.IShrinkIndexRequest.get_Target();
    public ShrinkIndexDescriptor Index(IndexName index);
    public ShrinkIndexDescriptor Index();
    public ShrinkIndexDescriptor MasterTimeout(Time mastertimeout);
    public ShrinkIndexDescriptor ClusterManagerTimeout(Time timeout);
    public ShrinkIndexDescriptor Timeout(Time timeout);
    public ShrinkIndexDescriptor WaitForActiveShards(string waitforactiveshards);
    [CompilerGeneratedAttribute]
private sealed virtual override IAliases OpenSearch.Client.IShrinkIndexRequest.get_Aliases();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShrinkIndexRequest.set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIndexSettings OpenSearch.Client.IShrinkIndexRequest.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IShrinkIndexRequest.set_Settings(IIndexSettings value);
    public ShrinkIndexDescriptor Settings(Func`2<IndexSettingsDescriptor, IPromise`1<IIndexSettings>> selector);
    public ShrinkIndexDescriptor Aliases(Func`2<AliasesDescriptor, IPromise`1<IAliases>> selector);
}
public class OpenSearch.Client.ShrinkIndexRequest : PlainRequestBase`1<ShrinkIndexRequestParameters> {
    [CompilerGeneratedAttribute]
private IAliases <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <Settings>k__BackingField;
    public IAliases Aliases { get; public set; }
    public IIndexSettings Settings { get; public set; }
    protected IShrinkIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IShrinkIndexRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IShrinkIndexRequest.Target { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public ShrinkIndexRequest(IndexName index, IndexName target);
    [CompilerGeneratedAttribute]
public sealed virtual IAliases get_Aliases();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
public sealed virtual IIndexSettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IIndexSettings value);
    protected IShrinkIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IShrinkIndexRequest.get_Index();
    private sealed virtual override IndexName OpenSearch.Client.IShrinkIndexRequest.get_Target();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
public class OpenSearch.Client.ShrinkIndexResponse : AcknowledgedResponseBase {
    [CompilerGeneratedAttribute]
private bool <ShardsAcknowledged>k__BackingField;
    [DataMemberAttribute]
public bool ShardsAcknowledged { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_ShardsAcknowledged();
    [CompilerGeneratedAttribute]
internal void set_ShardsAcknowledged(bool value);
}
public class OpenSearch.Client.SignificantTermsAggregate`1 : MultiBucketAggregate`1<SignificantTermsBucket`1<TKey>> {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <BgCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DocCount>k__BackingField;
    public Nullable`1<long> BgCount { get; public set; }
    public long DocCount { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_BgCount();
    [CompilerGeneratedAttribute]
public void set_BgCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public long get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(long value);
}
public class OpenSearch.Client.SignificantTermsAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private QueryContainer <BackgroundFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IChiSquareHeuristic <ChiSquare>k__BackingField;
    [CompilerGeneratedAttribute]
private IncludeExclude <Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermsAggregationExecutionHint> <ExecutionHint>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IGoogleNormalizedDistanceHeuristic <GoogleNormalizedDistance>k__BackingField;
    [CompilerGeneratedAttribute]
private IncludeExclude <Include>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IMutualInformationHeuristic <MutualInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private IPercentageScoreHeuristic <PercentageScore>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptedHeuristic <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ShardMinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    public QueryContainer BackgroundFilter { get; public set; }
    public IChiSquareHeuristic ChiSquare { get; public set; }
    public IncludeExclude Exclude { get; public set; }
    public Nullable`1<TermsAggregationExecutionHint> ExecutionHint { get; public set; }
    public Field Field { get; public set; }
    public IGoogleNormalizedDistanceHeuristic GoogleNormalizedDistance { get; public set; }
    public IncludeExclude Include { get; public set; }
    public Nullable`1<long> MinimumDocumentCount { get; public set; }
    public IMutualInformationHeuristic MutualInformation { get; public set; }
    public IPercentageScoreHeuristic PercentageScore { get; public set; }
    public IScriptedHeuristic Script { get; public set; }
    public Nullable`1<long> ShardMinimumDocumentCount { get; public set; }
    public Nullable`1<int> ShardSize { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public SignificantTermsAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_BackgroundFilter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BackgroundFilter(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IChiSquareHeuristic get_ChiSquare();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChiSquare(IChiSquareHeuristic value);
    [CompilerGeneratedAttribute]
public sealed virtual IncludeExclude get_Exclude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Exclude(IncludeExclude value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TermsAggregationExecutionHint> get_ExecutionHint();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExecutionHint(Nullable`1<TermsAggregationExecutionHint> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual IGoogleNormalizedDistanceHeuristic get_GoogleNormalizedDistance();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GoogleNormalizedDistance(IGoogleNormalizedDistanceHeuristic value);
    [CompilerGeneratedAttribute]
public sealed virtual IncludeExclude get_Include();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Include(IncludeExclude value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumDocumentCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual IMutualInformationHeuristic get_MutualInformation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MutualInformation(IMutualInformationHeuristic value);
    [CompilerGeneratedAttribute]
public sealed virtual IPercentageScoreHeuristic get_PercentageScore();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PercentageScore(IPercentageScoreHeuristic value);
    [CompilerGeneratedAttribute]
public sealed virtual IScriptedHeuristic get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScriptedHeuristic value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_ShardMinimumDocumentCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardMinimumDocumentCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.SignificantTermsAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<SignificantTermsAggregationDescriptor`1<T>, ISignificantTermsAggregation, T> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.ISignificantTermsAggregation.BackgroundFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IChiSquareHeuristic <OpenSearch.Client.ISignificantTermsAggregation.ChiSquare>k__BackingField;
    [CompilerGeneratedAttribute]
private IncludeExclude <OpenSearch.Client.ISignificantTermsAggregation.Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermsAggregationExecutionHint> <OpenSearch.Client.ISignificantTermsAggregation.ExecutionHint>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISignificantTermsAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private IGoogleNormalizedDistanceHeuristic <OpenSearch.Client.ISignificantTermsAggregation.GoogleNormalizedDistance>k__BackingField;
    [CompilerGeneratedAttribute]
private IncludeExclude <OpenSearch.Client.ISignificantTermsAggregation.Include>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.ISignificantTermsAggregation.MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IMutualInformationHeuristic <OpenSearch.Client.ISignificantTermsAggregation.MutualInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private IPercentageScoreHeuristic <OpenSearch.Client.ISignificantTermsAggregation.PercentageScore>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptedHeuristic <OpenSearch.Client.ISignificantTermsAggregation.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.ISignificantTermsAggregation.ShardMinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISignificantTermsAggregation.ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISignificantTermsAggregation.Size>k__BackingField;
    private QueryContainer OpenSearch.Client.ISignificantTermsAggregation.BackgroundFilter { get; private set; }
    private IChiSquareHeuristic OpenSearch.Client.ISignificantTermsAggregation.ChiSquare { get; private set; }
    private IncludeExclude OpenSearch.Client.ISignificantTermsAggregation.Exclude { get; private set; }
    private Nullable`1<TermsAggregationExecutionHint> OpenSearch.Client.ISignificantTermsAggregation.ExecutionHint { get; private set; }
    private Field OpenSearch.Client.ISignificantTermsAggregation.Field { get; private set; }
    private IGoogleNormalizedDistanceHeuristic OpenSearch.Client.ISignificantTermsAggregation.GoogleNormalizedDistance { get; private set; }
    private IncludeExclude OpenSearch.Client.ISignificantTermsAggregation.Include { get; private set; }
    private Nullable`1<long> OpenSearch.Client.ISignificantTermsAggregation.MinimumDocumentCount { get; private set; }
    private IMutualInformationHeuristic OpenSearch.Client.ISignificantTermsAggregation.MutualInformation { get; private set; }
    private IPercentageScoreHeuristic OpenSearch.Client.ISignificantTermsAggregation.PercentageScore { get; private set; }
    private IScriptedHeuristic OpenSearch.Client.ISignificantTermsAggregation.Script { get; private set; }
    private Nullable`1<long> OpenSearch.Client.ISignificantTermsAggregation.ShardMinimumDocumentCount { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISignificantTermsAggregation.ShardSize { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISignificantTermsAggregation.Size { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.ISignificantTermsAggregation.get_BackgroundFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_BackgroundFilter(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IChiSquareHeuristic OpenSearch.Client.ISignificantTermsAggregation.get_ChiSquare();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_ChiSquare(IChiSquareHeuristic value);
    [CompilerGeneratedAttribute]
private sealed virtual override IncludeExclude OpenSearch.Client.ISignificantTermsAggregation.get_Exclude();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_Exclude(IncludeExclude value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TermsAggregationExecutionHint> OpenSearch.Client.ISignificantTermsAggregation.get_ExecutionHint();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_ExecutionHint(Nullable`1<TermsAggregationExecutionHint> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISignificantTermsAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override IGoogleNormalizedDistanceHeuristic OpenSearch.Client.ISignificantTermsAggregation.get_GoogleNormalizedDistance();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_GoogleNormalizedDistance(IGoogleNormalizedDistanceHeuristic value);
    [CompilerGeneratedAttribute]
private sealed virtual override IncludeExclude OpenSearch.Client.ISignificantTermsAggregation.get_Include();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_Include(IncludeExclude value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.ISignificantTermsAggregation.get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_MinimumDocumentCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMutualInformationHeuristic OpenSearch.Client.ISignificantTermsAggregation.get_MutualInformation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_MutualInformation(IMutualInformationHeuristic value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPercentageScoreHeuristic OpenSearch.Client.ISignificantTermsAggregation.get_PercentageScore();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_PercentageScore(IPercentageScoreHeuristic value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScriptedHeuristic OpenSearch.Client.ISignificantTermsAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_Script(IScriptedHeuristic value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.ISignificantTermsAggregation.get_ShardMinimumDocumentCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_ShardMinimumDocumentCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISignificantTermsAggregation.get_ShardSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISignificantTermsAggregation.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTermsAggregation.set_Size(Nullable`1<int> value);
    public SignificantTermsAggregationDescriptor`1<T> Field(Field field);
    public SignificantTermsAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public SignificantTermsAggregationDescriptor`1<T> Size(Nullable`1<int> size);
    public SignificantTermsAggregationDescriptor`1<T> ExecutionHint(Nullable`1<TermsAggregationExecutionHint> hint);
    public SignificantTermsAggregationDescriptor`1<T> Include(string includePattern);
    public SignificantTermsAggregationDescriptor`1<T> Include(IEnumerable`1<string> values);
    public SignificantTermsAggregationDescriptor`1<T> Exclude(string excludePattern);
    public SignificantTermsAggregationDescriptor`1<T> Exclude(IEnumerable`1<string> values);
    public SignificantTermsAggregationDescriptor`1<T> ShardSize(Nullable`1<int> shardSize);
    public SignificantTermsAggregationDescriptor`1<T> MinimumDocumentCount(Nullable`1<long> minimumDocumentCount);
    public SignificantTermsAggregationDescriptor`1<T> ShardMinimumDocumentCount(Nullable`1<long> shardMinimumDocumentCount);
    public SignificantTermsAggregationDescriptor`1<T> MutualInformation(Func`2<MutualInformationHeuristicDescriptor, IMutualInformationHeuristic> mutualInformationSelector);
    public SignificantTermsAggregationDescriptor`1<T> ChiSquare(Func`2<ChiSquareHeuristicDescriptor, IChiSquareHeuristic> chiSquareSelector);
    public SignificantTermsAggregationDescriptor`1<T> GoogleNormalizedDistance(Func`2<GoogleNormalizedDistanceHeuristicDescriptor, IGoogleNormalizedDistanceHeuristic> gndSelector);
    public SignificantTermsAggregationDescriptor`1<T> PercentageScore(Func`2<PercentageScoreHeuristicDescriptor, IPercentageScoreHeuristic> percentageScoreSelector);
    public SignificantTermsAggregationDescriptor`1<T> Script(Func`2<ScriptedHeuristicDescriptor, IScriptedHeuristic> scriptSelector);
    public SignificantTermsAggregationDescriptor`1<T> BackgroundFilter(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
}
public class OpenSearch.Client.SignificantTermsBucket`1 : BucketBase {
    [CompilerGeneratedAttribute]
private long <BgCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DocCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TKey <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Score>k__BackingField;
    public long BgCount { get; public set; }
    public long DocCount { get; public set; }
    public TKey Key { get; public set; }
    public double Score { get; public set; }
    public SignificantTermsBucket`1(IReadOnlyDictionary`2<string, IAggregate> dict);
    [CompilerGeneratedAttribute]
public long get_BgCount();
    [CompilerGeneratedAttribute]
public void set_BgCount(long value);
    [CompilerGeneratedAttribute]
public long get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(long value);
    [CompilerGeneratedAttribute]
public TKey get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(TKey value);
    [CompilerGeneratedAttribute]
public double get_Score();
    [CompilerGeneratedAttribute]
public void set_Score(double value);
}
public class OpenSearch.Client.SignificantTextAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private QueryContainer <BackgroundFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IChiSquareHeuristic <ChiSquare>k__BackingField;
    [CompilerGeneratedAttribute]
private IncludeExclude <Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermsAggregationExecutionHint> <ExecutionHint>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FilterDuplicateText>k__BackingField;
    [CompilerGeneratedAttribute]
private IGoogleNormalizedDistanceHeuristic <GoogleNormalizedDistance>k__BackingField;
    [CompilerGeneratedAttribute]
private IncludeExclude <Include>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IMutualInformationHeuristic <MutualInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private IPercentageScoreHeuristic <PercentageScore>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptedHeuristic <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ShardMinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <SourceFields>k__BackingField;
    public QueryContainer BackgroundFilter { get; public set; }
    public IChiSquareHeuristic ChiSquare { get; public set; }
    public IncludeExclude Exclude { get; public set; }
    public Nullable`1<TermsAggregationExecutionHint> ExecutionHint { get; public set; }
    public Field Field { get; public set; }
    public Nullable`1<bool> FilterDuplicateText { get; public set; }
    public IGoogleNormalizedDistanceHeuristic GoogleNormalizedDistance { get; public set; }
    public IncludeExclude Include { get; public set; }
    public Nullable`1<long> MinimumDocumentCount { get; public set; }
    public IMutualInformationHeuristic MutualInformation { get; public set; }
    public IPercentageScoreHeuristic PercentageScore { get; public set; }
    public IScriptedHeuristic Script { get; public set; }
    public Nullable`1<long> ShardMinimumDocumentCount { get; public set; }
    public Nullable`1<int> ShardSize { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public Fields SourceFields { get; public set; }
    public SignificantTextAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_BackgroundFilter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BackgroundFilter(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IChiSquareHeuristic get_ChiSquare();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChiSquare(IChiSquareHeuristic value);
    [CompilerGeneratedAttribute]
public sealed virtual IncludeExclude get_Exclude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Exclude(IncludeExclude value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TermsAggregationExecutionHint> get_ExecutionHint();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExecutionHint(Nullable`1<TermsAggregationExecutionHint> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_FilterDuplicateText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FilterDuplicateText(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IGoogleNormalizedDistanceHeuristic get_GoogleNormalizedDistance();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GoogleNormalizedDistance(IGoogleNormalizedDistanceHeuristic value);
    [CompilerGeneratedAttribute]
public sealed virtual IncludeExclude get_Include();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Include(IncludeExclude value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumDocumentCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual IMutualInformationHeuristic get_MutualInformation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MutualInformation(IMutualInformationHeuristic value);
    [CompilerGeneratedAttribute]
public sealed virtual IPercentageScoreHeuristic get_PercentageScore();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PercentageScore(IPercentageScoreHeuristic value);
    [CompilerGeneratedAttribute]
public sealed virtual IScriptedHeuristic get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScriptedHeuristic value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_ShardMinimumDocumentCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardMinimumDocumentCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_SourceFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SourceFields(Fields value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.SignificantTextAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<SignificantTextAggregationDescriptor`1<T>, ISignificantTextAggregation, T> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.ISignificantTextAggregation.BackgroundFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IChiSquareHeuristic <OpenSearch.Client.ISignificantTextAggregation.ChiSquare>k__BackingField;
    [CompilerGeneratedAttribute]
private IncludeExclude <OpenSearch.Client.ISignificantTextAggregation.Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermsAggregationExecutionHint> <OpenSearch.Client.ISignificantTextAggregation.ExecutionHint>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISignificantTextAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISignificantTextAggregation.FilterDuplicateText>k__BackingField;
    [CompilerGeneratedAttribute]
private IGoogleNormalizedDistanceHeuristic <OpenSearch.Client.ISignificantTextAggregation.GoogleNormalizedDistance>k__BackingField;
    [CompilerGeneratedAttribute]
private IncludeExclude <OpenSearch.Client.ISignificantTextAggregation.Include>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.ISignificantTextAggregation.MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IMutualInformationHeuristic <OpenSearch.Client.ISignificantTextAggregation.MutualInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private IPercentageScoreHeuristic <OpenSearch.Client.ISignificantTextAggregation.PercentageScore>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptedHeuristic <OpenSearch.Client.ISignificantTextAggregation.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.ISignificantTextAggregation.ShardMinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISignificantTextAggregation.ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISignificantTextAggregation.Size>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ISignificantTextAggregation.SourceFields>k__BackingField;
    private QueryContainer OpenSearch.Client.ISignificantTextAggregation.BackgroundFilter { get; private set; }
    private IChiSquareHeuristic OpenSearch.Client.ISignificantTextAggregation.ChiSquare { get; private set; }
    private IncludeExclude OpenSearch.Client.ISignificantTextAggregation.Exclude { get; private set; }
    private Nullable`1<TermsAggregationExecutionHint> OpenSearch.Client.ISignificantTextAggregation.ExecutionHint { get; private set; }
    private Field OpenSearch.Client.ISignificantTextAggregation.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISignificantTextAggregation.FilterDuplicateText { get; private set; }
    private IGoogleNormalizedDistanceHeuristic OpenSearch.Client.ISignificantTextAggregation.GoogleNormalizedDistance { get; private set; }
    private IncludeExclude OpenSearch.Client.ISignificantTextAggregation.Include { get; private set; }
    private Nullable`1<long> OpenSearch.Client.ISignificantTextAggregation.MinimumDocumentCount { get; private set; }
    private IMutualInformationHeuristic OpenSearch.Client.ISignificantTextAggregation.MutualInformation { get; private set; }
    private IPercentageScoreHeuristic OpenSearch.Client.ISignificantTextAggregation.PercentageScore { get; private set; }
    private IScriptedHeuristic OpenSearch.Client.ISignificantTextAggregation.Script { get; private set; }
    private Nullable`1<long> OpenSearch.Client.ISignificantTextAggregation.ShardMinimumDocumentCount { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISignificantTextAggregation.ShardSize { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISignificantTextAggregation.Size { get; private set; }
    private Fields OpenSearch.Client.ISignificantTextAggregation.SourceFields { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.ISignificantTextAggregation.get_BackgroundFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_BackgroundFilter(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IChiSquareHeuristic OpenSearch.Client.ISignificantTextAggregation.get_ChiSquare();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_ChiSquare(IChiSquareHeuristic value);
    [CompilerGeneratedAttribute]
private sealed virtual override IncludeExclude OpenSearch.Client.ISignificantTextAggregation.get_Exclude();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_Exclude(IncludeExclude value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TermsAggregationExecutionHint> OpenSearch.Client.ISignificantTextAggregation.get_ExecutionHint();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_ExecutionHint(Nullable`1<TermsAggregationExecutionHint> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISignificantTextAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISignificantTextAggregation.get_FilterDuplicateText();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_FilterDuplicateText(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IGoogleNormalizedDistanceHeuristic OpenSearch.Client.ISignificantTextAggregation.get_GoogleNormalizedDistance();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_GoogleNormalizedDistance(IGoogleNormalizedDistanceHeuristic value);
    [CompilerGeneratedAttribute]
private sealed virtual override IncludeExclude OpenSearch.Client.ISignificantTextAggregation.get_Include();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_Include(IncludeExclude value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.ISignificantTextAggregation.get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_MinimumDocumentCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IMutualInformationHeuristic OpenSearch.Client.ISignificantTextAggregation.get_MutualInformation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_MutualInformation(IMutualInformationHeuristic value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPercentageScoreHeuristic OpenSearch.Client.ISignificantTextAggregation.get_PercentageScore();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_PercentageScore(IPercentageScoreHeuristic value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScriptedHeuristic OpenSearch.Client.ISignificantTextAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_Script(IScriptedHeuristic value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.ISignificantTextAggregation.get_ShardMinimumDocumentCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_ShardMinimumDocumentCount(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISignificantTextAggregation.get_ShardSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISignificantTextAggregation.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ISignificantTextAggregation.get_SourceFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISignificantTextAggregation.set_SourceFields(Fields value);
    public SignificantTextAggregationDescriptor`1<T> Field(Field field);
    public SignificantTextAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public SignificantTextAggregationDescriptor`1<T> Size(Nullable`1<int> size);
    public SignificantTextAggregationDescriptor`1<T> ExecutionHint(Nullable`1<TermsAggregationExecutionHint> hint);
    public SignificantTextAggregationDescriptor`1<T> Include(string includePattern);
    public SignificantTextAggregationDescriptor`1<T> Include(IEnumerable`1<string> values);
    public SignificantTextAggregationDescriptor`1<T> Exclude(string excludePattern);
    public SignificantTextAggregationDescriptor`1<T> Exclude(IEnumerable`1<string> values);
    public SignificantTextAggregationDescriptor`1<T> ShardSize(Nullable`1<int> shardSize);
    public SignificantTextAggregationDescriptor`1<T> MinimumDocumentCount(Nullable`1<long> minimumDocumentCount);
    public SignificantTextAggregationDescriptor`1<T> ShardMinimumDocumentCount(Nullable`1<long> shardMinimumDocumentCount);
    public SignificantTextAggregationDescriptor`1<T> MutualInformation(Func`2<MutualInformationHeuristicDescriptor, IMutualInformationHeuristic> mutualInformationSelector);
    public SignificantTextAggregationDescriptor`1<T> ChiSquare(Func`2<ChiSquareHeuristicDescriptor, IChiSquareHeuristic> chiSquareSelector);
    public SignificantTextAggregationDescriptor`1<T> GoogleNormalizedDistance(Func`2<GoogleNormalizedDistanceHeuristicDescriptor, IGoogleNormalizedDistanceHeuristic> gndSelector);
    public SignificantTextAggregationDescriptor`1<T> PercentageScore(Func`2<PercentageScoreHeuristicDescriptor, IPercentageScoreHeuristic> percentageScoreSelector);
    public SignificantTextAggregationDescriptor`1<T> Script(Func`2<ScriptedHeuristicDescriptor, IScriptedHeuristic> scriptSelector);
    public SignificantTextAggregationDescriptor`1<T> BackgroundFilter(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
    public SignificantTextAggregationDescriptor`1<T> FilterDuplicateText(Nullable`1<bool> filterDuplicateText);
    public SignificantTextAggregationDescriptor`1<T> SourceFields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> sourceFields);
    public SignificantTextAggregationDescriptor`1<T> SourceFields(Fields sourceFields);
}
[JsonFormatterAttribute("OpenSearch.Client.VerbatimDictionaryKeysFormatter`4<OpenSearch.Client.Similarities,OpenSearch.Client.Similarities,System.String,OpenSearch.Client.ISimilarity>")]
public class OpenSearch.Client.Similarities : IsADictionaryBase`2<string, ISimilarity> {
    public Similarities(IDictionary`2<string, ISimilarity> container);
    public Similarities(Dictionary`2<string, ISimilarity> container);
    public sealed virtual void Add(string type, ISimilarity mapping);
}
public class OpenSearch.Client.SimilaritiesDescriptor : IsADictionaryDescriptorBase`4<SimilaritiesDescriptor, ISimilarities, string, ISimilarity> {
    public SimilaritiesDescriptor BM25(string name, Func`2<BM25SimilarityDescriptor, IBM25Similarity> selector);
    public SimilaritiesDescriptor LMDirichlet(string name, Func`2<LMDirichletSimilarityDescriptor, ILMDirichletSimilarity> selector);
    public SimilaritiesDescriptor LMJelinek(string name, Func`2<LMJelinekMercerSimilarityDescriptor, ILMJelinekMercerSimilarity> selector);
    public SimilaritiesDescriptor DFI(string name, Func`2<DFISimilarityDescriptor, IDFISimilarity> selector);
    public SimilaritiesDescriptor DFR(string name, Func`2<DFRSimilarityDescriptor, IDFRSimilarity> selector);
    public SimilaritiesDescriptor IB(string name, Func`2<IBSimilarityDescriptor, IIBSimilarity> selector);
    public SimilaritiesDescriptor Custom(string name, string type, Func`2<CustomSimilarityDescriptor, IPromise`1<ICustomSimilarity>> selector);
    public SimilaritiesDescriptor Scripted(string name, Func`2<ScriptedSimilarityDescriptor, IScriptedSimilarity> selector);
}
internal class OpenSearch.Client.SimilarityFormatter : object {
    private static AutomataDictionary Similarities;
    private static Byte[] Type;
    private static SimilarityFormatter();
    public sealed virtual ISimilarity Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, ISimilarity value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, ISimilarity value, IJsonFormatterResolver formatterResolver);
    private static TSimilarity Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.SimpleAnalyzer : AnalyzerBase {
}
public class OpenSearch.Client.SimpleAnalyzerDescriptor : AnalyzerDescriptorBase`2<SimpleAnalyzerDescriptor, ISimpleAnalyzer> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public class OpenSearch.Client.SimpleModel : object {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMovingAverageModel.Name>k__BackingField;
    private string OpenSearch.Client.IMovingAverageModel.Name { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMovingAverageModel.get_Name();
}
public class OpenSearch.Client.SimpleModelDescriptor : DescriptorBase`2<SimpleModelDescriptor, ISimpleModel> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IMovingAverageModel.Name>k__BackingField;
    private string OpenSearch.Client.IMovingAverageModel.Name { get; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IMovingAverageModel.get_Name();
}
[FlagsAttribute]
public enum OpenSearch.Client.SimpleQueryStringFlags : Enum {
    public int value__;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags None;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags And;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags Or;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags Not;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags Prefix;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags Phrase;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags Precedence;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags Escape;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags Whitespace;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags Fuzzy;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags Near;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags Slop;
    [EnumMemberAttribute]
public static SimpleQueryStringFlags All;
}
internal class OpenSearch.Client.SimpleQueryStringFlagsFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, Nullable`1<SimpleQueryStringFlags> value, IJsonFormatterResolver formatterResolver);
    public sealed virtual Nullable`1<SimpleQueryStringFlags> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.SimpleQueryStringQuery : QueryBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AnalyzeWildcard>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoGenerateSynonymsPhraseQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Operator> <DefaultOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SimpleQueryStringFlags> <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FuzzyMaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FuzzyPrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FuzzyTranspositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QuoteFieldSuffix>k__BackingField;
    public string Analyzer { get; public set; }
    public Nullable`1<bool> AnalyzeWildcard { get; public set; }
    public Nullable`1<bool> AutoGenerateSynonymsPhraseQuery { get; public set; }
    public Nullable`1<Operator> DefaultOperator { get; public set; }
    public Fields Fields { get; public set; }
    public Nullable`1<SimpleQueryStringFlags> Flags { get; public set; }
    public Nullable`1<int> FuzzyMaxExpansions { get; public set; }
    public Nullable`1<int> FuzzyPrefixLength { get; public set; }
    public Nullable`1<bool> FuzzyTranspositions { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public MinimumShouldMatch MinimumShouldMatch { get; public set; }
    public string Query { get; public set; }
    public string QuoteFieldSuffix { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AnalyzeWildcard();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AnalyzeWildcard(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AutoGenerateSynonymsPhraseQuery();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Operator> get_DefaultOperator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultOperator(Nullable`1<Operator> value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SimpleQueryStringFlags> get_Flags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Flags(Nullable`1<SimpleQueryStringFlags> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_FuzzyMaxExpansions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyMaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_FuzzyPrefixLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyPrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_FuzzyTranspositions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FuzzyTranspositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Lenient();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual MinimumShouldMatch get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_QuoteFieldSuffix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuoteFieldSuffix(string value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ISimpleQueryStringQuery q);
}
public class OpenSearch.Client.SimpleQueryStringQueryDescriptor`1 : QueryDescriptorBase`2<SimpleQueryStringQueryDescriptor`1<T>, ISimpleQueryStringQuery> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISimpleQueryStringQuery.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISimpleQueryStringQuery.AnalyzeWildcard>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISimpleQueryStringQuery.AutoGenerateSynonymsPhraseQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Operator> <OpenSearch.Client.ISimpleQueryStringQuery.DefaultOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ISimpleQueryStringQuery.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SimpleQueryStringFlags> <OpenSearch.Client.ISimpleQueryStringQuery.Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISimpleQueryStringQuery.FuzzyMaxExpansions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISimpleQueryStringQuery.FuzzyPrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISimpleQueryStringQuery.FuzzyTranspositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISimpleQueryStringQuery.Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumShouldMatch <OpenSearch.Client.ISimpleQueryStringQuery.MinimumShouldMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISimpleQueryStringQuery.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISimpleQueryStringQuery.QuoteFieldSuffix>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.ISimpleQueryStringQuery.Analyzer { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISimpleQueryStringQuery.AnalyzeWildcard { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISimpleQueryStringQuery.AutoGenerateSynonymsPhraseQuery { get; private set; }
    private Nullable`1<Operator> OpenSearch.Client.ISimpleQueryStringQuery.DefaultOperator { get; private set; }
    private Fields OpenSearch.Client.ISimpleQueryStringQuery.Fields { get; private set; }
    private Nullable`1<SimpleQueryStringFlags> OpenSearch.Client.ISimpleQueryStringQuery.Flags { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISimpleQueryStringQuery.FuzzyMaxExpansions { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISimpleQueryStringQuery.FuzzyPrefixLength { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISimpleQueryStringQuery.FuzzyTranspositions { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISimpleQueryStringQuery.Lenient { get; private set; }
    private MinimumShouldMatch OpenSearch.Client.ISimpleQueryStringQuery.MinimumShouldMatch { get; private set; }
    private string OpenSearch.Client.ISimpleQueryStringQuery.Query { get; private set; }
    private string OpenSearch.Client.ISimpleQueryStringQuery.QuoteFieldSuffix { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISimpleQueryStringQuery.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISimpleQueryStringQuery.get_AnalyzeWildcard();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_AnalyzeWildcard(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISimpleQueryStringQuery.get_AutoGenerateSynonymsPhraseQuery();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<Operator> OpenSearch.Client.ISimpleQueryStringQuery.get_DefaultOperator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_DefaultOperator(Nullable`1<Operator> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ISimpleQueryStringQuery.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_Fields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SimpleQueryStringFlags> OpenSearch.Client.ISimpleQueryStringQuery.get_Flags();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_Flags(Nullable`1<SimpleQueryStringFlags> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISimpleQueryStringQuery.get_FuzzyMaxExpansions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_FuzzyMaxExpansions(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISimpleQueryStringQuery.get_FuzzyPrefixLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_FuzzyPrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISimpleQueryStringQuery.get_FuzzyTranspositions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_FuzzyTranspositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISimpleQueryStringQuery.get_Lenient();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override MinimumShouldMatch OpenSearch.Client.ISimpleQueryStringQuery.get_MinimumShouldMatch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_MinimumShouldMatch(MinimumShouldMatch value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISimpleQueryStringQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_Query(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISimpleQueryStringQuery.get_QuoteFieldSuffix();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimpleQueryStringQuery.set_QuoteFieldSuffix(string value);
    public SimpleQueryStringQueryDescriptor`1<T> Fields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public SimpleQueryStringQueryDescriptor`1<T> Fields(Fields fields);
    public SimpleQueryStringQueryDescriptor`1<T> Query(string query);
    public SimpleQueryStringQueryDescriptor`1<T> Analyzer(string analyzer);
    public SimpleQueryStringQueryDescriptor`1<T> DefaultOperator(Nullable`1<Operator> op);
    public SimpleQueryStringQueryDescriptor`1<T> Flags(Nullable`1<SimpleQueryStringFlags> flags);
    public SimpleQueryStringQueryDescriptor`1<T> AnalyzeWildcard(Nullable`1<bool> analyzeWildcard);
    public SimpleQueryStringQueryDescriptor`1<T> Lenient(Nullable`1<bool> lenient);
    public SimpleQueryStringQueryDescriptor`1<T> MinimumShouldMatch(MinimumShouldMatch minimumShouldMatch);
    public SimpleQueryStringQueryDescriptor`1<T> QuoteFieldSuffix(string quoteFieldSuffix);
    public SimpleQueryStringQueryDescriptor`1<T> FuzzyPrefixLength(Nullable`1<int> fuzzyPrefixLength);
    public SimpleQueryStringQueryDescriptor`1<T> FuzzyMaxExpansions(Nullable`1<int> fuzzyMaxExpansions);
    public SimpleQueryStringQueryDescriptor`1<T> FuzzyTranspositions(Nullable`1<bool> fuzzyTranspositions);
    public SimpleQueryStringQueryDescriptor`1<T> AutoGenerateSynonymsPhraseQuery(Nullable`1<bool> autoGenerateSynonymsPhraseQuery);
}
public class OpenSearch.Client.SimulatePipelineDescriptor : RequestDescriptorBase`3<SimulatePipelineDescriptor, SimulatePipelineRequestParameters, ISimulatePipelineRequest> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISimulatePipelineDocument> <OpenSearch.Client.ISimulatePipelineRequest.Documents>k__BackingField;
    [CompilerGeneratedAttribute]
private IPipeline <OpenSearch.Client.ISimulatePipelineRequest.Pipeline>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Id OpenSearch.Client.ISimulatePipelineRequest.Id { get; }
    private IEnumerable`1<ISimulatePipelineDocument> OpenSearch.Client.ISimulatePipelineRequest.Documents { get; private set; }
    private IPipeline OpenSearch.Client.ISimulatePipelineRequest.Pipeline { get; private set; }
    public SimulatePipelineDescriptor(Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.ISimulatePipelineRequest.get_Id();
    public SimulatePipelineDescriptor Id(Id id);
    public SimulatePipelineDescriptor Verbose(Nullable`1<bool> verbose);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<ISimulatePipelineDocument> OpenSearch.Client.ISimulatePipelineRequest.get_Documents();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimulatePipelineRequest.set_Documents(IEnumerable`1<ISimulatePipelineDocument> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IPipeline OpenSearch.Client.ISimulatePipelineRequest.get_Pipeline();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimulatePipelineRequest.set_Pipeline(IPipeline value);
    public SimulatePipelineDescriptor Pipeline(Func`2<PipelineDescriptor, IPipeline> pipeline);
    public SimulatePipelineDescriptor Documents(IEnumerable`1<ISimulatePipelineDocument> documents);
    public SimulatePipelineDescriptor Documents(Func`2<SimulatePipelineDocumentsDescriptor, IPromise`1<IList`1<ISimulatePipelineDocument>>> selector);
}
public class OpenSearch.Client.SimulatePipelineDocument : object {
    private object _source;
    [CompilerGeneratedAttribute]
private Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    public Id Id { get; public set; }
    public IndexName Index { get; public set; }
    public object Source { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Id get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Id value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(IndexName value);
    public sealed virtual object get_Source();
    public sealed virtual void set_Source(object value);
}
public class OpenSearch.Client.SimulatePipelineDocumentDescriptor : DescriptorBase`2<SimulatePipelineDocumentDescriptor, ISimulatePipelineDocument> {
    [CompilerGeneratedAttribute]
private Id <OpenSearch.Client.ISimulatePipelineDocument.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <OpenSearch.Client.ISimulatePipelineDocument.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.ISimulatePipelineDocument.Source>k__BackingField;
    private Id OpenSearch.Client.ISimulatePipelineDocument.Id { get; private set; }
    private IndexName OpenSearch.Client.ISimulatePipelineDocument.Index { get; private set; }
    private object OpenSearch.Client.ISimulatePipelineDocument.Source { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Id OpenSearch.Client.ISimulatePipelineDocument.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimulatePipelineDocument.set_Id(Id value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexName OpenSearch.Client.ISimulatePipelineDocument.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimulatePipelineDocument.set_Index(IndexName value);
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.ISimulatePipelineDocument.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISimulatePipelineDocument.set_Source(object value);
    public SimulatePipelineDocumentDescriptor Id(Id id);
    public SimulatePipelineDocumentDescriptor Index(IndexName index);
    public SimulatePipelineDocumentDescriptor Source(T source);
}
public class OpenSearch.Client.SimulatePipelineDocumentsDescriptor : DescriptorPromiseBase`2<SimulatePipelineDocumentsDescriptor, IList`1<ISimulatePipelineDocument>> {
    public SimulatePipelineDocumentsDescriptor Document(Func`2<SimulatePipelineDocumentDescriptor, ISimulatePipelineDocument> selector);
}
public class OpenSearch.Client.SimulatePipelineRequest : PlainRequestBase`1<SimulatePipelineRequestParameters> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISimulatePipelineDocument> <Documents>k__BackingField;
    [CompilerGeneratedAttribute]
private IPipeline <Pipeline>k__BackingField;
    public IEnumerable`1<ISimulatePipelineDocument> Documents { get; public set; }
    public IPipeline Pipeline { get; public set; }
    protected ISimulatePipelineRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.ISimulatePipelineRequest.Id { get; }
    public Nullable`1<bool> Verbose { get; public set; }
    public SimulatePipelineRequest(Id id);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ISimulatePipelineDocument> get_Documents();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Documents(IEnumerable`1<ISimulatePipelineDocument> value);
    [CompilerGeneratedAttribute]
public sealed virtual IPipeline get_Pipeline();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pipeline(IPipeline value);
    protected ISimulatePipelineRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Id OpenSearch.Client.ISimulatePipelineRequest.get_Id();
    public Nullable`1<bool> get_Verbose();
    public void set_Verbose(Nullable`1<bool> value);
}
public class OpenSearch.Client.SimulatePipelineResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<PipelineSimulation> <Documents>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<PipelineSimulation> Documents { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<PipelineSimulation> get_Documents();
    [CompilerGeneratedAttribute]
internal void set_Documents(IReadOnlyCollection`1<PipelineSimulation> value);
}
public class OpenSearch.Client.SingleBucketAggregate : BucketAggregateBase {
    [CompilerGeneratedAttribute]
private long <DocCount>k__BackingField;
    public long DocCount { get; internal set; }
    public SingleBucketAggregate(IReadOnlyDictionary`2<string, IAggregate> aggregations);
    [CompilerGeneratedAttribute]
public long get_DocCount();
    [CompilerGeneratedAttribute]
internal void set_DocCount(long value);
}
public class OpenSearch.Client.SingleBucketsPath : object {
    [CompilerGeneratedAttribute]
private string <BucketsPath>k__BackingField;
    public string BucketsPath { get; }
    public SingleBucketsPath(string bucketsPath);
    [CompilerGeneratedAttribute]
public string get_BucketsPath();
    public static SingleBucketsPath op_Implicit(string bucketsPath);
}
public class OpenSearch.Client.SingleMappingSelector`1 : SelectorBase {
    public sealed virtual IProperty Binary(Func`2<BinaryPropertyDescriptor`1<T>, IBinaryProperty> selector);
    public sealed virtual IProperty Boolean(Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public sealed virtual IProperty Completion(Func`2<CompletionPropertyDescriptor`1<T>, ICompletionProperty> selector);
    public sealed virtual IProperty Date(Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual IProperty DateNanos(Func`2<DateNanosPropertyDescriptor`1<T>, IDateNanosProperty> selector);
    public sealed virtual IProperty DateRange(Func`2<DateRangePropertyDescriptor`1<T>, IDateRangeProperty> selector);
    public sealed virtual IProperty DoubleRange(Func`2<DoubleRangePropertyDescriptor`1<T>, IDoubleRangeProperty> selector);
    public sealed virtual IProperty FloatRange(Func`2<FloatRangePropertyDescriptor`1<T>, IFloatRangeProperty> selector);
    public sealed virtual IProperty GeoPoint(Func`2<GeoPointPropertyDescriptor`1<T>, IGeoPointProperty> selector);
    public sealed virtual IProperty GeoShape(Func`2<GeoShapePropertyDescriptor`1<T>, IGeoShapeProperty> selector);
    public sealed virtual IProperty IntegerRange(Func`2<IntegerRangePropertyDescriptor`1<T>, IIntegerRangeProperty> selector);
    public sealed virtual IProperty Ip(Func`2<IpPropertyDescriptor`1<T>, IIpProperty> selector);
    public sealed virtual IProperty IpRange(Func`2<IpRangePropertyDescriptor`1<T>, IIpRangeProperty> selector);
    public sealed virtual IProperty Join(Func`2<JoinPropertyDescriptor`1<T>, IJoinProperty> selector);
    public sealed virtual IProperty FieldAlias(Func`2<FieldAliasPropertyDescriptor`1<T>, IFieldAliasProperty> selector);
    public sealed virtual IProperty RankFeature(Func`2<RankFeaturePropertyDescriptor`1<T>, IRankFeatureProperty> selector);
    public sealed virtual IProperty RankFeatures(Func`2<RankFeaturesPropertyDescriptor`1<T>, IRankFeaturesProperty> selector);
    public sealed virtual IProperty Keyword(Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual IProperty LongRange(Func`2<LongRangePropertyDescriptor`1<T>, ILongRangeProperty> selector);
    public sealed virtual IProperty Murmur3Hash(Func`2<Murmur3HashPropertyDescriptor`1<T>, IMurmur3HashProperty> selector);
    public sealed virtual IProperty Nested(Func`2<NestedPropertyDescriptor`2<T, TChild>, INestedProperty> selector);
    public sealed virtual IProperty Number(Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Object(Func`2<ObjectTypeDescriptor`2<T, TChild>, IObjectProperty> selector);
    public sealed virtual IProperty Percolator(Func`2<PercolatorPropertyDescriptor`1<T>, IPercolatorProperty> selector);
    public sealed virtual IProperty Text(Func`2<TextPropertyDescriptor`1<T>, ITextProperty> selector);
    public sealed virtual IProperty TokenCount(Func`2<TokenCountPropertyDescriptor`1<T>, ITokenCountProperty> selector);
    public IProperty Generic(Func`2<GenericPropertyDescriptor`1<T>, IGenericProperty> selector);
    public sealed virtual IProperty SearchAsYouType(Func`2<SearchAsYouTypePropertyDescriptor`1<T>, ISearchAsYouTypeProperty> selector);
    public sealed virtual IProperty KnnVector(Func`2<KnnVectorPropertyDescriptor`1<T>, IKnnVectorProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, int>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<int>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<int>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<int>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, float>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<float>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<float>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<float>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, sbyte>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<sbyte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<sbyte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<sbyte>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, short>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<short>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<short>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<short>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, byte>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<byte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<byte>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<byte>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, long>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<long>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<long>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<long>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, UInt32>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<UInt32>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<UInt32>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<UInt32>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, TimeSpan>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<TimeSpan>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<TimeSpan>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<TimeSpan>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, decimal>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<decimal>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<decimal>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<decimal>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, ulong>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<ulong>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<ulong>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<ulong>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, double>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<double>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<double>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<double>>>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Enum>> field, Func`2<NumberPropertyDescriptor`1<T>, INumberProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, DateTime>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<DateTime>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<DateTime>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<DateTime>>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, DateTimeOffset>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<DateTimeOffset>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<DateTimeOffset>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<DateTimeOffset>>>> field, Func`2<DatePropertyDescriptor`1<T>, IDateProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, bool>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<bool>>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<bool>>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<bool>>>> field, Func`2<BooleanPropertyDescriptor`1<T>, IBooleanProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, char>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<char>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<char>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<char>>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Guid>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, Nullable`1<Guid>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Guid>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<Nullable`1<Guid>>>> field, Func`2<KeywordPropertyDescriptor`1<T>, IKeywordProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, string>> field, Func`2<TextPropertyDescriptor`1<T>, ITextProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IEnumerable`1<string>>> field, Func`2<TextPropertyDescriptor`1<T>, ITextProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, DateRange>> field, Func`2<DateRangePropertyDescriptor`1<T>, IDateRangeProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, DoubleRange>> field, Func`2<DoubleRangePropertyDescriptor`1<T>, IDoubleRangeProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, LongRange>> field, Func`2<LongRangePropertyDescriptor`1<T>, ILongRangeProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IntegerRange>> field, Func`2<IntegerRangePropertyDescriptor`1<T>, IIntegerRangeProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, FloatRange>> field, Func`2<FloatRangePropertyDescriptor`1<T>, IFloatRangeProperty> selector);
    public sealed virtual IProperty Scalar(Expression`1<Func`2<T, IpAddressRange>> field, Func`2<IpRangePropertyDescriptor`1<T>, IIpRangeProperty> selector);
}
internal class OpenSearch.Client.SingleOrEnumerableFormatter`1 : object {
    public sealed virtual IEnumerable`1<T> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IEnumerable`1<T> value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.SizeField : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enabled>k__BackingField;
    public Nullable`1<bool> Enabled { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Enabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Enabled(Nullable`1<bool> value);
}
public class OpenSearch.Client.SizeFieldDescriptor : DescriptorBase`2<SizeFieldDescriptor, ISizeField> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISizeField.Enabled>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.ISizeField.Enabled { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISizeField.get_Enabled();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISizeField.set_Enabled(Nullable`1<bool> value);
    public SizeFieldDescriptor Enabled(Nullable`1<bool> enabled);
}
public class OpenSearch.Client.SlicedScroll : object {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Max>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<int> Id { get; public set; }
    public Nullable`1<int> Max { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Max();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Max(Nullable`1<int> value);
}
public class OpenSearch.Client.SlicedScrollDescriptor`1 : DescriptorBase`2<SlicedScrollDescriptor`1<T>, ISlicedScroll> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISlicedScroll.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISlicedScroll.Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISlicedScroll.Max>k__BackingField;
    private Field OpenSearch.Client.ISlicedScroll.Field { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISlicedScroll.Id { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISlicedScroll.Max { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISlicedScroll.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlicedScroll.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISlicedScroll.get_Id();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlicedScroll.set_Id(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISlicedScroll.get_Max();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlicedScroll.set_Max(Nullable`1<int> value);
    public SlicedScrollDescriptor`1<T> Id(Nullable`1<int> id);
    public SlicedScrollDescriptor`1<T> Max(Nullable`1<int> max);
    public SlicedScrollDescriptor`1<T> Field(Field field);
    public SlicedScrollDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
}
[JsonFormatterAttribute("OpenSearch.Client.SlicesFormatter")]
public class OpenSearch.Client.Slices : Union`2<long, string> {
    public Slices(long value);
    public Slices(string value);
    public static Slices op_Implicit(long value);
    public static Slices op_Implicit(Nullable`1<long> value);
    public static Slices op_Implicit(string value);
    public virtual string ToString();
}
internal class OpenSearch.Client.SlicesFormatter : object {
    private static UnionFormatter`2<long, string> UnionFormatter;
    private static SlicesFormatter();
    public sealed virtual void Serialize(JsonWriter& writer, Slices value, IJsonFormatterResolver formatterResolver);
    public sealed virtual Slices Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.SlowLog : object {
    [CompilerGeneratedAttribute]
private ISlowLogIndexing <Indexing>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlowLogSearch <Search>k__BackingField;
    public ISlowLogIndexing Indexing { get; public set; }
    public ISlowLogSearch Search { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ISlowLogIndexing get_Indexing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Indexing(ISlowLogIndexing value);
    [CompilerGeneratedAttribute]
public sealed virtual ISlowLogSearch get_Search();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Search(ISlowLogSearch value);
}
public class OpenSearch.Client.SlowLogDescriptor : DescriptorBase`2<SlowLogDescriptor, ISlowLog> {
    [CompilerGeneratedAttribute]
private ISlowLogIndexing <OpenSearch.Client.ISlowLog.Indexing>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlowLogSearch <OpenSearch.Client.ISlowLog.Search>k__BackingField;
    private ISlowLogIndexing OpenSearch.Client.ISlowLog.Indexing { get; private set; }
    private ISlowLogSearch OpenSearch.Client.ISlowLog.Search { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override ISlowLogIndexing OpenSearch.Client.ISlowLog.get_Indexing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLog.set_Indexing(ISlowLogIndexing value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISlowLogSearch OpenSearch.Client.ISlowLog.get_Search();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLog.set_Search(ISlowLogSearch value);
    public SlowLogDescriptor Search(Func`2<SlowLogSearchDescriptor, ISlowLogSearch> selector);
    public SlowLogDescriptor Indexing(Func`2<SlowLogIndexingDescriptor, ISlowLogIndexing> selector);
}
public class OpenSearch.Client.SlowLogIndexing : object {
    [CompilerGeneratedAttribute]
private Nullable`1<LogLevel> <LogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ThresholdDebug>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ThresholdInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ThresholdTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ThresholdWarn>k__BackingField;
    public Nullable`1<LogLevel> LogLevel { get; public set; }
    public Nullable`1<int> Source { get; public set; }
    public Time ThresholdDebug { get; public set; }
    public Time ThresholdInfo { get; public set; }
    public Time ThresholdTrace { get; public set; }
    public Time ThresholdWarn { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<LogLevel> get_LogLevel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LogLevel(Nullable`1<LogLevel> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdDebug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdDebug(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdInfo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdInfo(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdTrace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdTrace(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdWarn();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdWarn(Time value);
}
public class OpenSearch.Client.SlowLogIndexingDescriptor : DescriptorBase`2<SlowLogIndexingDescriptor, ISlowLogIndexing> {
    [CompilerGeneratedAttribute]
private Nullable`1<LogLevel> <OpenSearch.Client.ISlowLogIndexing.LogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISlowLogIndexing.Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogIndexing.ThresholdDebug>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogIndexing.ThresholdInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogIndexing.ThresholdTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogIndexing.ThresholdWarn>k__BackingField;
    private Nullable`1<LogLevel> OpenSearch.Client.ISlowLogIndexing.LogLevel { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISlowLogIndexing.Source { get; private set; }
    private Time OpenSearch.Client.ISlowLogIndexing.ThresholdDebug { get; private set; }
    private Time OpenSearch.Client.ISlowLogIndexing.ThresholdInfo { get; private set; }
    private Time OpenSearch.Client.ISlowLogIndexing.ThresholdTrace { get; private set; }
    private Time OpenSearch.Client.ISlowLogIndexing.ThresholdWarn { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<LogLevel> OpenSearch.Client.ISlowLogIndexing.get_LogLevel();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogIndexing.set_LogLevel(Nullable`1<LogLevel> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISlowLogIndexing.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogIndexing.set_Source(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogIndexing.get_ThresholdDebug();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogIndexing.set_ThresholdDebug(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogIndexing.get_ThresholdInfo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogIndexing.set_ThresholdInfo(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogIndexing.get_ThresholdTrace();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogIndexing.set_ThresholdTrace(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogIndexing.get_ThresholdWarn();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogIndexing.set_ThresholdWarn(Time value);
    public SlowLogIndexingDescriptor LogLevel(Nullable`1<LogLevel> level);
    public SlowLogIndexingDescriptor Source(Nullable`1<int> source);
    public SlowLogIndexingDescriptor ThresholdDebug(Time time);
    public SlowLogIndexingDescriptor ThresholdInfo(Time time);
    public SlowLogIndexingDescriptor ThresholdTrace(Time time);
    public SlowLogIndexingDescriptor ThresholdWarn(Time time);
}
public class OpenSearch.Client.SlowLogSearch : object {
    [CompilerGeneratedAttribute]
private ISlowLogSearchFetch <Fetch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<LogLevel> <LogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlowLogSearchQuery <Query>k__BackingField;
    public ISlowLogSearchFetch Fetch { get; public set; }
    public Nullable`1<LogLevel> LogLevel { get; public set; }
    public ISlowLogSearchQuery Query { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ISlowLogSearchFetch get_Fetch();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fetch(ISlowLogSearchFetch value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<LogLevel> get_LogLevel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LogLevel(Nullable`1<LogLevel> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISlowLogSearchQuery get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(ISlowLogSearchQuery value);
}
public class OpenSearch.Client.SlowLogSearchDescriptor : DescriptorBase`2<SlowLogSearchDescriptor, ISlowLogSearch> {
    [CompilerGeneratedAttribute]
private ISlowLogSearchFetch <OpenSearch.Client.ISlowLogSearch.Fetch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<LogLevel> <OpenSearch.Client.ISlowLogSearch.LogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlowLogSearchQuery <OpenSearch.Client.ISlowLogSearch.Query>k__BackingField;
    private ISlowLogSearchFetch OpenSearch.Client.ISlowLogSearch.Fetch { get; private set; }
    private Nullable`1<LogLevel> OpenSearch.Client.ISlowLogSearch.LogLevel { get; private set; }
    private ISlowLogSearchQuery OpenSearch.Client.ISlowLogSearch.Query { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override ISlowLogSearchFetch OpenSearch.Client.ISlowLogSearch.get_Fetch();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogSearch.set_Fetch(ISlowLogSearchFetch value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<LogLevel> OpenSearch.Client.ISlowLogSearch.get_LogLevel();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogSearch.set_LogLevel(Nullable`1<LogLevel> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISlowLogSearchQuery OpenSearch.Client.ISlowLogSearch.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogSearch.set_Query(ISlowLogSearchQuery value);
    public SlowLogSearchDescriptor LogLevel(Nullable`1<LogLevel> level);
    public SlowLogSearchDescriptor Query(Func`2<SlowLogSearchQueryDescriptor, ISlowLogSearchQuery> selector);
    public SlowLogSearchDescriptor Fetch(Func`2<SlowLogSearchFetchDescriptor, ISlowLogSearchFetch> selector);
}
public class OpenSearch.Client.SlowLogSearchFetch : object {
    [CompilerGeneratedAttribute]
private Time <ThresholdDebug>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ThresholdInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ThresholdTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ThresholdWarn>k__BackingField;
    public Time ThresholdDebug { get; public set; }
    public Time ThresholdInfo { get; public set; }
    public Time ThresholdTrace { get; public set; }
    public Time ThresholdWarn { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdDebug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdDebug(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdInfo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdInfo(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdTrace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdTrace(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdWarn();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdWarn(Time value);
}
public class OpenSearch.Client.SlowLogSearchFetchDescriptor : DescriptorBase`2<SlowLogSearchFetchDescriptor, ISlowLogSearchFetch> {
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogSearchFetch.ThresholdDebug>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogSearchFetch.ThresholdInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogSearchFetch.ThresholdTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogSearchFetch.ThresholdWarn>k__BackingField;
    private Time OpenSearch.Client.ISlowLogSearchFetch.ThresholdDebug { get; private set; }
    private Time OpenSearch.Client.ISlowLogSearchFetch.ThresholdInfo { get; private set; }
    private Time OpenSearch.Client.ISlowLogSearchFetch.ThresholdTrace { get; private set; }
    private Time OpenSearch.Client.ISlowLogSearchFetch.ThresholdWarn { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogSearchFetch.get_ThresholdDebug();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogSearchFetch.set_ThresholdDebug(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogSearchFetch.get_ThresholdInfo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogSearchFetch.set_ThresholdInfo(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogSearchFetch.get_ThresholdTrace();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogSearchFetch.set_ThresholdTrace(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogSearchFetch.get_ThresholdWarn();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogSearchFetch.set_ThresholdWarn(Time value);
    public SlowLogSearchFetchDescriptor ThresholdDebug(Time time);
    public SlowLogSearchFetchDescriptor ThresholdInfo(Time time);
    public SlowLogSearchFetchDescriptor ThresholdTrace(Time time);
    public SlowLogSearchFetchDescriptor ThresholdWarn(Time time);
}
public class OpenSearch.Client.SlowLogSearchQuery : object {
    [CompilerGeneratedAttribute]
private Time <ThresholdDebug>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ThresholdInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ThresholdTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ThresholdWarn>k__BackingField;
    public Time ThresholdDebug { get; public set; }
    public Time ThresholdInfo { get; public set; }
    public Time ThresholdTrace { get; public set; }
    public Time ThresholdWarn { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdDebug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdDebug(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdInfo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdInfo(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdTrace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdTrace(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdWarn();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdWarn(Time value);
}
public class OpenSearch.Client.SlowLogSearchQueryDescriptor : DescriptorBase`2<SlowLogSearchQueryDescriptor, ISlowLogSearchQuery> {
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogSearchQuery.ThresholdDebug>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogSearchQuery.ThresholdInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogSearchQuery.ThresholdTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ISlowLogSearchQuery.ThresholdWarn>k__BackingField;
    private Time OpenSearch.Client.ISlowLogSearchQuery.ThresholdDebug { get; private set; }
    private Time OpenSearch.Client.ISlowLogSearchQuery.ThresholdInfo { get; private set; }
    private Time OpenSearch.Client.ISlowLogSearchQuery.ThresholdTrace { get; private set; }
    private Time OpenSearch.Client.ISlowLogSearchQuery.ThresholdWarn { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogSearchQuery.get_ThresholdDebug();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogSearchQuery.set_ThresholdDebug(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogSearchQuery.get_ThresholdInfo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogSearchQuery.set_ThresholdInfo(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogSearchQuery.get_ThresholdTrace();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogSearchQuery.set_ThresholdTrace(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ISlowLogSearchQuery.get_ThresholdWarn();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISlowLogSearchQuery.set_ThresholdWarn(Time value);
    public SlowLogSearchQueryDescriptor ThresholdDebug(Time time);
    public SlowLogSearchQueryDescriptor ThresholdInfo(Time time);
    public SlowLogSearchQueryDescriptor ThresholdTrace(Time time);
    public SlowLogSearchQueryDescriptor ThresholdWarn(Time time);
}
public abstract class OpenSearch.Client.SmoothingModelBase : object {
    public static SmoothingModelContainer op_Implicit(SmoothingModelBase model);
    internal abstract virtual void WrapInContainer(ISmoothingModelContainer container);
}
[DataContractAttribute]
public class OpenSearch.Client.SmoothingModelContainer : object {
    [CompilerGeneratedAttribute]
private ILaplaceSmoothingModel <OpenSearch.Client.ISmoothingModelContainer.Laplace>k__BackingField;
    [CompilerGeneratedAttribute]
private ILinearInterpolationSmoothingModel <OpenSearch.Client.ISmoothingModelContainer.LinearInterpolation>k__BackingField;
    [CompilerGeneratedAttribute]
private IStupidBackoffSmoothingModel <OpenSearch.Client.ISmoothingModelContainer.StupidBackoff>k__BackingField;
    private ILaplaceSmoothingModel OpenSearch.Client.ISmoothingModelContainer.Laplace { get; private set; }
    private ILinearInterpolationSmoothingModel OpenSearch.Client.ISmoothingModelContainer.LinearInterpolation { get; private set; }
    private IStupidBackoffSmoothingModel OpenSearch.Client.ISmoothingModelContainer.StupidBackoff { get; private set; }
    public SmoothingModelContainer(SmoothingModelBase model);
    [CompilerGeneratedAttribute]
private sealed virtual override ILaplaceSmoothingModel OpenSearch.Client.ISmoothingModelContainer.get_Laplace();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISmoothingModelContainer.set_Laplace(ILaplaceSmoothingModel value);
    [CompilerGeneratedAttribute]
private sealed virtual override ILinearInterpolationSmoothingModel OpenSearch.Client.ISmoothingModelContainer.get_LinearInterpolation();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISmoothingModelContainer.set_LinearInterpolation(ILinearInterpolationSmoothingModel value);
    [CompilerGeneratedAttribute]
private sealed virtual override IStupidBackoffSmoothingModel OpenSearch.Client.ISmoothingModelContainer.get_StupidBackoff();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISmoothingModelContainer.set_StupidBackoff(IStupidBackoffSmoothingModel value);
}
public class OpenSearch.Client.SmoothingModelContainerDescriptor : SmoothingModelContainer {
    private SmoothingModelContainerDescriptor Assign(TValue value, Action`2<ISmoothingModelContainer, TValue> assigner);
    public SmoothingModelContainerDescriptor StupidBackoff(Func`2<StupidBackoffSmoothingModelDescriptor, IStupidBackoffSmoothingModel> selector);
    public SmoothingModelContainerDescriptor LinearInterpolation(Func`2<LinearInterpolationSmoothingModelDescriptor, ILinearInterpolationSmoothingModel> selector);
    public SmoothingModelContainerDescriptor Laplace(Func`2<LaplaceSmoothingModelDescriptor, ILaplaceSmoothingModel> selector);
}
public class OpenSearch.Client.Snapshot : object {
    [CompilerGeneratedAttribute]
private long <DurationInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <EndTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<SnapshotShardFailure> <Failures>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<IndexName> <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardStatistics <Shards>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StartTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Metadata>k__BackingField;
    [DataMemberAttribute]
public long DurationInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public DateTime EndTime { get; internal set; }
    [DataMemberAttribute]
public long EndTimeInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<SnapshotShardFailure> Failures { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<IndexName> Indices { get; internal set; }
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public ShardStatistics Shards { get; internal set; }
    [DataMemberAttribute]
public DateTime StartTime { get; internal set; }
    [DataMemberAttribute]
public long StartTimeInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public string State { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, object> Metadata { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_DurationInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_DurationInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public DateTime get_EndTime();
    [CompilerGeneratedAttribute]
internal void set_EndTime(DateTime value);
    [CompilerGeneratedAttribute]
public long get_EndTimeInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_EndTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<SnapshotShardFailure> get_Failures();
    [CompilerGeneratedAttribute]
internal void set_Failures(IReadOnlyCollection`1<SnapshotShardFailure> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<IndexName> get_Indices();
    [CompilerGeneratedAttribute]
internal void set_Indices(IReadOnlyCollection`1<IndexName> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public ShardStatistics get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ShardStatistics value);
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
internal void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public long get_StartTimeInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_StartTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
internal void set_State(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_Metadata();
    [CompilerGeneratedAttribute]
internal void set_Metadata(IReadOnlyDictionary`2<string, object> value);
}
public class OpenSearch.Client.SnapshotCompletedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private SnapshotStatusResponse <SnapshotStatusResponse>k__BackingField;
    public SnapshotStatusResponse SnapshotStatusResponse { get; private set; }
    public SnapshotCompletedEventArgs(SnapshotStatusResponse snapshotStatusResponse);
    [CompilerGeneratedAttribute]
public SnapshotStatusResponse get_SnapshotStatusResponse();
    [CompilerGeneratedAttribute]
private void set_SnapshotStatusResponse(SnapshotStatusResponse value);
}
public class OpenSearch.Client.SnapshotDescriptor : RequestDescriptorBase`3<SnapshotDescriptor, SnapshotRequestParameters, ISnapshotRequest> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISnapshotRequest.IgnoreUnavailable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISnapshotRequest.IncludeGlobalState>k__BackingField;
    [CompilerGeneratedAttribute]
private Indices <OpenSearch.Client.ISnapshotRequest.Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISnapshotRequest.Partial>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.ISnapshotRequest.Metadata>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.ISnapshotRequest.RepositoryName { get; }
    private Name OpenSearch.Client.ISnapshotRequest.Snapshot { get; }
    private Nullable`1<bool> OpenSearch.Client.ISnapshotRequest.IgnoreUnavailable { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISnapshotRequest.IncludeGlobalState { get; private set; }
    private Indices OpenSearch.Client.ISnapshotRequest.Indices { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISnapshotRequest.Partial { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.ISnapshotRequest.Metadata { get; private set; }
    public SnapshotDescriptor(Name repository, Name snapshot);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ISnapshotRequest.get_RepositoryName();
    private sealed virtual override Name OpenSearch.Client.ISnapshotRequest.get_Snapshot();
    public SnapshotDescriptor MasterTimeout(Time mastertimeout);
    public SnapshotDescriptor ClusterManagerTimeout(Time timeout);
    public SnapshotDescriptor WaitForCompletion(Nullable`1<bool> waitforcompletion);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISnapshotRequest.get_IgnoreUnavailable();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISnapshotRequest.set_IgnoreUnavailable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISnapshotRequest.get_IncludeGlobalState();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISnapshotRequest.set_IncludeGlobalState(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Indices OpenSearch.Client.ISnapshotRequest.get_Indices();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISnapshotRequest.set_Indices(Indices value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISnapshotRequest.get_Partial();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISnapshotRequest.set_Partial(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.ISnapshotRequest.get_Metadata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISnapshotRequest.set_Metadata(IDictionary`2<string, object> value);
    public SnapshotDescriptor Index(IndexName index);
    public SnapshotDescriptor Index();
    public SnapshotDescriptor Indices(Indices indices);
    public SnapshotDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreUnavailable);
    public SnapshotDescriptor IncludeGlobalState(Nullable`1<bool> includeGlobalState);
    public SnapshotDescriptor Partial(Nullable`1<bool> partial);
    public SnapshotDescriptor Metadata(IDictionary`2<string, object> metadata);
    public SnapshotDescriptor Metadata(Func`2<FluentDictionary`2<string, object>, IDictionary`2<string, object>> selector);
}
public class OpenSearch.Client.SnapshotErrorEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public Exception Exception { get; }
    public SnapshotErrorEventArgs(Exception exception);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
}
public class OpenSearch.Client.SnapshotIndexShardStats : object {
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Stage>k__BackingField;
    [CompilerGeneratedAttribute]
private SnapshotStats <Stats>k__BackingField;
    [DataMemberAttribute]
public string Node { get; internal set; }
    [DataMemberAttribute]
public string Stage { get; internal set; }
    [DataMemberAttribute]
public SnapshotStats Stats { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
internal void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_Stage();
    [CompilerGeneratedAttribute]
internal void set_Stage(string value);
    [CompilerGeneratedAttribute]
public SnapshotStats get_Stats();
    [CompilerGeneratedAttribute]
internal void set_Stats(SnapshotStats value);
}
public class OpenSearch.Client.SnapshotIndexStats : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, SnapshotShardsStats> <Shards>k__BackingField;
    [CompilerGeneratedAttribute]
private SnapshotShardsStats <ShardsStats>k__BackingField;
    [CompilerGeneratedAttribute]
private SnapshotStats <Stats>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, SnapshotShardsStats> Shards { get; internal set; }
    [DataMemberAttribute]
public SnapshotShardsStats ShardsStats { get; internal set; }
    [DataMemberAttribute]
public SnapshotStats Stats { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, SnapshotShardsStats> get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(IReadOnlyDictionary`2<string, SnapshotShardsStats> value);
    [CompilerGeneratedAttribute]
public SnapshotShardsStats get_ShardsStats();
    [CompilerGeneratedAttribute]
internal void set_ShardsStats(SnapshotShardsStats value);
    [CompilerGeneratedAttribute]
public SnapshotStats get_Stats();
    [CompilerGeneratedAttribute]
internal void set_Stats(SnapshotStats value);
}
public class OpenSearch.Client.SnapshotNextEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private SnapshotStatusResponse <SnapshotStatusResponse>k__BackingField;
    public SnapshotStatusResponse SnapshotStatusResponse { get; }
    public SnapshotNextEventArgs(SnapshotStatusResponse snapshotStatusResponse);
    [CompilerGeneratedAttribute]
public SnapshotStatusResponse get_SnapshotStatusResponse();
}
public class OpenSearch.Client.SnapshotObservable : object {
    private IOpenSearchClient _opensearchClient;
    private TimeSpan _interval;
    private ISnapshotRequest _snapshotRequest;
    private SnapshotStatusHumbleObject _snapshotStatusHumbleObject;
    private EventHandler`1<SnapshotCompletedEventArgs> _completedEventHandler;
    private bool _disposed;
    private EventHandler`1<SnapshotErrorEventArgs> _errorEventHandler;
    private EventHandler`1<SnapshotNextEventArgs> _nextEventHandler;
    private Timer _timer;
    public SnapshotObservable(IOpenSearchClient opensearchClient, ISnapshotRequest snapshotRequest);
    public SnapshotObservable(IOpenSearchClient opensearchClient, ISnapshotRequest snapshotRequest, TimeSpan interval);
    public sealed virtual void Dispose();
    public sealed virtual IDisposable Subscribe(IObserver`1<SnapshotStatusResponse> observer);
    private void Snapshot(object state);
    private void StopTimer(object sender, EventArgs restoreCompletedEventArgs);
    protected virtual void Dispose(bool disposing);
    protected virtual override void Finalize();
}
public class OpenSearch.Client.SnapshotObserver : CoordinatedRequestObserverBase`1<SnapshotStatusResponse> {
    public SnapshotObserver(Action`1<SnapshotStatusResponse> onNext, Action`1<Exception> onError, Action completed);
}
public class OpenSearch.Client.SnapshotRequest : PlainRequestBase`1<SnapshotRequestParameters> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnavailable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeGlobalState>k__BackingField;
    [CompilerGeneratedAttribute]
private Indices <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Partial>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Metadata>k__BackingField;
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> IncludeGlobalState { get; public set; }
    public Indices Indices { get; public set; }
    public Nullable`1<bool> Partial { get; public set; }
    public IDictionary`2<string, object> Metadata { get; public set; }
    protected ISnapshotRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.ISnapshotRequest.RepositoryName { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.ISnapshotRequest.Snapshot { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<bool> WaitForCompletion { get; public set; }
    public SnapshotRequest(Name repository, Name snapshot);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreUnavailable();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreUnavailable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeGlobalState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeGlobalState(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Indices get_Indices();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Indices(Indices value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Partial();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Partial(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Metadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Metadata(IDictionary`2<string, object> value);
    protected ISnapshotRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ISnapshotRequest.get_RepositoryName();
    private sealed virtual override Name OpenSearch.Client.ISnapshotRequest.get_Snapshot();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<bool> get_WaitForCompletion();
    public void set_WaitForCompletion(Nullable`1<bool> value);
}
[DataContractAttribute]
public class OpenSearch.Client.SnapshotResponse : ResponseBase {
    private bool _accepted;
    [CompilerGeneratedAttribute]
private Snapshot <Snapshot>k__BackingField;
    [DataMemberAttribute]
public bool Accepted { get; internal set; }
    [DataMemberAttribute]
public Snapshot Snapshot { get; public set; }
    public bool get_Accepted();
    internal void set_Accepted(bool value);
    [CompilerGeneratedAttribute]
public Snapshot get_Snapshot();
    [CompilerGeneratedAttribute]
public void set_Snapshot(Snapshot value);
}
public class OpenSearch.Client.SnapshotRestore : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<IndexName> <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardStatistics <Shards>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<IndexName> Indices { get; internal set; }
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public ShardStatistics Shards { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<IndexName> get_Indices();
    [CompilerGeneratedAttribute]
internal void set_Indices(IReadOnlyCollection`1<IndexName> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public ShardStatistics get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ShardStatistics value);
}
[DataContractAttribute]
public class OpenSearch.Client.SnapshotShardFailure : object {
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShardId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [DataMemberAttribute]
public string Index { get; public set; }
    [DataMemberAttribute]
public string NodeId { get; public set; }
    [DataMemberAttribute]
public string Reason { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.IntStringFormatter")]
public string ShardId { get; public set; }
    [DataMemberAttribute]
public string Status { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_ShardId();
    [CompilerGeneratedAttribute]
public void set_ShardId(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
}
public class OpenSearch.Client.SnapshotShardsStats : object {
    [CompilerGeneratedAttribute]
private long <Done>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Finalizing>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Initializing>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Started>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [DataMemberAttribute]
public long Done { get; internal set; }
    [DataMemberAttribute]
public long Failed { get; internal set; }
    [DataMemberAttribute]
public long Finalizing { get; internal set; }
    [DataMemberAttribute]
public long Initializing { get; internal set; }
    [DataMemberAttribute]
public long Started { get; internal set; }
    [DataMemberAttribute]
public long Total { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Done();
    [CompilerGeneratedAttribute]
internal void set_Done(long value);
    [CompilerGeneratedAttribute]
public long get_Failed();
    [CompilerGeneratedAttribute]
internal void set_Failed(long value);
    [CompilerGeneratedAttribute]
public long get_Finalizing();
    [CompilerGeneratedAttribute]
internal void set_Finalizing(long value);
    [CompilerGeneratedAttribute]
public long get_Initializing();
    [CompilerGeneratedAttribute]
internal void set_Initializing(long value);
    [CompilerGeneratedAttribute]
public long get_Started();
    [CompilerGeneratedAttribute]
internal void set_Started(long value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(long value);
}
public class OpenSearch.Client.SnapshotStats : object {
    [CompilerGeneratedAttribute]
private FileCountSnapshotStats <Incremental>k__BackingField;
    [CompilerGeneratedAttribute]
private FileCountSnapshotStats <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StartTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TimeInMilliseconds>k__BackingField;
    [DataMemberAttribute]
public FileCountSnapshotStats Incremental { get; internal set; }
    [DataMemberAttribute]
public FileCountSnapshotStats Total { get; internal set; }
    [DataMemberAttribute]
public long StartTimeInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public long TimeInMilliseconds { get; internal set; }
    [CompilerGeneratedAttribute]
public FileCountSnapshotStats get_Incremental();
    [CompilerGeneratedAttribute]
internal void set_Incremental(FileCountSnapshotStats value);
    [CompilerGeneratedAttribute]
public FileCountSnapshotStats get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(FileCountSnapshotStats value);
    [CompilerGeneratedAttribute]
public long get_StartTimeInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_StartTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_TimeInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_TimeInMilliseconds(long value);
}
public class OpenSearch.Client.SnapshotStatus : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeGlobalState>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, SnapshotIndexStats> <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Repository>k__BackingField;
    [CompilerGeneratedAttribute]
private SnapshotShardsStats <ShardsStats>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Snapshot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private SnapshotStats <Stats>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UUID>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<bool> IncludeGlobalState { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, SnapshotIndexStats> Indices { get; internal set; }
    [DataMemberAttribute]
public string Repository { get; internal set; }
    [DataMemberAttribute]
public SnapshotShardsStats ShardsStats { get; internal set; }
    [DataMemberAttribute]
public string Snapshot { get; internal set; }
    [DataMemberAttribute]
public string State { get; internal set; }
    [DataMemberAttribute]
public SnapshotStats Stats { get; internal set; }
    [DataMemberAttribute]
public string UUID { get; internal set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeGlobalState();
    [CompilerGeneratedAttribute]
internal void set_IncludeGlobalState(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, SnapshotIndexStats> get_Indices();
    [CompilerGeneratedAttribute]
internal void set_Indices(IReadOnlyDictionary`2<string, SnapshotIndexStats> value);
    [CompilerGeneratedAttribute]
public string get_Repository();
    [CompilerGeneratedAttribute]
internal void set_Repository(string value);
    [CompilerGeneratedAttribute]
public SnapshotShardsStats get_ShardsStats();
    [CompilerGeneratedAttribute]
internal void set_ShardsStats(SnapshotShardsStats value);
    [CompilerGeneratedAttribute]
public string get_Snapshot();
    [CompilerGeneratedAttribute]
internal void set_Snapshot(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
internal void set_State(string value);
    [CompilerGeneratedAttribute]
public SnapshotStats get_Stats();
    [CompilerGeneratedAttribute]
internal void set_Stats(SnapshotStats value);
    [CompilerGeneratedAttribute]
public string get_UUID();
    [CompilerGeneratedAttribute]
internal void set_UUID(string value);
}
public class OpenSearch.Client.SnapshotStatusDescriptor : RequestDescriptorBase`3<SnapshotStatusDescriptor, SnapshotStatusRequestParameters, ISnapshotStatusRequest> {
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.ISnapshotStatusRequest.RepositoryName { get; }
    private Names OpenSearch.Client.ISnapshotStatusRequest.Snapshot { get; }
    public SnapshotStatusDescriptor(Name repository);
    public SnapshotStatusDescriptor(Name repository, Names snapshot);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ISnapshotStatusRequest.get_RepositoryName();
    private sealed virtual override Names OpenSearch.Client.ISnapshotStatusRequest.get_Snapshot();
    public SnapshotStatusDescriptor RepositoryName(Name repository);
    public SnapshotStatusDescriptor Snapshot(Names snapshot);
    public SnapshotStatusDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public SnapshotStatusDescriptor MasterTimeout(Time mastertimeout);
    public SnapshotStatusDescriptor ClusterManagerTimeout(Time timeout);
}
public class OpenSearch.Client.SnapshotStatusHumbleObject : object {
    private IOpenSearchClient _opensearchClient;
    private ISnapshotRequest _snapshotRequest;
    [CompilerGeneratedAttribute]
private EventHandler`1<SnapshotCompletedEventArgs> Completed;
    [CompilerGeneratedAttribute]
private EventHandler`1<SnapshotErrorEventArgs> Error;
    [CompilerGeneratedAttribute]
private EventHandler`1<SnapshotNextEventArgs> Next;
    public SnapshotStatusHumbleObject(IOpenSearchClient opensearchClient, ISnapshotRequest snapshotRequest);
    [CompilerGeneratedAttribute]
public void add_Completed(EventHandler`1<SnapshotCompletedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_Completed(EventHandler`1<SnapshotCompletedEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_Error(EventHandler`1<SnapshotErrorEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_Error(EventHandler`1<SnapshotErrorEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_Next(EventHandler`1<SnapshotNextEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_Next(EventHandler`1<SnapshotNextEventArgs> value);
    public void CheckStatus();
    protected virtual void OnNext(SnapshotNextEventArgs nextEventArgs);
    protected virtual void OnCompleted(SnapshotCompletedEventArgs completedEventArgs);
    protected virtual void OnError(SnapshotErrorEventArgs errorEventArgs);
}
public class OpenSearch.Client.SnapshotStatusRequest : PlainRequestBase`1<SnapshotStatusRequestParameters> {
    protected ISnapshotStatusRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.ISnapshotStatusRequest.RepositoryName { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.ISnapshotStatusRequest.Snapshot { get; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public SnapshotStatusRequest(Name repository);
    public SnapshotStatusRequest(Name repository, Names snapshot);
    protected ISnapshotStatusRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.ISnapshotStatusRequest.get_RepositoryName();
    private sealed virtual override Names OpenSearch.Client.ISnapshotStatusRequest.get_Snapshot();
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.SnapshotStatusResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<SnapshotStatus> <Snapshots>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<SnapshotStatus> Snapshots { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<SnapshotStatus> get_Snapshots();
    [CompilerGeneratedAttribute]
internal void set_Snapshots(IReadOnlyCollection`1<SnapshotStatus> value);
}
public class OpenSearch.Client.SnowballAnalyzer : AnalyzerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<SnowballLanguage> <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <StopWords>k__BackingField;
    public Nullable`1<SnowballLanguage> Language { get; public set; }
    public StopWords StopWords { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SnowballLanguage> get_Language();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Language(Nullable`1<SnowballLanguage> value);
    [CompilerGeneratedAttribute]
public sealed virtual StopWords get_StopWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopWords(StopWords value);
}
public class OpenSearch.Client.SnowballAnalyzerDescriptor : AnalyzerDescriptorBase`2<SnowballAnalyzerDescriptor, ISnowballAnalyzer> {
    [CompilerGeneratedAttribute]
private Nullable`1<SnowballLanguage> <OpenSearch.Client.ISnowballAnalyzer.Language>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <OpenSearch.Client.ISnowballAnalyzer.StopWords>k__BackingField;
    protected string Type { get; }
    private Nullable`1<SnowballLanguage> OpenSearch.Client.ISnowballAnalyzer.Language { get; private set; }
    private StopWords OpenSearch.Client.ISnowballAnalyzer.StopWords { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SnowballLanguage> OpenSearch.Client.ISnowballAnalyzer.get_Language();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISnowballAnalyzer.set_Language(Nullable`1<SnowballLanguage> value);
    [CompilerGeneratedAttribute]
private sealed virtual override StopWords OpenSearch.Client.ISnowballAnalyzer.get_StopWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISnowballAnalyzer.set_StopWords(StopWords value);
    public SnowballAnalyzerDescriptor StopWords(StopWords stopWords);
    public SnowballAnalyzerDescriptor StopWords(IEnumerable`1<string> stopWords);
    public SnowballAnalyzerDescriptor StopWords(String[] stopWords);
    public SnowballAnalyzerDescriptor Language(Nullable`1<SnowballLanguage> language);
}
[StringEnumAttribute]
public enum OpenSearch.Client.SnowballLanguage : Enum {
    public int value__;
    [EnumMemberAttribute]
public static SnowballLanguage Armenian;
    [EnumMemberAttribute]
public static SnowballLanguage Basque;
    [EnumMemberAttribute]
public static SnowballLanguage Catalan;
    [EnumMemberAttribute]
public static SnowballLanguage Danish;
    [EnumMemberAttribute]
public static SnowballLanguage Dutch;
    [EnumMemberAttribute]
public static SnowballLanguage English;
    [EnumMemberAttribute]
public static SnowballLanguage Finnish;
    [EnumMemberAttribute]
public static SnowballLanguage French;
    [EnumMemberAttribute]
public static SnowballLanguage German;
    [EnumMemberAttribute]
public static SnowballLanguage German2;
    [EnumMemberAttribute]
public static SnowballLanguage Hungarian;
    [EnumMemberAttribute]
public static SnowballLanguage Italian;
    [EnumMemberAttribute]
public static SnowballLanguage Kp;
    [EnumMemberAttribute]
public static SnowballLanguage Lovins;
    [EnumMemberAttribute]
public static SnowballLanguage Norwegian;
    [EnumMemberAttribute]
public static SnowballLanguage Porter;
    [EnumMemberAttribute]
public static SnowballLanguage Portuguese;
    [EnumMemberAttribute]
public static SnowballLanguage Romanian;
    [EnumMemberAttribute]
public static SnowballLanguage Russian;
    [EnumMemberAttribute]
public static SnowballLanguage Spanish;
    [EnumMemberAttribute]
public static SnowballLanguage Swedish;
    [EnumMemberAttribute]
public static SnowballLanguage Turkish;
}
public class OpenSearch.Client.SnowballTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<SnowballLanguage> <Language>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<SnowballLanguage> Language { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SnowballLanguage> get_Language();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Language(Nullable`1<SnowballLanguage> value);
}
public class OpenSearch.Client.SnowballTokenFilterDescriptor : TokenFilterDescriptorBase`2<SnowballTokenFilterDescriptor, ISnowballTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<SnowballLanguage> <OpenSearch.Client.ISnowballTokenFilter.Language>k__BackingField;
    protected string Type { get; }
    private Nullable`1<SnowballLanguage> OpenSearch.Client.ISnowballTokenFilter.Language { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SnowballLanguage> OpenSearch.Client.ISnowballTokenFilter.get_Language();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISnowballTokenFilter.set_Language(Nullable`1<SnowballLanguage> value);
    public SnowballTokenFilterDescriptor Language(Nullable`1<SnowballLanguage> language);
}
public class OpenSearch.Client.SoftDeleteRetentionSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Operations>k__BackingField;
    public Nullable`1<long> Operations { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Operations();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Operations(Nullable`1<long> value);
}
public class OpenSearch.Client.SoftDeleteRetentionSettingsDescriptor : DescriptorBase`2<SoftDeleteRetentionSettingsDescriptor, ISoftDeleteRetentionSettings> {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.ISoftDeleteRetentionSettings.Operations>k__BackingField;
    private Nullable`1<long> OpenSearch.Client.ISoftDeleteRetentionSettings.Operations { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.ISoftDeleteRetentionSettings.get_Operations();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISoftDeleteRetentionSettings.set_Operations(Nullable`1<long> value);
    public SoftDeleteRetentionSettingsDescriptor Operations(Nullable`1<long> operations);
}
public class OpenSearch.Client.SoftDeleteSettings : object {
    [CompilerGeneratedAttribute]
private ISoftDeleteRetentionSettings <Retention>k__BackingField;
    public ISoftDeleteRetentionSettings Retention { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ISoftDeleteRetentionSettings get_Retention();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Retention(ISoftDeleteRetentionSettings value);
}
public class OpenSearch.Client.SoftDeleteSettingsDescriptor : DescriptorBase`2<SoftDeleteSettingsDescriptor, ISoftDeleteSettings> {
    [CompilerGeneratedAttribute]
private ISoftDeleteRetentionSettings <OpenSearch.Client.ISoftDeleteSettings.Retention>k__BackingField;
    private ISoftDeleteRetentionSettings OpenSearch.Client.ISoftDeleteSettings.Retention { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override ISoftDeleteRetentionSettings OpenSearch.Client.ISoftDeleteSettings.get_Retention();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISoftDeleteSettings.set_Retention(ISoftDeleteRetentionSettings value);
    public SoftDeleteSettingsDescriptor Retention(Func`2<SoftDeleteRetentionSettingsDescriptor, ISoftDeleteRetentionSettings> selector);
}
public abstract class OpenSearch.Client.SortBase : object {
    [CompilerGeneratedAttribute]
private object <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SortMode> <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NumericType> <NumericType>k__BackingField;
    [CompilerGeneratedAttribute]
private INestedSort <Nested>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SortOrder> <Order>k__BackingField;
    public object Missing { get; public set; }
    public Nullable`1<SortMode> Mode { get; public set; }
    public Nullable`1<NumericType> NumericType { get; public set; }
    public INestedSort Nested { get; public set; }
    public Nullable`1<SortOrder> Order { get; public set; }
    protected Field SortKey { get; }
    private Field OpenSearch.Client.ISort.SortKey { get; }
    [CompilerGeneratedAttribute]
public sealed virtual object get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SortMode> get_Mode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mode(Nullable`1<SortMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<NumericType> get_NumericType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NumericType(Nullable`1<NumericType> value);
    [CompilerGeneratedAttribute]
public sealed virtual INestedSort get_Nested();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Nested(INestedSort value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SortOrder> get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(Nullable`1<SortOrder> value);
    protected abstract virtual Field get_SortKey();
    private sealed virtual override Field OpenSearch.Client.ISort.get_SortKey();
}
public class OpenSearch.Client.SortDescriptor`1 : DescriptorPromiseBase`2<SortDescriptor`1<T>, IList`1<ISort>> {
    public SortDescriptor`1<T> Ascending(Expression`1<Func`2<T, TValue>> objectPath);
    public SortDescriptor`1<T> Descending(Expression`1<Func`2<T, TValue>> objectPath);
    public SortDescriptor`1<T> Ascending(Field field);
    public SortDescriptor`1<T> Descending(Field field);
    public SortDescriptor`1<T> Ascending(SortSpecialField field);
    public SortDescriptor`1<T> Descending(SortSpecialField field);
    public SortDescriptor`1<T> Field(Func`2<FieldSortDescriptor`1<T>, IFieldSort> sortSelector);
    public SortDescriptor`1<T> Field(Field field, SortOrder order);
    public SortDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field, SortOrder order);
    public SortDescriptor`1<T> GeoDistance(Func`2<GeoDistanceSortDescriptor`1<T>, IGeoDistanceSort> sortSelector);
    public SortDescriptor`1<T> Script(Func`2<ScriptSortDescriptor`1<T>, IScriptSort> sortSelector);
    private SortDescriptor`1<T> AddSort(ISort sort);
}
public abstract class OpenSearch.Client.SortDescriptorBase`3 : DescriptorBase`2<TDescriptor, TInterface> {
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.ISort.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SortMode> <OpenSearch.Client.ISort.Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NumericType> <OpenSearch.Client.ISort.NumericType>k__BackingField;
    [CompilerGeneratedAttribute]
private INestedSort <OpenSearch.Client.ISort.Nested>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SortOrder> <OpenSearch.Client.ISort.Order>k__BackingField;
    protected Field SortKey { get; }
    private object OpenSearch.Client.ISort.Missing { get; private set; }
    private Nullable`1<SortMode> OpenSearch.Client.ISort.Mode { get; private set; }
    private Nullable`1<NumericType> OpenSearch.Client.ISort.NumericType { get; private set; }
    private INestedSort OpenSearch.Client.ISort.Nested { get; private set; }
    private Nullable`1<SortOrder> OpenSearch.Client.ISort.Order { get; private set; }
    private Field OpenSearch.Client.ISort.SortKey { get; }
    protected abstract virtual Field get_SortKey();
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.ISort.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISort.set_Missing(object value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SortMode> OpenSearch.Client.ISort.get_Mode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISort.set_Mode(Nullable`1<SortMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<NumericType> OpenSearch.Client.ISort.get_NumericType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISort.set_NumericType(Nullable`1<NumericType> value);
    [CompilerGeneratedAttribute]
private sealed virtual override INestedSort OpenSearch.Client.ISort.get_Nested();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISort.set_Nested(INestedSort value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SortOrder> OpenSearch.Client.ISort.get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISort.set_Order(Nullable`1<SortOrder> value);
    private sealed virtual override Field OpenSearch.Client.ISort.get_SortKey();
    public virtual TDescriptor Ascending();
    public virtual TDescriptor Descending();
    public virtual TDescriptor Order(Nullable`1<SortOrder> order);
    public virtual TDescriptor NumericType(Nullable`1<NumericType> numericType);
    public virtual TDescriptor Mode(Nullable`1<SortMode> mode);
    public virtual TDescriptor MissingLast();
    public virtual TDescriptor MissingFirst();
    public virtual TDescriptor Missing(object value);
    public virtual TDescriptor Nested(Func`2<NestedSortDescriptor`1<T>, INestedSort> selector);
}
internal class OpenSearch.Client.SortFormatter : object {
    private static AutomataDictionary SortFields;
    private static SortFormatter();
    public sealed virtual ISort Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, ISort value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.SortingSettings : object {
    [CompilerGeneratedAttribute]
private Fields <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexSortMissing[] <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexSortMode[] <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexSortOrder[] <Order>k__BackingField;
    public Fields Fields { get; public set; }
    public IndexSortMissing[] Missing { get; public set; }
    public IndexSortMode[] Mode { get; public set; }
    public IndexSortOrder[] Order { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Fields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexSortMissing[] get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(IndexSortMissing[] value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexSortMode[] get_Mode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mode(IndexSortMode[] value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexSortOrder[] get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(IndexSortOrder[] value);
}
public class OpenSearch.Client.SortingSettingsDescriptor`1 : DescriptorBase`2<SortingSettingsDescriptor`1<T>, ISortingSettings> {
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ISortingSettings.Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexSortMissing[] <OpenSearch.Client.ISortingSettings.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexSortMode[] <OpenSearch.Client.ISortingSettings.Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexSortOrder[] <OpenSearch.Client.ISortingSettings.Order>k__BackingField;
    private Fields OpenSearch.Client.ISortingSettings.Fields { get; private set; }
    private IndexSortMissing[] OpenSearch.Client.ISortingSettings.Missing { get; private set; }
    private IndexSortMode[] OpenSearch.Client.ISortingSettings.Mode { get; private set; }
    private IndexSortOrder[] OpenSearch.Client.ISortingSettings.Order { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ISortingSettings.get_Fields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISortingSettings.set_Fields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexSortMissing[] OpenSearch.Client.ISortingSettings.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISortingSettings.set_Missing(IndexSortMissing[] value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexSortMode[] OpenSearch.Client.ISortingSettings.get_Mode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISortingSettings.set_Mode(IndexSortMode[] value);
    [CompilerGeneratedAttribute]
private sealed virtual override IndexSortOrder[] OpenSearch.Client.ISortingSettings.get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISortingSettings.set_Order(IndexSortOrder[] value);
    public SortingSettingsDescriptor`1<T> Fields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public SortingSettingsDescriptor`1<T> Fields(Fields fields);
    public SortingSettingsDescriptor`1<T> Order(IndexSortOrder[] order);
    public SortingSettingsDescriptor`1<T> Mode(IndexSortMode[] mode);
    public SortingSettingsDescriptor`1<T> Missing(IndexSortMissing[] missing);
}
[StringEnumAttribute]
public enum OpenSearch.Client.SortMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static SortMode Min;
    [EnumMemberAttribute]
public static SortMode Max;
    [EnumMemberAttribute]
public static SortMode Sum;
    [EnumMemberAttribute]
public static SortMode Average;
    [EnumMemberAttribute]
public static SortMode Median;
}
[StringEnumAttribute]
public enum OpenSearch.Client.SortOrder : Enum {
    public int value__;
    [EnumMemberAttribute]
public static SortOrder Ascending;
    [EnumMemberAttribute]
public static SortOrder Descending;
}
internal class OpenSearch.Client.SortOrderFormatter`1 : object {
    public sealed virtual TSortOrder Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TSortOrder value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.SortProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SortOrder> <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<SortOrder> Order { get; public set; }
    public Field TargetField { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SortOrder> get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(Nullable`1<SortOrder> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.SortProcessorDescriptor`1 : ProcessorDescriptorBase`2<SortProcessorDescriptor`1<T>, ISortProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISortProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SortOrder> <OpenSearch.Client.ISortProcessor.Order>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISortProcessor.TargetField>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.ISortProcessor.Field { get; private set; }
    private Nullable`1<SortOrder> OpenSearch.Client.ISortProcessor.Order { get; private set; }
    private Field OpenSearch.Client.ISortProcessor.TargetField { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISortProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISortProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SortOrder> OpenSearch.Client.ISortProcessor.get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISortProcessor.set_Order(Nullable`1<SortOrder> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISortProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISortProcessor.set_TargetField(Field value);
    public SortProcessorDescriptor`1<T> Field(Field field);
    public SortProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public SortProcessorDescriptor`1<T> TargetField(Field field);
    public SortProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, object>> objectPath);
    public SortProcessorDescriptor`1<T> Order(Nullable`1<SortOrder> order);
}
[StringEnumAttribute]
public enum OpenSearch.Client.SortSpecialField : Enum {
    public int value__;
    [EnumMemberAttribute]
public static SortSpecialField Score;
    [EnumMemberAttribute]
public static SortSpecialField DocumentIndexOrder;
    [EnumMemberAttribute]
public static SortSpecialField ShardDocumentOrder;
}
public class OpenSearch.Client.SourceDescriptor`1 : RequestDescriptorBase`3<SourceDescriptor`1<TDocument>, SourceRequestParameters, ISourceRequest`1<TDocument>> {
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.ISourceRequest.Index { get; }
    private Id OpenSearch.Client.ISourceRequest.Id { get; }
    public SourceDescriptor`1(IndexName index, Id id);
    public SourceDescriptor`1(Id id);
    public SourceDescriptor`1(TDocument documentWithId, IndexName index, Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.ISourceRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.ISourceRequest.get_Id();
    public SourceDescriptor`1<TDocument> Index(IndexName index);
    public SourceDescriptor`1<TDocument> Index();
    public SourceDescriptor`1<TDocument> Preference(string preference);
    public SourceDescriptor`1<TDocument> Realtime(Nullable`1<bool> realtime);
    public SourceDescriptor`1<TDocument> Refresh(Nullable`1<bool> refresh);
    public SourceDescriptor`1<TDocument> Routing(Routing routing);
    public SourceDescriptor`1<TDocument> SourceEnabled(Nullable`1<bool> sourceenabled);
    public SourceDescriptor`1<TDocument> SourceExcludes(Fields sourceexcludes);
    public SourceDescriptor`1<TDocument> SourceExcludes(Expression`1[] fields);
    public SourceDescriptor`1<TDocument> SourceIncludes(Fields sourceincludes);
    public SourceDescriptor`1<TDocument> SourceIncludes(Expression`1[] fields);
    public SourceDescriptor`1<TDocument> Version(Nullable`1<long> version);
    public SourceDescriptor`1<TDocument> VersionType(Nullable`1<VersionType> versiontype);
    public SourceDescriptor`1<TDocument> ExecuteOnLocalShard();
}
public class OpenSearch.Client.SourceExistsDescriptor`1 : RequestDescriptorBase`3<SourceExistsDescriptor`1<TDocument>, SourceExistsRequestParameters, ISourceExistsRequest`1<TDocument>> {
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.ISourceExistsRequest.Index { get; }
    private Id OpenSearch.Client.ISourceExistsRequest.Id { get; }
    public SourceExistsDescriptor`1(IndexName index, Id id);
    public SourceExistsDescriptor`1(Id id);
    public SourceExistsDescriptor`1(TDocument documentWithId, IndexName index, Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.ISourceExistsRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.ISourceExistsRequest.get_Id();
    public SourceExistsDescriptor`1<TDocument> Index(IndexName index);
    public SourceExistsDescriptor`1<TDocument> Index();
    public SourceExistsDescriptor`1<TDocument> Preference(string preference);
    public SourceExistsDescriptor`1<TDocument> Realtime(Nullable`1<bool> realtime);
    public SourceExistsDescriptor`1<TDocument> Refresh(Nullable`1<bool> refresh);
    public SourceExistsDescriptor`1<TDocument> Routing(Routing routing);
    public SourceExistsDescriptor`1<TDocument> SourceEnabled(Nullable`1<bool> sourceenabled);
    public SourceExistsDescriptor`1<TDocument> SourceExcludes(Fields sourceexcludes);
    public SourceExistsDescriptor`1<TDocument> SourceExcludes(Expression`1[] fields);
    public SourceExistsDescriptor`1<TDocument> SourceIncludes(Fields sourceincludes);
    public SourceExistsDescriptor`1<TDocument> SourceIncludes(Expression`1[] fields);
    public SourceExistsDescriptor`1<TDocument> Version(Nullable`1<long> version);
    public SourceExistsDescriptor`1<TDocument> VersionType(Nullable`1<VersionType> versiontype);
}
public class OpenSearch.Client.SourceExistsRequest : PlainRequestBase`1<SourceExistsRequestParameters> {
    protected ISourceExistsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.ISourceExistsRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.ISourceExistsRequest.Id { get; }
    public string Preference { get; public set; }
    public Nullable`1<bool> Realtime { get; public set; }
    public Nullable`1<bool> Refresh { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<bool> SourceEnabled { get; public set; }
    public Fields SourceExcludes { get; public set; }
    public Fields SourceIncludes { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    public SourceExistsRequest(IndexName index, Id id);
    protected ISourceExistsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.ISourceExistsRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.ISourceExistsRequest.get_Id();
    public string get_Preference();
    public void set_Preference(string value);
    public Nullable`1<bool> get_Realtime();
    public void set_Realtime(Nullable`1<bool> value);
    public Nullable`1<bool> get_Refresh();
    public void set_Refresh(Nullable`1<bool> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Nullable`1<bool> get_SourceEnabled();
    public void set_SourceEnabled(Nullable`1<bool> value);
    public Fields get_SourceExcludes();
    public void set_SourceExcludes(Fields value);
    public Fields get_SourceIncludes();
    public void set_SourceIncludes(Fields value);
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    public Nullable`1<VersionType> get_VersionType();
    public void set_VersionType(Nullable`1<VersionType> value);
}
public class OpenSearch.Client.SourceExistsRequest`1 : SourceExistsRequest {
    protected ISourceExistsRequest`1<TDocument> TypedSelf { get; }
    public SourceExistsRequest`1(IndexName index, Id id);
    public SourceExistsRequest`1(Id id);
    public SourceExistsRequest`1(TDocument documentWithId, IndexName index, Id id);
    protected ISourceExistsRequest`1<TDocument> get_TypedSelf();
}
public class OpenSearch.Client.SourceField : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CompressThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Excludes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Includes>k__BackingField;
    public Nullable`1<bool> Compress { get; public set; }
    public string CompressThreshold { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    public IEnumerable`1<string> Excludes { get; public set; }
    public IEnumerable`1<string> Includes { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Compress();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CompressThreshold();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CompressThreshold(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Enabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Enabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Excludes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Excludes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Includes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Includes(IEnumerable`1<string> value);
}
public class OpenSearch.Client.SourceFieldDescriptor : DescriptorBase`2<SourceFieldDescriptor, ISourceField> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISourceField.Compress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISourceField.CompressThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISourceField.Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ISourceField.Excludes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ISourceField.Includes>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.ISourceField.Compress { get; private set; }
    private string OpenSearch.Client.ISourceField.CompressThreshold { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISourceField.Enabled { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.ISourceField.Excludes { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.ISourceField.Includes { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISourceField.get_Compress();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISourceField.set_Compress(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISourceField.get_CompressThreshold();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISourceField.set_CompressThreshold(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISourceField.get_Enabled();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISourceField.set_Enabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ISourceField.get_Excludes();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISourceField.set_Excludes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ISourceField.get_Includes();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISourceField.set_Includes(IEnumerable`1<string> value);
    public SourceFieldDescriptor Enabled(Nullable`1<bool> enabled);
    public SourceFieldDescriptor Compress(Nullable`1<bool> compress);
    public SourceFieldDescriptor CompressionThreshold(string compressionThreshold);
    public SourceFieldDescriptor Includes(IEnumerable`1<string> includes);
    public SourceFieldDescriptor Excludes(IEnumerable`1<string> excludes);
}
public class OpenSearch.Client.SourceFilter : object {
    [CompilerGeneratedAttribute]
private static SourceFilter <ExcludeAll>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <Excludes>k__BackingField;
    [CompilerGeneratedAttribute]
private static SourceFilter <IncludeAll>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <Includes>k__BackingField;
    public static SourceFilter ExcludeAll { get; }
    public Fields Excludes { get; public set; }
    public static SourceFilter IncludeAll { get; }
    public Fields Includes { get; public set; }
    private static SourceFilter();
    [CompilerGeneratedAttribute]
public static SourceFilter get_ExcludeAll();
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Excludes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Excludes(Fields value);
    [CompilerGeneratedAttribute]
public static SourceFilter get_IncludeAll();
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_Includes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Includes(Fields value);
}
public class OpenSearch.Client.SourceFilterDescriptor`1 : DescriptorBase`2<SourceFilterDescriptor`1<T>, ISourceFilter> {
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ISourceFilter.Excludes>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ISourceFilter.Includes>k__BackingField;
    private Fields OpenSearch.Client.ISourceFilter.Excludes { get; private set; }
    private Fields OpenSearch.Client.ISourceFilter.Includes { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ISourceFilter.get_Excludes();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISourceFilter.set_Excludes(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ISourceFilter.get_Includes();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISourceFilter.set_Includes(Fields value);
    public SourceFilterDescriptor`1<T> Includes(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public SourceFilterDescriptor`1<T> IncludeAll();
    public SourceFilterDescriptor`1<T> Excludes(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public SourceFilterDescriptor`1<T> ExcludeAll();
}
internal class OpenSearch.Client.SourceFilterFormatter : object {
    private static AutomataDictionary Fields;
    private static SourceFilterFormatter();
    public sealed virtual ISourceFilter Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, ISourceFilter value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.SourceFormatter`1 : object {
    [CompilerGeneratedAttribute]
private Nullable`1<SerializationFormatting> <ForceFormatting>k__BackingField;
    public Nullable`1<SerializationFormatting> ForceFormatting { get; }
    [CompilerGeneratedAttribute]
public virtual Nullable`1<SerializationFormatting> get_ForceFormatting();
    private static bool AttemptFastPath(IOpenSearchSerializer serializer, IJsonFormatterResolver& formatter);
    public sealed virtual T Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public virtual void Serialize(JsonWriter& writer, T value, IJsonFormatterResolver formatterResolver);
}
[ExtensionAttribute]
public static class OpenSearch.Client.SourceManyExtensions : object {
    private static Func`3<MultiGetOperationDescriptor`1<T>, string, IMultiGetOperation> Lookup(IndexName index);
    [ExtensionAttribute]
public static IEnumerable`1<T> SourceMany(IOpenSearchClient client, IEnumerable`1<string> ids, string index);
    [ExtensionAttribute]
public static IEnumerable`1<T> SourceMany(IOpenSearchClient client, IEnumerable`1<long> ids, string index);
    [AsyncStateMachineAttribute("OpenSearch.Client.SourceManyExtensions/<SourceManyAsync>d__3`1")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<T>> SourceManyAsync(IOpenSearchClient client, IEnumerable`1<string> ids, string index, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<IEnumerable`1<T>> SourceManyAsync(IOpenSearchClient client, IEnumerable`1<long> ids, string index, CancellationToken cancellationToken);
}
public class OpenSearch.Client.SourceOnlyRepository : object {
    private object _delegateSettings;
    private string _delegateType;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISnapshotRepository.Type>k__BackingField;
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    private string OpenSearch.Client.ISourceOnlyRepository.DelegateType { get; }
    private string OpenSearch.Client.ISnapshotRepository.Type { get; }
    internal SourceOnlyRepository(string delegateType, object settings);
    public SourceOnlyRepository(IRepositoryWithSettings repositoryToDelegateTo);
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    private sealed virtual override string OpenSearch.Client.ISourceOnlyRepository.get_DelegateType();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISnapshotRepository.get_Type();
}
public class OpenSearch.Client.SourceOnlyRepositoryDescriptor : DescriptorBase`2<SourceOnlyRepositoryDescriptor, ISourceOnlyRepository> {
    private object _delegateSettings;
    private string _delegateType;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISnapshotRepository.Type>k__BackingField;
    private object OpenSearch.Client.IRepositoryWithSettings.DelegateSettings { get; }
    private string OpenSearch.Client.ISourceOnlyRepository.DelegateType { get; }
    private string OpenSearch.Client.ISnapshotRepository.Type { get; }
    private sealed virtual override object OpenSearch.Client.IRepositoryWithSettings.get_DelegateSettings();
    private sealed virtual override string OpenSearch.Client.ISourceOnlyRepository.get_DelegateType();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISnapshotRepository.get_Type();
    private SourceOnlyRepositoryDescriptor DelegateTo(Func`2<TDescriptor, IRepositoryWithSettings> selector);
    public SourceOnlyRepositoryDescriptor FileSystem(Func`2<FileSystemRepositoryDescriptor, IFileSystemRepository> selector);
    public SourceOnlyRepositoryDescriptor ReadOnlyUrl(Func`2<ReadOnlyUrlRepositoryDescriptor, IReadOnlyUrlRepository> selector);
    public SourceOnlyRepositoryDescriptor Azure(Func`2<AzureRepositoryDescriptor, IAzureRepository> selector);
    public SourceOnlyRepositoryDescriptor Hdfs(Func`2<HdfsRepositoryDescriptor, IHdfsRepository> selector);
    public SourceOnlyRepositoryDescriptor S3(Func`2<S3RepositoryDescriptor, IS3Repository> selector);
    public SourceOnlyRepositoryDescriptor Custom(IRepositoryWithSettings repository);
}
internal class OpenSearch.Client.SourceOnlyRepositoryFormatter : object {
    private static AutomataDictionary Fields;
    private static Byte[] DelegateType;
    private static SourceOnlyRepositoryFormatter();
    public sealed virtual void Serialize(JsonWriter& writer, ISourceOnlyRepository value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, object value, IJsonFormatterResolver formatterResolver);
    private static TRepositorySettings Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual ISourceOnlyRepository Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.SourceRequest : PlainRequestBase`1<SourceRequestParameters> {
    protected ISourceRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.ISourceRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.ISourceRequest.Id { get; }
    public string Preference { get; public set; }
    public Nullable`1<bool> Realtime { get; public set; }
    public Nullable`1<bool> Refresh { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<bool> SourceEnabled { get; public set; }
    public Fields SourceExcludes { get; public set; }
    public Fields SourceIncludes { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    public SourceRequest(IndexName index, Id id);
    protected ISourceRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.ISourceRequest.get_Index();
    private sealed virtual override Id OpenSearch.Client.ISourceRequest.get_Id();
    public string get_Preference();
    public void set_Preference(string value);
    public Nullable`1<bool> get_Realtime();
    public void set_Realtime(Nullable`1<bool> value);
    public Nullable`1<bool> get_Refresh();
    public void set_Refresh(Nullable`1<bool> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Nullable`1<bool> get_SourceEnabled();
    public void set_SourceEnabled(Nullable`1<bool> value);
    public Fields get_SourceExcludes();
    public void set_SourceExcludes(Fields value);
    public Fields get_SourceIncludes();
    public void set_SourceIncludes(Fields value);
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    public Nullable`1<VersionType> get_VersionType();
    public void set_VersionType(Nullable`1<VersionType> value);
}
public class OpenSearch.Client.SourceRequest`1 : SourceRequest {
    protected ISourceRequest`1<TDocument> TypedSelf { get; }
    public SourceRequest`1(IndexName index, Id id);
    public SourceRequest`1(Id id);
    public SourceRequest`1(TDocument documentWithId, IndexName index, Id id);
    protected ISourceRequest`1<TDocument> get_TypedSelf();
}
public class OpenSearch.Client.SourceRequestResponseBuilder`1 : CustomResponseBuilderBase {
    [CompilerGeneratedAttribute]
private static SourceRequestResponseBuilder`1<TDocument> <Instance>k__BackingField;
    public static SourceRequestResponseBuilder`1<TDocument> Instance { get; }
    private static SourceRequestResponseBuilder`1();
    [CompilerGeneratedAttribute]
public static SourceRequestResponseBuilder`1<TDocument> get_Instance();
    public virtual object DeserializeResponse(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream);
    [AsyncStateMachineAttribute("OpenSearch.Client.SourceRequestResponseBuilder`1/<DeserializeResponseAsync>d__4")]
public virtual Task`1<object> DeserializeResponseAsync(IOpenSearchSerializer builtInSerializer, IApiCallDetails response, Stream stream, CancellationToken ctx);
}
public class OpenSearch.Client.SourceResponse`1 : ResponseBase {
    [CompilerGeneratedAttribute]
private TDocument <Body>k__BackingField;
    public TDocument Body { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_Body();
    [CompilerGeneratedAttribute]
internal void set_Body(TDocument value);
}
internal class OpenSearch.Client.SourceWriteFormatter`1 : SourceFormatter`1<T> {
    public virtual void Serialize(JsonWriter& writer, T value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.SpanContainingQuery : QueryBase {
    [CompilerGeneratedAttribute]
private ISpanQuery <Big>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <Little>k__BackingField;
    public ISpanQuery Big { get; public set; }
    public ISpanQuery Little { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual ISpanQuery get_Big();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Big(ISpanQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanQuery get_Little();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Little(ISpanQuery value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ISpanContainingQuery q);
}
public class OpenSearch.Client.SpanContainingQueryDescriptor`1 : QueryDescriptorBase`2<SpanContainingQueryDescriptor`1<T>, ISpanContainingQuery> {
    [CompilerGeneratedAttribute]
private ISpanQuery <OpenSearch.Client.ISpanContainingQuery.Big>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <OpenSearch.Client.ISpanContainingQuery.Little>k__BackingField;
    protected bool Conditionless { get; }
    private ISpanQuery OpenSearch.Client.ISpanContainingQuery.Big { get; private set; }
    private ISpanQuery OpenSearch.Client.ISpanContainingQuery.Little { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanQuery OpenSearch.Client.ISpanContainingQuery.get_Big();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanContainingQuery.set_Big(ISpanQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanQuery OpenSearch.Client.ISpanContainingQuery.get_Little();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanContainingQuery.set_Little(ISpanQuery value);
    public SpanContainingQueryDescriptor`1<T> Little(Func`2<SpanQueryDescriptor`1<T>, ISpanQuery> selector);
    public SpanContainingQueryDescriptor`1<T> Big(Func`2<SpanQueryDescriptor`1<T>, ISpanQuery> selector);
}
public class OpenSearch.Client.SpanFieldMaskingQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <Query>k__BackingField;
    public Field Field { get; public set; }
    public ISpanQuery Query { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanQuery get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(ISpanQuery value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ISpanFieldMaskingQuery q);
}
public class OpenSearch.Client.SpanFieldMaskingQueryDescriptor`1 : QueryDescriptorBase`2<SpanFieldMaskingQueryDescriptor`1<T>, ISpanFieldMaskingQuery> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISpanFieldMaskingQuery.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <OpenSearch.Client.ISpanFieldMaskingQuery.Query>k__BackingField;
    protected bool Conditionless { get; }
    private Field OpenSearch.Client.ISpanFieldMaskingQuery.Field { get; private set; }
    private ISpanQuery OpenSearch.Client.ISpanFieldMaskingQuery.Query { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISpanFieldMaskingQuery.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanFieldMaskingQuery.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanQuery OpenSearch.Client.ISpanFieldMaskingQuery.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanFieldMaskingQuery.set_Query(ISpanQuery value);
    public SpanFieldMaskingQueryDescriptor`1<T> Field(Field field);
    public SpanFieldMaskingQueryDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public SpanFieldMaskingQueryDescriptor`1<T> Query(Func`2<SpanQueryDescriptor`1<T>, ISpanQuery> selector);
}
public class OpenSearch.Client.SpanFirstQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <End>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <Match>k__BackingField;
    public Nullable`1<int> End { get; public set; }
    public ISpanQuery Match { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_End();
    [CompilerGeneratedAttribute]
public sealed virtual void set_End(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanQuery get_Match();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Match(ISpanQuery value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ISpanFirstQuery q);
}
public class OpenSearch.Client.SpanFirstQueryDescriptor`1 : QueryDescriptorBase`2<SpanFirstQueryDescriptor`1<T>, ISpanFirstQuery> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISpanFirstQuery.End>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <OpenSearch.Client.ISpanFirstQuery.Match>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<int> OpenSearch.Client.ISpanFirstQuery.End { get; private set; }
    private ISpanQuery OpenSearch.Client.ISpanFirstQuery.Match { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISpanFirstQuery.get_End();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanFirstQuery.set_End(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanQuery OpenSearch.Client.ISpanFirstQuery.get_Match();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanFirstQuery.set_Match(ISpanQuery value);
    public SpanFirstQueryDescriptor`1<T> Match(Func`2<SpanQueryDescriptor`1<T>, ISpanQuery> selector);
    public SpanFirstQueryDescriptor`1<T> End(Nullable`1<int> end);
}
public class OpenSearch.Client.SpanGapQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<int> Width { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Width(Nullable`1<int> value);
    protected virtual bool get_Conditionless();
    internal static bool IsConditionless(ISpanGapQuery q);
    internal virtual void InternalWrapInContainer(IQueryContainer c);
}
[DataContractAttribute]
public class OpenSearch.Client.SpanGapQueryDescriptor`1 : QueryDescriptorBase`2<SpanGapQueryDescriptor`1<T>, ISpanGapQuery> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISpanGapQuery.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISpanGapQuery.Width>k__BackingField;
    protected bool Conditionless { get; }
    private Field OpenSearch.Client.ISpanGapQuery.Field { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISpanGapQuery.Width { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISpanGapQuery.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanGapQuery.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISpanGapQuery.get_Width();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanGapQuery.set_Width(Nullable`1<int> value);
    public SpanGapQueryDescriptor`1<T> Field(Field field);
    public SpanGapQueryDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public SpanGapQueryDescriptor`1<T> Width(Nullable`1<int> width);
}
internal class OpenSearch.Client.SpanGapQueryFormatter : object {
    public sealed virtual void Serialize(JsonWriter& writer, ISpanGapQuery value, IJsonFormatterResolver formatterResolver);
    public sealed virtual ISpanGapQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.SpanMultiTermQuery : QueryBase {
    [CompilerGeneratedAttribute]
private QueryContainer <Match>k__BackingField;
    public QueryContainer Match { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Match();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Match(QueryContainer value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ISpanMultiTermQuery q);
}
public class OpenSearch.Client.SpanMultiTermQueryDescriptor`1 : QueryDescriptorBase`2<SpanMultiTermQueryDescriptor`1<T>, ISpanMultiTermQuery> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.ISpanMultiTermQuery.Match>k__BackingField;
    protected bool Conditionless { get; }
    private QueryContainer OpenSearch.Client.ISpanMultiTermQuery.Match { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.ISpanMultiTermQuery.get_Match();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanMultiTermQuery.set_Match(QueryContainer value);
    public SpanMultiTermQueryDescriptor`1<T> Match(Func`2<QueryContainerDescriptor`1<T>, QueryContainer> selector);
}
public class OpenSearch.Client.SpanNearQuery : QueryBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISpanQuery> <Clauses>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <InOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Slop>k__BackingField;
    public IEnumerable`1<ISpanQuery> Clauses { get; public set; }
    public Nullable`1<bool> InOrder { get; public set; }
    public Nullable`1<int> Slop { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ISpanQuery> get_Clauses();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Clauses(IEnumerable`1<ISpanQuery> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_InOrder();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InOrder(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Slop();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slop(Nullable`1<int> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ISpanNearQuery q);
}
public class OpenSearch.Client.SpanNearQueryDescriptor`1 : QueryDescriptorBase`2<SpanNearQueryDescriptor`1<T>, ISpanNearQuery> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISpanQuery> <OpenSearch.Client.ISpanNearQuery.Clauses>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISpanNearQuery.InOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISpanNearQuery.Slop>k__BackingField;
    protected bool Conditionless { get; }
    private IEnumerable`1<ISpanQuery> OpenSearch.Client.ISpanNearQuery.Clauses { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISpanNearQuery.InOrder { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISpanNearQuery.Slop { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<ISpanQuery> OpenSearch.Client.ISpanNearQuery.get_Clauses();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanNearQuery.set_Clauses(IEnumerable`1<ISpanQuery> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISpanNearQuery.get_InOrder();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanNearQuery.set_InOrder(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISpanNearQuery.get_Slop();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanNearQuery.set_Slop(Nullable`1<int> value);
    public SpanNearQueryDescriptor`1<T> Clauses(Func`2[] selectors);
    public SpanNearQueryDescriptor`1<T> Clauses(IEnumerable`1<Func`2<SpanQueryDescriptor`1<T>, SpanQueryDescriptor`1<T>>> selectors);
    public SpanNearQueryDescriptor`1<T> Slop(Nullable`1<int> slop);
    public SpanNearQueryDescriptor`1<T> InOrder(Nullable`1<bool> inOrder);
}
public class OpenSearch.Client.SpanNotQuery : QueryBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Dist>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <Include>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Post>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Pre>k__BackingField;
    public Nullable`1<int> Dist { get; public set; }
    public ISpanQuery Exclude { get; public set; }
    public ISpanQuery Include { get; public set; }
    public Nullable`1<int> Post { get; public set; }
    public Nullable`1<int> Pre { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Dist();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Dist(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanQuery get_Exclude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Exclude(ISpanQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanQuery get_Include();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Include(ISpanQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Post();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Post(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Pre();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Pre(Nullable`1<int> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ISpanNotQuery q);
}
public class OpenSearch.Client.SpanNotQueryDescriptor`1 : QueryDescriptorBase`2<SpanNotQueryDescriptor`1<T>, ISpanNotQuery> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISpanNotQuery.Dist>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <OpenSearch.Client.ISpanNotQuery.Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <OpenSearch.Client.ISpanNotQuery.Include>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISpanNotQuery.Post>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISpanNotQuery.Pre>k__BackingField;
    protected bool Conditionless { get; }
    private Nullable`1<int> OpenSearch.Client.ISpanNotQuery.Dist { get; private set; }
    private ISpanQuery OpenSearch.Client.ISpanNotQuery.Exclude { get; private set; }
    private ISpanQuery OpenSearch.Client.ISpanNotQuery.Include { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISpanNotQuery.Post { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISpanNotQuery.Pre { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISpanNotQuery.get_Dist();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanNotQuery.set_Dist(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanQuery OpenSearch.Client.ISpanNotQuery.get_Exclude();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanNotQuery.set_Exclude(ISpanQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanQuery OpenSearch.Client.ISpanNotQuery.get_Include();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanNotQuery.set_Include(ISpanQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISpanNotQuery.get_Post();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanNotQuery.set_Post(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISpanNotQuery.get_Pre();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanNotQuery.set_Pre(Nullable`1<int> value);
    public SpanNotQueryDescriptor`1<T> Include(Func`2<SpanQueryDescriptor`1<T>, ISpanQuery> selector);
    public SpanNotQueryDescriptor`1<T> Exclude(Func`2<SpanQueryDescriptor`1<T>, ISpanQuery> selector);
    public SpanNotQueryDescriptor`1<T> Pre(Nullable`1<int> pre);
    public SpanNotQueryDescriptor`1<T> Post(Nullable`1<int> post);
    public SpanNotQueryDescriptor`1<T> Dist(Nullable`1<int> dist);
}
public class OpenSearch.Client.SpanOrQuery : QueryBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISpanQuery> <Clauses>k__BackingField;
    public IEnumerable`1<ISpanQuery> Clauses { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ISpanQuery> get_Clauses();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Clauses(IEnumerable`1<ISpanQuery> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ISpanOrQuery q);
}
public class OpenSearch.Client.SpanOrQueryDescriptor`1 : QueryDescriptorBase`2<SpanOrQueryDescriptor`1<T>, ISpanOrQuery> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISpanQuery> <OpenSearch.Client.ISpanOrQuery.Clauses>k__BackingField;
    protected bool Conditionless { get; }
    private IEnumerable`1<ISpanQuery> OpenSearch.Client.ISpanOrQuery.Clauses { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<ISpanQuery> OpenSearch.Client.ISpanOrQuery.get_Clauses();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanOrQuery.set_Clauses(IEnumerable`1<ISpanQuery> value);
    public SpanOrQueryDescriptor`1<T> Clauses(Func`2[] selectors);
}
public class OpenSearch.Client.SpanQuery : object {
    [CompilerGeneratedAttribute]
private bool <IsStrict>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVerbatim>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanContainingQuery <SpanContaining>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanFieldMaskingQuery <SpanFieldMasking>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanFirstQuery <SpanFirst>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanGapQuery <SpanGap>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanMultiTermQuery <SpanMultiTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanNearQuery <SpanNear>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanNotQuery <SpanNot>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanOrQuery <SpanOr>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanTermQuery <SpanTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanWithinQuery <SpanWithin>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IQuery.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IQuery.Name>k__BackingField;
    public bool IsStrict { get; public set; }
    public bool IsVerbatim { get; public set; }
    public bool IsWritable { get; }
    public ISpanContainingQuery SpanContaining { get; public set; }
    public ISpanFieldMaskingQuery SpanFieldMasking { get; public set; }
    public ISpanFirstQuery SpanFirst { get; public set; }
    public ISpanGapQuery SpanGap { get; public set; }
    public ISpanMultiTermQuery SpanMultiTerm { get; public set; }
    public ISpanNearQuery SpanNear { get; public set; }
    public ISpanNotQuery SpanNot { get; public set; }
    public ISpanOrQuery SpanOr { get; public set; }
    public ISpanTermQuery SpanTerm { get; public set; }
    public ISpanWithinQuery SpanWithin { get; public set; }
    private Nullable`1<double> OpenSearch.Client.IQuery.Boost { get; private set; }
    private bool OpenSearch.Client.IQuery.Conditionless { get; }
    private bool OpenSearch.Client.IQuery.IsWritable { get; }
    private string OpenSearch.Client.IQuery.Name { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsStrict();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsStrict(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsVerbatim();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsVerbatim(bool value);
    public bool get_IsWritable();
    [CompilerGeneratedAttribute]
public sealed virtual ISpanContainingQuery get_SpanContaining();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpanContaining(ISpanContainingQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanFieldMaskingQuery get_SpanFieldMasking();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpanFieldMasking(ISpanFieldMaskingQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanFirstQuery get_SpanFirst();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpanFirst(ISpanFirstQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanGapQuery get_SpanGap();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpanGap(ISpanGapQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanMultiTermQuery get_SpanMultiTerm();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpanMultiTerm(ISpanMultiTermQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanNearQuery get_SpanNear();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpanNear(ISpanNearQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanNotQuery get_SpanNot();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpanNot(ISpanNotQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanOrQuery get_SpanOr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpanOr(ISpanOrQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanTermQuery get_SpanTerm();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpanTerm(ISpanTermQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanWithinQuery get_SpanWithin();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpanWithin(ISpanWithinQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IQuery.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQuery.set_Boost(Nullable`1<double> value);
    private sealed virtual override bool OpenSearch.Client.IQuery.get_Conditionless();
    private sealed virtual override bool OpenSearch.Client.IQuery.get_IsWritable();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IQuery.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IQuery.set_Name(string value);
    public sealed virtual void Accept(IQueryVisitor visitor);
    internal static bool IsConditionless(ISpanQuery q);
}
public class OpenSearch.Client.SpanQueryDescriptor`1 : QueryDescriptorBase`2<SpanQueryDescriptor`1<T>, ISpanQuery> {
    [CompilerGeneratedAttribute]
private ISpanContainingQuery <OpenSearch.Client.ISpanQuery.SpanContaining>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanFieldMaskingQuery <OpenSearch.Client.ISpanQuery.SpanFieldMasking>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanFirstQuery <OpenSearch.Client.ISpanQuery.SpanFirst>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanGapQuery <OpenSearch.Client.ISpanQuery.SpanGap>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanMultiTermQuery <OpenSearch.Client.ISpanQuery.SpanMultiTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanNearQuery <OpenSearch.Client.ISpanQuery.SpanNear>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanNotQuery <OpenSearch.Client.ISpanQuery.SpanNot>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanOrQuery <OpenSearch.Client.ISpanQuery.SpanOr>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanTermQuery <OpenSearch.Client.ISpanQuery.SpanTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanWithinQuery <OpenSearch.Client.ISpanQuery.SpanWithin>k__BackingField;
    protected bool Conditionless { get; }
    private ISpanContainingQuery OpenSearch.Client.ISpanQuery.SpanContaining { get; private set; }
    private ISpanFieldMaskingQuery OpenSearch.Client.ISpanQuery.SpanFieldMasking { get; private set; }
    private ISpanFirstQuery OpenSearch.Client.ISpanQuery.SpanFirst { get; private set; }
    private ISpanGapQuery OpenSearch.Client.ISpanQuery.SpanGap { get; private set; }
    private ISpanMultiTermQuery OpenSearch.Client.ISpanQuery.SpanMultiTerm { get; private set; }
    private ISpanNearQuery OpenSearch.Client.ISpanQuery.SpanNear { get; private set; }
    private ISpanNotQuery OpenSearch.Client.ISpanQuery.SpanNot { get; private set; }
    private ISpanOrQuery OpenSearch.Client.ISpanQuery.SpanOr { get; private set; }
    private ISpanTermQuery OpenSearch.Client.ISpanQuery.SpanTerm { get; private set; }
    private ISpanWithinQuery OpenSearch.Client.ISpanQuery.SpanWithin { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanContainingQuery OpenSearch.Client.ISpanQuery.get_SpanContaining();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanQuery.set_SpanContaining(ISpanContainingQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanFieldMaskingQuery OpenSearch.Client.ISpanQuery.get_SpanFieldMasking();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanQuery.set_SpanFieldMasking(ISpanFieldMaskingQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanFirstQuery OpenSearch.Client.ISpanQuery.get_SpanFirst();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanQuery.set_SpanFirst(ISpanFirstQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanGapQuery OpenSearch.Client.ISpanQuery.get_SpanGap();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanQuery.set_SpanGap(ISpanGapQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanMultiTermQuery OpenSearch.Client.ISpanQuery.get_SpanMultiTerm();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanQuery.set_SpanMultiTerm(ISpanMultiTermQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanNearQuery OpenSearch.Client.ISpanQuery.get_SpanNear();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanQuery.set_SpanNear(ISpanNearQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanNotQuery OpenSearch.Client.ISpanQuery.get_SpanNot();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanQuery.set_SpanNot(ISpanNotQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanOrQuery OpenSearch.Client.ISpanQuery.get_SpanOr();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanQuery.set_SpanOr(ISpanOrQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanTermQuery OpenSearch.Client.ISpanQuery.get_SpanTerm();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanQuery.set_SpanTerm(ISpanTermQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanWithinQuery OpenSearch.Client.ISpanQuery.get_SpanWithin();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanQuery.set_SpanWithin(ISpanWithinQuery value);
    private sealed virtual override void OpenSearch.Client.ISpanQuery.Accept(IQueryVisitor visitor);
    public SpanQueryDescriptor`1<T> SpanTerm(Func`2<SpanTermQueryDescriptor`1<T>, ISpanTermQuery> selector);
    public SpanQueryDescriptor`1<T> SpanFirst(Func`2<SpanFirstQueryDescriptor`1<T>, ISpanFirstQuery> selector);
    public SpanQueryDescriptor`1<T> SpanNear(Func`2<SpanNearQueryDescriptor`1<T>, ISpanNearQuery> selector);
    public SpanQueryDescriptor`1<T> SpanGap(Func`2<SpanGapQueryDescriptor`1<T>, ISpanGapQuery> selector);
    public SpanQueryDescriptor`1<T> SpanOr(Func`2<SpanOrQueryDescriptor`1<T>, ISpanOrQuery> selector);
    public SpanQueryDescriptor`1<T> SpanNot(Func`2<SpanNotQueryDescriptor`1<T>, ISpanNotQuery> selector);
    public SpanQueryDescriptor`1<T> SpanMultiTerm(Func`2<SpanMultiTermQueryDescriptor`1<T>, ISpanMultiTermQuery> selector);
    public SpanQueryDescriptor`1<T> SpanContaining(Func`2<SpanContainingQueryDescriptor`1<T>, ISpanContainingQuery> selector);
    public SpanQueryDescriptor`1<T> SpanWithin(Func`2<SpanWithinQueryDescriptor`1<T>, ISpanWithinQuery> selector);
    public SpanQueryDescriptor`1<T> SpanFieldMasking(Func`2<SpanFieldMaskingQueryDescriptor`1<T>, ISpanFieldMaskingQuery> selector);
}
[DataContractAttribute]
public class OpenSearch.Client.SpanTermQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public object Value { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(object value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ISpanTermQuery q);
}
public class OpenSearch.Client.SpanTermQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<SpanTermQueryDescriptor`1<T>, ISpanTermQuery, T> {
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.ISpanTermQuery.Value>k__BackingField;
    protected bool Conditionless { get; }
    private object OpenSearch.Client.ISpanTermQuery.Value { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.ISpanTermQuery.get_Value();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanTermQuery.set_Value(object value);
    public SpanTermQueryDescriptor`1<T> Value(object value);
}
public class OpenSearch.Client.SpanWithinQuery : QueryBase {
    [CompilerGeneratedAttribute]
private ISpanQuery <Big>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <Little>k__BackingField;
    public ISpanQuery Big { get; public set; }
    public ISpanQuery Little { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual ISpanQuery get_Big();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Big(ISpanQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ISpanQuery get_Little();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Little(ISpanQuery value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ISpanWithinQuery q);
}
public class OpenSearch.Client.SpanWithinQueryDescriptor`1 : QueryDescriptorBase`2<SpanWithinQueryDescriptor`1<T>, ISpanWithinQuery> {
    [CompilerGeneratedAttribute]
private ISpanQuery <OpenSearch.Client.ISpanWithinQuery.Big>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpanQuery <OpenSearch.Client.ISpanWithinQuery.Little>k__BackingField;
    protected bool Conditionless { get; }
    private ISpanQuery OpenSearch.Client.ISpanWithinQuery.Big { get; private set; }
    private ISpanQuery OpenSearch.Client.ISpanWithinQuery.Little { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanQuery OpenSearch.Client.ISpanWithinQuery.get_Big();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanWithinQuery.set_Big(ISpanQuery value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISpanQuery OpenSearch.Client.ISpanWithinQuery.get_Little();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISpanWithinQuery.set_Little(ISpanQuery value);
    public SpanWithinQueryDescriptor`1<T> Little(Func`2<SpanQueryDescriptor`1<T>, ISpanQuery> selector);
    public SpanWithinQueryDescriptor`1<T> Big(Func`2<SpanQueryDescriptor`1<T>, ISpanQuery> selector);
}
public class OpenSearch.Client.Specification.CatApi.CatNamespace : NamespacedClientProxy {
    internal CatNamespace(OpenSearchClient client);
    public CatResponse`1<CatAliasesRecord> Aliases(Func`2<CatAliasesDescriptor, ICatAliasesRequest> selector);
    public Task`1<CatResponse`1<CatAliasesRecord>> AliasesAsync(Func`2<CatAliasesDescriptor, ICatAliasesRequest> selector, CancellationToken ct);
    public CatResponse`1<CatAliasesRecord> Aliases(ICatAliasesRequest request);
    public Task`1<CatResponse`1<CatAliasesRecord>> AliasesAsync(ICatAliasesRequest request, CancellationToken ct);
    public CatResponse`1<CatAllocationRecord> Allocation(Func`2<CatAllocationDescriptor, ICatAllocationRequest> selector);
    public Task`1<CatResponse`1<CatAllocationRecord>> AllocationAsync(Func`2<CatAllocationDescriptor, ICatAllocationRequest> selector, CancellationToken ct);
    public CatResponse`1<CatAllocationRecord> Allocation(ICatAllocationRequest request);
    public Task`1<CatResponse`1<CatAllocationRecord>> AllocationAsync(ICatAllocationRequest request, CancellationToken ct);
    public CatResponse`1<CatCountRecord> Count(Func`2<CatCountDescriptor, ICatCountRequest> selector);
    public Task`1<CatResponse`1<CatCountRecord>> CountAsync(Func`2<CatCountDescriptor, ICatCountRequest> selector, CancellationToken ct);
    public CatResponse`1<CatCountRecord> Count(ICatCountRequest request);
    public Task`1<CatResponse`1<CatCountRecord>> CountAsync(ICatCountRequest request, CancellationToken ct);
    public CatResponse`1<CatFielddataRecord> Fielddata(Func`2<CatFielddataDescriptor, ICatFielddataRequest> selector);
    public Task`1<CatResponse`1<CatFielddataRecord>> FielddataAsync(Func`2<CatFielddataDescriptor, ICatFielddataRequest> selector, CancellationToken ct);
    public CatResponse`1<CatFielddataRecord> Fielddata(ICatFielddataRequest request);
    public Task`1<CatResponse`1<CatFielddataRecord>> FielddataAsync(ICatFielddataRequest request, CancellationToken ct);
    public CatResponse`1<CatHealthRecord> Health(Func`2<CatHealthDescriptor, ICatHealthRequest> selector);
    public Task`1<CatResponse`1<CatHealthRecord>> HealthAsync(Func`2<CatHealthDescriptor, ICatHealthRequest> selector, CancellationToken ct);
    public CatResponse`1<CatHealthRecord> Health(ICatHealthRequest request);
    public Task`1<CatResponse`1<CatHealthRecord>> HealthAsync(ICatHealthRequest request, CancellationToken ct);
    public CatResponse`1<CatHelpRecord> Help(Func`2<CatHelpDescriptor, ICatHelpRequest> selector);
    public Task`1<CatResponse`1<CatHelpRecord>> HelpAsync(Func`2<CatHelpDescriptor, ICatHelpRequest> selector, CancellationToken ct);
    public CatResponse`1<CatHelpRecord> Help(ICatHelpRequest request);
    public Task`1<CatResponse`1<CatHelpRecord>> HelpAsync(ICatHelpRequest request, CancellationToken ct);
    public CatResponse`1<CatIndicesRecord> Indices(Func`2<CatIndicesDescriptor, ICatIndicesRequest> selector);
    public Task`1<CatResponse`1<CatIndicesRecord>> IndicesAsync(Func`2<CatIndicesDescriptor, ICatIndicesRequest> selector, CancellationToken ct);
    public CatResponse`1<CatIndicesRecord> Indices(ICatIndicesRequest request);
    public Task`1<CatResponse`1<CatIndicesRecord>> IndicesAsync(ICatIndicesRequest request, CancellationToken ct);
    public CatResponse`1<CatMasterRecord> Master(Func`2<CatMasterDescriptor, ICatMasterRequest> selector);
    public Task`1<CatResponse`1<CatMasterRecord>> MasterAsync(Func`2<CatMasterDescriptor, ICatMasterRequest> selector, CancellationToken ct);
    public CatResponse`1<CatMasterRecord> Master(ICatMasterRequest request);
    public Task`1<CatResponse`1<CatMasterRecord>> MasterAsync(ICatMasterRequest request, CancellationToken ct);
    public CatResponse`1<CatClusterManagerRecord> ClusterManager(Func`2<CatClusterManagerDescriptor, ICatClusterManagerRequest> selector);
    public Task`1<CatResponse`1<CatClusterManagerRecord>> ClusterManagerAsync(Func`2<CatClusterManagerDescriptor, ICatClusterManagerRequest> selector, CancellationToken ct);
    public CatResponse`1<CatClusterManagerRecord> ClusterManager(ICatClusterManagerRequest request);
    public Task`1<CatResponse`1<CatClusterManagerRecord>> ClusterManagerAsync(ICatClusterManagerRequest request, CancellationToken ct);
    public CatResponse`1<CatNodeAttributesRecord> NodeAttributes(Func`2<CatNodeAttributesDescriptor, ICatNodeAttributesRequest> selector);
    public Task`1<CatResponse`1<CatNodeAttributesRecord>> NodeAttributesAsync(Func`2<CatNodeAttributesDescriptor, ICatNodeAttributesRequest> selector, CancellationToken ct);
    public CatResponse`1<CatNodeAttributesRecord> NodeAttributes(ICatNodeAttributesRequest request);
    public Task`1<CatResponse`1<CatNodeAttributesRecord>> NodeAttributesAsync(ICatNodeAttributesRequest request, CancellationToken ct);
    public CatResponse`1<CatNodesRecord> Nodes(Func`2<CatNodesDescriptor, ICatNodesRequest> selector);
    public Task`1<CatResponse`1<CatNodesRecord>> NodesAsync(Func`2<CatNodesDescriptor, ICatNodesRequest> selector, CancellationToken ct);
    public CatResponse`1<CatNodesRecord> Nodes(ICatNodesRequest request);
    public Task`1<CatResponse`1<CatNodesRecord>> NodesAsync(ICatNodesRequest request, CancellationToken ct);
    public CatResponse`1<CatPendingTasksRecord> PendingTasks(Func`2<CatPendingTasksDescriptor, ICatPendingTasksRequest> selector);
    public Task`1<CatResponse`1<CatPendingTasksRecord>> PendingTasksAsync(Func`2<CatPendingTasksDescriptor, ICatPendingTasksRequest> selector, CancellationToken ct);
    public CatResponse`1<CatPendingTasksRecord> PendingTasks(ICatPendingTasksRequest request);
    public Task`1<CatResponse`1<CatPendingTasksRecord>> PendingTasksAsync(ICatPendingTasksRequest request, CancellationToken ct);
    public CatResponse`1<CatPluginsRecord> Plugins(Func`2<CatPluginsDescriptor, ICatPluginsRequest> selector);
    public Task`1<CatResponse`1<CatPluginsRecord>> PluginsAsync(Func`2<CatPluginsDescriptor, ICatPluginsRequest> selector, CancellationToken ct);
    public CatResponse`1<CatPluginsRecord> Plugins(ICatPluginsRequest request);
    public Task`1<CatResponse`1<CatPluginsRecord>> PluginsAsync(ICatPluginsRequest request, CancellationToken ct);
    public CatResponse`1<CatRecoveryRecord> Recovery(Func`2<CatRecoveryDescriptor, ICatRecoveryRequest> selector);
    public Task`1<CatResponse`1<CatRecoveryRecord>> RecoveryAsync(Func`2<CatRecoveryDescriptor, ICatRecoveryRequest> selector, CancellationToken ct);
    public CatResponse`1<CatRecoveryRecord> Recovery(ICatRecoveryRequest request);
    public Task`1<CatResponse`1<CatRecoveryRecord>> RecoveryAsync(ICatRecoveryRequest request, CancellationToken ct);
    public CatResponse`1<CatRepositoriesRecord> Repositories(Func`2<CatRepositoriesDescriptor, ICatRepositoriesRequest> selector);
    public Task`1<CatResponse`1<CatRepositoriesRecord>> RepositoriesAsync(Func`2<CatRepositoriesDescriptor, ICatRepositoriesRequest> selector, CancellationToken ct);
    public CatResponse`1<CatRepositoriesRecord> Repositories(ICatRepositoriesRequest request);
    public Task`1<CatResponse`1<CatRepositoriesRecord>> RepositoriesAsync(ICatRepositoriesRequest request, CancellationToken ct);
    public CatResponse`1<CatSegmentsRecord> Segments(Func`2<CatSegmentsDescriptor, ICatSegmentsRequest> selector);
    public Task`1<CatResponse`1<CatSegmentsRecord>> SegmentsAsync(Func`2<CatSegmentsDescriptor, ICatSegmentsRequest> selector, CancellationToken ct);
    public CatResponse`1<CatSegmentsRecord> Segments(ICatSegmentsRequest request);
    public Task`1<CatResponse`1<CatSegmentsRecord>> SegmentsAsync(ICatSegmentsRequest request, CancellationToken ct);
    public CatResponse`1<CatShardsRecord> Shards(Func`2<CatShardsDescriptor, ICatShardsRequest> selector);
    public Task`1<CatResponse`1<CatShardsRecord>> ShardsAsync(Func`2<CatShardsDescriptor, ICatShardsRequest> selector, CancellationToken ct);
    public CatResponse`1<CatShardsRecord> Shards(ICatShardsRequest request);
    public Task`1<CatResponse`1<CatShardsRecord>> ShardsAsync(ICatShardsRequest request, CancellationToken ct);
    public CatResponse`1<CatSnapshotsRecord> Snapshots(Func`2<CatSnapshotsDescriptor, ICatSnapshotsRequest> selector);
    public Task`1<CatResponse`1<CatSnapshotsRecord>> SnapshotsAsync(Func`2<CatSnapshotsDescriptor, ICatSnapshotsRequest> selector, CancellationToken ct);
    public CatResponse`1<CatSnapshotsRecord> Snapshots(ICatSnapshotsRequest request);
    public Task`1<CatResponse`1<CatSnapshotsRecord>> SnapshotsAsync(ICatSnapshotsRequest request, CancellationToken ct);
    public CatResponse`1<CatTasksRecord> Tasks(Func`2<CatTasksDescriptor, ICatTasksRequest> selector);
    public Task`1<CatResponse`1<CatTasksRecord>> TasksAsync(Func`2<CatTasksDescriptor, ICatTasksRequest> selector, CancellationToken ct);
    public CatResponse`1<CatTasksRecord> Tasks(ICatTasksRequest request);
    public Task`1<CatResponse`1<CatTasksRecord>> TasksAsync(ICatTasksRequest request, CancellationToken ct);
    public CatResponse`1<CatTemplatesRecord> Templates(Func`2<CatTemplatesDescriptor, ICatTemplatesRequest> selector);
    public Task`1<CatResponse`1<CatTemplatesRecord>> TemplatesAsync(Func`2<CatTemplatesDescriptor, ICatTemplatesRequest> selector, CancellationToken ct);
    public CatResponse`1<CatTemplatesRecord> Templates(ICatTemplatesRequest request);
    public Task`1<CatResponse`1<CatTemplatesRecord>> TemplatesAsync(ICatTemplatesRequest request, CancellationToken ct);
    public CatResponse`1<CatThreadPoolRecord> ThreadPool(Func`2<CatThreadPoolDescriptor, ICatThreadPoolRequest> selector);
    public Task`1<CatResponse`1<CatThreadPoolRecord>> ThreadPoolAsync(Func`2<CatThreadPoolDescriptor, ICatThreadPoolRequest> selector, CancellationToken ct);
    public CatResponse`1<CatThreadPoolRecord> ThreadPool(ICatThreadPoolRequest request);
    public Task`1<CatResponse`1<CatThreadPoolRecord>> ThreadPoolAsync(ICatThreadPoolRequest request, CancellationToken ct);
    public CatResponse`1<CatAllPitSegmentsRecord> AllPitSegments(Func`2<CatAllPitSegmentsDescriptor, ICatAllPitSegmentsRequest> selector);
    public Task`1<CatResponse`1<CatAllPitSegmentsRecord>> AllPitSegmentsAsync(Func`2<CatAllPitSegmentsDescriptor, ICatAllPitSegmentsRequest> selector, CancellationToken ct);
    public CatResponse`1<CatAllPitSegmentsRecord> AllPitSegments(ICatAllPitSegmentsRequest request);
    public Task`1<CatResponse`1<CatAllPitSegmentsRecord>> AllPitSegmentsAsync(ICatAllPitSegmentsRequest request, CancellationToken ct);
    public CatResponse`1<CatPitSegmentsRecord> PitSegments(Func`2<CatPitSegmentsDescriptor, ICatPitSegmentsRequest> selector);
    public Task`1<CatResponse`1<CatPitSegmentsRecord>> PitSegmentsAsync(Func`2<CatPitSegmentsDescriptor, ICatPitSegmentsRequest> selector, CancellationToken ct);
    public CatResponse`1<CatPitSegmentsRecord> PitSegments(ICatPitSegmentsRequest request);
    public Task`1<CatResponse`1<CatPitSegmentsRecord>> PitSegmentsAsync(ICatPitSegmentsRequest request, CancellationToken ct);
    public CatResponse`1<CatSegmentReplicationRecord> SegmentReplication(Func`2<CatSegmentReplicationDescriptor, ICatSegmentReplicationRequest> selector);
    public Task`1<CatResponse`1<CatSegmentReplicationRecord>> SegmentReplicationAsync(Func`2<CatSegmentReplicationDescriptor, ICatSegmentReplicationRequest> selector, CancellationToken ct);
    public CatResponse`1<CatSegmentReplicationRecord> SegmentReplication(ICatSegmentReplicationRequest request);
    public Task`1<CatResponse`1<CatSegmentReplicationRecord>> SegmentReplicationAsync(ICatSegmentReplicationRequest request, CancellationToken ct);
}
public class OpenSearch.Client.Specification.ClusterApi.ClusterNamespace : NamespacedClientProxy {
    internal ClusterNamespace(OpenSearchClient client);
    public ClusterAllocationExplainResponse AllocationExplain(Func`2<ClusterAllocationExplainDescriptor, IClusterAllocationExplainRequest> selector);
    public Task`1<ClusterAllocationExplainResponse> AllocationExplainAsync(Func`2<ClusterAllocationExplainDescriptor, IClusterAllocationExplainRequest> selector, CancellationToken ct);
    public ClusterAllocationExplainResponse AllocationExplain(IClusterAllocationExplainRequest request);
    public Task`1<ClusterAllocationExplainResponse> AllocationExplainAsync(IClusterAllocationExplainRequest request, CancellationToken ct);
    public DeleteVotingConfigExclusionsResponse DeleteVotingConfigExclusions(Func`2<DeleteVotingConfigExclusionsDescriptor, IDeleteVotingConfigExclusionsRequest> selector);
    public Task`1<DeleteVotingConfigExclusionsResponse> DeleteVotingConfigExclusionsAsync(Func`2<DeleteVotingConfigExclusionsDescriptor, IDeleteVotingConfigExclusionsRequest> selector, CancellationToken ct);
    public DeleteVotingConfigExclusionsResponse DeleteVotingConfigExclusions(IDeleteVotingConfigExclusionsRequest request);
    public Task`1<DeleteVotingConfigExclusionsResponse> DeleteVotingConfigExclusionsAsync(IDeleteVotingConfigExclusionsRequest request, CancellationToken ct);
    public ClusterGetSettingsResponse GetSettings(Func`2<ClusterGetSettingsDescriptor, IClusterGetSettingsRequest> selector);
    public Task`1<ClusterGetSettingsResponse> GetSettingsAsync(Func`2<ClusterGetSettingsDescriptor, IClusterGetSettingsRequest> selector, CancellationToken ct);
    public ClusterGetSettingsResponse GetSettings(IClusterGetSettingsRequest request);
    public Task`1<ClusterGetSettingsResponse> GetSettingsAsync(IClusterGetSettingsRequest request, CancellationToken ct);
    public ClusterHealthResponse Health(Indices index, Func`2<ClusterHealthDescriptor, IClusterHealthRequest> selector);
    public Task`1<ClusterHealthResponse> HealthAsync(Indices index, Func`2<ClusterHealthDescriptor, IClusterHealthRequest> selector, CancellationToken ct);
    public ClusterHealthResponse Health(IClusterHealthRequest request);
    public Task`1<ClusterHealthResponse> HealthAsync(IClusterHealthRequest request, CancellationToken ct);
    public ClusterPendingTasksResponse PendingTasks(Func`2<ClusterPendingTasksDescriptor, IClusterPendingTasksRequest> selector);
    public Task`1<ClusterPendingTasksResponse> PendingTasksAsync(Func`2<ClusterPendingTasksDescriptor, IClusterPendingTasksRequest> selector, CancellationToken ct);
    public ClusterPendingTasksResponse PendingTasks(IClusterPendingTasksRequest request);
    public Task`1<ClusterPendingTasksResponse> PendingTasksAsync(IClusterPendingTasksRequest request, CancellationToken ct);
    public PostVotingConfigExclusionsResponse PostVotingConfigExclusions(Func`2<PostVotingConfigExclusionsDescriptor, IPostVotingConfigExclusionsRequest> selector);
    public Task`1<PostVotingConfigExclusionsResponse> PostVotingConfigExclusionsAsync(Func`2<PostVotingConfigExclusionsDescriptor, IPostVotingConfigExclusionsRequest> selector, CancellationToken ct);
    public PostVotingConfigExclusionsResponse PostVotingConfigExclusions(IPostVotingConfigExclusionsRequest request);
    public Task`1<PostVotingConfigExclusionsResponse> PostVotingConfigExclusionsAsync(IPostVotingConfigExclusionsRequest request, CancellationToken ct);
    public ClusterPutSettingsResponse PutSettings(Func`2<ClusterPutSettingsDescriptor, IClusterPutSettingsRequest> selector);
    public Task`1<ClusterPutSettingsResponse> PutSettingsAsync(Func`2<ClusterPutSettingsDescriptor, IClusterPutSettingsRequest> selector, CancellationToken ct);
    public ClusterPutSettingsResponse PutSettings(IClusterPutSettingsRequest request);
    public Task`1<ClusterPutSettingsResponse> PutSettingsAsync(IClusterPutSettingsRequest request, CancellationToken ct);
    public RemoteInfoResponse RemoteInfo(Func`2<RemoteInfoDescriptor, IRemoteInfoRequest> selector);
    public Task`1<RemoteInfoResponse> RemoteInfoAsync(Func`2<RemoteInfoDescriptor, IRemoteInfoRequest> selector, CancellationToken ct);
    public RemoteInfoResponse RemoteInfo(IRemoteInfoRequest request);
    public Task`1<RemoteInfoResponse> RemoteInfoAsync(IRemoteInfoRequest request, CancellationToken ct);
    public ClusterRerouteResponse Reroute(Func`2<ClusterRerouteDescriptor, IClusterRerouteRequest> selector);
    public Task`1<ClusterRerouteResponse> RerouteAsync(Func`2<ClusterRerouteDescriptor, IClusterRerouteRequest> selector, CancellationToken ct);
    public ClusterRerouteResponse Reroute(IClusterRerouteRequest request);
    public Task`1<ClusterRerouteResponse> RerouteAsync(IClusterRerouteRequest request, CancellationToken ct);
    public ClusterStateResponse State(Indices index, Func`2<ClusterStateDescriptor, IClusterStateRequest> selector);
    public Task`1<ClusterStateResponse> StateAsync(Indices index, Func`2<ClusterStateDescriptor, IClusterStateRequest> selector, CancellationToken ct);
    public ClusterStateResponse State(IClusterStateRequest request);
    public Task`1<ClusterStateResponse> StateAsync(IClusterStateRequest request, CancellationToken ct);
    public ClusterStatsResponse Stats(Func`2<ClusterStatsDescriptor, IClusterStatsRequest> selector);
    public Task`1<ClusterStatsResponse> StatsAsync(Func`2<ClusterStatsDescriptor, IClusterStatsRequest> selector, CancellationToken ct);
    public ClusterStatsResponse Stats(IClusterStatsRequest request);
    public Task`1<ClusterStatsResponse> StatsAsync(IClusterStatsRequest request, CancellationToken ct);
    public DeleteComponentTemplateResponse DeleteComponentTemplate(Name name, Func`2<DeleteComponentTemplateDescriptor, IDeleteComponentTemplateRequest> selector);
    public Task`1<DeleteComponentTemplateResponse> DeleteComponentTemplateAsync(Name name, Func`2<DeleteComponentTemplateDescriptor, IDeleteComponentTemplateRequest> selector, CancellationToken ct);
    public DeleteComponentTemplateResponse DeleteComponentTemplate(IDeleteComponentTemplateRequest request);
    public Task`1<DeleteComponentTemplateResponse> DeleteComponentTemplateAsync(IDeleteComponentTemplateRequest request, CancellationToken ct);
    public ExistsResponse ComponentTemplateExists(Name name, Func`2<ComponentTemplateExistsDescriptor, IComponentTemplateExistsRequest> selector);
    public Task`1<ExistsResponse> ComponentTemplateExistsAsync(Name name, Func`2<ComponentTemplateExistsDescriptor, IComponentTemplateExistsRequest> selector, CancellationToken ct);
    public ExistsResponse ComponentTemplateExists(IComponentTemplateExistsRequest request);
    public Task`1<ExistsResponse> ComponentTemplateExistsAsync(IComponentTemplateExistsRequest request, CancellationToken ct);
    public GetComponentTemplateResponse GetComponentTemplate(Names name, Func`2<GetComponentTemplateDescriptor, IGetComponentTemplateRequest> selector);
    public Task`1<GetComponentTemplateResponse> GetComponentTemplateAsync(Names name, Func`2<GetComponentTemplateDescriptor, IGetComponentTemplateRequest> selector, CancellationToken ct);
    public GetComponentTemplateResponse GetComponentTemplate(IGetComponentTemplateRequest request);
    public Task`1<GetComponentTemplateResponse> GetComponentTemplateAsync(IGetComponentTemplateRequest request, CancellationToken ct);
    public PutComponentTemplateResponse PutComponentTemplate(Name name, Func`2<PutComponentTemplateDescriptor, IPutComponentTemplateRequest> selector);
    public Task`1<PutComponentTemplateResponse> PutComponentTemplateAsync(Name name, Func`2<PutComponentTemplateDescriptor, IPutComponentTemplateRequest> selector, CancellationToken ct);
    public PutComponentTemplateResponse PutComponentTemplate(IPutComponentTemplateRequest request);
    public Task`1<PutComponentTemplateResponse> PutComponentTemplateAsync(IPutComponentTemplateRequest request, CancellationToken ct);
}
public class OpenSearch.Client.Specification.DanglingIndicesApi.DanglingIndicesNamespace : NamespacedClientProxy {
    internal DanglingIndicesNamespace(OpenSearchClient client);
    public DeleteDanglingIndexResponse DeleteDanglingIndex(IndexUuid indexUuid, Func`2<DeleteDanglingIndexDescriptor, IDeleteDanglingIndexRequest> selector);
    public Task`1<DeleteDanglingIndexResponse> DeleteDanglingIndexAsync(IndexUuid indexUuid, Func`2<DeleteDanglingIndexDescriptor, IDeleteDanglingIndexRequest> selector, CancellationToken ct);
    public DeleteDanglingIndexResponse DeleteDanglingIndex(IDeleteDanglingIndexRequest request);
    public Task`1<DeleteDanglingIndexResponse> DeleteDanglingIndexAsync(IDeleteDanglingIndexRequest request, CancellationToken ct);
    public ImportDanglingIndexResponse ImportDanglingIndex(IndexUuid indexUuid, Func`2<ImportDanglingIndexDescriptor, IImportDanglingIndexRequest> selector);
    public Task`1<ImportDanglingIndexResponse> ImportDanglingIndexAsync(IndexUuid indexUuid, Func`2<ImportDanglingIndexDescriptor, IImportDanglingIndexRequest> selector, CancellationToken ct);
    public ImportDanglingIndexResponse ImportDanglingIndex(IImportDanglingIndexRequest request);
    public Task`1<ImportDanglingIndexResponse> ImportDanglingIndexAsync(IImportDanglingIndexRequest request, CancellationToken ct);
    public ListDanglingIndicesResponse List(Func`2<ListDanglingIndicesDescriptor, IListDanglingIndicesRequest> selector);
    public Task`1<ListDanglingIndicesResponse> ListAsync(Func`2<ListDanglingIndicesDescriptor, IListDanglingIndicesRequest> selector, CancellationToken ct);
    public ListDanglingIndicesResponse List(IListDanglingIndicesRequest request);
    public Task`1<ListDanglingIndicesResponse> ListAsync(IListDanglingIndicesRequest request, CancellationToken ct);
}
public class OpenSearch.Client.Specification.HttpApi.HttpNamespace : NamespacedClientProxy {
    internal HttpNamespace(OpenSearchClient client);
    public TResponse Delete(string path, Func`2<HttpDeleteDescriptor, IHttpDeleteRequest> selector);
    public Task`1<TResponse> DeleteAsync(string path, Func`2<HttpDeleteDescriptor, IHttpDeleteRequest> selector, CancellationToken ct);
    public TResponse Delete(IHttpDeleteRequest request);
    public Task`1<TResponse> DeleteAsync(IHttpDeleteRequest request, CancellationToken ct);
    public TResponse Get(string path, Func`2<HttpGetDescriptor, IHttpGetRequest> selector);
    public Task`1<TResponse> GetAsync(string path, Func`2<HttpGetDescriptor, IHttpGetRequest> selector, CancellationToken ct);
    public TResponse Get(IHttpGetRequest request);
    public Task`1<TResponse> GetAsync(IHttpGetRequest request, CancellationToken ct);
    public TResponse Head(string path, Func`2<HttpHeadDescriptor, IHttpHeadRequest> selector);
    public Task`1<TResponse> HeadAsync(string path, Func`2<HttpHeadDescriptor, IHttpHeadRequest> selector, CancellationToken ct);
    public TResponse Head(IHttpHeadRequest request);
    public Task`1<TResponse> HeadAsync(IHttpHeadRequest request, CancellationToken ct);
    public TResponse Patch(string path, Func`2<HttpPatchDescriptor, IHttpPatchRequest> selector);
    public Task`1<TResponse> PatchAsync(string path, Func`2<HttpPatchDescriptor, IHttpPatchRequest> selector, CancellationToken ct);
    public TResponse Patch(IHttpPatchRequest request);
    public Task`1<TResponse> PatchAsync(IHttpPatchRequest request, CancellationToken ct);
    public TResponse Post(string path, Func`2<HttpPostDescriptor, IHttpPostRequest> selector);
    public Task`1<TResponse> PostAsync(string path, Func`2<HttpPostDescriptor, IHttpPostRequest> selector, CancellationToken ct);
    public TResponse Post(IHttpPostRequest request);
    public Task`1<TResponse> PostAsync(IHttpPostRequest request, CancellationToken ct);
    public TResponse Put(string path, Func`2<HttpPutDescriptor, IHttpPutRequest> selector);
    public Task`1<TResponse> PutAsync(string path, Func`2<HttpPutDescriptor, IHttpPutRequest> selector, CancellationToken ct);
    public TResponse Put(IHttpPutRequest request);
    public Task`1<TResponse> PutAsync(IHttpPutRequest request, CancellationToken ct);
}
public class OpenSearch.Client.Specification.IndicesApi.IndicesNamespace : NamespacedClientProxy {
    internal IndicesNamespace(OpenSearchClient client);
    public AddIndexBlockResponse AddBlock(Indices index, IndexBlock block, Func`2<AddIndexBlockDescriptor, IAddIndexBlockRequest> selector);
    public Task`1<AddIndexBlockResponse> AddBlockAsync(Indices index, IndexBlock block, Func`2<AddIndexBlockDescriptor, IAddIndexBlockRequest> selector, CancellationToken ct);
    public AddIndexBlockResponse AddBlock(IAddIndexBlockRequest request);
    public Task`1<AddIndexBlockResponse> AddBlockAsync(IAddIndexBlockRequest request, CancellationToken ct);
    public AnalyzeResponse Analyze(Func`2<AnalyzeDescriptor, IAnalyzeRequest> selector);
    public Task`1<AnalyzeResponse> AnalyzeAsync(Func`2<AnalyzeDescriptor, IAnalyzeRequest> selector, CancellationToken ct);
    public AnalyzeResponse Analyze(IAnalyzeRequest request);
    public Task`1<AnalyzeResponse> AnalyzeAsync(IAnalyzeRequest request, CancellationToken ct);
    public ClearCacheResponse ClearCache(Indices index, Func`2<ClearCacheDescriptor, IClearCacheRequest> selector);
    public Task`1<ClearCacheResponse> ClearCacheAsync(Indices index, Func`2<ClearCacheDescriptor, IClearCacheRequest> selector, CancellationToken ct);
    public ClearCacheResponse ClearCache(IClearCacheRequest request);
    public Task`1<ClearCacheResponse> ClearCacheAsync(IClearCacheRequest request, CancellationToken ct);
    public CloneIndexResponse Clone(IndexName index, IndexName target, Func`2<CloneIndexDescriptor, ICloneIndexRequest> selector);
    public Task`1<CloneIndexResponse> CloneAsync(IndexName index, IndexName target, Func`2<CloneIndexDescriptor, ICloneIndexRequest> selector, CancellationToken ct);
    public CloneIndexResponse Clone(ICloneIndexRequest request);
    public Task`1<CloneIndexResponse> CloneAsync(ICloneIndexRequest request, CancellationToken ct);
    public CloseIndexResponse Close(Indices index, Func`2<CloseIndexDescriptor, ICloseIndexRequest> selector);
    public Task`1<CloseIndexResponse> CloseAsync(Indices index, Func`2<CloseIndexDescriptor, ICloseIndexRequest> selector, CancellationToken ct);
    public CloseIndexResponse Close(ICloseIndexRequest request);
    public Task`1<CloseIndexResponse> CloseAsync(ICloseIndexRequest request, CancellationToken ct);
    public CreateIndexResponse Create(IndexName index, Func`2<CreateIndexDescriptor, ICreateIndexRequest> selector);
    public Task`1<CreateIndexResponse> CreateAsync(IndexName index, Func`2<CreateIndexDescriptor, ICreateIndexRequest> selector, CancellationToken ct);
    public CreateIndexResponse Create(ICreateIndexRequest request);
    public Task`1<CreateIndexResponse> CreateAsync(ICreateIndexRequest request, CancellationToken ct);
    public DeleteIndexResponse Delete(Indices index, Func`2<DeleteIndexDescriptor, IDeleteIndexRequest> selector);
    public Task`1<DeleteIndexResponse> DeleteAsync(Indices index, Func`2<DeleteIndexDescriptor, IDeleteIndexRequest> selector, CancellationToken ct);
    public DeleteIndexResponse Delete(IDeleteIndexRequest request);
    public Task`1<DeleteIndexResponse> DeleteAsync(IDeleteIndexRequest request, CancellationToken ct);
    public DeleteAliasResponse DeleteAlias(Indices index, Names name, Func`2<DeleteAliasDescriptor, IDeleteAliasRequest> selector);
    public Task`1<DeleteAliasResponse> DeleteAliasAsync(Indices index, Names name, Func`2<DeleteAliasDescriptor, IDeleteAliasRequest> selector, CancellationToken ct);
    public DeleteAliasResponse DeleteAlias(IDeleteAliasRequest request);
    public Task`1<DeleteAliasResponse> DeleteAliasAsync(IDeleteAliasRequest request, CancellationToken ct);
    public DeleteIndexTemplateResponse DeleteTemplate(Name name, Func`2<DeleteIndexTemplateDescriptor, IDeleteIndexTemplateRequest> selector);
    public Task`1<DeleteIndexTemplateResponse> DeleteTemplateAsync(Name name, Func`2<DeleteIndexTemplateDescriptor, IDeleteIndexTemplateRequest> selector, CancellationToken ct);
    public DeleteIndexTemplateResponse DeleteTemplate(IDeleteIndexTemplateRequest request);
    public Task`1<DeleteIndexTemplateResponse> DeleteTemplateAsync(IDeleteIndexTemplateRequest request, CancellationToken ct);
    public ExistsResponse Exists(Indices index, Func`2<IndexExistsDescriptor, IIndexExistsRequest> selector);
    public Task`1<ExistsResponse> ExistsAsync(Indices index, Func`2<IndexExistsDescriptor, IIndexExistsRequest> selector, CancellationToken ct);
    public ExistsResponse Exists(IIndexExistsRequest request);
    public Task`1<ExistsResponse> ExistsAsync(IIndexExistsRequest request, CancellationToken ct);
    public ExistsResponse AliasExists(Names name, Func`2<AliasExistsDescriptor, IAliasExistsRequest> selector);
    public Task`1<ExistsResponse> AliasExistsAsync(Names name, Func`2<AliasExistsDescriptor, IAliasExistsRequest> selector, CancellationToken ct);
    public ExistsResponse AliasExists(IAliasExistsRequest request);
    public Task`1<ExistsResponse> AliasExistsAsync(IAliasExistsRequest request, CancellationToken ct);
    public ExistsResponse TemplateExists(Names name, Func`2<IndexTemplateExistsDescriptor, IIndexTemplateExistsRequest> selector);
    public Task`1<ExistsResponse> TemplateExistsAsync(Names name, Func`2<IndexTemplateExistsDescriptor, IIndexTemplateExistsRequest> selector, CancellationToken ct);
    public ExistsResponse TemplateExists(IIndexTemplateExistsRequest request);
    public Task`1<ExistsResponse> TemplateExistsAsync(IIndexTemplateExistsRequest request, CancellationToken ct);
    public ExistsResponse TypeExists(Indices index, Names type, Func`2<TypeExistsDescriptor, ITypeExistsRequest> selector);
    public Task`1<ExistsResponse> TypeExistsAsync(Indices index, Names type, Func`2<TypeExistsDescriptor, ITypeExistsRequest> selector, CancellationToken ct);
    public ExistsResponse TypeExists(ITypeExistsRequest request);
    public Task`1<ExistsResponse> TypeExistsAsync(ITypeExistsRequest request, CancellationToken ct);
    public FlushResponse Flush(Indices index, Func`2<FlushDescriptor, IFlushRequest> selector);
    public Task`1<FlushResponse> FlushAsync(Indices index, Func`2<FlushDescriptor, IFlushRequest> selector, CancellationToken ct);
    public FlushResponse Flush(IFlushRequest request);
    public Task`1<FlushResponse> FlushAsync(IFlushRequest request, CancellationToken ct);
    public ForceMergeResponse ForceMerge(Indices index, Func`2<ForceMergeDescriptor, IForceMergeRequest> selector);
    public Task`1<ForceMergeResponse> ForceMergeAsync(Indices index, Func`2<ForceMergeDescriptor, IForceMergeRequest> selector, CancellationToken ct);
    public ForceMergeResponse ForceMerge(IForceMergeRequest request);
    public Task`1<ForceMergeResponse> ForceMergeAsync(IForceMergeRequest request, CancellationToken ct);
    public GetIndexResponse Get(Indices index, Func`2<GetIndexDescriptor, IGetIndexRequest> selector);
    public Task`1<GetIndexResponse> GetAsync(Indices index, Func`2<GetIndexDescriptor, IGetIndexRequest> selector, CancellationToken ct);
    public GetIndexResponse Get(IGetIndexRequest request);
    public Task`1<GetIndexResponse> GetAsync(IGetIndexRequest request, CancellationToken ct);
    public GetAliasResponse GetAlias(Indices index, Func`2<GetAliasDescriptor, IGetAliasRequest> selector);
    public Task`1<GetAliasResponse> GetAliasAsync(Indices index, Func`2<GetAliasDescriptor, IGetAliasRequest> selector, CancellationToken ct);
    public GetAliasResponse GetAlias(IGetAliasRequest request);
    public Task`1<GetAliasResponse> GetAliasAsync(IGetAliasRequest request, CancellationToken ct);
    public GetFieldMappingResponse GetFieldMapping(Fields fields, Func`2<GetFieldMappingDescriptor`1<TDocument>, IGetFieldMappingRequest> selector);
    public Task`1<GetFieldMappingResponse> GetFieldMappingAsync(Fields fields, Func`2<GetFieldMappingDescriptor`1<TDocument>, IGetFieldMappingRequest> selector, CancellationToken ct);
    public GetFieldMappingResponse GetFieldMapping(IGetFieldMappingRequest request);
    public Task`1<GetFieldMappingResponse> GetFieldMappingAsync(IGetFieldMappingRequest request, CancellationToken ct);
    public GetMappingResponse GetMapping(Func`2<GetMappingDescriptor`1<TDocument>, IGetMappingRequest> selector);
    public Task`1<GetMappingResponse> GetMappingAsync(Func`2<GetMappingDescriptor`1<TDocument>, IGetMappingRequest> selector, CancellationToken ct);
    public GetMappingResponse GetMapping(IGetMappingRequest request);
    public Task`1<GetMappingResponse> GetMappingAsync(IGetMappingRequest request, CancellationToken ct);
    public GetIndexSettingsResponse GetSettings(Indices index, Func`2<GetIndexSettingsDescriptor, IGetIndexSettingsRequest> selector);
    public Task`1<GetIndexSettingsResponse> GetSettingsAsync(Indices index, Func`2<GetIndexSettingsDescriptor, IGetIndexSettingsRequest> selector, CancellationToken ct);
    public GetIndexSettingsResponse GetSettings(IGetIndexSettingsRequest request);
    public Task`1<GetIndexSettingsResponse> GetSettingsAsync(IGetIndexSettingsRequest request, CancellationToken ct);
    public GetIndexTemplateResponse GetTemplate(Names name, Func`2<GetIndexTemplateDescriptor, IGetIndexTemplateRequest> selector);
    public Task`1<GetIndexTemplateResponse> GetTemplateAsync(Names name, Func`2<GetIndexTemplateDescriptor, IGetIndexTemplateRequest> selector, CancellationToken ct);
    public GetIndexTemplateResponse GetTemplate(IGetIndexTemplateRequest request);
    public Task`1<GetIndexTemplateResponse> GetTemplateAsync(IGetIndexTemplateRequest request, CancellationToken ct);
    public OpenIndexResponse Open(Indices index, Func`2<OpenIndexDescriptor, IOpenIndexRequest> selector);
    public Task`1<OpenIndexResponse> OpenAsync(Indices index, Func`2<OpenIndexDescriptor, IOpenIndexRequest> selector, CancellationToken ct);
    public OpenIndexResponse Open(IOpenIndexRequest request);
    public Task`1<OpenIndexResponse> OpenAsync(IOpenIndexRequest request, CancellationToken ct);
    public PutAliasResponse PutAlias(Indices index, Name name, Func`2<PutAliasDescriptor, IPutAliasRequest> selector);
    public Task`1<PutAliasResponse> PutAliasAsync(Indices index, Name name, Func`2<PutAliasDescriptor, IPutAliasRequest> selector, CancellationToken ct);
    public PutAliasResponse PutAlias(IPutAliasRequest request);
    public Task`1<PutAliasResponse> PutAliasAsync(IPutAliasRequest request, CancellationToken ct);
    public PutMappingResponse PutMapping(Func`2<PutMappingDescriptor`1<TDocument>, IPutMappingRequest> selector);
    public Task`1<PutMappingResponse> PutMappingAsync(Func`2<PutMappingDescriptor`1<TDocument>, IPutMappingRequest> selector, CancellationToken ct);
    public PutMappingResponse PutMapping(IPutMappingRequest request);
    public Task`1<PutMappingResponse> PutMappingAsync(IPutMappingRequest request, CancellationToken ct);
    public UpdateIndexSettingsResponse UpdateSettings(Indices index, Func`2<UpdateIndexSettingsDescriptor, IUpdateIndexSettingsRequest> selector);
    public Task`1<UpdateIndexSettingsResponse> UpdateSettingsAsync(Indices index, Func`2<UpdateIndexSettingsDescriptor, IUpdateIndexSettingsRequest> selector, CancellationToken ct);
    public UpdateIndexSettingsResponse UpdateSettings(IUpdateIndexSettingsRequest request);
    public Task`1<UpdateIndexSettingsResponse> UpdateSettingsAsync(IUpdateIndexSettingsRequest request, CancellationToken ct);
    public PutIndexTemplateResponse PutTemplate(Name name, Func`2<PutIndexTemplateDescriptor, IPutIndexTemplateRequest> selector);
    public Task`1<PutIndexTemplateResponse> PutTemplateAsync(Name name, Func`2<PutIndexTemplateDescriptor, IPutIndexTemplateRequest> selector, CancellationToken ct);
    public PutIndexTemplateResponse PutTemplate(IPutIndexTemplateRequest request);
    public Task`1<PutIndexTemplateResponse> PutTemplateAsync(IPutIndexTemplateRequest request, CancellationToken ct);
    public RefreshResponse Refresh(Indices index, Func`2<RefreshDescriptor, IRefreshRequest> selector);
    public Task`1<RefreshResponse> RefreshAsync(Indices index, Func`2<RefreshDescriptor, IRefreshRequest> selector, CancellationToken ct);
    public RefreshResponse Refresh(IRefreshRequest request);
    public Task`1<RefreshResponse> RefreshAsync(IRefreshRequest request, CancellationToken ct);
    public ResolveIndexResponse Resolve(Names name, Func`2<ResolveIndexDescriptor, IResolveIndexRequest> selector);
    public Task`1<ResolveIndexResponse> ResolveAsync(Names name, Func`2<ResolveIndexDescriptor, IResolveIndexRequest> selector, CancellationToken ct);
    public ResolveIndexResponse Resolve(IResolveIndexRequest request);
    public Task`1<ResolveIndexResponse> ResolveAsync(IResolveIndexRequest request, CancellationToken ct);
    public RolloverIndexResponse Rollover(Name alias, Func`2<RolloverIndexDescriptor, IRolloverIndexRequest> selector);
    public Task`1<RolloverIndexResponse> RolloverAsync(Name alias, Func`2<RolloverIndexDescriptor, IRolloverIndexRequest> selector, CancellationToken ct);
    public RolloverIndexResponse Rollover(IRolloverIndexRequest request);
    public Task`1<RolloverIndexResponse> RolloverAsync(IRolloverIndexRequest request, CancellationToken ct);
    public ShrinkIndexResponse Shrink(IndexName index, IndexName target, Func`2<ShrinkIndexDescriptor, IShrinkIndexRequest> selector);
    public Task`1<ShrinkIndexResponse> ShrinkAsync(IndexName index, IndexName target, Func`2<ShrinkIndexDescriptor, IShrinkIndexRequest> selector, CancellationToken ct);
    public ShrinkIndexResponse Shrink(IShrinkIndexRequest request);
    public Task`1<ShrinkIndexResponse> ShrinkAsync(IShrinkIndexRequest request, CancellationToken ct);
    public SplitIndexResponse Split(IndexName index, IndexName target, Func`2<SplitIndexDescriptor, ISplitIndexRequest> selector);
    public Task`1<SplitIndexResponse> SplitAsync(IndexName index, IndexName target, Func`2<SplitIndexDescriptor, ISplitIndexRequest> selector, CancellationToken ct);
    public SplitIndexResponse Split(ISplitIndexRequest request);
    public Task`1<SplitIndexResponse> SplitAsync(ISplitIndexRequest request, CancellationToken ct);
    public BulkAliasResponse BulkAlias(Func`2<BulkAliasDescriptor, IBulkAliasRequest> selector);
    public Task`1<BulkAliasResponse> BulkAliasAsync(Func`2<BulkAliasDescriptor, IBulkAliasRequest> selector, CancellationToken ct);
    public BulkAliasResponse BulkAlias(IBulkAliasRequest request);
    public Task`1<BulkAliasResponse> BulkAliasAsync(IBulkAliasRequest request, CancellationToken ct);
    public ValidateQueryResponse ValidateQuery(Func`2<ValidateQueryDescriptor`1<TDocument>, IValidateQueryRequest> selector);
    public Task`1<ValidateQueryResponse> ValidateQueryAsync(Func`2<ValidateQueryDescriptor`1<TDocument>, IValidateQueryRequest> selector, CancellationToken ct);
    public ValidateQueryResponse ValidateQuery(IValidateQueryRequest request);
    public Task`1<ValidateQueryResponse> ValidateQueryAsync(IValidateQueryRequest request, CancellationToken ct);
    public DeleteComposableIndexTemplateResponse DeleteComposableTemplate(Name name, Func`2<DeleteComposableIndexTemplateDescriptor, IDeleteComposableIndexTemplateRequest> selector);
    public Task`1<DeleteComposableIndexTemplateResponse> DeleteComposableTemplateAsync(Name name, Func`2<DeleteComposableIndexTemplateDescriptor, IDeleteComposableIndexTemplateRequest> selector, CancellationToken ct);
    public DeleteComposableIndexTemplateResponse DeleteComposableTemplate(IDeleteComposableIndexTemplateRequest request);
    public Task`1<DeleteComposableIndexTemplateResponse> DeleteComposableTemplateAsync(IDeleteComposableIndexTemplateRequest request, CancellationToken ct);
    public ExistsResponse ComposableTemplateExists(Name name, Func`2<ComposableIndexTemplateExistsDescriptor, IComposableIndexTemplateExistsRequest> selector);
    public Task`1<ExistsResponse> ComposableTemplateExistsAsync(Name name, Func`2<ComposableIndexTemplateExistsDescriptor, IComposableIndexTemplateExistsRequest> selector, CancellationToken ct);
    public ExistsResponse ComposableTemplateExists(IComposableIndexTemplateExistsRequest request);
    public Task`1<ExistsResponse> ComposableTemplateExistsAsync(IComposableIndexTemplateExistsRequest request, CancellationToken ct);
    public GetComposableIndexTemplateResponse GetComposableTemplate(Names name, Func`2<GetComposableIndexTemplateDescriptor, IGetComposableIndexTemplateRequest> selector);
    public Task`1<GetComposableIndexTemplateResponse> GetComposableTemplateAsync(Names name, Func`2<GetComposableIndexTemplateDescriptor, IGetComposableIndexTemplateRequest> selector, CancellationToken ct);
    public GetComposableIndexTemplateResponse GetComposableTemplate(IGetComposableIndexTemplateRequest request);
    public Task`1<GetComposableIndexTemplateResponse> GetComposableTemplateAsync(IGetComposableIndexTemplateRequest request, CancellationToken ct);
    public PutComposableIndexTemplateResponse PutComposableTemplate(Name name, Func`2<PutComposableIndexTemplateDescriptor, IPutComposableIndexTemplateRequest> selector);
    public Task`1<PutComposableIndexTemplateResponse> PutComposableTemplateAsync(Name name, Func`2<PutComposableIndexTemplateDescriptor, IPutComposableIndexTemplateRequest> selector, CancellationToken ct);
    public PutComposableIndexTemplateResponse PutComposableTemplate(IPutComposableIndexTemplateRequest request);
    public Task`1<PutComposableIndexTemplateResponse> PutComposableTemplateAsync(IPutComposableIndexTemplateRequest request, CancellationToken ct);
    public IndicesStatsResponse Stats(Indices index, Func`2<IndicesStatsDescriptor, IIndicesStatsRequest> selector);
    public Task`1<IndicesStatsResponse> StatsAsync(Indices index, Func`2<IndicesStatsDescriptor, IIndicesStatsRequest> selector, CancellationToken ct);
    public IndicesStatsResponse Stats(IIndicesStatsRequest request);
    public Task`1<IndicesStatsResponse> StatsAsync(IIndicesStatsRequest request, CancellationToken ct);
}
public class OpenSearch.Client.Specification.IngestApi.IngestNamespace : NamespacedClientProxy {
    internal IngestNamespace(OpenSearchClient client);
    public DeletePipelineResponse DeletePipeline(Id id, Func`2<DeletePipelineDescriptor, IDeletePipelineRequest> selector);
    public Task`1<DeletePipelineResponse> DeletePipelineAsync(Id id, Func`2<DeletePipelineDescriptor, IDeletePipelineRequest> selector, CancellationToken ct);
    public DeletePipelineResponse DeletePipeline(IDeletePipelineRequest request);
    public Task`1<DeletePipelineResponse> DeletePipelineAsync(IDeletePipelineRequest request, CancellationToken ct);
    public GetPipelineResponse GetPipeline(Func`2<GetPipelineDescriptor, IGetPipelineRequest> selector);
    public Task`1<GetPipelineResponse> GetPipelineAsync(Func`2<GetPipelineDescriptor, IGetPipelineRequest> selector, CancellationToken ct);
    public GetPipelineResponse GetPipeline(IGetPipelineRequest request);
    public Task`1<GetPipelineResponse> GetPipelineAsync(IGetPipelineRequest request, CancellationToken ct);
    public GrokProcessorPatternsResponse GrokProcessorPatterns(Func`2<GrokProcessorPatternsDescriptor, IGrokProcessorPatternsRequest> selector);
    public Task`1<GrokProcessorPatternsResponse> GrokProcessorPatternsAsync(Func`2<GrokProcessorPatternsDescriptor, IGrokProcessorPatternsRequest> selector, CancellationToken ct);
    public GrokProcessorPatternsResponse GrokProcessorPatterns(IGrokProcessorPatternsRequest request);
    public Task`1<GrokProcessorPatternsResponse> GrokProcessorPatternsAsync(IGrokProcessorPatternsRequest request, CancellationToken ct);
    public PutPipelineResponse PutPipeline(Id id, Func`2<PutPipelineDescriptor, IPutPipelineRequest> selector);
    public Task`1<PutPipelineResponse> PutPipelineAsync(Id id, Func`2<PutPipelineDescriptor, IPutPipelineRequest> selector, CancellationToken ct);
    public PutPipelineResponse PutPipeline(IPutPipelineRequest request);
    public Task`1<PutPipelineResponse> PutPipelineAsync(IPutPipelineRequest request, CancellationToken ct);
    public SimulatePipelineResponse SimulatePipeline(Func`2<SimulatePipelineDescriptor, ISimulatePipelineRequest> selector);
    public Task`1<SimulatePipelineResponse> SimulatePipelineAsync(Func`2<SimulatePipelineDescriptor, ISimulatePipelineRequest> selector, CancellationToken ct);
    public SimulatePipelineResponse SimulatePipeline(ISimulatePipelineRequest request);
    public Task`1<SimulatePipelineResponse> SimulatePipelineAsync(ISimulatePipelineRequest request, CancellationToken ct);
}
public class OpenSearch.Client.Specification.NodesApi.NodesNamespace : NamespacedClientProxy {
    internal NodesNamespace(OpenSearchClient client);
    public NodesHotThreadsResponse HotThreads(Func`2<NodesHotThreadsDescriptor, INodesHotThreadsRequest> selector);
    public Task`1<NodesHotThreadsResponse> HotThreadsAsync(Func`2<NodesHotThreadsDescriptor, INodesHotThreadsRequest> selector, CancellationToken ct);
    public NodesHotThreadsResponse HotThreads(INodesHotThreadsRequest request);
    public Task`1<NodesHotThreadsResponse> HotThreadsAsync(INodesHotThreadsRequest request, CancellationToken ct);
    public NodesInfoResponse Info(Func`2<NodesInfoDescriptor, INodesInfoRequest> selector);
    public Task`1<NodesInfoResponse> InfoAsync(Func`2<NodesInfoDescriptor, INodesInfoRequest> selector, CancellationToken ct);
    public NodesInfoResponse Info(INodesInfoRequest request);
    public Task`1<NodesInfoResponse> InfoAsync(INodesInfoRequest request, CancellationToken ct);
    public ReloadSecureSettingsResponse ReloadSecureSettings(Func`2<ReloadSecureSettingsDescriptor, IReloadSecureSettingsRequest> selector);
    public Task`1<ReloadSecureSettingsResponse> ReloadSecureSettingsAsync(Func`2<ReloadSecureSettingsDescriptor, IReloadSecureSettingsRequest> selector, CancellationToken ct);
    public ReloadSecureSettingsResponse ReloadSecureSettings(IReloadSecureSettingsRequest request);
    public Task`1<ReloadSecureSettingsResponse> ReloadSecureSettingsAsync(IReloadSecureSettingsRequest request, CancellationToken ct);
    public NodesStatsResponse Stats(Func`2<NodesStatsDescriptor, INodesStatsRequest> selector);
    public Task`1<NodesStatsResponse> StatsAsync(Func`2<NodesStatsDescriptor, INodesStatsRequest> selector, CancellationToken ct);
    public NodesStatsResponse Stats(INodesStatsRequest request);
    public Task`1<NodesStatsResponse> StatsAsync(INodesStatsRequest request, CancellationToken ct);
    public NodesUsageResponse Usage(Func`2<NodesUsageDescriptor, INodesUsageRequest> selector);
    public Task`1<NodesUsageResponse> UsageAsync(Func`2<NodesUsageDescriptor, INodesUsageRequest> selector, CancellationToken ct);
    public NodesUsageResponse Usage(INodesUsageRequest request);
    public Task`1<NodesUsageResponse> UsageAsync(INodesUsageRequest request, CancellationToken ct);
}
public class OpenSearch.Client.Specification.SnapshotApi.SnapshotNamespace : NamespacedClientProxy {
    internal SnapshotNamespace(OpenSearchClient client);
    public CleanupRepositoryResponse CleanupRepository(Name repository, Func`2<CleanupRepositoryDescriptor, ICleanupRepositoryRequest> selector);
    public Task`1<CleanupRepositoryResponse> CleanupRepositoryAsync(Name repository, Func`2<CleanupRepositoryDescriptor, ICleanupRepositoryRequest> selector, CancellationToken ct);
    public CleanupRepositoryResponse CleanupRepository(ICleanupRepositoryRequest request);
    public Task`1<CleanupRepositoryResponse> CleanupRepositoryAsync(ICleanupRepositoryRequest request, CancellationToken ct);
    public CloneSnapshotResponse Clone(Name repository, Name snapshot, Name targetSnapshot, Func`2<CloneSnapshotDescriptor, ICloneSnapshotRequest> selector);
    public Task`1<CloneSnapshotResponse> CloneAsync(Name repository, Name snapshot, Name targetSnapshot, Func`2<CloneSnapshotDescriptor, ICloneSnapshotRequest> selector, CancellationToken ct);
    public CloneSnapshotResponse Clone(ICloneSnapshotRequest request);
    public Task`1<CloneSnapshotResponse> CloneAsync(ICloneSnapshotRequest request, CancellationToken ct);
    public SnapshotResponse Snapshot(Name repository, Name snapshot, Func`2<SnapshotDescriptor, ISnapshotRequest> selector);
    public Task`1<SnapshotResponse> SnapshotAsync(Name repository, Name snapshot, Func`2<SnapshotDescriptor, ISnapshotRequest> selector, CancellationToken ct);
    public SnapshotResponse Snapshot(ISnapshotRequest request);
    public Task`1<SnapshotResponse> SnapshotAsync(ISnapshotRequest request, CancellationToken ct);
    public CreateRepositoryResponse CreateRepository(Name repository, Func`2<CreateRepositoryDescriptor, ICreateRepositoryRequest> selector);
    public Task`1<CreateRepositoryResponse> CreateRepositoryAsync(Name repository, Func`2<CreateRepositoryDescriptor, ICreateRepositoryRequest> selector, CancellationToken ct);
    public CreateRepositoryResponse CreateRepository(ICreateRepositoryRequest request);
    public Task`1<CreateRepositoryResponse> CreateRepositoryAsync(ICreateRepositoryRequest request, CancellationToken ct);
    public DeleteSnapshotResponse Delete(Name repository, Name snapshot, Func`2<DeleteSnapshotDescriptor, IDeleteSnapshotRequest> selector);
    public Task`1<DeleteSnapshotResponse> DeleteAsync(Name repository, Name snapshot, Func`2<DeleteSnapshotDescriptor, IDeleteSnapshotRequest> selector, CancellationToken ct);
    public DeleteSnapshotResponse Delete(IDeleteSnapshotRequest request);
    public Task`1<DeleteSnapshotResponse> DeleteAsync(IDeleteSnapshotRequest request, CancellationToken ct);
    public DeleteRepositoryResponse DeleteRepository(Names repository, Func`2<DeleteRepositoryDescriptor, IDeleteRepositoryRequest> selector);
    public Task`1<DeleteRepositoryResponse> DeleteRepositoryAsync(Names repository, Func`2<DeleteRepositoryDescriptor, IDeleteRepositoryRequest> selector, CancellationToken ct);
    public DeleteRepositoryResponse DeleteRepository(IDeleteRepositoryRequest request);
    public Task`1<DeleteRepositoryResponse> DeleteRepositoryAsync(IDeleteRepositoryRequest request, CancellationToken ct);
    public GetSnapshotResponse Get(Name repository, Names snapshot, Func`2<GetSnapshotDescriptor, IGetSnapshotRequest> selector);
    public Task`1<GetSnapshotResponse> GetAsync(Name repository, Names snapshot, Func`2<GetSnapshotDescriptor, IGetSnapshotRequest> selector, CancellationToken ct);
    public GetSnapshotResponse Get(IGetSnapshotRequest request);
    public Task`1<GetSnapshotResponse> GetAsync(IGetSnapshotRequest request, CancellationToken ct);
    public GetRepositoryResponse GetRepository(Func`2<GetRepositoryDescriptor, IGetRepositoryRequest> selector);
    public Task`1<GetRepositoryResponse> GetRepositoryAsync(Func`2<GetRepositoryDescriptor, IGetRepositoryRequest> selector, CancellationToken ct);
    public GetRepositoryResponse GetRepository(IGetRepositoryRequest request);
    public Task`1<GetRepositoryResponse> GetRepositoryAsync(IGetRepositoryRequest request, CancellationToken ct);
    public RestoreResponse Restore(Name repository, Name snapshot, Func`2<RestoreDescriptor, IRestoreRequest> selector);
    public Task`1<RestoreResponse> RestoreAsync(Name repository, Name snapshot, Func`2<RestoreDescriptor, IRestoreRequest> selector, CancellationToken ct);
    public RestoreResponse Restore(IRestoreRequest request);
    public Task`1<RestoreResponse> RestoreAsync(IRestoreRequest request, CancellationToken ct);
    public SnapshotStatusResponse Status(Func`2<SnapshotStatusDescriptor, ISnapshotStatusRequest> selector);
    public Task`1<SnapshotStatusResponse> StatusAsync(Func`2<SnapshotStatusDescriptor, ISnapshotStatusRequest> selector, CancellationToken ct);
    public SnapshotStatusResponse Status(ISnapshotStatusRequest request);
    public Task`1<SnapshotStatusResponse> StatusAsync(ISnapshotStatusRequest request, CancellationToken ct);
    public VerifyRepositoryResponse VerifyRepository(Name repository, Func`2<VerifyRepositoryDescriptor, IVerifyRepositoryRequest> selector);
    public Task`1<VerifyRepositoryResponse> VerifyRepositoryAsync(Name repository, Func`2<VerifyRepositoryDescriptor, IVerifyRepositoryRequest> selector, CancellationToken ct);
    public VerifyRepositoryResponse VerifyRepository(IVerifyRepositoryRequest request);
    public Task`1<VerifyRepositoryResponse> VerifyRepositoryAsync(IVerifyRepositoryRequest request, CancellationToken ct);
}
public class OpenSearch.Client.Specification.TasksApi.TasksNamespace : NamespacedClientProxy {
    internal TasksNamespace(OpenSearchClient client);
    public CancelTasksResponse Cancel(Func`2<CancelTasksDescriptor, ICancelTasksRequest> selector);
    public Task`1<CancelTasksResponse> CancelAsync(Func`2<CancelTasksDescriptor, ICancelTasksRequest> selector, CancellationToken ct);
    public CancelTasksResponse Cancel(ICancelTasksRequest request);
    public Task`1<CancelTasksResponse> CancelAsync(ICancelTasksRequest request, CancellationToken ct);
    public GetTaskResponse GetTask(TaskId taskId, Func`2<GetTaskDescriptor, IGetTaskRequest> selector);
    public Task`1<GetTaskResponse> GetTaskAsync(TaskId taskId, Func`2<GetTaskDescriptor, IGetTaskRequest> selector, CancellationToken ct);
    public GetTaskResponse GetTask(IGetTaskRequest request);
    public Task`1<GetTaskResponse> GetTaskAsync(IGetTaskRequest request, CancellationToken ct);
    public ListTasksResponse List(Func`2<ListTasksDescriptor, IListTasksRequest> selector);
    public Task`1<ListTasksResponse> ListAsync(Func`2<ListTasksDescriptor, IListTasksRequest> selector, CancellationToken ct);
    public ListTasksResponse List(IListTasksRequest request);
    public Task`1<ListTasksResponse> ListAsync(IListTasksRequest request, CancellationToken ct);
}
public class OpenSearch.Client.SplitIndexDescriptor : RequestDescriptorBase`3<SplitIndexDescriptor, SplitIndexRequestParameters, ISplitIndexRequest> {
    [CompilerGeneratedAttribute]
private IAliases <OpenSearch.Client.ISplitIndexRequest.Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <OpenSearch.Client.ISplitIndexRequest.Settings>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.ISplitIndexRequest.Index { get; }
    private IndexName OpenSearch.Client.ISplitIndexRequest.Target { get; }
    private IAliases OpenSearch.Client.ISplitIndexRequest.Aliases { get; private set; }
    private IIndexSettings OpenSearch.Client.ISplitIndexRequest.Settings { get; private set; }
    public SplitIndexDescriptor(IndexName index, IndexName target);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.ISplitIndexRequest.get_Index();
    private sealed virtual override IndexName OpenSearch.Client.ISplitIndexRequest.get_Target();
    public SplitIndexDescriptor Index(IndexName index);
    public SplitIndexDescriptor Index();
    public SplitIndexDescriptor MasterTimeout(Time mastertimeout);
    public SplitIndexDescriptor ClusterManagerTimeout(Time timeout);
    public SplitIndexDescriptor Timeout(Time timeout);
    public SplitIndexDescriptor WaitForActiveShards(string waitforactiveshards);
    [CompilerGeneratedAttribute]
private sealed virtual override IAliases OpenSearch.Client.ISplitIndexRequest.get_Aliases();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISplitIndexRequest.set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIndexSettings OpenSearch.Client.ISplitIndexRequest.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISplitIndexRequest.set_Settings(IIndexSettings value);
    public SplitIndexDescriptor Settings(Func`2<IndexSettingsDescriptor, IPromise`1<IIndexSettings>> selector);
    public SplitIndexDescriptor Aliases(Func`2<AliasesDescriptor, IPromise`1<IAliases>> selector);
}
public class OpenSearch.Client.SplitIndexRequest : PlainRequestBase`1<SplitIndexRequestParameters> {
    [CompilerGeneratedAttribute]
private IAliases <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <Settings>k__BackingField;
    public IAliases Aliases { get; public set; }
    public IIndexSettings Settings { get; public set; }
    protected ISplitIndexRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.ISplitIndexRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.ISplitIndexRequest.Target { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public SplitIndexRequest(IndexName index, IndexName target);
    [CompilerGeneratedAttribute]
public sealed virtual IAliases get_Aliases();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
public sealed virtual IIndexSettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IIndexSettings value);
    protected ISplitIndexRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.ISplitIndexRequest.get_Index();
    private sealed virtual override IndexName OpenSearch.Client.ISplitIndexRequest.get_Target();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
public class OpenSearch.Client.SplitIndexResponse : AcknowledgedResponseBase {
    [CompilerGeneratedAttribute]
private bool <ShardsAcknowledged>k__BackingField;
    [DataMemberAttribute]
public bool ShardsAcknowledged { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_ShardsAcknowledged();
    [CompilerGeneratedAttribute]
internal void set_ShardsAcknowledged(bool value);
}
public class OpenSearch.Client.SplitProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreserveTrailing>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public string Separator { get; public set; }
    public Field TargetField { get; public set; }
    public Nullable`1<bool> PreserveTrailing { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Separator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Separator(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PreserveTrailing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreserveTrailing(Nullable`1<bool> value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.SplitProcessorDescriptor`1 : ProcessorDescriptorBase`2<SplitProcessorDescriptor`1<T>, ISplitProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISplitProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISplitProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISplitProcessor.Separator>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISplitProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISplitProcessor.PreserveTrailing>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.ISplitProcessor.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISplitProcessor.IgnoreMissing { get; private set; }
    private string OpenSearch.Client.ISplitProcessor.Separator { get; private set; }
    private Field OpenSearch.Client.ISplitProcessor.TargetField { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISplitProcessor.PreserveTrailing { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISplitProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISplitProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISplitProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISplitProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISplitProcessor.get_Separator();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISplitProcessor.set_Separator(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISplitProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISplitProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISplitProcessor.get_PreserveTrailing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISplitProcessor.set_PreserveTrailing(Nullable`1<bool> value);
    public SplitProcessorDescriptor`1<T> Field(Field field);
    public SplitProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public SplitProcessorDescriptor`1<T> TargetField(Field field);
    public SplitProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, object>> objectPath);
    public SplitProcessorDescriptor`1<T> Separator(string separator);
    public SplitProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
    public SplitProcessorDescriptor`1<T> PreserveTrailing(Nullable`1<bool> preserveTrailing);
}
public class OpenSearch.Client.StandardAnalyzer : AnalyzerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxTokenLength>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <StopWords>k__BackingField;
    public Nullable`1<int> MaxTokenLength { get; public set; }
    public StopWords StopWords { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxTokenLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxTokenLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual StopWords get_StopWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopWords(StopWords value);
}
public class OpenSearch.Client.StandardAnalyzerDescriptor : AnalyzerDescriptorBase`2<StandardAnalyzerDescriptor, IStandardAnalyzer> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IStandardAnalyzer.MaxTokenLength>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <OpenSearch.Client.IStandardAnalyzer.StopWords>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.IStandardAnalyzer.MaxTokenLength { get; private set; }
    private StopWords OpenSearch.Client.IStandardAnalyzer.StopWords { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IStandardAnalyzer.get_MaxTokenLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStandardAnalyzer.set_MaxTokenLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override StopWords OpenSearch.Client.IStandardAnalyzer.get_StopWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStandardAnalyzer.set_StopWords(StopWords value);
    public StandardAnalyzerDescriptor StopWords(String[] stopWords);
    public StandardAnalyzerDescriptor StopWords(IEnumerable`1<string> stopWords);
    public StandardAnalyzerDescriptor StopWords(StopWords stopWords);
    public StandardAnalyzerDescriptor MaxTokenLength(Nullable`1<int> maxTokenLength);
}
[DataContractAttribute]
public class OpenSearch.Client.StandardDeviationBounds : object {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Lower>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Upper>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <LowerPopulation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <UpperPopulation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <LowerSampling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <UpperSampling>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<double> Lower { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> Upper { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> LowerPopulation { get; public set; }
    [DataMemberAttribute]
public Nullable`1<double> UpperPopulation { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringDoubleFormatter")]
public Nullable`1<double> LowerSampling { get; public set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.NullableStringDoubleFormatter")]
public Nullable`1<double> UpperSampling { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Lower();
    [CompilerGeneratedAttribute]
public void set_Lower(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Upper();
    [CompilerGeneratedAttribute]
public void set_Upper(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_LowerPopulation();
    [CompilerGeneratedAttribute]
public void set_LowerPopulation(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_UpperPopulation();
    [CompilerGeneratedAttribute]
public void set_UpperPopulation(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_LowerSampling();
    [CompilerGeneratedAttribute]
public void set_LowerSampling(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_UpperSampling();
    [CompilerGeneratedAttribute]
public void set_UpperSampling(Nullable`1<double> value);
}
public class OpenSearch.Client.StandardTokenizer : TokenizerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxTokenLength>k__BackingField;
    public Nullable`1<int> MaxTokenLength { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxTokenLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxTokenLength(Nullable`1<int> value);
}
public class OpenSearch.Client.StandardTokenizerDescriptor : TokenizerDescriptorBase`2<StandardTokenizerDescriptor, IStandardTokenizer> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IStandardTokenizer.MaxTokenLength>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.IStandardTokenizer.MaxTokenLength { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IStandardTokenizer.get_MaxTokenLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStandardTokenizer.set_MaxTokenLength(Nullable`1<int> value);
    public StandardTokenizerDescriptor MaxTokenLength(Nullable`1<int> maxLength);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.StatefulSerializerExtensions : object {
    [ExtensionAttribute]
public static DefaultHighLevelSerializer CreateStateful(IOpenSearchSerializer serializer, IJsonFormatter`1<T> formatter);
}
public class OpenSearch.Client.StatsAggregate : MetricAggregateBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Average>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Sum>k__BackingField;
    public Nullable`1<double> Average { get; public set; }
    public long Count { get; public set; }
    public Nullable`1<double> Max { get; public set; }
    public Nullable`1<double> Min { get; public set; }
    public double Sum { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Average();
    [CompilerGeneratedAttribute]
public void set_Average(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public long get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public double get_Sum();
    [CompilerGeneratedAttribute]
public void set_Sum(double value);
}
public class OpenSearch.Client.StatsAggregation : FormattableMetricAggregationBase {
    public StatsAggregation(string name, Field field);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.StatsAggregationDescriptor`1 : FormattableMetricAggregationDescriptorBase`3<StatsAggregationDescriptor`1<T>, IStatsAggregation, T> {
}
public class OpenSearch.Client.StatsBucketAggregation : PipelineAggregationBase {
    public StatsBucketAggregation(string name, SingleBucketsPath bucketsPath);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.StatsBucketAggregationDescriptor : PipelineAggregationDescriptorBase`3<StatsBucketAggregationDescriptor, IStatsBucketAggregation, SingleBucketsPath> {
}
public class OpenSearch.Client.StemmerOverrideTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Rules>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RulesPath>k__BackingField;
    public IEnumerable`1<string> Rules { get; public set; }
    public string RulesPath { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Rules();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Rules(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RulesPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RulesPath(string value);
}
public class OpenSearch.Client.StemmerOverrideTokenFilterDescriptor : TokenFilterDescriptorBase`2<StemmerOverrideTokenFilterDescriptor, IStemmerOverrideTokenFilter> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IStemmerOverrideTokenFilter.Rules>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IStemmerOverrideTokenFilter.RulesPath>k__BackingField;
    protected string Type { get; }
    private IEnumerable`1<string> OpenSearch.Client.IStemmerOverrideTokenFilter.Rules { get; private set; }
    private string OpenSearch.Client.IStemmerOverrideTokenFilter.RulesPath { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IStemmerOverrideTokenFilter.get_Rules();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStemmerOverrideTokenFilter.set_Rules(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IStemmerOverrideTokenFilter.get_RulesPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStemmerOverrideTokenFilter.set_RulesPath(string value);
    public StemmerOverrideTokenFilterDescriptor Rules(IEnumerable`1<string> rules);
    public StemmerOverrideTokenFilterDescriptor Rules(String[] rules);
    public StemmerOverrideTokenFilterDescriptor RulesPath(string path);
}
public class OpenSearch.Client.StemmerTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    public string Language { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Language();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Language(string value);
}
public class OpenSearch.Client.StemmerTokenFilterDescriptor : TokenFilterDescriptorBase`2<StemmerTokenFilterDescriptor, IStemmerTokenFilter> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IStemmerTokenFilter.Language>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.IStemmerTokenFilter.Language { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IStemmerTokenFilter.get_Language();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStemmerTokenFilter.set_Language(string value);
    public StemmerTokenFilterDescriptor Language(string language);
}
public class OpenSearch.Client.StopAnalyzer : AnalyzerBase {
    [CompilerGeneratedAttribute]
private StopWords <StopWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StopwordsPath>k__BackingField;
    public StopWords StopWords { get; public set; }
    public string StopwordsPath { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual StopWords get_StopWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopWords(StopWords value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_StopwordsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopwordsPath(string value);
}
public class OpenSearch.Client.StopAnalyzerDescriptor : AnalyzerDescriptorBase`2<StopAnalyzerDescriptor, IStopAnalyzer> {
    [CompilerGeneratedAttribute]
private StopWords <OpenSearch.Client.IStopAnalyzer.StopWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IStopAnalyzer.StopwordsPath>k__BackingField;
    protected string Type { get; }
    private StopWords OpenSearch.Client.IStopAnalyzer.StopWords { get; private set; }
    private string OpenSearch.Client.IStopAnalyzer.StopwordsPath { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override StopWords OpenSearch.Client.IStopAnalyzer.get_StopWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStopAnalyzer.set_StopWords(StopWords value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IStopAnalyzer.get_StopwordsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStopAnalyzer.set_StopwordsPath(string value);
    public StopAnalyzerDescriptor StopWords(String[] stopWords);
    public StopAnalyzerDescriptor StopWords(IEnumerable`1<string> stopWords);
    public StopAnalyzerDescriptor StopWords(StopWords stopWords);
    public StopAnalyzerDescriptor StopwordsPath(string path);
}
public class OpenSearch.Client.StopTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreCase>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RemoveTrailing>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <StopWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StopWordsPath>k__BackingField;
    public Nullable`1<bool> IgnoreCase { get; public set; }
    public Nullable`1<bool> RemoveTrailing { get; public set; }
    public StopWords StopWords { get; public set; }
    public string StopWordsPath { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreCase();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreCase(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_RemoveTrailing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RemoveTrailing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual StopWords get_StopWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopWords(StopWords value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_StopWordsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StopWordsPath(string value);
}
public class OpenSearch.Client.StopTokenFilterDescriptor : TokenFilterDescriptorBase`2<StopTokenFilterDescriptor, IStopTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IStopTokenFilter.IgnoreCase>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IStopTokenFilter.RemoveTrailing>k__BackingField;
    [CompilerGeneratedAttribute]
private StopWords <OpenSearch.Client.IStopTokenFilter.StopWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IStopTokenFilter.StopWordsPath>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.IStopTokenFilter.IgnoreCase { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IStopTokenFilter.RemoveTrailing { get; private set; }
    private StopWords OpenSearch.Client.IStopTokenFilter.StopWords { get; private set; }
    private string OpenSearch.Client.IStopTokenFilter.StopWordsPath { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IStopTokenFilter.get_IgnoreCase();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStopTokenFilter.set_IgnoreCase(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IStopTokenFilter.get_RemoveTrailing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStopTokenFilter.set_RemoveTrailing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override StopWords OpenSearch.Client.IStopTokenFilter.get_StopWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStopTokenFilter.set_StopWords(StopWords value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IStopTokenFilter.get_StopWordsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStopTokenFilter.set_StopWordsPath(string value);
    public StopTokenFilterDescriptor IgnoreCase(Nullable`1<bool> ignoreCase);
    public StopTokenFilterDescriptor RemoveTrailing(Nullable`1<bool> removeTrailing);
    public StopTokenFilterDescriptor StopWords(StopWords stopWords);
    public StopTokenFilterDescriptor StopWords(IEnumerable`1<string> stopWords);
    public StopTokenFilterDescriptor StopWords(String[] stopWords);
    public StopTokenFilterDescriptor StopWordsPath(string path);
}
[JsonFormatterAttribute("OpenSearch.Client.StopWordsFormatter")]
public class OpenSearch.Client.StopWords : Union`2<string, IEnumerable`1<string>> {
    public StopWords(string item);
    public StopWords(IEnumerable`1<string> item);
    public static StopWords op_Implicit(string first);
    public static StopWords op_Implicit(List`1<string> second);
    public static StopWords op_Implicit(String[] second);
}
internal class OpenSearch.Client.StopWordsFormatter : object {
    public sealed virtual StopWords Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, StopWords value, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.StoreCopy : Enum {
    public int value__;
    [EnumMemberAttribute]
public static StoreCopy None;
    [EnumMemberAttribute]
public static StoreCopy Available;
    [EnumMemberAttribute]
public static StoreCopy Corrupt;
    [EnumMemberAttribute]
public static StoreCopy IOError;
    [EnumMemberAttribute]
public static StoreCopy Stale;
    [EnumMemberAttribute]
public static StoreCopy Unknown;
}
public class OpenSearch.Client.StoredScript : object {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IStoredScript.Lang>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IStoredScript.Source>k__BackingField;
    [DataMemberAttribute]
private string OpenSearch.Client.IStoredScript.Lang { get; private set; }
    [DataMemberAttribute]
private string OpenSearch.Client.IStoredScript.Source { get; private set; }
    protected StoredScript(string lang, string source);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IStoredScript.get_Lang();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStoredScript.set_Lang(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IStoredScript.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStoredScript.set_Source(string value);
}
public class OpenSearch.Client.StoredScriptDescriptor : DescriptorBase`2<StoredScriptDescriptor, IStoredScript> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IStoredScript.Lang>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IStoredScript.Source>k__BackingField;
    private string OpenSearch.Client.IStoredScript.Lang { get; private set; }
    private string OpenSearch.Client.IStoredScript.Source { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IStoredScript.get_Lang();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStoredScript.set_Lang(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IStoredScript.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStoredScript.set_Source(string value);
    public StoredScriptDescriptor Source(string source);
    public StoredScriptDescriptor Lang(string lang);
    public StoredScriptDescriptor Lang(ScriptLang lang);
}
[DataContractAttribute]
public class OpenSearch.Client.StoreStats : object {
    [CompilerGeneratedAttribute]
private string <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private double <SizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reserved>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ReservedInBytes>k__BackingField;
    [DataMemberAttribute]
public string Size { get; public set; }
    [DataMemberAttribute]
public double SizeInBytes { get; public set; }
    [DataMemberAttribute]
public string Reserved { get; public set; }
    [DataMemberAttribute]
public long ReservedInBytes { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(string value);
    [CompilerGeneratedAttribute]
public double get_SizeInBytes();
    [CompilerGeneratedAttribute]
public void set_SizeInBytes(double value);
    [CompilerGeneratedAttribute]
public string get_Reserved();
    [CompilerGeneratedAttribute]
public void set_Reserved(string value);
    [CompilerGeneratedAttribute]
public long get_ReservedInBytes();
    [CompilerGeneratedAttribute]
public void set_ReservedInBytes(long value);
}
public class OpenSearch.Client.StrictnessPropagatingVisitor : QueryVisitor {
    private bool _strict;
    public StrictnessPropagatingVisitor(bool strict);
    public virtual void Visit(IQuery query);
}
[StringEnumAttribute]
public enum OpenSearch.Client.StringDistance : Enum {
    public int value__;
    [EnumMemberAttribute]
public static StringDistance Internal;
    [EnumMemberAttribute]
public static StringDistance DamerauLevenshtein;
    [EnumMemberAttribute]
public static StringDistance Levenshtein;
    [EnumMemberAttribute]
public static StringDistance Jarowinkler;
    [EnumMemberAttribute]
public static StringDistance Ngram;
}
[ExtensionAttribute]
internal static class OpenSearch.Client.StringExtensions : object {
    [ExtensionAttribute]
internal static string ToCamelCase(string s);
}
public class OpenSearch.Client.StringFielddata : FielddataBase {
    [CompilerGeneratedAttribute]
private Nullable`1<StringFielddataFormat> <Format>k__BackingField;
    public Nullable`1<StringFielddataFormat> Format { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<StringFielddataFormat> get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(Nullable`1<StringFielddataFormat> value);
}
public class OpenSearch.Client.StringFielddataDescriptor : FielddataDescriptorBase`2<StringFielddataDescriptor, IStringFielddata> {
    [CompilerGeneratedAttribute]
private Nullable`1<StringFielddataFormat> <OpenSearch.Client.IStringFielddata.Format>k__BackingField;
    private Nullable`1<StringFielddataFormat> OpenSearch.Client.IStringFielddata.Format { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<StringFielddataFormat> OpenSearch.Client.IStringFielddata.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStringFielddata.set_Format(Nullable`1<StringFielddataFormat> value);
    public StringFielddataDescriptor Format(Nullable`1<StringFielddataFormat> format);
}
[StringEnumAttribute]
public enum OpenSearch.Client.StringFielddataFormat : Enum {
    public int value__;
    [EnumMemberAttribute]
public static StringFielddataFormat PagedBytes;
    [EnumMemberAttribute]
public static StringFielddataFormat Disabled;
}
internal class OpenSearch.Client.StringIntFormatter : object {
    public sealed virtual int Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, int value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.StringLongFormatter : object {
    public sealed virtual long Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, long value, IJsonFormatterResolver formatterResolver);
}
[AttributeUsageAttribute("128")]
public class OpenSearch.Client.StringTimeSpanAttribute : Attribute {
}
public class OpenSearch.Client.StupidBackoffSmoothingModel : SmoothingModelBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Discount>k__BackingField;
    public Nullable`1<double> Discount { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Discount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Discount(Nullable`1<double> value);
    internal virtual void WrapInContainer(ISmoothingModelContainer container);
}
public class OpenSearch.Client.StupidBackoffSmoothingModelDescriptor : DescriptorBase`2<StupidBackoffSmoothingModelDescriptor, IStupidBackoffSmoothingModel> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IStupidBackoffSmoothingModel.Discount>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.IStupidBackoffSmoothingModel.Discount { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IStupidBackoffSmoothingModel.get_Discount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IStupidBackoffSmoothingModel.set_Discount(Nullable`1<double> value);
    public StupidBackoffSmoothingModelDescriptor Discount(Nullable`1<double> discount);
}
[ExtensionAttribute]
public static class OpenSearch.Client.SuffixExtensions : object {
    [ExtensionAttribute]
public static object Suffix(object object, string suffix);
}
public class OpenSearch.Client.Suggest`1 : object {
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ISuggestOption`1<T>> <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public int Length { get; internal set; }
    public int Offset { get; internal set; }
    public IReadOnlyCollection`1<ISuggestOption`1<T>> Options { get; internal set; }
    public string Text { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Length();
    [CompilerGeneratedAttribute]
internal void set_Length(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Offset();
    [CompilerGeneratedAttribute]
internal void set_Offset(int value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<ISuggestOption`1<T>> get_Options();
    [CompilerGeneratedAttribute]
internal void set_Options(IReadOnlyCollection`1<ISuggestOption`1<T>> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
internal void set_Text(string value);
}
public class OpenSearch.Client.SuggestBucket : object {
    [CompilerGeneratedAttribute]
private ICompletionSuggester <Completion>k__BackingField;
    [CompilerGeneratedAttribute]
private IPhraseSuggester <Phrase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Regex>k__BackingField;
    [CompilerGeneratedAttribute]
private ITermSuggester <Term>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [DataMemberAttribute]
public ICompletionSuggester Completion { get; public set; }
    [DataMemberAttribute]
public IPhraseSuggester Phrase { get; public set; }
    [DataMemberAttribute]
public string Prefix { get; public set; }
    [DataMemberAttribute]
public string Regex { get; public set; }
    [DataMemberAttribute]
public ITermSuggester Term { get; public set; }
    [DataMemberAttribute]
public string Text { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ICompletionSuggester get_Completion();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Completion(ICompletionSuggester value);
    [CompilerGeneratedAttribute]
public sealed virtual IPhraseSuggester get_Phrase();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Phrase(IPhraseSuggester value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Prefix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Regex();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Regex(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ITermSuggester get_Term();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Term(ITermSuggester value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Text(string value);
}
public class OpenSearch.Client.SuggestContainer : IsADictionaryBase`2<string, ISuggestBucket> {
    public SuggestContainer(IDictionary`2<string, ISuggestBucket> container);
    public SuggestContainer(Dictionary`2<string, ISuggestBucket> container);
    public sealed virtual void Add(string name, ISuggestBucket script);
}
public class OpenSearch.Client.SuggestContainerDescriptor`1 : IsADictionaryDescriptorBase`4<SuggestContainerDescriptor`1<T>, ISuggestContainer, string, ISuggestBucket> {
    private SuggestContainerDescriptor`1<T> AssignToBucket(string name, TSuggester suggester, Action`2<SuggestBucket, TSuggester> assign);
    public SuggestContainerDescriptor`1<T> Term(string name, Func`2<TermSuggesterDescriptor`1<T>, ITermSuggester> suggest);
    public SuggestContainerDescriptor`1<T> Phrase(string name, Func`2<PhraseSuggesterDescriptor`1<T>, IPhraseSuggester> suggest);
    public SuggestContainerDescriptor`1<T> Completion(string name, Func`2<CompletionSuggesterDescriptor`1<T>, ICompletionSuggester> suggest);
}
public abstract class OpenSearch.Client.SuggestContextBase : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Path>k__BackingField;
    public string Name { get; public set; }
    public Field Path { get; public set; }
    public string Type { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Path(Field value);
    public abstract virtual string get_Type();
}
public abstract class OpenSearch.Client.SuggestContextDescriptorBase`3 : DescriptorBase`2<TDescriptor, TInterface> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISuggestContext.Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISuggestContext.Path>k__BackingField;
    [IgnoreDataMemberAttribute]
protected string Type { get; }
    private string OpenSearch.Client.ISuggestContext.Name { get; private set; }
    private Field OpenSearch.Client.ISuggestContext.Path { get; private set; }
    private string OpenSearch.Client.ISuggestContext.Type { get; }
    protected abstract virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISuggestContext.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestContext.set_Name(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISuggestContext.get_Path();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestContext.set_Path(Field value);
    private sealed virtual override string OpenSearch.Client.ISuggestContext.get_Type();
    public TDescriptor Name(string name);
    public TDescriptor Path(Field field);
    public TDescriptor Path(Expression`1<Func`2<T, TValue>> objectPath);
}
internal class OpenSearch.Client.SuggestContextFormatter : object {
    private static AutomataDictionary ContextTypes;
    private static SuggestContextFormatter();
    public sealed virtual ISuggestContext Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, ISuggestContext value, IJsonFormatterResolver formatterResolver);
    private static TContext Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.SuggestContextQueriesDescriptor`1 : DescriptorPromiseBase`2<SuggestContextQueriesDescriptor`1<T>, IDictionary`2<string, IList`1<ISuggestContextQuery>>> {
    public SuggestContextQueriesDescriptor`1<T> Context(string name, Func`2[] categoryDescriptors);
    private SuggestContextQueriesDescriptor`1<T> AddContextQueries(string name, List`1<ISuggestContextQuery> contextQueries);
}
public class OpenSearch.Client.SuggestContextQuery : object {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private Context <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<Distance[], Int32[]> <Neighbours>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<Distance, int> <Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Prefix>k__BackingField;
    public Nullable`1<double> Boost { get; public set; }
    public Context Context { get; public set; }
    public Union`2<Distance[], Int32[]> Neighbours { get; public set; }
    public Union`2<Distance, int> Precision { get; public set; }
    public Nullable`1<bool> Prefix { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Boost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Context get_Context();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Context(Context value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<Distance[], Int32[]> get_Neighbours();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Neighbours(Union`2<Distance[], Int32[]> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<Distance, int> get_Precision();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Precision(Union`2<Distance, int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Prefix();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Prefix(Nullable`1<bool> value);
}
public class OpenSearch.Client.SuggestContextQueryDescriptor`1 : DescriptorBase`2<SuggestContextQueryDescriptor`1<T>, ISuggestContextQuery> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ISuggestContextQuery.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private Context <OpenSearch.Client.ISuggestContextQuery.Context>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<Distance[], Int32[]> <OpenSearch.Client.ISuggestContextQuery.Neighbours>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<Distance, int> <OpenSearch.Client.ISuggestContextQuery.Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISuggestContextQuery.Prefix>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.ISuggestContextQuery.Boost { get; private set; }
    private Context OpenSearch.Client.ISuggestContextQuery.Context { get; private set; }
    private Union`2<Distance[], Int32[]> OpenSearch.Client.ISuggestContextQuery.Neighbours { get; private set; }
    private Union`2<Distance, int> OpenSearch.Client.ISuggestContextQuery.Precision { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISuggestContextQuery.Prefix { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ISuggestContextQuery.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestContextQuery.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Context OpenSearch.Client.ISuggestContextQuery.get_Context();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestContextQuery.set_Context(Context value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<Distance[], Int32[]> OpenSearch.Client.ISuggestContextQuery.get_Neighbours();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestContextQuery.set_Neighbours(Union`2<Distance[], Int32[]> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<Distance, int> OpenSearch.Client.ISuggestContextQuery.get_Precision();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestContextQuery.set_Precision(Union`2<Distance, int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISuggestContextQuery.get_Prefix();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestContextQuery.set_Prefix(Nullable`1<bool> value);
    public SuggestContextQueryDescriptor`1<T> Prefix(Nullable`1<bool> prefix);
    public SuggestContextQueryDescriptor`1<T> Boost(Nullable`1<double> boost);
    public SuggestContextQueryDescriptor`1<T> Context(string context);
    public SuggestContextQueryDescriptor`1<T> Context(GeoLocation context);
    public SuggestContextQueryDescriptor`1<T> Precision(Distance precision);
    public SuggestContextQueryDescriptor`1<T> Precision(Nullable`1<int> precision);
    public SuggestContextQueryDescriptor`1<T> Neighbours(Int32[] neighbours);
    public SuggestContextQueryDescriptor`1<T> Neighbours(Distance[] neighbours);
}
public class OpenSearch.Client.SuggestContextsDescriptor`1 : DescriptorPromiseBase`2<SuggestContextsDescriptor`1<T>, IList`1<ISuggestContext>> {
    public SuggestContextsDescriptor`1<T> Category(Func`2<CategorySuggestContextDescriptor`1<T>, ICategorySuggestContext> categoryDescriptor);
    public SuggestContextsDescriptor`1<T> GeoLocation(Func`2<GeoSuggestContextDescriptor`1<T>, IGeoSuggestContext> geoLocationDescriptor);
    private SuggestContextsDescriptor`1<T> AddContext(ISuggestContext context);
}
[DataContractAttribute]
public abstract class OpenSearch.Client.SuggestDescriptorBase`3 : DescriptorBase`2<TDescriptor, TInterface> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISuggester.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ISuggester.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISuggester.Size>k__BackingField;
    private string OpenSearch.Client.ISuggester.Analyzer { get; private set; }
    private Field OpenSearch.Client.ISuggester.Field { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISuggester.Size { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISuggester.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggester.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ISuggester.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggester.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISuggester.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggester.set_Size(Nullable`1<int> value);
    public TDescriptor Size(Nullable`1<int> size);
    public TDescriptor Analyzer(string analyzer);
    public TDescriptor Field(Field field);
    public TDescriptor Field(Expression`1<Func`2<T, TValue>> objectPath);
}
public class OpenSearch.Client.SuggestDictionary`1 : IsAReadOnlyDictionaryBase`2<string, ISuggest`1[]> {
    [CompilerGeneratedAttribute]
private static SuggestDictionary`1<T> <Default>k__BackingField;
    public static SuggestDictionary`1<T> Default { get; }
    [SerializationConstructorAttribute]
public SuggestDictionary`1(IReadOnlyDictionary`2<string, ISuggest`1[]> backingDictionary);
    private static SuggestDictionary`1();
    [CompilerGeneratedAttribute]
public static SuggestDictionary`1<T> get_Default();
    protected virtual string Sanitize(string key);
}
internal class OpenSearch.Client.SuggestDictionaryFormatter`1 : object {
    public sealed virtual ISuggestDictionary`1<T> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, ISuggestDictionary`1<T> value, IJsonFormatterResolver formatterResolver);
}
public abstract class OpenSearch.Client.SuggesterBase : object {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    public string Analyzer { get; public set; }
    public Field Field { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
}
public class OpenSearch.Client.SuggestFuzziness : object {
    [CompilerGeneratedAttribute]
private IFuzziness <Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Transpositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UnicodeAware>k__BackingField;
    public IFuzziness Fuzziness { get; public set; }
    public Nullable`1<int> MinLength { get; public set; }
    public Nullable`1<int> PrefixLength { get; public set; }
    public Nullable`1<bool> Transpositions { get; public set; }
    public Nullable`1<bool> UnicodeAware { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IFuzziness get_Fuzziness();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fuzziness(IFuzziness value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PrefixLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Transpositions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Transpositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_UnicodeAware();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UnicodeAware(Nullable`1<bool> value);
}
public class OpenSearch.Client.SuggestFuzzinessDescriptor`1 : DescriptorBase`2<SuggestFuzzinessDescriptor`1<T>, ISuggestFuzziness> {
    [CompilerGeneratedAttribute]
private IFuzziness <OpenSearch.Client.ISuggestFuzziness.Fuzziness>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISuggestFuzziness.MinLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ISuggestFuzziness.PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISuggestFuzziness.Transpositions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISuggestFuzziness.UnicodeAware>k__BackingField;
    private IFuzziness OpenSearch.Client.ISuggestFuzziness.Fuzziness { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISuggestFuzziness.MinLength { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ISuggestFuzziness.PrefixLength { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISuggestFuzziness.Transpositions { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISuggestFuzziness.UnicodeAware { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IFuzziness OpenSearch.Client.ISuggestFuzziness.get_Fuzziness();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestFuzziness.set_Fuzziness(IFuzziness value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISuggestFuzziness.get_MinLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestFuzziness.set_MinLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ISuggestFuzziness.get_PrefixLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestFuzziness.set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISuggestFuzziness.get_Transpositions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestFuzziness.set_Transpositions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISuggestFuzziness.get_UnicodeAware();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISuggestFuzziness.set_UnicodeAware(Nullable`1<bool> value);
    public SuggestFuzzinessDescriptor`1<T> Fuzziness(Fuzziness fuzziness);
    public SuggestFuzzinessDescriptor`1<T> UnicodeAware(Nullable`1<bool> aware);
    public SuggestFuzzinessDescriptor`1<T> Transpositions(Nullable`1<bool> transpositions);
    public SuggestFuzzinessDescriptor`1<T> MinLength(Nullable`1<int> length);
    public SuggestFuzzinessDescriptor`1<T> PrefixLength(Nullable`1<int> length);
}
public class OpenSearch.Client.SuggestOption`1 : object {
    [CompilerGeneratedAttribute]
private bool <CollateMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IEnumerable`1<Context>> <Contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <DocumentScore>k__BackingField;
    [CompilerGeneratedAttribute]
private FieldValues <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Frequency>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Highlighted>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexName <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <SuggestScore>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [DataMemberAttribute]
public bool CollateMatch { get; internal set; }
    [DataMemberAttribute]
public IDictionary`2<string, IEnumerable`1<Context>> Contexts { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<double> DocumentScore { get; internal set; }
    [DataMemberAttribute]
public FieldValues Fields { get; internal set; }
    [DataMemberAttribute]
public long Frequency { get; public set; }
    [DataMemberAttribute]
public string Highlighted { get; internal set; }
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public IndexName Index { get; internal set; }
    [IgnoreDataMemberAttribute]
public double Score { get; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.SourceFormatter`1")]
public TDocument Source { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<double> SuggestScore { get; internal set; }
    [DataMemberAttribute]
public string Text { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_CollateMatch();
    [CompilerGeneratedAttribute]
internal void set_CollateMatch(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, IEnumerable`1<Context>> get_Contexts();
    [CompilerGeneratedAttribute]
internal void set_Contexts(IDictionary`2<string, IEnumerable`1<Context>> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_DocumentScore();
    [CompilerGeneratedAttribute]
internal void set_DocumentScore(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual FieldValues get_Fields();
    [CompilerGeneratedAttribute]
internal void set_Fields(FieldValues value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Frequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Frequency(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Highlighted();
    [CompilerGeneratedAttribute]
internal void set_Highlighted(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IndexName get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(IndexName value);
    public sealed virtual double get_Score();
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_Source();
    [CompilerGeneratedAttribute]
internal void set_Source(TDocument value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_SuggestScore();
    [CompilerGeneratedAttribute]
internal void set_SuggestScore(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
internal void set_Text(string value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.SuggestSort : Enum {
    public int value__;
    [EnumMemberAttribute]
public static SuggestSort Score;
    [EnumMemberAttribute]
public static SuggestSort Frequency;
}
public class OpenSearch.Client.SumAggregation : FormattableMetricAggregationBase {
    public SumAggregation(string name, Field field);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.SumAggregationDescriptor`1 : FormattableMetricAggregationDescriptorBase`3<SumAggregationDescriptor`1<T>, ISumAggregation, T> {
}
public class OpenSearch.Client.SumBucketAggregation : PipelineAggregationBase {
    public SumBucketAggregation(string name, SingleBucketsPath bucketsPath);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.SumBucketAggregationDescriptor : PipelineAggregationDescriptorBase`3<SumBucketAggregationDescriptor, ISumBucketAggregation, SingleBucketsPath> {
}
[StringEnumAttribute]
public enum OpenSearch.Client.SynonymFormat : Enum {
    public int value__;
    [EnumMemberAttribute]
public static SynonymFormat Solr;
    [EnumMemberAttribute]
public static SynonymFormat WordNet;
}
public class OpenSearch.Client.SynonymGraphTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Expand>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SynonymFormat> <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Synonyms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SynonymsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tokenizer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Updateable>k__BackingField;
    public Nullable`1<bool> Expand { get; public set; }
    public Nullable`1<SynonymFormat> Format { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public IEnumerable`1<string> Synonyms { get; public set; }
    public string SynonymsPath { get; public set; }
    public string Tokenizer { get; public set; }
    public Nullable`1<bool> Updateable { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Expand();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expand(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SynonymFormat> get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(Nullable`1<SynonymFormat> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Lenient();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Synonyms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Synonyms(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SynonymsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SynonymsPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Tokenizer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tokenizer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Updateable();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Updateable(Nullable`1<bool> value);
}
public class OpenSearch.Client.SynonymGraphTokenFilterDescriptor : TokenFilterDescriptorBase`2<SynonymGraphTokenFilterDescriptor, ISynonymGraphTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISynonymGraphTokenFilter.Expand>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SynonymFormat> <OpenSearch.Client.ISynonymGraphTokenFilter.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISynonymGraphTokenFilter.Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ISynonymGraphTokenFilter.Synonyms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISynonymGraphTokenFilter.SynonymsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISynonymGraphTokenFilter.Tokenizer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISynonymGraphTokenFilter.Updateable>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.ISynonymGraphTokenFilter.Expand { get; private set; }
    private Nullable`1<SynonymFormat> OpenSearch.Client.ISynonymGraphTokenFilter.Format { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISynonymGraphTokenFilter.Lenient { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.ISynonymGraphTokenFilter.Synonyms { get; private set; }
    private string OpenSearch.Client.ISynonymGraphTokenFilter.SynonymsPath { get; private set; }
    private string OpenSearch.Client.ISynonymGraphTokenFilter.Tokenizer { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISynonymGraphTokenFilter.Updateable { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISynonymGraphTokenFilter.get_Expand();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymGraphTokenFilter.set_Expand(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SynonymFormat> OpenSearch.Client.ISynonymGraphTokenFilter.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymGraphTokenFilter.set_Format(Nullable`1<SynonymFormat> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISynonymGraphTokenFilter.get_Lenient();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymGraphTokenFilter.set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ISynonymGraphTokenFilter.get_Synonyms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymGraphTokenFilter.set_Synonyms(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISynonymGraphTokenFilter.get_SynonymsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymGraphTokenFilter.set_SynonymsPath(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISynonymGraphTokenFilter.get_Tokenizer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymGraphTokenFilter.set_Tokenizer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISynonymGraphTokenFilter.get_Updateable();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymGraphTokenFilter.set_Updateable(Nullable`1<bool> value);
    public SynonymGraphTokenFilterDescriptor Expand(Nullable`1<bool> expand);
    public SynonymGraphTokenFilterDescriptor Lenient(Nullable`1<bool> lenient);
    public SynonymGraphTokenFilterDescriptor Tokenizer(string tokenizer);
    public SynonymGraphTokenFilterDescriptor SynonymsPath(string path);
    public SynonymGraphTokenFilterDescriptor Format(Nullable`1<SynonymFormat> format);
    public SynonymGraphTokenFilterDescriptor Synonyms(IEnumerable`1<string> synonymGraphs);
    public SynonymGraphTokenFilterDescriptor Synonyms(String[] synonymGraphs);
    public SynonymGraphTokenFilterDescriptor Updateable(Nullable`1<bool> updateable);
}
public class OpenSearch.Client.SynonymTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Expand>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SynonymFormat> <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Synonyms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SynonymsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tokenizer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Updateable>k__BackingField;
    public Nullable`1<bool> Expand { get; public set; }
    public Nullable`1<SynonymFormat> Format { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public IEnumerable`1<string> Synonyms { get; public set; }
    public string SynonymsPath { get; public set; }
    public string Tokenizer { get; public set; }
    public Nullable`1<bool> Updateable { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Expand();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expand(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SynonymFormat> get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(Nullable`1<SynonymFormat> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Lenient();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_Synonyms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Synonyms(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SynonymsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SynonymsPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Tokenizer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tokenizer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Updateable();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Updateable(Nullable`1<bool> value);
}
public class OpenSearch.Client.SynonymTokenFilterDescriptor : TokenFilterDescriptorBase`2<SynonymTokenFilterDescriptor, ISynonymTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISynonymTokenFilter.Expand>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SynonymFormat> <OpenSearch.Client.ISynonymTokenFilter.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISynonymTokenFilter.Lenient>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ISynonymTokenFilter.Synonyms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISynonymTokenFilter.SynonymsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ISynonymTokenFilter.Tokenizer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ISynonymTokenFilter.Updateable>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.ISynonymTokenFilter.Expand { get; private set; }
    private Nullable`1<SynonymFormat> OpenSearch.Client.ISynonymTokenFilter.Format { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISynonymTokenFilter.Lenient { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.ISynonymTokenFilter.Synonyms { get; private set; }
    private string OpenSearch.Client.ISynonymTokenFilter.SynonymsPath { get; private set; }
    private string OpenSearch.Client.ISynonymTokenFilter.Tokenizer { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ISynonymTokenFilter.Updateable { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISynonymTokenFilter.get_Expand();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymTokenFilter.set_Expand(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SynonymFormat> OpenSearch.Client.ISynonymTokenFilter.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymTokenFilter.set_Format(Nullable`1<SynonymFormat> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISynonymTokenFilter.get_Lenient();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymTokenFilter.set_Lenient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ISynonymTokenFilter.get_Synonyms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymTokenFilter.set_Synonyms(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISynonymTokenFilter.get_SynonymsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymTokenFilter.set_SynonymsPath(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ISynonymTokenFilter.get_Tokenizer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymTokenFilter.set_Tokenizer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ISynonymTokenFilter.get_Updateable();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ISynonymTokenFilter.set_Updateable(Nullable`1<bool> value);
    public SynonymTokenFilterDescriptor Expand(Nullable`1<bool> expand);
    public SynonymTokenFilterDescriptor Lenient(Nullable`1<bool> lenient);
    public SynonymTokenFilterDescriptor Tokenizer(string tokenizer);
    public SynonymTokenFilterDescriptor SynonymsPath(string path);
    public SynonymTokenFilterDescriptor Format(Nullable`1<SynonymFormat> format);
    public SynonymTokenFilterDescriptor Synonyms(IEnumerable`1<string> synonyms);
    public SynonymTokenFilterDescriptor Synonyms(String[] synonyms);
    public SynonymTokenFilterDescriptor Updateable(Nullable`1<bool> updateable);
}
public class OpenSearch.Client.TaskExecutingNode : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<TaskId, TaskState> <Tasks>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransportAddress>k__BackingField;
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,System.String>")]
public IReadOnlyDictionary`2<string, string> Attributes { get; internal set; }
    [DataMemberAttribute]
public string Host { get; internal set; }
    [DataMemberAttribute]
public string Ip { get; internal set; }
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public IEnumerable`1<string> Roles { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<TaskId, TaskState> Tasks { get; internal set; }
    [DataMemberAttribute]
public string TransportAddress { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Attributes();
    [CompilerGeneratedAttribute]
internal void set_Attributes(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
internal void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Ip();
    [CompilerGeneratedAttribute]
internal void set_Ip(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Roles();
    [CompilerGeneratedAttribute]
internal void set_Roles(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<TaskId, TaskState> get_Tasks();
    [CompilerGeneratedAttribute]
internal void set_Tasks(IReadOnlyDictionary`2<TaskId, TaskState> value);
    [CompilerGeneratedAttribute]
public string get_TransportAddress();
    [CompilerGeneratedAttribute]
internal void set_TransportAddress(string value);
}
[DebuggerDisplayAttribute("{DebugDisplay,nq}")]
[JsonFormatterAttribute("OpenSearch.Client.TaskIdFormatter")]
public class OpenSearch.Client.TaskId : object {
    [CompilerGeneratedAttribute]
private string <FullyQualifiedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TaskNumber>k__BackingField;
    public string FullyQualifiedId { get; }
    public string NodeId { get; }
    public long TaskNumber { get; }
    private string DebugDisplay { get; }
    public TaskId(string taskId);
    [CompilerGeneratedAttribute]
public string get_FullyQualifiedId();
    [CompilerGeneratedAttribute]
public string get_NodeId();
    [CompilerGeneratedAttribute]
public long get_TaskNumber();
    private string get_DebugDisplay();
    public sealed virtual bool Equals(TaskId other);
    public sealed virtual string GetString(IConnectionConfigurationValues settings);
    public virtual string ToString();
    public static TaskId op_Implicit(string taskId);
    public static bool op_Equality(TaskId left, TaskId right);
    public static bool op_Inequality(TaskId left, TaskId right);
    public virtual bool Equals(object obj);
    private bool EqualsString(string other);
    public virtual int GetHashCode();
}
internal class OpenSearch.Client.TaskIdFormatter : object {
    public sealed virtual TaskId Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TaskId value, IJsonFormatterResolver formatterResolver);
    public sealed virtual TaskId DeserializeFromPropertyName(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void SerializeToPropertyName(JsonWriter& writer, TaskId value, IJsonFormatterResolver formatterResolver);
}
[DataContractAttribute]
public class OpenSearch.Client.TaskInfo : object {
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Cancellable>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<TaskInfo> <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RunningTimeInNanoseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StartTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public string Action { get; internal set; }
    [DataMemberAttribute]
public bool Cancellable { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<TaskInfo> Children { get; internal set; }
    [DataMemberAttribute]
public string Description { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, string> Headers { get; internal set; }
    [DataMemberAttribute]
public long Id { get; internal set; }
    [DataMemberAttribute]
public string Node { get; internal set; }
    [DataMemberAttribute]
public long RunningTimeInNanoseconds { get; internal set; }
    [DataMemberAttribute]
public long StartTimeInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public TaskStatus Status { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
internal void set_Action(string value);
    [CompilerGeneratedAttribute]
public bool get_Cancellable();
    [CompilerGeneratedAttribute]
internal void set_Cancellable(bool value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<TaskInfo> get_Children();
    [CompilerGeneratedAttribute]
internal void set_Children(IReadOnlyCollection`1<TaskInfo> value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
internal void set_Description(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
internal void set_Headers(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
internal void set_Node(string value);
    [CompilerGeneratedAttribute]
public long get_RunningTimeInNanoseconds();
    [CompilerGeneratedAttribute]
internal void set_RunningTimeInNanoseconds(long value);
    [CompilerGeneratedAttribute]
public long get_StartTimeInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_StartTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public TaskStatus get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(TaskStatus value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
public class OpenSearch.Client.TaskRetries : object {
    [CompilerGeneratedAttribute]
private int <Bulk>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Search>k__BackingField;
    [DataMemberAttribute]
public int Bulk { get; internal set; }
    [DataMemberAttribute]
public int Search { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_Bulk();
    [CompilerGeneratedAttribute]
internal void set_Bulk(int value);
    [CompilerGeneratedAttribute]
public int get_Search();
    [CompilerGeneratedAttribute]
internal void set_Search(int value);
}
public class OpenSearch.Client.TaskState : object {
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Cancellable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskId <ParentTaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RunningTimeInNanoSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StartTimeInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public string Action { get; internal set; }
    [DataMemberAttribute]
public bool Cancellable { get; internal set; }
    [DataMemberAttribute]
public string Description { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, string> Headers { get; internal set; }
    [DataMemberAttribute]
public long Id { get; internal set; }
    [DataMemberAttribute]
public string Node { get; internal set; }
    [DataMemberAttribute]
public TaskId ParentTaskId { get; internal set; }
    [DataMemberAttribute]
public long RunningTimeInNanoSeconds { get; internal set; }
    [DataMemberAttribute]
public long StartTimeInMilliseconds { get; internal set; }
    [DataMemberAttribute]
public TaskStatus Status { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
internal void set_Action(string value);
    [CompilerGeneratedAttribute]
public bool get_Cancellable();
    [CompilerGeneratedAttribute]
internal void set_Cancellable(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
internal void set_Description(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
internal void set_Headers(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
internal void set_Node(string value);
    [CompilerGeneratedAttribute]
public TaskId get_ParentTaskId();
    [CompilerGeneratedAttribute]
internal void set_ParentTaskId(TaskId value);
    [CompilerGeneratedAttribute]
public long get_RunningTimeInNanoSeconds();
    [CompilerGeneratedAttribute]
internal void set_RunningTimeInNanoSeconds(long value);
    [CompilerGeneratedAttribute]
public long get_StartTimeInMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_StartTimeInMilliseconds(long value);
    [CompilerGeneratedAttribute]
public TaskStatus get_Status();
    [CompilerGeneratedAttribute]
internal void set_Status(TaskStatus value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
}
public class OpenSearch.Client.TaskStatus : object {
    [CompilerGeneratedAttribute]
private long <Batches>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Deleted>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Noops>k__BackingField;
    [CompilerGeneratedAttribute]
private float <RequestsPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskRetries <Retries>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ThrottledMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ThrottledUntilMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Updated>k__BackingField;
    [CompilerGeneratedAttribute]
private long <VersionConflicts>k__BackingField;
    [DataMemberAttribute]
public long Batches { get; internal set; }
    [DataMemberAttribute]
public long Created { get; internal set; }
    [DataMemberAttribute]
public long Deleted { get; internal set; }
    [DataMemberAttribute]
public long Noops { get; internal set; }
    [DataMemberAttribute]
public float RequestsPerSecond { get; internal set; }
    [DataMemberAttribute]
public TaskRetries Retries { get; internal set; }
    [DataMemberAttribute]
public long ThrottledMilliseconds { get; internal set; }
    [DataMemberAttribute]
public long ThrottledUntilMilliseconds { get; internal set; }
    [DataMemberAttribute]
public long Total { get; internal set; }
    [DataMemberAttribute]
public long Updated { get; internal set; }
    [DataMemberAttribute]
public long VersionConflicts { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Batches();
    [CompilerGeneratedAttribute]
internal void set_Batches(long value);
    [CompilerGeneratedAttribute]
public long get_Created();
    [CompilerGeneratedAttribute]
internal void set_Created(long value);
    [CompilerGeneratedAttribute]
public long get_Deleted();
    [CompilerGeneratedAttribute]
internal void set_Deleted(long value);
    [CompilerGeneratedAttribute]
public long get_Noops();
    [CompilerGeneratedAttribute]
internal void set_Noops(long value);
    [CompilerGeneratedAttribute]
public float get_RequestsPerSecond();
    [CompilerGeneratedAttribute]
internal void set_RequestsPerSecond(float value);
    [CompilerGeneratedAttribute]
public TaskRetries get_Retries();
    [CompilerGeneratedAttribute]
internal void set_Retries(TaskRetries value);
    [CompilerGeneratedAttribute]
public long get_ThrottledMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_ThrottledMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_ThrottledUntilMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_ThrottledUntilMilliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(long value);
    [CompilerGeneratedAttribute]
public long get_Updated();
    [CompilerGeneratedAttribute]
internal void set_Updated(long value);
    [CompilerGeneratedAttribute]
public long get_VersionConflicts();
    [CompilerGeneratedAttribute]
internal void set_VersionConflicts(long value);
}
public class OpenSearch.Client.TDigestMethod : object {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Compression>k__BackingField;
    public Nullable`1<double> Compression { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Compression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Compression(Nullable`1<double> value);
}
public class OpenSearch.Client.TDigestMethodDescriptor : DescriptorBase`2<TDigestMethodDescriptor, ITDigestMethod> {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ITDigestMethod.Compression>k__BackingField;
    private Nullable`1<double> OpenSearch.Client.ITDigestMethod.Compression { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ITDigestMethod.get_Compression();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITDigestMethod.set_Compression(Nullable`1<double> value);
    public TDigestMethodDescriptor Compression(Nullable`1<double> compression);
}
public class OpenSearch.Client.Template : object {
    [CompilerGeneratedAttribute]
private IAliases <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeMapping <Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <Settings>k__BackingField;
    public IAliases Aliases { get; public set; }
    public ITypeMapping Mappings { get; public set; }
    public IIndexSettings Settings { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IAliases get_Aliases();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
public sealed virtual ITypeMapping get_Mappings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mappings(ITypeMapping value);
    [CompilerGeneratedAttribute]
public sealed virtual IIndexSettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IIndexSettings value);
}
public class OpenSearch.Client.TemplateDescriptor : DescriptorBase`2<TemplateDescriptor, ITemplate> {
    [CompilerGeneratedAttribute]
private IAliases <OpenSearch.Client.ITemplate.Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeMapping <OpenSearch.Client.ITemplate.Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <OpenSearch.Client.ITemplate.Settings>k__BackingField;
    private IAliases OpenSearch.Client.ITemplate.Aliases { get; private set; }
    private ITypeMapping OpenSearch.Client.ITemplate.Mappings { get; private set; }
    private IIndexSettings OpenSearch.Client.ITemplate.Settings { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override IAliases OpenSearch.Client.ITemplate.get_Aliases();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITemplate.set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITypeMapping OpenSearch.Client.ITemplate.get_Mappings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITemplate.set_Mappings(ITypeMapping value);
    [CompilerGeneratedAttribute]
private sealed virtual override IIndexSettings OpenSearch.Client.ITemplate.get_Settings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITemplate.set_Settings(IIndexSettings value);
    public TemplateDescriptor Aliases(Func`2<AliasesDescriptor, IPromise`1<IAliases>> aliasDescriptor);
    public TemplateDescriptor Map(Func`2<TypeMappingDescriptor`1<T>, ITypeMapping> selector);
    public TemplateDescriptor Map(Func`2<TypeMappingDescriptor`1<object>, ITypeMapping> selector);
    public TemplateDescriptor Settings(Func`2<IndexSettingsDescriptor, IPromise`1<IIndexSettings>> settingsSelector);
}
public class OpenSearch.Client.TemplateMapping : object {
    [CompilerGeneratedAttribute]
private IAliases <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <IndexPatterns>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeMapping <Mappings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IIndexSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Version>k__BackingField;
    public IAliases Aliases { get; public set; }
    public IReadOnlyCollection`1<string> IndexPatterns { get; public set; }
    public ITypeMapping Mappings { get; public set; }
    public Nullable`1<int> Order { get; public set; }
    public IIndexSettings Settings { get; public set; }
    public Nullable`1<int> Version { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IAliases get_Aliases();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Aliases(IAliases value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<string> get_IndexPatterns();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexPatterns(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual ITypeMapping get_Mappings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Mappings(ITypeMapping value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IIndexSettings get_Settings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Settings(IIndexSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<int> value);
}
public class OpenSearch.Client.Term : object {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Missing>k__BackingField;
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public object Missing { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(object value);
}
public class OpenSearch.Client.TermDescriptor`1 : DescriptorBase`2<TermDescriptor`1<T>, ITerm> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ITerm.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.ITerm.Missing>k__BackingField;
    private Field OpenSearch.Client.ITerm.Field { get; private set; }
    private object OpenSearch.Client.ITerm.Missing { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ITerm.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITerm.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.ITerm.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITerm.set_Missing(object value);
    public TermDescriptor`1<T> Field(Field field);
    public TermDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public TermDescriptor`1<T> Missing(object missing);
}
[DataContractAttribute]
public class OpenSearch.Client.TermQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CaseInsensitive>k__BackingField;
    public object Value { get; public set; }
    public Nullable`1<bool> CaseInsensitive { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_CaseInsensitive();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CaseInsensitive(Nullable`1<bool> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ITermQuery q);
}
public class OpenSearch.Client.TermQueryDescriptor`1 : TermQueryDescriptorBase`3<TermQueryDescriptor`1<T>, ITermQuery, T> {
}
public abstract class OpenSearch.Client.TermQueryDescriptorBase`3 : FieldNameQueryDescriptorBase`3<TDescriptor, TInterface, T> {
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.ITermQuery.Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITermQuery.CaseInsensitive>k__BackingField;
    protected bool Conditionless { get; }
    private object OpenSearch.Client.ITermQuery.Value { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITermQuery.CaseInsensitive { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.ITermQuery.get_Value();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermQuery.set_Value(object value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITermQuery.get_CaseInsensitive();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermQuery.set_CaseInsensitive(Nullable`1<bool> value);
    public TDescriptor Value(object value);
    public TDescriptor CaseInsensitive(Nullable`1<bool> caseInsensitive);
}
public class OpenSearch.Client.TermRangeQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private string <GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LessThanOrEqualTo>k__BackingField;
    public string GreaterThan { get; public set; }
    public string GreaterThanOrEqualTo { get; public set; }
    public string LessThan { get; public set; }
    public string LessThanOrEqualTo { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_GreaterThan();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GreaterThan(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GreaterThanOrEqualTo(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LessThan();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LessThan(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LessThanOrEqualTo(string value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ITermRangeQuery q);
}
[DataContractAttribute]
public class OpenSearch.Client.TermRangeQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<TermRangeQueryDescriptor`1<T>, ITermRangeQuery, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITermRangeQuery.GreaterThan>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITermRangeQuery.GreaterThanOrEqualTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITermRangeQuery.LessThan>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITermRangeQuery.LessThanOrEqualTo>k__BackingField;
    protected bool Conditionless { get; }
    private string OpenSearch.Client.ITermRangeQuery.GreaterThan { get; private set; }
    private string OpenSearch.Client.ITermRangeQuery.GreaterThanOrEqualTo { get; private set; }
    private string OpenSearch.Client.ITermRangeQuery.LessThan { get; private set; }
    private string OpenSearch.Client.ITermRangeQuery.LessThanOrEqualTo { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITermRangeQuery.get_GreaterThan();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermRangeQuery.set_GreaterThan(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITermRangeQuery.get_GreaterThanOrEqualTo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermRangeQuery.set_GreaterThanOrEqualTo(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITermRangeQuery.get_LessThan();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermRangeQuery.set_LessThan(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITermRangeQuery.get_LessThanOrEqualTo();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermRangeQuery.set_LessThanOrEqualTo(string value);
    public TermRangeQueryDescriptor`1<T> GreaterThan(string from);
    public TermRangeQueryDescriptor`1<T> GreaterThanOrEquals(string from);
    public TermRangeQueryDescriptor`1<T> LessThan(string to);
    public TermRangeQueryDescriptor`1<T> LessThanOrEquals(string to);
}
public class OpenSearch.Client.TermsAggregate`1 : MultiBucketAggregate`1<KeyedBucket`1<TKey>> {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <DocCountErrorUpperBound>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SumOtherDocCount>k__BackingField;
    public Nullable`1<long> DocCountErrorUpperBound { get; public set; }
    public Nullable`1<long> SumOtherDocCount { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_DocCountErrorUpperBound();
    [CompilerGeneratedAttribute]
public void set_DocCountErrorUpperBound(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SumOtherDocCount();
    [CompilerGeneratedAttribute]
public void set_SumOtherDocCount(Nullable`1<long> value);
}
public class OpenSearch.Client.TermsAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Nullable`1<TermsAggregationCollectMode> <CollectMode>k__BackingField;
    [CompilerGeneratedAttribute]
private TermsExclude <Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermsAggregationExecutionHint> <ExecutionHint>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private TermsInclude <Include>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TermsOrder> <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ShowTermDocCountError>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    public Nullable`1<TermsAggregationCollectMode> CollectMode { get; public set; }
    public TermsExclude Exclude { get; public set; }
    public Nullable`1<TermsAggregationExecutionHint> ExecutionHint { get; public set; }
    public Field Field { get; public set; }
    public TermsInclude Include { get; public set; }
    public Nullable`1<int> MinimumDocumentCount { get; public set; }
    public object Missing { get; public set; }
    public IList`1<TermsOrder> Order { get; public set; }
    public IScript Script { get; public set; }
    public Nullable`1<int> ShardSize { get; public set; }
    public Nullable`1<bool> ShowTermDocCountError { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public TermsAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TermsAggregationCollectMode> get_CollectMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CollectMode(Nullable`1<TermsAggregationCollectMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual TermsExclude get_Exclude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Exclude(TermsExclude value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TermsAggregationExecutionHint> get_ExecutionHint();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExecutionHint(Nullable`1<TermsAggregationExecutionHint> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual TermsInclude get_Include();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Include(TermsInclude value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumDocumentCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(object value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<TermsOrder> get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(IList`1<TermsOrder> value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ShowTermDocCountError();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShowTermDocCountError(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
[StringEnumAttribute]
public enum OpenSearch.Client.TermsAggregationCollectMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static TermsAggregationCollectMode DepthFirst;
    [EnumMemberAttribute]
public static TermsAggregationCollectMode BreadthFirst;
}
public class OpenSearch.Client.TermsAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<TermsAggregationDescriptor`1<T>, ITermsAggregation, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<TermsAggregationCollectMode> <OpenSearch.Client.ITermsAggregation.CollectMode>k__BackingField;
    [CompilerGeneratedAttribute]
private TermsExclude <OpenSearch.Client.ITermsAggregation.Exclude>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermsAggregationExecutionHint> <OpenSearch.Client.ITermsAggregation.ExecutionHint>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ITermsAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private TermsInclude <OpenSearch.Client.ITermsAggregation.Include>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermsAggregation.MinimumDocumentCount>k__BackingField;
    [CompilerGeneratedAttribute]
private object <OpenSearch.Client.ITermsAggregation.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TermsOrder> <OpenSearch.Client.ITermsAggregation.Order>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.ITermsAggregation.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermsAggregation.ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITermsAggregation.ShowTermDocCountError>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermsAggregation.Size>k__BackingField;
    private Nullable`1<TermsAggregationCollectMode> OpenSearch.Client.ITermsAggregation.CollectMode { get; private set; }
    private TermsExclude OpenSearch.Client.ITermsAggregation.Exclude { get; private set; }
    private Nullable`1<TermsAggregationExecutionHint> OpenSearch.Client.ITermsAggregation.ExecutionHint { get; private set; }
    private Field OpenSearch.Client.ITermsAggregation.Field { get; private set; }
    private TermsInclude OpenSearch.Client.ITermsAggregation.Include { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermsAggregation.MinimumDocumentCount { get; private set; }
    private object OpenSearch.Client.ITermsAggregation.Missing { get; private set; }
    private IList`1<TermsOrder> OpenSearch.Client.ITermsAggregation.Order { get; private set; }
    private IScript OpenSearch.Client.ITermsAggregation.Script { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermsAggregation.ShardSize { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITermsAggregation.ShowTermDocCountError { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermsAggregation.Size { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TermsAggregationCollectMode> OpenSearch.Client.ITermsAggregation.get_CollectMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_CollectMode(Nullable`1<TermsAggregationCollectMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override TermsExclude OpenSearch.Client.ITermsAggregation.get_Exclude();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_Exclude(TermsExclude value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TermsAggregationExecutionHint> OpenSearch.Client.ITermsAggregation.get_ExecutionHint();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_ExecutionHint(Nullable`1<TermsAggregationExecutionHint> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ITermsAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override TermsInclude OpenSearch.Client.ITermsAggregation.get_Include();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_Include(TermsInclude value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermsAggregation.get_MinimumDocumentCount();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_MinimumDocumentCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override object OpenSearch.Client.ITermsAggregation.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_Missing(object value);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<TermsOrder> OpenSearch.Client.ITermsAggregation.get_Order();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_Order(IList`1<TermsOrder> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.ITermsAggregation.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermsAggregation.get_ShardSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITermsAggregation.get_ShowTermDocCountError();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_ShowTermDocCountError(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermsAggregation.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsAggregation.set_Size(Nullable`1<int> value);
    public TermsAggregationDescriptor`1<T> Field(Field field);
    public TermsAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public TermsAggregationDescriptor`1<T> Script(string script);
    public TermsAggregationDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public TermsAggregationDescriptor`1<T> Size(Nullable`1<int> size);
    public TermsAggregationDescriptor`1<T> ShardSize(Nullable`1<int> shardSize);
    public TermsAggregationDescriptor`1<T> MinimumDocumentCount(Nullable`1<int> minimumDocumentCount);
    public TermsAggregationDescriptor`1<T> ExecutionHint(Nullable`1<TermsAggregationExecutionHint> executionHint);
    public TermsAggregationDescriptor`1<T> Order(Func`2<TermsOrderDescriptor`1<T>, IPromise`1<IList`1<TermsOrder>>> selector);
    public TermsAggregationDescriptor`1<T> Include(long partition, long numberOfPartitions);
    public TermsAggregationDescriptor`1<T> Include(string includePattern);
    public TermsAggregationDescriptor`1<T> Include(IEnumerable`1<string> values);
    public TermsAggregationDescriptor`1<T> Exclude(string excludePattern);
    public TermsAggregationDescriptor`1<T> Exclude(IEnumerable`1<string> values);
    public TermsAggregationDescriptor`1<T> CollectMode(Nullable`1<TermsAggregationCollectMode> collectMode);
    public TermsAggregationDescriptor`1<T> Missing(object missing);
    public TermsAggregationDescriptor`1<T> ShowTermDocCountError(Nullable`1<bool> showTermDocCountError);
}
[StringEnumAttribute]
public enum OpenSearch.Client.TermsAggregationExecutionHint : Enum {
    public int value__;
    [EnumMemberAttribute]
public static TermsAggregationExecutionHint Map;
    [EnumMemberAttribute]
public static TermsAggregationExecutionHint GlobalOrdinals;
    [EnumMemberAttribute]
public static TermsAggregationExecutionHint GlobalOrdinalsHash;
    [EnumMemberAttribute]
public static TermsAggregationExecutionHint GlobalOrdinalsLowCardinality;
}
public class OpenSearch.Client.TermsCompositeAggregationSource : CompositeAggregationSourceBase {
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public IScript Script { get; public set; }
    protected string SourceType { get; }
    public TermsCompositeAggregationSource(string name);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    protected virtual string get_SourceType();
}
public class OpenSearch.Client.TermsCompositeAggregationSourceDescriptor`1 : CompositeAggregationSourceDescriptorBase`3<TermsCompositeAggregationSourceDescriptor`1<T>, ITermsCompositeAggregationSource, T> {
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.ITermsCompositeAggregationSource.Script>k__BackingField;
    private IScript OpenSearch.Client.ITermsCompositeAggregationSource.Script { get; private set; }
    public TermsCompositeAggregationSourceDescriptor`1(string name);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.ITermsCompositeAggregationSource.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsCompositeAggregationSource.set_Script(IScript value);
    public TermsCompositeAggregationSourceDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> selector);
}
[JsonFormatterAttribute("OpenSearch.Client.TermsExcludeFormatter")]
public class OpenSearch.Client.TermsExclude : object {
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Values>k__BackingField;
    public string Pattern { get; public set; }
    public IEnumerable`1<string> Values { get; public set; }
    public TermsExclude(string pattern);
    public TermsExclude(IEnumerable`1<string> values);
    [CompilerGeneratedAttribute]
public string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(IEnumerable`1<string> value);
}
internal class OpenSearch.Client.TermsExcludeFormatter : object {
    public sealed virtual TermsExclude Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TermsExclude value, IJsonFormatterResolver formatterResolver);
}
[JsonFormatterAttribute("OpenSearch.Client.TermsIncludeFormatter")]
public class OpenSearch.Client.TermsInclude : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <NumberOfPartitions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Partition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Values>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<long> NumberOfPartitions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<long> Partition { get; public set; }
    [IgnoreDataMemberAttribute]
public string Pattern { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Values { get; public set; }
    public TermsInclude(string pattern);
    public TermsInclude(IEnumerable`1<string> values);
    public TermsInclude(long partition, long numberOfPartitions);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_NumberOfPartitions();
    [CompilerGeneratedAttribute]
public void set_NumberOfPartitions(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Partition();
    [CompilerGeneratedAttribute]
public void set_Partition(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(IEnumerable`1<string> value);
}
internal class OpenSearch.Client.TermsIncludeFormatter : object {
    private static AutomataDictionary AutomataDictionary;
    private static TermsIncludeFormatter();
    public sealed virtual TermsInclude Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TermsInclude value, IJsonFormatterResolver formatterResolver);
}
[JsonFormatterAttribute("OpenSearch.Client.SortOrderFormatter`1<OpenSearch.Client.TermsOrder>")]
public class OpenSearch.Client.TermsOrder : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private SortOrder <Order>k__BackingField;
    public static TermsOrder CountAscending { get; }
    public static TermsOrder CountDescending { get; }
    public string Key { get; public set; }
    public static TermsOrder KeyAscending { get; }
    public static TermsOrder KeyDescending { get; }
    public SortOrder Order { get; public set; }
    public static TermsOrder get_CountAscending();
    public static TermsOrder get_CountDescending();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Key();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Key(string value);
    public static TermsOrder get_KeyAscending();
    public static TermsOrder get_KeyDescending();
    [CompilerGeneratedAttribute]
public sealed virtual SortOrder get_Order();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Order(SortOrder value);
}
public class OpenSearch.Client.TermsOrderDescriptor`1 : DescriptorPromiseBase`2<TermsOrderDescriptor`1<T>, IList`1<TermsOrder>> {
    public TermsOrderDescriptor`1<T> CountAscending();
    public TermsOrderDescriptor`1<T> CountDescending();
    public TermsOrderDescriptor`1<T> KeyAscending();
    public TermsOrderDescriptor`1<T> KeyDescending();
    public TermsOrderDescriptor`1<T> Ascending(string key);
    public TermsOrderDescriptor`1<T> Descending(string key);
}
[DataContractAttribute]
public class OpenSearch.Client.TermsQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <Terms>k__BackingField;
    [CompilerGeneratedAttribute]
private IFieldLookup <TermsLookup>k__BackingField;
    public IEnumerable`1<object> Terms { get; public set; }
    public IFieldLookup TermsLookup { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<object> get_Terms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Terms(IEnumerable`1<object> value);
    [CompilerGeneratedAttribute]
public sealed virtual IFieldLookup get_TermsLookup();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TermsLookup(IFieldLookup value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ITermsQuery q);
}
[DataContractAttribute]
public class OpenSearch.Client.TermsQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<TermsQueryDescriptor`1<T>, ITermsQuery, T> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <OpenSearch.Client.ITermsQuery.Terms>k__BackingField;
    [CompilerGeneratedAttribute]
private IFieldLookup <OpenSearch.Client.ITermsQuery.TermsLookup>k__BackingField;
    protected bool Conditionless { get; }
    private IEnumerable`1<object> OpenSearch.Client.ITermsQuery.Terms { get; private set; }
    private IFieldLookup OpenSearch.Client.ITermsQuery.TermsLookup { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<object> OpenSearch.Client.ITermsQuery.get_Terms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsQuery.set_Terms(IEnumerable`1<object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFieldLookup OpenSearch.Client.ITermsQuery.get_TermsLookup();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsQuery.set_TermsLookup(IFieldLookup value);
    public TermsQueryDescriptor`1<T> TermsLookup(Func`2<FieldLookupDescriptor`1<TOther>, IFieldLookup> selector);
    public TermsQueryDescriptor`1<T> Terms(IEnumerable`1<TValue> terms);
    public TermsQueryDescriptor`1<T> Terms(TValue[] terms);
}
internal class OpenSearch.Client.TermsQueryFormatter : object {
    private static AutomataDictionary FieldLookups;
    private static AutomataDictionary Fields;
    private static SourceWriteFormatter`1<object> SourceWriteFormatter;
    private static TermsQueryFormatter();
    public sealed virtual ITermsQuery Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, ITermsQuery value, IJsonFormatterResolver formatterResolver);
    private void ReadTerms(JsonReader& reader, ITermsQuery termsQuery, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.TermsSetQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private Field <MinimumShouldMatchField>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <MinimumShouldMatchScript>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <Terms>k__BackingField;
    public Field MinimumShouldMatchField { get; public set; }
    public IScript MinimumShouldMatchScript { get; public set; }
    public IEnumerable`1<object> Terms { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_MinimumShouldMatchField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumShouldMatchField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_MinimumShouldMatchScript();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumShouldMatchScript(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<object> get_Terms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Terms(IEnumerable`1<object> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
    internal static bool IsConditionless(ITermsSetQuery q);
}
public class OpenSearch.Client.TermsSetQueryDescriptor`1 : FieldNameQueryDescriptorBase`3<TermsSetQueryDescriptor`1<T>, ITermsSetQuery, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ITermsSetQuery.MinimumShouldMatchField>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.ITermsSetQuery.MinimumShouldMatchScript>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <OpenSearch.Client.ITermsSetQuery.Terms>k__BackingField;
    protected bool Conditionless { get; }
    private Field OpenSearch.Client.ITermsSetQuery.MinimumShouldMatchField { get; private set; }
    private IScript OpenSearch.Client.ITermsSetQuery.MinimumShouldMatchScript { get; private set; }
    private IEnumerable`1<object> OpenSearch.Client.ITermsSetQuery.Terms { get; private set; }
    protected virtual bool get_Conditionless();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ITermsSetQuery.get_MinimumShouldMatchField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsSetQuery.set_MinimumShouldMatchField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.ITermsSetQuery.get_MinimumShouldMatchScript();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsSetQuery.set_MinimumShouldMatchScript(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<object> OpenSearch.Client.ITermsSetQuery.get_Terms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermsSetQuery.set_Terms(IEnumerable`1<object> value);
    public TermsSetQueryDescriptor`1<T> Terms(IEnumerable`1<TValue> terms);
    public TermsSetQueryDescriptor`1<T> Terms(TValue[] terms);
    public TermsSetQueryDescriptor`1<T> MinimumShouldMatchField(Field field);
    public TermsSetQueryDescriptor`1<T> MinimumShouldMatchField(Expression`1<Func`2<T, TValue>> objectPath);
    public TermsSetQueryDescriptor`1<T> MinimumShouldMatchScript(Func`2<ScriptDescriptor, IScript> scriptSelector);
}
public class OpenSearch.Client.TermSuggester : SuggesterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <LowercaseTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxEdits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxInspections>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <MaxTermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <MinDocFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinWordLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SuggestSort> <Sort>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<StringDistance> <StringDistance>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SuggestMode> <SuggestMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public Nullable`1<bool> LowercaseTerms { get; public set; }
    public Nullable`1<int> MaxEdits { get; public set; }
    public Nullable`1<int> MaxInspections { get; public set; }
    public Nullable`1<float> MaxTermFrequency { get; public set; }
    public Nullable`1<float> MinDocFrequency { get; public set; }
    public Nullable`1<int> MinWordLength { get; public set; }
    public Nullable`1<int> PrefixLength { get; public set; }
    public Nullable`1<int> ShardSize { get; public set; }
    public Nullable`1<SuggestSort> Sort { get; public set; }
    public Nullable`1<StringDistance> StringDistance { get; public set; }
    public Nullable`1<SuggestMode> SuggestMode { get; public set; }
    public string Text { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_LowercaseTerms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LowercaseTerms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxEdits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxEdits(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxInspections();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxInspections(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_MaxTermFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxTermFrequency(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<float> get_MinDocFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinDocFrequency(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinWordLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinWordLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PrefixLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SuggestSort> get_Sort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sort(Nullable`1<SuggestSort> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<StringDistance> get_StringDistance();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StringDistance(Nullable`1<StringDistance> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SuggestMode> get_SuggestMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SuggestMode(Nullable`1<SuggestMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Text(string value);
}
public class OpenSearch.Client.TermSuggesterDescriptor`1 : SuggestDescriptorBase`3<TermSuggesterDescriptor`1<T>, ITermSuggester, T> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITermSuggester.LowercaseTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermSuggester.MaxEdits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermSuggester.MaxInspections>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.ITermSuggester.MaxTermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <OpenSearch.Client.ITermSuggester.MinDocFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermSuggester.MinWordLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermSuggester.PrefixLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermSuggester.ShardSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SuggestSort> <OpenSearch.Client.ITermSuggester.Sort>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<StringDistance> <OpenSearch.Client.ITermSuggester.StringDistance>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SuggestMode> <OpenSearch.Client.ITermSuggester.SuggestMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITermSuggester.Text>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.ITermSuggester.LowercaseTerms { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermSuggester.MaxEdits { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermSuggester.MaxInspections { get; private set; }
    private Nullable`1<float> OpenSearch.Client.ITermSuggester.MaxTermFrequency { get; private set; }
    private Nullable`1<float> OpenSearch.Client.ITermSuggester.MinDocFrequency { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermSuggester.MinWordLength { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermSuggester.PrefixLength { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermSuggester.ShardSize { get; private set; }
    private Nullable`1<SuggestSort> OpenSearch.Client.ITermSuggester.Sort { get; private set; }
    private Nullable`1<StringDistance> OpenSearch.Client.ITermSuggester.StringDistance { get; private set; }
    private Nullable`1<SuggestMode> OpenSearch.Client.ITermSuggester.SuggestMode { get; private set; }
    private string OpenSearch.Client.ITermSuggester.Text { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITermSuggester.get_LowercaseTerms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_LowercaseTerms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermSuggester.get_MaxEdits();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_MaxEdits(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermSuggester.get_MaxInspections();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_MaxInspections(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.ITermSuggester.get_MaxTermFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_MaxTermFrequency(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<float> OpenSearch.Client.ITermSuggester.get_MinDocFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_MinDocFrequency(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermSuggester.get_MinWordLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_MinWordLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermSuggester.get_PrefixLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_PrefixLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermSuggester.get_ShardSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_ShardSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SuggestSort> OpenSearch.Client.ITermSuggester.get_Sort();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_Sort(Nullable`1<SuggestSort> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<StringDistance> OpenSearch.Client.ITermSuggester.get_StringDistance();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_StringDistance(Nullable`1<StringDistance> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<SuggestMode> OpenSearch.Client.ITermSuggester.get_SuggestMode();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_SuggestMode(Nullable`1<SuggestMode> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITermSuggester.get_Text();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermSuggester.set_Text(string value);
    public TermSuggesterDescriptor`1<T> Text(string text);
    public TermSuggesterDescriptor`1<T> ShardSize(Nullable`1<int> shardSize);
    public TermSuggesterDescriptor`1<T> SuggestMode(Nullable`1<SuggestMode> mode);
    public TermSuggesterDescriptor`1<T> MinWordLength(Nullable`1<int> length);
    public TermSuggesterDescriptor`1<T> PrefixLength(Nullable`1<int> length);
    public TermSuggesterDescriptor`1<T> MaxEdits(Nullable`1<int> maxEdits);
    public TermSuggesterDescriptor`1<T> MaxInspections(Nullable`1<int> maxInspections);
    public TermSuggesterDescriptor`1<T> MinDocFrequency(Nullable`1<float> frequency);
    public TermSuggesterDescriptor`1<T> MaxTermFrequency(Nullable`1<float> frequency);
    public TermSuggesterDescriptor`1<T> Sort(Nullable`1<SuggestSort> sort);
    public TermSuggesterDescriptor`1<T> LowercaseTerms(Nullable`1<bool> lowercaseTerms);
    public TermSuggesterDescriptor`1<T> StringDistance(Nullable`1<StringDistance> distance);
}
[DataContractAttribute]
public class OpenSearch.Client.TermVector : object {
    [CompilerGeneratedAttribute]
private FieldStatistics <FieldStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, TermVectorTerm> <Terms>k__BackingField;
    [DataMemberAttribute]
public FieldStatistics FieldStatistics { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyDictionary`2<string, TermVectorTerm> Terms { get; internal set; }
    [CompilerGeneratedAttribute]
public FieldStatistics get_FieldStatistics();
    [CompilerGeneratedAttribute]
internal void set_FieldStatistics(FieldStatistics value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, TermVectorTerm> get_Terms();
    [CompilerGeneratedAttribute]
internal void set_Terms(IReadOnlyDictionary`2<string, TermVectorTerm> value);
}
public class OpenSearch.Client.TermVectorFilter : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumDocumentFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumNumberOfTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumTermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumWordLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumDocumentFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumTermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumWordLength>k__BackingField;
    public Nullable`1<int> MaximumDocumentFrequency { get; public set; }
    public Nullable`1<int> MaximumNumberOfTerms { get; public set; }
    public Nullable`1<int> MaximumTermFrequency { get; public set; }
    public Nullable`1<int> MaximumWordLength { get; public set; }
    public Nullable`1<int> MinimumDocumentFrequency { get; public set; }
    public Nullable`1<int> MinimumTermFrequency { get; public set; }
    public Nullable`1<int> MinimumWordLength { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaximumDocumentFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumDocumentFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaximumNumberOfTerms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumNumberOfTerms(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaximumTermFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumTermFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaximumWordLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumWordLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinimumDocumentFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumDocumentFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinimumTermFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumTermFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinimumWordLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumWordLength(Nullable`1<int> value);
}
public class OpenSearch.Client.TermVectorFilterDescriptor : DescriptorBase`2<TermVectorFilterDescriptor, ITermVectorFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermVectorFilter.MaximumDocumentFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermVectorFilter.MaximumNumberOfTerms>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermVectorFilter.MaximumTermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermVectorFilter.MaximumWordLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermVectorFilter.MinimumDocumentFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermVectorFilter.MinimumTermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITermVectorFilter.MinimumWordLength>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.ITermVectorFilter.MaximumDocumentFrequency { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermVectorFilter.MaximumNumberOfTerms { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermVectorFilter.MaximumTermFrequency { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermVectorFilter.MaximumWordLength { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermVectorFilter.MinimumDocumentFrequency { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermVectorFilter.MinimumTermFrequency { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITermVectorFilter.MinimumWordLength { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermVectorFilter.get_MaximumDocumentFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermVectorFilter.set_MaximumDocumentFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermVectorFilter.get_MaximumNumberOfTerms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermVectorFilter.set_MaximumNumberOfTerms(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermVectorFilter.get_MaximumTermFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermVectorFilter.set_MaximumTermFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermVectorFilter.get_MaximumWordLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermVectorFilter.set_MaximumWordLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermVectorFilter.get_MinimumDocumentFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermVectorFilter.set_MinimumDocumentFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermVectorFilter.get_MinimumTermFrequency();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermVectorFilter.set_MinimumTermFrequency(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITermVectorFilter.get_MinimumWordLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermVectorFilter.set_MinimumWordLength(Nullable`1<int> value);
    public TermVectorFilterDescriptor MaximimumNumberOfTerms(Nullable`1<int> maxNumTerms);
    public TermVectorFilterDescriptor MinimumTermFrequency(Nullable`1<int> minTermFreq);
    public TermVectorFilterDescriptor MaximumTermFrequency(Nullable`1<int> maxTermFreq);
    public TermVectorFilterDescriptor MinimumDocumentFrequency(Nullable`1<int> minDocFreq);
    public TermVectorFilterDescriptor MaximumDocumentFrequency(Nullable`1<int> maxDocFreq);
    public TermVectorFilterDescriptor MinimumWordLength(Nullable`1<int> minWordLength);
    public TermVectorFilterDescriptor MaximumWordLength(Nullable`1<int> maxWordLength);
}
[StringEnumAttribute]
public enum OpenSearch.Client.TermVectorOption : Enum {
    public int value__;
    [EnumMemberAttribute]
public static TermVectorOption No;
    [EnumMemberAttribute]
public static TermVectorOption Yes;
    [EnumMemberAttribute]
public static TermVectorOption WithOffsets;
    [EnumMemberAttribute]
public static TermVectorOption WithPositions;
    [EnumMemberAttribute]
public static TermVectorOption WithPositionsOffsets;
    [EnumMemberAttribute]
public static TermVectorOption WithPositionsOffsetsPayloads;
}
public class OpenSearch.Client.TermVectorsDescriptor`1 : RequestDescriptorBase`3<TermVectorsDescriptor`1<TDocument>, TermVectorsRequestParameters, ITermVectorsRequest`1<TDocument>> {
    [CompilerGeneratedAttribute]
private TDocument <OpenSearch.Client.ITermVectorsRequest<TDocument>.Document>k__BackingField;
    [CompilerGeneratedAttribute]
private ITermVectorFilter <OpenSearch.Client.ITermVectorsRequest<TDocument>.Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private IPerFieldAnalyzer <OpenSearch.Client.ITermVectorsRequest<TDocument>.PerFieldAnalyzer>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.ITermVectorsRequest<TDocument>.Index { get; }
    private Id OpenSearch.Client.ITermVectorsRequest<TDocument>.Id { get; }
    private TDocument OpenSearch.Client.ITermVectorsRequest<TDocument>.Document { get; private set; }
    private ITermVectorFilter OpenSearch.Client.ITermVectorsRequest<TDocument>.Filter { get; private set; }
    private HttpMethod OpenSearch.Client.IRequest.HttpMethod { get; }
    private IPerFieldAnalyzer OpenSearch.Client.ITermVectorsRequest<TDocument>.PerFieldAnalyzer { get; private set; }
    public TermVectorsDescriptor`1(IndexName index, Id id);
    public TermVectorsDescriptor`1(IndexName index);
    public TermVectorsDescriptor`1(Id id);
    public TermVectorsDescriptor`1(TDocument documentWithId, IndexName index, Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.ITermVectorsRequest<TDocument>.get_Index();
    private sealed virtual override Id OpenSearch.Client.ITermVectorsRequest<TDocument>.get_Id();
    public TermVectorsDescriptor`1<TDocument> Index(IndexName index);
    public TermVectorsDescriptor`1<TDocument> Index();
    public TermVectorsDescriptor`1<TDocument> Id(Id id);
    public TermVectorsDescriptor`1<TDocument> FieldStatistics(Nullable`1<bool> fieldstatistics);
    public TermVectorsDescriptor`1<TDocument> Fields(Fields fields);
    public TermVectorsDescriptor`1<TDocument> Fields(Expression`1[] fields);
    public TermVectorsDescriptor`1<TDocument> Offsets(Nullable`1<bool> offsets);
    public TermVectorsDescriptor`1<TDocument> Payloads(Nullable`1<bool> payloads);
    public TermVectorsDescriptor`1<TDocument> Positions(Nullable`1<bool> positions);
    public TermVectorsDescriptor`1<TDocument> Preference(string preference);
    public TermVectorsDescriptor`1<TDocument> Realtime(Nullable`1<bool> realtime);
    public TermVectorsDescriptor`1<TDocument> Routing(Routing routing);
    public TermVectorsDescriptor`1<TDocument> TermStatistics(Nullable`1<bool> termstatistics);
    public TermVectorsDescriptor`1<TDocument> Version(Nullable`1<long> version);
    public TermVectorsDescriptor`1<TDocument> VersionType(Nullable`1<VersionType> versiontype);
    [CompilerGeneratedAttribute]
private sealed virtual override TDocument OpenSearch.Client.ITermVectorsRequest<TDocument>.get_Document();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermVectorsRequest<TDocument>.set_Document(TDocument value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITermVectorFilter OpenSearch.Client.ITermVectorsRequest<TDocument>.get_Filter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermVectorsRequest<TDocument>.set_Filter(ITermVectorFilter value);
    private sealed virtual override HttpMethod OpenSearch.Client.IRequest.get_HttpMethod();
    [CompilerGeneratedAttribute]
private sealed virtual override IPerFieldAnalyzer OpenSearch.Client.ITermVectorsRequest<TDocument>.get_PerFieldAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITermVectorsRequest<TDocument>.set_PerFieldAnalyzer(IPerFieldAnalyzer value);
    public TermVectorsDescriptor`1<TDocument> Document(TDocument document);
    public TermVectorsDescriptor`1<TDocument> PerFieldAnalyzer(Func`2<PerFieldAnalyzerDescriptor`1<TDocument>, IPromise`1<IPerFieldAnalyzer>> analyzerSelector);
    public TermVectorsDescriptor`1<TDocument> Filter(Func`2<TermVectorFilterDescriptor, ITermVectorFilter> filterSelector);
}
public class OpenSearch.Client.TermVectorsRequest`1 : PlainRequestBase`1<TermVectorsRequestParameters> {
    [CompilerGeneratedAttribute]
private TDocument <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private ITermVectorFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private IPerFieldAnalyzer <PerFieldAnalyzer>k__BackingField;
    public TDocument Document { get; public set; }
    public ITermVectorFilter Filter { get; public set; }
    public IPerFieldAnalyzer PerFieldAnalyzer { get; public set; }
    private HttpMethod OpenSearch.Client.IRequest.HttpMethod { get; }
    protected ITermVectorsRequest`1<TDocument> Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.ITermVectorsRequest<TDocument>.Index { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.ITermVectorsRequest<TDocument>.Id { get; }
    public Nullable`1<bool> FieldStatistics { get; public set; }
    public Fields Fields { get; public set; }
    public Nullable`1<bool> Offsets { get; public set; }
    public Nullable`1<bool> Payloads { get; public set; }
    public Nullable`1<bool> Positions { get; public set; }
    public string Preference { get; public set; }
    public Nullable`1<bool> Realtime { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<bool> TermStatistics { get; public set; }
    public Nullable`1<long> Version { get; public set; }
    public Nullable`1<VersionType> VersionType { get; public set; }
    public TermVectorsRequest`1(IndexName index, Id id);
    public TermVectorsRequest`1(IndexName index);
    public TermVectorsRequest`1(Id id);
    public TermVectorsRequest`1(TDocument documentWithId, IndexName index, Id id);
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_Document();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Document(TDocument value);
    [CompilerGeneratedAttribute]
public sealed virtual ITermVectorFilter get_Filter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filter(ITermVectorFilter value);
    [CompilerGeneratedAttribute]
public sealed virtual IPerFieldAnalyzer get_PerFieldAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PerFieldAnalyzer(IPerFieldAnalyzer value);
    private sealed virtual override HttpMethod OpenSearch.Client.IRequest.get_HttpMethod();
    protected ITermVectorsRequest`1<TDocument> get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private void DocumentFromPath(TDocument document);
    private sealed virtual override IndexName OpenSearch.Client.ITermVectorsRequest<TDocument>.get_Index();
    private sealed virtual override Id OpenSearch.Client.ITermVectorsRequest<TDocument>.get_Id();
    public Nullable`1<bool> get_FieldStatistics();
    public void set_FieldStatistics(Nullable`1<bool> value);
    public Fields get_Fields();
    public void set_Fields(Fields value);
    public Nullable`1<bool> get_Offsets();
    public void set_Offsets(Nullable`1<bool> value);
    public Nullable`1<bool> get_Payloads();
    public void set_Payloads(Nullable`1<bool> value);
    public Nullable`1<bool> get_Positions();
    public void set_Positions(Nullable`1<bool> value);
    public string get_Preference();
    public void set_Preference(string value);
    public Nullable`1<bool> get_Realtime();
    public void set_Realtime(Nullable`1<bool> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Nullable`1<bool> get_TermStatistics();
    public void set_TermStatistics(Nullable`1<bool> value);
    public Nullable`1<long> get_Version();
    public void set_Version(Nullable`1<long> value);
    public Nullable`1<VersionType> get_VersionType();
    public void set_VersionType(Nullable`1<VersionType> value);
}
[DataContractAttribute]
public class OpenSearch.Client.TermVectorsResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private bool <Found>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<Field, TermVector> <TermVectors>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Took>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    public bool IsValid { get; }
    [DataMemberAttribute]
public bool Found { get; internal set; }
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public string Index { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.ResolvableReadOnlyDictionaryFormatter`2<OpenSearch.Client.Field,OpenSearch.Client.TermVector>")]
public IReadOnlyDictionary`2<Field, TermVector> TermVectors { get; internal set; }
    [DataMemberAttribute]
public long Took { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [DataMemberAttribute]
public long Version { get; internal set; }
    public virtual bool get_IsValid();
    [CompilerGeneratedAttribute]
public bool get_Found();
    [CompilerGeneratedAttribute]
internal void set_Found(bool value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<Field, TermVector> get_TermVectors();
    [CompilerGeneratedAttribute]
internal void set_TermVectors(IReadOnlyDictionary`2<Field, TermVector> value);
    [CompilerGeneratedAttribute]
public long get_Took();
    [CompilerGeneratedAttribute]
internal void set_Took(long value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
    [CompilerGeneratedAttribute]
public long get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(long value);
}
public class OpenSearch.Client.TermVectorsResult : object {
    [CompilerGeneratedAttribute]
private bool <Found>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<Field, TermVector> <TermVectors>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Took>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    [DataMemberAttribute]
public bool Found { get; internal set; }
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public string Index { get; internal set; }
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.ResolvableReadOnlyDictionaryFormatter`2<OpenSearch.Client.Field,OpenSearch.Client.TermVector>")]
public IReadOnlyDictionary`2<Field, TermVector> TermVectors { get; internal set; }
    [DataMemberAttribute]
public long Took { get; internal set; }
    [DataMemberAttribute]
public long Version { get; internal set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Found();
    [CompilerGeneratedAttribute]
internal void set_Found(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyDictionary`2<Field, TermVector> get_TermVectors();
    [CompilerGeneratedAttribute]
internal void set_TermVectors(IReadOnlyDictionary`2<Field, TermVector> value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Took();
    [CompilerGeneratedAttribute]
internal void set_Took(long value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(long value);
}
[DataContractAttribute]
public class OpenSearch.Client.TermVectorTerm : object {
    [CompilerGeneratedAttribute]
private int <DocumentFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TermFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Score>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<Token> <Tokens>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalTermFrequency>k__BackingField;
    [DataMemberAttribute]
public int DocumentFrequency { get; internal set; }
    [DataMemberAttribute]
public int TermFrequency { get; internal set; }
    [DataMemberAttribute]
public double Score { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<Token> Tokens { get; internal set; }
    [DataMemberAttribute]
public int TotalTermFrequency { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_DocumentFrequency();
    [CompilerGeneratedAttribute]
internal void set_DocumentFrequency(int value);
    [CompilerGeneratedAttribute]
public int get_TermFrequency();
    [CompilerGeneratedAttribute]
internal void set_TermFrequency(int value);
    [CompilerGeneratedAttribute]
public double get_Score();
    [CompilerGeneratedAttribute]
internal void set_Score(double value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<Token> get_Tokens();
    [CompilerGeneratedAttribute]
internal void set_Tokens(IReadOnlyCollection`1<Token> value);
    [CompilerGeneratedAttribute]
public int get_TotalTermFrequency();
    [CompilerGeneratedAttribute]
internal void set_TotalTermFrequency(int value);
}
public class OpenSearch.Client.TextAttribute : OpenSearchCorePropertyAttributeBase {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITextProperty.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ITextProperty.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITextProperty.EagerGlobalOrdinals>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITextProperty.Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private IFielddataFrequencyFilter <OpenSearch.Client.ITextProperty.FielddataFrequencyFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITextProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IndexOptions> <OpenSearch.Client.ITextProperty.IndexOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITextProperty.IndexPhrases>k__BackingField;
    [CompilerGeneratedAttribute]
private ITextIndexPrefixes <OpenSearch.Client.ITextProperty.IndexPrefixes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITextProperty.Norms>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITextProperty.PositionIncrementGap>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITextProperty.SearchAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITextProperty.SearchQuoteAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermVectorOption> <OpenSearch.Client.ITextProperty.TermVector>k__BackingField;
    public string Analyzer { get; public set; }
    public double Boost { get; public set; }
    public bool EagerGlobalOrdinals { get; public set; }
    public bool Fielddata { get; public set; }
    public bool Index { get; public set; }
    public IndexOptions IndexOptions { get; public set; }
    public bool IndexPhrases { get; public set; }
    public bool Norms { get; public set; }
    public int PositionIncrementGap { get; public set; }
    public string SearchAnalyzer { get; public set; }
    public string SearchQuoteAnalyzer { get; public set; }
    public TermVectorOption TermVector { get; public set; }
    private string OpenSearch.Client.ITextProperty.Analyzer { get; private set; }
    private Nullable`1<double> OpenSearch.Client.ITextProperty.Boost { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITextProperty.EagerGlobalOrdinals { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITextProperty.Fielddata { get; private set; }
    private IFielddataFrequencyFilter OpenSearch.Client.ITextProperty.FielddataFrequencyFilter { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITextProperty.Index { get; private set; }
    private Nullable`1<IndexOptions> OpenSearch.Client.ITextProperty.IndexOptions { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITextProperty.IndexPhrases { get; private set; }
    private ITextIndexPrefixes OpenSearch.Client.ITextProperty.IndexPrefixes { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITextProperty.Norms { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITextProperty.PositionIncrementGap { get; private set; }
    private string OpenSearch.Client.ITextProperty.SearchAnalyzer { get; private set; }
    private string OpenSearch.Client.ITextProperty.SearchQuoteAnalyzer { get; private set; }
    private ITextProperty Self { get; }
    private Nullable`1<TermVectorOption> OpenSearch.Client.ITextProperty.TermVector { get; private set; }
    protected TextAttribute(FieldType fieldType);
    public string get_Analyzer();
    public void set_Analyzer(string value);
    public double get_Boost();
    public void set_Boost(double value);
    public bool get_EagerGlobalOrdinals();
    public void set_EagerGlobalOrdinals(bool value);
    public bool get_Fielddata();
    public void set_Fielddata(bool value);
    public bool get_Index();
    public void set_Index(bool value);
    public IndexOptions get_IndexOptions();
    public void set_IndexOptions(IndexOptions value);
    public bool get_IndexPhrases();
    public void set_IndexPhrases(bool value);
    public bool get_Norms();
    public void set_Norms(bool value);
    public int get_PositionIncrementGap();
    public void set_PositionIncrementGap(int value);
    public string get_SearchAnalyzer();
    public void set_SearchAnalyzer(string value);
    public string get_SearchQuoteAnalyzer();
    public void set_SearchQuoteAnalyzer(string value);
    public TermVectorOption get_TermVector();
    public void set_TermVector(TermVectorOption value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITextProperty.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ITextProperty.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITextProperty.get_EagerGlobalOrdinals();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_EagerGlobalOrdinals(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITextProperty.get_Fielddata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_Fielddata(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFielddataFrequencyFilter OpenSearch.Client.ITextProperty.get_FielddataFrequencyFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_FielddataFrequencyFilter(IFielddataFrequencyFilter value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITextProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IndexOptions> OpenSearch.Client.ITextProperty.get_IndexOptions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_IndexOptions(Nullable`1<IndexOptions> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITextProperty.get_IndexPhrases();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_IndexPhrases(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITextIndexPrefixes OpenSearch.Client.ITextProperty.get_IndexPrefixes();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_IndexPrefixes(ITextIndexPrefixes value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITextProperty.get_Norms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_Norms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITextProperty.get_PositionIncrementGap();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_PositionIncrementGap(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITextProperty.get_SearchAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_SearchAnalyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITextProperty.get_SearchQuoteAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_SearchQuoteAnalyzer(string value);
    private ITextProperty get_Self();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TermVectorOption> OpenSearch.Client.ITextProperty.get_TermVector();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_TermVector(Nullable`1<TermVectorOption> value);
}
public class OpenSearch.Client.TextEmbeddingProcessor : InferenceProcessorBase {
    protected string Name { get; }
    protected virtual string get_Name();
}
public class OpenSearch.Client.TextEmbeddingProcessorDescriptor`1 : InferenceProcessorDescriptorBase`3<TDocument, TextEmbeddingProcessorDescriptor`1<TDocument>, ITextEmbeddingProcessor> {
    protected string Name { get; }
    protected virtual string get_Name();
}
public class OpenSearch.Client.TextIndexPrefixes : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinCharacters>k__BackingField;
    public Nullable`1<int> MaxCharacters { get; public set; }
    public Nullable`1<int> MinCharacters { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxCharacters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxCharacters(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinCharacters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinCharacters(Nullable`1<int> value);
}
public class OpenSearch.Client.TextIndexPrefixesDescriptor : DescriptorBase`2<TextIndexPrefixesDescriptor, ITextIndexPrefixes> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITextIndexPrefixes.MaxCharacters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITextIndexPrefixes.MinCharacters>k__BackingField;
    private Nullable`1<int> OpenSearch.Client.ITextIndexPrefixes.MaxCharacters { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITextIndexPrefixes.MinCharacters { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITextIndexPrefixes.get_MaxCharacters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextIndexPrefixes.set_MaxCharacters(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITextIndexPrefixes.get_MinCharacters();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextIndexPrefixes.set_MinCharacters(Nullable`1<int> value);
    public TextIndexPrefixesDescriptor MinCharacters(Nullable`1<int> min);
    public TextIndexPrefixesDescriptor MaxCharacters(Nullable`1<int> max);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.TextProperty : CorePropertyBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EagerGlobalOrdinals>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private IFielddataFrequencyFilter <FielddataFrequencyFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IndexOptions> <IndexOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IndexPhrases>k__BackingField;
    [CompilerGeneratedAttribute]
private ITextIndexPrefixes <IndexPrefixes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Norms>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PositionIncrementGap>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchQuoteAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermVectorOption> <TermVector>k__BackingField;
    public string Analyzer { get; public set; }
    public Nullable`1<double> Boost { get; public set; }
    public Nullable`1<bool> EagerGlobalOrdinals { get; public set; }
    public Nullable`1<bool> Fielddata { get; public set; }
    public IFielddataFrequencyFilter FielddataFrequencyFilter { get; public set; }
    public Nullable`1<bool> Index { get; public set; }
    public Nullable`1<IndexOptions> IndexOptions { get; public set; }
    public Nullable`1<bool> IndexPhrases { get; public set; }
    public ITextIndexPrefixes IndexPrefixes { get; public set; }
    public Nullable`1<bool> Norms { get; public set; }
    public Nullable`1<int> PositionIncrementGap { get; public set; }
    public string SearchAnalyzer { get; public set; }
    public string SearchQuoteAnalyzer { get; public set; }
    public Nullable`1<TermVectorOption> TermVector { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Boost();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_EagerGlobalOrdinals();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EagerGlobalOrdinals(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Fielddata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Fielddata(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IFielddataFrequencyFilter get_FielddataFrequencyFilter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FielddataFrequencyFilter(IFielddataFrequencyFilter value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IndexOptions> get_IndexOptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexOptions(Nullable`1<IndexOptions> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IndexPhrases();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexPhrases(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual ITextIndexPrefixes get_IndexPrefixes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexPrefixes(ITextIndexPrefixes value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Norms();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Norms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PositionIncrementGap();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PositionIncrementGap(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SearchAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchAnalyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SearchQuoteAnalyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchQuoteAnalyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TermVectorOption> get_TermVector();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TermVector(Nullable`1<TermVectorOption> value);
}
public class OpenSearch.Client.TextPropertyDescriptor`1 : CorePropertyDescriptorBase`3<TextPropertyDescriptor`1<T>, ITextProperty, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITextProperty.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ITextProperty.Boost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITextProperty.EagerGlobalOrdinals>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITextProperty.Fielddata>k__BackingField;
    [CompilerGeneratedAttribute]
private IFielddataFrequencyFilter <OpenSearch.Client.ITextProperty.FielddataFrequencyFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITextProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IndexOptions> <OpenSearch.Client.ITextProperty.IndexOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITextProperty.IndexPhrases>k__BackingField;
    [CompilerGeneratedAttribute]
private ITextIndexPrefixes <OpenSearch.Client.ITextProperty.IndexPrefixes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITextProperty.Norms>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITextProperty.PositionIncrementGap>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITextProperty.SearchAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITextProperty.SearchQuoteAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TermVectorOption> <OpenSearch.Client.ITextProperty.TermVector>k__BackingField;
    private string OpenSearch.Client.ITextProperty.Analyzer { get; private set; }
    private Nullable`1<double> OpenSearch.Client.ITextProperty.Boost { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITextProperty.EagerGlobalOrdinals { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITextProperty.Fielddata { get; private set; }
    private IFielddataFrequencyFilter OpenSearch.Client.ITextProperty.FielddataFrequencyFilter { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITextProperty.Index { get; private set; }
    private Nullable`1<IndexOptions> OpenSearch.Client.ITextProperty.IndexOptions { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITextProperty.IndexPhrases { get; private set; }
    private ITextIndexPrefixes OpenSearch.Client.ITextProperty.IndexPrefixes { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITextProperty.Norms { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITextProperty.PositionIncrementGap { get; private set; }
    private string OpenSearch.Client.ITextProperty.SearchAnalyzer { get; private set; }
    private string OpenSearch.Client.ITextProperty.SearchQuoteAnalyzer { get; private set; }
    private Nullable`1<TermVectorOption> OpenSearch.Client.ITextProperty.TermVector { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITextProperty.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ITextProperty.get_Boost();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_Boost(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITextProperty.get_EagerGlobalOrdinals();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_EagerGlobalOrdinals(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITextProperty.get_Fielddata();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_Fielddata(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFielddataFrequencyFilter OpenSearch.Client.ITextProperty.get_FielddataFrequencyFilter();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_FielddataFrequencyFilter(IFielddataFrequencyFilter value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITextProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<IndexOptions> OpenSearch.Client.ITextProperty.get_IndexOptions();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_IndexOptions(Nullable`1<IndexOptions> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITextProperty.get_IndexPhrases();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_IndexPhrases(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITextIndexPrefixes OpenSearch.Client.ITextProperty.get_IndexPrefixes();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_IndexPrefixes(ITextIndexPrefixes value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITextProperty.get_Norms();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_Norms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITextProperty.get_PositionIncrementGap();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_PositionIncrementGap(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITextProperty.get_SearchAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_SearchAnalyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITextProperty.get_SearchQuoteAnalyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_SearchQuoteAnalyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TermVectorOption> OpenSearch.Client.ITextProperty.get_TermVector();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITextProperty.set_TermVector(Nullable`1<TermVectorOption> value);
    public TextPropertyDescriptor`1<T> Boost(Nullable`1<double> boost);
    public TextPropertyDescriptor`1<T> EagerGlobalOrdinals(Nullable`1<bool> eagerGlobalOrdinals);
    public TextPropertyDescriptor`1<T> Fielddata(Nullable`1<bool> fielddata);
    public TextPropertyDescriptor`1<T> FielddataFrequencyFilter(Func`2<FielddataFrequencyFilterDescriptor, IFielddataFrequencyFilter> selector);
    public TextPropertyDescriptor`1<T> IndexPrefixes(Func`2<TextIndexPrefixesDescriptor, ITextIndexPrefixes> selector);
    public TextPropertyDescriptor`1<T> Index(Nullable`1<bool> index);
    public TextPropertyDescriptor`1<T> IndexPhrases(Nullable`1<bool> indexPhrases);
    public TextPropertyDescriptor`1<T> IndexOptions(Nullable`1<IndexOptions> indexOptions);
    public TextPropertyDescriptor`1<T> Norms(Nullable`1<bool> enabled);
    public TextPropertyDescriptor`1<T> PositionIncrementGap(Nullable`1<int> positionIncrementGap);
    public TextPropertyDescriptor`1<T> Analyzer(string analyzer);
    public TextPropertyDescriptor`1<T> SearchAnalyzer(string searchAnalyzer);
    public TextPropertyDescriptor`1<T> SearchQuoteAnalyzer(string searchQuoteAnalyzer);
    public TextPropertyDescriptor`1<T> TermVector(Nullable`1<TermVectorOption> termVector);
}
[StringEnumAttribute]
public enum OpenSearch.Client.TextQueryType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static TextQueryType BestFields;
    [EnumMemberAttribute]
public static TextQueryType MostFields;
    [EnumMemberAttribute]
public static TextQueryType CrossFields;
    [EnumMemberAttribute]
public static TextQueryType Phrase;
    [EnumMemberAttribute]
public static TextQueryType PhrasePrefix;
    [EnumMemberAttribute]
public static TextQueryType BoolPrefix;
}
[DataContractAttribute]
public class OpenSearch.Client.ThreadCountStats : object {
    [CompilerGeneratedAttribute]
private long <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Completed>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Largest>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Queue>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Rejected>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Threads>k__BackingField;
    [DataMemberAttribute]
public long Active { get; internal set; }
    [DataMemberAttribute]
public long Completed { get; internal set; }
    [DataMemberAttribute]
public long Largest { get; internal set; }
    [DataMemberAttribute]
public long Queue { get; internal set; }
    [DataMemberAttribute]
public long Rejected { get; internal set; }
    [DataMemberAttribute]
public long Threads { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_Active();
    [CompilerGeneratedAttribute]
internal void set_Active(long value);
    [CompilerGeneratedAttribute]
public long get_Completed();
    [CompilerGeneratedAttribute]
internal void set_Completed(long value);
    [CompilerGeneratedAttribute]
public long get_Largest();
    [CompilerGeneratedAttribute]
internal void set_Largest(long value);
    [CompilerGeneratedAttribute]
public long get_Queue();
    [CompilerGeneratedAttribute]
internal void set_Queue(long value);
    [CompilerGeneratedAttribute]
public long get_Rejected();
    [CompilerGeneratedAttribute]
internal void set_Rejected(long value);
    [CompilerGeneratedAttribute]
public long get_Threads();
    [CompilerGeneratedAttribute]
internal void set_Threads(long value);
}
[JsonFormatterAttribute("OpenSearch.Client.TimeFormatter")]
public class OpenSearch.Client.Time : object {
    private static double MicrosecondsInATick;
    private static double MillisecondsInADay;
    private static double MillisecondsInAMicrosecond;
    private static double MillisecondsInAMillisecond;
    private static double MillisecondsInAMinute;
    private static double MillisecondsInANanosecond;
    private static double MillisecondsInAnHour;
    private static double MillisecondsInASecond;
    private static double NanosecondsInATick;
    private static Regex ExpressionRegex;
    private static double FLOAT_TOLERANCE;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Factor>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeUnit> <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Milliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private static Time <MinusOne>k__BackingField;
    [CompilerGeneratedAttribute]
private static Time <Zero>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StaticTimeValue>k__BackingField;
    public Nullable`1<double> Factor { get; private set; }
    public Nullable`1<TimeUnit> Interval { get; private set; }
    public Nullable`1<double> Milliseconds { get; private set; }
    public static Time MinusOne { get; }
    public static Time Zero { get; }
    private Nullable`1<int> StaticTimeValue { get; }
    private Time(int specialFactor, bool specialValue);
    public Time(TimeSpan timeSpan);
    public Time(double milliseconds);
    public Time(double factor, TimeUnit interval);
    public Time(string timeUnit);
    private static Time();
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Factor();
    [CompilerGeneratedAttribute]
private void set_Factor(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeUnit> get_Interval();
    [CompilerGeneratedAttribute]
private void set_Interval(Nullable`1<TimeUnit> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Milliseconds();
    [CompilerGeneratedAttribute]
private void set_Milliseconds(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public static Time get_MinusOne();
    [CompilerGeneratedAttribute]
public static Time get_Zero();
    [CompilerGeneratedAttribute]
private Nullable`1<int> get_StaticTimeValue();
    public static Time op_Implicit(TimeSpan span);
    public static Time op_Implicit(double milliseconds);
    public static Time op_Implicit(string expression);
    private void ParseExpression(string timeUnit);
    public sealed virtual int CompareTo(Time other);
    private static bool IsIntegerGreaterThanZero(double d);
    public static bool op_LessThan(Time left, Time right);
    public static bool op_LessThanOrEqual(Time left, Time right);
    public static bool op_GreaterThan(Time left, Time right);
    public static bool op_GreaterThanOrEqual(Time left, Time right);
    public static bool op_Equality(Time left, Time right);
    public static bool op_Inequality(Time left, Time right);
    public TimeSpan ToTimeSpan();
    public virtual string ToString();
    private sealed virtual override string OpenSearch.Net.IUrlParameter.GetString(IConnectionConfigurationValues settings);
    public sealed virtual bool Equals(Time other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private void Reduce(double ms);
    private static double GetExactMilliseconds(double factor, TimeUnit interval);
    private static string ExponentFormat(double d);
}
internal class OpenSearch.Client.TimeFormatter : object {
    public sealed virtual Time Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Time value, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.TimeSpanTicksFormatter : object {
    public sealed virtual TimeSpan Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TimeSpan value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.Timestamp : object {
    internal long Value;
    public Timestamp(long value);
    public sealed virtual bool Equals(Timestamp other);
    public sealed virtual string GetString(IConnectionConfigurationValues settings);
    public static Timestamp op_Implicit(DateTimeOffset categoryId);
    public static Timestamp op_Implicit(long categoryId);
    public static long op_Implicit(Timestamp categoryId);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Timestamp left, Timestamp right);
    public static bool op_Inequality(Timestamp left, Timestamp right);
}
public class OpenSearch.Client.TimestampField : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
}
public class OpenSearch.Client.TimestampFieldDescriptor : DescriptorBase`2<TimestampFieldDescriptor, ITimestampField> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITimestampField.Name>k__BackingField;
    private string OpenSearch.Client.ITimestampField.Name { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITimestampField.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITimestampField.set_Name(string value);
    public TimestampFieldDescriptor Name(string name);
}
[StringEnumAttribute]
public enum OpenSearch.Client.TimeUnit : Enum {
    public int value__;
    [EnumMemberAttribute]
public static TimeUnit Nanoseconds;
    [EnumMemberAttribute]
public static TimeUnit Microseconds;
    [EnumMemberAttribute]
public static TimeUnit Millisecond;
    [EnumMemberAttribute]
public static TimeUnit Second;
    [EnumMemberAttribute]
public static TimeUnit Minute;
    [EnumMemberAttribute]
public static TimeUnit Hour;
    [EnumMemberAttribute]
public static TimeUnit Day;
}
[ExtensionAttribute]
public static class OpenSearch.Client.TimeUnitExtensions : object {
    [ExtensionAttribute]
public static string GetStringValue(TimeUnit value);
}
[DataContractAttribute]
public class OpenSearch.Client.Token : object {
    [CompilerGeneratedAttribute]
private int <EndOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Payload>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartOffset>k__BackingField;
    [DataMemberAttribute]
public int EndOffset { get; internal set; }
    [DataMemberAttribute]
public string Payload { get; internal set; }
    [DataMemberAttribute]
public int Position { get; internal set; }
    [DataMemberAttribute]
public int StartOffset { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_EndOffset();
    [CompilerGeneratedAttribute]
internal void set_EndOffset(int value);
    [CompilerGeneratedAttribute]
public string get_Payload();
    [CompilerGeneratedAttribute]
internal void set_Payload(string value);
    [CompilerGeneratedAttribute]
public int get_Position();
    [CompilerGeneratedAttribute]
internal void set_Position(int value);
    [CompilerGeneratedAttribute]
public int get_StartOffset();
    [CompilerGeneratedAttribute]
internal void set_StartOffset(int value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.TokenChar : Enum {
    public int value__;
    [EnumMemberAttribute]
public static TokenChar Letter;
    [EnumMemberAttribute]
public static TokenChar Digit;
    [EnumMemberAttribute]
public static TokenChar Whitespace;
    [EnumMemberAttribute]
public static TokenChar Punctuation;
    [EnumMemberAttribute]
public static TokenChar Symbol;
    [EnumMemberAttribute]
public static TokenChar Custom;
}
public class OpenSearch.Client.TokenCountAttribute : OpenSearchDocValuesPropertyAttributeBase {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITokenCountProperty.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITokenCountProperty.EnablePositionIncrements>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITokenCountProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ITokenCountProperty.NullValue>k__BackingField;
    public string Analyzer { get; public set; }
    public bool EnablePositionIncrements { get; public set; }
    public bool Index { get; public set; }
    public double NullValue { get; public set; }
    private string OpenSearch.Client.ITokenCountProperty.Analyzer { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITokenCountProperty.EnablePositionIncrements { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITokenCountProperty.Index { get; private set; }
    private Nullable`1<double> OpenSearch.Client.ITokenCountProperty.NullValue { get; private set; }
    private ITokenCountProperty Self { get; }
    public string get_Analyzer();
    public void set_Analyzer(string value);
    public bool get_EnablePositionIncrements();
    public void set_EnablePositionIncrements(bool value);
    public bool get_Index();
    public void set_Index(bool value);
    public double get_NullValue();
    public void set_NullValue(double value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITokenCountProperty.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITokenCountProperty.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITokenCountProperty.get_EnablePositionIncrements();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITokenCountProperty.set_EnablePositionIncrements(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITokenCountProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITokenCountProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ITokenCountProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITokenCountProperty.set_NullValue(Nullable`1<double> value);
    private ITokenCountProperty get_Self();
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.TokenCountProperty : DocValuesPropertyBase {
    [CompilerGeneratedAttribute]
private string <Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnablePositionIncrements>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <NullValue>k__BackingField;
    public string Analyzer { get; public set; }
    public Nullable`1<bool> EnablePositionIncrements { get; public set; }
    public Nullable`1<bool> Index { get; public set; }
    public Nullable`1<double> NullValue { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Analyzer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Analyzer(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_EnablePositionIncrements();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnablePositionIncrements(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_NullValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NullValue(Nullable`1<double> value);
}
[DebuggerDisplayAttribute("{DebugDisplay}")]
public class OpenSearch.Client.TokenCountPropertyDescriptor`1 : DocValuesPropertyDescriptorBase`3<TokenCountPropertyDescriptor`1<T>, ITokenCountProperty, T> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITokenCountProperty.Analyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITokenCountProperty.EnablePositionIncrements>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITokenCountProperty.Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.ITokenCountProperty.NullValue>k__BackingField;
    private string OpenSearch.Client.ITokenCountProperty.Analyzer { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITokenCountProperty.EnablePositionIncrements { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITokenCountProperty.Index { get; private set; }
    private Nullable`1<double> OpenSearch.Client.ITokenCountProperty.NullValue { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITokenCountProperty.get_Analyzer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITokenCountProperty.set_Analyzer(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITokenCountProperty.get_EnablePositionIncrements();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITokenCountProperty.set_EnablePositionIncrements(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITokenCountProperty.get_Index();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITokenCountProperty.set_Index(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.ITokenCountProperty.get_NullValue();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITokenCountProperty.set_NullValue(Nullable`1<double> value);
    public TokenCountPropertyDescriptor`1<T> Analyzer(string analyzer);
    public TokenCountPropertyDescriptor`1<T> EnablePositionIncrements(Nullable`1<bool> enablePositionIncrements);
    public TokenCountPropertyDescriptor`1<T> Index(Nullable`1<bool> index);
    public TokenCountPropertyDescriptor`1<T> NullValue(Nullable`1<double> nullValue);
}
[DataContractAttribute]
public class OpenSearch.Client.TokenDetail : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ExplainAnalyzeToken> <Tokens>k__BackingField;
    [DataMemberAttribute]
public string Name { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<ExplainAnalyzeToken> Tokens { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ExplainAnalyzeToken> get_Tokens();
    [CompilerGeneratedAttribute]
internal void set_Tokens(IReadOnlyCollection`1<ExplainAnalyzeToken> value);
}
public abstract class OpenSearch.Client.TokenFilterBase : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [DataMemberAttribute]
public string Type { get; protected set; }
    [DataMemberAttribute]
public string Version { get; public set; }
    protected TokenFilterBase(string type);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
protected void set_Type(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(string value);
}
public abstract class OpenSearch.Client.TokenFilterDescriptorBase`2 : DescriptorBase`2<TTokenFilter, TTokenFilterInterface> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITokenFilter.Version>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.ITokenFilter.Type { get; }
    private string OpenSearch.Client.ITokenFilter.Version { get; private set; }
    protected abstract virtual string get_Type();
    private sealed virtual override string OpenSearch.Client.ITokenFilter.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITokenFilter.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITokenFilter.set_Version(string value);
    public TTokenFilter Version(string version);
}
internal class OpenSearch.Client.TokenFilterFormatter : object {
    private static Byte[] TypeField;
    private static AutomataDictionary TokenFilterTypes;
    private static TokenFilterFormatter();
    public sealed virtual ITokenFilter Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, ITokenFilter value, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, ITokenFilter value, IJsonFormatterResolver formatterResolver);
    private static TTokenFilter Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.TokenFilters : IsADictionaryBase`2<string, ITokenFilter> {
    public TokenFilters(IDictionary`2<string, ITokenFilter> container);
    public TokenFilters(Dictionary`2<string, ITokenFilter> container);
    public sealed virtual void Add(string name, ITokenFilter analyzer);
}
public class OpenSearch.Client.TokenFiltersDescriptor : IsADictionaryDescriptorBase`4<TokenFiltersDescriptor, ITokenFilters, string, ITokenFilter> {
    public TokenFiltersDescriptor UserDefined(string name, ITokenFilter analyzer);
    public TokenFiltersDescriptor DictionaryDecompounder(string name, Func`2<DictionaryDecompounderTokenFilterDescriptor, IDictionaryDecompounderTokenFilter> selector);
    public TokenFiltersDescriptor HyphenationDecompounder(string name, Func`2<HyphenationDecompounderTokenFilterDescriptor, IHyphenationDecompounderTokenFilter> selector);
    public TokenFiltersDescriptor EdgeNGram(string name, Func`2<EdgeNGramTokenFilterDescriptor, IEdgeNGramTokenFilter> selector);
    public TokenFiltersDescriptor Phonetic(string name, Func`2<PhoneticTokenFilterDescriptor, IPhoneticTokenFilter> selector);
    public TokenFiltersDescriptor Shingle(string name, Func`2<ShingleTokenFilterDescriptor, IShingleTokenFilter> selector);
    public TokenFiltersDescriptor Stop(string name, Func`2<StopTokenFilterDescriptor, IStopTokenFilter> selector);
    public TokenFiltersDescriptor Synonym(string name, Func`2<SynonymTokenFilterDescriptor, ISynonymTokenFilter> selector);
    public TokenFiltersDescriptor SynonymGraph(string name, Func`2<SynonymGraphTokenFilterDescriptor, ISynonymGraphTokenFilter> selector);
    public TokenFiltersDescriptor WordDelimiter(string name, Func`2<WordDelimiterTokenFilterDescriptor, IWordDelimiterTokenFilter> selector);
    public TokenFiltersDescriptor WordDelimiterGraph(string name, Func`2<WordDelimiterGraphTokenFilterDescriptor, IWordDelimiterGraphTokenFilter> selector);
    public TokenFiltersDescriptor AsciiFolding(string name, Func`2<AsciiFoldingTokenFilterDescriptor, IAsciiFoldingTokenFilter> selector);
    public TokenFiltersDescriptor CommonGrams(string name, Func`2<CommonGramsTokenFilterDescriptor, ICommonGramsTokenFilter> selector);
    public TokenFiltersDescriptor DelimitedPayload(string name, Func`2<DelimitedPayloadTokenFilterDescriptor, IDelimitedPayloadTokenFilter> selector);
    public TokenFiltersDescriptor Elision(string name, Func`2<ElisionTokenFilterDescriptor, IElisionTokenFilter> selector);
    public TokenFiltersDescriptor Hunspell(string name, Func`2<HunspellTokenFilterDescriptor, IHunspellTokenFilter> selector);
    public TokenFiltersDescriptor KeepTypes(string name, Func`2<KeepTypesTokenFilterDescriptor, IKeepTypesTokenFilter> selector);
    public TokenFiltersDescriptor KeepWords(string name, Func`2<KeepWordsTokenFilterDescriptor, IKeepWordsTokenFilter> selector);
    public TokenFiltersDescriptor KeywordMarker(string name, Func`2<KeywordMarkerTokenFilterDescriptor, IKeywordMarkerTokenFilter> selector);
    public TokenFiltersDescriptor KStem(string name, Func`2<KStemTokenFilterDescriptor, IKStemTokenFilter> selector);
    public TokenFiltersDescriptor Length(string name, Func`2<LengthTokenFilterDescriptor, ILengthTokenFilter> selector);
    public TokenFiltersDescriptor LimitTokenCount(string name, Func`2<LimitTokenCountTokenFilterDescriptor, ILimitTokenCountTokenFilter> selector);
    public TokenFiltersDescriptor Lowercase(string name, Func`2<LowercaseTokenFilterDescriptor, ILowercaseTokenFilter> selector);
    public TokenFiltersDescriptor NGram(string name, Func`2<NGramTokenFilterDescriptor, INGramTokenFilter> selector);
    public TokenFiltersDescriptor PatternCapture(string name, Func`2<PatternCaptureTokenFilterDescriptor, IPatternCaptureTokenFilter> selector);
    public TokenFiltersDescriptor PatternReplace(string name, Func`2<PatternReplaceTokenFilterDescriptor, IPatternReplaceTokenFilter> selector);
    public TokenFiltersDescriptor PorterStem(string name, Func`2<PorterStemTokenFilterDescriptor, IPorterStemTokenFilter> selector);
    public TokenFiltersDescriptor Reverse(string name, Func`2<ReverseTokenFilterDescriptor, IReverseTokenFilter> selector);
    public TokenFiltersDescriptor Snowball(string name, Func`2<SnowballTokenFilterDescriptor, ISnowballTokenFilter> selector);
    public TokenFiltersDescriptor Stemmer(string name, Func`2<StemmerTokenFilterDescriptor, IStemmerTokenFilter> selector);
    public TokenFiltersDescriptor Predicate(string name, Func`2<PredicateTokenFilterDescriptor, IPredicateTokenFilter> selector);
    public TokenFiltersDescriptor Condition(string name, Func`2<ConditionTokenFilterDescriptor, IConditionTokenFilter> selector);
    public TokenFiltersDescriptor StemmerOverride(string name, Func`2<StemmerOverrideTokenFilterDescriptor, IStemmerOverrideTokenFilter> selector);
    public TokenFiltersDescriptor Trim(string name, Func`2<TrimTokenFilterDescriptor, ITrimTokenFilter> selector);
    public TokenFiltersDescriptor Truncate(string name, Func`2<TruncateTokenFilterDescriptor, ITruncateTokenFilter> selector);
    public TokenFiltersDescriptor Unique(string name, Func`2<UniqueTokenFilterDescriptor, IUniqueTokenFilter> selector);
    public TokenFiltersDescriptor Uppercase(string name, Func`2<UppercaseTokenFilterDescriptor, IUppercaseTokenFilter> selector);
    public TokenFiltersDescriptor Fingerprint(string name, Func`2<FingerprintTokenFilterDescriptor, IFingerprintTokenFilter> selector);
    public TokenFiltersDescriptor KuromojiStemmer(string name, Func`2<KuromojiStemmerTokenFilterDescriptor, IKuromojiStemmerTokenFilter> selector);
    public TokenFiltersDescriptor KuromojiReadingForm(string name, Func`2<KuromojiReadingFormTokenFilterDescriptor, IKuromojiReadingFormTokenFilter> selector);
    public TokenFiltersDescriptor KuromojiPartOfSpeech(string name, Func`2<KuromojiPartOfSpeechTokenFilterDescriptor, IKuromojiPartOfSpeechTokenFilter> selector);
    public TokenFiltersDescriptor IcuCollation(string name, Func`2<IcuCollationTokenFilterDescriptor, IIcuCollationTokenFilter> selector);
    public TokenFiltersDescriptor IcuFolding(string name, Func`2<IcuFoldingTokenFilterDescriptor, IIcuFoldingTokenFilter> selector);
    public TokenFiltersDescriptor IcuNormalization(string name, Func`2<IcuNormalizationTokenFilterDescriptor, IIcuNormalizationTokenFilter> selector);
    public TokenFiltersDescriptor IcuTransform(string name, Func`2<IcuTransformTokenFilterDescriptor, IIcuTransformTokenFilter> selector);
    public TokenFiltersDescriptor NoriPartOfSpeech(string name, Func`2<NoriPartOfSpeechTokenFilterDescriptor, INoriPartOfSpeechTokenFilter> selector);
    public TokenFiltersDescriptor Multiplexer(string name, Func`2<MultiplexerTokenFilterDescriptor, IMultiplexerTokenFilter> selector);
    public TokenFiltersDescriptor RemoveDuplicates(string name, Func`2<RemoveDuplicatesTokenFilterDescriptor, IRemoveDuplicatesTokenFilter> selector);
}
public abstract class OpenSearch.Client.TokenizerBase : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    public string Type { get; protected set; }
    public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
protected void set_Type(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(string value);
}
public abstract class OpenSearch.Client.TokenizerDescriptorBase`2 : DescriptorBase`2<TTokenizer, TTokenizerInterface> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITokenizer.Version>k__BackingField;
    protected string Type { get; }
    private string OpenSearch.Client.ITokenizer.Type { get; }
    private string OpenSearch.Client.ITokenizer.Version { get; private set; }
    protected abstract virtual string get_Type();
    private sealed virtual override string OpenSearch.Client.ITokenizer.get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITokenizer.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITokenizer.set_Version(string value);
    public TTokenizer Version(string version);
}
internal class OpenSearch.Client.TokenizerFormatter : object {
    private static Byte[] TypeField;
    private static AutomataDictionary TokenizerTypes;
    private static TokenizerFormatter();
    public sealed virtual ITokenizer Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, ITokenizer value, IJsonFormatterResolver formatterResolver);
    private static TTokenizer Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    private static void Serialize(JsonWriter& writer, ITokenizer value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.Tokenizers : IsADictionaryBase`2<string, ITokenizer> {
    public Tokenizers(IDictionary`2<string, ITokenizer> container);
    public Tokenizers(Dictionary`2<string, ITokenizer> container);
    public sealed virtual void Add(string name, ITokenizer analyzer);
}
public class OpenSearch.Client.TokenizersDescriptor : IsADictionaryDescriptorBase`4<TokenizersDescriptor, ITokenizers, string, ITokenizer> {
    public TokenizersDescriptor UserDefined(string name, ITokenizer analyzer);
    public TokenizersDescriptor EdgeNGram(string name, Func`2<EdgeNGramTokenizerDescriptor, IEdgeNGramTokenizer> selector);
    public TokenizersDescriptor NGram(string name, Func`2<NGramTokenizerDescriptor, INGramTokenizer> selector);
    public TokenizersDescriptor Keyword(string name, Func`2<KeywordTokenizerDescriptor, IKeywordTokenizer> selector);
    public TokenizersDescriptor Letter(string name, Func`2<LetterTokenizerDescriptor, ILetterTokenizer> selector);
    public TokenizersDescriptor Lowercase(string name, Func`2<LowercaseTokenizerDescriptor, ILowercaseTokenizer> selector);
    public TokenizersDescriptor PathHierarchy(string name, Func`2<PathHierarchyTokenizerDescriptor, IPathHierarchyTokenizer> selector);
    public TokenizersDescriptor Pattern(string name, Func`2<PatternTokenizerDescriptor, IPatternTokenizer> selector);
    public TokenizersDescriptor Standard(string name, Func`2<StandardTokenizerDescriptor, IStandardTokenizer> selector);
    public TokenizersDescriptor UaxEmailUrl(string name, Func`2<UaxEmailUrlTokenizerDescriptor, IUaxEmailUrlTokenizer> selector);
    public TokenizersDescriptor Whitespace(string name, Func`2<WhitespaceTokenizerDescriptor, IWhitespaceTokenizer> selector);
    public TokenizersDescriptor Kuromoji(string name, Func`2<KuromojiTokenizerDescriptor, IKuromojiTokenizer> selector);
    public TokenizersDescriptor Icu(string name, Func`2<IcuTokenizerDescriptor, IIcuTokenizer> selector);
    public TokenizersDescriptor Nori(string name, Func`2<NoriTokenizerDescriptor, INoriTokenizer> selector);
    public TokenizersDescriptor CharGroup(string name, Func`2<CharGroupTokenizerDescriptor, ICharGroupTokenizer> selector);
}
internal enum OpenSearch.Client.TokenType : Enum {
    public byte value__;
    public static TokenType None;
    public static TokenType Word;
    public static TokenType LParen;
    public static TokenType RParen;
    public static TokenType Comma;
}
public class OpenSearch.Client.TopHitsAggregate : MetricAggregateBase {
    private IJsonFormatterResolver _formatterResolver;
    private IList`1<LazyDocument> _hits;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MaxScore>k__BackingField;
    [CompilerGeneratedAttribute]
private TotalHits <Total>k__BackingField;
    public Nullable`1<double> MaxScore { get; public set; }
    public TotalHits Total { get; public set; }
    internal TopHitsAggregate(IList`1<LazyDocument> hits, IJsonFormatterResolver formatterResolver);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_MaxScore();
    [CompilerGeneratedAttribute]
public void set_MaxScore(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public TotalHits get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(TotalHits value);
    private IEnumerable`1<IHit`1<TDocument>> ConvertHits();
    public IReadOnlyCollection`1<IHit`1<TDocument>> Hits();
    public IReadOnlyCollection`1<TDocument> Documents();
}
public class OpenSearch.Client.TopHitsAggregation : MetricAggregationBase {
    [CompilerGeneratedAttribute]
private Fields <DocValueFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Explain>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <From>k__BackingField;
    [CompilerGeneratedAttribute]
private IHighlight <Highlight>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptFields <ScriptFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISort> <Sort>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <StoredFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TrackScores>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Version>k__BackingField;
    public Fields DocValueFields { get; public set; }
    public Nullable`1<bool> Explain { get; public set; }
    public Nullable`1<int> From { get; public set; }
    public IHighlight Highlight { get; public set; }
    public IScriptFields ScriptFields { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public IList`1<ISort> Sort { get; public set; }
    public Union`2<bool, ISourceFilter> Source { get; public set; }
    public Fields StoredFields { get; public set; }
    public Nullable`1<bool> TrackScores { get; public set; }
    public Nullable`1<bool> Version { get; public set; }
    public TopHitsAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_DocValueFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DocValueFields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Explain();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Explain(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_From();
    [CompilerGeneratedAttribute]
public sealed virtual void set_From(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IHighlight get_Highlight();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Highlight(IHighlight value);
    [CompilerGeneratedAttribute]
public sealed virtual IScriptFields get_ScriptFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScriptFields(IScriptFields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Size();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<ISort> get_Sort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sort(IList`1<ISort> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<bool, ISourceFilter> get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(Union`2<bool, ISourceFilter> value);
    [CompilerGeneratedAttribute]
public sealed virtual Fields get_StoredFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StoredFields(Fields value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TrackScores();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrackScores(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(Nullable`1<bool> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.TopHitsAggregationDescriptor`1 : MetricAggregationDescriptorBase`3<TopHitsAggregationDescriptor`1<T>, ITopHitsAggregation, T> {
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ITopHitsAggregation.DocValueFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITopHitsAggregation.Explain>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITopHitsAggregation.From>k__BackingField;
    [CompilerGeneratedAttribute]
private IHighlight <OpenSearch.Client.ITopHitsAggregation.Highlight>k__BackingField;
    [CompilerGeneratedAttribute]
private IScriptFields <OpenSearch.Client.ITopHitsAggregation.ScriptFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITopHitsAggregation.Size>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISort> <OpenSearch.Client.ITopHitsAggregation.Sort>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <OpenSearch.Client.ITopHitsAggregation.Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Fields <OpenSearch.Client.ITopHitsAggregation.StoredFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITopHitsAggregation.TrackScores>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITopHitsAggregation.Version>k__BackingField;
    private Fields OpenSearch.Client.ITopHitsAggregation.DocValueFields { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITopHitsAggregation.Explain { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITopHitsAggregation.From { get; private set; }
    private IHighlight OpenSearch.Client.ITopHitsAggregation.Highlight { get; private set; }
    private IScriptFields OpenSearch.Client.ITopHitsAggregation.ScriptFields { get; private set; }
    private Nullable`1<int> OpenSearch.Client.ITopHitsAggregation.Size { get; private set; }
    private IList`1<ISort> OpenSearch.Client.ITopHitsAggregation.Sort { get; private set; }
    private Union`2<bool, ISourceFilter> OpenSearch.Client.ITopHitsAggregation.Source { get; private set; }
    private Fields OpenSearch.Client.ITopHitsAggregation.StoredFields { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITopHitsAggregation.TrackScores { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITopHitsAggregation.Version { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ITopHitsAggregation.get_DocValueFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITopHitsAggregation.set_DocValueFields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITopHitsAggregation.get_Explain();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITopHitsAggregation.set_Explain(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITopHitsAggregation.get_From();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITopHitsAggregation.set_From(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IHighlight OpenSearch.Client.ITopHitsAggregation.get_Highlight();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITopHitsAggregation.set_Highlight(IHighlight value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScriptFields OpenSearch.Client.ITopHitsAggregation.get_ScriptFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITopHitsAggregation.set_ScriptFields(IScriptFields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITopHitsAggregation.get_Size();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITopHitsAggregation.set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IList`1<ISort> OpenSearch.Client.ITopHitsAggregation.get_Sort();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITopHitsAggregation.set_Sort(IList`1<ISort> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<bool, ISourceFilter> OpenSearch.Client.ITopHitsAggregation.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITopHitsAggregation.set_Source(Union`2<bool, ISourceFilter> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Fields OpenSearch.Client.ITopHitsAggregation.get_StoredFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITopHitsAggregation.set_StoredFields(Fields value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITopHitsAggregation.get_TrackScores();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITopHitsAggregation.set_TrackScores(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITopHitsAggregation.get_Version();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITopHitsAggregation.set_Version(Nullable`1<bool> value);
    public TopHitsAggregationDescriptor`1<T> From(Nullable`1<int> from);
    public TopHitsAggregationDescriptor`1<T> Size(Nullable`1<int> size);
    public TopHitsAggregationDescriptor`1<T> Sort(Func`2<SortDescriptor`1<T>, IPromise`1<IList`1<ISort>>> sortSelector);
    public TopHitsAggregationDescriptor`1<T> Source(Nullable`1<bool> enabled);
    public TopHitsAggregationDescriptor`1<T> Source(Func`2<SourceFilterDescriptor`1<T>, ISourceFilter> selector);
    public TopHitsAggregationDescriptor`1<T> Highlight(Func`2<HighlightDescriptor`1<T>, IHighlight> highlightSelector);
    public TopHitsAggregationDescriptor`1<T> Explain(Nullable`1<bool> explain);
    public TopHitsAggregationDescriptor`1<T> ScriptFields(Func`2<ScriptFieldsDescriptor, IPromise`1<IScriptFields>> scriptFieldsSelector);
    public TopHitsAggregationDescriptor`1<T> StoredFields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public TopHitsAggregationDescriptor`1<T> Version(Nullable`1<bool> version);
    public TopHitsAggregationDescriptor`1<T> TrackScores(Nullable`1<bool> trackScores);
    public TopHitsAggregationDescriptor`1<T> DocValueFields(Func`2<FieldsDescriptor`1<T>, IPromise`1<Fields>> fields);
    public TopHitsAggregationDescriptor`1<T> DocValueFields(Fields fields);
}
internal class OpenSearch.Client.ToStringExpressionVisitor : ExpressionVisitor {
    private Stack`1<string> _stack;
    [CompilerGeneratedAttribute]
private bool <Cachable>k__BackingField;
    public bool Cachable { get; private set; }
    [CompilerGeneratedAttribute]
public bool get_Cachable();
    [CompilerGeneratedAttribute]
private void set_Cachable(bool value);
    public string Resolve(Expression expression, bool toLastToken);
    public string Resolve(MemberInfo info);
    protected virtual Expression VisitMember(MemberExpression expression);
    protected virtual Expression VisitMethodCall(MethodCallExpression methodCall);
    private void VisitConstantOrVariable(MethodCallExpression methodCall, Stack`1<string> stack);
    private static bool IsLinqOperator(MethodInfo methodInfo);
}
[JsonFormatterAttribute("OpenSearch.Client.TotalHitsFormatter")]
public class OpenSearch.Client.TotalHits : object {
    [CompilerGeneratedAttribute]
private Nullable`1<TotalHitsRelation> <Relation>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Value>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<TotalHitsRelation> Relation { get; internal set; }
    [DataMemberAttribute]
public long Value { get; internal set; }
    [CompilerGeneratedAttribute]
public Nullable`1<TotalHitsRelation> get_Relation();
    [CompilerGeneratedAttribute]
internal void set_Relation(Nullable`1<TotalHitsRelation> value);
    [CompilerGeneratedAttribute]
public long get_Value();
    [CompilerGeneratedAttribute]
internal void set_Value(long value);
}
internal class OpenSearch.Client.TotalHitsFormatter : object {
    private static Byte[] ValueField;
    private static Byte[] RelationField;
    private static EnumFormatter`1<TotalHitsRelation> RelationFormatter;
    private static TotalHitsFormatter();
    public sealed virtual TotalHits Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TotalHits value, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.TotalHitsRelation : Enum {
    public int value__;
    [EnumMemberAttribute]
public static TotalHitsRelation EqualTo;
    [EnumMemberAttribute]
public static TotalHitsRelation GreaterThanOrEqualTo;
}
[DataContractAttribute]
public class OpenSearch.Client.TotalIndexingLoad : IndexingLoad {
    [CompilerGeneratedAttribute]
private int <CoordinatingRejections>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PrimaryRejections>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ReplicaRejections>k__BackingField;
    [DataMemberAttribute]
public int CoordinatingRejections { get; internal set; }
    [DataMemberAttribute]
public int PrimaryRejections { get; internal set; }
    [DataMemberAttribute]
public int ReplicaRejections { get; internal set; }
    [CompilerGeneratedAttribute]
public int get_CoordinatingRejections();
    [CompilerGeneratedAttribute]
internal void set_CoordinatingRejections(int value);
    [CompilerGeneratedAttribute]
public int get_PrimaryRejections();
    [CompilerGeneratedAttribute]
internal void set_PrimaryRejections(int value);
    [CompilerGeneratedAttribute]
public int get_ReplicaRejections();
    [CompilerGeneratedAttribute]
internal void set_ReplicaRejections(int value);
}
[JsonFormatterAttribute("OpenSearch.Client.TrackTotalHitsFormatter")]
public class OpenSearch.Client.TrackTotalHits : Union`2<bool, long> {
    public TrackTotalHits(bool item);
    public TrackTotalHits(long item);
    public static TrackTotalHits op_Implicit(bool trackTotalHits);
    public static TrackTotalHits op_Implicit(Nullable`1<bool> trackTotalHits);
    public static TrackTotalHits op_Implicit(long trackTotalHitsUpTo);
    public static TrackTotalHits op_Implicit(Nullable`1<long> trackTotalHitsUpTo);
    public virtual string ToString();
}
internal class OpenSearch.Client.TrackTotalHitsFormatter : object {
    private static UnionFormatter`2<bool, long> UnionFormatter;
    private static TrackTotalHitsFormatter();
    public sealed virtual void Serialize(JsonWriter& writer, TrackTotalHits value, IJsonFormatterResolver formatterResolver);
    public sealed virtual TrackTotalHits Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
[StringEnumAttribute]
public enum OpenSearch.Client.TranslogDurability : Enum {
    public int value__;
    [EnumMemberAttribute]
public static TranslogDurability Request;
    [EnumMemberAttribute]
public static TranslogDurability Async;
}
public class OpenSearch.Client.TranslogFlushSettings : object {
    [CompilerGeneratedAttribute]
private Time <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <ThresholdPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ThresholdSize>k__BackingField;
    public Time Interval { get; public set; }
    public Time ThresholdPeriod { get; public set; }
    public string ThresholdSize { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Time get_Interval();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Interval(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_ThresholdPeriod();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdPeriod(Time value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ThresholdSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThresholdSize(string value);
}
public class OpenSearch.Client.TranslogFlushSettingsDescriptor : DescriptorBase`2<TranslogFlushSettingsDescriptor, ITranslogFlushSettings> {
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ITranslogFlushSettings.Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ITranslogFlushSettings.ThresholdPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.ITranslogFlushSettings.ThresholdSize>k__BackingField;
    private Time OpenSearch.Client.ITranslogFlushSettings.Interval { get; private set; }
    private Time OpenSearch.Client.ITranslogFlushSettings.ThresholdPeriod { get; private set; }
    private string OpenSearch.Client.ITranslogFlushSettings.ThresholdSize { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ITranslogFlushSettings.get_Interval();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITranslogFlushSettings.set_Interval(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ITranslogFlushSettings.get_ThresholdPeriod();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITranslogFlushSettings.set_ThresholdPeriod(Time value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.ITranslogFlushSettings.get_ThresholdSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITranslogFlushSettings.set_ThresholdSize(string value);
    public TranslogFlushSettingsDescriptor ThresholdSize(string size);
    public TranslogFlushSettingsDescriptor ThresholdPeriod(Time time);
    public TranslogFlushSettingsDescriptor Interval(Time time);
}
public class OpenSearch.Client.TranslogSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<TranslogDurability> <Durability>k__BackingField;
    [CompilerGeneratedAttribute]
private ITranslogFlushSettings <Flush>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <SyncInterval>k__BackingField;
    public Nullable`1<TranslogDurability> Durability { get; public set; }
    public ITranslogFlushSettings Flush { get; public set; }
    public Time SyncInterval { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TranslogDurability> get_Durability();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Durability(Nullable`1<TranslogDurability> value);
    [CompilerGeneratedAttribute]
public sealed virtual ITranslogFlushSettings get_Flush();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Flush(ITranslogFlushSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual Time get_SyncInterval();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SyncInterval(Time value);
}
public class OpenSearch.Client.TranslogSettingsDescriptor : DescriptorBase`2<TranslogSettingsDescriptor, ITranslogSettings> {
    [CompilerGeneratedAttribute]
private Nullable`1<TranslogDurability> <OpenSearch.Client.ITranslogSettings.Durability>k__BackingField;
    [CompilerGeneratedAttribute]
private ITranslogFlushSettings <OpenSearch.Client.ITranslogSettings.Flush>k__BackingField;
    [CompilerGeneratedAttribute]
private Time <OpenSearch.Client.ITranslogSettings.SyncInterval>k__BackingField;
    private Nullable`1<TranslogDurability> OpenSearch.Client.ITranslogSettings.Durability { get; private set; }
    private ITranslogFlushSettings OpenSearch.Client.ITranslogSettings.Flush { get; private set; }
    private Time OpenSearch.Client.ITranslogSettings.SyncInterval { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TranslogDurability> OpenSearch.Client.ITranslogSettings.get_Durability();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITranslogSettings.set_Durability(Nullable`1<TranslogDurability> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ITranslogFlushSettings OpenSearch.Client.ITranslogSettings.get_Flush();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITranslogSettings.set_Flush(ITranslogFlushSettings value);
    [CompilerGeneratedAttribute]
private sealed virtual override Time OpenSearch.Client.ITranslogSettings.get_SyncInterval();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITranslogSettings.set_SyncInterval(Time value);
    public TranslogSettingsDescriptor Flush(Func`2<TranslogFlushSettingsDescriptor, ITranslogFlushSettings> selector);
    public TranslogSettingsDescriptor Durability(Nullable`1<TranslogDurability> durability);
    public TranslogSettingsDescriptor SyncInterval(Time time);
}
[DataContractAttribute]
public class OpenSearch.Client.TranslogStats : object {
    [CompilerGeneratedAttribute]
private long <EarliestLastModifiedAge>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Operations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UncommittedOperations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UncommittedSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <UncommittedSizeInBytes>k__BackingField;
    [DataMemberAttribute]
public long EarliestLastModifiedAge { get; public set; }
    [DataMemberAttribute]
public long Operations { get; public set; }
    [DataMemberAttribute]
public string Size { get; public set; }
    [DataMemberAttribute]
public long SizeInBytes { get; public set; }
    [DataMemberAttribute]
public int UncommittedOperations { get; public set; }
    [DataMemberAttribute]
public string UncommittedSize { get; public set; }
    [DataMemberAttribute]
public long UncommittedSizeInBytes { get; public set; }
    [CompilerGeneratedAttribute]
public long get_EarliestLastModifiedAge();
    [CompilerGeneratedAttribute]
public void set_EarliestLastModifiedAge(long value);
    [CompilerGeneratedAttribute]
public long get_Operations();
    [CompilerGeneratedAttribute]
public void set_Operations(long value);
    [CompilerGeneratedAttribute]
public string get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(string value);
    [CompilerGeneratedAttribute]
public long get_SizeInBytes();
    [CompilerGeneratedAttribute]
public void set_SizeInBytes(long value);
    [CompilerGeneratedAttribute]
public int get_UncommittedOperations();
    [CompilerGeneratedAttribute]
public void set_UncommittedOperations(int value);
    [CompilerGeneratedAttribute]
public string get_UncommittedSize();
    [CompilerGeneratedAttribute]
public void set_UncommittedSize(string value);
    [CompilerGeneratedAttribute]
public long get_UncommittedSizeInBytes();
    [CompilerGeneratedAttribute]
public void set_UncommittedSizeInBytes(long value);
}
[DataContractAttribute]
public class OpenSearch.Client.TransportStats : object {
    [CompilerGeneratedAttribute]
private long <RxCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RxSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RxSizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ServerOpen>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TxCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TxSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TxSizeInBytes>k__BackingField;
    [DataMemberAttribute]
public long RxCount { get; internal set; }
    [DataMemberAttribute]
public string RxSize { get; internal set; }
    [DataMemberAttribute]
public long RxSizeInBytes { get; internal set; }
    [DataMemberAttribute]
public int ServerOpen { get; internal set; }
    [DataMemberAttribute]
public long TxCount { get; internal set; }
    [DataMemberAttribute]
public string TxSize { get; internal set; }
    [DataMemberAttribute]
public long TxSizeInBytes { get; internal set; }
    [CompilerGeneratedAttribute]
public long get_RxCount();
    [CompilerGeneratedAttribute]
internal void set_RxCount(long value);
    [CompilerGeneratedAttribute]
public string get_RxSize();
    [CompilerGeneratedAttribute]
internal void set_RxSize(string value);
    [CompilerGeneratedAttribute]
public long get_RxSizeInBytes();
    [CompilerGeneratedAttribute]
internal void set_RxSizeInBytes(long value);
    [CompilerGeneratedAttribute]
public int get_ServerOpen();
    [CompilerGeneratedAttribute]
internal void set_ServerOpen(int value);
    [CompilerGeneratedAttribute]
public long get_TxCount();
    [CompilerGeneratedAttribute]
internal void set_TxCount(long value);
    [CompilerGeneratedAttribute]
public string get_TxSize();
    [CompilerGeneratedAttribute]
internal void set_TxSize(string value);
    [CompilerGeneratedAttribute]
public long get_TxSizeInBytes();
    [CompilerGeneratedAttribute]
internal void set_TxSizeInBytes(long value);
}
public class OpenSearch.Client.TrimProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public Field TargetField { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.TrimProcessorDescriptor`1 : ProcessorDescriptorBase`2<TrimProcessorDescriptor`1<T>, ITrimProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ITrimProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITrimProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.ITrimProcessor.TargetField>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.ITrimProcessor.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITrimProcessor.IgnoreMissing { get; private set; }
    private Field OpenSearch.Client.ITrimProcessor.TargetField { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ITrimProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITrimProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITrimProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITrimProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.ITrimProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITrimProcessor.set_TargetField(Field value);
    public TrimProcessorDescriptor`1<T> Field(Field field);
    public TrimProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public TrimProcessorDescriptor`1<T> TargetField(Field field);
    public TrimProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, object>> objectPath);
    public TrimProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
}
public class OpenSearch.Client.TrimTokenFilter : TokenFilterBase {
}
public class OpenSearch.Client.TrimTokenFilterDescriptor : TokenFilterDescriptorBase`2<TrimTokenFilterDescriptor, ITrimTokenFilter> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public class OpenSearch.Client.TruncateTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Length>k__BackingField;
    public Nullable`1<int> Length { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Length();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Length(Nullable`1<int> value);
}
public class OpenSearch.Client.TruncateTokenFilterDescriptor : TokenFilterDescriptorBase`2<TruncateTokenFilterDescriptor, ITruncateTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.ITruncateTokenFilter.Length>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.ITruncateTokenFilter.Length { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.ITruncateTokenFilter.get_Length();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITruncateTokenFilter.set_Length(Nullable`1<int> value);
    public TruncateTokenFilterDescriptor Length(Nullable`1<int> length);
}
public class OpenSearch.Client.TypeExistsDescriptor : RequestDescriptorBase`3<TypeExistsDescriptor, TypeExistsRequestParameters, ITypeExistsRequest> {
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.ITypeExistsRequest.Index { get; }
    private Names OpenSearch.Client.ITypeExistsRequest.Type { get; }
    public TypeExistsDescriptor(Indices index, Names type);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ITypeExistsRequest.get_Index();
    private sealed virtual override Names OpenSearch.Client.ITypeExistsRequest.get_Type();
    public TypeExistsDescriptor Index(Indices index);
    public TypeExistsDescriptor Index();
    public TypeExistsDescriptor AllIndices();
    public TypeExistsDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public TypeExistsDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public TypeExistsDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public TypeExistsDescriptor Local(Nullable`1<bool> local);
}
public class OpenSearch.Client.TypeExistsRequest : PlainRequestBase`1<TypeExistsRequestParameters> {
    protected ITypeExistsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.ITypeExistsRequest.Index { get; }
    [IgnoreDataMemberAttribute]
private Names OpenSearch.Client.ITypeExistsRequest.Type { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> Local { get; public set; }
    public TypeExistsRequest(Indices index, Names type);
    protected ITypeExistsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.ITypeExistsRequest.get_Index();
    private sealed virtual override Names OpenSearch.Client.ITypeExistsRequest.get_Type();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_Local();
    public void set_Local(Nullable`1<bool> value);
}
[ExtensionAttribute]
internal static class OpenSearch.Client.TypeExtensions : object {
    internal static MethodInfo GetActivatorMethodInfo;
    private static ConcurrentDictionary`2<string, ObjectActivator`1<object>> CachedActivators;
    private static ConcurrentDictionary`2<string, Type> CachedGenericClosedTypes;
    private static ConcurrentDictionary`2<Type, List`1<PropertyInfo>> CachedTypePropertyInfos;
    private static Assembly OscAssembly;
    private static TypeExtensions();
    [ExtensionAttribute]
internal static object CreateGenericInstance(Type t, Type closeOver, Object[] args);
    [ExtensionAttribute]
internal static object CreateGenericInstance(Type t, Type[] closeOver, Object[] args);
    [ExtensionAttribute]
internal static T CreateInstance(Type t, Object[] args);
    [ExtensionAttribute]
internal static object CreateInstance(Type t, Object[] args);
    internal static ObjectActivator`1<T> GetActivator(ConstructorInfo ctor);
    [ExtensionAttribute]
internal static List`1<PropertyInfo> GetAllProperties(Type type);
    private static void GetAllPropertiesCore(Type type, Dictionary`2<string, PropertyInfo> collectedProperties);
    private static bool IsHidingMember(PropertyInfo propertyInfo);
    [ExtensionAttribute]
private static Type GetDeclaringType(PropertyInfo propertyInfo);
    [ExtensionAttribute]
private static MethodInfo GetBaseDefinition(PropertyInfo propertyInfo);
    [ExtensionAttribute]
private static bool IsVirtual(PropertyInfo propertyInfo);
    [ExtensionAttribute]
public static bool IsOpenSearchClientType(Type type);
}
public class OpenSearch.Client.TypeFieldMappings : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<Field, FieldMapping> <Mappings>k__BackingField;
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.ResolvableReadOnlyDictionaryFormatter`2<OpenSearch.Client.Field,OpenSearch.Client.FieldMapping>")]
public IReadOnlyDictionary`2<Field, FieldMapping> Mappings { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<Field, FieldMapping> get_Mappings();
    [CompilerGeneratedAttribute]
internal void set_Mappings(IReadOnlyDictionary`2<Field, FieldMapping> value);
}
public class OpenSearch.Client.TypeMapping : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DateDetection>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, DynamicMapping> <Dynamic>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <DynamicDateFormats>k__BackingField;
    [CompilerGeneratedAttribute]
private IDynamicTemplateContainer <DynamicTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IFieldNamesField <FieldNamesField>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <NumericDetection>k__BackingField;
    [CompilerGeneratedAttribute]
private IProperties <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IRoutingField <RoutingField>k__BackingField;
    [CompilerGeneratedAttribute]
private IRuntimeFields <RuntimeFields>k__BackingField;
    [CompilerGeneratedAttribute]
private ISizeField <SizeField>k__BackingField;
    [CompilerGeneratedAttribute]
private ISourceField <SourceField>k__BackingField;
    public Nullable`1<bool> DateDetection { get; public set; }
    public Union`2<bool, DynamicMapping> Dynamic { get; public set; }
    public IEnumerable`1<string> DynamicDateFormats { get; public set; }
    public IDynamicTemplateContainer DynamicTemplates { get; public set; }
    public IFieldNamesField FieldNamesField { get; public set; }
    public IDictionary`2<string, object> Meta { get; public set; }
    public Nullable`1<bool> NumericDetection { get; public set; }
    public IProperties Properties { get; public set; }
    public IRoutingField RoutingField { get; public set; }
    public IRuntimeFields RuntimeFields { get; public set; }
    public ISizeField SizeField { get; public set; }
    public ISourceField SourceField { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DateDetection();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateDetection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<bool, DynamicMapping> get_Dynamic();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Dynamic(Union`2<bool, DynamicMapping> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_DynamicDateFormats();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DynamicDateFormats(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDynamicTemplateContainer get_DynamicTemplates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DynamicTemplates(IDynamicTemplateContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IFieldNamesField get_FieldNamesField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FieldNamesField(IFieldNamesField value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Meta();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_NumericDetection();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NumericDetection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IProperties get_Properties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Properties(IProperties value);
    [CompilerGeneratedAttribute]
public sealed virtual IRoutingField get_RoutingField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RoutingField(IRoutingField value);
    [CompilerGeneratedAttribute]
public sealed virtual IRuntimeFields get_RuntimeFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RuntimeFields(IRuntimeFields value);
    [CompilerGeneratedAttribute]
public sealed virtual ISizeField get_SizeField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SizeField(ISizeField value);
    [CompilerGeneratedAttribute]
public sealed virtual ISourceField get_SourceField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SourceField(ISourceField value);
}
public class OpenSearch.Client.TypeMappingDescriptor`1 : DescriptorBase`2<TypeMappingDescriptor`1<T>, ITypeMapping> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITypeMapping.DateDetection>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, DynamicMapping> <OpenSearch.Client.ITypeMapping.Dynamic>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.ITypeMapping.DynamicDateFormats>k__BackingField;
    [CompilerGeneratedAttribute]
private IDynamicTemplateContainer <OpenSearch.Client.ITypeMapping.DynamicTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IFieldNamesField <OpenSearch.Client.ITypeMapping.FieldNamesField>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.ITypeMapping.Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.ITypeMapping.NumericDetection>k__BackingField;
    [CompilerGeneratedAttribute]
private IProperties <OpenSearch.Client.ITypeMapping.Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IRoutingField <OpenSearch.Client.ITypeMapping.RoutingField>k__BackingField;
    [CompilerGeneratedAttribute]
private IRuntimeFields <OpenSearch.Client.ITypeMapping.RuntimeFields>k__BackingField;
    [CompilerGeneratedAttribute]
private ISizeField <OpenSearch.Client.ITypeMapping.SizeField>k__BackingField;
    [CompilerGeneratedAttribute]
private ISourceField <OpenSearch.Client.ITypeMapping.SourceField>k__BackingField;
    private Nullable`1<bool> OpenSearch.Client.ITypeMapping.DateDetection { get; private set; }
    private Union`2<bool, DynamicMapping> OpenSearch.Client.ITypeMapping.Dynamic { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.ITypeMapping.DynamicDateFormats { get; private set; }
    private IDynamicTemplateContainer OpenSearch.Client.ITypeMapping.DynamicTemplates { get; private set; }
    private IFieldNamesField OpenSearch.Client.ITypeMapping.FieldNamesField { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.ITypeMapping.Meta { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.ITypeMapping.NumericDetection { get; private set; }
    private IProperties OpenSearch.Client.ITypeMapping.Properties { get; private set; }
    private IRoutingField OpenSearch.Client.ITypeMapping.RoutingField { get; private set; }
    private IRuntimeFields OpenSearch.Client.ITypeMapping.RuntimeFields { get; private set; }
    private ISizeField OpenSearch.Client.ITypeMapping.SizeField { get; private set; }
    private ISourceField OpenSearch.Client.ITypeMapping.SourceField { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITypeMapping.get_DateDetection();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_DateDetection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<bool, DynamicMapping> OpenSearch.Client.ITypeMapping.get_Dynamic();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_Dynamic(Union`2<bool, DynamicMapping> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.ITypeMapping.get_DynamicDateFormats();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_DynamicDateFormats(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDynamicTemplateContainer OpenSearch.Client.ITypeMapping.get_DynamicTemplates();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_DynamicTemplates(IDynamicTemplateContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IFieldNamesField OpenSearch.Client.ITypeMapping.get_FieldNamesField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_FieldNamesField(IFieldNamesField value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.ITypeMapping.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.ITypeMapping.get_NumericDetection();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_NumericDetection(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IProperties OpenSearch.Client.ITypeMapping.get_Properties();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_Properties(IProperties value);
    [CompilerGeneratedAttribute]
private sealed virtual override IRoutingField OpenSearch.Client.ITypeMapping.get_RoutingField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_RoutingField(IRoutingField value);
    [CompilerGeneratedAttribute]
private sealed virtual override IRuntimeFields OpenSearch.Client.ITypeMapping.get_RuntimeFields();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_RuntimeFields(IRuntimeFields value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISizeField OpenSearch.Client.ITypeMapping.get_SizeField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_SizeField(ISizeField value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISourceField OpenSearch.Client.ITypeMapping.get_SourceField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.ITypeMapping.set_SourceField(ISourceField value);
    public TypeMappingDescriptor`1<T> AutoMap(IPropertyVisitor visitor, int maxRecursion);
    public TypeMappingDescriptor`1<T> AutoMap(Type documentType, IPropertyVisitor visitor, int maxRecursion);
    public TypeMappingDescriptor`1<T> AutoMap(IPropertyVisitor visitor, int maxRecursion);
    public TypeMappingDescriptor`1<T> AutoMap(int maxRecursion);
    public TypeMappingDescriptor`1<T> Dynamic(Union`2<bool, DynamicMapping> dynamic);
    public TypeMappingDescriptor`1<T> Dynamic(bool dynamic);
    public TypeMappingDescriptor`1<T> SizeField(Func`2<SizeFieldDescriptor, ISizeField> sizeFieldSelector);
    public TypeMappingDescriptor`1<T> SourceField(Func`2<SourceFieldDescriptor, ISourceField> sourceFieldSelector);
    public TypeMappingDescriptor`1<T> DisableSizeField(Nullable`1<bool> disabled);
    public TypeMappingDescriptor`1<T> DynamicDateFormats(IEnumerable`1<string> dateFormats);
    public TypeMappingDescriptor`1<T> DateDetection(Nullable`1<bool> detect);
    public TypeMappingDescriptor`1<T> NumericDetection(Nullable`1<bool> detect);
    public TypeMappingDescriptor`1<T> RoutingField(Func`2<RoutingFieldDescriptor`1<T>, IRoutingField> routingFieldSelector);
    public TypeMappingDescriptor`1<T> RuntimeFields(Func`2<RuntimeFieldsDescriptor`1<T>, IPromise`1<IRuntimeFields>> runtimeFieldsSelector);
    public TypeMappingDescriptor`1<T> RuntimeFields(Func`2<RuntimeFieldsDescriptor`1<TDocument>, IPromise`1<IRuntimeFields>> runtimeFieldsSelector);
    public TypeMappingDescriptor`1<T> FieldNamesField(Func`2<FieldNamesFieldDescriptor`1<T>, IFieldNamesField> fieldNamesFieldSelector);
    public TypeMappingDescriptor`1<T> Meta(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> metaSelector);
    public TypeMappingDescriptor`1<T> Meta(Dictionary`2<string, object> metaDictionary);
    public TypeMappingDescriptor`1<T> Properties(Func`2<PropertiesDescriptor`1<T>, IPromise`1<IProperties>> propertiesSelector);
    public TypeMappingDescriptor`1<T> Properties(Func`2<PropertiesDescriptor`1<TDocument>, IPromise`1<IProperties>> propertiesSelector);
    public TypeMappingDescriptor`1<T> DynamicTemplates(Func`2<DynamicTemplateContainerDescriptor`1<T>, IPromise`1<IDynamicTemplateContainer>> dynamicTemplatesSelector);
    [CompilerGeneratedAttribute]
private void <Properties>b__66_0(ITypeMapping a, Func`2<PropertiesDescriptor`1<T>, IPromise`1<IProperties>> v);
    [CompilerGeneratedAttribute]
private void <Properties>b__67_0(ITypeMapping a, Func`2<PropertiesDescriptor`1<TDocument>, IPromise`1<IProperties>> v);
}
public class OpenSearch.Client.UaxEmailUrlTokenizer : TokenizerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxTokenLength>k__BackingField;
    public Nullable`1<int> MaxTokenLength { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxTokenLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxTokenLength(Nullable`1<int> value);
}
public class OpenSearch.Client.UaxEmailUrlTokenizerDescriptor : TokenizerDescriptorBase`2<UaxEmailUrlTokenizerDescriptor, IUaxEmailUrlTokenizer> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IUaxEmailUrlTokenizer.MaxTokenLength>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.IUaxEmailUrlTokenizer.MaxTokenLength { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IUaxEmailUrlTokenizer.get_MaxTokenLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUaxEmailUrlTokenizer.set_MaxTokenLength(Nullable`1<int> value);
    public UaxEmailUrlTokenizerDescriptor MaxTokenLength(Nullable`1<int> maxLength);
}
public class OpenSearch.Client.UnassignedInformation : object {
    [CompilerGeneratedAttribute]
private DateTime <At>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastAllocationStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private UnassignedInformationReason <Reason>k__BackingField;
    [DataMemberAttribute]
public DateTime At { get; public set; }
    [DataMemberAttribute]
public string LastAllocationStatus { get; public set; }
    [DataMemberAttribute]
public UnassignedInformationReason Reason { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_At();
    [CompilerGeneratedAttribute]
public void set_At(DateTime value);
    [CompilerGeneratedAttribute]
public string get_LastAllocationStatus();
    [CompilerGeneratedAttribute]
public void set_LastAllocationStatus(string value);
    [CompilerGeneratedAttribute]
public UnassignedInformationReason get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(UnassignedInformationReason value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.UnassignedInformationReason : Enum {
    public int value__;
    [EnumMemberAttribute]
public static UnassignedInformationReason IndexCreated;
    [EnumMemberAttribute]
public static UnassignedInformationReason ClusterRecovered;
    [EnumMemberAttribute]
public static UnassignedInformationReason IndexReopened;
    [EnumMemberAttribute]
public static UnassignedInformationReason DanglingIndexImported;
    [EnumMemberAttribute]
public static UnassignedInformationReason NewIndexRestored;
    [EnumMemberAttribute]
public static UnassignedInformationReason ExistingIndexRestored;
    [EnumMemberAttribute]
public static UnassignedInformationReason ReplicaAdded;
    [EnumMemberAttribute]
public static UnassignedInformationReason AllocationFailed;
    [EnumMemberAttribute]
public static UnassignedInformationReason NodeLeft;
    [EnumMemberAttribute]
public static UnassignedInformationReason RerouteCancelled;
    [EnumMemberAttribute]
public static UnassignedInformationReason Reinitialized;
    [EnumMemberAttribute]
public static UnassignedInformationReason ReallocatedReplica;
    [EnumMemberAttribute]
public static UnassignedInformationReason PrimaryFailed;
    [EnumMemberAttribute]
public static UnassignedInformationReason ForcedEmptyPrimary;
    [EnumMemberAttribute]
public static UnassignedInformationReason ManualAllocation;
}
[JsonFormatterAttribute("OpenSearch.Client.UnionFormatter`2")]
public class OpenSearch.Client.Union`2 : object {
    internal int Tag;
    internal TFirst Item1;
    internal TSecond Item2;
    public Union`2(TFirst item);
    public Union`2(TSecond item);
    public void Match(Action`1<TFirst> first, Action`1<TSecond> second);
    public T Match(Func`2<TFirst, T> first, Func`2<TSecond, T> second);
    public static Union`2<TFirst, TSecond> op_Implicit(TFirst first);
    public static Union`2<TFirst, TSecond> op_Implicit(TSecond second);
}
internal class OpenSearch.Client.UnionFormatter`2 : object {
    private bool _attemptTSecondIfTFirstIsNull;
    public UnionFormatter`2(bool attemptTSecondIfTFirstIsNull);
    public sealed virtual Union`2<TFirst, TSecond> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, Union`2<TFirst, TSecond> value, IJsonFormatterResolver formatterResolver);
    public bool TryRead(ArraySegment`1& segment, IJsonFormatterResolver formatterResolver, T& v);
}
internal class OpenSearch.Client.UnionListFormatter`3 : object {
    private static UnionFormatter`2<TFirst, TSecond> CharFilterFormatter;
    private static UnionListFormatter`3();
    public sealed virtual TCollection Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TCollection value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.UniqueTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OnlyOnSamePosition>k__BackingField;
    public Nullable`1<bool> OnlyOnSamePosition { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_OnlyOnSamePosition();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OnlyOnSamePosition(Nullable`1<bool> value);
}
public class OpenSearch.Client.UniqueTokenFilterDescriptor : TokenFilterDescriptorBase`2<UniqueTokenFilterDescriptor, IUniqueTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IUniqueTokenFilter.OnlyOnSamePosition>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.IUniqueTokenFilter.OnlyOnSamePosition { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IUniqueTokenFilter.get_OnlyOnSamePosition();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUniqueTokenFilter.set_OnlyOnSamePosition(Nullable`1<bool> value);
    public UniqueTokenFilterDescriptor OnlyOnSamePosition(Nullable`1<bool> samePositionOnly);
}
public static class OpenSearch.Client.UpdatableIndexSettings : object {
    public static string Analysis;
    public static string AnalyzeMaxTokenCount;
    public static string AutoExpandReplicas;
    public static string BlocksMetadata;
    public static string BlocksReadOnlyAllowDelete;
    public static string BlocksRead;
    public static string BlocksReadOnly;
    public static string BlocksWrite;
    public static string CompoundFormat;
    public static string CompoundOnFlush;
    public static string MappingNestedFieldsLimit;
    public static string MappingNestedObjectsLimit;
    public static string MaxNGramDiff;
    public static string MaxResultWindow;
    public static string MaxInnerResultWindow;
    public static string MaxScriptFields;
    public static string MaxShingleDiff;
    public static string MergePolicyExpungeDeletesAllowed;
    public static string MergePolicyFloorSegment;
    public static string MergePolicyMaxMergeAtOnce;
    public static string MergePolicyMaxMergeAtOnceExplicit;
    public static string MergePolicyMaxMergedSegment;
    public static string MergePolicyReclaimDeletesWeight;
    public static string MergePolicySegmentsPerTier;
    public static string MergeSchedulerAutoThrottle;
    public static string MergeSchedulerMaxThreadCount;
    public static string NumberOfReplicas;
    public static string Priority;
    public static string QueriesCacheEnabled;
    public static string SoftDeletesEnabled;
    public static string SoftDeletesRetentionOperations;
    public static string RecoveryInitialShards;
    public static string RefreshInterval;
    public static string DefaultPipeline;
    public static string FinalPipeline;
    public static string RequestsCacheEnable;
    public static string RoutingAllocationDisableAllocation;
    public static string RoutingAllocationDisableNewAllocation;
    public static string RoutingAllocationDisableReplicaAllocation;
    public static string RoutingAllocationEnable;
    public static string RoutingAllocationExclude;
    public static string RoutingAllocationInclude;
    public static string RoutingAllocationRequire;
    public static string RoutingAllocationTotalShardsPerNode;
    public static string Similarity;
    public static string SlowlogIndexingLevel;
    public static string SlowlogIndexingSource;
    public static string SlowlogIndexingThresholdFetchDebug;
    public static string SlowlogIndexingThresholdFetchInfo;
    public static string SlowlogIndexingThresholdFetchTrace;
    public static string SlowlogIndexingThresholdFetchWarn;
    public static string SlowlogSearchLevel;
    public static string SlowlogSearchThresholdFetchDebug;
    public static string SlowlogSearchThresholdFetchInfo;
    public static string SlowlogSearchThresholdFetchTrace;
    public static string SlowlogSearchThresholdFetchWarn;
    public static string SlowlogSearchThresholdQueryDebug;
    public static string SlowlogSearchThresholdQueryInfo;
    public static string SlowlogSearchThresholdQueryTrace;
    public static string SlowlogSearchThresholdQueryWarn;
    public static string StoreType;
    public static string TranslogDurability;
    public static string TranslogFlushThresholdPeriod;
    public static string TranslogFlushThresholdSize;
    public static string TranslogSyncInterval;
    public static string UnassignedNodeLeftDelayedTimeout;
}
public class OpenSearch.Client.UpdateByQueryDescriptor`1 : RequestDescriptorBase`3<UpdateByQueryDescriptor`1<TDocument>, UpdateByQueryRequestParameters, IUpdateByQueryRequest`1<TDocument>> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IUpdateByQueryRequest.Query>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IUpdateByQueryRequest.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <OpenSearch.Client.IUpdateByQueryRequest.MaximumDocuments>k__BackingField;
    [CompilerGeneratedAttribute]
private ISlicedScroll <OpenSearch.Client.IUpdateByQueryRequest.Slice>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IUpdateByQueryRequest.Index { get; }
    private QueryContainer OpenSearch.Client.IUpdateByQueryRequest.Query { get; private set; }
    private IScript OpenSearch.Client.IUpdateByQueryRequest.Script { get; private set; }
    private Nullable`1<long> OpenSearch.Client.IUpdateByQueryRequest.MaximumDocuments { get; private set; }
    private ISlicedScroll OpenSearch.Client.IUpdateByQueryRequest.Slice { get; private set; }
    public UpdateByQueryDescriptor`1(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IUpdateByQueryRequest.get_Index();
    public UpdateByQueryDescriptor`1<TDocument> Index(Indices index);
    public UpdateByQueryDescriptor`1<TDocument> Index();
    public UpdateByQueryDescriptor`1<TDocument> AllIndices();
    public UpdateByQueryDescriptor`1<TDocument> AllowNoIndices(Nullable`1<bool> allownoindices);
    public UpdateByQueryDescriptor`1<TDocument> AnalyzeWildcard(Nullable`1<bool> analyzewildcard);
    public UpdateByQueryDescriptor`1<TDocument> Analyzer(string analyzer);
    public UpdateByQueryDescriptor`1<TDocument> Conflicts(Nullable`1<Conflicts> conflicts);
    public UpdateByQueryDescriptor`1<TDocument> DefaultOperator(Nullable`1<DefaultOperator> defaultoperator);
    public UpdateByQueryDescriptor`1<TDocument> Df(string df);
    public UpdateByQueryDescriptor`1<TDocument> ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public UpdateByQueryDescriptor`1<TDocument> From(Nullable`1<long> from);
    public UpdateByQueryDescriptor`1<TDocument> IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public UpdateByQueryDescriptor`1<TDocument> Lenient(Nullable`1<bool> lenient);
    public UpdateByQueryDescriptor`1<TDocument> Pipeline(string pipeline);
    public UpdateByQueryDescriptor`1<TDocument> Preference(string preference);
    public UpdateByQueryDescriptor`1<TDocument> QueryOnQueryString(string queryonquerystring);
    public UpdateByQueryDescriptor`1<TDocument> Refresh(Nullable`1<bool> refresh);
    public UpdateByQueryDescriptor`1<TDocument> RequestCache(Nullable`1<bool> requestcache);
    public UpdateByQueryDescriptor`1<TDocument> RequestsPerSecond(Nullable`1<long> requestspersecond);
    public UpdateByQueryDescriptor`1<TDocument> Routing(Routing routing);
    public UpdateByQueryDescriptor`1<TDocument> Scroll(Time scroll);
    public UpdateByQueryDescriptor`1<TDocument> ScrollSize(Nullable`1<long> scrollsize);
    public UpdateByQueryDescriptor`1<TDocument> SearchTimeout(Time searchtimeout);
    public UpdateByQueryDescriptor`1<TDocument> SearchType(Nullable`1<SearchType> searchtype);
    public UpdateByQueryDescriptor`1<TDocument> Slices(Slices slices);
    public UpdateByQueryDescriptor`1<TDocument> Sort(String[] sort);
    public UpdateByQueryDescriptor`1<TDocument> SourceEnabled(Nullable`1<bool> sourceenabled);
    public UpdateByQueryDescriptor`1<TDocument> SourceExcludes(Fields sourceexcludes);
    public UpdateByQueryDescriptor`1<TDocument> SourceExcludes(Expression`1[] fields);
    public UpdateByQueryDescriptor`1<TDocument> SourceIncludes(Fields sourceincludes);
    public UpdateByQueryDescriptor`1<TDocument> SourceIncludes(Expression`1[] fields);
    public UpdateByQueryDescriptor`1<TDocument> Stats(String[] stats);
    public UpdateByQueryDescriptor`1<TDocument> TerminateAfter(Nullable`1<long> terminateafter);
    public UpdateByQueryDescriptor`1<TDocument> Timeout(Time timeout);
    public UpdateByQueryDescriptor`1<TDocument> Version(Nullable`1<bool> version);
    public UpdateByQueryDescriptor`1<TDocument> VersionType(Nullable`1<bool> versiontype);
    public UpdateByQueryDescriptor`1<TDocument> WaitForActiveShards(string waitforactiveshards);
    public UpdateByQueryDescriptor`1<TDocument> WaitForCompletion(Nullable`1<bool> waitforcompletion);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IUpdateByQueryRequest.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateByQueryRequest.set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IUpdateByQueryRequest.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateByQueryRequest.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<long> OpenSearch.Client.IUpdateByQueryRequest.get_MaximumDocuments();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateByQueryRequest.set_MaximumDocuments(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
private sealed virtual override ISlicedScroll OpenSearch.Client.IUpdateByQueryRequest.get_Slice();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateByQueryRequest.set_Slice(ISlicedScroll value);
    public UpdateByQueryDescriptor`1<TDocument> MatchAll();
    public UpdateByQueryDescriptor`1<TDocument> Query(Func`2<QueryContainerDescriptor`1<TDocument>, QueryContainer> querySelector);
    public UpdateByQueryDescriptor`1<TDocument> Script(string script);
    public UpdateByQueryDescriptor`1<TDocument> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public UpdateByQueryDescriptor`1<TDocument> MaximumDocuments(Nullable`1<long> maximumDocuments);
    public UpdateByQueryDescriptor`1<TDocument> Slice(Func`2<SlicedScrollDescriptor`1<TDocument>, ISlicedScroll> selector);
}
public class OpenSearch.Client.UpdateByQueryRequest : PlainRequestBase`1<UpdateByQueryRequestParameters> {
    [CompilerGeneratedAttribute]
private ISlicedScroll <Slice>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaximumDocuments>k__BackingField;
    public ISlicedScroll Slice { get; public set; }
    public QueryContainer Query { get; public set; }
    public IScript Script { get; public set; }
    public Nullable`1<long> MaximumDocuments { get; public set; }
    protected IUpdateByQueryRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IUpdateByQueryRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<bool> AnalyzeWildcard { get; public set; }
    public string Analyzer { get; public set; }
    public Nullable`1<Conflicts> Conflicts { get; public set; }
    public Nullable`1<DefaultOperator> DefaultOperator { get; public set; }
    public string Df { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<long> From { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public string Pipeline { get; public set; }
    public string Preference { get; public set; }
    public string QueryOnQueryString { get; public set; }
    public Nullable`1<bool> Refresh { get; public set; }
    public Nullable`1<bool> RequestCache { get; public set; }
    public Nullable`1<long> RequestsPerSecond { get; public set; }
    public Routing Routing { get; public set; }
    public Time Scroll { get; public set; }
    public Nullable`1<long> ScrollSize { get; public set; }
    public Time SearchTimeout { get; public set; }
    public Nullable`1<SearchType> SearchType { get; public set; }
    public Slices Slices { get; public set; }
    public String[] Sort { get; public set; }
    public Nullable`1<bool> SourceEnabled { get; public set; }
    public Fields SourceExcludes { get; public set; }
    public Fields SourceIncludes { get; public set; }
    public String[] Stats { get; public set; }
    public Nullable`1<long> TerminateAfter { get; public set; }
    public Time Timeout { get; public set; }
    public Nullable`1<bool> Version { get; public set; }
    public Nullable`1<bool> VersionType { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public Nullable`1<bool> WaitForCompletion { get; public set; }
    public UpdateByQueryRequest(Indices index);
    [CompilerGeneratedAttribute]
public sealed virtual ISlicedScroll get_Slice();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slice(ISlicedScroll value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MaximumDocuments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumDocuments(Nullable`1<long> value);
    protected IUpdateByQueryRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IUpdateByQueryRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<bool> get_AnalyzeWildcard();
    public void set_AnalyzeWildcard(Nullable`1<bool> value);
    public string get_Analyzer();
    public void set_Analyzer(string value);
    public Nullable`1<Conflicts> get_Conflicts();
    public void set_Conflicts(Nullable`1<Conflicts> value);
    public Nullable`1<DefaultOperator> get_DefaultOperator();
    public void set_DefaultOperator(Nullable`1<DefaultOperator> value);
    public string get_Df();
    public void set_Df(string value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<long> get_From();
    public void set_From(Nullable`1<long> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_Lenient();
    public void set_Lenient(Nullable`1<bool> value);
    public string get_Pipeline();
    public void set_Pipeline(string value);
    public string get_Preference();
    public void set_Preference(string value);
    public string get_QueryOnQueryString();
    public void set_QueryOnQueryString(string value);
    public Nullable`1<bool> get_Refresh();
    public void set_Refresh(Nullable`1<bool> value);
    public Nullable`1<bool> get_RequestCache();
    public void set_RequestCache(Nullable`1<bool> value);
    public Nullable`1<long> get_RequestsPerSecond();
    public void set_RequestsPerSecond(Nullable`1<long> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Time get_Scroll();
    public void set_Scroll(Time value);
    public Nullable`1<long> get_ScrollSize();
    public void set_ScrollSize(Nullable`1<long> value);
    public Time get_SearchTimeout();
    public void set_SearchTimeout(Time value);
    public Nullable`1<SearchType> get_SearchType();
    public void set_SearchType(Nullable`1<SearchType> value);
    public Slices get_Slices();
    public void set_Slices(Slices value);
    public String[] get_Sort();
    public void set_Sort(String[] value);
    public Nullable`1<bool> get_SourceEnabled();
    public void set_SourceEnabled(Nullable`1<bool> value);
    public Fields get_SourceExcludes();
    public void set_SourceExcludes(Fields value);
    public Fields get_SourceIncludes();
    public void set_SourceIncludes(Fields value);
    public String[] get_Stats();
    public void set_Stats(String[] value);
    public Nullable`1<long> get_TerminateAfter();
    public void set_TerminateAfter(Nullable`1<long> value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public Nullable`1<bool> get_Version();
    public void set_Version(Nullable`1<bool> value);
    public Nullable`1<bool> get_VersionType();
    public void set_VersionType(Nullable`1<bool> value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
    public Nullable`1<bool> get_WaitForCompletion();
    public void set_WaitForCompletion(Nullable`1<bool> value);
}
public class OpenSearch.Client.UpdateByQueryRequest`1 : UpdateByQueryRequest {
    protected IUpdateByQueryRequest`1<TDocument> TypedSelf { get; }
    public UpdateByQueryRequest`1(Indices index);
    protected IUpdateByQueryRequest`1<TDocument> get_TypedSelf();
}
public class OpenSearch.Client.UpdateByQueryResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private long <Batches>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<BulkIndexByScrollFailure> <Failures>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Noops>k__BackingField;
    [CompilerGeneratedAttribute]
private float <RequestsPerSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private Retries <Retries>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskId <Task>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TimedOut>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Took>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Updated>k__BackingField;
    [CompilerGeneratedAttribute]
private long <VersionConflicts>k__BackingField;
    public bool IsValid { get; }
    [DataMemberAttribute]
public long Batches { get; internal set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<BulkIndexByScrollFailure> Failures { get; internal set; }
    [DataMemberAttribute]
public long Noops { get; internal set; }
    [DataMemberAttribute]
public float RequestsPerSecond { get; internal set; }
    [DataMemberAttribute]
public Retries Retries { get; internal set; }
    [DataMemberAttribute]
public TaskId Task { get; internal set; }
    [DataMemberAttribute]
public bool TimedOut { get; internal set; }
    [DataMemberAttribute]
public long Took { get; internal set; }
    [DataMemberAttribute]
public long Total { get; internal set; }
    [DataMemberAttribute]
public long Updated { get; internal set; }
    [DataMemberAttribute]
public long VersionConflicts { get; internal set; }
    public virtual bool get_IsValid();
    [CompilerGeneratedAttribute]
public long get_Batches();
    [CompilerGeneratedAttribute]
internal void set_Batches(long value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<BulkIndexByScrollFailure> get_Failures();
    [CompilerGeneratedAttribute]
internal void set_Failures(IReadOnlyCollection`1<BulkIndexByScrollFailure> value);
    [CompilerGeneratedAttribute]
public long get_Noops();
    [CompilerGeneratedAttribute]
internal void set_Noops(long value);
    [CompilerGeneratedAttribute]
public float get_RequestsPerSecond();
    [CompilerGeneratedAttribute]
internal void set_RequestsPerSecond(float value);
    [CompilerGeneratedAttribute]
public Retries get_Retries();
    [CompilerGeneratedAttribute]
internal void set_Retries(Retries value);
    [CompilerGeneratedAttribute]
public TaskId get_Task();
    [CompilerGeneratedAttribute]
internal void set_Task(TaskId value);
    [CompilerGeneratedAttribute]
public bool get_TimedOut();
    [CompilerGeneratedAttribute]
internal void set_TimedOut(bool value);
    [CompilerGeneratedAttribute]
public long get_Took();
    [CompilerGeneratedAttribute]
internal void set_Took(long value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
internal void set_Total(long value);
    [CompilerGeneratedAttribute]
public long get_Updated();
    [CompilerGeneratedAttribute]
internal void set_Updated(long value);
    [CompilerGeneratedAttribute]
public long get_VersionConflicts();
    [CompilerGeneratedAttribute]
internal void set_VersionConflicts(long value);
}
public class OpenSearch.Client.UpdateByQueryRethrottleDescriptor : RequestDescriptorBase`3<UpdateByQueryRethrottleDescriptor, UpdateByQueryRethrottleRequestParameters, IUpdateByQueryRethrottleRequest> {
    internal ApiUrls ApiUrls { get; }
    private TaskId OpenSearch.Client.IUpdateByQueryRethrottleRequest.TaskId { get; }
    public UpdateByQueryRethrottleDescriptor(TaskId taskId);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override TaskId OpenSearch.Client.IUpdateByQueryRethrottleRequest.get_TaskId();
    public UpdateByQueryRethrottleDescriptor RequestsPerSecond(Nullable`1<long> requestspersecond);
}
public class OpenSearch.Client.UpdateByQueryRethrottleRequest : PlainRequestBase`1<UpdateByQueryRethrottleRequestParameters> {
    protected IUpdateByQueryRethrottleRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private TaskId OpenSearch.Client.IUpdateByQueryRethrottleRequest.TaskId { get; }
    public Nullable`1<long> RequestsPerSecond { get; public set; }
    public UpdateByQueryRethrottleRequest(TaskId taskId);
    protected IUpdateByQueryRethrottleRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override TaskId OpenSearch.Client.IUpdateByQueryRethrottleRequest.get_TaskId();
    public Nullable`1<long> get_RequestsPerSecond();
    public void set_RequestsPerSecond(Nullable`1<long> value);
}
public class OpenSearch.Client.UpdateDescriptor`2 : RequestDescriptorBase`3<UpdateDescriptor`2<TDocument, TPartialDocument>, UpdateRequestParameters, IUpdateRequest`2<TDocument, TPartialDocument>> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.DetectNoop>k__BackingField;
    [CompilerGeneratedAttribute]
private TPartialDocument <OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Doc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.DocAsUpsert>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.ScriptedUpsert>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Source>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Upsert>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private IndexName OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Index { get; }
    private Id OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Id { get; }
    private Nullable`1<bool> OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.DetectNoop { get; private set; }
    private TPartialDocument OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Doc { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.DocAsUpsert { get; private set; }
    private IScript OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Script { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.ScriptedUpsert { get; private set; }
    private Union`2<bool, ISourceFilter> OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Source { get; private set; }
    private TDocument OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Upsert { get; private set; }
    public UpdateDescriptor`2(IndexName index, Id id);
    public UpdateDescriptor`2(Id id);
    public UpdateDescriptor`2(TDocument documentWithId, IndexName index, Id id);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.get_Index();
    private sealed virtual override Id OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.get_Id();
    public UpdateDescriptor`2<TDocument, TPartialDocument> Index(IndexName index);
    public UpdateDescriptor`2<TDocument, TPartialDocument> Index();
    public UpdateDescriptor`2<TDocument, TPartialDocument> IfPrimaryTerm(Nullable`1<long> ifprimaryterm);
    public UpdateDescriptor`2<TDocument, TPartialDocument> IfSequenceNumber(Nullable`1<long> ifsequencenumber);
    public UpdateDescriptor`2<TDocument, TPartialDocument> Lang(string lang);
    public UpdateDescriptor`2<TDocument, TPartialDocument> Refresh(Nullable`1<Refresh> refresh);
    public UpdateDescriptor`2<TDocument, TPartialDocument> RequireAlias(Nullable`1<bool> requirealias);
    public UpdateDescriptor`2<TDocument, TPartialDocument> RetryOnConflict(Nullable`1<long> retryonconflict);
    public UpdateDescriptor`2<TDocument, TPartialDocument> Routing(Routing routing);
    public UpdateDescriptor`2<TDocument, TPartialDocument> SourceEnabled(Nullable`1<bool> sourceenabled);
    public UpdateDescriptor`2<TDocument, TPartialDocument> Timeout(Time timeout);
    public UpdateDescriptor`2<TDocument, TPartialDocument> WaitForActiveShards(string waitforactiveshards);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.get_DetectNoop();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.set_DetectNoop(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override TPartialDocument OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.get_Doc();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.set_Doc(TPartialDocument value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.get_DocAsUpsert();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.set_DocAsUpsert(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.set_Script(IScript value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.get_ScriptedUpsert();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.set_ScriptedUpsert(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Union`2<bool, ISourceFilter> OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.get_Source();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.set_Source(Union`2<bool, ISourceFilter> value);
    [CompilerGeneratedAttribute]
private sealed virtual override TDocument OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.get_Upsert();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.set_Upsert(TDocument value);
    public UpdateDescriptor`2<TDocument, TPartialDocument> Upsert(TDocument upsertObject);
    public UpdateDescriptor`2<TDocument, TPartialDocument> Doc(TPartialDocument object);
    public UpdateDescriptor`2<TDocument, TPartialDocument> DocAsUpsert(Nullable`1<bool> docAsUpsert);
    public UpdateDescriptor`2<TDocument, TPartialDocument> DetectNoop(Nullable`1<bool> detectNoop);
    public UpdateDescriptor`2<TDocument, TPartialDocument> ScriptedUpsert(Nullable`1<bool> scriptedUpsert);
    public UpdateDescriptor`2<TDocument, TPartialDocument> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public UpdateDescriptor`2<TDocument, TPartialDocument> Source(Nullable`1<bool> enabled);
    public UpdateDescriptor`2<TDocument, TPartialDocument> Source(Func`2<SourceFilterDescriptor`1<TDocument>, ISourceFilter> selector);
}
public class OpenSearch.Client.UpdateIndexSettingsDescriptor : RequestDescriptorBase`3<UpdateIndexSettingsDescriptor, UpdateIndexSettingsRequestParameters, IUpdateIndexSettingsRequest> {
    [CompilerGeneratedAttribute]
private IDynamicIndexSettings <OpenSearch.Client.IUpdateIndexSettingsRequest.IndexSettings>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IUpdateIndexSettingsRequest.Index { get; }
    private IDynamicIndexSettings OpenSearch.Client.IUpdateIndexSettingsRequest.IndexSettings { get; private set; }
    public UpdateIndexSettingsDescriptor(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IUpdateIndexSettingsRequest.get_Index();
    public UpdateIndexSettingsDescriptor Index(Indices index);
    public UpdateIndexSettingsDescriptor Index();
    public UpdateIndexSettingsDescriptor AllIndices();
    public UpdateIndexSettingsDescriptor AllowNoIndices(Nullable`1<bool> allownoindices);
    public UpdateIndexSettingsDescriptor ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public UpdateIndexSettingsDescriptor FlatSettings(Nullable`1<bool> flatsettings);
    public UpdateIndexSettingsDescriptor IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public UpdateIndexSettingsDescriptor MasterTimeout(Time mastertimeout);
    public UpdateIndexSettingsDescriptor ClusterManagerTimeout(Time timeout);
    public UpdateIndexSettingsDescriptor PreserveExisting(Nullable`1<bool> preserveexisting);
    public UpdateIndexSettingsDescriptor Timeout(Time timeout);
    [CompilerGeneratedAttribute]
private sealed virtual override IDynamicIndexSettings OpenSearch.Client.IUpdateIndexSettingsRequest.get_IndexSettings();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUpdateIndexSettingsRequest.set_IndexSettings(IDynamicIndexSettings value);
    public UpdateIndexSettingsDescriptor IndexSettings(Func`2<DynamicIndexSettingsDescriptor, IPromise`1<IDynamicIndexSettings>> settings);
}
public class OpenSearch.Client.UpdateIndexSettingsRequest : PlainRequestBase`1<UpdateIndexSettingsRequestParameters> {
    [CompilerGeneratedAttribute]
private IDynamicIndexSettings <IndexSettings>k__BackingField;
    public IDynamicIndexSettings IndexSettings { get; public set; }
    protected IUpdateIndexSettingsRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IUpdateIndexSettingsRequest.Index { get; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> FlatSettings { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Nullable`1<bool> PreserveExisting { get; public set; }
    public Time Timeout { get; public set; }
    public UpdateIndexSettingsRequest(Indices index);
    [CompilerGeneratedAttribute]
public sealed virtual IDynamicIndexSettings get_IndexSettings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IndexSettings(IDynamicIndexSettings value);
    protected IUpdateIndexSettingsRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IUpdateIndexSettingsRequest.get_Index();
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_FlatSettings();
    public void set_FlatSettings(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Nullable`1<bool> get_PreserveExisting();
    public void set_PreserveExisting(Nullable`1<bool> value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
internal class OpenSearch.Client.UpdateIndexSettingsRequestFormatter : object {
    private static DynamicIndexSettingsFormatter DynamicIndexSettingsFormatter;
    private static UpdateIndexSettingsRequestFormatter();
    public sealed virtual IUpdateIndexSettingsRequest Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, IUpdateIndexSettingsRequest value, IJsonFormatterResolver formatterResolver);
}
public class OpenSearch.Client.UpdateIndexSettingsResponse : AcknowledgedResponseBase {
}
public class OpenSearch.Client.UpdateRequest`2 : PlainRequestBase`1<UpdateRequestParameters> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DetectNoop>k__BackingField;
    [CompilerGeneratedAttribute]
private TPartialDocument <Doc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DocAsUpsert>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ScriptedUpsert>k__BackingField;
    [CompilerGeneratedAttribute]
private Union`2<bool, ISourceFilter> <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private TDocument <Upsert>k__BackingField;
    public Nullable`1<bool> DetectNoop { get; public set; }
    public TPartialDocument Doc { get; public set; }
    public Nullable`1<bool> DocAsUpsert { get; public set; }
    public IScript Script { get; public set; }
    public Nullable`1<bool> ScriptedUpsert { get; public set; }
    public Union`2<bool, ISourceFilter> Source { get; public set; }
    public TDocument Upsert { get; public set; }
    protected IUpdateRequest`2<TDocument, TPartialDocument> Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private IndexName OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Index { get; }
    [IgnoreDataMemberAttribute]
private Id OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.Id { get; }
    public Nullable`1<long> IfPrimaryTerm { get; public set; }
    public Nullable`1<long> IfSequenceNumber { get; public set; }
    public string Lang { get; public set; }
    public Nullable`1<Refresh> Refresh { get; public set; }
    public Nullable`1<bool> RequireAlias { get; public set; }
    public Nullable`1<long> RetryOnConflict { get; public set; }
    public Routing Routing { get; public set; }
    public Nullable`1<bool> SourceEnabled { get; public set; }
    public Time Timeout { get; public set; }
    public string WaitForActiveShards { get; public set; }
    public UpdateRequest`2(IndexName index, Id id);
    public UpdateRequest`2(Id id);
    public UpdateRequest`2(TDocument documentWithId, IndexName index, Id id);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DetectNoop();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DetectNoop(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual TPartialDocument get_Doc();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Doc(TPartialDocument value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DocAsUpsert();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DocAsUpsert(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ScriptedUpsert();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScriptedUpsert(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Union`2<bool, ISourceFilter> get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(Union`2<bool, ISourceFilter> value);
    [CompilerGeneratedAttribute]
public sealed virtual TDocument get_Upsert();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Upsert(TDocument value);
    protected IUpdateRequest`2<TDocument, TPartialDocument> get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override IndexName OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.get_Index();
    private sealed virtual override Id OpenSearch.Client.IUpdateRequest<TDocument,TPartialDocument>.get_Id();
    public Nullable`1<long> get_IfPrimaryTerm();
    public void set_IfPrimaryTerm(Nullable`1<long> value);
    public Nullable`1<long> get_IfSequenceNumber();
    public void set_IfSequenceNumber(Nullable`1<long> value);
    public string get_Lang();
    public void set_Lang(string value);
    public Nullable`1<Refresh> get_Refresh();
    public void set_Refresh(Nullable`1<Refresh> value);
    public Nullable`1<bool> get_RequireAlias();
    public void set_RequireAlias(Nullable`1<bool> value);
    public Nullable`1<long> get_RetryOnConflict();
    public void set_RetryOnConflict(Nullable`1<long> value);
    public Routing get_Routing();
    public void set_Routing(Routing value);
    public Nullable`1<bool> get_SourceEnabled();
    public void set_SourceEnabled(Nullable`1<bool> value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
    public string get_WaitForActiveShards();
    public void set_WaitForActiveShards(string value);
}
[DataContractAttribute]
public class OpenSearch.Client.UpdateResponse`1 : WriteResponseBase {
    [CompilerGeneratedAttribute]
private IInlineGet`1<TDocument> <Get>k__BackingField;
    public bool IsValid { get; }
    [DataMemberAttribute]
public IInlineGet`1<TDocument> Get { get; internal set; }
    public virtual bool get_IsValid();
    [CompilerGeneratedAttribute]
public sealed virtual IInlineGet`1<TDocument> get_Get();
    [CompilerGeneratedAttribute]
internal void set_Get(IInlineGet`1<TDocument> value);
}
public class OpenSearch.Client.UppercaseProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [DataMemberAttribute]
public Field Field { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public Field TargetField { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.UppercaseProcessorDescriptor`1 : ProcessorDescriptorBase`2<UppercaseProcessorDescriptor`1<T>, IUppercaseProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IUppercaseProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IUppercaseProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IUppercaseProcessor.TargetField>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IUppercaseProcessor.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IUppercaseProcessor.IgnoreMissing { get; private set; }
    private Field OpenSearch.Client.IUppercaseProcessor.TargetField { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IUppercaseProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUppercaseProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IUppercaseProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUppercaseProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IUppercaseProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUppercaseProcessor.set_TargetField(Field value);
    public UppercaseProcessorDescriptor`1<T> Field(Field field);
    public UppercaseProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public UppercaseProcessorDescriptor`1<T> TargetField(Field field);
    public UppercaseProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, object>> objectPath);
    public UppercaseProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
}
public class OpenSearch.Client.UppercaseTokenFilter : TokenFilterBase {
}
public class OpenSearch.Client.UppercaseTokenFilterDescriptor : TokenFilterDescriptorBase`2<UppercaseTokenFilterDescriptor, IUppercaseTokenFilter> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public class OpenSearch.Client.UriPartsProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <KeepOriginal>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RemoveIfSuccessful>k__BackingField;
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> KeepOriginal { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> RemoveIfSuccessful { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_KeepOriginal();
    [CompilerGeneratedAttribute]
public sealed virtual void set_KeepOriginal(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_RemoveIfSuccessful();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RemoveIfSuccessful(Nullable`1<bool> value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.UriPartsProcessorDescriptor`1 : ProcessorDescriptorBase`2<UriPartsProcessorDescriptor`1<T>, IUriPartsProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IUriPartsProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IUriPartsProcessor.KeepOriginal>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IUriPartsProcessor.TargetField>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IUriPartsProcessor.RemoveIfSuccessful>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IUriPartsProcessor.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IUriPartsProcessor.KeepOriginal { get; private set; }
    private Field OpenSearch.Client.IUriPartsProcessor.TargetField { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IUriPartsProcessor.RemoveIfSuccessful { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IUriPartsProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUriPartsProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IUriPartsProcessor.get_KeepOriginal();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUriPartsProcessor.set_KeepOriginal(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IUriPartsProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUriPartsProcessor.set_TargetField(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IUriPartsProcessor.get_RemoveIfSuccessful();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUriPartsProcessor.set_RemoveIfSuccessful(Nullable`1<bool> value);
    public UriPartsProcessorDescriptor`1<T> Field(Field field);
    public UriPartsProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public UriPartsProcessorDescriptor`1<T> TargetField(Field field);
    public UriPartsProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public UriPartsProcessorDescriptor`1<T> KeepOriginal(Nullable`1<bool> keepOriginal);
    public UriPartsProcessorDescriptor`1<T> RemoveIfSuccessful(Nullable`1<bool> removeIfSuccessful);
}
public class OpenSearch.Client.UrlDecodeProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    [DataMemberAttribute]
public Field Field { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> IgnoreMissing { get; public set; }
    [DataMemberAttribute]
public Field TargetField { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.UrlDecodeProcessorDescriptor`1 : ProcessorDescriptorBase`2<UrlDecodeProcessorDescriptor`1<T>, IUrlDecodeProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IUrlDecodeProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IUrlDecodeProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IUrlDecodeProcessor.TargetField>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IUrlDecodeProcessor.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IUrlDecodeProcessor.IgnoreMissing { get; private set; }
    private Field OpenSearch.Client.IUrlDecodeProcessor.TargetField { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IUrlDecodeProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUrlDecodeProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IUrlDecodeProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUrlDecodeProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IUrlDecodeProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUrlDecodeProcessor.set_TargetField(Field value);
    public UrlDecodeProcessorDescriptor`1<T> Field(Field field);
    public UrlDecodeProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public UrlDecodeProcessorDescriptor`1<T> TargetField(Field field);
    public UrlDecodeProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public UrlDecodeProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
}
internal class OpenSearch.Client.UrlLookup : object {
    private String[] _parts;
    private string _route;
    private String[] _tokenized;
    private int _length;
    public UrlLookup(string route);
    public bool Matches(ResolvedRouteValues values);
    public string ToUrl(ResolvedRouteValues values);
}
public class OpenSearch.Client.UserAgentProcessor : ProcessorBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<UserAgentProperty> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegexFile>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <TargetField>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<bool> IgnoreMissing { get; public set; }
    public IEnumerable`1<UserAgentProperty> Properties { get; public set; }
    public string RegexFile { get; public set; }
    public Field TargetField { get; public set; }
    protected string Name { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreMissing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<UserAgentProperty> get_Properties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Properties(IEnumerable`1<UserAgentProperty> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RegexFile();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RegexFile(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_TargetField();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetField(Field value);
    protected virtual string get_Name();
}
public class OpenSearch.Client.UserAgentProcessorDescriptor`1 : ProcessorDescriptorBase`2<UserAgentProcessorDescriptor`1<T>, IUserAgentProcessor> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IUserAgentProcessor.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IUserAgentProcessor.IgnoreMissing>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<UserAgentProperty> <OpenSearch.Client.IUserAgentProcessor.Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IUserAgentProcessor.RegexFile>k__BackingField;
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IUserAgentProcessor.TargetField>k__BackingField;
    protected string Name { get; }
    private Field OpenSearch.Client.IUserAgentProcessor.Field { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IUserAgentProcessor.IgnoreMissing { get; private set; }
    private IEnumerable`1<UserAgentProperty> OpenSearch.Client.IUserAgentProcessor.Properties { get; private set; }
    private string OpenSearch.Client.IUserAgentProcessor.RegexFile { get; private set; }
    private Field OpenSearch.Client.IUserAgentProcessor.TargetField { get; private set; }
    protected virtual string get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IUserAgentProcessor.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUserAgentProcessor.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IUserAgentProcessor.get_IgnoreMissing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUserAgentProcessor.set_IgnoreMissing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<UserAgentProperty> OpenSearch.Client.IUserAgentProcessor.get_Properties();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUserAgentProcessor.set_Properties(IEnumerable`1<UserAgentProperty> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IUserAgentProcessor.get_RegexFile();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUserAgentProcessor.set_RegexFile(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IUserAgentProcessor.get_TargetField();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IUserAgentProcessor.set_TargetField(Field value);
    public UserAgentProcessorDescriptor`1<T> Field(Field field);
    public UserAgentProcessorDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> objectPath);
    public UserAgentProcessorDescriptor`1<T> TargetField(Field field);
    public UserAgentProcessorDescriptor`1<T> TargetField(Expression`1<Func`2<T, TValue>> objectPath);
    public UserAgentProcessorDescriptor`1<T> RegexFile(string file);
    public UserAgentProcessorDescriptor`1<T> IgnoreMissing(Nullable`1<bool> ignoreMissing);
    public UserAgentProcessorDescriptor`1<T> Properties(IEnumerable`1<UserAgentProperty> properties);
    public UserAgentProcessorDescriptor`1<T> Properties(UserAgentProperty[] properties);
}
[StringEnumAttribute]
public enum OpenSearch.Client.UserAgentProperty : Enum {
    public int value__;
    [EnumMemberAttribute]
public static UserAgentProperty Name;
    [EnumMemberAttribute]
public static UserAgentProperty Major;
    [EnumMemberAttribute]
public static UserAgentProperty Minor;
    [EnumMemberAttribute]
public static UserAgentProperty Patch;
    [EnumMemberAttribute]
public static UserAgentProperty Os;
    [EnumMemberAttribute]
public static UserAgentProperty OsName;
    [EnumMemberAttribute]
public static UserAgentProperty OsMajor;
    [EnumMemberAttribute]
public static UserAgentProperty OsMinor;
    [EnumMemberAttribute]
public static UserAgentProperty Device;
    [EnumMemberAttribute]
public static UserAgentProperty Build;
}
[ExtensionAttribute]
internal static class OpenSearch.Client.Utf8JsonReaderExtensions : object {
    [ExtensionAttribute]
public static Nullable`1<double> ReadNullableDouble(JsonReader& reader);
    [ExtensionAttribute]
public static Nullable`1<long> ReadNullableLong(JsonReader& reader);
    [ExtensionAttribute]
public static Nullable`1<bool> ReadNullableBoolean(JsonReader& reader);
}
public class OpenSearch.Client.ValidateQueryDescriptor`1 : RequestDescriptorBase`3<ValidateQueryDescriptor`1<TDocument>, ValidateQueryRequestParameters, IValidateQueryRequest`1<TDocument>> {
    [CompilerGeneratedAttribute]
private QueryContainer <OpenSearch.Client.IValidateQueryRequest.Query>k__BackingField;
    internal ApiUrls ApiUrls { get; }
    private Indices OpenSearch.Client.IValidateQueryRequest.Index { get; }
    private QueryContainer OpenSearch.Client.IValidateQueryRequest.Query { get; private set; }
    public ValidateQueryDescriptor`1(Indices index);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IValidateQueryRequest.get_Index();
    public ValidateQueryDescriptor`1<TDocument> Index(Indices index);
    public ValidateQueryDescriptor`1<TDocument> Index();
    public ValidateQueryDescriptor`1<TDocument> AllIndices();
    public ValidateQueryDescriptor`1<TDocument> AllShards(Nullable`1<bool> allshards);
    public ValidateQueryDescriptor`1<TDocument> AllowNoIndices(Nullable`1<bool> allownoindices);
    public ValidateQueryDescriptor`1<TDocument> AnalyzeWildcard(Nullable`1<bool> analyzewildcard);
    public ValidateQueryDescriptor`1<TDocument> Analyzer(string analyzer);
    public ValidateQueryDescriptor`1<TDocument> DefaultOperator(Nullable`1<DefaultOperator> defaultoperator);
    public ValidateQueryDescriptor`1<TDocument> Df(string df);
    public ValidateQueryDescriptor`1<TDocument> ExpandWildcards(Nullable`1<ExpandWildcards> expandwildcards);
    public ValidateQueryDescriptor`1<TDocument> Explain(Nullable`1<bool> explain);
    public ValidateQueryDescriptor`1<TDocument> IgnoreUnavailable(Nullable`1<bool> ignoreunavailable);
    public ValidateQueryDescriptor`1<TDocument> Lenient(Nullable`1<bool> lenient);
    public ValidateQueryDescriptor`1<TDocument> QueryOnQueryString(string queryonquerystring);
    public ValidateQueryDescriptor`1<TDocument> Rewrite(Nullable`1<bool> rewrite);
    [CompilerGeneratedAttribute]
private sealed virtual override QueryContainer OpenSearch.Client.IValidateQueryRequest.get_Query();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IValidateQueryRequest.set_Query(QueryContainer value);
    public ValidateQueryDescriptor`1<TDocument> Query(Func`2<QueryContainerDescriptor`1<TDocument>, QueryContainer> querySelector);
}
public class OpenSearch.Client.ValidateQueryRequest : PlainRequestBase`1<ValidateQueryRequestParameters> {
    [CompilerGeneratedAttribute]
private QueryContainer <Query>k__BackingField;
    protected IValidateQueryRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Indices OpenSearch.Client.IValidateQueryRequest.Index { get; }
    public Nullable`1<bool> AllShards { get; public set; }
    public Nullable`1<bool> AllowNoIndices { get; public set; }
    public Nullable`1<bool> AnalyzeWildcard { get; public set; }
    public string Analyzer { get; public set; }
    public Nullable`1<DefaultOperator> DefaultOperator { get; public set; }
    public string Df { get; public set; }
    public Nullable`1<ExpandWildcards> ExpandWildcards { get; public set; }
    public Nullable`1<bool> Explain { get; public set; }
    public Nullable`1<bool> IgnoreUnavailable { get; public set; }
    public Nullable`1<bool> Lenient { get; public set; }
    public string QueryOnQueryString { get; public set; }
    public Nullable`1<bool> Rewrite { get; public set; }
    public QueryContainer Query { get; public set; }
    public ValidateQueryRequest(Indices index);
    protected IValidateQueryRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Indices OpenSearch.Client.IValidateQueryRequest.get_Index();
    public Nullable`1<bool> get_AllShards();
    public void set_AllShards(Nullable`1<bool> value);
    public Nullable`1<bool> get_AllowNoIndices();
    public void set_AllowNoIndices(Nullable`1<bool> value);
    public Nullable`1<bool> get_AnalyzeWildcard();
    public void set_AnalyzeWildcard(Nullable`1<bool> value);
    public string get_Analyzer();
    public void set_Analyzer(string value);
    public Nullable`1<DefaultOperator> get_DefaultOperator();
    public void set_DefaultOperator(Nullable`1<DefaultOperator> value);
    public string get_Df();
    public void set_Df(string value);
    public Nullable`1<ExpandWildcards> get_ExpandWildcards();
    public void set_ExpandWildcards(Nullable`1<ExpandWildcards> value);
    public Nullable`1<bool> get_Explain();
    public void set_Explain(Nullable`1<bool> value);
    public Nullable`1<bool> get_IgnoreUnavailable();
    public void set_IgnoreUnavailable(Nullable`1<bool> value);
    public Nullable`1<bool> get_Lenient();
    public void set_Lenient(Nullable`1<bool> value);
    public string get_QueryOnQueryString();
    public void set_QueryOnQueryString(string value);
    public Nullable`1<bool> get_Rewrite();
    public void set_Rewrite(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual QueryContainer get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(QueryContainer value);
}
public class OpenSearch.Client.ValidateQueryRequest`1 : ValidateQueryRequest {
    protected IValidateQueryRequest`1<TDocument> TypedSelf { get; }
    public ValidateQueryRequest`1(Indices index);
    protected IValidateQueryRequest`1<TDocument> get_TypedSelf();
}
[DataContractAttribute]
public class OpenSearch.Client.ValidateQueryResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ValidationExplanation> <Explanations>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardStatistics <Shards>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Valid>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<ValidationExplanation> Explanations { get; internal set; }
    [DataMemberAttribute]
public ShardStatistics Shards { get; internal set; }
    [DataMemberAttribute]
public bool Valid { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ValidationExplanation> get_Explanations();
    [CompilerGeneratedAttribute]
internal void set_Explanations(IReadOnlyCollection`1<ValidationExplanation> value);
    [CompilerGeneratedAttribute]
public ShardStatistics get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ShardStatistics value);
    [CompilerGeneratedAttribute]
public bool get_Valid();
    [CompilerGeneratedAttribute]
internal void set_Valid(bool value);
}
[DataContractAttribute]
public class OpenSearch.Client.ValidationExplanation : object {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Explanation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Valid>k__BackingField;
    [DataMemberAttribute]
public string Error { get; internal set; }
    [DataMemberAttribute]
public string Explanation { get; internal set; }
    [DataMemberAttribute]
public string Index { get; internal set; }
    [DataMemberAttribute]
public bool Valid { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
internal void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_Explanation();
    [CompilerGeneratedAttribute]
internal void set_Explanation(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public bool get_Valid();
    [CompilerGeneratedAttribute]
internal void set_Valid(bool value);
}
public class OpenSearch.Client.ValueAggregate : MetricAggregateBase {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValueAsString>k__BackingField;
    public Nullable`1<double> Value { get; public set; }
    public string ValueAsString { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public string get_ValueAsString();
    [CompilerGeneratedAttribute]
public void set_ValueAsString(string value);
}
public class OpenSearch.Client.ValueCountAggregation : FormattableMetricAggregationBase {
    public ValueCountAggregation(string name, Field field);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.ValueCountAggregationDescriptor`1 : FormattableMetricAggregationDescriptorBase`3<ValueCountAggregationDescriptor`1<T>, IValueCountAggregation, T> {
}
[StringEnumAttribute]
public enum OpenSearch.Client.ValueType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ValueType String;
    [EnumMemberAttribute]
public static ValueType Long;
    [EnumMemberAttribute]
public static ValueType Double;
    [EnumMemberAttribute]
public static ValueType Number;
    [EnumMemberAttribute]
public static ValueType Date;
    [EnumMemberAttribute]
public static ValueType DateNanos;
    [EnumMemberAttribute]
public static ValueType Ip;
    [EnumMemberAttribute]
public static ValueType Numeric;
    [EnumMemberAttribute]
public static ValueType GeoPoint;
    [EnumMemberAttribute]
public static ValueType Boolean;
}
public class OpenSearch.Client.VariableWidthHistogramAggregation : BucketAggregationBase {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Buckets>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <InitialBuffer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ShardSize>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<int> Buckets { get; public set; }
    public Nullable`1<int> InitialBuffer { get; public set; }
    public Nullable`1<int> ShardSize { get; public set; }
    public VariableWidthHistogramAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Buckets();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Buckets(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_InitialBuffer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InitialBuffer(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ShardSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShardSize(Nullable`1<int> value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.VariableWidthHistogramAggregationDescriptor`1 : BucketAggregationDescriptorBase`3<VariableWidthHistogramAggregationDescriptor`1<T>, IVariableWidthHistogramAggregation, T> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IVariableWidthHistogramAggregation.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IVariableWidthHistogramAggregation.Buckets>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IVariableWidthHistogramAggregation.InitialBuffer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IVariableWidthHistogramAggregation.ShardSize>k__BackingField;
    private Field OpenSearch.Client.IVariableWidthHistogramAggregation.Field { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IVariableWidthHistogramAggregation.Buckets { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IVariableWidthHistogramAggregation.InitialBuffer { get; private set; }
    private Nullable`1<int> OpenSearch.Client.IVariableWidthHistogramAggregation.ShardSize { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IVariableWidthHistogramAggregation.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IVariableWidthHistogramAggregation.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IVariableWidthHistogramAggregation.get_Buckets();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IVariableWidthHistogramAggregation.set_Buckets(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IVariableWidthHistogramAggregation.get_InitialBuffer();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IVariableWidthHistogramAggregation.set_InitialBuffer(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IVariableWidthHistogramAggregation.get_ShardSize();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IVariableWidthHistogramAggregation.set_ShardSize(Nullable`1<int> value);
    public VariableWidthHistogramAggregationDescriptor`1<T> Field(Field field);
    public VariableWidthHistogramAggregationDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public VariableWidthHistogramAggregationDescriptor`1<T> Buckets(Nullable`1<int> buckets);
    public VariableWidthHistogramAggregationDescriptor`1<T> InitialBuffer(Nullable`1<int> initialBuffer);
    public VariableWidthHistogramAggregationDescriptor`1<T> ShardSize(Nullable`1<int> shardSize);
}
public class OpenSearch.Client.VariableWidthHistogramBucket : BucketBase {
    [CompilerGeneratedAttribute]
private double <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Minimum>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Maximum>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DocCount>k__BackingField;
    public double Key { get; public set; }
    public double Minimum { get; public set; }
    public double Maximum { get; public set; }
    public long DocCount { get; public set; }
    public VariableWidthHistogramBucket(IReadOnlyDictionary`2<string, IAggregate> dict);
    [CompilerGeneratedAttribute]
public double get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(double value);
    [CompilerGeneratedAttribute]
public double get_Minimum();
    [CompilerGeneratedAttribute]
public void set_Minimum(double value);
    [CompilerGeneratedAttribute]
public double get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(double value);
    [CompilerGeneratedAttribute]
public long get_DocCount();
    [CompilerGeneratedAttribute]
public void set_DocCount(long value);
}
internal class OpenSearch.Client.VerbatimDictionaryInterfaceKeysFormatter`2 : VerbatimDictionaryKeysBaseFormatter`3<IDictionary`2<TKey, TValue>, TKey, TValue> {
}
internal class OpenSearch.Client.VerbatimDictionaryInterfaceKeysPreservingNullFormatter`2 : VerbatimDictionaryInterfaceKeysFormatter`2<TKey, TValue> {
    protected virtual bool SkipValue(KeyValuePair`2<TKey, TValue> entry);
}
internal class OpenSearch.Client.VerbatimDictionaryKeysBaseFormatter`3 : object {
    private bool _keyIsField;
    private bool _keyIsIndexName;
    private bool _keyIsPropertyName;
    private bool _keyIsRelationName;
    private bool _keyIsString;
    public virtual TDictionary Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
    public sealed virtual void Serialize(JsonWriter& writer, TDictionary value, IJsonFormatterResolver formatterResolver);
    protected virtual bool SkipValue(KeyValuePair`2<TKey, TValue> entry);
}
internal class OpenSearch.Client.VerbatimDictionaryKeysFormatter`2 : VerbatimDictionaryKeysBaseFormatter`3<Dictionary`2<TKey, TValue>, TKey, TValue> {
}
internal class OpenSearch.Client.VerbatimDictionaryKeysFormatter`4 : object {
    private static VerbatimDictionaryInterfaceKeysFormatter`2<TKey, TValue> DictionaryFormatter;
    private static VerbatimDictionaryKeysFormatter`4();
    public sealed virtual void Serialize(JsonWriter& writer, TInterface value, IJsonFormatterResolver formatterResolver);
    public sealed virtual TInterface Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.VerbatimDictionaryKeysPreservingNullFormatter`2 : VerbatimDictionaryKeysFormatter`2<TKey, TValue> {
    protected virtual bool SkipValue(KeyValuePair`2<TKey, TValue> entry);
}
internal class OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2 : VerbatimDictionaryKeysBaseFormatter`3<IReadOnlyDictionary`2<TKey, TValue>, TKey, TValue> {
    public virtual IReadOnlyDictionary`2<TKey, TValue> Deserialize(JsonReader& reader, IJsonFormatterResolver formatterResolver);
}
internal class OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysPreservingNullFormatter`2 : VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<TKey, TValue> {
    protected virtual bool SkipValue(KeyValuePair`2<TKey, TValue> entry);
}
public class OpenSearch.Client.VerbatimPropagatingVisitor : QueryVisitor {
    private bool _verbatim;
    public VerbatimPropagatingVisitor(bool verbatim);
    public virtual void Visit(IQuery query);
}
public class OpenSearch.Client.VerifyRepositoryDescriptor : RequestDescriptorBase`3<VerifyRepositoryDescriptor, VerifyRepositoryRequestParameters, IVerifyRepositoryRequest> {
    internal ApiUrls ApiUrls { get; }
    private Name OpenSearch.Client.IVerifyRepositoryRequest.RepositoryName { get; }
    public VerifyRepositoryDescriptor(Name repository);
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IVerifyRepositoryRequest.get_RepositoryName();
    public VerifyRepositoryDescriptor MasterTimeout(Time mastertimeout);
    public VerifyRepositoryDescriptor ClusterManagerTimeout(Time timeout);
    public VerifyRepositoryDescriptor Timeout(Time timeout);
}
public class OpenSearch.Client.VerifyRepositoryRequest : PlainRequestBase`1<VerifyRepositoryRequestParameters> {
    protected IVerifyRepositoryRequest Self { get; }
    internal ApiUrls ApiUrls { get; }
    [IgnoreDataMemberAttribute]
private Name OpenSearch.Client.IVerifyRepositoryRequest.RepositoryName { get; }
    public Time MasterTimeout { get; public set; }
    public Time ClusterManagerTimeout { get; public set; }
    public Time Timeout { get; public set; }
    public VerifyRepositoryRequest(Name repository);
    protected IVerifyRepositoryRequest get_Self();
    internal virtual ApiUrls get_ApiUrls();
    private sealed virtual override Name OpenSearch.Client.IVerifyRepositoryRequest.get_RepositoryName();
    public Time get_MasterTimeout();
    public void set_MasterTimeout(Time value);
    public Time get_ClusterManagerTimeout();
    public void set_ClusterManagerTimeout(Time value);
    public Time get_Timeout();
    public void set_Timeout(Time value);
}
[DataContractAttribute]
public class OpenSearch.Client.VerifyRepositoryResponse : ResponseBase {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, CompactNodeInfo> <Nodes>k__BackingField;
    [DataMemberAttribute]
[JsonFormatterAttribute("OpenSearch.Client.VerbatimInterfaceReadOnlyDictionaryKeysFormatter`2<System.String,OpenSearch.Client.CompactNodeInfo>")]
public IReadOnlyDictionary`2<string, CompactNodeInfo> Nodes { get; internal set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, CompactNodeInfo> get_Nodes();
    [CompilerGeneratedAttribute]
internal void set_Nodes(IReadOnlyDictionary`2<string, CompactNodeInfo> value);
}
public enum OpenSearch.Client.VisitorScope : Enum {
    public int value__;
    public static VisitorScope Unknown;
    public static VisitorScope Query;
    public static VisitorScope Filter;
    public static VisitorScope Must;
    public static VisitorScope MustNot;
    public static VisitorScope Should;
    public static VisitorScope PositiveQuery;
    public static VisitorScope NegativeQuery;
    public static VisitorScope Span;
}
[DataContractAttribute]
public class OpenSearch.Client.WarmerStats : object {
    [CompilerGeneratedAttribute]
private long <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TotalTime>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalTimeInMilliseconds>k__BackingField;
    [DataMemberAttribute]
public long Current { get; public set; }
    [DataMemberAttribute]
public long Total { get; public set; }
    [DataMemberAttribute]
public string TotalTime { get; public set; }
    [DataMemberAttribute]
public long TotalTimeInMilliseconds { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(long value);
    [CompilerGeneratedAttribute]
public long get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(long value);
    [CompilerGeneratedAttribute]
public string get_TotalTime();
    [CompilerGeneratedAttribute]
public void set_TotalTime(string value);
    [CompilerGeneratedAttribute]
public long get_TotalTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public void set_TotalTimeInMilliseconds(long value);
}
public class OpenSearch.Client.WeightedAverageAggregation : AggregationBase {
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private IWeightedAverageValue <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ValueType> <ValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private IWeightedAverageValue <Weight>k__BackingField;
    public string Format { get; public set; }
    public IWeightedAverageValue Value { get; public set; }
    public Nullable`1<ValueType> ValueType { get; public set; }
    public IWeightedAverageValue Weight { get; public set; }
    public WeightedAverageAggregation(string name);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Format();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Format(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IWeightedAverageValue get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(IWeightedAverageValue value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ValueType> get_ValueType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ValueType(Nullable`1<ValueType> value);
    [CompilerGeneratedAttribute]
public sealed virtual IWeightedAverageValue get_Weight();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Weight(IWeightedAverageValue value);
    internal virtual void WrapInContainer(AggregationContainer c);
}
public class OpenSearch.Client.WeightedAverageAggregationDescriptor`1 : DescriptorBase`2<WeightedAverageAggregationDescriptor`1<T>, IWeightedAverageAggregation> {
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IWeightedAverageAggregation.Format>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <OpenSearch.Client.IAggregation.Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IAggregation.Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IWeightedAverageValue <OpenSearch.Client.IWeightedAverageAggregation.Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ValueType> <OpenSearch.Client.IWeightedAverageAggregation.ValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private IWeightedAverageValue <OpenSearch.Client.IWeightedAverageAggregation.Weight>k__BackingField;
    private string OpenSearch.Client.IWeightedAverageAggregation.Format { get; private set; }
    private IDictionary`2<string, object> OpenSearch.Client.IAggregation.Meta { get; private set; }
    private string OpenSearch.Client.IAggregation.Name { get; private set; }
    private IWeightedAverageValue OpenSearch.Client.IWeightedAverageAggregation.Value { get; private set; }
    private Nullable`1<ValueType> OpenSearch.Client.IWeightedAverageAggregation.ValueType { get; private set; }
    private IWeightedAverageValue OpenSearch.Client.IWeightedAverageAggregation.Weight { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IWeightedAverageAggregation.get_Format();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWeightedAverageAggregation.set_Format(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IDictionary`2<string, object> OpenSearch.Client.IAggregation.get_Meta();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Meta(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IAggregation.get_Name();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IAggregation.set_Name(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IWeightedAverageValue OpenSearch.Client.IWeightedAverageAggregation.get_Value();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWeightedAverageAggregation.set_Value(IWeightedAverageValue value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<ValueType> OpenSearch.Client.IWeightedAverageAggregation.get_ValueType();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWeightedAverageAggregation.set_ValueType(Nullable`1<ValueType> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IWeightedAverageValue OpenSearch.Client.IWeightedAverageAggregation.get_Weight();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWeightedAverageAggregation.set_Weight(IWeightedAverageValue value);
    public WeightedAverageAggregationDescriptor`1<T> Meta(Func`2<FluentDictionary`2<string, object>, FluentDictionary`2<string, object>> selector);
    public WeightedAverageAggregationDescriptor`1<T> Value(Func`2<WeightedAverageValueDescriptor`1<T>, IWeightedAverageValue> selector);
    public WeightedAverageAggregationDescriptor`1<T> Weight(Func`2<WeightedAverageValueDescriptor`1<T>, IWeightedAverageValue> selector);
    public WeightedAverageAggregationDescriptor`1<T> Format(string format);
    public WeightedAverageAggregationDescriptor`1<T> ValueType(Nullable`1<ValueType> valueType);
}
public class OpenSearch.Client.WeightedAverageValue : object {
    [CompilerGeneratedAttribute]
private Field <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <Script>k__BackingField;
    public Field Field { get; public set; }
    public Nullable`1<double> Missing { get; public set; }
    public IScript Script { get; public set; }
    public WeightedAverageValue(Field field);
    public WeightedAverageValue(IScript script);
    [CompilerGeneratedAttribute]
public sealed virtual Field get_Field();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Field(Field value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Missing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Missing(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual IScript get_Script();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Script(IScript value);
}
public class OpenSearch.Client.WeightedAverageValueDescriptor`1 : DescriptorBase`2<WeightedAverageValueDescriptor`1<T>, IWeightedAverageValue> {
    [CompilerGeneratedAttribute]
private Field <OpenSearch.Client.IWeightedAverageValue.Field>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <OpenSearch.Client.IWeightedAverageValue.Missing>k__BackingField;
    [CompilerGeneratedAttribute]
private IScript <OpenSearch.Client.IWeightedAverageValue.Script>k__BackingField;
    private Field OpenSearch.Client.IWeightedAverageValue.Field { get; private set; }
    private Nullable`1<double> OpenSearch.Client.IWeightedAverageValue.Missing { get; private set; }
    private IScript OpenSearch.Client.IWeightedAverageValue.Script { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override Field OpenSearch.Client.IWeightedAverageValue.get_Field();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWeightedAverageValue.set_Field(Field value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<double> OpenSearch.Client.IWeightedAverageValue.get_Missing();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWeightedAverageValue.set_Missing(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IScript OpenSearch.Client.IWeightedAverageValue.get_Script();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWeightedAverageValue.set_Script(IScript value);
    public WeightedAverageValueDescriptor`1<T> Field(Field field);
    public WeightedAverageValueDescriptor`1<T> Field(Expression`1<Func`2<T, TValue>> field);
    public virtual WeightedAverageValueDescriptor`1<T> Script(string script);
    public virtual WeightedAverageValueDescriptor`1<T> Script(Func`2<ScriptDescriptor, IScript> scriptSelector);
    public WeightedAverageValueDescriptor`1<T> Missing(Nullable`1<double> missing);
}
public class OpenSearch.Client.WeightFunction : FunctionScoreFunctionBase {
}
public class OpenSearch.Client.WeightFunctionDescriptor`1 : FunctionScoreFunctionDescriptorBase`3<WeightFunctionDescriptor`1<T>, IWeightFunction, T> {
}
internal class OpenSearch.Client.WellKnownTextTokenizer : object {
    public static int CarriageReturn;
    private static int CharacterTypesLength;
    public static int Comma;
    public static int Comment;
    public static int Dot;
    public static string Empty;
    public static int Linefeed;
    public static int LParen;
    public static int Minus;
    public static string NaN;
    private static int NeedChar;
    public static int Plus;
    public static int RParen;
    private static CharacterType[] CharacterTypes;
    private List`1<char> _buffer;
    private TextReader _reader;
    private int _peekChar;
    private bool _pushed;
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenType <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenValue>k__BackingField;
    public int LineNumber { get; private set; }
    public int Position { get; private set; }
    public TokenType TokenType { get; private set; }
    public string TokenValue { get; private set; }
    private static WellKnownTextTokenizer();
    public WellKnownTextTokenizer(TextReader reader);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
private void set_LineNumber(int value);
    [CompilerGeneratedAttribute]
public int get_Position();
    [CompilerGeneratedAttribute]
private void set_Position(int value);
    [CompilerGeneratedAttribute]
public TokenType get_TokenType();
    [CompilerGeneratedAttribute]
private void set_TokenType(TokenType value);
    [CompilerGeneratedAttribute]
public string get_TokenValue();
    [CompilerGeneratedAttribute]
private void set_TokenValue(string value);
    public sealed virtual void Dispose();
    private static void Chars(int low, int high, CharacterType type);
    public string TokenString();
    private int Read();
    public TokenType PeekToken();
    public TokenType NextToken();
}
public class OpenSearch.Client.WhitespaceAnalyzer : AnalyzerBase {
}
public class OpenSearch.Client.WhitespaceAnalyzerDescriptor : AnalyzerDescriptorBase`2<WhitespaceAnalyzerDescriptor, IWhitespaceAnalyzer> {
    protected string Type { get; }
    protected virtual string get_Type();
}
public class OpenSearch.Client.WhitespaceTokenizer : TokenizerBase {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxTokenLength>k__BackingField;
    public Nullable`1<int> MaxTokenLength { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxTokenLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxTokenLength(Nullable`1<int> value);
}
public class OpenSearch.Client.WhitespaceTokenizerDescriptor : TokenizerDescriptorBase`2<WhitespaceTokenizerDescriptor, IWhitespaceTokenizer> {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OpenSearch.Client.IWhitespaceTokenizer.MaxTokenLength>k__BackingField;
    protected string Type { get; }
    private Nullable`1<int> OpenSearch.Client.IWhitespaceTokenizer.MaxTokenLength { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> OpenSearch.Client.IWhitespaceTokenizer.get_MaxTokenLength();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWhitespaceTokenizer.set_MaxTokenLength(Nullable`1<int> value);
    public WhitespaceTokenizerDescriptor MaxTokenLength(Nullable`1<int> maxTokenLength);
}
public class OpenSearch.Client.WildcardQuery : FieldNameQueryBase {
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <Rewrite>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CaseInsensitive>k__BackingField;
    public MultiTermQueryRewrite Rewrite { get; public set; }
    public object Value { get; public set; }
    public Nullable`1<bool> CaseInsensitive { get; public set; }
    protected bool Conditionless { get; }
    [CompilerGeneratedAttribute]
public sealed virtual MultiTermQueryRewrite get_Rewrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Rewrite(MultiTermQueryRewrite value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_CaseInsensitive();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CaseInsensitive(Nullable`1<bool> value);
    protected virtual bool get_Conditionless();
    internal virtual void InternalWrapInContainer(IQueryContainer c);
}
public class OpenSearch.Client.WildcardQuery`2 : WildcardQuery {
    public WildcardQuery`2(Expression`1<Func`2<T, TValue>> field);
}
public class OpenSearch.Client.WildcardQueryDescriptor`1 : TermQueryDescriptorBase`3<WildcardQueryDescriptor`1<T>, IWildcardQuery, T> {
    [CompilerGeneratedAttribute]
private MultiTermQueryRewrite <OpenSearch.Client.IWildcardQuery.Rewrite>k__BackingField;
    private MultiTermQueryRewrite OpenSearch.Client.IWildcardQuery.Rewrite { get; private set; }
    [CompilerGeneratedAttribute]
private sealed virtual override MultiTermQueryRewrite OpenSearch.Client.IWildcardQuery.get_Rewrite();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWildcardQuery.set_Rewrite(MultiTermQueryRewrite value);
    public WildcardQueryDescriptor`1<T> Rewrite(MultiTermQueryRewrite rewrite);
}
public class OpenSearch.Client.WordDelimiterGraphTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AdjustOffsets>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CatenateAll>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CatenateNumbers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CatenateWords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GenerateNumberParts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GenerateWordParts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreKeywords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreserveOriginal>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ProtectedWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProtectedWordsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SplitOnCaseChange>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SplitOnNumerics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <StemEnglishPossessive>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <TypeTable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeTablePath>k__BackingField;
    public Nullable`1<bool> AdjustOffsets { get; public set; }
    public Nullable`1<bool> CatenateAll { get; public set; }
    public Nullable`1<bool> CatenateNumbers { get; public set; }
    public Nullable`1<bool> CatenateWords { get; public set; }
    public Nullable`1<bool> GenerateNumberParts { get; public set; }
    public Nullable`1<bool> GenerateWordParts { get; public set; }
    public Nullable`1<bool> IgnoreKeywords { get; public set; }
    public Nullable`1<bool> PreserveOriginal { get; public set; }
    public IEnumerable`1<string> ProtectedWords { get; public set; }
    public string ProtectedWordsPath { get; public set; }
    public Nullable`1<bool> SplitOnCaseChange { get; public set; }
    public Nullable`1<bool> SplitOnNumerics { get; public set; }
    public Nullable`1<bool> StemEnglishPossessive { get; public set; }
    public IEnumerable`1<string> TypeTable { get; public set; }
    public string TypeTablePath { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AdjustOffsets();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdjustOffsets(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_CatenateAll();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CatenateAll(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_CatenateNumbers();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CatenateNumbers(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_CatenateWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CatenateWords(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_GenerateNumberParts();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GenerateNumberParts(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_GenerateWordParts();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GenerateWordParts(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IgnoreKeywords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreKeywords(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PreserveOriginal();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreserveOriginal(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_ProtectedWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProtectedWords(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProtectedWordsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProtectedWordsPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SplitOnCaseChange();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SplitOnCaseChange(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SplitOnNumerics();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SplitOnNumerics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_StemEnglishPossessive();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StemEnglishPossessive(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_TypeTable();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TypeTable(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TypeTablePath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TypeTablePath(string value);
}
public class OpenSearch.Client.WordDelimiterGraphTokenFilterDescriptor : TokenFilterDescriptorBase`2<WordDelimiterGraphTokenFilterDescriptor, IWordDelimiterGraphTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.AdjustOffsets>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.CatenateAll>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.CatenateNumbers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.CatenateWords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.GenerateNumberParts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.GenerateWordParts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.IgnoreKeywords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.PreserveOriginal>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.ProtectedWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IWordDelimiterGraphTokenFilter.ProtectedWordsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.SplitOnCaseChange>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.SplitOnNumerics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.StemEnglishPossessive>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IWordDelimiterGraphTokenFilter.TypeTable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IWordDelimiterGraphTokenFilter.TypeTablePath>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.AdjustOffsets { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.CatenateAll { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.CatenateNumbers { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.CatenateWords { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.GenerateNumberParts { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.GenerateWordParts { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.IgnoreKeywords { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.PreserveOriginal { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IWordDelimiterGraphTokenFilter.ProtectedWords { get; private set; }
    private string OpenSearch.Client.IWordDelimiterGraphTokenFilter.ProtectedWordsPath { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.SplitOnCaseChange { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.SplitOnNumerics { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.StemEnglishPossessive { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IWordDelimiterGraphTokenFilter.TypeTable { get; private set; }
    private string OpenSearch.Client.IWordDelimiterGraphTokenFilter.TypeTablePath { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_AdjustOffsets();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_AdjustOffsets(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_CatenateAll();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_CatenateAll(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_CatenateNumbers();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_CatenateNumbers(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_CatenateWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_CatenateWords(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_GenerateNumberParts();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_GenerateNumberParts(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_GenerateWordParts();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_GenerateWordParts(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_IgnoreKeywords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_IgnoreKeywords(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_PreserveOriginal();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_PreserveOriginal(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_ProtectedWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_ProtectedWords(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_ProtectedWordsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_ProtectedWordsPath(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_SplitOnCaseChange();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_SplitOnCaseChange(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_SplitOnNumerics();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_SplitOnNumerics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_StemEnglishPossessive();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_StemEnglishPossessive(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_TypeTable();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_TypeTable(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IWordDelimiterGraphTokenFilter.get_TypeTablePath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterGraphTokenFilter.set_TypeTablePath(string value);
    public WordDelimiterGraphTokenFilterDescriptor GenerateWordParts(Nullable`1<bool> generateWordParts);
    public WordDelimiterGraphTokenFilterDescriptor GenerateNumberParts(Nullable`1<bool> generateNumberParts);
    public WordDelimiterGraphTokenFilterDescriptor IgnoreKeywords(Nullable`1<bool> ignoreKeywords);
    public WordDelimiterGraphTokenFilterDescriptor CatenateWords(Nullable`1<bool> catenateWords);
    public WordDelimiterGraphTokenFilterDescriptor CatenateNumbers(Nullable`1<bool> catenateNumbers);
    public WordDelimiterGraphTokenFilterDescriptor AdjustOffsets(Nullable`1<bool> adjustOffsets);
    public WordDelimiterGraphTokenFilterDescriptor CatenateAll(Nullable`1<bool> catenateAll);
    public WordDelimiterGraphTokenFilterDescriptor SplitOnCaseChange(Nullable`1<bool> split);
    public WordDelimiterGraphTokenFilterDescriptor SplitOnNumerics(Nullable`1<bool> split);
    public WordDelimiterGraphTokenFilterDescriptor PreserveOriginal(Nullable`1<bool> preserve);
    public WordDelimiterGraphTokenFilterDescriptor StemEnglishPossessive(Nullable`1<bool> stem);
    public WordDelimiterGraphTokenFilterDescriptor ProtectedWords(IEnumerable`1<string> protectedWords);
    public WordDelimiterGraphTokenFilterDescriptor ProtectedWords(String[] protectedWords);
    public WordDelimiterGraphTokenFilterDescriptor ProtectedWordsPath(string path);
    public WordDelimiterGraphTokenFilterDescriptor TypeTable(IEnumerable`1<string> typeTable);
    public WordDelimiterGraphTokenFilterDescriptor TypeTable(String[] typeTable);
    public WordDelimiterGraphTokenFilterDescriptor TypeTablePath(string path);
}
public class OpenSearch.Client.WordDelimiterTokenFilter : TokenFilterBase {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CatenateAll>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CatenateNumbers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CatenateWords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GenerateNumberParts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GenerateWordParts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PreserveOriginal>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ProtectedWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProtectedWordsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SplitOnCaseChange>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SplitOnNumerics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <StemEnglishPossessive>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <TypeTable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeTablePath>k__BackingField;
    public Nullable`1<bool> CatenateAll { get; public set; }
    public Nullable`1<bool> CatenateNumbers { get; public set; }
    public Nullable`1<bool> CatenateWords { get; public set; }
    public Nullable`1<bool> GenerateNumberParts { get; public set; }
    public Nullable`1<bool> GenerateWordParts { get; public set; }
    public Nullable`1<bool> PreserveOriginal { get; public set; }
    public IEnumerable`1<string> ProtectedWords { get; public set; }
    public string ProtectedWordsPath { get; public set; }
    public Nullable`1<bool> SplitOnCaseChange { get; public set; }
    public Nullable`1<bool> SplitOnNumerics { get; public set; }
    public Nullable`1<bool> StemEnglishPossessive { get; public set; }
    public IEnumerable`1<string> TypeTable { get; public set; }
    public string TypeTablePath { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_CatenateAll();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CatenateAll(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_CatenateNumbers();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CatenateNumbers(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_CatenateWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CatenateWords(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_GenerateNumberParts();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GenerateNumberParts(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_GenerateWordParts();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GenerateWordParts(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PreserveOriginal();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreserveOriginal(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_ProtectedWords();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProtectedWords(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProtectedWordsPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProtectedWordsPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SplitOnCaseChange();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SplitOnCaseChange(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SplitOnNumerics();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SplitOnNumerics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_StemEnglishPossessive();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StemEnglishPossessive(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_TypeTable();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TypeTable(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TypeTablePath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TypeTablePath(string value);
}
public class OpenSearch.Client.WordDelimiterTokenFilterDescriptor : TokenFilterDescriptorBase`2<WordDelimiterTokenFilterDescriptor, IWordDelimiterTokenFilter> {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterTokenFilter.CatenateAll>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterTokenFilter.CatenateNumbers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterTokenFilter.CatenateWords>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterTokenFilter.GenerateNumberParts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterTokenFilter.GenerateWordParts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterTokenFilter.PreserveOriginal>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IWordDelimiterTokenFilter.ProtectedWords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IWordDelimiterTokenFilter.ProtectedWordsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterTokenFilter.SplitOnCaseChange>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterTokenFilter.SplitOnNumerics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OpenSearch.Client.IWordDelimiterTokenFilter.StemEnglishPossessive>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <OpenSearch.Client.IWordDelimiterTokenFilter.TypeTable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpenSearch.Client.IWordDelimiterTokenFilter.TypeTablePath>k__BackingField;
    protected string Type { get; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.CatenateAll { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.CatenateNumbers { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.CatenateWords { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.GenerateNumberParts { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.GenerateWordParts { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.PreserveOriginal { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IWordDelimiterTokenFilter.ProtectedWords { get; private set; }
    private string OpenSearch.Client.IWordDelimiterTokenFilter.ProtectedWordsPath { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.SplitOnCaseChange { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.SplitOnNumerics { get; private set; }
    private Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.StemEnglishPossessive { get; private set; }
    private IEnumerable`1<string> OpenSearch.Client.IWordDelimiterTokenFilter.TypeTable { get; private set; }
    private string OpenSearch.Client.IWordDelimiterTokenFilter.TypeTablePath { get; private set; }
    protected virtual string get_Type();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.get_CatenateAll();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_CatenateAll(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.get_CatenateNumbers();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_CatenateNumbers(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.get_CatenateWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_CatenateWords(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.get_GenerateNumberParts();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_GenerateNumberParts(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.get_GenerateWordParts();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_GenerateWordParts(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.get_PreserveOriginal();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_PreserveOriginal(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IWordDelimiterTokenFilter.get_ProtectedWords();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_ProtectedWords(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IWordDelimiterTokenFilter.get_ProtectedWordsPath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_ProtectedWordsPath(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.get_SplitOnCaseChange();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_SplitOnCaseChange(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.get_SplitOnNumerics();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_SplitOnNumerics(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> OpenSearch.Client.IWordDelimiterTokenFilter.get_StemEnglishPossessive();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_StemEnglishPossessive(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override IEnumerable`1<string> OpenSearch.Client.IWordDelimiterTokenFilter.get_TypeTable();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_TypeTable(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string OpenSearch.Client.IWordDelimiterTokenFilter.get_TypeTablePath();
    [CompilerGeneratedAttribute]
private sealed virtual override void OpenSearch.Client.IWordDelimiterTokenFilter.set_TypeTablePath(string value);
    public WordDelimiterTokenFilterDescriptor GenerateWordParts(Nullable`1<bool> generateWordParts);
    public WordDelimiterTokenFilterDescriptor GenerateNumberParts(Nullable`1<bool> generateNumberParts);
    public WordDelimiterTokenFilterDescriptor CatenateWords(Nullable`1<bool> catenateWords);
    public WordDelimiterTokenFilterDescriptor CatenateNumbers(Nullable`1<bool> catenateNumbers);
    public WordDelimiterTokenFilterDescriptor CatenateAll(Nullable`1<bool> catenateAll);
    public WordDelimiterTokenFilterDescriptor SplitOnCaseChange(Nullable`1<bool> split);
    public WordDelimiterTokenFilterDescriptor SplitOnNumerics(Nullable`1<bool> split);
    public WordDelimiterTokenFilterDescriptor PreserveOriginal(Nullable`1<bool> preserve);
    public WordDelimiterTokenFilterDescriptor StemEnglishPossessive(Nullable`1<bool> stem);
    public WordDelimiterTokenFilterDescriptor ProtectedWords(IEnumerable`1<string> protectedWords);
    public WordDelimiterTokenFilterDescriptor ProtectedWords(String[] protectedWords);
    public WordDelimiterTokenFilterDescriptor ProtectedWordsPath(string path);
    public WordDelimiterTokenFilterDescriptor TypeTable(IEnumerable`1<string> typeTable);
    public WordDelimiterTokenFilterDescriptor TypeTable(String[] typeTable);
    public WordDelimiterTokenFilterDescriptor TypeTablePath(string path);
}
[DataContractAttribute]
public abstract class OpenSearch.Client.WriteResponseBase : ResponseBase {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private long <PrimaryTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private Result <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private ShardStatistics <Shards>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    [DataMemberAttribute]
public string Id { get; internal set; }
    [DataMemberAttribute]
public string Index { get; internal set; }
    [DataMemberAttribute]
public long PrimaryTerm { get; internal set; }
    [DataMemberAttribute]
public Result Result { get; internal set; }
    [DataMemberAttribute]
public long SequenceNumber { get; internal set; }
    [DataMemberAttribute]
public ShardStatistics Shards { get; internal set; }
    [DataMemberAttribute]
public string Type { get; internal set; }
    [DataMemberAttribute]
public long Version { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public long get_PrimaryTerm();
    [CompilerGeneratedAttribute]
internal void set_PrimaryTerm(long value);
    [CompilerGeneratedAttribute]
public Result get_Result();
    [CompilerGeneratedAttribute]
internal void set_Result(Result value);
    [CompilerGeneratedAttribute]
public long get_SequenceNumber();
    [CompilerGeneratedAttribute]
internal void set_SequenceNumber(long value);
    [CompilerGeneratedAttribute]
public ShardStatistics get_Shards();
    [CompilerGeneratedAttribute]
internal void set_Shards(ShardStatistics value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
    [CompilerGeneratedAttribute]
public long get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(long value);
}
[StringEnumAttribute]
public enum OpenSearch.Client.ZeroTermsQuery : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ZeroTermsQuery All;
    [EnumMemberAttribute]
public static ZeroTermsQuery None;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
