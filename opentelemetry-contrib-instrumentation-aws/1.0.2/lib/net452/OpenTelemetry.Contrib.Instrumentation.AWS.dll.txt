[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class OpenTelemetry.Contrib.Instrumentation.AWS.AWSClientInstrumentationOptions : object {
    [CompilerGeneratedAttribute]
private bool <SuppressDownstreamInstrumentation>k__BackingField;
    public bool SuppressDownstreamInstrumentation { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_SuppressDownstreamInstrumentation();
    [CompilerGeneratedAttribute]
public void set_SuppressDownstreamInstrumentation(bool value);
}
internal class OpenTelemetry.Contrib.Instrumentation.AWS.Implementation.AWSClientsInstrumentation : object {
    public AWSClientsInstrumentation(AWSClientInstrumentationOptions options);
}
internal static class OpenTelemetry.Contrib.Instrumentation.AWS.Implementation.AWSSemanticConventions : object {
    public static string AttributeAWSServiceName;
    public static string AttributeAWSOperationName;
    public static string AttributeAWSRegion;
    public static string AttributeAWSRequestId;
    public static string AttributeAWSDynamoTableName;
    public static string AttributeAWSSQSQueueUrl;
    public static string AttributeHttpStatusCode;
    public static string AttributeHttpResponseContentLength;
    public static string AttributeValueDynamoDb;
}
internal class OpenTelemetry.Contrib.Instrumentation.AWS.Implementation.AWSServiceHelper : object {
    internal static IReadOnlyDictionary`2<string, string> ServiceParameterMap;
    internal static IReadOnlyDictionary`2<string, string> ParameterAttributeMap;
    private static string DynamoDbService;
    private static string SQSService;
    private static AWSServiceHelper();
    internal static string GetAWSServiceName(IRequestContext requestContext);
    internal static string GetAWSOperationName(IRequestContext requestContext);
    internal static bool IsDynamoDbService(string service);
}
internal class OpenTelemetry.Contrib.Instrumentation.AWS.Implementation.AWSTracingPipelineCustomizer : object {
    private AWSClientInstrumentationOptions options;
    public string UniqueName { get; }
    public AWSTracingPipelineCustomizer(AWSClientInstrumentationOptions options);
    public sealed virtual string get_UniqueName();
    public sealed virtual void Customize(Type serviceClientType, RuntimePipeline pipeline);
}
internal class OpenTelemetry.Contrib.Instrumentation.AWS.Implementation.AWSTracingPipelineHandler : PipelineHandler {
    internal static string ActivitySourceName;
    private static AWSXRayPropagator AwsPropagator;
    private static Action`3<IDictionary`2<string, string>, string, string> Setter;
    private static ActivitySource AWSSDKActivitySource;
    private AWSClientInstrumentationOptions options;
    public AWSTracingPipelineHandler(AWSClientInstrumentationOptions options);
    private static AWSTracingPipelineHandler();
    public virtual void InvokeSync(IExecutionContext executionContext);
    [AsyncStateMachineAttribute("OpenTelemetry.Contrib.Instrumentation.AWS.Implementation.AWSTracingPipelineHandler/<InvokeAsync>d__7`1")]
public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    private Activity ProcessBeginRequest(IExecutionContext executionContext);
    private void ProcessEndRequest(IExecutionContext executionContext, Activity activity);
    private void ProcessException(Activity activity, Exception ex);
    private void AddRequestSpecificInformation(Activity activity, IRequestContext requestContext, string service);
    private void AddStatusCodeToActivity(Activity activity, int status_code);
    private string FetchRequestId(IRequestContext requestContext, IResponseContext responseContext);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<T> <>n__0(IExecutionContext executionContext);
}
internal class OpenTelemetry.Contrib.Instrumentation.AWS.Implementation.Utils : object {
    internal static object GetTagValue(Activity activity, string tagName);
    internal static string RemoveSuffix(string originalString, string suffix);
    internal static string RemoveAmazonPrefixFromServiceName(string serviceName);
    private static string RemovePrefix(string originalString, string prefix);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class OpenTelemetry.Internal.Guard : object {
    [DebuggerHiddenAttribute]
public static void ThrowIfNull(object value, string paramName);
    [DebuggerHiddenAttribute]
public static void ThrowIfNullOrEmpty(string value, string paramName);
    [DebuggerHiddenAttribute]
public static void ThrowIfNullOrWhitespace(string value, string paramName);
    [DebuggerHiddenAttribute]
public static void ThrowIfZero(int value, string message, string paramName);
    [NullableContextAttribute("2")]
[DebuggerHiddenAttribute]
public static void ThrowIfInvalidTimeout(int value, string paramName);
    [NullableContextAttribute("2")]
[DebuggerHiddenAttribute]
public static void ThrowIfOutOfRange(int value, string paramName, int min, int max, string minName, string maxName, string message);
    [NullableContextAttribute("2")]
[DebuggerHiddenAttribute]
public static void ThrowIfOutOfRange(double value, string paramName, double min, double max, string minName, string maxName, string message);
    [DebuggerHiddenAttribute]
public static T ThrowIfNotOfType(object value, string paramName);
    [DebuggerHiddenAttribute]
private static void Range(T value, string paramName, T min, T max, string minName, string maxName, string message);
}
internal static class OpenTelemetry.Trace.SemanticConventions : object {
    public static string AttributeNetTransport;
    public static string AttributeNetPeerIp;
    public static string AttributeNetPeerPort;
    public static string AttributeNetPeerName;
    public static string AttributeNetHostIp;
    public static string AttributeNetHostPort;
    public static string AttributeNetHostName;
    public static string AttributeEnduserId;
    public static string AttributeEnduserRole;
    public static string AttributeEnduserScope;
    public static string AttributePeerService;
    public static string AttributeHttpMethod;
    public static string AttributeHttpUrl;
    public static string AttributeHttpTarget;
    public static string AttributeHttpHost;
    public static string AttributeHttpScheme;
    public static string AttributeHttpStatusCode;
    public static string AttributeHttpStatusText;
    public static string AttributeHttpFlavor;
    public static string AttributeHttpServerName;
    public static string AttributeHttpRoute;
    public static string AttributeHttpClientIP;
    public static string AttributeHttpUserAgent;
    public static string AttributeHttpRequestContentLength;
    public static string AttributeHttpRequestContentLengthUncompressed;
    public static string AttributeHttpResponseContentLength;
    public static string AttributeHttpResponseContentLengthUncompressed;
    public static string AttributeDbSystem;
    public static string AttributeDbConnectionString;
    public static string AttributeDbUser;
    public static string AttributeDbMsSqlInstanceName;
    public static string AttributeDbJdbcDriverClassName;
    public static string AttributeDbName;
    public static string AttributeDbStatement;
    public static string AttributeDbOperation;
    public static string AttributeDbInstance;
    public static string AttributeDbUrl;
    public static string AttributeDbCassandraKeyspace;
    public static string AttributeDbHBaseNamespace;
    public static string AttributeDbRedisDatabaseIndex;
    public static string AttributeDbMongoDbCollection;
    public static string AttributeRpcSystem;
    public static string AttributeRpcService;
    public static string AttributeRpcMethod;
    public static string AttributeRpcGrpcStatusCode;
    public static string AttributeMessageType;
    public static string AttributeMessageId;
    public static string AttributeMessageCompressedSize;
    public static string AttributeMessageUncompressedSize;
    public static string AttributeFaasTrigger;
    public static string AttributeFaasExecution;
    public static string AttributeFaasDocumentCollection;
    public static string AttributeFaasDocumentOperation;
    public static string AttributeFaasDocumentTime;
    public static string AttributeFaasDocumentName;
    public static string AttributeFaasTime;
    public static string AttributeFaasCron;
    public static string AttributeMessagingSystem;
    public static string AttributeMessagingDestination;
    public static string AttributeMessagingDestinationKind;
    public static string AttributeMessagingTempDestination;
    public static string AttributeMessagingProtocol;
    public static string AttributeMessagingProtocolVersion;
    public static string AttributeMessagingUrl;
    public static string AttributeMessagingMessageId;
    public static string AttributeMessagingConversationId;
    public static string AttributeMessagingPayloadSize;
    public static string AttributeMessagingPayloadCompressedSize;
    public static string AttributeMessagingOperation;
    public static string AttributeExceptionEventName;
    public static string AttributeExceptionType;
    public static string AttributeExceptionMessage;
    public static string AttributeExceptionStacktrace;
}
[ExtensionAttribute]
public static class OpenTelemetry.Trace.TracerProviderBuilderExtensions : object {
    [ExtensionAttribute]
public static TracerProviderBuilder AddAWSInstrumentation(TracerProviderBuilder builder, Action`1<AWSClientInstrumentationOptions> configure);
}
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
