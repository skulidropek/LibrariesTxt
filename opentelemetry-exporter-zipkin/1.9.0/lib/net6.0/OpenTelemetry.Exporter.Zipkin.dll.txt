[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider : ConfigurationProvider {
    private string _prefix;
    private string _normalizedPrefix;
    [NullableContextAttribute("2")]
public EnvironmentVariablesConfigurationProvider(string prefix);
    public virtual void Load();
    public virtual string ToString();
    internal void Load(IDictionary envVariables);
    private void AddIfNormalizedKeyMatchesPrefix(Dictionary`2<string, string> data, string normalizedKey, string value);
    private static string Normalize(string key);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource : object {
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    public string Prefix { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(string value);
    [NullableContextAttribute("1")]
public sealed virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.Extensions.Configuration.EnvironmentVariablesExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddEnvironmentVariables(IConfigurationBuilder configurationBuilder);
    [ExtensionAttribute]
public static IConfigurationBuilder AddEnvironmentVariables(IConfigurationBuilder configurationBuilder, string prefix);
    [ExtensionAttribute]
public static IConfigurationBuilder AddEnvironmentVariables(IConfigurationBuilder builder, Action`1<EnvironmentVariablesConfigurationSource> configureSource);
}
[NullableContextAttribute("1")]
internal interface Microsoft.Extensions.Configuration.IConfigurationExtensionsLogger {
    public abstract virtual void LogInvalidConfigurationValue(string key, string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.Extensions.Configuration.OpenTelemetryConfigurationExtensions : object {
    [ExtensionAttribute]
public static bool TryGetStringValue(IConfiguration configuration, string key, String& value);
    [ExtensionAttribute]
public static bool TryGetUriValue(IConfiguration configuration, IConfigurationExtensionsLogger logger, string key, Uri& value);
    [ExtensionAttribute]
public static bool TryGetIntValue(IConfiguration configuration, IConfigurationExtensionsLogger logger, string key, Int32& value);
    [ExtensionAttribute]
public static bool TryGetBoolValue(IConfiguration configuration, IConfigurationExtensionsLogger logger, string key, Boolean& value);
    [ExtensionAttribute]
public static bool TryGetValue(IConfiguration configuration, IConfigurationExtensionsLogger logger, string key, TryParseFunc`1<T> tryParseFunc, T& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.Extensions.DependencyInjection.DelegatingOptionsFactoryServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection RegisterOptionsFactory(IServiceCollection services, Func`2<IConfiguration, T> optionsFactoryFunc);
    [ExtensionAttribute]
public static IServiceCollection RegisterOptionsFactory(IServiceCollection services, Func`4<IServiceProvider, IConfiguration, string, T> optionsFactoryFunc);
    [ExtensionAttribute]
public static IServiceCollection DisableOptionsReloading(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Options.DelegatingOptionsFactory`1 : object {
    private Func`3<IConfiguration, string, TOptions> optionsFactoryFunc;
    private IConfiguration configuration;
    private IConfigureOptions`1[] _setups;
    private IPostConfigureOptions`1[] _postConfigures;
    private IValidateOptions`1[] _validations;
    public DelegatingOptionsFactory`1(Func`3<IConfiguration, string, TOptions> optionsFactoryFunc, IConfiguration configuration, IEnumerable`1<IConfigureOptions`1<TOptions>> setups, IEnumerable`1<IPostConfigureOptions`1<TOptions>> postConfigures, IEnumerable`1<IValidateOptions`1<TOptions>> validations);
    public sealed virtual TOptions Create(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.Options.SingletonOptionsManager`1 : object {
    private TOptions instance;
    public TOptions CurrentValue { get; }
    public TOptions Value { get; }
    public SingletonOptionsManager`1(IOptions`1<TOptions> options);
    public sealed virtual TOptions get_CurrentValue();
    public sealed virtual TOptions get_Value();
    public sealed virtual TOptions Get(string name);
    [NullableContextAttribute("2")]
public sealed virtual IDisposable OnChange(Action`2<TOptions, string> listener);
}
internal static class OpenTelemetry.Exporter.PeerServiceResolver : object {
    [NullableAttribute("1")]
private static Dictionary`2<string, int> PeerServiceKeyResolutionDictionary;
    private static PeerServiceResolver();
    public static void InspectTag(T& state, string key, string value);
    public static void InspectTag(T& state, string key, long value);
    public static void Resolve(T& state, String& peerServiceName, Boolean& addAsTag);
}
[ExtensionAttribute]
internal static class OpenTelemetry.Exporter.Zipkin.Implementation.ZipkinActivityConversionExtensions : object {
    internal static string ZipkinErrorFlagTagName;
    private static long TicksPerMicrosecond;
    private static long UnixEpochTicks;
    private static long UnixEpochMicroseconds;
    private static ConcurrentDictionary`2<ValueTuple`2<string, int>, ZipkinEndpoint> RemoteEndpointCache;
    private static ZipkinActivityConversionExtensions();
    [ExtensionAttribute]
internal static ZipkinSpan ToZipkinSpan(Activity activity, ZipkinEndpoint localEndpoint, bool useShortTraceIds);
    internal static string EncodeSpanId(ActivitySpanId spanId);
    [ExtensionAttribute]
internal static long ToEpochMicroseconds(DateTimeOffset dateTimeOffset);
    [ExtensionAttribute]
internal static long ToEpochMicroseconds(TimeSpan timeSpan);
    [ExtensionAttribute]
internal static long ToEpochMicroseconds(DateTime utcDateTime);
    private static string EncodeTraceId(ActivityTraceId traceId, bool useShortTraceIds);
    private static string ToActivityKind(Activity activity);
}
[IsReadOnlyAttribute]
internal class OpenTelemetry.Exporter.Zipkin.Implementation.ZipkinAnnotation : ValueType {
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public long Timestamp { get; }
    public string Value { get; }
    public ZipkinAnnotation(long timestamp, string value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
public string get_Value();
}
internal class OpenTelemetry.Exporter.Zipkin.Implementation.ZipkinEndpoint : object {
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ipv4>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ipv6>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Tags>k__BackingField;
    public string ServiceName { get; }
    public string Ipv4 { get; }
    public string Ipv6 { get; }
    public Nullable`1<int> Port { get; }
    public Dictionary`2<string, object> Tags { get; }
    public ZipkinEndpoint(string serviceName);
    public ZipkinEndpoint(string serviceName, string ipv4, string ipv6, Nullable`1<int> port, Dictionary`2<string, object> tags);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
public string get_Ipv4();
    [CompilerGeneratedAttribute]
public string get_Ipv6();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Tags();
    public static ZipkinEndpoint Create(string serviceName);
    public static ZipkinEndpoint Create(ValueTuple`2<string, int> serviceNameAndPort);
    public ZipkinEndpoint Clone(string serviceName);
    public void Write(Utf8JsonWriter writer);
}
[EventSourceAttribute]
internal class OpenTelemetry.Exporter.Zipkin.Implementation.ZipkinExporterEventSource : EventSource {
    public static ZipkinExporterEventSource Log;
    private static ZipkinExporterEventSource();
    [NonEventAttribute]
public void FailedExport(Exception ex);
    [EventAttribute("1")]
public void FailedExport(string exception);
    [EventAttribute("2")]
public void UnsupportedAttributeType(string type, string key);
    [EventAttribute("3")]
public void InvalidConfigurationValue(string key, string value);
    private sealed virtual override void Microsoft.Extensions.Configuration.IConfigurationExtensionsLogger.LogInvalidConfigurationValue(string key, string value);
}
[IsReadOnlyAttribute]
internal class OpenTelemetry.Exporter.Zipkin.Implementation.ZipkinSpan : ValueType {
    [CompilerGeneratedAttribute]
private string <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private ZipkinEndpoint <LocalEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private ZipkinEndpoint <RemoteEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private PooledList`1<ZipkinAnnotation> <Annotations>k__BackingField;
    [CompilerGeneratedAttribute]
private PooledList`1<KeyValuePair`2<string, object>> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Debug>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Shared>k__BackingField;
    public string TraceId { get; }
    public string ParentId { get; }
    public string Id { get; }
    public string Kind { get; }
    public string Name { get; }
    public Nullable`1<long> Timestamp { get; }
    public Nullable`1<long> Duration { get; }
    public ZipkinEndpoint LocalEndpoint { get; }
    public ZipkinEndpoint RemoteEndpoint { get; }
    public PooledList`1<ZipkinAnnotation> Annotations { get; }
    public PooledList`1<KeyValuePair`2<string, object>> Tags { get; }
    public Nullable`1<bool> Debug { get; }
    public Nullable`1<bool> Shared { get; }
    public ZipkinSpan(string traceId, string parentId, string id, string kind, string name, Nullable`1<long> timestamp, Nullable`1<long> duration, ZipkinEndpoint localEndpoint, ZipkinEndpoint remoteEndpoint, PooledList`1& annotations, PooledList`1& tags, Nullable`1<bool> debug, Nullable`1<bool> shared);
    [CompilerGeneratedAttribute]
public string get_TraceId();
    [CompilerGeneratedAttribute]
public string get_ParentId();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Timestamp();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Duration();
    [CompilerGeneratedAttribute]
public ZipkinEndpoint get_LocalEndpoint();
    [CompilerGeneratedAttribute]
public ZipkinEndpoint get_RemoteEndpoint();
    [CompilerGeneratedAttribute]
public PooledList`1<ZipkinAnnotation> get_Annotations();
    [CompilerGeneratedAttribute]
public PooledList`1<KeyValuePair`2<string, object>> get_Tags();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Debug();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Shared();
    public void Return();
    public void Write(Utf8JsonWriter writer);
}
internal static class OpenTelemetry.Exporter.Zipkin.Implementation.ZipkinSpanJsonHelper : object {
    public static JsonEncodedText TraceIdPropertyName;
    public static JsonEncodedText NamePropertyName;
    public static JsonEncodedText ParentIdPropertyName;
    public static JsonEncodedText IdPropertyName;
    public static JsonEncodedText KindPropertyName;
    public static JsonEncodedText TimestampPropertyName;
    public static JsonEncodedText DurationPropertyName;
    public static JsonEncodedText DebugPropertyName;
    public static JsonEncodedText SharedPropertyName;
    public static JsonEncodedText LocalEndpointPropertyName;
    public static JsonEncodedText RemoteEndpointPropertyName;
    public static JsonEncodedText AnnotationsPropertyName;
    public static JsonEncodedText ValuePropertyName;
    public static JsonEncodedText TagsPropertyName;
    public static JsonEncodedText ServiceNamePropertyName;
    public static JsonEncodedText Ipv4PropertyName;
    public static JsonEncodedText Ipv6PropertyName;
    public static JsonEncodedText PortPropertyName;
    private static ZipkinSpanJsonHelper();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class OpenTelemetry.Exporter.Zipkin.Implementation.ZipkinTagWriter : JsonStringArrayTagWriter`1<Utf8JsonWriter> {
    public static int StackallocByteThreshold;
    [CompilerGeneratedAttribute]
private static ZipkinTagWriter <Instance>k__BackingField;
    public static ZipkinTagWriter Instance { get; }
    private static ZipkinTagWriter();
    [CompilerGeneratedAttribute]
public static ZipkinTagWriter get_Instance();
    protected virtual void WriteIntegralTag(Utf8JsonWriter& writer, string key, long value);
    protected virtual void WriteFloatingPointTag(Utf8JsonWriter& writer, string key, double value);
    protected virtual void WriteBooleanTag(Utf8JsonWriter& writer, string key, bool value);
    protected virtual void WriteStringTag(Utf8JsonWriter& writer, string key, ReadOnlySpan`1<char> value);
    protected virtual void WriteArrayTag(Utf8JsonWriter& writer, string key, ArraySegment`1<byte> arrayUtf8JsonBytes);
    protected virtual void OnUnsupportedTagDropped(string tagKey, string tagValueTypeFullName);
}
public class OpenTelemetry.Exporter.ZipkinExporter : BaseExporter`1<Activity> {
    private ZipkinExporterOptions options;
    private int maxPayloadSizeInBytes;
    private HttpClient httpClient;
    [CompilerGeneratedAttribute]
private ZipkinEndpoint <LocalEndpoint>k__BackingField;
    internal ZipkinEndpoint LocalEndpoint { get; private set; }
    public ZipkinExporter(ZipkinExporterOptions options, HttpClient client);
    [CompilerGeneratedAttribute]
internal ZipkinEndpoint get_LocalEndpoint();
    [CompilerGeneratedAttribute]
private void set_LocalEndpoint(ZipkinEndpoint value);
    public virtual ExportResult Export(Batch`1& modreq(System.Runtime.InteropServices.InAttribute) batch);
    internal void SetLocalEndpointFromResource(Resource resource);
    private static string ResolveHostAddress(string hostName, AddressFamily family);
    private static string ResolveHostName();
}
public class OpenTelemetry.Exporter.ZipkinExporterOptions : object {
    internal static int DefaultMaxPayloadSizeInBytes;
    internal static string ZipkinEndpointEnvVar;
    internal static string DefaultZipkinEndpoint;
    internal static Func`1<HttpClient> DefaultHttpClientFactory;
    [CompilerGeneratedAttribute]
private Uri <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseShortTraceIds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxPayloadSizeInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private ExportProcessorType <ExportProcessorType>k__BackingField;
    [CompilerGeneratedAttribute]
private BatchExportProcessorOptions`1<Activity> <BatchExportProcessorOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<HttpClient> <HttpClientFactory>k__BackingField;
    public Uri Endpoint { get; public set; }
    public bool UseShortTraceIds { get; public set; }
    public Nullable`1<int> MaxPayloadSizeInBytes { get; public set; }
    public ExportProcessorType ExportProcessorType { get; public set; }
    public BatchExportProcessorOptions`1<Activity> BatchExportProcessorOptions { get; public set; }
    public Func`1<HttpClient> HttpClientFactory { get; public set; }
    internal ZipkinExporterOptions(IConfiguration configuration, BatchExportActivityProcessorOptions defaultBatchOptions);
    private static ZipkinExporterOptions();
    [CompilerGeneratedAttribute]
public Uri get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(Uri value);
    [CompilerGeneratedAttribute]
public bool get_UseShortTraceIds();
    [CompilerGeneratedAttribute]
public void set_UseShortTraceIds(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxPayloadSizeInBytes();
    [CompilerGeneratedAttribute]
public void set_MaxPayloadSizeInBytes(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public ExportProcessorType get_ExportProcessorType();
    [CompilerGeneratedAttribute]
public void set_ExportProcessorType(ExportProcessorType value);
    [CompilerGeneratedAttribute]
public BatchExportProcessorOptions`1<Activity> get_BatchExportProcessorOptions();
    [CompilerGeneratedAttribute]
public void set_BatchExportProcessorOptions(BatchExportProcessorOptions`1<Activity> value);
    [CompilerGeneratedAttribute]
public Func`1<HttpClient> get_HttpClientFactory();
    [CompilerGeneratedAttribute]
public void set_HttpClientFactory(Func`1<HttpClient> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class OpenTelemetry.Internal.ArrayTagWriter`1 : object {
    public abstract virtual TArrayState BeginWriteArray();
    public abstract virtual void WriteNullValue(TArrayState& state);
    public abstract virtual void WriteIntegralValue(TArrayState& state, long value);
    public abstract virtual void WriteFloatingPointValue(TArrayState& state, double value);
    public abstract virtual void WriteBooleanValue(TArrayState& state, bool value);
    [NullableContextAttribute("0")]
public abstract virtual void WriteStringValue(TArrayState& state, ReadOnlySpan`1<char> value);
    public abstract virtual void EndWriteArray(TArrayState& state);
}
[ExtensionAttribute]
internal static class OpenTelemetry.Internal.ExceptionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string ToInvariantString(Exception exception);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class OpenTelemetry.Internal.Guard : object {
    [DebuggerHiddenAttribute]
public static void ThrowIfNull(object value, string paramName);
    [DebuggerHiddenAttribute]
public static void ThrowIfNullOrEmpty(string value, string paramName);
    [DebuggerHiddenAttribute]
public static void ThrowIfNullOrWhitespace(string value, string paramName);
    [NullableContextAttribute("1")]
[DebuggerHiddenAttribute]
public static void ThrowIfZero(int value, string message, string paramName);
    [DebuggerHiddenAttribute]
public static void ThrowIfInvalidTimeout(int value, string paramName);
    [DebuggerHiddenAttribute]
public static void ThrowIfOutOfRange(int value, string paramName, int min, int max, string minName, string maxName, string message);
    [DebuggerHiddenAttribute]
public static void ThrowIfOutOfRange(double value, string paramName, double min, double max, string minName, string maxName, string message);
    [DebuggerHiddenAttribute]
public static T ThrowIfNotOfType(object value, string paramName);
    [NullableContextAttribute("1")]
[DebuggerHiddenAttribute]
private static void Range(T value, string paramName, T min, T max, string minName, string maxName, string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class OpenTelemetry.Internal.JsonStringArrayTagWriter`1 : TagWriter`2<TTagState, JsonArrayTagWriterState<TTagState>> {
    protected sealed virtual void WriteArrayTag(TTagState& writer, string key, JsonArrayTagWriterState& array);
    protected abstract virtual void WriteArrayTag(TTagState& writer, string key, ArraySegment`1<byte> arrayUtf8JsonBytes);
}
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
internal class OpenTelemetry.Internal.PooledList`1 : ValueType {
    private static int lastAllocatedSize;
    private T[] buffer;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    public int Count { get; }
    public bool IsEmpty { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    public T& Item { get; }
    private PooledList`1(T[] buffer, int count);
    private static PooledList`1();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Count();
    public bool get_IsEmpty();
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    public T& get_Item(int index);
    public static PooledList`1<T> Create();
    public static void Add(PooledList`1& list, T item);
    public static void Clear(PooledList`1& list);
    public void Return();
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public Enumerator<T> GetEnumerator();
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class OpenTelemetry.Internal.StatusHelper : object {
    public static string UnsetStatusCodeTagValue;
    public static string OkStatusCodeTagValue;
    public static string ErrorStatusCodeTagValue;
    [NullableContextAttribute("2")]
public static string GetTagValueForStatusCode(StatusCode statusCode);
    [NullableContextAttribute("2")]
public static Nullable`1<StatusCode> GetStatusCodeForTagValue(string statusCodeTagValue);
    [NullableContextAttribute("2")]
public static bool TryGetStatusCodeForTagValue(string statusCodeTagValue, StatusCode& statusCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class OpenTelemetry.Internal.TagWriter`2 : object {
    private ArrayTagWriter`1<TArrayState> arrayWriter;
    protected TagWriter`2(ArrayTagWriter`1<TArrayState> arrayTagWriter);
    public bool TryWriteTag(TTagState& state, KeyValuePair`2<string, object> tag, Nullable`1<int> tagValueMaxLength);
    protected abstract virtual void WriteIntegralTag(TTagState& state, string key, long value);
    protected abstract virtual void WriteFloatingPointTag(TTagState& state, string key, double value);
    protected abstract virtual void WriteBooleanTag(TTagState& state, string key, bool value);
    protected abstract virtual void WriteStringTag(TTagState& state, string key, ReadOnlySpan`1<char> value);
    protected abstract virtual void WriteArrayTag(TTagState& state, string key, TArrayState& value);
    protected abstract virtual void OnUnsupportedTagDropped(string tagKey, string tagValueTypeFullName);
    [NullableContextAttribute("0")]
private static ReadOnlySpan`1<char> TruncateString(ReadOnlySpan`1<char> value, Nullable`1<int> maxLength);
    private void WriteCharTag(TTagState& state, string key, char value);
    private void WriteCharValue(TArrayState& state, char value);
    private void WriteArrayTagInternal(TTagState& state, string key, Array array, Nullable`1<int> tagValueMaxLength);
    private void WriteToArrayTypeChecked(TArrayState& arrayState, Array array, Nullable`1<int> tagValueMaxLength);
    [NullableContextAttribute("0")]
private void WriteToArrayCovariant(TArrayState& arrayState, TItem[] array);
    [NullableContextAttribute("0")]
private void WriteStructToArray(TArrayState& arrayState, TItem[] array);
    private void WriteStringsToArray(TArrayState& arrayState, String[] array, Nullable`1<int> tagValueMaxLength);
    private bool LogUnsupportedTagTypeAndReturnFalse(string key, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class OpenTelemetry.Resources.ResourceSemanticConventions : object {
    public static string AttributeServiceName;
    public static string AttributeServiceNamespace;
    public static string AttributeServiceInstance;
    public static string AttributeServiceVersion;
    public static string AttributeTelemetrySdkName;
    public static string AttributeTelemetrySdkLanguage;
    public static string AttributeTelemetrySdkVersion;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class OpenTelemetry.Trace.ActivityHelperExtensions : object {
    [ExtensionAttribute]
public static bool TryGetStatus(Activity activity, StatusCode& statusCode, String& statusDescription);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static object GetTagValue(Activity activity, string tagName);
    [ExtensionAttribute]
public static bool TryCheckFirstTag(Activity activity, string tagName, Object& tagValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class OpenTelemetry.Trace.SemanticConventions : object {
    public static string AttributeNetPeerIp;
    public static string AttributeNetPeerPort;
    public static string AttributeNetPeerName;
    public static string AttributePeerService;
    public static string AttributeHttpHost;
    public static string AttributeDbInstance;
    public static string AttributeMessageType;
    public static string AttributeMessageId;
    public static string AttributeExceptionEventName;
    public static string AttributeExceptionType;
    public static string AttributeExceptionMessage;
    public static string AttributeExceptionStacktrace;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class OpenTelemetry.Trace.SpanAttributeConstants : object {
    public static string StatusCodeKey;
    public static string StatusDescriptionKey;
}
[ExtensionAttribute]
public static class OpenTelemetry.Trace.ZipkinExporterHelperExtensions : object {
    [ExtensionAttribute]
public static TracerProviderBuilder AddZipkinExporter(TracerProviderBuilder builder);
    [ExtensionAttribute]
public static TracerProviderBuilder AddZipkinExporter(TracerProviderBuilder builder, Action`1<ZipkinExporterOptions> configure);
    [ExtensionAttribute]
public static TracerProviderBuilder AddZipkinExporter(TracerProviderBuilder builder, string name, Action`1<ZipkinExporterOptions> configure);
    private static BaseProcessor`1<Activity> BuildZipkinExporterProcessor(TracerProviderBuilder builder, ZipkinExporterOptions options, IServiceProvider serviceProvider);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
