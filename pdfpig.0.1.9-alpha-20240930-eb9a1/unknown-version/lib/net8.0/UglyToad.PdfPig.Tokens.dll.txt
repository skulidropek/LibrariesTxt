[DefaultMemberAttribute("Item")]
public class UglyToad.PdfPig.Tokens.ArrayToken : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<IToken> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    public IReadOnlyList`1<IToken> Data { get; }
    public int Length { get; }
    public IToken Item { get; }
    public ArrayToken(IReadOnlyList`1<IToken> data);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<IToken> get_Data();
    [CompilerGeneratedAttribute]
public int get_Length();
    public IToken get_Item(int i);
    public virtual string ToString();
    public sealed virtual bool Equals(IToken obj);
}
public class UglyToad.PdfPig.Tokens.BooleanToken : object {
    [CompilerGeneratedAttribute]
private static BooleanToken <True>k__BackingField;
    [CompilerGeneratedAttribute]
private static BooleanToken <False>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Data>k__BackingField;
    public static BooleanToken True { get; }
    public static BooleanToken False { get; }
    public bool Data { get; }
    private BooleanToken(bool data);
    private static BooleanToken();
    [CompilerGeneratedAttribute]
public static BooleanToken get_True();
    [CompilerGeneratedAttribute]
public static BooleanToken get_False();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Data();
    public virtual int GetHashCode();
    public virtual string ToString();
    public sealed virtual bool Equals(IToken obj);
}
public class UglyToad.PdfPig.Tokens.CommentToken : object {
    [CompilerGeneratedAttribute]
private string <Data>k__BackingField;
    public string Data { get; }
    public CommentToken(string data);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Data();
    public virtual string ToString();
    public sealed virtual bool Equals(IToken obj);
}
public class UglyToad.PdfPig.Tokens.DictionaryToken : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, IToken> <Data>k__BackingField;
    public IReadOnlyDictionary`2<string, IToken> Data { get; }
    public DictionaryToken(IReadOnlyDictionary`2<NameToken, IToken> data);
    private DictionaryToken(IReadOnlyDictionary`2<string, IToken> data);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyDictionary`2<string, IToken> get_Data();
    public bool TryGet(NameToken name, IToken& token);
    public bool TryGet(NameToken name, T& token);
    public bool ContainsKey(NameToken name);
    public DictionaryToken With(NameToken key, IToken value);
    public DictionaryToken With(string key, IToken value);
    public DictionaryToken Without(NameToken key);
    public DictionaryToken Without(string key);
    public static DictionaryToken With(IReadOnlyDictionary`2<string, IToken> data);
    public sealed virtual bool Equals(IToken obj);
    public sealed virtual bool Equals(DictionaryToken other);
    public virtual string ToString();
}
public class UglyToad.PdfPig.Tokens.EndOfLineToken : object {
    [CompilerGeneratedAttribute]
private static EndOfLineToken <Token>k__BackingField;
    public static EndOfLineToken Token { get; }
    private static EndOfLineToken();
    [CompilerGeneratedAttribute]
public static EndOfLineToken get_Token();
    public sealed virtual bool Equals(IToken obj);
}
public class UglyToad.PdfPig.Tokens.HexToken : object {
    private static Dictionary`2<char, byte> HexMap;
    [CompilerGeneratedAttribute]
private string <Data>k__BackingField;
    private Byte[] _bytes;
    public string Data { get; }
    public ReadOnlySpan`1<byte> Bytes { get; }
    public ReadOnlyMemory`1<byte> Memory { get; }
    public HexToken(ReadOnlySpan`1<char> characters);
    private static HexToken();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Data();
    public ReadOnlySpan`1<byte> get_Bytes();
    public ReadOnlyMemory`1<byte> get_Memory();
    public static byte ConvertPair(char high, char low);
    public static int ConvertHexBytesToInt(HexToken token);
    public sealed virtual bool Equals(IToken obj);
    public string GetHexString();
}
public interface UglyToad.PdfPig.Tokens.IDataToken`1 {
    public T Data { get; }
    public abstract virtual T get_Data();
}
public class UglyToad.PdfPig.Tokens.IndirectReferenceToken : object {
    [CompilerGeneratedAttribute]
private IndirectReference <Data>k__BackingField;
    public IndirectReference Data { get; }
    public IndirectReferenceToken(IndirectReference data);
    [CompilerGeneratedAttribute]
public sealed virtual IndirectReference get_Data();
    public sealed virtual bool Equals(IToken obj);
    public virtual string ToString();
}
public class UglyToad.PdfPig.Tokens.InlineImageDataToken : object {
    [CompilerGeneratedAttribute]
private ReadOnlyMemory`1<byte> <Data>k__BackingField;
    public ReadOnlyMemory`1<byte> Data { get; }
    public InlineImageDataToken(ReadOnlyMemory`1<byte> data);
    [CompilerGeneratedAttribute]
public sealed virtual ReadOnlyMemory`1<byte> get_Data();
    public sealed virtual bool Equals(IToken obj);
}
public interface UglyToad.PdfPig.Tokens.IToken {
}
public class UglyToad.PdfPig.Tokens.NameToken : object {
    private static ConcurrentDictionary`2<string, NameToken> NameMap;
    public static NameToken A;
    public static NameToken Aa;
    public static NameToken AcroForm;
    public static NameToken ActualText;
    public static NameToken AdbePkcs7Detached;
    public static NameToken AdbePkcs7Sha1;
    public static NameToken AdbeX509RsaSha1;
    public static NameToken AdobePpklite;
    public static NameToken Aesv2;
    public static NameToken Aesv3;
    public static NameToken After;
    public static NameToken Ais;
    public static NameToken Alt;
    public static NameToken Alpha;
    public static NameToken Alternate;
    public static NameToken Annotation3D;
    public static NameToken Annot;
    public static NameToken Annots;
    public static NameToken AntiAlias;
    public static NameToken Ap;
    public static NameToken ApRef;
    public static NameToken App;
    public static NameToken ArtBox;
    public static NameToken Artifact;
    public static NameToken As;
    public static NameToken Ascent;
    public static NameToken AsciiHexDecode;
    public static NameToken AsciiHexDecodeAbbreviation;
    public static NameToken Ascii85Decode;
    public static NameToken Ascii85DecodeAbbreviation;
    public static NameToken Attached;
    public static NameToken AuthEvent;
    public static NameToken Author;
    public static NameToken AvgWidth;
    public static NameToken B;
    public static NameToken Background;
    public static NameToken BaseEncoding;
    public static NameToken BaseFont;
    public static NameToken BaseState;
    public static NameToken Bbox;
    public static NameToken Bc;
    public static NameToken Be;
    public static NameToken Before;
    public static NameToken Bg;
    public static NameToken BitsPerComponent;
    public static NameToken BitsPerCoordinate;
    public static NameToken BitsPerFlag;
    public static NameToken BitsPerSample;
    public static NameToken BlackIs1;
    public static NameToken BlackPoint;
    public static NameToken BleedBox;
    public static NameToken Bm;
    public static NameToken Border;
    public static NameToken Bottom;
    public static NameToken Bounds;
    public static NameToken Bpc;
    public static NameToken Bs;
    public static NameToken Btn;
    public static NameToken Byterange;
    public static NameToken C;
    public static NameToken C0;
    public static NameToken C1;
    public static NameToken Ca;
    public static NameToken CaNs;
    public static NameToken Calgray;
    public static NameToken Calrgb;
    public static NameToken Cap;
    public static NameToken CapHeight;
    public static NameToken Caret;
    public static NameToken Catalog;
    public static NameToken CcittfaxDecode;
    public static NameToken CcittfaxDecodeAbbreviation;
    public static NameToken CenterWindow;
    public static NameToken Cf;
    public static NameToken Cfm;
    public static NameToken Ch;
    public static NameToken CharProcs;
    public static NameToken CharSet;
    public static NameToken CiciSignit;
    public static NameToken CidFontType0;
    public static NameToken CidFontType0C;
    public static NameToken CidFontType2;
    public static NameToken CidInit;
    public static NameToken CidToGidMap;
    public static NameToken CidSet;
    public static NameToken CidSystemInfo;
    public static NameToken Circle;
    public static NameToken Cl;
    public static NameToken ClrF;
    public static NameToken ClrFf;
    public static NameToken Cmap;
    public static NameToken Cmapname;
    public static NameToken CmapType;
    public static NameToken Cmyk;
    public static NameToken Co;
    public static NameToken ColorBurn;
    public static NameToken ColorDodge;
    public static NameToken Colorants;
    public static NameToken Colors;
    public static NameToken ColorSpace;
    public static NameToken Columns;
    public static NameToken Compatible;
    public static NameToken Components;
    public static NameToken ContactInfo;
    public static NameToken Contents;
    public static NameToken Coords;
    public static NameToken Count;
    public static NameToken Cp;
    public static NameToken CreationDate;
    public static NameToken Creator;
    public static NameToken CropBox;
    public static NameToken Crypt;
    public static NameToken CryptAlgorithm;
    public static NameToken CryptFilter;
    public static NameToken Cs;
    public static NameToken D;
    public static NameToken Da;
    public static NameToken Darken;
    public static NameToken Date;
    public static NameToken DctDecode;
    public static NameToken DctDecodeAbbreviation;
    public static NameToken Decode;
    public static NameToken DecodeParms;
    public static NameToken Default;
    public static NameToken DefaultCmyk;
    public static NameToken DefaultGray;
    public static NameToken DefaultRgb;
    public static NameToken Desc;
    public static NameToken DescendantFonts;
    public static NameToken Descent;
    public static NameToken Dest;
    public static NameToken DestOutputProfile;
    public static NameToken Dests;
    public static NameToken Devicecmyk;
    public static NameToken Devicegray;
    public static NameToken Devicen;
    public static NameToken Devicergb;
    public static NameToken Di;
    public static NameToken Difference;
    public static NameToken Differences;
    public static NameToken DigestMethod;
    public static NameToken DigestRipemd160;
    public static NameToken DigestSha1;
    public static NameToken DigestSha256;
    public static NameToken DigestSha384;
    public static NameToken DigestSha512;
    public static NameToken Direction;
    public static NameToken DisplayDocTitle;
    public static NameToken Dl;
    public static NameToken Dm;
    public static NameToken Doc;
    public static NameToken DocOpen;
    public static NameToken DocChecksum;
    public static NameToken DocTimeStamp;
    public static NameToken Docmdp;
    public static NameToken Domain;
    public static NameToken Dos;
    public static NameToken Dp;
    public static NameToken Dr;
    public static NameToken Ds;
    public static NameToken Duplex;
    public static NameToken Dur;
    public static NameToken Dv;
    public static NameToken Dw;
    public static NameToken Dw2;
    public static NameToken E;
    public static NameToken EarlyChange;
    public static NameToken Ef;
    public static NameToken EfOpen;
    public static NameToken EmbeddedFdfs;
    public static NameToken EmbeddedFiles;
    public static NameToken Empty;
    public static NameToken Encode;
    public static NameToken EncodedByteAlign;
    public static NameToken Encoding;
    public static NameToken Encoding90MsRksjH;
    public static NameToken Encoding90MsRksjV;
    public static NameToken EncodingEtenB5H;
    public static NameToken EncodingEtenB5V;
    public static NameToken Encrypt;
    public static NameToken EncryptMetaData;
    public static NameToken EndOfLine;
    public static NameToken EntrustPpkef;
    public static NameToken Exclusion;
    public static NameToken ExtGState;
    public static NameToken Extend;
    public static NameToken Extends;
    public static NameToken F;
    public static NameToken FDecodeParms;
    public static NameToken FFilter;
    public static NameToken Fb;
    public static NameToken Fdf;
    public static NameToken Ff;
    public static NameToken Fields;
    public static NameToken FileAttachment;
    public static NameToken Filespec;
    public static NameToken Filter;
    public static NameToken First;
    public static NameToken FirstChar;
    public static NameToken Fit;
    public static NameToken FitB;
    public static NameToken FitBH;
    public static NameToken FitBV;
    public static NameToken FitH;
    public static NameToken FitR;
    public static NameToken FitV;
    public static NameToken FitWindow;
    public static NameToken Fl;
    public static NameToken Flags;
    public static NameToken FlateDecode;
    public static NameToken FlateDecodeAbbreviation;
    public static NameToken Font;
    public static NameToken FontBbox;
    public static NameToken FontDescriptor;
    public static NameToken FontFamily;
    public static NameToken FontFile;
    public static NameToken FontFile2;
    public static NameToken FontFile3;
    public static NameToken FontMatrix;
    public static NameToken FontName;
    public static NameToken FontStretch;
    public static NameToken FontWeight;
    public static NameToken Form;
    public static NameToken Formtype;
    public static NameToken Frm;
    public static NameToken FreeText;
    public static NameToken Ft;
    public static NameToken Function;
    public static NameToken FunctionType;
    public static NameToken Functions;
    public static NameToken G;
    public static NameToken Gamma;
    public static NameToken GoTo;
    public static NameToken GoToE;
    public static NameToken GoToR;
    public static NameToken Group;
    public static NameToken GtsPdfa1;
    public static NameToken H;
    public static NameToken HardLight;
    public static NameToken Height;
    public static NameToken HideMenubar;
    public static NameToken HideToolbar;
    public static NameToken HideWindowui;
    public static NameToken Highlight;
    public static NameToken I;
    public static NameToken Ic;
    public static NameToken Iccbased;
    public static NameToken Id;
    public static NameToken IdTree;
    public static NameToken Identity;
    public static NameToken IdentityH;
    public static NameToken IdentityV;
    public static NameToken If;
    public static NameToken Im;
    public static NameToken Image;
    public static NameToken ImageB;
    public static NameToken ImageC;
    public static NameToken ImageI;
    public static NameToken ImageMask;
    public static NameToken Index;
    public static NameToken Indexed;
    public static NameToken Info;
    public static NameToken Ink;
    public static NameToken Inklist;
    public static NameToken Intent;
    public static NameToken Interpolate;
    public static NameToken Irt;
    public static NameToken It;
    public static NameToken ItalicAngle;
    public static NameToken JavaScript;
    public static NameToken Jbig2Decode;
    public static NameToken Jbig2Globals;
    public static NameToken JpxDecode;
    public static NameToken Js;
    public static NameToken K;
    public static NameToken Keywords;
    public static NameToken Kids;
    public static NameToken L;
    public static NameToken Lab;
    public static NameToken Lang;
    public static NameToken Last;
    public static NameToken LastChar;
    public static NameToken LastModified;
    public static NameToken Lc;
    public static NameToken Le;
    public static NameToken Leading;
    public static NameToken Left;
    public static NameToken LegalAttestation;
    public static NameToken Length;
    public static NameToken Length1;
    public static NameToken Length2;
    public static NameToken Lighten;
    public static NameToken Limits;
    public static NameToken Line;
    public static NameToken Link;
    public static NameToken Lj;
    public static NameToken Ll;
    public static NameToken Lle;
    public static NameToken Llo;
    public static NameToken Location;
    public static NameToken Luminosity;
    public static NameToken Lw;
    public static NameToken LzwDecode;
    public static NameToken LzwDecodeAbbreviation;
    public static NameToken M;
    public static NameToken Mac;
    public static NameToken MacExpertEncoding;
    public static NameToken MacRomanEncoding;
    public static NameToken Marked;
    public static NameToken MarkInfo;
    public static NameToken Mask;
    public static NameToken Matrix;
    public static NameToken Matte;
    public static NameToken MaxLen;
    public static NameToken MaxWidth;
    public static NameToken Mcid;
    public static NameToken Mdp;
    public static NameToken Measure;
    public static NameToken MediaBox;
    public static NameToken Metadata;
    public static NameToken MissingWidth;
    public static NameToken Mix;
    public static NameToken MixingHints;
    public static NameToken Mk;
    public static NameToken Ml;
    public static NameToken MmType1;
    public static NameToken ModDate;
    public static NameToken Movie;
    public static NameToken Multiply;
    public static NameToken N;
    public static NameToken Name;
    public static NameToken Names;
    public static NameToken NeedAppearances;
    public static NameToken Next;
    public static NameToken Nm;
    public static NameToken NonEfontNoWarn;
    public static NameToken NonFullScreenPageMode;
    public static NameToken None;
    public static NameToken Normal;
    public static NameToken Nums;
    public static NameToken O;
    public static NameToken Obj;
    public static NameToken ObjStm;
    public static NameToken Oc;
    public static NameToken Ocg;
    public static NameToken Ocgs;
    public static NameToken Ocproperties;
    public static NameToken Oe;
    public static NameToken Off;
    public static NameToken OffAcroform;
    public static NameToken On;
    public static NameToken Op;
    public static NameToken OpNs;
    public static NameToken OpenAction;
    public static NameToken OpenType;
    public static NameToken Opm;
    public static NameToken Opt;
    public static NameToken Order;
    public static NameToken Ordering;
    public static NameToken Os;
    public static NameToken Outlines;
    public static NameToken OutputCondition;
    public static NameToken OutputConditionIdentifier;
    public static NameToken OutputIntent;
    public static NameToken OutputIntents;
    public static NameToken Overlay;
    public static NameToken P;
    public static NameToken Page;
    public static NameToken PageLabels;
    public static NameToken PageLayout;
    public static NameToken PageMode;
    public static NameToken Pages;
    public static NameToken PaintType;
    public static NameToken Panose;
    public static NameToken Params;
    public static NameToken Parent;
    public static NameToken ParentTree;
    public static NameToken ParentTreeNextKey;
    public static NameToken Pattern;
    public static NameToken PatternType;
    public static NameToken PdfDocEncoding;
    public static NameToken Perms;
    public static NameToken Pg;
    public static NameToken Polygon;
    public static NameToken PolyLine;
    public static NameToken Popup;
    public static NameToken PreRelease;
    public static NameToken Predictor;
    public static NameToken Prev;
    public static NameToken PrintArea;
    public static NameToken PrintClip;
    public static NameToken PrintScaling;
    public static NameToken PrinterMark;
    public static NameToken ProcSet;
    public static NameToken Process;
    public static NameToken Producer;
    public static NameToken PropBuild;
    public static NameToken Properties;
    public static NameToken Ps;
    public static NameToken PubSec;
    public static NameToken Q;
    public static NameToken Quadpoints;
    public static NameToken R;
    public static NameToken Range;
    public static NameToken Rc;
    public static NameToken Rd;
    public static NameToken Reason;
    public static NameToken Reasons;
    public static NameToken Repeat;
    public static NameToken Recipients;
    public static NameToken Rect;
    public static NameToken Registry;
    public static NameToken RegistryName;
    public static NameToken Rename;
    public static NameToken Resources;
    public static NameToken Rgb;
    public static NameToken Ri;
    public static NameToken Right;
    public static NameToken RoleMap;
    public static NameToken Root;
    public static NameToken Rotate;
    public static NameToken Rows;
    public static NameToken RunLengthDecode;
    public static NameToken RunLengthDecodeAbbreviation;
    public static NameToken Rv;
    public static NameToken S;
    public static NameToken Sa;
    public static NameToken Screen;
    public static NameToken Se;
    public static NameToken Separation;
    public static NameToken SetF;
    public static NameToken SetFf;
    public static NameToken Shading;
    public static NameToken ShadingType;
    public static NameToken Sig;
    public static NameToken SigFlags;
    public static NameToken Size;
    public static NameToken Sm;
    public static NameToken Smask;
    public static NameToken SoftLight;
    public static NameToken Sound;
    public static NameToken Square;
    public static NameToken Squiggly;
    public static NameToken Ss;
    public static NameToken St;
    public static NameToken Stamp;
    public static NameToken StandardEncoding;
    public static NameToken State;
    public static NameToken StateModel;
    public static NameToken Status;
    public static NameToken StdCf;
    public static NameToken StemH;
    public static NameToken StemV;
    public static NameToken StmF;
    public static NameToken StrF;
    public static NameToken StrikeOut;
    public static NameToken StructParent;
    public static NameToken StructParents;
    public static NameToken StructTreeRoot;
    public static NameToken Style;
    public static NameToken SubFilter;
    public static NameToken Subj;
    public static NameToken Subject;
    public static NameToken Subtype;
    public static NameToken Supplement;
    public static NameToken Sv;
    public static NameToken Sw;
    public static NameToken Sy;
    public static NameToken Synchronous;
    public static NameToken T;
    public static NameToken Target;
    public static NameToken Templates;
    public static NameToken Text;
    public static NameToken Threads;
    public static NameToken Thumb;
    public static NameToken Ti;
    public static NameToken TilingType;
    public static NameToken TimeStamp;
    public static NameToken Title;
    public static NameToken Tk;
    public static NameToken Tm;
    public static NameToken Top;
    public static NameToken ToUnicode;
    public static NameToken Tr;
    public static NameToken Tr2;
    public static NameToken Trapped;
    public static NameToken Trans;
    public static NameToken Transparency;
    public static NameToken TrapNet;
    public static NameToken Tref;
    public static NameToken TrimBox;
    public static NameToken TrueType;
    public static NameToken TrustedMode;
    public static NameToken Tu;
    public static NameToken Tx;
    public static NameToken Type;
    public static NameToken Type0;
    public static NameToken Type1;
    public static NameToken Type1C;
    public static NameToken Type3;
    public static NameToken U;
    public static NameToken Ue;
    public static NameToken Uf;
    public static NameToken Underline;
    public static NameToken Unchanged;
    public static NameToken Unix;
    public static NameToken Uri;
    public static NameToken Url;
    public static NameToken Usage;
    public static NameToken UserUnit;
    public static NameToken V;
    public static NameToken V2;
    public static NameToken VE;
    public static NameToken VerisignPpkvs;
    public static NameToken Version;
    public static NameToken Vertices;
    public static NameToken VerticesPerRow;
    public static NameToken ViewArea;
    public static NameToken ViewClip;
    public static NameToken ViewerPreferences;
    public static NameToken Volume;
    public static NameToken Vp;
    public static NameToken W;
    public static NameToken W2;
    public static NameToken Watermark;
    public static NameToken WhitePoint;
    public static NameToken Widget;
    public static NameToken Width;
    public static NameToken Widths;
    public static NameToken WinAnsiEncoding;
    public static NameToken Xfa;
    public static NameToken Xheight;
    public static NameToken Xml;
    public static NameToken Xobject;
    public static NameToken Xref;
    public static NameToken XrefStm;
    public static NameToken XStep;
    public static NameToken XYZ;
    public static NameToken YStep;
    public static NameToken Yes;
    [CompilerGeneratedAttribute]
private string <Data>k__BackingField;
    public string Data { get; }
    private NameToken(string text);
    private static NameToken();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Data();
    public static NameToken Create(string name);
    public virtual bool Equals(object obj);
    public bool Equals(NameToken other);
    public sealed virtual bool Equals(IToken obj);
    public virtual int GetHashCode();
    public static string op_Implicit(NameToken name);
    public static bool op_Equality(NameToken name1, NameToken name2);
    public static bool op_Inequality(NameToken name1, NameToken name2);
    public virtual string ToString();
}
public class UglyToad.PdfPig.Tokens.NullToken : object {
    [CompilerGeneratedAttribute]
private static NullToken <Instance>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    public static NullToken Instance { get; }
    public object Data { get; }
    private static NullToken();
    [CompilerGeneratedAttribute]
public static NullToken get_Instance();
    [CompilerGeneratedAttribute]
public sealed virtual object get_Data();
    public virtual bool Equals(object obj);
    protected bool Equals(NullToken other);
    public sealed virtual bool Equals(IToken obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class UglyToad.PdfPig.Tokens.NumericToken : object {
    public static NumericToken MinusOne;
    public static NumericToken Zero;
    public static NumericToken One;
    public static NumericToken Two;
    public static NumericToken Three;
    public static NumericToken Four;
    public static NumericToken Five;
    public static NumericToken Six;
    public static NumericToken Seven;
    public static NumericToken Eight;
    public static NumericToken Nine;
    public static NumericToken Ten;
    public static NumericToken Eleven;
    public static NumericToken Twelve;
    public static NumericToken Thirteen;
    public static NumericToken Fourteen;
    public static NumericToken Fifteen;
    public static NumericToken Sixteen;
    public static NumericToken Seventeen;
    public static NumericToken Eighteen;
    public static NumericToken Nineteen;
    public static NumericToken Twenty;
    public static NumericToken OneHundred;
    public static NumericToken FiveHundred;
    public static NumericToken OneThousand;
    [CompilerGeneratedAttribute]
private double <Data>k__BackingField;
    public double Data { get; }
    public bool HasDecimalPlaces { get; }
    public int Int { get; }
    public long Long { get; }
    public double Double { get; }
    public NumericToken(int value);
    public NumericToken(double value);
    private static NumericToken();
    [CompilerGeneratedAttribute]
public sealed virtual double get_Data();
    public bool get_HasDecimalPlaces();
    public int get_Int();
    public long get_Long();
    public double get_Double();
    public sealed virtual bool Equals(IToken obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class UglyToad.PdfPig.Tokens.ObjectToken : object {
    [CompilerGeneratedAttribute]
private long <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private IndirectReference <Number>k__BackingField;
    [CompilerGeneratedAttribute]
private IToken <Data>k__BackingField;
    public long Position { get; }
    public IndirectReference Number { get; }
    public IToken Data { get; }
    public ObjectToken(long position, IndirectReference number, IToken data);
    [CompilerGeneratedAttribute]
public long get_Position();
    [CompilerGeneratedAttribute]
public IndirectReference get_Number();
    [CompilerGeneratedAttribute]
public sealed virtual IToken get_Data();
    public sealed virtual bool Equals(IToken obj);
    public virtual string ToString();
}
public class UglyToad.PdfPig.Tokens.OperatorToken : object {
    private static object Lock;
    private static Dictionary`2<string, string> PooledNames;
    public static OperatorToken Bt;
    public static OperatorToken Def;
    public static OperatorToken Dict;
    public static OperatorToken Dup;
    public static OperatorToken Eexec;
    public static OperatorToken EndObject;
    public static OperatorToken EndStream;
    public static OperatorToken Et;
    public static OperatorToken For;
    public static OperatorToken N;
    public static OperatorToken Put;
    public static OperatorToken QPop;
    public static OperatorToken QPush;
    public static OperatorToken R;
    public static OperatorToken Re;
    public static OperatorToken Readonly;
    public static OperatorToken StartObject;
    public static OperatorToken StartStream;
    public static OperatorToken Tf;
    public static OperatorToken WStar;
    public static OperatorToken Xref;
    public static OperatorToken StartXref;
    [CompilerGeneratedAttribute]
private string <Data>k__BackingField;
    public string Data { get; }
    private OperatorToken(string data);
    private static OperatorToken();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Data();
    public static OperatorToken Create(ReadOnlySpan`1<char> data);
    public sealed virtual bool Equals(IToken obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class UglyToad.PdfPig.Tokens.StreamToken : object {
    [CompilerGeneratedAttribute]
private DictionaryToken <StreamDictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private ReadOnlyMemory`1<byte> <Data>k__BackingField;
    public DictionaryToken StreamDictionary { get; }
    public ReadOnlyMemory`1<byte> Data { get; }
    public StreamToken(DictionaryToken streamDictionary, Byte[] data);
    public StreamToken(DictionaryToken streamDictionary, ReadOnlyMemory`1<byte> data);
    [CompilerGeneratedAttribute]
public DictionaryToken get_StreamDictionary();
    [CompilerGeneratedAttribute]
public sealed virtual ReadOnlyMemory`1<byte> get_Data();
    public sealed virtual bool Equals(IToken obj);
    public virtual string ToString();
}
public class UglyToad.PdfPig.Tokens.StringToken : object {
    [CompilerGeneratedAttribute]
private string <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Encoding <EncodedWith>k__BackingField;
    public string Data { get; }
    public Encoding EncodedWith { get; }
    public StringToken(string data, Encoding encodedWith);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Data();
    [CompilerGeneratedAttribute]
public Encoding get_EncodedWith();
    public Byte[] GetBytes();
    public sealed virtual bool Equals(IToken obj);
    public virtual string ToString();
}
