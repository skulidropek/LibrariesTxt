[CompilerGeneratedAttribute]
[ExcludeFromCodeCoverageAttribute]
internal static class GitVersionInformation : object {
    public static string Major;
    public static string Minor;
    public static string Patch;
    public static string PreReleaseTag;
    public static string PreReleaseTagWithDash;
    public static string PreReleaseLabel;
    public static string PreReleaseLabelWithDash;
    public static string PreReleaseNumber;
    public static string WeightedPreReleaseNumber;
    public static string BuildMetaData;
    public static string BuildMetaDataPadded;
    public static string FullBuildMetaData;
    public static string MajorMinorPatch;
    public static string SemVer;
    public static string LegacySemVer;
    public static string LegacySemVerPadded;
    public static string AssemblySemVer;
    public static string AssemblySemFileVer;
    public static string FullSemVer;
    public static string InformationalVersion;
    public static string BranchName;
    public static string EscapedBranchName;
    public static string Sha;
    public static string ShortSha;
    public static string NuGetVersionV2;
    public static string NuGetVersion;
    public static string NuGetPreReleaseTagV2;
    public static string NuGetPreReleaseTag;
    public static string VersionSourceSha;
    public static string CommitsSinceVersionSource;
    public static string CommitsSinceVersionSourcePadded;
    public static string UncommittedChanges;
    public static string CommitDate;
    private static GitVersionInformation();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class PdfSharp.Snippets.Drawing.ClippingMisc : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.ColorsCmyk : Snippet {
    public XRect GetDeciRect(int i);
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.ColorsRgb : Snippet {
    public XRect GetDeciRect(int i);
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.GraphicsFromImage : Snippet {
    public XRect GetDeciRect(int i);
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class PdfSharp.Snippets.Drawing.GraphicsUnitBase : Snippet {
    protected XFont font10ptinPP;
    protected XFont font10pt;
    protected XFont font10ptInMM;
    protected XFont font10ptInCM;
    protected double CalcSizeForGraphics(double size, XGraphicsUnit graphicsUnit);
}
public class PdfSharp.Snippets.Drawing.GraphicsUnitDownwards : GraphicsUnitBase {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.GraphicsUnitUpwards : GraphicsUnitBase {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class PdfSharp.Snippets.Drawing.ImageHelper : object {
    public static XImage GetBmpImage(BmpImages image);
    public static XImage GetGifImage(GifImages image);
    public static XImage GetJpegImage(JpegImages image);
    public static XImage GetPngImage(PngImages image);
    public static XImage GetTiffImage(TiffImages image);
    private static XImage GetXImage(string subPath);
    public static PdfDocument GetPdfFile(PdfFiles file);
    private static PdfDocument GetPdfDocument(string subPath, PdfDocumentOpenMode openMode);
    public static XPdfForm GetPdfForm(PdfFiles file);
    private static XPdfForm GetPdfForm(string subPath, PdfDocumentOpenMode openMode);
}
public class PdfSharp.Snippets.Drawing.ImagesBmp : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.ImagesGif : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.ImagesJpeg : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Drawing.ImagesMisc : Snippet {
    public virtual void RenderSnippet(XGraphics gfx);
    public void RenderTestPage2(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.ImagesPng : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.LineStyle : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.LineTestsNew : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.LineTypes : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.PathCurves : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.PathFigures : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.PathMisc : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.PathShapes : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Drawing.PathText : Snippet {
    private static string TestChars;
    private static XRect RectCenterVLine;
    private static PathText();
    public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.PathWpf : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.ShapeTypes : Snippet {
    private static XRect RectBig;
    private static ShapeTypes();
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.Surrogates : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.SymbolFonts : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Drawing.TextAlignmentCenter : Snippet {
    private static string TestChars;
    private static XFont Font;
    private static XBrush Brush;
    private static XRect RectCenterVLine;
    private static TextAlignmentCenter();
    public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.TextMeasure : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.TextMisc : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Drawing.TransformationMisc : Snippet {
    public virtual void RenderSnippet(XGraphics gfx);
    public void RenderPage2(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Drawing.TransformationText : Snippet {
    public virtual void RenderSnippet(XGraphics gfx);
    private static void DrawAxes(XGraphics gfx, XPen pen, XPoint origin, double length);
}
public class PdfSharp.Snippets.Drawing.TransformationXForms : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawing.TransformationXImages : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Drawings.BrushTypes : Snippet {
    private static XRect RectBig;
    private static XRect RectSmall;
    private static BrushTypes();
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Drawings.TextAlignmentLeft : Snippet {
    private static string TestChars;
    private static XFont Font;
    private static XBrush Brush;
    private static XRect RectCenterVLine;
    private static TextAlignmentLeft();
    public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Drawings.TextAlignmentRight : Snippet {
    private static string TestChars;
    private static XFont Font;
    private static XBrush Brush;
    private static XRect RectCenterVLine;
    private static TextAlignmentRight();
    public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class PdfSharp.Snippets.Font.AnsiTable : ValueType {
    [CompilerGeneratedAttribute]
private int <number>P;
    [CompilerGeneratedAttribute]
private char <unicode>P;
    [CompilerGeneratedAttribute]
private char <ch>P;
    [CompilerGeneratedAttribute]
private string <description>P;
    public int Number { get; }
    public string Hex { get; }
    public char UnicodeValue { get; }
    public string UnicodeText { get; }
    public char Char { get; }
    public string Description { get; }
    public AnsiTable(int number, char unicode, char ch, string description);
    public int get_Number();
    public string get_Hex();
    public char get_UnicodeValue();
    public string get_UnicodeText();
    public char get_Char();
    public string get_Description();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Font.DefaultWindowsFontsSnippet : Snippet {
    private static string Text;
    private static string Text2;
    private static double EmSize;
    private XPdfFontOptions _fontOptions;
    private static string FamilyName;
    public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Font.ExoticFontResolverSnippet : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class PdfSharp.Snippets.Font.ExoticFontsDataHelper : object {
    public static Byte[] Oblivious { get; }
    public static Byte[] XFiles { get; }
    public static Byte[] get_Oblivious();
    public static Byte[] get_XFiles();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Font.ExoticFontsFontResolver : object {
    public sealed virtual FontResolverInfo ResolveTypeface(string familyName, bool isBold, bool isItalic);
    public sealed virtual Byte[] GetFont(string faceName);
}
public class PdfSharp.Snippets.Font.FailsafeFontResolver : object {
    [NullableAttribute("1")]
private static SegoeWpFontResolver SegoeWpFontResolver;
    private static FailsafeFontResolver();
    [NullableContextAttribute("1")]
public sealed virtual FontResolverInfo ResolveTypeface(string familyName, bool isBold, bool isItalic);
    [NullableContextAttribute("1")]
public sealed virtual Byte[] GetFont(string faceName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Font.FontAnsiEncoding : Snippet {
    public static AnsiTable[] Table;
    private static FontAnsiEncoding();
    public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Font.FontFamilyConstructionSnippet : Snippet {
    private static string Text;
    public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Font.FontMetrics : Feature {
    public static void TestFontMetrics();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Font.FrutigerFontsSnippet : Snippet {
    private static string Text;
    private static double EmSize;
    private static FrutigerFontsSnippet();
    public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Font.HelloWorld1Snippet : Snippet {
    private static string Text;
    private static string Text2;
    private static double EmSize;
    private XPdfFontOptions _fontOptions;
    private static IFontResolver fs;
    private static string FamilyName;
    private static HelloWorld1Snippet();
    public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Font.HelveticaNeueFontsSnippet : Snippet {
    private static string Text;
    private static double EmSize;
    private static string FamilyName;
    private static string FamilyNameLight;
    private XPdfFontOptions _fontOptions;
    private static HelveticaNeueFontsSnippet();
    public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Font.NullFontResolver : object {
    [NullableContextAttribute("1")]
public sealed virtual FontResolverInfo ResolveTypeface(string familyName, bool isBold, bool isItalic);
    [NullableContextAttribute("1")]
public sealed virtual Byte[] GetFont(string faceName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Font.PlatformFontConstructionSnippet : Snippet {
    private static string Text;
    private static string Text2;
    private static float EmSize;
    private XPdfFontOptions _fontOptions;
    private static string FamilyName;
    public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Font.PrivateFontCollection1Snippet : Snippet {
    private XPdfFontOptions _fontOptions;
    private static string FamilyNameA;
    private static string FamilyNameT;
    private static double EmSize;
    public virtual void RenderSnippet(XGraphics gfx);
    internal static double GetDescent(XFont font);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Font.PrivateFontCollectionSnippet : Snippet {
    private static string Text;
    private static double EmSize;
    private XPdfFontOptions _fontOptions;
    private static PrivateFontCollectionSnippet();
    public virtual void RenderSnippet(XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Font.SegoeWpFontResolver : object {
    public sealed virtual FontResolverInfo ResolveTypeface(string familyName, bool isBold, bool isItalic);
    public sealed virtual Byte[] GetFont(string faceName);
}
public class PdfSharp.Snippets.Font.SegoeWpFontResolverSnippet : Snippet {
    [NullableContextAttribute("1")]
public virtual void RenderSnippet(XGraphics gfx);
}
public class PdfSharp.Snippets.Font.TestXFilesFontResolver1 : object {
    [NullableAttribute("1")]
private static string XFiles;
    [NullableContextAttribute("1")]
public sealed virtual FontResolverInfo ResolveTypeface(string familyName, bool isBold, bool isItalic);
    [NullableContextAttribute("1")]
public sealed virtual Byte[] GetFont(string faceName);
}
public class PdfSharp.Snippets.Font.TestXFilesFontResolver2 : object {
    [NullableAttribute("1")]
private static string XFiles;
    [NullableContextAttribute("1")]
public sealed virtual FontResolverInfo ResolveTypeface(string familyName, bool isBold, bool isItalic);
    [NullableContextAttribute("1")]
public sealed virtual Byte[] GetFont(string faceName);
}
public class PdfSharp.Snippets.Font.TestXFilesFontResolver3 : object {
    [NullableAttribute("1")]
private static string XFiles;
    [NullableContextAttribute("1")]
public sealed virtual FontResolverInfo ResolveTypeface(string familyName, bool isBold, bool isItalic);
    [NullableContextAttribute("1")]
public sealed virtual Byte[] GetFont(string faceName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.LeftToRightText : object {
    public static string Arabic;
    public static string Arabic2;
    private static LeftToRightText();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Pangrams : object {
    public static string QuickBrownFox;
    public static string SphinxOfQuarz;
    public static string TwelveBoxer;
    private static Pangrams();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Pdf.BouncyCastleSigner : object {
    private int _signatureSize;
    [CompilerGeneratedAttribute]
private X509Certificate2 <Certificate>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Certificate2Collection <CertificateChain>k__BackingField;
    [CompilerGeneratedAttribute]
private PdfMessageDigestType <DigestType>k__BackingField;
    public string CertificateName { get; }
    private X509Certificate2 Certificate { get; private set; }
    private X509Certificate2Collection CertificateChain { get; }
    private PdfMessageDigestType DigestType { get; }
    public BouncyCastleSigner(ValueTuple`2<X509Certificate2, X509Certificate2Collection> certificateData, PdfMessageDigestType digestType);
    public sealed virtual string get_CertificateName();
    [AsyncStateMachineAttribute("PdfSharp.Snippets.Pdf.BouncyCastleSigner/<GetSignatureSizeAsync>d__3")]
public sealed virtual Task`1<int> GetSignatureSizeAsync();
    [AsyncStateMachineAttribute("PdfSharp.Snippets.Pdf.BouncyCastleSigner/<GetSignatureAsync>d__5")]
public sealed virtual Task`1<Byte[]> GetSignatureAsync(Stream stream);
    [CompilerGeneratedAttribute]
private X509Certificate2 get_Certificate();
    [CompilerGeneratedAttribute]
private void set_Certificate(X509Certificate2 value);
    [CompilerGeneratedAttribute]
private X509Certificate2Collection get_CertificateChain();
    [CompilerGeneratedAttribute]
private PdfMessageDigestType get_DigestType();
    private string GetProperDigestAlgorithm(int pdfVersion);
    private string GetProperDigestAlgorithm(PdfMessageDigestType digestType);
    private AsymmetricAlgorithm GetAsymmetricAlgorithm(X509Certificate2 cert);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.Pdf.LinkAnnotations : Snippet {
    public virtual void RenderSnippet(XGraphics gfx);
    private PdfLinkAnnotation AddHyperlink(PdfPage page, XGraphics gfx, XFont font, string text, MyLinkTypes linkType, object target);
    public void RenderSnippet(PdfPage page, XGraphics gfx);
    public void RenderTestPage2(PdfPage page, XGraphics gfx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class PdfSharp.Snippets.PdfFileCreator : Snippet {
    public void AddPages(PdfDocument document, int count);
    public void AddPage(PdfDocument document);
    public virtual void RenderSnippet(XGraphics gfx);
}
public static class PdfSharp.Snippets.TestData : object {
    [NullableAttribute("1")]
public static string LoremIpsumText;
    private static TestData();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
