public enum Plugin.CurrentActivity.ActivityEvent : Enum {
    public int value__;
    public static ActivityEvent Created;
    public static ActivityEvent Resumed;
    public static ActivityEvent Paused;
    public static ActivityEvent Destroyed;
    public static ActivityEvent SaveInstanceState;
    public static ActivityEvent Started;
    public static ActivityEvent Stopped;
}
public class Plugin.CurrentActivity.ActivityEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private ActivityEvent <Event>k__BackingField;
    [CompilerGeneratedAttribute]
private Activity <Activity>k__BackingField;
    public ActivityEvent Event { get; }
    public Activity Activity { get; }
    internal ActivityEventArgs(Activity activity, ActivityEvent ev);
    [CompilerGeneratedAttribute]
public ActivityEvent get_Event();
    [CompilerGeneratedAttribute]
public Activity get_Activity();
}
[PreserveAttribute]
internal class Plugin.CurrentActivity.ActivityLifecycleContextListener : Object {
    private WeakReference`1<Activity> currentActivity;
    public Context Context { get; }
    public Activity Activity { get; public set; }
    private CurrentActivityImplementation Current { get; }
    public Context get_Context();
    public Activity get_Activity();
    public void set_Activity(Activity value);
    private CurrentActivityImplementation get_Current();
    public sealed virtual void OnActivityCreated(Activity activity, Bundle savedInstanceState);
    public sealed virtual void OnActivityDestroyed(Activity activity);
    public sealed virtual void OnActivityPaused(Activity activity);
    public sealed virtual void OnActivityResumed(Activity activity);
    public sealed virtual void OnActivitySaveInstanceState(Activity activity, Bundle outState);
    public sealed virtual void OnActivityStarted(Activity activity);
    public sealed virtual void OnActivityStopped(Activity activity);
}
public class Plugin.CurrentActivity.CrossCurrentActivity : object {
    private static Lazy`1<ICurrentActivity> implementation;
    public static ICurrentActivity Current { get; }
    private static CrossCurrentActivity();
    public static ICurrentActivity get_Current();
    private static ICurrentActivity CreateCurrentActivity();
    internal static Exception NotImplementedInReferenceAssembly();
}
[PreserveAttribute]
public class Plugin.CurrentActivity.CurrentActivityImplementation : object {
    [CompilerGeneratedAttribute]
private EventHandler`1<ActivityEventArgs> ActivityStateChanged;
    private ActivityLifecycleContextListener lifecycleListener;
    public Activity Activity { get; public set; }
    public Context AppContext { get; }
    public sealed virtual Activity get_Activity();
    public sealed virtual void set_Activity(Activity value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ActivityStateChanged(EventHandler`1<ActivityEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ActivityStateChanged(EventHandler`1<ActivityEventArgs> value);
    internal void RaiseStateChanged(Activity activity, ActivityEvent ev);
    public sealed virtual Context get_AppContext();
    public sealed virtual void Init(Application application);
    public sealed virtual void Init(Activity activity, Bundle bundle);
}
public interface Plugin.CurrentActivity.ICurrentActivity {
    public Activity Activity { get; public set; }
    public Context AppContext { get; }
    public abstract virtual Activity get_Activity();
    public abstract virtual void set_Activity(Activity value);
    public abstract virtual Context get_AppContext();
    [CompilerGeneratedAttribute]
public abstract virtual void add_ActivityStateChanged(EventHandler`1<ActivityEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ActivityStateChanged(EventHandler`1<ActivityEventArgs> value);
    public abstract virtual void Init(Application application);
    public abstract virtual void Init(Activity activity, Bundle bundle);
}
