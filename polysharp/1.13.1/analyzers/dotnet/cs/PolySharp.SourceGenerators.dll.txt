[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class PolySharp.SourceGenerators.Constants.PolySharpMSBuildProperties : object {
    public static string UsePublicAccessibilityForGeneratedTypes;
    public static string IncludeRuntimeSupportedAttributes;
    public static string UseInteropServices2NamespaceForUnmanagedCallersOnlyAttribute;
    public static string ExcludeGeneratedTypes;
    public static string IncludeGeneratedTypes;
    public static string ExcludeTypeForwardedToDeclarations;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class PolySharp.SourceGenerators.Diagnostics.DiagnosticDescriptors : object {
    public static DiagnosticDescriptor InvalidBoolMSBuildProperty;
    public static DiagnosticDescriptor InvalidPolyfillFullyQualifiedMetadataName;
    public static DiagnosticDescriptor UnsupportedCSharpLanguageVersionError;
    private static DiagnosticDescriptors();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class PolySharp.SourceGenerators.Extensions.AnalyzerConfigOptionsProviderExtensions : object {
    [ExtensionAttribute]
public static bool IsValidMSBuildProperty(AnalyzerConfigOptionsProvider options, string propertyName, String& propertyValue);
    [ExtensionAttribute]
public static bool GetBoolMSBuildProperty(AnalyzerConfigOptionsProvider options, string propertyName);
    [ExtensionAttribute]
public static ImmutableArray`1<string> GetStringArrayMSBuildProperty(AnalyzerConfigOptionsProvider options, string propertyName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class PolySharp.SourceGenerators.Extensions.CompilationExtensions : object {
    [ExtensionAttribute]
public static bool HasLanguageVersionAtLeastEqualTo(Compilation compilation, LanguageVersion languageVersion);
    [ExtensionAttribute]
public static bool HasAccessibleTypeWithMetadataName(Compilation compilation, string fullyQualifiedMetadataName);
}
[ExtensionAttribute]
internal static class PolySharp.SourceGenerators.Extensions.DiagnosticsExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void Add(ImmutableArrayBuilder`1<DiagnosticInfo> diagnostics, DiagnosticDescriptor descriptor, Object[] args);
    [ExtensionAttribute]
public static void ReportDiagnostics(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider`1<DiagnosticInfo> diagnostics);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class PolySharp.SourceGenerators.Extensions.ISymbolExtensions : object {
    [ExtensionAttribute]
public static Accessibility GetEffectiveAccessibility(ISymbol symbol);
    [ExtensionAttribute]
public static bool CanBeAccessedFrom(ISymbol symbol, IAssemblySymbol assembly);
}
internal static class PolySharp.SourceGenerators.Helpers.<ImmutableArrayBuilder_T_>F600C92348B129337650A7DF1204CD8314141AA9154DE50C4B3D731FFF2E20DC4__ImmutableArrayBuilder : object {
    public static void ThrowArgumentOutOfRangeExceptionForIndex();
}
[ExtensionAttribute]
internal static class PolySharp.SourceGenerators.Helpers.EquatableArray : object {
    [ExtensionAttribute]
public static EquatableArray`1<T> AsEquatableArray(ImmutableArray`1<T> array);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
internal class PolySharp.SourceGenerators.Helpers.EquatableArray`1 : ValueType {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private T[] array;
    public T Item { get; }
    public bool IsEmpty { get; }
    public bool IsDefaultOrEmpty { get; }
    public int Length { get; }
    public EquatableArray`1(ImmutableArray`1<T> array);
    public T get_Item(int index);
    public bool get_IsEmpty();
    public bool get_IsDefaultOrEmpty();
    public int get_Length();
    public sealed virtual bool Equals(EquatableArray`1<T> array);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public ImmutableArray`1<T> AsImmutableArray();
    public static EquatableArray`1<T> FromImmutableArray(ImmutableArray`1<T> array);
    public ReadOnlySpan`1<T> AsSpan();
    public T[] ToArray();
    public Enumerator<T> GetEnumerator();
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public static EquatableArray`1<T> op_Implicit(ImmutableArray`1<T> array);
    public static ImmutableArray`1<T> op_Implicit(EquatableArray`1<T> array);
    public static bool op_Equality(EquatableArray`1<T> left, EquatableArray`1<T> right);
    public static bool op_Inequality(EquatableArray`1<T> left, EquatableArray`1<T> right);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class PolySharp.SourceGenerators.Helpers.ImmutableArrayBuilder`1 : ValueType {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ObjectPool`1<Writer<T>> SharedObjectPool;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Writer<T> writer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ReadOnlySpan`1<T> WrittenSpan { get; }
    public int Count { get; }
    private ImmutableArrayBuilder`1(Writer<T> writer);
    private static ImmutableArrayBuilder`1();
    public static ImmutableArrayBuilder`1<T> Rent();
    [IsReadOnlyAttribute]
public ReadOnlySpan`1<T> get_WrittenSpan();
    [IsReadOnlyAttribute]
public int get_Count();
    [IsReadOnlyAttribute]
public void Add(T item);
    [IsReadOnlyAttribute]
public void AddRange(ReadOnlySpan`1<T> items);
    [IsReadOnlyAttribute]
public ImmutableArray`1<T> ToImmutable();
    [IsReadOnlyAttribute]
public T[] ToArray();
    [IsReadOnlyAttribute]
public virtual string ToString();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class PolySharp.SourceGenerators.Helpers.ObjectPool`1 : object {
    private Func`1<T> factory;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Element[] items;
    [NullableAttribute("2")]
private T firstItem;
    public ObjectPool`1(Func`1<T> factory);
    public ObjectPool`1(Func`1<T> factory, int size);
    public T Allocate();
    public void Free(T obj);
    private T AllocateSlow();
    private void FreeSlow(T obj);
}
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class PolySharp.SourceGenerators.InvalidPolySharpMSBuildOptionAnalyzer : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    [NullableContextAttribute("1")]
private static ImmutableArray`1<DiagnosticInfo> GetOptionsDiagnostics(AnalyzerConfigOptionsProvider options, CancellationToken token);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class PolySharp.SourceGenerators.Models.AvailableType : object {
    [CompilerGeneratedAttribute]
private string <FullyQualifiedMetadataName>k__BackingField;
    [CompilerGeneratedAttribute]
private SyntaxFixupType <FixupType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string FullyQualifiedMetadataName { get; public set; }
    public SyntaxFixupType FixupType { get; public set; }
    public AvailableType(string FullyQualifiedMetadataName, SyntaxFixupType FixupType);
    [CompilerGeneratedAttribute]
private AvailableType(AvailableType original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_FullyQualifiedMetadataName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FullyQualifiedMetadataName(string value);
    [CompilerGeneratedAttribute]
public SyntaxFixupType get_FixupType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FixupType(SyntaxFixupType value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(AvailableType left, AvailableType right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(AvailableType left, AvailableType right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(AvailableType other);
    [CompilerGeneratedAttribute]
public AvailableType <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& FullyQualifiedMetadataName, SyntaxFixupType& FixupType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class PolySharp.SourceGenerators.Models.DiagnosticInfo : object {
    [CompilerGeneratedAttribute]
private DiagnosticDescriptor <Descriptor>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<string> <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public DiagnosticDescriptor Descriptor { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<string> Arguments { get; public set; }
    public DiagnosticInfo(DiagnosticDescriptor Descriptor, EquatableArray`1<string> Arguments);
    [CompilerGeneratedAttribute]
private DiagnosticInfo(DiagnosticInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public DiagnosticDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Descriptor(DiagnosticDescriptor value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<string> get_Arguments();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Arguments(EquatableArray`1<string> value);
    public Diagnostic ToDiagnostic();
    public static DiagnosticInfo Create(DiagnosticDescriptor descriptor, Object[] args);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(DiagnosticInfo left, DiagnosticInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(DiagnosticInfo left, DiagnosticInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(DiagnosticInfo other);
    [CompilerGeneratedAttribute]
public DiagnosticInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(DiagnosticDescriptor& Descriptor, EquatableArray`1& Arguments);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class PolySharp.SourceGenerators.Models.GeneratedType : object {
    [CompilerGeneratedAttribute]
private string <FullyQualifiedMetadataName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPublicAccessibilityRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private SyntaxFixupType <FixupType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string FullyQualifiedMetadataName { get; public set; }
    public bool IsPublicAccessibilityRequired { get; public set; }
    public SyntaxFixupType FixupType { get; public set; }
    public GeneratedType(string FullyQualifiedMetadataName, bool IsPublicAccessibilityRequired, SyntaxFixupType FixupType);
    [CompilerGeneratedAttribute]
private GeneratedType(GeneratedType original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_FullyQualifiedMetadataName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FullyQualifiedMetadataName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsPublicAccessibilityRequired();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsPublicAccessibilityRequired(bool value);
    [CompilerGeneratedAttribute]
public SyntaxFixupType get_FixupType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FixupType(SyntaxFixupType value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GeneratedType left, GeneratedType right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GeneratedType left, GeneratedType right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(GeneratedType other);
    [CompilerGeneratedAttribute]
public GeneratedType <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& FullyQualifiedMetadataName, Boolean& IsPublicAccessibilityRequired, SyntaxFixupType& FixupType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class PolySharp.SourceGenerators.Models.GenerationOptions : object {
    [CompilerGeneratedAttribute]
private bool <UsePublicAccessibilityForGeneratedTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeRuntimeSupportedAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseInteropServices2NamespaceForUnmanagedCallersOnlyAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExcludeTypeForwardedToDeclarations>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<string> <ExcludeGeneratedTypes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EquatableArray`1<string> <IncludeGeneratedTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public bool UsePublicAccessibilityForGeneratedTypes { get; public set; }
    public bool IncludeRuntimeSupportedAttributes { get; public set; }
    public bool UseInteropServices2NamespaceForUnmanagedCallersOnlyAttribute { get; public set; }
    public bool ExcludeTypeForwardedToDeclarations { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<string> ExcludeGeneratedTypes { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EquatableArray`1<string> IncludeGeneratedTypes { get; public set; }
    public GenerationOptions(bool UsePublicAccessibilityForGeneratedTypes, bool IncludeRuntimeSupportedAttributes, bool UseInteropServices2NamespaceForUnmanagedCallersOnlyAttribute, bool ExcludeTypeForwardedToDeclarations, EquatableArray`1<string> ExcludeGeneratedTypes, EquatableArray`1<string> IncludeGeneratedTypes);
    [CompilerGeneratedAttribute]
private GenerationOptions(GenerationOptions original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_UsePublicAccessibilityForGeneratedTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UsePublicAccessibilityForGeneratedTypes(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeRuntimeSupportedAttributes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IncludeRuntimeSupportedAttributes(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseInteropServices2NamespaceForUnmanagedCallersOnlyAttribute();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UseInteropServices2NamespaceForUnmanagedCallersOnlyAttribute(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExcludeTypeForwardedToDeclarations();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ExcludeTypeForwardedToDeclarations(bool value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<string> get_ExcludeGeneratedTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ExcludeGeneratedTypes(EquatableArray`1<string> value);
    [CompilerGeneratedAttribute]
public EquatableArray`1<string> get_IncludeGeneratedTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IncludeGeneratedTypes(EquatableArray`1<string> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GenerationOptions left, GenerationOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GenerationOptions left, GenerationOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(GenerationOptions other);
    [CompilerGeneratedAttribute]
public GenerationOptions <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Boolean& UsePublicAccessibilityForGeneratedTypes, Boolean& IncludeRuntimeSupportedAttributes, Boolean& UseInteropServices2NamespaceForUnmanagedCallersOnlyAttribute, Boolean& ExcludeTypeForwardedToDeclarations, EquatableArray`1& ExcludeGeneratedTypes, EquatableArray`1& IncludeGeneratedTypes);
}
[FlagsAttribute]
internal enum PolySharp.SourceGenerators.Models.SyntaxFixupType : Enum {
    public int value__;
    public static SyntaxFixupType None;
    public static SyntaxFixupType RemoveMethodImplAttributes;
    public static SyntaxFixupType UseInteropServices2ForUnmanagedCallersOnlyAttribute;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class PolySharp.SourceGenerators.PolyfillsGenerator : object {
    private static string EmbeddedResourceNameToFullyQualifiedTypeNameRegex;
    public static ImmutableDictionary`2<string, string> FullyQualifiedTypeNamesToResourceNames;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ImmutableArray`1<string> LanguageSupportTypeNames;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ImmutableArray`1<string> RuntimeSupportedTypeNames;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ImmutableArray`1<string> AllSupportTypeNames;
    private static Regex MethodImplOptionsRegex;
    private ConcurrentDictionary`2<GeneratedType, SourceText> manifestSources;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ImmutableArray`1<string> ModreqCandidateFullyQualifiedTypeNames;
    private static PolyfillsGenerator();
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    private static GenerationOptions GetGenerationOptions(AnalyzerConfigOptionsProvider options, CancellationToken _);
    private static ImmutableArray`1<AvailableType> GetAvailableTypes(Compilation compilation, CancellationToken token);
    private static bool IsAvailableTypeSelected(ValueTuple`2<string, GenerationOptions> info);
    private static bool IsAvailableTypeSelected(ValueTuple`2<AvailableType, GenerationOptions> info);
    private static GeneratedType GetGeneratedType(ValueTuple`2<AvailableType, GenerationOptions> info, CancellationToken token);
    private void EmitGeneratedType(SourceProductionContext context, GeneratedType type);
    private static ImmutableArray`1<string> GetCoreLibTypes(Compilation compilation, CancellationToken token);
    private static bool IsCoreLibTypeSelected(ValueTuple`2<string, GenerationOptions> info);
    private static string GetCoreLibType(ValueTuple`2<string, GenerationOptions> info, CancellationToken token);
    private static void EmitTypeForwards(SourceProductionContext context, string fullyQualifiedTypeName);
    [CompilerGeneratedAttribute]
internal static bool <GetAvailableTypes>g__IsTypeAvailable|9_0(Compilation compilation, string name, CancellationToken token);
    [CompilerGeneratedAttribute]
internal static SyntaxFixupType <GetAvailableTypes>g__GetSyntaxFixupType|9_1(Compilation compilation, string name);
    [CompilerGeneratedAttribute]
internal static SyntaxFixupType <GetGeneratedType>g__GetSyntaxFixupType|12_0(AvailableType availableType, GenerationOptions options);
}
[DiagnosticAnalyzerAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class PolySharp.SourceGenerators.UnsupportedCSharpLanguageVersionAnalyzer : DiagnosticAnalyzer {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ImmutableArray`1<DiagnosticDescriptor> <SupportedDiagnostics>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ImmutableArray`1<DiagnosticDescriptor> SupportedDiagnostics { get; }
    [CompilerGeneratedAttribute]
public virtual ImmutableArray`1<DiagnosticDescriptor> get_SupportedDiagnostics();
    [NullableContextAttribute("1")]
public virtual void Initialize(AnalysisContext context);
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("28108")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("352")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MemberSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    public string MemberSignature { get; }
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public Type Type { get; }
    public string TypeName { get; }
    public string AssemblyName { get; }
    public string Condition { get; public set; }
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName);
    [CompilerGeneratedAttribute]
public string get_MemberSignature();
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("736")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.RequiresAssemblyFilesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    [NullableContextAttribute("1")]
public RequiresAssemblyFilesAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[AttributeUsageAttribute("32")]
internal class System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.StringSyntaxAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Syntax>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    public static string CompositeFormat;
    public static string DateOnlyFormat;
    public static string DateTimeFormat;
    public static string EnumFormat;
    public static string GuidFormat;
    public static string Json;
    public static string NumericFormat;
    public static string Regex;
    public static string TimeOnlyFormat;
    public static string TimeSpanFormat;
    public static string Uri;
    public static string Xml;
    public string Syntax { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] Arguments { get; }
    public StringSyntaxAttribute(string syntax);
    public StringSyntaxAttribute(string syntax, Object[] arguments);
    [CompilerGeneratedAttribute]
public string get_Syntax();
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[AttributeUsageAttribute("2240")]
internal class System.Diagnostics.CodeAnalysis.UnscopedRefAttribute : Attribute {
}
[AttributeUsageAttribute("108")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.StackTraceHiddenAttribute : Attribute {
}
[IsReadOnlyAttribute]
internal class System.Index : ValueType {
    private int _value;
    public static Index Start { get; }
    public static Index End { get; }
    public int Value { get; }
    public bool IsFromEnd { get; }
    public Index(int value, bool fromEnd);
    private Index(int value);
    public static Index get_Start();
    public static Index get_End();
    public static Index FromStart(int value);
    public static Index FromEnd(int value);
    public int get_Value();
    public bool get_IsFromEnd();
    public int GetOffset(int length);
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Index other);
    public virtual int GetHashCode();
    public static Index op_Implicit(int value);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
private string ToStringFromEnd();
}
[IsReadOnlyAttribute]
internal class System.Range : ValueType {
    [CompilerGeneratedAttribute]
private Index <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Index <End>k__BackingField;
    public Index Start { get; }
    public Index End { get; }
    public static Range All { get; }
    public Range(Index start, Index end);
    [CompilerGeneratedAttribute]
public Index get_Start();
    [CompilerGeneratedAttribute]
public Index get_End();
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Range other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static Range StartAt(Index start);
    public static Range EndAt(Index end);
    public static Range get_All();
    public ValueTuple`2<int, int> GetOffsetAndLength(int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("5212")]
internal class System.Runtime.CompilerServices.AsyncMethodBuilderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BuilderType>k__BackingField;
    public Type BuilderType { get; }
    public AsyncMethodBuilderAttribute(Type builderType);
    [CompilerGeneratedAttribute]
public Type get_BuilderType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FeatureName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    public static string RefStructs;
    public static string RequiredMembers;
    public string FeatureName { get; }
    public bool IsOptional { get; public set; }
    public CompilerFeatureRequiredAttribute(string featureName);
    [CompilerGeneratedAttribute]
public string get_FeatureName();
    [CompilerGeneratedAttribute]
public bool get_IsOptional();
    [CompilerGeneratedAttribute]
public void set_IsOptional(bool value);
}
[AttributeUsageAttribute("1")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Arguments>k__BackingField;
    public String[] Arguments { get; }
    public InterpolatedStringHandlerArgumentAttribute(string argument);
    public InterpolatedStringHandlerArgumentAttribute(String[] arguments);
    [CompilerGeneratedAttribute]
public String[] get_Arguments();
}
[AttributeUsageAttribute("12")]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute : Attribute {
}
[EditorBrowsableAttribute("1")]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Runtime.CompilerServices.ModuleInitializerAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("396")]
internal class System.Runtime.CompilerServices.RequiredMemberAttribute : Attribute {
}
[AttributeUsageAttribute("1774")]
internal class System.Runtime.CompilerServices.SkipLocalsInitAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.InteropServices.SuppressGCTransitionAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute : Attribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Type[] CallConvs;
    [NullableAttribute("2")]
public string EntryPoint;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2047")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.ObsoletedOSPlatformAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    [NullableContextAttribute("1")]
public ObsoletedOSPlatformAttribute(string platformName);
    [NullableContextAttribute("1")]
public ObsoletedOSPlatformAttribute(string platformName, string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
internal class System.Runtime.Versioning.RequiresPreviewFeaturesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresPreviewFeaturesAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[AttributeUsageAttribute("2047")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.SupportedOSPlatformAttribute : Attribute {
    [NullableContextAttribute("1")]
public SupportedOSPlatformAttribute(string platformName);
}
[AttributeUsageAttribute("448")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.SupportedOSPlatformGuardAttribute : Attribute {
    [NullableContextAttribute("1")]
public SupportedOSPlatformGuardAttribute(string platformName);
}
[AttributeUsageAttribute("1")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.TargetPlatformAttribute : Attribute {
    [NullableContextAttribute("1")]
public TargetPlatformAttribute(string platformName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2047")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.UnsupportedOSPlatformAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Message { get; }
    [NullableContextAttribute("1")]
public UnsupportedOSPlatformAttribute(string platformName);
    [NullableContextAttribute("1")]
public UnsupportedOSPlatformAttribute(string platformName, string message);
    [CompilerGeneratedAttribute]
public string get_Message();
}
[AttributeUsageAttribute("448")]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.UnsupportedOSPlatformGuardAttribute : Attribute {
    [NullableContextAttribute("1")]
public UnsupportedOSPlatformGuardAttribute(string platformName);
}
