public class System.JsonObject : JsonObject`1<object> {
    public JsonObject(string json);
}
public class System.JsonObject`1 : object {
    [CompilerGeneratedAttribute]
private string <_originalValue>k__BackingField;
    [CompilerGeneratedAttribute]
private T <_originalObject>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <_internalType>k__BackingField;
    private string _originalValue { get; private set; }
    private T _originalObject { get; private set; }
    private Type _internalType { get; private set; }
    public T Object { get; public set; }
    public string Json { get; public set; }
    public JsonObject`1(T instance);
    public JsonObject`1(string json);
    public JsonObject`1(Byte[] json);
    [CompilerGeneratedAttribute]
private string get__originalValue();
    [CompilerGeneratedAttribute]
private void set__originalValue(string value);
    [CompilerGeneratedAttribute]
private T get__originalObject();
    [CompilerGeneratedAttribute]
private void set__originalObject(T value);
    [CompilerGeneratedAttribute]
private Type get__internalType();
    [CompilerGeneratedAttribute]
private void set__internalType(Type value);
    public T get_Object();
    public void set_Object(T value);
    public string get_Json();
    public void set_Json(string value);
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(JsonObject`1<T> other);
    public sealed virtual bool Equals(JsonObject other);
    public sealed virtual bool Equals(string other);
    private Type GetInternalObjectType();
    public static JsonObject`1<T> op_Implicit(Byte[] json);
    public static JsonObject`1<T> op_Implicit(string json);
    public static JsonObject`1<T> op_Implicit(T obj);
    public static JsonObject`1<T> op_Implicit(JsonObject`1<object> obj);
    private static bool IsObject(string json);
    private static bool IsObject(string json, JsonObject& jsonObject);
    private static bool IsJsonConstant(string json);
    private static bool IsSameType(string json1, string json2);
    public virtual int GetHashCode();
}
