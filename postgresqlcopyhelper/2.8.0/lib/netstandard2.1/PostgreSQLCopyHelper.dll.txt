[ExtensionAttribute]
public static class PostgreSQLCopyHelper.ArrayTypeExtensions : object {
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapArray(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Byte[][]> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapArray(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Int16[]> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapArray(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Int32[]> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapArray(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Int64[]> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapArray(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Decimal[]> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapArray(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Single[]> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapArray(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Double[]> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapArray(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, String[]> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapArray(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, TProperty> propertyGetter, NpgsqlDbType type);
}
[ExtensionAttribute]
public static class PostgreSQLCopyHelper.BinaryDataTypeExtensions : object {
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapByteArray(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Byte[]> propertyGetter);
}
[ExtensionAttribute]
public static class PostgreSQLCopyHelper.BitStringTypeExtensions : object {
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapBit(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, bool> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapBit(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<bool>> propertyGetter);
}
[ExtensionAttribute]
public static class PostgreSQLCopyHelper.BooleanTypeExtensions : object {
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapBoolean(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, bool> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapBoolean(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<bool>> propertyGetter);
}
[ExtensionAttribute]
public static class PostgreSQLCopyHelper.CharacterTypeExtensions : object {
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapVarchar(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, string> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapCharacter(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, string> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapText(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, string> propertyGetter);
}
[ExtensionAttribute]
public static class PostgreSQLCopyHelper.DateTimeTypeExtensions : object {
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapDate(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, DateTime> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapDate(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<DateTime>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTime(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, TimeSpan> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTime(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<TimeSpan>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeStamp(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, DateTime> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeStamp(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<DateTime>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeStampTz(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, DateTime> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeStampTz(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<DateTime>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeStampTz(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, DateTimeOffset> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeStampTz(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<DateTimeOffset>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapInterval(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, TimeSpan> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapInterval(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<TimeSpan>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeTz(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, DateTimeOffset> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeTz(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<DateTimeOffset>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeTz(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, DateTime> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeTz(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<DateTime>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeTz(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, TimeSpan> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapTimeTz(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<TimeSpan>> propertyGetter);
}
public interface PostgreSQLCopyHelper.IPostgreSQLCopyHelper`1 {
    public abstract virtual ulong SaveAll(NpgsqlConnection connection, IEnumerable`1<TEntity> entities);
    public abstract virtual ValueTask`1<ulong> SaveAllAsync(NpgsqlConnection connection, IEnumerable`1<TEntity> entities, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<ulong> SaveAllAsync(NpgsqlConnection connection, IAsyncEnumerable`1<TEntity> entities, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class PostgreSQLCopyHelper.JsonTypeExtensions : object {
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapJson(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, string> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapJsonb(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, string> propertyGetter);
}
internal class PostgreSQLCopyHelper.Model.ColumnDefinition`1 : object {
    [CompilerGeneratedAttribute]
private string <ColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ClrType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NpgsqlDbType> <DbType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`4<NpgsqlBinaryImporter, TEntity, CancellationToken, Task> <WriteAsync>k__BackingField;
    public string ColumnName { get; public set; }
    public Type ClrType { get; public set; }
    public Nullable`1<NpgsqlDbType> DbType { get; public set; }
    public string DataTypeName { get; public set; }
    public Func`4<NpgsqlBinaryImporter, TEntity, CancellationToken, Task> WriteAsync { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ColumnName();
    [CompilerGeneratedAttribute]
public void set_ColumnName(string value);
    [CompilerGeneratedAttribute]
public Type get_ClrType();
    [CompilerGeneratedAttribute]
public void set_ClrType(Type value);
    [CompilerGeneratedAttribute]
public Nullable`1<NpgsqlDbType> get_DbType();
    [CompilerGeneratedAttribute]
public void set_DbType(Nullable`1<NpgsqlDbType> value);
    [CompilerGeneratedAttribute]
public string get_DataTypeName();
    [CompilerGeneratedAttribute]
public void set_DataTypeName(string value);
    [CompilerGeneratedAttribute]
public Func`4<NpgsqlBinaryImporter, TEntity, CancellationToken, Task> get_WriteAsync();
    [CompilerGeneratedAttribute]
public void set_WriteAsync(Func`4<NpgsqlBinaryImporter, TEntity, CancellationToken, Task> value);
    public virtual string ToString();
}
internal class PostgreSQLCopyHelper.Model.TableDefinition : object {
    [CompilerGeneratedAttribute]
private string <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    public string Schema { get; public set; }
    public string TableName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Schema();
    [CompilerGeneratedAttribute]
public void set_Schema(string value);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public void set_TableName(string value);
    public string GetFullyQualifiedTableName(bool usePostgresQuoting);
    public virtual string ToString();
}
public class PostgreSQLCopyHelper.Model.TargetColumn : object {
    [CompilerGeneratedAttribute]
private string <ColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ClrType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NpgsqlDbType> <DbType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataTypeName>k__BackingField;
    public string ColumnName { get; internal set; }
    public Type ClrType { get; internal set; }
    public Nullable`1<NpgsqlDbType> DbType { get; internal set; }
    public string DataTypeName { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_ColumnName();
    [CompilerGeneratedAttribute]
internal void set_ColumnName(string value);
    [CompilerGeneratedAttribute]
public Type get_ClrType();
    [CompilerGeneratedAttribute]
internal void set_ClrType(Type value);
    [CompilerGeneratedAttribute]
public Nullable`1<NpgsqlDbType> get_DbType();
    [CompilerGeneratedAttribute]
internal void set_DbType(Nullable`1<NpgsqlDbType> value);
    [CompilerGeneratedAttribute]
public string get_DataTypeName();
    [CompilerGeneratedAttribute]
internal void set_DataTypeName(string value);
}
public class PostgreSQLCopyHelper.Model.TargetTable : object {
    [CompilerGeneratedAttribute]
private string <SchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsePostgresQuoting>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<TargetColumn> <Columns>k__BackingField;
    public string SchemaName { get; internal set; }
    public string TableName { get; internal set; }
    public bool UsePostgresQuoting { get; internal set; }
    public IReadOnlyList`1<TargetColumn> Columns { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_SchemaName();
    [CompilerGeneratedAttribute]
internal void set_SchemaName(string value);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
internal void set_TableName(string value);
    [CompilerGeneratedAttribute]
public bool get_UsePostgresQuoting();
    [CompilerGeneratedAttribute]
internal void set_UsePostgresQuoting(bool value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<TargetColumn> get_Columns();
    [CompilerGeneratedAttribute]
internal void set_Columns(IReadOnlyList`1<TargetColumn> value);
    public string GetFullyQualifiedTableName();
}
[ExtensionAttribute]
public static class PostgreSQLCopyHelper.MonetaryTypeExtensions : object {
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapMoney(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, decimal> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapMoney(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<decimal>> propertyGetter);
}
[ExtensionAttribute]
public static class PostgreSQLCopyHelper.NetworkAddressTypeExtensions : object {
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapInetAddress(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, IPAddress> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapMacAddress(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, PhysicalAddress> propertyGetter);
}
[ExtensionAttribute]
public static class PostgreSQLCopyHelper.NumericTypeExtensions : object {
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapSmallInt(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, short> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapSmallInt(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<short>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapInteger(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, int> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapInteger(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<int>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapBigInt(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, long> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapBigInt(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<long>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapNumeric(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, decimal> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapNumeric(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<decimal>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapReal(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, float> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapReal(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<float>> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapDouble(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, double> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapDouble(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<double>> propertyGetter);
}
public class PostgreSQLCopyHelper.PostgreSQLCopyHelper`1 : object {
    private bool _usePostgresQuoting;
    private TableDefinition _table;
    private List`1<ColumnDefinition`1<TEntity>> _columns;
    public TargetTable TargetTable { get; }
    public PostgreSQLCopyHelper`1(string tableName);
    public PostgreSQLCopyHelper`1(string schemaName, string tableName);
    public TargetTable get_TargetTable();
    public sealed virtual ulong SaveAll(NpgsqlConnection connection, IEnumerable`1<TEntity> entities);
    public sealed virtual ValueTask`1<ulong> SaveAllAsync(NpgsqlConnection connection, IEnumerable`1<TEntity> entities, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<ulong> SaveAllAsync(NpgsqlConnection connection, IAsyncEnumerable`1<TEntity> entities, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PostgreSQLCopyHelper.PostgreSQLCopyHelper`1/<DoSaveAllAsync>d__10")]
private ValueTask`1<ulong> DoSaveAllAsync(NpgsqlConnection connection, IEnumerable`1<TEntity> entities, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PostgreSQLCopyHelper.PostgreSQLCopyHelper`1/<DoSaveAllAsync>d__11")]
private ValueTask`1<ulong> DoSaveAllAsync(NpgsqlConnection connection, IAsyncEnumerable`1<TEntity> entities, CancellationToken cancellationToken);
    public PostgreSQLCopyHelper`1<TEntity> UsePostgresQuoting(bool enabled);
    public PostgreSQLCopyHelper`1<TEntity> Map(string columnName, Func`2<TEntity, TProperty> propertyGetter);
    public PostgreSQLCopyHelper`1<TEntity> Map(string columnName, Func`2<TEntity, TProperty> propertyGetter, NpgsqlDbType dbType);
    public PostgreSQLCopyHelper`1<TEntity> Map(string columnName, Func`2<TEntity, TProperty> propertyGetter, string dataTypeName);
    public PostgreSQLCopyHelper`1<TEntity> MapNullable(string columnName, Func`2<TEntity, Nullable`1<TProperty>> propertyGetter, NpgsqlDbType dbType);
    [AsyncStateMachineAttribute("PostgreSQLCopyHelper.PostgreSQLCopyHelper`1/<WriteToStreamAsync>d__17")]
private Task WriteToStreamAsync(NpgsqlBinaryImporter writer, IEnumerable`1<TEntity> entities, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PostgreSQLCopyHelper.PostgreSQLCopyHelper`1/<WriteToStreamAsync>d__18")]
private Task WriteToStreamAsync(NpgsqlBinaryImporter writer, IAsyncEnumerable`1<TEntity> entities, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PostgreSQLCopyHelper.PostgreSQLCopyHelper`1/<WriteToStreamAsync>d__19")]
private Task WriteToStreamAsync(NpgsqlBinaryImporter writer, TEntity entity, CancellationToken cancellationToken);
    private PostgreSQLCopyHelper`1<TEntity> AddColumn(string columnName, Func`4<NpgsqlBinaryImporter, TEntity, CancellationToken, Task> action, Nullable`1<NpgsqlDbType> dbType, Type clrType, string dataTypeName);
    private string GetCopyCommand();
    [CompilerGeneratedAttribute]
private string <GetCopyCommand>b__21_0(ColumnDefinition`1<TEntity> x);
}
internal static class PostgreSQLCopyHelper.Utils.NoSynchronizationContextScope : object {
    internal static Disposable Enter();
}
public static class PostgreSQLCopyHelper.Utils.NpgsqlUtils : object {
    public static char QuoteChar;
    private static NpgsqlUtils();
    public static string QuoteIdentifier(string identifier);
    public static string GetFullyQualifiedTableName(string schemaName, string tableName, bool usePostgresQuoting);
    public static bool RequiresQuoting(string identifier);
}
[ExtensionAttribute]
public static class PostgreSQLCopyHelper.Utils.StringExtensions : object {
    [ExtensionAttribute]
public static string GetIdentifier(string identifier, bool usePostgresQuotes);
}
[ExtensionAttribute]
public static class PostgreSQLCopyHelper.UUIDTypeExtensions : object {
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapUUID(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Guid> propertyGetter);
    [ExtensionAttribute]
public static PostgreSQLCopyHelper`1<TEntity> MapUUID(PostgreSQLCopyHelper`1<TEntity> helper, string columnName, Func`2<TEntity, Nullable`1<Guid>> propertyGetter);
}
