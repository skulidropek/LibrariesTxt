[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Json.More.EnumStringConverter`1 : JsonConverter`1<T> {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, T> _readValues;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<T, string> _writeValues;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`3<T, T, T> _aggregator;
    private static object _lock;
    private static Dictionary`2<string, T> ReadValues { get; }
    private static Dictionary`2<T, string> WriteValues { get; }
    private static Func`3<T, T, T> Aggregator { get; }
    private static EnumStringConverter`1();
    private static Dictionary`2<string, T> get_ReadValues();
    private static Dictionary`2<T, string> get_WriteValues();
    private static Func`3<T, T, T> get_Aggregator();
    public virtual T Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual T ReadAsPropertyName(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options);
    public virtual void WriteAsPropertyName(Utf8JsonWriter writer, T value, JsonSerializerOptions options);
    private static Func`3<T, T, T> BuildAggregator();
    private static void EnsureMap();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.More.JsonDocumentEqualityComparer : object {
    [CompilerGeneratedAttribute]
private static JsonDocumentEqualityComparer <Instance>k__BackingField;
    public static JsonDocumentEqualityComparer Instance { get; }
    private static JsonDocumentEqualityComparer();
    [CompilerGeneratedAttribute]
public static JsonDocumentEqualityComparer get_Instance();
    public sealed virtual bool Equals(JsonDocument x, JsonDocument y);
    public sealed virtual int GetHashCode(JsonDocument obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.More.JsonDocumentExtensions : object {
    [ExtensionAttribute]
public static bool IsEquivalentTo(JsonDocument a, JsonDocument b);
    [ExtensionAttribute]
public static JsonDocument ToJsonDocument(T value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.More.JsonElementEqualityComparer : object {
    [CompilerGeneratedAttribute]
private static JsonElementEqualityComparer <Instance>k__BackingField;
    public static JsonElementEqualityComparer Instance { get; }
    private static JsonElementEqualityComparer();
    [CompilerGeneratedAttribute]
public static JsonElementEqualityComparer get_Instance();
    public sealed virtual bool Equals(JsonElement x, JsonElement y);
    public sealed virtual int GetHashCode(JsonElement obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.More.JsonElementExtensions : object {
    [ExtensionAttribute]
public static bool IsEquivalentTo(JsonElement a, JsonElement b);
    [ExtensionAttribute]
public static int GetEquivalenceHashCode(JsonElement element, int maxHashDepth);
    [ExtensionAttribute]
public static string ToJsonString(JsonElement element);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(long value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(int value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(short value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(bool value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(decimal value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(double value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(float value);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static JsonElement AsJsonElement(string value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(IEnumerable`1<JsonElement> values);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(IDictionary`2<string, JsonElement> values);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static JsonNode AsNode(JsonElement element);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static void <GetEquivalenceHashCode>g__Add|1_0(Int32& current, object newValue);
    [CompilerGeneratedAttribute]
internal static void <GetEquivalenceHashCode>g__ComputeHashCode|1_1(JsonElement obj, Int32& current, int depth, <>c__DisplayClass1_0& );
}
[IsReadOnlyAttribute]
public class Json.More.JsonElementProxy : ValueType {
    private JsonElement _value;
    private JsonElementProxy(JsonElement value);
    public static JsonElementProxy op_Implicit(int value);
    public static JsonElementProxy op_Implicit(long value);
    public static JsonElementProxy op_Implicit(short value);
    public static JsonElementProxy op_Implicit(float value);
    public static JsonElementProxy op_Implicit(double value);
    public static JsonElementProxy op_Implicit(decimal value);
    [NullableContextAttribute("1")]
public static JsonElementProxy op_Implicit(string value);
    public static JsonElementProxy op_Implicit(bool value);
    public static JsonElement op_Implicit(JsonElementProxy proxy);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.More.JsonNodeEqualityComparer : object {
    [CompilerGeneratedAttribute]
private static JsonNodeEqualityComparer <Instance>k__BackingField;
    public static JsonNodeEqualityComparer Instance { get; }
    private static JsonNodeEqualityComparer();
    [CompilerGeneratedAttribute]
public static JsonNodeEqualityComparer get_Instance();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(JsonNode x, JsonNode y);
    [NullableContextAttribute("2")]
public sealed virtual int GetHashCode(JsonNode obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.More.JsonNodeExtensions : object {
    private static JsonSerializerOptions _unfriendlyCharSerialization;
    private static JsonNodeExtensions();
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool IsEquivalentTo(JsonNode a, JsonNode b);
    [ExtensionAttribute]
public static int GetEquivalenceHashCode(JsonNode node, int maxHashDepth);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string AsJsonString(JsonNode node, JsonSerializerOptions options);
    [ExtensionAttribute]
public static Nullable`1<decimal> GetNumber(JsonValue value);
    [ExtensionAttribute]
public static Nullable`1<long> GetInteger(JsonValue value);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static JsonNode Copy(JsonNode source);
    [ExtensionAttribute]
public static bool TryGetValue(JsonObject obj, string propertyName, JsonNode& node, Exception& e);
    [ExtensionAttribute]
public static JsonArray ToJsonArray(IEnumerable`1<JsonNode> nodes);
    [ExtensionAttribute]
public static string GetPathFromRoot(JsonNode node, bool useShorthand);
    [NullableContextAttribute("2")]
private static Stack`1<JsonValue> GetSegments(JsonNode current);
    private static JsonValue GetKey(JsonObject obj, JsonNode current);
    private static JsonValue GetIndex(JsonArray arr, JsonNode current);
    private static string GetNamedSegmentForPath(JsonValue segment, bool useShorthand);
    private static string PrepForJsonPath(string jsonString);
    [ExtensionAttribute]
public static string GetPointerFromRoot(JsonNode node);
    private static string PrepForJsonPointer(string s);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static void <GetEquivalenceHashCode>g__Add|2_0(Int32& current, object newValue);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static void <GetEquivalenceHashCode>g__ComputeHashCode|2_1(JsonNode target, Int32& current, int depth, <>c__DisplayClass2_0& );
    [CompilerGeneratedAttribute]
internal static JsonNode <Copy>g__CopyObject|6_0(JsonObject obj);
    [CompilerGeneratedAttribute]
internal static JsonNode <Copy>g__CopyArray|6_1(JsonArray arr);
    [CompilerGeneratedAttribute]
internal static JsonNode <Copy>g__CopyValue|6_2(JsonValue val);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonConverterAttribute("Json.More.JsonNullConverter")]
public class Json.More.JsonNull : object {
    [CompilerGeneratedAttribute]
private static JsonNode <SignalNode>k__BackingField;
    public static JsonNode SignalNode { get; }
    private static JsonNull();
    [CompilerGeneratedAttribute]
public static JsonNode get_SignalNode();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Json.More.JsonNullConverter : JsonConverter`1<JsonNull> {
    public virtual JsonNull Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, JsonNull value, JsonSerializerOptions options);
}
[ExtensionAttribute]
public static class Json.More.JsonSerializerOptionsExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static JsonConverter`1<T> GetConverter(JsonSerializerOptions options);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T Read(JsonSerializerOptions options, Utf8JsonReader& reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.More.TypeExtensions : object {
    [ExtensionAttribute]
public static bool IsInteger(Type type);
    [ExtensionAttribute]
public static bool IsFloatingPoint(Type type);
    [ExtensionAttribute]
public static bool IsNumber(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.More.Utf8JsonWriterExtensions : object {
    [ExtensionAttribute]
public static void WriteValue(Utf8JsonWriter writer, JsonElement element);
    [ExtensionAttribute]
private static void WriteObject(Utf8JsonWriter writer, JsonElement element);
    [ExtensionAttribute]
private static void WriteArray(Utf8JsonWriter writer, JsonElement element);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
