[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class PreMailer.Net.AttributeToCss : object {
    [CompilerGeneratedAttribute]
private string <AttributeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CssValue>k__BackingField;
    public string AttributeName { get; public set; }
    public string CssValue { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AttributeName();
    [CompilerGeneratedAttribute]
public void set_AttributeName(string value);
    [CompilerGeneratedAttribute]
public string get_CssValue();
    [CompilerGeneratedAttribute]
public void set_CssValue(string value);
}
public class PreMailer.Net.CssAttribute : object {
    [CompilerGeneratedAttribute]
private string <Style>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Important>k__BackingField;
    public string Style { get; public set; }
    public string Value { get; public set; }
    public bool Important { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public bool get_Important();
    [CompilerGeneratedAttribute]
public void set_Important(bool value);
    public static CssAttribute FromRule(string rule);
    public virtual string ToString();
    public string ToString(bool emitImportant);
}
[DefaultMemberAttribute("Item")]
public class PreMailer.Net.CssAttributeCollection : object {
    private List`1<CssAttribute> _attributes;
    public CssAttribute Item { get; public set; }
    public int Count { get; }
    public CssAttribute get_Item(string key);
    public void set_Item(string key, CssAttribute value);
    public void Merge(CssAttribute attribute);
    public sealed virtual IEnumerator`1<CssAttribute> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public int get_Count();
    public bool TryGetValue(string key, CssAttribute& value);
    private int IndexOfKey(string key);
    public bool ContainsKey(string key);
    public void Remove(string key);
    public void Clear();
}
public static class PreMailer.Net.CssElementStyleResolver : object {
    private static string premailerAttributePrefix;
    public static IEnumerable`1<AttributeToCss> GetAllStyles(IElement domElement, StyleClass styleClass);
    private static void AddSpecialPremailerAttributes(List`1<AttributeToCss> attributeCssList, StyleClass styleClass);
}
public class PreMailer.Net.CssParser : object {
    private List`1<string> _styleSheets;
    private int styleCount;
    [CompilerGeneratedAttribute]
private SortedList`2<string, StyleClass> <Styles>k__BackingField;
    private static Regex FillStyleClassRegex;
    private static Regex CssCommentRegex;
    private static Regex UnsupportedAtRuleRegex;
    public static Regex SupportedMediaQueriesRegex;
    private static Regex MediaQueryRegex;
    public SortedList`2<string, StyleClass> Styles { get; public set; }
    private static CssParser();
    [CompilerGeneratedAttribute]
public SortedList`2<string, StyleClass> get_Styles();
    [CompilerGeneratedAttribute]
public void set_Styles(SortedList`2<string, StyleClass> value);
    public void AddStyleSheet(string styleSheetContent);
    public string GetStyleSheet(int index);
    public StyleClass ParseStyleClass(string className, string style);
    private void ProcessStyleSheet(string styleSheetContent);
    private void FillStyleClassFromBlock(string s);
    private static void FillStyleClass(StyleClass sc, string styleName, string style);
    private static string CleanUp(string s);
    private static string CleanupMediaQueries(string s);
    [IteratorStateMachineAttribute("PreMailer.Net.CssParser/<GetUnsupportedMediaQueries>d__20")]
public static IEnumerable`1<string> GetUnsupportedMediaQueries(string s);
}
public class PreMailer.Net.CssSelector : object {
    protected static Regex NotMatcher;
    [CompilerGeneratedAttribute]
private string <Selector>k__BackingField;
    public string Selector { get; protected set; }
    public bool HasNotPseudoClass { get; }
    public string NotPseudoClassContent { get; }
    public CssSelector(string selector);
    private static CssSelector();
    [CompilerGeneratedAttribute]
public string get_Selector();
    [CompilerGeneratedAttribute]
protected void set_Selector(string value);
    public bool get_HasNotPseudoClass();
    public string get_NotPseudoClassContent();
    public CssSelector StripNotPseudoClassContent();
    public virtual string ToString();
}
public class PreMailer.Net.CssSelectorParser : object {
    private static string Css_NonAscii;
    private static string Css_Unicode;
    private static string Css_Escape;
    private static string Css_NmStart;
    private static string Css_NmChar;
    private static string Css_Ident;
    private static string Css_Nl;
    private static string Css_String1;
    private static string Css_String2;
    private static string Css_String;
    private static Regex IdMatcher;
    private static Regex AttribMatcher;
    private static Regex ClassMatcher;
    private static Regex ElemMatcher;
    private static Regex PseudoClassMatcher;
    private static Regex PseudoElemMatcher;
    private static Regex PseudoUnimplemented;
    private static String[] PseudoClasses { get; }
    private static String[] PseudoElements { get; }
    private static String[] UnimplementedPseudoSelectors { get; }
    private static CssSelectorParser();
    public static int SelectorSpecificity(string selector);
    public sealed virtual int GetSelectorSpecificity(string selector);
    public CssSpecificity CalculateSpecificity(string selector);
    public sealed virtual bool IsPseudoClass(string selector);
    public sealed virtual bool IsPseudoElement(string selector);
    public bool IsSupportedSelector(string key);
    private static int MatchCountAndStrip(Regex regex, string selector, String& result);
    private static String[] get_PseudoClasses();
    private static String[] get_PseudoElements();
    private static String[] get_UnimplementedPseudoSelectors();
    private static Regex BuildOrRegex(String[] items, string prefix, Func`2<string, string> mutator);
}
public class PreMailer.Net.CssSpecificity : object {
    [CompilerGeneratedAttribute]
private int <Ids>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Classes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Elements>k__BackingField;
    public int Ids { get; protected set; }
    public int Classes { get; protected set; }
    public int Elements { get; protected set; }
    public static CssSpecificity None { get; }
    public CssSpecificity(int ids, int classes, int elements);
    [CompilerGeneratedAttribute]
public int get_Ids();
    [CompilerGeneratedAttribute]
protected void set_Ids(int value);
    [CompilerGeneratedAttribute]
public int get_Classes();
    [CompilerGeneratedAttribute]
protected void set_Classes(int value);
    [CompilerGeneratedAttribute]
public int get_Elements();
    [CompilerGeneratedAttribute]
protected void set_Elements(int value);
    public static CssSpecificity get_None();
    public int ToInt();
    public virtual string ToString();
    public static CssSpecificity op_Addition(CssSpecificity first, CssSpecificity second);
}
public static class PreMailer.Net.CssStyleEquivalence : object {
    private static Dictionary`2<string, string> _linkedAttributes;
    private static CssStyleEquivalence();
    public static IList`1<AttributeToCss> FindEquivalent(IElement domobject, StyleClass styles);
}
public interface PreMailer.Net.Downloaders.IWebDownloader {
    public abstract virtual string DownloadString(Uri uri);
}
public class PreMailer.Net.Downloaders.WebDownloader : object {
    private static IWebDownloader _sharedDownloader;
    public static IWebDownloader SharedDownloader { get; public set; }
    public static IWebDownloader get_SharedDownloader();
    public static void set_SharedDownloader(IWebDownloader value);
    public sealed virtual string DownloadString(Uri uri);
}
[ExtensionAttribute]
public static class PreMailer.Net.Extensions.NodeExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string GetFirstTextNodeData(INode node);
}
public interface PreMailer.Net.ICssSelectorParser {
    public abstract virtual int GetSelectorSpecificity(string selector);
    public abstract virtual bool IsPseudoElement(string selector);
    public abstract virtual bool IsPseudoClass(string selector);
}
public class PreMailer.Net.InlineResult : object {
    [CompilerGeneratedAttribute]
private StringBuilder <StringBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Warnings>k__BackingField;
    public StringBuilder StringBuilder { get; protected set; }
    public string Html { get; }
    public List`1<string> Warnings { get; protected set; }
    public InlineResult(StringBuilder stringBuilder, List`1<string> warnings);
    [CompilerGeneratedAttribute]
public StringBuilder get_StringBuilder();
    [CompilerGeneratedAttribute]
protected void set_StringBuilder(StringBuilder value);
    public string get_Html();
    [CompilerGeneratedAttribute]
public List`1<string> get_Warnings();
    [CompilerGeneratedAttribute]
protected void set_Warnings(List`1<string> value);
}
public class PreMailer.Net.PreMailer : object {
    private IHtmlDocument _document;
    private bool _removeStyleElements;
    private bool _stripIdAndClassAttributes;
    private string _ignoreElements;
    private string _css;
    private Uri _baseUri;
    private CssParser _cssParser;
    private CssSelectorParser _cssSelectorParser;
    private List`1<string> _warnings;
    public IHtmlDocument Document { get; }
    public PreMailer(string html, Uri baseUri);
    public PreMailer(IHtmlDocument htmlDocument, Uri baseUri);
    public PreMailer(Stream stream, Uri baseUri);
    public static InlineResult MoveCssInline(string html, bool removeStyleElements, string ignoreElements, string css, bool stripIdAndClassAttributes, bool removeComments, IMarkupFormatter customFormatter, bool preserveMediaQueries);
    public static InlineResult MoveCssInline(Stream stream, bool removeStyleElements, string ignoreElements, string css, bool stripIdAndClassAttributes, bool removeComments, IMarkupFormatter customFormatter, bool preserveMediaQueries);
    public static InlineResult MoveCssInline(Uri baseUri, string html, bool removeStyleElements, string ignoreElements, string css, bool stripIdAndClassAttributes, bool removeComments, IMarkupFormatter customFormatter, bool preserveMediaQueries);
    public static InlineResult MoveCssInline(Uri baseUri, Stream stream, bool removeStyleElements, string ignoreElements, string css, bool stripIdAndClassAttributes, bool removeComments, IMarkupFormatter customFormatter, bool preserveMediaQueries);
    public InlineResult MoveCssInline(bool removeStyleElements, string ignoreElements, string css, bool stripIdAndClassAttributes, bool removeComments, IMarkupFormatter customFormatter, bool preserveMediaQueries);
    public PreMailer AddAnalyticsTags(string source, string medium, string campaign, string content, string domain);
    private bool DomainMatch(string domain, string url);
    private IEnumerable`1<string> GetCssBlocks(IEnumerable`1<ICssSource> cssSources);
    private void RemoveCssComments(IEnumerable`1<IElement> cssSourceNodes);
    private IEnumerable`1<ICssSource> ConvertToStyleSources(IEnumerable`1<IElement> nodesWithStyles);
    private IEnumerable`1<IElement> CssSourceNodes();
    private IEnumerable`1<IElement> CssLinkNodes();
    private void RemoveStyleElements(IEnumerable`1<IElement> cssSourceNodes, bool preserveMediaQueries);
    private static SortedList`2<string, StyleClass> Join(IEnumerable`1<string> cssBlocks);
    private SortedList`2<string, StyleClass> CleanUnsupportedSelectors(SortedList`2<string, StyleClass> selectors);
    private Dictionary`2<IElement, List`1<StyleClass>> FindElementsWithStyles(SortedList`2<string, StyleClass> stylesToApply);
    private Dictionary`2<IElement, List`1<StyleClass>> SortBySpecificity(Dictionary`2<IElement, List`1<StyleClass>> styles);
    private Dictionary`2<IElement, StyleClass> MergeStyleClasses(Dictionary`2<IElement, List`1<StyleClass>> styles);
    private void StripElementAttributes(String[] attributeNames);
    private IMarkupFormatter GetMarkupFormatterForDocType();
    private int GetSelectorSpecificity(Dictionary`2<string, int> cache, string selector);
    private void RemoveHtmlComments();
    public IHtmlDocument get_Document();
    public sealed virtual void Dispose();
}
public class PreMailer.Net.Sources.DocumentStyleTagCssSource : object {
    private IElement _node;
    public DocumentStyleTagCssSource(IElement node);
    public sealed virtual string GetCss();
}
public interface PreMailer.Net.Sources.ICssSource {
    public abstract virtual string GetCss();
}
public class PreMailer.Net.Sources.LinkTagCssSource : object {
    private Uri _downloadUri;
    private string _cssContents;
    public LinkTagCssSource(IElement node, Uri baseUri);
    public sealed virtual string GetCss();
    private static bool IsSupported(string scheme);
}
public class PreMailer.Net.Sources.StringCssSource : object {
    private string _css;
    public StringCssSource(string css);
    public sealed virtual string GetCss();
}
public class PreMailer.Net.StyleClass : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private CssAttributeCollection <Attributes>k__BackingField;
    public string Name { get; public set; }
    public int Position { get; public set; }
    public CssAttributeCollection Attributes { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_Position();
    [CompilerGeneratedAttribute]
public void set_Position(int value);
    [CompilerGeneratedAttribute]
public CssAttributeCollection get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(CssAttributeCollection value);
    public void Merge(StyleClass styleClass, bool canOverwrite);
    public virtual string ToString();
    public string ToString(bool emitImportant);
}
public static class PreMailer.Net.StyleClassApplier : object {
    public static Dictionary`2<IElement, StyleClass> ApplyAllStyles(Dictionary`2<IElement, StyleClass> elementDictionary);
    private static IElement ApplyStyles(IElement domElement, StyleClass clazz);
    private static void SetAttribute(IElement domElement, AttributeToCss attributeToCss);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
