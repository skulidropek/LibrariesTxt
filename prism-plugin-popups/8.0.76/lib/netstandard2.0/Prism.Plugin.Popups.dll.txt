[ExtensionAttribute]
public static class Prism.Navigation.PopupExtensions : object {
    private static INavigation s_navigation { get; }
    private static IPopupNavigation s_popupNavigation { get; }
    private static IReadOnlyList`1<PopupPage> s_popupStack { get; }
    private static INavigation get_s_navigation();
    private static IPopupNavigation get_s_popupNavigation();
    private static IReadOnlyList`1<PopupPage> get_s_popupStack();
    [ExtensionAttribute]
public static Task`1<INavigationResult> ClearPopupStackAsync(INavigationService navigationService, string key, object param, bool animated);
    [AsyncStateMachineAttribute("Prism.Navigation.PopupExtensions/<ClearPopupStackAsync>d__7")]
[ExtensionAttribute]
public static Task`1<INavigationResult> ClearPopupStackAsync(INavigationService navigationService, INavigationParameters parameters, bool animated);
    private static INavigationParameters GetNavigationParameters(string key, object param, NavigationMode mode);
}
[ExtensionAttribute]
public static class Prism.Plugin.Popups.ApplicationLifecycleExtensions : object {
    [ExtensionAttribute]
public static void PopupPluginOnResume(PrismApplicationBase app);
    [ExtensionAttribute]
public static void PopupPluginOnSleep(PrismApplicationBase app);
    private static void InvokeLifecyleEvent(PrismApplicationBase app, Action`1<IApplicationLifecycleAware> action);
}
public class Prism.Plugin.Popups.BackgroundPopupDismissalBehavior : BehaviorBase`1<PopupPage> {
    [CompilerGeneratedAttribute]
private IPopupNavigation <_popupNavigation>k__BackingField;
    [CompilerGeneratedAttribute]
private IApplicationProvider <_applicationProvider>k__BackingField;
    private IPopupNavigation _popupNavigation { get; }
    private IApplicationProvider _applicationProvider { get; }
    public BackgroundPopupDismissalBehavior(IPopupNavigation popupNavigation, IApplicationProvider applicationProvider);
    [CompilerGeneratedAttribute]
private IPopupNavigation get__popupNavigation();
    [CompilerGeneratedAttribute]
private IApplicationProvider get__applicationProvider();
    protected virtual void OnAttachedTo(PopupPage bindable);
    protected virtual void OnDetachingFrom(PopupPage bindable);
    private void OnBackgroundClicked(object sender, EventArgs e);
    private void InvokePageInterfaces(Page page, INavigationParameters parameters, bool navigatedTo);
    private Page TopPage();
    [CompilerGeneratedAttribute]
private bool <TopPage>b__11_0(PopupPage p);
    [CompilerGeneratedAttribute]
private bool <TopPage>b__11_1(PopupPage p);
}
public static class Prism.Plugin.Popups.Dialogs.KnownPopupDialogParameters : object {
    public static string Animated;
}
internal class Prism.Plugin.Popups.Dialogs.PopupDialogContainer : PopupPage {
}
public static class Prism.Plugin.Popups.Dialogs.Xaml.PopupDialogLayout : object {
    public static BindableProperty IsAnimationEnabledProperty;
    public static BindableProperty HasSystemPaddingProperty;
    public static BindableProperty HasKeyboardOffsetProperty;
    private static PopupDialogLayout();
    public static Nullable`1<bool> GetIsAnimationEnabled(BindableObject bindable);
    public static void SetIsAnimationEnabled(BindableObject bindable, Nullable`1<bool> value);
    public static bool GetHasSystemPadding(BindableObject view);
    public static void SetHasSystemPadding(BindableObject view, bool value);
    public static bool GetHasKeyboardOffset(BindableObject view);
    public static void SetHasKeyboardOffset(BindableObject view, bool value);
}
[ExtensionAttribute]
public static class Prism.Plugin.Popups.Extensions.PageExtensions : object {
    [ExtensionAttribute]
public static bool IsOrDerivesFrom(Page page);
    [ExtensionAttribute]
public static Page GetDisplayedPage(Page page);
}
public class Prism.Plugin.Popups.PopupNavigationException : NavigationException {
    public static string RootPageHasNotBeenSet;
    public PopupNavigationException(Page page);
}
public class Prism.Plugin.Popups.PopupPageBehaviorFactory : PageBehaviorFactory {
    [CompilerGeneratedAttribute]
private IPopupNavigation <_popupNavigation>k__BackingField;
    [CompilerGeneratedAttribute]
private IApplicationProvider <_applicationProvider>k__BackingField;
    private IPopupNavigation _popupNavigation { get; }
    private IApplicationProvider _applicationProvider { get; }
    public PopupPageBehaviorFactory(IPopupNavigation popupNavigation, IApplicationProvider applicationProvider);
    [CompilerGeneratedAttribute]
private IPopupNavigation get__popupNavigation();
    [CompilerGeneratedAttribute]
private IApplicationProvider get__applicationProvider();
    protected virtual void ApplyPageBehaviors(Page page);
}
public class Prism.Plugin.Popups.PopupPageNavigationService : PageNavigationService {
    [CompilerGeneratedAttribute]
private IPopupNavigation <_popupNavigation>k__BackingField;
    protected IPopupNavigation _popupNavigation { get; }
    public PopupPageNavigationService(IPopupNavigation popupNavigation, IContainerProvider container, IApplicationProvider applicationProvider, IPageBehaviorFactory pageBehaviorFactory);
    [CompilerGeneratedAttribute]
protected IPopupNavigation get__popupNavigation();
    [AsyncStateMachineAttribute("Prism.Plugin.Popups.PopupPageNavigationService/<GoBackInternal>d__4")]
protected virtual Task`1<INavigationResult> GoBackInternal(INavigationParameters parameters, Nullable`1<bool> useModalNavigation, bool animated);
    [AsyncStateMachineAttribute("Prism.Plugin.Popups.PopupPageNavigationService/<ProcessNavigationForMasterDetailPage>d__5")]
protected virtual Task ProcessNavigationForMasterDetailPage(MasterDetailPage currentPage, string nextSegment, Queue`1<string> segments, INavigationParameters parameters, Nullable`1<bool> useModalNavigation, bool animated);
    [AsyncStateMachineAttribute("Prism.Plugin.Popups.PopupPageNavigationService/<DoNavigationActionForNewDetail>d__6")]
private Task DoNavigationActionForNewDetail(MasterDetailPage currentPage, Page newDetail, Page oldDetail, bool detailIsNavPage, bool isPresented, bool animated, string nextSegment, INavigationParameters parameters);
    private static void OnNavigatedFrom(Page fromPage, INavigationParameters parameters);
    private static void SelectPageTab(Page page, INavigationParameters parameters);
    private static void TabbedPageSelectTab(TabbedPage tabbedPage, INavigationParameters parameters);
    private static void CarouselPageSelectTab(CarouselPage carouselPage, INavigationParameters parameters);
    internal static bool IsSameOrSubclassOf(Type potentialDescendant);
    [AsyncStateMachineAttribute("Prism.Plugin.Popups.PopupPageNavigationService/<DoPop>d__12")]
protected virtual Task`1<Page> DoPop(INavigation navigation, bool useModalNavigation, bool animated);
    [AsyncStateMachineAttribute("Prism.Plugin.Popups.PopupPageNavigationService/<DoPush>d__13")]
protected virtual Task DoPush(Page currentPage, Page page, Nullable`1<bool> useModalNavigation, bool animated, bool insertBeforeLast, int navigationOffset);
    protected virtual Page GetCurrentPage();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<INavigationResult> <>n__0(INavigationParameters parameters, Nullable`1<bool> useModalNavigation, bool animated);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<Page> <>n__1(INavigation navigation, bool useModalNavigation, bool animated);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__2(Page currentPage, Page page, Nullable`1<bool> useModalNavigation, bool animated, bool insertBeforeLast, int navigationOffset);
}
[ExtensionAttribute]
public static class Prism.Plugin.Popups.PopupRegistrationExtensions : object {
    [ExtensionAttribute]
public static IContainerRegistry RegisterPopupNavigationService(IContainerRegistry containerRegistry);
    [ExtensionAttribute]
public static IContainerRegistry RegisterPopupNavigationService(IContainerRegistry containerRegistry);
    [ExtensionAttribute]
public static IContainerRegistry RegisterPopupDialogService(IContainerRegistry containerRegistry);
    [ExtensionAttribute]
private static void RegisterPopupNavigation(IContainerRegistry containerRegistry);
}
[ExtensionAttribute]
internal static class Prism.Plugin.Popups.PopupUtilities : object {
    public static string NavigationModeKey;
    public static INavigationParameters CreateNewNavigationParameters();
    public static INavigationParameters CreateBackNavigationParameters();
    [ExtensionAttribute]
public static INavigationParameters AddNavigationMode(INavigationParameters parameters, NavigationMode mode);
    [ExtensionAttribute]
public static INavigationParameters AddInternalParameter(INavigationParameters parameters, string key, object value);
    public static Page TopPage(IPopupNavigation popupNavigation, IApplicationProvider applicationProvider);
    public static Page GetOnNavigatedToTarget(IPopupNavigation popupNavigation, IApplicationProvider applicationProvider);
}
public class Prism.Services.Dialogs.Popups.PopupDialogService : object {
    public static string PopupOverlayStyle;
    [CompilerGeneratedAttribute]
private IPopupNavigation <_popupNavigation>k__BackingField;
    [CompilerGeneratedAttribute]
private IContainerProvider <_containerProvider>k__BackingField;
    private IPopupNavigation _popupNavigation { get; }
    private IContainerProvider _containerProvider { get; }
    public PopupDialogService(IPopupNavigation popupNavigation, IContainerProvider containerProvider);
    [CompilerGeneratedAttribute]
private IPopupNavigation get__popupNavigation();
    [CompilerGeneratedAttribute]
private IContainerProvider get__containerProvider();
    public sealed virtual void ShowDialog(string name, IDialogParameters parameters, Action`1<IDialogResult> callback);
    private static PopupPage CreatePopupPageForView(BindableObject view);
    private View CreateViewFor(string name);
    private IDialogAware GetDialogController(View view);
    private IDialogAware InitializeDialog(View view, IDialogParameters parameters);
    private IDialogResult CloseDialog(IDialogParameters parameters, PopupPage popupPage, View dialogView);
    [AsyncStateMachineAttribute("Prism.Services.Dialogs.Popups.PopupDialogService/<PushPopupPage>d__14")]
private void PushPopupPage(PopupPage popupPage, View dialogView, Action`1<IDialogParameters> closeCallback, bool animated);
    private static Style GetOverlayStyle(View popupView);
}
internal class Prism.Services.Dialogs.Popups.RelativeContentSizeConverter : object {
    private double relativeSize;
    public double RelativeSize { get; public set; }
    public double get_RelativeSize();
    public void set_RelativeSize(double value);
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.4.194.9857")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string RootNamespace;
    private static ThisAssembly();
}
