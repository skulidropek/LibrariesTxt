[ExtensionAttribute]
internal static class CodeBlock : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IDisposable AddBlock(CodeBuilder codeBuilder, string template, String[] parameters);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IDisposable AddBlock(CodeBuilder codeBuilder, string line);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class CodeBuilder : object {
    private StringBuilder _stringBuilder;
    private int _indent;
    public CodeBuilder Add(string line);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Configuration : object {
    private static XmlSerializer Serializer;
    [CompilerGeneratedAttribute]
private bool <IsCodeGeneratorDisabled>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <EventInvokerName>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public bool IsCodeGeneratorDisabled { get; public set; }
    [NullableAttribute("2")]
public string EventInvokerName { get; public set; }
    [CompilerGeneratedAttribute]
protected Configuration(Configuration original);
    private static Configuration();
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public bool get_IsCodeGeneratorDisabled();
    [CompilerGeneratedAttribute]
public void set_IsCodeGeneratorDisabled(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_EventInvokerName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_EventInvokerName(string value);
    public static Configuration Read(string configuration);
    private static Configuration Deserialize(string configuration);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(Configuration left, Configuration right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(Configuration left, Configuration right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(Configuration other);
    [CompilerGeneratedAttribute]
public virtual Configuration <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class ExtensionMethods : object {
    public static SymbolDisplayFormat FullNameDisplayFormat;
    public static SymbolDisplayFormat NameDisplayFormat;
    private static ExtensionMethods();
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IncrementalValuesProvider`1<TSource> ExceptNullItems(IncrementalValuesProvider`1<TSource> source);
    [ExtensionAttribute]
public static IEnumerable`1<BaseTypeSyntax> GetInterfaceTypeCandidates(BaseListSyntax baseListSyntax);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string NullIfEmpty(string value);
    [IteratorStateMachineAttribute("ExtensionMethods/<EnumerateContainingTypeDeclarations>d__5")]
[ExtensionAttribute]
public static IEnumerable`1<string> EnumerateContainingTypeDeclarations(INamedTypeSymbol type);
    [ExtensionAttribute]
public static string GetTypeDeclaration(INamedTypeSymbol type);
    [ExtensionAttribute]
private static string GetTypeKeyword(INamedTypeSymbol type);
    [ExtensionAttribute]
public static bool HasImplementationAttribute(TypeDeclarationSyntax typeDeclaration);
    [ExtensionAttribute]
public static bool HasImplementationAttribute(INamedTypeSymbol type);
    [ExtensionAttribute]
public static bool ImplementsINotifyPropertyChanged(INamedTypeSymbol type);
    [ExtensionAttribute]
public static bool HasNoPropertyChangedEvent(TypeDeclarationSyntax typeDeclaration);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool AreAllContainingTypesPartialTypes(TypeDeclarationSyntax typeDeclaration);
    [IteratorStateMachineAttribute("ExtensionMethods/<EnumerateBaseTypes>d__13")]
[ExtensionAttribute]
public static IEnumerable`1<INamedTypeSymbol> EnumerateBaseTypes(INamedTypeSymbol type);
    [ConditionalAttribute("DEBUG")]
public static void DebugBeep();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratorAttribute("C#", "Mono.Cecil.CustomAttributeArgument[]")]
public class SourceGenerator : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    private static string ReadConfigurationSource(AnalyzerConfigOptionsProvider options, CancellationToken cancellationToken);
    private static Configuration ReadConfiguration(string configuration, CancellationToken cancellationToken);
    private static void GenerateSource(SourceProductionContext context, ValueTuple`2<Configuration, ImmutableArray`1<TypeContext>> parameters);
    private static bool IsCandidateForGenerator(SyntaxNode syntaxNode, CancellationToken token);
    [NullableContextAttribute("2")]
private static TypeContext GetClassContextForCandidate(GeneratorSyntaxContext context, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private static TypeDeclarationSyntax GetSyntaxForCandidate(GeneratorSyntaxContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class SourceGeneratorEngine : object {
    internal static string GeneratorVersion;
    private static SourceGeneratorEngine();
    public static void GenerateSource(SourceProductionContext context, Configuration configuration, ImmutableArray`1<TypeContext> types);
    [ExtensionAttribute]
private static void AddPreamble(CodeBuilder codeBuilder);
    private static void GenerateCodeForClass(TypeContext typeContext, CodeBuilder codeBuilder, string eventInvokerName);
    private static void AddGeneratedCodeAttribute(CodeBuilder codeBuilder, bool isMethod);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class TypeContext : object {
    public static IEqualityComparer`1<TypeContext> FullNameComparer;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ContainingNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainingTypeDeclarations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Declaration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSealed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasBase>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableAttribute("2")]
public string ContainingNamespace { get; }
    public string ContainingTypeDeclarations { get; }
    private string FullName { get; }
    public string Declaration { get; }
    public bool IsSealed { get; }
    public bool HasBase { get; }
    public TypeContext(INamedTypeSymbol typeSymbol);
    [CompilerGeneratedAttribute]
protected TypeContext(TypeContext original);
    private static TypeContext();
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ContainingNamespace();
    [CompilerGeneratedAttribute]
public string get_ContainingTypeDeclarations();
    [CompilerGeneratedAttribute]
private string get_FullName();
    [CompilerGeneratedAttribute]
public string get_Declaration();
    [CompilerGeneratedAttribute]
public bool get_IsSealed();
    [CompilerGeneratedAttribute]
public bool get_HasBase();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TypeContext left, TypeContext right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TypeContext left, TypeContext right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TypeContext other);
    [CompilerGeneratedAttribute]
public virtual TypeContext <Clone>$();
}
