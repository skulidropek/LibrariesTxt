[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Quartz.AspNetCore.HealthChecks.QuartzHealthCheck : object {
    private ISchedulerFactory schedulerFactory;
    public QuartzHealthCheck(ISchedulerFactory schedulerFactory);
    [AsyncStateMachineAttribute("Quartz.AspNetCore.HealthChecks.QuartzHealthCheck/<Microsoft-Extensions-Diagnostics-HealthChecks-IHealthCheck-CheckHealthAsync>d__2")]
private sealed virtual override Task`1<HealthCheckResult> Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Quartz.AspNetCore.Logging.LoggingProvider : object {
    private ILoggerFactory loggerFactory;
    public LoggingProvider(ILoggerFactory loggerFactory);
    public sealed virtual Logger GetLogger(string name);
    public sealed virtual IDisposable OpenNestedContext(string message);
    public sealed virtual IDisposable OpenMappedContext(string key, object value, bool destructure);
}
[ExtensionAttribute]
public static class Quartz.AspNetCore.QuartzServiceCollectionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection AddQuartzServer(IServiceCollection services, Action`1<QuartzHostedServiceOptions> configure);
}
