public class Amazon.Glacier.ActionCode : ConstantClass {
    public static ActionCode ArchiveRetrieval;
    public static ActionCode InventoryRetrieval;
    public static ActionCode Select;
    public ActionCode(string value);
    private static ActionCode();
    public static ActionCode FindValue(string value);
    public static ActionCode op_Implicit(string value);
}
public class Amazon.Glacier.AmazonGlacierClient : AmazonServiceClient {
    private static IServiceMetadata serviceMetadata;
    private IGlacierPaginatorFactory _paginators;
    public IGlacierPaginatorFactory Paginators { get; }
    protected IServiceMetadata ServiceMetadata { get; }
    public AmazonGlacierClient(RegionEndpoint region);
    public AmazonGlacierClient(AmazonGlacierConfig config);
    public AmazonGlacierClient(AWSCredentials credentials);
    public AmazonGlacierClient(AWSCredentials credentials, RegionEndpoint region);
    public AmazonGlacierClient(AWSCredentials credentials, AmazonGlacierConfig clientConfig);
    public AmazonGlacierClient(string awsAccessKeyId, string awsSecretAccessKey);
    public AmazonGlacierClient(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    public AmazonGlacierClient(string awsAccessKeyId, string awsSecretAccessKey, AmazonGlacierConfig clientConfig);
    public AmazonGlacierClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken);
    public AmazonGlacierClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, RegionEndpoint region);
    public AmazonGlacierClient(string awsAccessKeyId, string awsSecretAccessKey, string awsSessionToken, AmazonGlacierConfig clientConfig);
    private static AmazonGlacierClient();
    protected virtual void Initialize();
    public sealed virtual IGlacierPaginatorFactory get_Paginators();
    protected virtual AbstractAWSSigner CreateSigner();
    protected virtual void CustomizeRuntimePipeline(RuntimePipeline pipeline);
    protected virtual IServiceMetadata get_ServiceMetadata();
    protected virtual void Dispose(bool disposing);
    internal virtual AbortMultipartUploadResponse AbortMultipartUpload(AbortMultipartUploadRequest request);
    public virtual Task`1<AbortMultipartUploadResponse> AbortMultipartUploadAsync(AbortMultipartUploadRequest request, CancellationToken cancellationToken);
    internal virtual AbortVaultLockResponse AbortVaultLock(AbortVaultLockRequest request);
    public virtual Task`1<AbortVaultLockResponse> AbortVaultLockAsync(AbortVaultLockRequest request, CancellationToken cancellationToken);
    internal virtual AddTagsToVaultResponse AddTagsToVault(AddTagsToVaultRequest request);
    public virtual Task`1<AddTagsToVaultResponse> AddTagsToVaultAsync(AddTagsToVaultRequest request, CancellationToken cancellationToken);
    internal virtual CompleteMultipartUploadResponse CompleteMultipartUpload(CompleteMultipartUploadRequest request);
    public virtual Task`1<CompleteMultipartUploadResponse> CompleteMultipartUploadAsync(CompleteMultipartUploadRequest request, CancellationToken cancellationToken);
    internal virtual CompleteVaultLockResponse CompleteVaultLock(CompleteVaultLockRequest request);
    public virtual Task`1<CompleteVaultLockResponse> CompleteVaultLockAsync(CompleteVaultLockRequest request, CancellationToken cancellationToken);
    internal virtual CreateVaultResponse CreateVault(CreateVaultRequest request);
    public virtual Task`1<CreateVaultResponse> CreateVaultAsync(CreateVaultRequest request, CancellationToken cancellationToken);
    internal virtual DeleteArchiveResponse DeleteArchive(DeleteArchiveRequest request);
    public virtual Task`1<DeleteArchiveResponse> DeleteArchiveAsync(DeleteArchiveRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVaultResponse DeleteVault(DeleteVaultRequest request);
    public virtual Task`1<DeleteVaultResponse> DeleteVaultAsync(DeleteVaultRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVaultAccessPolicyResponse DeleteVaultAccessPolicy(DeleteVaultAccessPolicyRequest request);
    public virtual Task`1<DeleteVaultAccessPolicyResponse> DeleteVaultAccessPolicyAsync(DeleteVaultAccessPolicyRequest request, CancellationToken cancellationToken);
    internal virtual DeleteVaultNotificationsResponse DeleteVaultNotifications(DeleteVaultNotificationsRequest request);
    public virtual Task`1<DeleteVaultNotificationsResponse> DeleteVaultNotificationsAsync(DeleteVaultNotificationsRequest request, CancellationToken cancellationToken);
    internal virtual DescribeJobResponse DescribeJob(DescribeJobRequest request);
    public virtual Task`1<DescribeJobResponse> DescribeJobAsync(DescribeJobRequest request, CancellationToken cancellationToken);
    internal virtual DescribeVaultResponse DescribeVault(DescribeVaultRequest request);
    public virtual Task`1<DescribeVaultResponse> DescribeVaultAsync(DescribeVaultRequest request, CancellationToken cancellationToken);
    internal virtual GetDataRetrievalPolicyResponse GetDataRetrievalPolicy(GetDataRetrievalPolicyRequest request);
    public virtual Task`1<GetDataRetrievalPolicyResponse> GetDataRetrievalPolicyAsync(GetDataRetrievalPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetJobOutputResponse GetJobOutput(GetJobOutputRequest request);
    public virtual Task`1<GetJobOutputResponse> GetJobOutputAsync(GetJobOutputRequest request, CancellationToken cancellationToken);
    internal virtual GetVaultAccessPolicyResponse GetVaultAccessPolicy(GetVaultAccessPolicyRequest request);
    public virtual Task`1<GetVaultAccessPolicyResponse> GetVaultAccessPolicyAsync(GetVaultAccessPolicyRequest request, CancellationToken cancellationToken);
    internal virtual GetVaultLockResponse GetVaultLock(GetVaultLockRequest request);
    public virtual Task`1<GetVaultLockResponse> GetVaultLockAsync(GetVaultLockRequest request, CancellationToken cancellationToken);
    internal virtual GetVaultNotificationsResponse GetVaultNotifications(GetVaultNotificationsRequest request);
    public virtual Task`1<GetVaultNotificationsResponse> GetVaultNotificationsAsync(GetVaultNotificationsRequest request, CancellationToken cancellationToken);
    internal virtual InitiateJobResponse InitiateJob(InitiateJobRequest request);
    public virtual Task`1<InitiateJobResponse> InitiateJobAsync(InitiateJobRequest request, CancellationToken cancellationToken);
    internal virtual InitiateMultipartUploadResponse InitiateMultipartUpload(InitiateMultipartUploadRequest request);
    public virtual Task`1<InitiateMultipartUploadResponse> InitiateMultipartUploadAsync(InitiateMultipartUploadRequest request, CancellationToken cancellationToken);
    internal virtual InitiateVaultLockResponse InitiateVaultLock(InitiateVaultLockRequest request);
    public virtual Task`1<InitiateVaultLockResponse> InitiateVaultLockAsync(InitiateVaultLockRequest request, CancellationToken cancellationToken);
    internal virtual ListJobsResponse ListJobs(ListJobsRequest request);
    public virtual Task`1<ListJobsResponse> ListJobsAsync(ListJobsRequest request, CancellationToken cancellationToken);
    internal virtual ListMultipartUploadsResponse ListMultipartUploads(ListMultipartUploadsRequest request);
    public virtual Task`1<ListMultipartUploadsResponse> ListMultipartUploadsAsync(ListMultipartUploadsRequest request, CancellationToken cancellationToken);
    internal virtual ListPartsResponse ListParts(ListPartsRequest request);
    public virtual Task`1<ListPartsResponse> ListPartsAsync(ListPartsRequest request, CancellationToken cancellationToken);
    internal virtual ListProvisionedCapacityResponse ListProvisionedCapacity(ListProvisionedCapacityRequest request);
    public virtual Task`1<ListProvisionedCapacityResponse> ListProvisionedCapacityAsync(ListProvisionedCapacityRequest request, CancellationToken cancellationToken);
    internal virtual ListTagsForVaultResponse ListTagsForVault(ListTagsForVaultRequest request);
    public virtual Task`1<ListTagsForVaultResponse> ListTagsForVaultAsync(ListTagsForVaultRequest request, CancellationToken cancellationToken);
    internal virtual ListVaultsResponse ListVaults();
    internal virtual ListVaultsResponse ListVaults(ListVaultsRequest request);
    public virtual Task`1<ListVaultsResponse> ListVaultsAsync(CancellationToken cancellationToken);
    public virtual Task`1<ListVaultsResponse> ListVaultsAsync(ListVaultsRequest request, CancellationToken cancellationToken);
    internal virtual PurchaseProvisionedCapacityResponse PurchaseProvisionedCapacity(PurchaseProvisionedCapacityRequest request);
    public virtual Task`1<PurchaseProvisionedCapacityResponse> PurchaseProvisionedCapacityAsync(PurchaseProvisionedCapacityRequest request, CancellationToken cancellationToken);
    internal virtual RemoveTagsFromVaultResponse RemoveTagsFromVault(RemoveTagsFromVaultRequest request);
    public virtual Task`1<RemoveTagsFromVaultResponse> RemoveTagsFromVaultAsync(RemoveTagsFromVaultRequest request, CancellationToken cancellationToken);
    internal virtual SetDataRetrievalPolicyResponse SetDataRetrievalPolicy(SetDataRetrievalPolicyRequest request);
    public virtual Task`1<SetDataRetrievalPolicyResponse> SetDataRetrievalPolicyAsync(SetDataRetrievalPolicyRequest request, CancellationToken cancellationToken);
    internal virtual SetVaultAccessPolicyResponse SetVaultAccessPolicy(SetVaultAccessPolicyRequest request);
    public virtual Task`1<SetVaultAccessPolicyResponse> SetVaultAccessPolicyAsync(SetVaultAccessPolicyRequest request, CancellationToken cancellationToken);
    internal virtual SetVaultNotificationsResponse SetVaultNotifications(SetVaultNotificationsRequest request);
    public virtual Task`1<SetVaultNotificationsResponse> SetVaultNotificationsAsync(SetVaultNotificationsRequest request, CancellationToken cancellationToken);
    internal virtual UploadArchiveResponse UploadArchive(UploadArchiveRequest request);
    public virtual Task`1<UploadArchiveResponse> UploadArchiveAsync(UploadArchiveRequest request, CancellationToken cancellationToken);
    internal virtual UploadMultipartPartResponse UploadMultipartPart(UploadMultipartPartRequest request);
    public virtual Task`1<UploadMultipartPartResponse> UploadMultipartPartAsync(UploadMultipartPartRequest request, CancellationToken cancellationToken);
    public sealed virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
    private sealed virtual override IClientConfig Amazon.Runtime.IAmazonService.get_Config();
}
[AWSSignerTypeAttribute("v4")]
public class Amazon.Glacier.AmazonGlacierConfig : ClientConfig {
    private static string UserAgentString;
    private string _userAgent;
    public static string ServiceId { get; }
    public string RegionEndpointServiceName { get; }
    public string ServiceVersion { get; }
    public string UserAgent { get; }
    private static AmazonGlacierConfig();
    protected virtual void Initialize();
    public static string get_ServiceId();
    public virtual string get_RegionEndpointServiceName();
    public virtual string get_ServiceVersion();
    public virtual string get_UserAgent();
}
public static class Amazon.Glacier.AmazonGlacierDefaultConfiguration : object {
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <InRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <CrossRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Mobile>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Auto>k__BackingField;
    [CompilerGeneratedAttribute]
private static IDefaultConfiguration <Legacy>k__BackingField;
    public static IDefaultConfiguration Standard { get; }
    public static IDefaultConfiguration InRegion { get; }
    public static IDefaultConfiguration CrossRegion { get; }
    public static IDefaultConfiguration Mobile { get; }
    public static IDefaultConfiguration Auto { get; }
    public static IDefaultConfiguration Legacy { get; }
    private static AmazonGlacierDefaultConfiguration();
    public static ReadOnlyCollection`1<IDefaultConfiguration> GetAllConfigurations();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Standard();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_InRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_CrossRegion();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Mobile();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Auto();
    [CompilerGeneratedAttribute]
public static IDefaultConfiguration get_Legacy();
}
public class Amazon.Glacier.AmazonGlacierException : AmazonServiceException {
    public AmazonGlacierException(string message);
    public AmazonGlacierException(string message, Exception innerException);
    public AmazonGlacierException(Exception innerException);
    public AmazonGlacierException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public AmazonGlacierException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
}
[ExtensionAttribute]
public static class Amazon.Glacier.AmazonGlacierExtensions : object {
    [ExtensionAttribute]
public static void SetRange(GetJobOutputRequest request, long start, Nullable`1<long> end);
    [ExtensionAttribute]
public static void SetRange(UploadMultipartPartRequest request, long start, long end);
}
public class Amazon.Glacier.AmazonGlacierRequest : AmazonWebServiceRequest {
}
public class Amazon.Glacier.CannedACL : ConstantClass {
    public static CannedACL AuthenticatedRead;
    public static CannedACL AwsExecRead;
    public static CannedACL BucketOwnerFullControl;
    public static CannedACL BucketOwnerRead;
    public static CannedACL Private;
    public static CannedACL PublicRead;
    public static CannedACL PublicReadWrite;
    public CannedACL(string value);
    private static CannedACL();
    public static CannedACL FindValue(string value);
    public static CannedACL op_Implicit(string value);
}
public class Amazon.Glacier.EncryptionType : ConstantClass {
    public static EncryptionType AES256;
    public static EncryptionType AwsKms;
    public EncryptionType(string value);
    private static EncryptionType();
    public static EncryptionType FindValue(string value);
    public static EncryptionType op_Implicit(string value);
}
public class Amazon.Glacier.Endpoints.GlacierEndpointParameters : EndpointParameters {
    public string Region { get; public set; }
    public Nullable`1<bool> UseDualStack { get; public set; }
    public Nullable`1<bool> UseFIPS { get; public set; }
    public string Endpoint { get; public set; }
    public string get_Region();
    public void set_Region(string value);
    public Nullable`1<bool> get_UseDualStack();
    public void set_UseDualStack(Nullable`1<bool> value);
    public Nullable`1<bool> get_UseFIPS();
    public void set_UseFIPS(Nullable`1<bool> value);
    public string get_Endpoint();
    public void set_Endpoint(string value);
}
public class Amazon.Glacier.ExpressionType : ConstantClass {
    public static ExpressionType SQL;
    public ExpressionType(string value);
    private static ExpressionType();
    public static ExpressionType FindValue(string value);
    public static ExpressionType op_Implicit(string value);
}
public class Amazon.Glacier.FileHeaderInfo : ConstantClass {
    public static FileHeaderInfo IGNORE;
    public static FileHeaderInfo NONE;
    public static FileHeaderInfo USE;
    public FileHeaderInfo(string value);
    private static FileHeaderInfo();
    public static FileHeaderInfo FindValue(string value);
    public static FileHeaderInfo op_Implicit(string value);
}
public static class Amazon.Glacier.GlacierUtils : object {
    public static string JOB_STATUS_INPROGRESS;
    public static string JOB_STATUS_FAILED;
    public static string JOB_STATUS_SUCCEEDED;
    public static Stream CreatePartStream(Stream stream, long partSize);
}
public interface Amazon.Glacier.IAmazonGlacier {
    public IGlacierPaginatorFactory Paginators { get; }
    public abstract virtual IGlacierPaginatorFactory get_Paginators();
    public abstract virtual Task`1<AbortMultipartUploadResponse> AbortMultipartUploadAsync(AbortMultipartUploadRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AbortVaultLockResponse> AbortVaultLockAsync(AbortVaultLockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<AddTagsToVaultResponse> AddTagsToVaultAsync(AddTagsToVaultRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CompleteMultipartUploadResponse> CompleteMultipartUploadAsync(CompleteMultipartUploadRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CompleteVaultLockResponse> CompleteVaultLockAsync(CompleteVaultLockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateVaultResponse> CreateVaultAsync(CreateVaultRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteArchiveResponse> DeleteArchiveAsync(DeleteArchiveRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVaultResponse> DeleteVaultAsync(DeleteVaultRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVaultAccessPolicyResponse> DeleteVaultAccessPolicyAsync(DeleteVaultAccessPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteVaultNotificationsResponse> DeleteVaultNotificationsAsync(DeleteVaultNotificationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeJobResponse> DescribeJobAsync(DescribeJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<DescribeVaultResponse> DescribeVaultAsync(DescribeVaultRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDataRetrievalPolicyResponse> GetDataRetrievalPolicyAsync(GetDataRetrievalPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetJobOutputResponse> GetJobOutputAsync(GetJobOutputRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetVaultAccessPolicyResponse> GetVaultAccessPolicyAsync(GetVaultAccessPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetVaultLockResponse> GetVaultLockAsync(GetVaultLockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetVaultNotificationsResponse> GetVaultNotificationsAsync(GetVaultNotificationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<InitiateJobResponse> InitiateJobAsync(InitiateJobRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<InitiateMultipartUploadResponse> InitiateMultipartUploadAsync(InitiateMultipartUploadRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<InitiateVaultLockResponse> InitiateVaultLockAsync(InitiateVaultLockRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListJobsResponse> ListJobsAsync(ListJobsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListMultipartUploadsResponse> ListMultipartUploadsAsync(ListMultipartUploadsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListPartsResponse> ListPartsAsync(ListPartsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListProvisionedCapacityResponse> ListProvisionedCapacityAsync(ListProvisionedCapacityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListTagsForVaultResponse> ListTagsForVaultAsync(ListTagsForVaultRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVaultsResponse> ListVaultsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ListVaultsResponse> ListVaultsAsync(ListVaultsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<PurchaseProvisionedCapacityResponse> PurchaseProvisionedCapacityAsync(PurchaseProvisionedCapacityRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<RemoveTagsFromVaultResponse> RemoveTagsFromVaultAsync(RemoveTagsFromVaultRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetDataRetrievalPolicyResponse> SetDataRetrievalPolicyAsync(SetDataRetrievalPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetVaultAccessPolicyResponse> SetVaultAccessPolicyAsync(SetVaultAccessPolicyRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<SetVaultNotificationsResponse> SetVaultNotificationsAsync(SetVaultNotificationsRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UploadArchiveResponse> UploadArchiveAsync(UploadArchiveRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<UploadMultipartPartResponse> UploadMultipartPartAsync(UploadMultipartPartRequest request, CancellationToken cancellationToken);
    public abstract virtual Endpoint DetermineServiceOperationEndpoint(AmazonWebServiceRequest request);
}
public class Amazon.Glacier.Internal.AmazonGlacierEndpointProvider : object {
    public sealed virtual Endpoint ResolveEndpoint(EndpointParameters parameters);
}
public class Amazon.Glacier.Internal.AmazonGlacierEndpointResolver : BaseEndpointResolver {
    protected virtual void ServiceSpecificHandler(IExecutionContext executionContext, EndpointParameters parameters);
    protected virtual EndpointParameters MapEndpointsParameters(IRequestContext requestContext);
}
public class Amazon.Glacier.Internal.AmazonGlacierMetadata : object {
    public string ServiceId { get; }
    public IDictionary`2<string, string> OperationNameMapping { get; }
    public sealed virtual string get_ServiceId();
    public sealed virtual IDictionary`2<string, string> get_OperationNameMapping();
}
public class Amazon.Glacier.Internal.ProcessRequestHandler : PipelineHandler {
    public virtual void InvokeSync(IExecutionContext executionContext);
    public virtual Task`1<T> InvokeAsync(IExecutionContext executionContext);
    protected virtual void PreInvoke(IExecutionContext executionContext);
}
public class Amazon.Glacier.Model.AbortMultipartUploadRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _uploadId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string UploadId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public AbortMultipartUploadRequest(string vaultName, string uploadId);
    public AbortMultipartUploadRequest(string accountId, string vaultName, string uploadId);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.AbortMultipartUploadResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.AbortVaultLockRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.AbortVaultLockResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.AddTagsToVaultRequest : AmazonGlacierRequest {
    private string _accountId;
    private Dictionary`2<string, string> _tags;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.AddTagsToVaultResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.CompleteMultipartUploadRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _archiveSize;
    private string _checksum;
    private string _uploadId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string ArchiveSize { get; public set; }
    public string Checksum { get; public set; }
    [AWSPropertyAttribute]
public string UploadId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public CompleteMultipartUploadRequest(string vaultName, string uploadId, string archiveSize, string checksum);
    public CompleteMultipartUploadRequest(string accountId, string vaultName, string uploadId, string archiveSize, string checksum);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ArchiveSize();
    public void set_ArchiveSize(string value);
    internal bool IsSetArchiveSize();
    public string get_Checksum();
    public void set_Checksum(string value);
    internal bool IsSetChecksum();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.CompleteMultipartUploadResponse : AmazonWebServiceResponse {
    private string _archiveId;
    private string _checksum;
    private string _location;
    public string ArchiveId { get; public set; }
    public string Checksum { get; public set; }
    public string Location { get; public set; }
    public string get_ArchiveId();
    public void set_ArchiveId(string value);
    internal bool IsSetArchiveId();
    public string get_Checksum();
    public void set_Checksum(string value);
    internal bool IsSetChecksum();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.Glacier.Model.CompleteVaultLockRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _lockId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string LockId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_LockId();
    public void set_LockId(string value);
    internal bool IsSetLockId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.CompleteVaultLockResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.CreateVaultRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public CreateVaultRequest(string vaultName);
    public CreateVaultRequest(string accountId, string vaultName);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.CreateVaultResponse : AmazonWebServiceResponse {
    private string _location;
    public string Location { get; public set; }
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.Glacier.Model.CSVInput : object {
    private string _comments;
    private string _fieldDelimiter;
    private FileHeaderInfo _fileHeaderInfo;
    private string _quoteCharacter;
    private string _quoteEscapeCharacter;
    private string _recordDelimiter;
    public string Comments { get; public set; }
    public string FieldDelimiter { get; public set; }
    public FileHeaderInfo FileHeaderInfo { get; public set; }
    public string QuoteCharacter { get; public set; }
    public string QuoteEscapeCharacter { get; public set; }
    public string RecordDelimiter { get; public set; }
    public string get_Comments();
    public void set_Comments(string value);
    internal bool IsSetComments();
    public string get_FieldDelimiter();
    public void set_FieldDelimiter(string value);
    internal bool IsSetFieldDelimiter();
    public FileHeaderInfo get_FileHeaderInfo();
    public void set_FileHeaderInfo(FileHeaderInfo value);
    internal bool IsSetFileHeaderInfo();
    public string get_QuoteCharacter();
    public void set_QuoteCharacter(string value);
    internal bool IsSetQuoteCharacter();
    public string get_QuoteEscapeCharacter();
    public void set_QuoteEscapeCharacter(string value);
    internal bool IsSetQuoteEscapeCharacter();
    public string get_RecordDelimiter();
    public void set_RecordDelimiter(string value);
    internal bool IsSetRecordDelimiter();
}
public class Amazon.Glacier.Model.CSVOutput : object {
    private string _fieldDelimiter;
    private string _quoteCharacter;
    private string _quoteEscapeCharacter;
    private QuoteFields _quoteFields;
    private string _recordDelimiter;
    public string FieldDelimiter { get; public set; }
    public string QuoteCharacter { get; public set; }
    public string QuoteEscapeCharacter { get; public set; }
    public QuoteFields QuoteFields { get; public set; }
    public string RecordDelimiter { get; public set; }
    public string get_FieldDelimiter();
    public void set_FieldDelimiter(string value);
    internal bool IsSetFieldDelimiter();
    public string get_QuoteCharacter();
    public void set_QuoteCharacter(string value);
    internal bool IsSetQuoteCharacter();
    public string get_QuoteEscapeCharacter();
    public void set_QuoteEscapeCharacter(string value);
    internal bool IsSetQuoteEscapeCharacter();
    public QuoteFields get_QuoteFields();
    public void set_QuoteFields(QuoteFields value);
    internal bool IsSetQuoteFields();
    public string get_RecordDelimiter();
    public void set_RecordDelimiter(string value);
    internal bool IsSetRecordDelimiter();
}
public class Amazon.Glacier.Model.DataRetrievalPolicy : object {
    private List`1<DataRetrievalRule> _rules;
    public List`1<DataRetrievalRule> Rules { get; public set; }
    public List`1<DataRetrievalRule> get_Rules();
    public void set_Rules(List`1<DataRetrievalRule> value);
    internal bool IsSetRules();
}
public class Amazon.Glacier.Model.DataRetrievalRule : object {
    private Nullable`1<long> _bytesPerHour;
    private string _strategy;
    public long BytesPerHour { get; public set; }
    public string Strategy { get; public set; }
    public long get_BytesPerHour();
    public void set_BytesPerHour(long value);
    internal bool IsSetBytesPerHour();
    public string get_Strategy();
    public void set_Strategy(string value);
    internal bool IsSetStrategy();
}
public class Amazon.Glacier.Model.DeleteArchiveRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _archiveId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string ArchiveId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public DeleteArchiveRequest(string vaultName, string archiveId);
    public DeleteArchiveRequest(string accountId, string vaultName, string archiveId);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ArchiveId();
    public void set_ArchiveId(string value);
    internal bool IsSetArchiveId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.DeleteArchiveResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.DeleteVaultAccessPolicyRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.DeleteVaultAccessPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.DeleteVaultNotificationsRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public DeleteVaultNotificationsRequest(string vaultName);
    public DeleteVaultNotificationsRequest(string accountId, string vaultName);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.DeleteVaultNotificationsResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.DeleteVaultRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public DeleteVaultRequest(string vaultName);
    public DeleteVaultRequest(string accountId, string vaultName);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.DeleteVaultResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.DescribeJobRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _jobId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public DescribeJobRequest(string accountId, string vaultName, string jobId);
    public DescribeJobRequest(string vaultName, string jobId);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.DescribeJobResponse : AmazonWebServiceResponse {
    private ActionCode _action;
    private string _archiveId;
    private string _archiveSHA256TreeHash;
    private Nullable`1<long> _archiveSizeInBytes;
    private Nullable`1<bool> _completed;
    private Nullable`1<DateTime> _completionDate;
    private Nullable`1<DateTime> _creationDate;
    private InventoryRetrievalJobDescription _inventoryRetrievalParameters;
    private Nullable`1<long> _inventorySizeInBytes;
    private string _jobDescription;
    private string _jobId;
    private string _jobOutputPath;
    private OutputLocation _outputLocation;
    private string _retrievalByteRange;
    private SelectParameters _selectParameters;
    private string _sha256TreeHash;
    private string _snsTopic;
    private StatusCode _statusCode;
    private string _statusMessage;
    private string _tier;
    private string _vaultARN;
    public ActionCode Action { get; public set; }
    public string ArchiveId { get; public set; }
    public string ArchiveSHA256TreeHash { get; public set; }
    public long ArchiveSizeInBytes { get; public set; }
    public bool Completed { get; public set; }
    public DateTime CompletionDate { get; public set; }
    public DateTime CreationDate { get; public set; }
    public InventoryRetrievalJobDescription InventoryRetrievalParameters { get; public set; }
    public long InventorySizeInBytes { get; public set; }
    public string JobDescription { get; public set; }
    public string JobId { get; public set; }
    public string JobOutputPath { get; public set; }
    public OutputLocation OutputLocation { get; public set; }
    public string RetrievalByteRange { get; public set; }
    public SelectParameters SelectParameters { get; public set; }
    public string SHA256TreeHash { get; public set; }
    public string SNSTopic { get; public set; }
    public StatusCode StatusCode { get; public set; }
    public string StatusMessage { get; public set; }
    public string Tier { get; public set; }
    public string VaultARN { get; public set; }
    public ActionCode get_Action();
    public void set_Action(ActionCode value);
    internal bool IsSetAction();
    public string get_ArchiveId();
    public void set_ArchiveId(string value);
    internal bool IsSetArchiveId();
    public string get_ArchiveSHA256TreeHash();
    public void set_ArchiveSHA256TreeHash(string value);
    internal bool IsSetArchiveSHA256TreeHash();
    public long get_ArchiveSizeInBytes();
    public void set_ArchiveSizeInBytes(long value);
    internal bool IsSetArchiveSizeInBytes();
    public bool get_Completed();
    public void set_Completed(bool value);
    internal bool IsSetCompleted();
    public DateTime get_CompletionDate();
    public void set_CompletionDate(DateTime value);
    internal bool IsSetCompletionDate();
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public InventoryRetrievalJobDescription get_InventoryRetrievalParameters();
    public void set_InventoryRetrievalParameters(InventoryRetrievalJobDescription value);
    internal bool IsSetInventoryRetrievalParameters();
    public long get_InventorySizeInBytes();
    public void set_InventorySizeInBytes(long value);
    internal bool IsSetInventorySizeInBytes();
    public string get_JobDescription();
    public void set_JobDescription(string value);
    internal bool IsSetJobDescription();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_JobOutputPath();
    public void set_JobOutputPath(string value);
    internal bool IsSetJobOutputPath();
    public OutputLocation get_OutputLocation();
    public void set_OutputLocation(OutputLocation value);
    internal bool IsSetOutputLocation();
    public string get_RetrievalByteRange();
    public void set_RetrievalByteRange(string value);
    internal bool IsSetRetrievalByteRange();
    public SelectParameters get_SelectParameters();
    public void set_SelectParameters(SelectParameters value);
    internal bool IsSetSelectParameters();
    public string get_SHA256TreeHash();
    public void set_SHA256TreeHash(string value);
    internal bool IsSetSHA256TreeHash();
    public string get_SNSTopic();
    public void set_SNSTopic(string value);
    internal bool IsSetSNSTopic();
    public StatusCode get_StatusCode();
    public void set_StatusCode(StatusCode value);
    internal bool IsSetStatusCode();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public string get_Tier();
    public void set_Tier(string value);
    internal bool IsSetTier();
    public string get_VaultARN();
    public void set_VaultARN(string value);
    internal bool IsSetVaultARN();
}
public class Amazon.Glacier.Model.DescribeVaultOutput : object {
    private Nullable`1<DateTime> _creationDate;
    private Nullable`1<DateTime> _lastInventoryDate;
    private Nullable`1<long> _numberOfArchives;
    private Nullable`1<long> _sizeInBytes;
    private string _vaultARN;
    private string _vaultName;
    public DateTime CreationDate { get; public set; }
    public DateTime LastInventoryDate { get; public set; }
    public long NumberOfArchives { get; public set; }
    public long SizeInBytes { get; public set; }
    public string VaultARN { get; public set; }
    public string VaultName { get; public set; }
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public DateTime get_LastInventoryDate();
    public void set_LastInventoryDate(DateTime value);
    internal bool IsSetLastInventoryDate();
    public long get_NumberOfArchives();
    public void set_NumberOfArchives(long value);
    internal bool IsSetNumberOfArchives();
    public long get_SizeInBytes();
    public void set_SizeInBytes(long value);
    internal bool IsSetSizeInBytes();
    public string get_VaultARN();
    public void set_VaultARN(string value);
    internal bool IsSetVaultARN();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.DescribeVaultRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public DescribeVaultRequest(string vaultName);
    public DescribeVaultRequest(string accountId, string vaultName);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.DescribeVaultResponse : AmazonWebServiceResponse {
    private Nullable`1<DateTime> _creationDate;
    private Nullable`1<DateTime> _lastInventoryDate;
    private Nullable`1<long> _numberOfArchives;
    private Nullable`1<long> _sizeInBytes;
    private string _vaultARN;
    private string _vaultName;
    public DateTime CreationDate { get; public set; }
    public DateTime LastInventoryDate { get; public set; }
    public long NumberOfArchives { get; public set; }
    public long SizeInBytes { get; public set; }
    public string VaultARN { get; public set; }
    public string VaultName { get; public set; }
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public DateTime get_LastInventoryDate();
    public void set_LastInventoryDate(DateTime value);
    internal bool IsSetLastInventoryDate();
    public long get_NumberOfArchives();
    public void set_NumberOfArchives(long value);
    internal bool IsSetNumberOfArchives();
    public long get_SizeInBytes();
    public void set_SizeInBytes(long value);
    internal bool IsSetSizeInBytes();
    public string get_VaultARN();
    public void set_VaultARN(string value);
    internal bool IsSetVaultARN();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.Encryption : object {
    private EncryptionType _encryptionType;
    private string _kmsContext;
    private string _kmsKeyId;
    public EncryptionType EncryptionType { get; public set; }
    public string KMSContext { get; public set; }
    public string KMSKeyId { get; public set; }
    public EncryptionType get_EncryptionType();
    public void set_EncryptionType(EncryptionType value);
    internal bool IsSetEncryptionType();
    public string get_KMSContext();
    public void set_KMSContext(string value);
    internal bool IsSetKMSContext();
    public string get_KMSKeyId();
    public void set_KMSKeyId(string value);
    internal bool IsSetKMSKeyId();
}
public class Amazon.Glacier.Model.GetDataRetrievalPolicyRequest : AmazonGlacierRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.Glacier.Model.GetDataRetrievalPolicyResponse : AmazonWebServiceResponse {
    private DataRetrievalPolicy _policy;
    public DataRetrievalPolicy Policy { get; public set; }
    public DataRetrievalPolicy get_Policy();
    public void set_Policy(DataRetrievalPolicy value);
    internal bool IsSetPolicy();
}
public class Amazon.Glacier.Model.GetJobOutputRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _jobId;
    private string _range;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string JobId { get; public set; }
    public string Range { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public GetJobOutputRequest(string vaultName, string jobId, string range);
    public GetJobOutputRequest(string accountId, string vaultName, string jobId, string range);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_Range();
    public void set_Range(string value);
    internal bool IsSetRange();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.GetJobOutputResponse : AmazonWebServiceResponse {
    private string _acceptRanges;
    private string _archiveDescription;
    private Stream _body;
    private string _checksum;
    private string _contentRange;
    private string _contentType;
    private Nullable`1<int> _status;
    private bool _disposed;
    public string AcceptRanges { get; public set; }
    public string ArchiveDescription { get; public set; }
    public Stream Body { get; public set; }
    public string Checksum { get; public set; }
    public string ContentRange { get; public set; }
    public string ContentType { get; public set; }
    public int Status { get; public set; }
    public string get_AcceptRanges();
    public void set_AcceptRanges(string value);
    internal bool IsSetAcceptRanges();
    public string get_ArchiveDescription();
    public void set_ArchiveDescription(string value);
    internal bool IsSetArchiveDescription();
    public Stream get_Body();
    public void set_Body(Stream value);
    internal bool IsSetBody();
    public string get_Checksum();
    public void set_Checksum(string value);
    internal bool IsSetChecksum();
    public string get_ContentRange();
    public void set_ContentRange(string value);
    internal bool IsSetContentRange();
    public string get_ContentType();
    public void set_ContentType(string value);
    internal bool IsSetContentType();
    public int get_Status();
    public void set_Status(int value);
    internal bool IsSetStatus();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
public class Amazon.Glacier.Model.GetVaultAccessPolicyRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.GetVaultAccessPolicyResponse : AmazonWebServiceResponse {
    private VaultAccessPolicy _policy;
    public VaultAccessPolicy Policy { get; public set; }
    public VaultAccessPolicy get_Policy();
    public void set_Policy(VaultAccessPolicy value);
    internal bool IsSetPolicy();
}
public class Amazon.Glacier.Model.GetVaultLockRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.GetVaultLockResponse : AmazonWebServiceResponse {
    private string _creationDate;
    private string _expirationDate;
    private string _policy;
    private string _state;
    public string CreationDate { get; public set; }
    public string ExpirationDate { get; public set; }
    public string Policy { get; public set; }
    public string State { get; public set; }
    public string get_CreationDate();
    public void set_CreationDate(string value);
    internal bool IsSetCreationDate();
    public string get_ExpirationDate();
    public void set_ExpirationDate(string value);
    internal bool IsSetExpirationDate();
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
    public string get_State();
    public void set_State(string value);
    internal bool IsSetState();
}
public class Amazon.Glacier.Model.GetVaultNotificationsRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public GetVaultNotificationsRequest(string vaultName);
    public GetVaultNotificationsRequest(string accountId, string vaultName);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.GetVaultNotificationsResponse : AmazonWebServiceResponse {
    private VaultNotificationConfig _vaultNotificationConfig;
    public VaultNotificationConfig VaultNotificationConfig { get; public set; }
    public VaultNotificationConfig get_VaultNotificationConfig();
    public void set_VaultNotificationConfig(VaultNotificationConfig value);
    internal bool IsSetVaultNotificationConfig();
}
public class Amazon.Glacier.Model.GlacierJobDescription : object {
    private ActionCode _action;
    private string _archiveId;
    private string _archiveSHA256TreeHash;
    private Nullable`1<long> _archiveSizeInBytes;
    private Nullable`1<bool> _completed;
    private Nullable`1<DateTime> _completionDate;
    private Nullable`1<DateTime> _creationDate;
    private InventoryRetrievalJobDescription _inventoryRetrievalParameters;
    private Nullable`1<long> _inventorySizeInBytes;
    private string _jobDescription;
    private string _jobId;
    private string _jobOutputPath;
    private OutputLocation _outputLocation;
    private string _retrievalByteRange;
    private SelectParameters _selectParameters;
    private string _sha256TreeHash;
    private string _snsTopic;
    private StatusCode _statusCode;
    private string _statusMessage;
    private string _tier;
    private string _vaultARN;
    public ActionCode Action { get; public set; }
    public string ArchiveId { get; public set; }
    public string ArchiveSHA256TreeHash { get; public set; }
    public long ArchiveSizeInBytes { get; public set; }
    public bool Completed { get; public set; }
    public DateTime CompletionDate { get; public set; }
    public DateTime CreationDate { get; public set; }
    public InventoryRetrievalJobDescription InventoryRetrievalParameters { get; public set; }
    public long InventorySizeInBytes { get; public set; }
    public string JobDescription { get; public set; }
    public string JobId { get; public set; }
    public string JobOutputPath { get; public set; }
    public OutputLocation OutputLocation { get; public set; }
    public string RetrievalByteRange { get; public set; }
    public SelectParameters SelectParameters { get; public set; }
    public string SHA256TreeHash { get; public set; }
    public string SNSTopic { get; public set; }
    public StatusCode StatusCode { get; public set; }
    public string StatusMessage { get; public set; }
    public string Tier { get; public set; }
    public string VaultARN { get; public set; }
    public ActionCode get_Action();
    public void set_Action(ActionCode value);
    internal bool IsSetAction();
    public string get_ArchiveId();
    public void set_ArchiveId(string value);
    internal bool IsSetArchiveId();
    public string get_ArchiveSHA256TreeHash();
    public void set_ArchiveSHA256TreeHash(string value);
    internal bool IsSetArchiveSHA256TreeHash();
    public long get_ArchiveSizeInBytes();
    public void set_ArchiveSizeInBytes(long value);
    internal bool IsSetArchiveSizeInBytes();
    public bool get_Completed();
    public void set_Completed(bool value);
    internal bool IsSetCompleted();
    public DateTime get_CompletionDate();
    public void set_CompletionDate(DateTime value);
    internal bool IsSetCompletionDate();
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public InventoryRetrievalJobDescription get_InventoryRetrievalParameters();
    public void set_InventoryRetrievalParameters(InventoryRetrievalJobDescription value);
    internal bool IsSetInventoryRetrievalParameters();
    public long get_InventorySizeInBytes();
    public void set_InventorySizeInBytes(long value);
    internal bool IsSetInventorySizeInBytes();
    public string get_JobDescription();
    public void set_JobDescription(string value);
    internal bool IsSetJobDescription();
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_JobOutputPath();
    public void set_JobOutputPath(string value);
    internal bool IsSetJobOutputPath();
    public OutputLocation get_OutputLocation();
    public void set_OutputLocation(OutputLocation value);
    internal bool IsSetOutputLocation();
    public string get_RetrievalByteRange();
    public void set_RetrievalByteRange(string value);
    internal bool IsSetRetrievalByteRange();
    public SelectParameters get_SelectParameters();
    public void set_SelectParameters(SelectParameters value);
    internal bool IsSetSelectParameters();
    public string get_SHA256TreeHash();
    public void set_SHA256TreeHash(string value);
    internal bool IsSetSHA256TreeHash();
    public string get_SNSTopic();
    public void set_SNSTopic(string value);
    internal bool IsSetSNSTopic();
    public StatusCode get_StatusCode();
    public void set_StatusCode(StatusCode value);
    internal bool IsSetStatusCode();
    public string get_StatusMessage();
    public void set_StatusMessage(string value);
    internal bool IsSetStatusMessage();
    public string get_Tier();
    public void set_Tier(string value);
    internal bool IsSetTier();
    public string get_VaultARN();
    public void set_VaultARN(string value);
    internal bool IsSetVaultARN();
}
public class Amazon.Glacier.Model.GlacierPaginatorFactory : object {
    private IAmazonGlacier client;
    internal GlacierPaginatorFactory(IAmazonGlacier client);
    public sealed virtual IListJobsPaginator ListJobs(ListJobsRequest request);
    public sealed virtual IListPartsPaginator ListParts(ListPartsRequest request);
    public sealed virtual IListVaultsPaginator ListVaults(ListVaultsRequest request);
}
public class Amazon.Glacier.Model.Grant : object {
    private Grantee _grantee;
    private Permission _permission;
    public Grantee Grantee { get; public set; }
    public Permission Permission { get; public set; }
    public Grantee get_Grantee();
    public void set_Grantee(Grantee value);
    internal bool IsSetGrantee();
    public Permission get_Permission();
    public void set_Permission(Permission value);
    internal bool IsSetPermission();
}
public class Amazon.Glacier.Model.Grantee : object {
    private string _displayName;
    private string _emailAddress;
    private string _id;
    private Type _type;
    private string _uri;
    public string DisplayName { get; public set; }
    public string EmailAddress { get; public set; }
    public string ID { get; public set; }
    [AWSPropertyAttribute]
public Type Type { get; public set; }
    public string URI { get; public set; }
    public string get_DisplayName();
    public void set_DisplayName(string value);
    internal bool IsSetDisplayName();
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    internal bool IsSetEmailAddress();
    public string get_ID();
    public void set_ID(string value);
    internal bool IsSetID();
    public Type get_Type();
    public void set_Type(Type value);
    internal bool IsSetType();
    public string get_URI();
    public void set_URI(string value);
    internal bool IsSetURI();
}
public interface Amazon.Glacier.Model.IGlacierPaginatorFactory {
    public abstract virtual IListJobsPaginator ListJobs(ListJobsRequest request);
    public abstract virtual IListPartsPaginator ListParts(ListPartsRequest request);
    public abstract virtual IListVaultsPaginator ListVaults(ListVaultsRequest request);
}
public interface Amazon.Glacier.Model.IListJobsPaginator {
    public IPaginatedEnumerable`1<ListJobsResponse> Responses { get; }
    public IPaginatedEnumerable`1<GlacierJobDescription> JobList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListJobsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<GlacierJobDescription> get_JobList();
}
public interface Amazon.Glacier.Model.IListPartsPaginator {
    public IPaginatedEnumerable`1<ListPartsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PartListElement> Parts { get; }
    public abstract virtual IPaginatedEnumerable`1<ListPartsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<PartListElement> get_Parts();
}
public interface Amazon.Glacier.Model.IListVaultsPaginator {
    public IPaginatedEnumerable`1<ListVaultsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DescribeVaultOutput> VaultList { get; }
    public abstract virtual IPaginatedEnumerable`1<ListVaultsResponse> get_Responses();
    public abstract virtual IPaginatedEnumerable`1<DescribeVaultOutput> get_VaultList();
}
public class Amazon.Glacier.Model.InitiateJobRequest : AmazonGlacierRequest {
    private string _accountId;
    private JobParameters _jobParameters;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public JobParameters JobParameters { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public InitiateJobRequest(string vaultName, JobParameters jobParameters);
    public InitiateJobRequest(string accountId, string vaultName, JobParameters jobParameters);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public JobParameters get_JobParameters();
    public void set_JobParameters(JobParameters value);
    internal bool IsSetJobParameters();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.InitiateJobResponse : AmazonWebServiceResponse {
    private string _jobId;
    private string _jobOutputPath;
    private string _location;
    public string JobId { get; public set; }
    public string JobOutputPath { get; public set; }
    public string Location { get; public set; }
    public string get_JobId();
    public void set_JobId(string value);
    internal bool IsSetJobId();
    public string get_JobOutputPath();
    public void set_JobOutputPath(string value);
    internal bool IsSetJobOutputPath();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.Glacier.Model.InitiateMultipartUploadRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _archiveDescription;
    private Nullable`1<long> _partSize;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string ArchiveDescription { get; public set; }
    public long PartSize { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public InitiateMultipartUploadRequest(string vaultName, string archiveDescription, long partSize);
    public InitiateMultipartUploadRequest(string accountId, string vaultName, string archiveDescription, long partSize);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ArchiveDescription();
    public void set_ArchiveDescription(string value);
    internal bool IsSetArchiveDescription();
    public long get_PartSize();
    public void set_PartSize(long value);
    internal bool IsSetPartSize();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.InitiateMultipartUploadResponse : AmazonWebServiceResponse {
    private string _location;
    private string _uploadId;
    public string Location { get; public set; }
    public string UploadId { get; public set; }
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
}
public class Amazon.Glacier.Model.InitiateVaultLockRequest : AmazonGlacierRequest {
    private string _accountId;
    private VaultLockPolicy _policy;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public VaultLockPolicy Policy { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public VaultLockPolicy get_Policy();
    public void set_Policy(VaultLockPolicy value);
    internal bool IsSetPolicy();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.InitiateVaultLockResponse : AmazonWebServiceResponse {
    private string _lockId;
    public string LockId { get; public set; }
    public string get_LockId();
    public void set_LockId(string value);
    internal bool IsSetLockId();
}
public class Amazon.Glacier.Model.InputSerialization : object {
    private CSVInput _csv;
    public CSVInput Csv { get; public set; }
    public CSVInput get_Csv();
    public void set_Csv(CSVInput value);
    internal bool IsSetCsv();
}
public class Amazon.Glacier.Model.InsufficientCapacityException : AmazonGlacierException {
    private string _code;
    private string _type;
    public string Code { get; public set; }
    public string Type { get; public set; }
    public InsufficientCapacityException(string message);
    public InsufficientCapacityException(string message, Exception innerException);
    public InsufficientCapacityException(Exception innerException);
    public InsufficientCapacityException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InsufficientCapacityException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.AbortMultipartUploadRequestMarshaller : object {
    private static AbortMultipartUploadRequestMarshaller _instance;
    public static AbortMultipartUploadRequestMarshaller Instance { get; }
    private static AbortMultipartUploadRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AbortMultipartUploadRequest publicRequest);
    internal static AbortMultipartUploadRequestMarshaller GetInstance();
    public static AbortMultipartUploadRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.AbortMultipartUploadResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AbortMultipartUploadResponseUnmarshaller _instance;
    public static AbortMultipartUploadResponseUnmarshaller Instance { get; }
    private static AbortMultipartUploadResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AbortMultipartUploadResponseUnmarshaller GetInstance();
    public static AbortMultipartUploadResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.AbortVaultLockRequestMarshaller : object {
    private static AbortVaultLockRequestMarshaller _instance;
    public static AbortVaultLockRequestMarshaller Instance { get; }
    private static AbortVaultLockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AbortVaultLockRequest publicRequest);
    internal static AbortVaultLockRequestMarshaller GetInstance();
    public static AbortVaultLockRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.AbortVaultLockResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AbortVaultLockResponseUnmarshaller _instance;
    public static AbortVaultLockResponseUnmarshaller Instance { get; }
    private static AbortVaultLockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AbortVaultLockResponseUnmarshaller GetInstance();
    public static AbortVaultLockResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.AddTagsToVaultRequestMarshaller : object {
    private static AddTagsToVaultRequestMarshaller _instance;
    public static AddTagsToVaultRequestMarshaller Instance { get; }
    private static AddTagsToVaultRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(AddTagsToVaultRequest publicRequest);
    internal static AddTagsToVaultRequestMarshaller GetInstance();
    public static AddTagsToVaultRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.AddTagsToVaultResponseUnmarshaller : JsonResponseUnmarshaller {
    private static AddTagsToVaultResponseUnmarshaller _instance;
    public static AddTagsToVaultResponseUnmarshaller Instance { get; }
    private static AddTagsToVaultResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static AddTagsToVaultResponseUnmarshaller GetInstance();
    public static AddTagsToVaultResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteMultipartUploadRequestMarshaller : object {
    private static CompleteMultipartUploadRequestMarshaller _instance;
    public static CompleteMultipartUploadRequestMarshaller Instance { get; }
    private static CompleteMultipartUploadRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CompleteMultipartUploadRequest publicRequest);
    internal static CompleteMultipartUploadRequestMarshaller GetInstance();
    public static CompleteMultipartUploadRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteMultipartUploadResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CompleteMultipartUploadResponseUnmarshaller _instance;
    public static CompleteMultipartUploadResponseUnmarshaller Instance { get; }
    private static CompleteMultipartUploadResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CompleteMultipartUploadResponseUnmarshaller GetInstance();
    public static CompleteMultipartUploadResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteVaultLockRequestMarshaller : object {
    private static CompleteVaultLockRequestMarshaller _instance;
    public static CompleteVaultLockRequestMarshaller Instance { get; }
    private static CompleteVaultLockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CompleteVaultLockRequest publicRequest);
    internal static CompleteVaultLockRequestMarshaller GetInstance();
    public static CompleteVaultLockRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.CompleteVaultLockResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CompleteVaultLockResponseUnmarshaller _instance;
    public static CompleteVaultLockResponseUnmarshaller Instance { get; }
    private static CompleteVaultLockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CompleteVaultLockResponseUnmarshaller GetInstance();
    public static CompleteVaultLockResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.CreateVaultRequestMarshaller : object {
    private static CreateVaultRequestMarshaller _instance;
    public static CreateVaultRequestMarshaller Instance { get; }
    private static CreateVaultRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(CreateVaultRequest publicRequest);
    internal static CreateVaultRequestMarshaller GetInstance();
    public static CreateVaultRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.CreateVaultResponseUnmarshaller : JsonResponseUnmarshaller {
    private static CreateVaultResponseUnmarshaller _instance;
    public static CreateVaultResponseUnmarshaller Instance { get; }
    private static CreateVaultResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static CreateVaultResponseUnmarshaller GetInstance();
    public static CreateVaultResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.CSVInputMarshaller : object {
    public static CSVInputMarshaller Instance;
    private static CSVInputMarshaller();
    public sealed virtual void Marshall(CSVInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.CSVInputUnmarshaller : object {
    private static CSVInputUnmarshaller _instance;
    public static CSVInputUnmarshaller Instance { get; }
    private static CSVInputUnmarshaller();
    private sealed virtual override CSVInput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.CSVInput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CSVInput Unmarshall(JsonUnmarshallerContext context);
    public static CSVInputUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.CSVOutputMarshaller : object {
    public static CSVOutputMarshaller Instance;
    private static CSVOutputMarshaller();
    public sealed virtual void Marshall(CSVOutput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.CSVOutputUnmarshaller : object {
    private static CSVOutputUnmarshaller _instance;
    public static CSVOutputUnmarshaller Instance { get; }
    private static CSVOutputUnmarshaller();
    private sealed virtual override CSVOutput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.CSVOutput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual CSVOutput Unmarshall(JsonUnmarshallerContext context);
    public static CSVOutputUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalPolicyMarshaller : object {
    public static DataRetrievalPolicyMarshaller Instance;
    private static DataRetrievalPolicyMarshaller();
    public sealed virtual void Marshall(DataRetrievalPolicy requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalPolicyUnmarshaller : object {
    private static DataRetrievalPolicyUnmarshaller _instance;
    public static DataRetrievalPolicyUnmarshaller Instance { get; }
    private static DataRetrievalPolicyUnmarshaller();
    private sealed virtual override DataRetrievalPolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.DataRetrievalPolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataRetrievalPolicy Unmarshall(JsonUnmarshallerContext context);
    public static DataRetrievalPolicyUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalRuleMarshaller : object {
    public static DataRetrievalRuleMarshaller Instance;
    private static DataRetrievalRuleMarshaller();
    public sealed virtual void Marshall(DataRetrievalRule requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DataRetrievalRuleUnmarshaller : object {
    private static DataRetrievalRuleUnmarshaller _instance;
    public static DataRetrievalRuleUnmarshaller Instance { get; }
    private static DataRetrievalRuleUnmarshaller();
    private sealed virtual override DataRetrievalRule Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.DataRetrievalRule,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DataRetrievalRule Unmarshall(JsonUnmarshallerContext context);
    public static DataRetrievalRuleUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteArchiveRequestMarshaller : object {
    private static DeleteArchiveRequestMarshaller _instance;
    public static DeleteArchiveRequestMarshaller Instance { get; }
    private static DeleteArchiveRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteArchiveRequest publicRequest);
    internal static DeleteArchiveRequestMarshaller GetInstance();
    public static DeleteArchiveRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteArchiveResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteArchiveResponseUnmarshaller _instance;
    public static DeleteArchiveResponseUnmarshaller Instance { get; }
    private static DeleteArchiveResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteArchiveResponseUnmarshaller GetInstance();
    public static DeleteArchiveResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultAccessPolicyRequestMarshaller : object {
    private static DeleteVaultAccessPolicyRequestMarshaller _instance;
    public static DeleteVaultAccessPolicyRequestMarshaller Instance { get; }
    private static DeleteVaultAccessPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVaultAccessPolicyRequest publicRequest);
    internal static DeleteVaultAccessPolicyRequestMarshaller GetInstance();
    public static DeleteVaultAccessPolicyRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultAccessPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteVaultAccessPolicyResponseUnmarshaller _instance;
    public static DeleteVaultAccessPolicyResponseUnmarshaller Instance { get; }
    private static DeleteVaultAccessPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVaultAccessPolicyResponseUnmarshaller GetInstance();
    public static DeleteVaultAccessPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultNotificationsRequestMarshaller : object {
    private static DeleteVaultNotificationsRequestMarshaller _instance;
    public static DeleteVaultNotificationsRequestMarshaller Instance { get; }
    private static DeleteVaultNotificationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVaultNotificationsRequest publicRequest);
    internal static DeleteVaultNotificationsRequestMarshaller GetInstance();
    public static DeleteVaultNotificationsRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultNotificationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteVaultNotificationsResponseUnmarshaller _instance;
    public static DeleteVaultNotificationsResponseUnmarshaller Instance { get; }
    private static DeleteVaultNotificationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVaultNotificationsResponseUnmarshaller GetInstance();
    public static DeleteVaultNotificationsResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultRequestMarshaller : object {
    private static DeleteVaultRequestMarshaller _instance;
    public static DeleteVaultRequestMarshaller Instance { get; }
    private static DeleteVaultRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DeleteVaultRequest publicRequest);
    internal static DeleteVaultRequestMarshaller GetInstance();
    public static DeleteVaultRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DeleteVaultResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DeleteVaultResponseUnmarshaller _instance;
    public static DeleteVaultResponseUnmarshaller Instance { get; }
    private static DeleteVaultResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DeleteVaultResponseUnmarshaller GetInstance();
    public static DeleteVaultResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeJobRequestMarshaller : object {
    private static DescribeJobRequestMarshaller _instance;
    public static DescribeJobRequestMarshaller Instance { get; }
    private static DescribeJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeJobRequest publicRequest);
    internal static DescribeJobRequestMarshaller GetInstance();
    public static DescribeJobRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeJobResponseUnmarshaller _instance;
    public static DescribeJobResponseUnmarshaller Instance { get; }
    private static DescribeJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeJobResponseUnmarshaller GetInstance();
    public static DescribeJobResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultOutputUnmarshaller : object {
    private static DescribeVaultOutputUnmarshaller _instance;
    public static DescribeVaultOutputUnmarshaller Instance { get; }
    private static DescribeVaultOutputUnmarshaller();
    private sealed virtual override DescribeVaultOutput Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.DescribeVaultOutput,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual DescribeVaultOutput Unmarshall(JsonUnmarshallerContext context);
    public static DescribeVaultOutputUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultRequestMarshaller : object {
    private static DescribeVaultRequestMarshaller _instance;
    public static DescribeVaultRequestMarshaller Instance { get; }
    private static DescribeVaultRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(DescribeVaultRequest publicRequest);
    internal static DescribeVaultRequestMarshaller GetInstance();
    public static DescribeVaultRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.DescribeVaultResponseUnmarshaller : JsonResponseUnmarshaller {
    private static DescribeVaultResponseUnmarshaller _instance;
    public static DescribeVaultResponseUnmarshaller Instance { get; }
    private static DescribeVaultResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static DescribeVaultResponseUnmarshaller GetInstance();
    public static DescribeVaultResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.EncryptionMarshaller : object {
    public static EncryptionMarshaller Instance;
    private static EncryptionMarshaller();
    public sealed virtual void Marshall(Encryption requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.EncryptionUnmarshaller : object {
    private static EncryptionUnmarshaller _instance;
    public static EncryptionUnmarshaller Instance { get; }
    private static EncryptionUnmarshaller();
    private sealed virtual override Encryption Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.Encryption,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Encryption Unmarshall(JsonUnmarshallerContext context);
    public static EncryptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GetDataRetrievalPolicyRequestMarshaller : object {
    private static GetDataRetrievalPolicyRequestMarshaller _instance;
    public static GetDataRetrievalPolicyRequestMarshaller Instance { get; }
    private static GetDataRetrievalPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetDataRetrievalPolicyRequest publicRequest);
    internal static GetDataRetrievalPolicyRequestMarshaller GetInstance();
    public static GetDataRetrievalPolicyRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GetDataRetrievalPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetDataRetrievalPolicyResponseUnmarshaller _instance;
    public static GetDataRetrievalPolicyResponseUnmarshaller Instance { get; }
    private static GetDataRetrievalPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetDataRetrievalPolicyResponseUnmarshaller GetInstance();
    public static GetDataRetrievalPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GetJobOutputRequestMarshaller : object {
    private static GetJobOutputRequestMarshaller _instance;
    public static GetJobOutputRequestMarshaller Instance { get; }
    private static GetJobOutputRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetJobOutputRequest publicRequest);
    internal static GetJobOutputRequestMarshaller GetInstance();
    public static GetJobOutputRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GetJobOutputResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetJobOutputResponseUnmarshaller _instance;
    public bool HasStreamingProperty { get; }
    public static GetJobOutputResponseUnmarshaller Instance { get; }
    private static GetJobOutputResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    public virtual bool get_HasStreamingProperty();
    internal static GetJobOutputResponseUnmarshaller GetInstance();
    public static GetJobOutputResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultAccessPolicyRequestMarshaller : object {
    private static GetVaultAccessPolicyRequestMarshaller _instance;
    public static GetVaultAccessPolicyRequestMarshaller Instance { get; }
    private static GetVaultAccessPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVaultAccessPolicyRequest publicRequest);
    internal static GetVaultAccessPolicyRequestMarshaller GetInstance();
    public static GetVaultAccessPolicyRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultAccessPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetVaultAccessPolicyResponseUnmarshaller _instance;
    public static GetVaultAccessPolicyResponseUnmarshaller Instance { get; }
    private static GetVaultAccessPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVaultAccessPolicyResponseUnmarshaller GetInstance();
    public static GetVaultAccessPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultLockRequestMarshaller : object {
    private static GetVaultLockRequestMarshaller _instance;
    public static GetVaultLockRequestMarshaller Instance { get; }
    private static GetVaultLockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVaultLockRequest publicRequest);
    internal static GetVaultLockRequestMarshaller GetInstance();
    public static GetVaultLockRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultLockResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetVaultLockResponseUnmarshaller _instance;
    public static GetVaultLockResponseUnmarshaller Instance { get; }
    private static GetVaultLockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVaultLockResponseUnmarshaller GetInstance();
    public static GetVaultLockResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultNotificationsRequestMarshaller : object {
    private static GetVaultNotificationsRequestMarshaller _instance;
    public static GetVaultNotificationsRequestMarshaller Instance { get; }
    private static GetVaultNotificationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(GetVaultNotificationsRequest publicRequest);
    internal static GetVaultNotificationsRequestMarshaller GetInstance();
    public static GetVaultNotificationsRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GetVaultNotificationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static GetVaultNotificationsResponseUnmarshaller _instance;
    public static GetVaultNotificationsResponseUnmarshaller Instance { get; }
    private static GetVaultNotificationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static GetVaultNotificationsResponseUnmarshaller GetInstance();
    public static GetVaultNotificationsResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GlacierJobDescriptionUnmarshaller : object {
    private static GlacierJobDescriptionUnmarshaller _instance;
    public static GlacierJobDescriptionUnmarshaller Instance { get; }
    private static GlacierJobDescriptionUnmarshaller();
    private sealed virtual override GlacierJobDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.GlacierJobDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual GlacierJobDescription Unmarshall(JsonUnmarshallerContext context);
    public static GlacierJobDescriptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GranteeMarshaller : object {
    public static GranteeMarshaller Instance;
    private static GranteeMarshaller();
    public sealed virtual void Marshall(Grantee requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GranteeUnmarshaller : object {
    private static GranteeUnmarshaller _instance;
    public static GranteeUnmarshaller Instance { get; }
    private static GranteeUnmarshaller();
    private sealed virtual override Grantee Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.Grantee,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Grantee Unmarshall(JsonUnmarshallerContext context);
    public static GranteeUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GrantMarshaller : object {
    public static GrantMarshaller Instance;
    private static GrantMarshaller();
    public sealed virtual void Marshall(Grant requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.GrantUnmarshaller : object {
    private static GrantUnmarshaller _instance;
    public static GrantUnmarshaller Instance { get; }
    private static GrantUnmarshaller();
    private sealed virtual override Grant Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.Grant,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual Grant Unmarshall(JsonUnmarshallerContext context);
    public static GrantUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateJobRequestMarshaller : object {
    private static InitiateJobRequestMarshaller _instance;
    public static InitiateJobRequestMarshaller Instance { get; }
    private static InitiateJobRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(InitiateJobRequest publicRequest);
    internal static InitiateJobRequestMarshaller GetInstance();
    public static InitiateJobRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateJobResponseUnmarshaller : JsonResponseUnmarshaller {
    private static InitiateJobResponseUnmarshaller _instance;
    public static InitiateJobResponseUnmarshaller Instance { get; }
    private static InitiateJobResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static InitiateJobResponseUnmarshaller GetInstance();
    public static InitiateJobResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateMultipartUploadRequestMarshaller : object {
    private static InitiateMultipartUploadRequestMarshaller _instance;
    public static InitiateMultipartUploadRequestMarshaller Instance { get; }
    private static InitiateMultipartUploadRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(InitiateMultipartUploadRequest publicRequest);
    internal static InitiateMultipartUploadRequestMarshaller GetInstance();
    public static InitiateMultipartUploadRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateMultipartUploadResponseUnmarshaller : JsonResponseUnmarshaller {
    private static InitiateMultipartUploadResponseUnmarshaller _instance;
    public static InitiateMultipartUploadResponseUnmarshaller Instance { get; }
    private static InitiateMultipartUploadResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static InitiateMultipartUploadResponseUnmarshaller GetInstance();
    public static InitiateMultipartUploadResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateVaultLockRequestMarshaller : object {
    private static InitiateVaultLockRequestMarshaller _instance;
    public static InitiateVaultLockRequestMarshaller Instance { get; }
    private static InitiateVaultLockRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(InitiateVaultLockRequest publicRequest);
    internal static InitiateVaultLockRequestMarshaller GetInstance();
    public static InitiateVaultLockRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InitiateVaultLockResponseUnmarshaller : JsonResponseUnmarshaller {
    private static InitiateVaultLockResponseUnmarshaller _instance;
    public static InitiateVaultLockResponseUnmarshaller Instance { get; }
    private static InitiateVaultLockResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static InitiateVaultLockResponseUnmarshaller GetInstance();
    public static InitiateVaultLockResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InputSerializationMarshaller : object {
    public static InputSerializationMarshaller Instance;
    private static InputSerializationMarshaller();
    public sealed virtual void Marshall(InputSerialization requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InputSerializationUnmarshaller : object {
    private static InputSerializationUnmarshaller _instance;
    public static InputSerializationUnmarshaller Instance { get; }
    private static InputSerializationUnmarshaller();
    private sealed virtual override InputSerialization Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.InputSerialization,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InputSerialization Unmarshall(JsonUnmarshallerContext context);
    public static InputSerializationUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InsufficientCapacityExceptionUnmarshaller : object {
    private static InsufficientCapacityExceptionUnmarshaller _instance;
    public static InsufficientCapacityExceptionUnmarshaller Instance { get; }
    private static InsufficientCapacityExceptionUnmarshaller();
    public sealed virtual InsufficientCapacityException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InsufficientCapacityException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InsufficientCapacityExceptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller : object {
    private static InvalidParameterValueExceptionUnmarshaller _instance;
    public static InvalidParameterValueExceptionUnmarshaller Instance { get; }
    private static InvalidParameterValueExceptionUnmarshaller();
    public sealed virtual InvalidParameterValueException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual InvalidParameterValueException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static InvalidParameterValueExceptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InventoryRetrievalJobDescriptionUnmarshaller : object {
    private static InventoryRetrievalJobDescriptionUnmarshaller _instance;
    public static InventoryRetrievalJobDescriptionUnmarshaller Instance { get; }
    private static InventoryRetrievalJobDescriptionUnmarshaller();
    private sealed virtual override InventoryRetrievalJobDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.InventoryRetrievalJobDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual InventoryRetrievalJobDescription Unmarshall(JsonUnmarshallerContext context);
    public static InventoryRetrievalJobDescriptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.InventoryRetrievalJobInputMarshaller : object {
    public static InventoryRetrievalJobInputMarshaller Instance;
    private static InventoryRetrievalJobInputMarshaller();
    public sealed virtual void Marshall(InventoryRetrievalJobInput requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.JobParametersMarshaller : object {
    public static JobParametersMarshaller Instance;
    private static JobParametersMarshaller();
    public sealed virtual void Marshall(JobParameters requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller : object {
    private static LimitExceededExceptionUnmarshaller _instance;
    public static LimitExceededExceptionUnmarshaller Instance { get; }
    private static LimitExceededExceptionUnmarshaller();
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual LimitExceededException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static LimitExceededExceptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller : object {
    private static ListJobsRequestMarshaller _instance;
    public static ListJobsRequestMarshaller Instance { get; }
    private static ListJobsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListJobsRequest publicRequest);
    internal static ListJobsRequestMarshaller GetInstance();
    public static ListJobsRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListJobsResponseUnmarshaller _instance;
    public static ListJobsResponseUnmarshaller Instance { get; }
    private static ListJobsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListJobsResponseUnmarshaller GetInstance();
    public static ListJobsResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListMultipartUploadsRequestMarshaller : object {
    private static ListMultipartUploadsRequestMarshaller _instance;
    public static ListMultipartUploadsRequestMarshaller Instance { get; }
    private static ListMultipartUploadsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListMultipartUploadsRequest publicRequest);
    internal static ListMultipartUploadsRequestMarshaller GetInstance();
    public static ListMultipartUploadsRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListMultipartUploadsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListMultipartUploadsResponseUnmarshaller _instance;
    public static ListMultipartUploadsResponseUnmarshaller Instance { get; }
    private static ListMultipartUploadsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListMultipartUploadsResponseUnmarshaller GetInstance();
    public static ListMultipartUploadsResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListPartsRequestMarshaller : object {
    private static ListPartsRequestMarshaller _instance;
    public static ListPartsRequestMarshaller Instance { get; }
    private static ListPartsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListPartsRequest publicRequest);
    internal static ListPartsRequestMarshaller GetInstance();
    public static ListPartsRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListPartsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListPartsResponseUnmarshaller _instance;
    public static ListPartsResponseUnmarshaller Instance { get; }
    private static ListPartsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListPartsResponseUnmarshaller GetInstance();
    public static ListPartsResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListProvisionedCapacityRequestMarshaller : object {
    private static ListProvisionedCapacityRequestMarshaller _instance;
    public static ListProvisionedCapacityRequestMarshaller Instance { get; }
    private static ListProvisionedCapacityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListProvisionedCapacityRequest publicRequest);
    internal static ListProvisionedCapacityRequestMarshaller GetInstance();
    public static ListProvisionedCapacityRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListProvisionedCapacityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListProvisionedCapacityResponseUnmarshaller _instance;
    public static ListProvisionedCapacityResponseUnmarshaller Instance { get; }
    private static ListProvisionedCapacityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListProvisionedCapacityResponseUnmarshaller GetInstance();
    public static ListProvisionedCapacityResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListTagsForVaultRequestMarshaller : object {
    private static ListTagsForVaultRequestMarshaller _instance;
    public static ListTagsForVaultRequestMarshaller Instance { get; }
    private static ListTagsForVaultRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListTagsForVaultRequest publicRequest);
    internal static ListTagsForVaultRequestMarshaller GetInstance();
    public static ListTagsForVaultRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListTagsForVaultResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListTagsForVaultResponseUnmarshaller _instance;
    public static ListTagsForVaultResponseUnmarshaller Instance { get; }
    private static ListTagsForVaultResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListTagsForVaultResponseUnmarshaller GetInstance();
    public static ListTagsForVaultResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListVaultsRequestMarshaller : object {
    private static ListVaultsRequestMarshaller _instance;
    public static ListVaultsRequestMarshaller Instance { get; }
    private static ListVaultsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(ListVaultsRequest publicRequest);
    internal static ListVaultsRequestMarshaller GetInstance();
    public static ListVaultsRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ListVaultsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static ListVaultsResponseUnmarshaller _instance;
    public static ListVaultsResponseUnmarshaller Instance { get; }
    private static ListVaultsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static ListVaultsResponseUnmarshaller GetInstance();
    public static ListVaultsResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.MissingParameterValueExceptionUnmarshaller : object {
    private static MissingParameterValueExceptionUnmarshaller _instance;
    public static MissingParameterValueExceptionUnmarshaller Instance { get; }
    private static MissingParameterValueExceptionUnmarshaller();
    public sealed virtual MissingParameterValueException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual MissingParameterValueException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static MissingParameterValueExceptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.OutputLocationMarshaller : object {
    public static OutputLocationMarshaller Instance;
    private static OutputLocationMarshaller();
    public sealed virtual void Marshall(OutputLocation requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.OutputLocationUnmarshaller : object {
    private static OutputLocationUnmarshaller _instance;
    public static OutputLocationUnmarshaller Instance { get; }
    private static OutputLocationUnmarshaller();
    private sealed virtual override OutputLocation Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.OutputLocation,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OutputLocation Unmarshall(JsonUnmarshallerContext context);
    public static OutputLocationUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.OutputSerializationMarshaller : object {
    public static OutputSerializationMarshaller Instance;
    private static OutputSerializationMarshaller();
    public sealed virtual void Marshall(OutputSerialization requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.OutputSerializationUnmarshaller : object {
    private static OutputSerializationUnmarshaller _instance;
    public static OutputSerializationUnmarshaller Instance { get; }
    private static OutputSerializationUnmarshaller();
    private sealed virtual override OutputSerialization Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.OutputSerialization,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual OutputSerialization Unmarshall(JsonUnmarshallerContext context);
    public static OutputSerializationUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.PartListElementUnmarshaller : object {
    private static PartListElementUnmarshaller _instance;
    public static PartListElementUnmarshaller Instance { get; }
    private static PartListElementUnmarshaller();
    private sealed virtual override PartListElement Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.PartListElement,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual PartListElement Unmarshall(JsonUnmarshallerContext context);
    public static PartListElementUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.PolicyEnforcedExceptionUnmarshaller : object {
    private static PolicyEnforcedExceptionUnmarshaller _instance;
    public static PolicyEnforcedExceptionUnmarshaller Instance { get; }
    private static PolicyEnforcedExceptionUnmarshaller();
    public sealed virtual PolicyEnforcedException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual PolicyEnforcedException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static PolicyEnforcedExceptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ProvisionedCapacityDescriptionUnmarshaller : object {
    private static ProvisionedCapacityDescriptionUnmarshaller _instance;
    public static ProvisionedCapacityDescriptionUnmarshaller Instance { get; }
    private static ProvisionedCapacityDescriptionUnmarshaller();
    private sealed virtual override ProvisionedCapacityDescription Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.ProvisionedCapacityDescription,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual ProvisionedCapacityDescription Unmarshall(JsonUnmarshallerContext context);
    public static ProvisionedCapacityDescriptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.PurchaseProvisionedCapacityRequestMarshaller : object {
    private static PurchaseProvisionedCapacityRequestMarshaller _instance;
    public static PurchaseProvisionedCapacityRequestMarshaller Instance { get; }
    private static PurchaseProvisionedCapacityRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(PurchaseProvisionedCapacityRequest publicRequest);
    internal static PurchaseProvisionedCapacityRequestMarshaller GetInstance();
    public static PurchaseProvisionedCapacityRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.PurchaseProvisionedCapacityResponseUnmarshaller : JsonResponseUnmarshaller {
    private static PurchaseProvisionedCapacityResponseUnmarshaller _instance;
    public static PurchaseProvisionedCapacityResponseUnmarshaller Instance { get; }
    private static PurchaseProvisionedCapacityResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static PurchaseProvisionedCapacityResponseUnmarshaller GetInstance();
    public static PurchaseProvisionedCapacityResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.RemoveTagsFromVaultRequestMarshaller : object {
    private static RemoveTagsFromVaultRequestMarshaller _instance;
    public static RemoveTagsFromVaultRequestMarshaller Instance { get; }
    private static RemoveTagsFromVaultRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(RemoveTagsFromVaultRequest publicRequest);
    internal static RemoveTagsFromVaultRequestMarshaller GetInstance();
    public static RemoveTagsFromVaultRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.RemoveTagsFromVaultResponseUnmarshaller : JsonResponseUnmarshaller {
    private static RemoveTagsFromVaultResponseUnmarshaller _instance;
    public static RemoveTagsFromVaultResponseUnmarshaller Instance { get; }
    private static RemoveTagsFromVaultResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static RemoveTagsFromVaultResponseUnmarshaller GetInstance();
    public static RemoveTagsFromVaultResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.RequestTimeoutExceptionUnmarshaller : object {
    private static RequestTimeoutExceptionUnmarshaller _instance;
    public static RequestTimeoutExceptionUnmarshaller Instance { get; }
    private static RequestTimeoutExceptionUnmarshaller();
    public sealed virtual RequestTimeoutException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual RequestTimeoutException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static RequestTimeoutExceptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller : object {
    private static ResourceNotFoundExceptionUnmarshaller _instance;
    public static ResourceNotFoundExceptionUnmarshaller Instance { get; }
    private static ResourceNotFoundExceptionUnmarshaller();
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ResourceNotFoundException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ResourceNotFoundExceptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.S3LocationMarshaller : object {
    public static S3LocationMarshaller Instance;
    private static S3LocationMarshaller();
    public sealed virtual void Marshall(S3Location requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.S3LocationUnmarshaller : object {
    private static S3LocationUnmarshaller _instance;
    public static S3LocationUnmarshaller Instance { get; }
    private static S3LocationUnmarshaller();
    private sealed virtual override S3Location Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.S3Location,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual S3Location Unmarshall(JsonUnmarshallerContext context);
    public static S3LocationUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.SelectParametersMarshaller : object {
    public static SelectParametersMarshaller Instance;
    private static SelectParametersMarshaller();
    public sealed virtual void Marshall(SelectParameters requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.SelectParametersUnmarshaller : object {
    private static SelectParametersUnmarshaller _instance;
    public static SelectParametersUnmarshaller Instance { get; }
    private static SelectParametersUnmarshaller();
    private sealed virtual override SelectParameters Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.SelectParameters,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual SelectParameters Unmarshall(JsonUnmarshallerContext context);
    public static SelectParametersUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.ServiceUnavailableExceptionUnmarshaller : object {
    private static ServiceUnavailableExceptionUnmarshaller _instance;
    public static ServiceUnavailableExceptionUnmarshaller Instance { get; }
    private static ServiceUnavailableExceptionUnmarshaller();
    public sealed virtual ServiceUnavailableException Unmarshall(JsonUnmarshallerContext context);
    public sealed virtual ServiceUnavailableException Unmarshall(JsonUnmarshallerContext context, ErrorResponse errorResponse);
    public static ServiceUnavailableExceptionUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.SetDataRetrievalPolicyRequestMarshaller : object {
    private static SetDataRetrievalPolicyRequestMarshaller _instance;
    public static SetDataRetrievalPolicyRequestMarshaller Instance { get; }
    private static SetDataRetrievalPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetDataRetrievalPolicyRequest publicRequest);
    internal static SetDataRetrievalPolicyRequestMarshaller GetInstance();
    public static SetDataRetrievalPolicyRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.SetDataRetrievalPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetDataRetrievalPolicyResponseUnmarshaller _instance;
    public static SetDataRetrievalPolicyResponseUnmarshaller Instance { get; }
    private static SetDataRetrievalPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetDataRetrievalPolicyResponseUnmarshaller GetInstance();
    public static SetDataRetrievalPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultAccessPolicyRequestMarshaller : object {
    private static SetVaultAccessPolicyRequestMarshaller _instance;
    public static SetVaultAccessPolicyRequestMarshaller Instance { get; }
    private static SetVaultAccessPolicyRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetVaultAccessPolicyRequest publicRequest);
    internal static SetVaultAccessPolicyRequestMarshaller GetInstance();
    public static SetVaultAccessPolicyRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultAccessPolicyResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetVaultAccessPolicyResponseUnmarshaller _instance;
    public static SetVaultAccessPolicyResponseUnmarshaller Instance { get; }
    private static SetVaultAccessPolicyResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetVaultAccessPolicyResponseUnmarshaller GetInstance();
    public static SetVaultAccessPolicyResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultNotificationsRequestMarshaller : object {
    private static SetVaultNotificationsRequestMarshaller _instance;
    public static SetVaultNotificationsRequestMarshaller Instance { get; }
    private static SetVaultNotificationsRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(SetVaultNotificationsRequest publicRequest);
    internal static SetVaultNotificationsRequestMarshaller GetInstance();
    public static SetVaultNotificationsRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.SetVaultNotificationsResponseUnmarshaller : JsonResponseUnmarshaller {
    private static SetVaultNotificationsResponseUnmarshaller _instance;
    public static SetVaultNotificationsResponseUnmarshaller Instance { get; }
    private static SetVaultNotificationsResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static SetVaultNotificationsResponseUnmarshaller GetInstance();
    public static SetVaultNotificationsResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.UploadArchiveRequestMarshaller : object {
    private static UploadArchiveRequestMarshaller _instance;
    public static UploadArchiveRequestMarshaller Instance { get; }
    private static UploadArchiveRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UploadArchiveRequest publicRequest);
    internal static UploadArchiveRequestMarshaller GetInstance();
    public static UploadArchiveRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.UploadArchiveResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UploadArchiveResponseUnmarshaller _instance;
    public static UploadArchiveResponseUnmarshaller Instance { get; }
    private static UploadArchiveResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UploadArchiveResponseUnmarshaller GetInstance();
    public static UploadArchiveResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.UploadListElementUnmarshaller : object {
    private static UploadListElementUnmarshaller _instance;
    public static UploadListElementUnmarshaller Instance { get; }
    private static UploadListElementUnmarshaller();
    private sealed virtual override UploadListElement Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.UploadListElement,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual UploadListElement Unmarshall(JsonUnmarshallerContext context);
    public static UploadListElementUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.UploadMultipartPartRequestMarshaller : object {
    private static UploadMultipartPartRequestMarshaller _instance;
    public static UploadMultipartPartRequestMarshaller Instance { get; }
    private static UploadMultipartPartRequestMarshaller();
    public sealed virtual IRequest Marshall(AmazonWebServiceRequest input);
    public sealed virtual IRequest Marshall(UploadMultipartPartRequest publicRequest);
    internal static UploadMultipartPartRequestMarshaller GetInstance();
    public static UploadMultipartPartRequestMarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.UploadMultipartPartResponseUnmarshaller : JsonResponseUnmarshaller {
    private static UploadMultipartPartResponseUnmarshaller _instance;
    public static UploadMultipartPartResponseUnmarshaller Instance { get; }
    private static UploadMultipartPartResponseUnmarshaller();
    public virtual AmazonWebServiceResponse Unmarshall(JsonUnmarshallerContext context);
    public virtual AmazonServiceException UnmarshallException(JsonUnmarshallerContext context, Exception innerException, HttpStatusCode statusCode);
    internal static UploadMultipartPartResponseUnmarshaller GetInstance();
    public static UploadMultipartPartResponseUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.VaultAccessPolicyMarshaller : object {
    public static VaultAccessPolicyMarshaller Instance;
    private static VaultAccessPolicyMarshaller();
    public sealed virtual void Marshall(VaultAccessPolicy requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.VaultAccessPolicyUnmarshaller : object {
    private static VaultAccessPolicyUnmarshaller _instance;
    public static VaultAccessPolicyUnmarshaller Instance { get; }
    private static VaultAccessPolicyUnmarshaller();
    private sealed virtual override VaultAccessPolicy Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.VaultAccessPolicy,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VaultAccessPolicy Unmarshall(JsonUnmarshallerContext context);
    public static VaultAccessPolicyUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.VaultLockPolicyMarshaller : object {
    public static VaultLockPolicyMarshaller Instance;
    private static VaultLockPolicyMarshaller();
    public sealed virtual void Marshall(VaultLockPolicy requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.VaultNotificationConfigMarshaller : object {
    public static VaultNotificationConfigMarshaller Instance;
    private static VaultNotificationConfigMarshaller();
    public sealed virtual void Marshall(VaultNotificationConfig requestObject, JsonMarshallerContext context);
}
public class Amazon.Glacier.Model.Internal.MarshallTransformations.VaultNotificationConfigUnmarshaller : object {
    private static VaultNotificationConfigUnmarshaller _instance;
    public static VaultNotificationConfigUnmarshaller Instance { get; }
    private static VaultNotificationConfigUnmarshaller();
    private sealed virtual override VaultNotificationConfig Amazon.Runtime.Internal.Transform.IUnmarshaller<Amazon.Glacier.Model.VaultNotificationConfig,Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext>.Unmarshall(XmlUnmarshallerContext context);
    public sealed virtual VaultNotificationConfig Unmarshall(JsonUnmarshallerContext context);
    public static VaultNotificationConfigUnmarshaller get_Instance();
}
public class Amazon.Glacier.Model.InvalidParameterValueException : AmazonGlacierException {
    private string _code;
    private string _type;
    public string Code { get; public set; }
    public string Type { get; public set; }
    public InvalidParameterValueException(string message);
    public InvalidParameterValueException(string message, Exception innerException);
    public InvalidParameterValueException(Exception innerException);
    public InvalidParameterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public InvalidParameterValueException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Glacier.Model.InventoryRetrievalJobDescription : object {
    private string _endDate;
    private string _format;
    private string _limit;
    private string _marker;
    private string _startDate;
    public string EndDate { get; public set; }
    public string Format { get; public set; }
    public string Limit { get; public set; }
    public string Marker { get; public set; }
    public string StartDate { get; public set; }
    public string get_EndDate();
    public void set_EndDate(string value);
    internal bool IsSetEndDate();
    public string get_Format();
    public void set_Format(string value);
    internal bool IsSetFormat();
    public string get_Limit();
    public void set_Limit(string value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_StartDate();
    public void set_StartDate(string value);
    internal bool IsSetStartDate();
}
public class Amazon.Glacier.Model.InventoryRetrievalJobInput : object {
    private string _endDate;
    private string _limit;
    private string _marker;
    private string _startDate;
    public string EndDate { get; public set; }
    public string Limit { get; public set; }
    public string Marker { get; public set; }
    public string StartDate { get; public set; }
    public string get_EndDate();
    public void set_EndDate(string value);
    internal bool IsSetEndDate();
    public string get_Limit();
    public void set_Limit(string value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_StartDate();
    public void set_StartDate(string value);
    internal bool IsSetStartDate();
}
public class Amazon.Glacier.Model.JobParameters : object {
    private string _archiveId;
    private string _description;
    private string _format;
    private InventoryRetrievalJobInput _inventoryRetrievalParameters;
    private OutputLocation _outputLocation;
    private string _retrievalByteRange;
    private SelectParameters _selectParameters;
    private string _snsTopic;
    private string _tier;
    private string _type;
    public string ArchiveId { get; public set; }
    public string Description { get; public set; }
    public string Format { get; public set; }
    public InventoryRetrievalJobInput InventoryRetrievalParameters { get; public set; }
    public OutputLocation OutputLocation { get; public set; }
    public string RetrievalByteRange { get; public set; }
    public SelectParameters SelectParameters { get; public set; }
    public string SNSTopic { get; public set; }
    public string Tier { get; public set; }
    public string Type { get; public set; }
    public JobParameters(string format, string type, string archiveId, string description);
    public string get_ArchiveId();
    public void set_ArchiveId(string value);
    internal bool IsSetArchiveId();
    public string get_Description();
    public void set_Description(string value);
    internal bool IsSetDescription();
    public string get_Format();
    public void set_Format(string value);
    internal bool IsSetFormat();
    public InventoryRetrievalJobInput get_InventoryRetrievalParameters();
    public void set_InventoryRetrievalParameters(InventoryRetrievalJobInput value);
    internal bool IsSetInventoryRetrievalParameters();
    public OutputLocation get_OutputLocation();
    public void set_OutputLocation(OutputLocation value);
    internal bool IsSetOutputLocation();
    public string get_RetrievalByteRange();
    public void set_RetrievalByteRange(string value);
    internal bool IsSetRetrievalByteRange();
    public SelectParameters get_SelectParameters();
    public void set_SelectParameters(SelectParameters value);
    internal bool IsSetSelectParameters();
    public string get_SNSTopic();
    public void set_SNSTopic(string value);
    internal bool IsSetSNSTopic();
    public string get_Tier();
    public void set_Tier(string value);
    internal bool IsSetTier();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Glacier.Model.LimitExceededException : AmazonGlacierException {
    private string _code;
    private string _type;
    public string Code { get; public set; }
    public string Type { get; public set; }
    public LimitExceededException(string message);
    public LimitExceededException(string message, Exception innerException);
    public LimitExceededException(Exception innerException);
    public LimitExceededException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public LimitExceededException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
internal class Amazon.Glacier.Model.ListJobsPaginator : object {
    private IAmazonGlacier _client;
    private ListJobsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListJobsResponse> Responses { get; }
    public IPaginatedEnumerable`1<GlacierJobDescription> JobList { get; }
    internal ListJobsPaginator(IAmazonGlacier client, ListJobsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListJobsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<GlacierJobDescription> get_JobList();
    [AsyncIteratorStateMachineAttribute("Amazon.Glacier.Model.ListJobsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glacier-Model-ListJobsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListJobsResponse> Amazon.Runtime.IPaginator<Amazon.Glacier.Model.ListJobsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glacier.Model.ListJobsRequest : AmazonGlacierRequest {
    private string _accountId;
    private Nullable`1<bool> _completed;
    private Nullable`1<int> _limit;
    private string _marker;
    private string _statuscode;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public bool Completed { get; public set; }
    public int Limit { get; public set; }
    public string Marker { get; public set; }
    public string Statuscode { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public ListJobsRequest(string vaultName);
    public ListJobsRequest(string accountId, string vaultName);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public bool get_Completed();
    public void set_Completed(bool value);
    internal bool IsSetCompleted();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_Statuscode();
    public void set_Statuscode(string value);
    internal bool IsSetStatuscode();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.ListJobsResponse : AmazonWebServiceResponse {
    private List`1<GlacierJobDescription> _jobList;
    private string _marker;
    public List`1<GlacierJobDescription> JobList { get; public set; }
    public string Marker { get; public set; }
    public List`1<GlacierJobDescription> get_JobList();
    public void set_JobList(List`1<GlacierJobDescription> value);
    internal bool IsSetJobList();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.Glacier.Model.ListMultipartUploadsRequest : AmazonGlacierRequest {
    private string _accountId;
    private Nullable`1<int> _limit;
    private string _uploadIdMarker;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public int Limit { get; public set; }
    public string UploadIdMarker { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public ListMultipartUploadsRequest(string vaultName);
    public ListMultipartUploadsRequest(string accountId, string vaultName);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_UploadIdMarker();
    public void set_UploadIdMarker(string value);
    internal bool IsSetUploadIdMarker();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.ListMultipartUploadsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<UploadListElement> _uploadsList;
    public string Marker { get; public set; }
    public List`1<UploadListElement> UploadsList { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<UploadListElement> get_UploadsList();
    public void set_UploadsList(List`1<UploadListElement> value);
    internal bool IsSetUploadsList();
}
internal class Amazon.Glacier.Model.ListPartsPaginator : object {
    private IAmazonGlacier _client;
    private ListPartsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListPartsResponse> Responses { get; }
    public IPaginatedEnumerable`1<PartListElement> Parts { get; }
    internal ListPartsPaginator(IAmazonGlacier client, ListPartsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListPartsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<PartListElement> get_Parts();
    [AsyncIteratorStateMachineAttribute("Amazon.Glacier.Model.ListPartsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glacier-Model-ListPartsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListPartsResponse> Amazon.Runtime.IPaginator<Amazon.Glacier.Model.ListPartsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glacier.Model.ListPartsRequest : AmazonGlacierRequest {
    private string _accountId;
    private Nullable`1<int> _limit;
    private string _marker;
    private string _uploadId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public int Limit { get; public set; }
    public string Marker { get; public set; }
    [AWSPropertyAttribute]
public string UploadId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public ListPartsRequest(string vaultName, string uploadId);
    public ListPartsRequest(string accountId, string vaultName, string uploadId);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.ListPartsResponse : AmazonWebServiceResponse {
    private string _archiveDescription;
    private Nullable`1<DateTime> _creationDate;
    private string _marker;
    private string _multipartUploadId;
    private List`1<PartListElement> _parts;
    private Nullable`1<long> _partSizeInBytes;
    private string _vaultARN;
    public string ArchiveDescription { get; public set; }
    public DateTime CreationDate { get; public set; }
    public string Marker { get; public set; }
    public string MultipartUploadId { get; public set; }
    public List`1<PartListElement> Parts { get; public set; }
    public long PartSizeInBytes { get; public set; }
    public string VaultARN { get; public set; }
    public string get_ArchiveDescription();
    public void set_ArchiveDescription(string value);
    internal bool IsSetArchiveDescription();
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public string get_MultipartUploadId();
    public void set_MultipartUploadId(string value);
    internal bool IsSetMultipartUploadId();
    public List`1<PartListElement> get_Parts();
    public void set_Parts(List`1<PartListElement> value);
    internal bool IsSetParts();
    public long get_PartSizeInBytes();
    public void set_PartSizeInBytes(long value);
    internal bool IsSetPartSizeInBytes();
    public string get_VaultARN();
    public void set_VaultARN(string value);
    internal bool IsSetVaultARN();
}
public class Amazon.Glacier.Model.ListProvisionedCapacityRequest : AmazonGlacierRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.Glacier.Model.ListProvisionedCapacityResponse : AmazonWebServiceResponse {
    private List`1<ProvisionedCapacityDescription> _provisionedCapacityList;
    public List`1<ProvisionedCapacityDescription> ProvisionedCapacityList { get; public set; }
    public List`1<ProvisionedCapacityDescription> get_ProvisionedCapacityList();
    public void set_ProvisionedCapacityList(List`1<ProvisionedCapacityDescription> value);
    internal bool IsSetProvisionedCapacityList();
}
public class Amazon.Glacier.Model.ListTagsForVaultRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.ListTagsForVaultResponse : AmazonWebServiceResponse {
    private Dictionary`2<string, string> _tags;
    public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> get_Tags();
    public void set_Tags(Dictionary`2<string, string> value);
    internal bool IsSetTags();
}
internal class Amazon.Glacier.Model.ListVaultsPaginator : object {
    private IAmazonGlacier _client;
    private ListVaultsRequest _request;
    private int _isPaginatorInUse;
    public IPaginatedEnumerable`1<ListVaultsResponse> Responses { get; }
    public IPaginatedEnumerable`1<DescribeVaultOutput> VaultList { get; }
    internal ListVaultsPaginator(IAmazonGlacier client, ListVaultsRequest request);
    public sealed virtual IPaginatedEnumerable`1<ListVaultsResponse> get_Responses();
    public sealed virtual IPaginatedEnumerable`1<DescribeVaultOutput> get_VaultList();
    [AsyncIteratorStateMachineAttribute("Amazon.Glacier.Model.ListVaultsPaginator/<Amazon-Runtime-IPaginator<Amazon-Glacier-Model-ListVaultsResponse>-PaginateAsync>d__8")]
private sealed virtual override IAsyncEnumerable`1<ListVaultsResponse> Amazon.Runtime.IPaginator<Amazon.Glacier.Model.ListVaultsResponse>.PaginateAsync(CancellationToken cancellationToken);
}
public class Amazon.Glacier.Model.ListVaultsRequest : AmazonGlacierRequest {
    private string _accountId;
    private Nullable`1<int> _limit;
    private string _marker;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public int Limit { get; public set; }
    public string Marker { get; public set; }
    public ListVaultsRequest(string accountId);
    public ListVaultsRequest(string accountId, string marker, int limit);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public int get_Limit();
    public void set_Limit(int value);
    internal bool IsSetLimit();
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
}
public class Amazon.Glacier.Model.ListVaultsResponse : AmazonWebServiceResponse {
    private string _marker;
    private List`1<DescribeVaultOutput> _vaultList;
    public string Marker { get; public set; }
    public List`1<DescribeVaultOutput> VaultList { get; public set; }
    public string get_Marker();
    public void set_Marker(string value);
    internal bool IsSetMarker();
    public List`1<DescribeVaultOutput> get_VaultList();
    public void set_VaultList(List`1<DescribeVaultOutput> value);
    internal bool IsSetVaultList();
}
public class Amazon.Glacier.Model.MissingParameterValueException : AmazonGlacierException {
    private string _code;
    private string _type;
    public string Code { get; public set; }
    public string Type { get; public set; }
    public MissingParameterValueException(string message);
    public MissingParameterValueException(string message, Exception innerException);
    public MissingParameterValueException(Exception innerException);
    public MissingParameterValueException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public MissingParameterValueException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Glacier.Model.OutputLocation : object {
    private S3Location _s3;
    public S3Location S3 { get; public set; }
    public S3Location get_S3();
    public void set_S3(S3Location value);
    internal bool IsSetS3();
}
public class Amazon.Glacier.Model.OutputSerialization : object {
    private CSVOutput _csv;
    public CSVOutput Csv { get; public set; }
    public CSVOutput get_Csv();
    public void set_Csv(CSVOutput value);
    internal bool IsSetCsv();
}
public class Amazon.Glacier.Model.PartListElement : object {
    private string _rangeInBytes;
    private string _sha256TreeHash;
    public string RangeInBytes { get; public set; }
    public string SHA256TreeHash { get; public set; }
    public string get_RangeInBytes();
    public void set_RangeInBytes(string value);
    internal bool IsSetRangeInBytes();
    public string get_SHA256TreeHash();
    public void set_SHA256TreeHash(string value);
    internal bool IsSetSHA256TreeHash();
}
public class Amazon.Glacier.Model.PolicyEnforcedException : AmazonGlacierException {
    private string _code;
    private string _type;
    public string Code { get; public set; }
    public string Type { get; public set; }
    public PolicyEnforcedException(string message);
    public PolicyEnforcedException(string message, Exception innerException);
    public PolicyEnforcedException(Exception innerException);
    public PolicyEnforcedException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public PolicyEnforcedException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Glacier.Model.ProvisionedCapacityDescription : object {
    private string _capacityId;
    private string _expirationDate;
    private string _startDate;
    public string CapacityId { get; public set; }
    public string ExpirationDate { get; public set; }
    public string StartDate { get; public set; }
    public string get_CapacityId();
    public void set_CapacityId(string value);
    internal bool IsSetCapacityId();
    public string get_ExpirationDate();
    public void set_ExpirationDate(string value);
    internal bool IsSetExpirationDate();
    public string get_StartDate();
    public void set_StartDate(string value);
    internal bool IsSetStartDate();
}
public class Amazon.Glacier.Model.PurchaseProvisionedCapacityRequest : AmazonGlacierRequest {
    private string _accountId;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
}
public class Amazon.Glacier.Model.PurchaseProvisionedCapacityResponse : AmazonWebServiceResponse {
    private string _capacityId;
    public string CapacityId { get; public set; }
    public string get_CapacityId();
    public void set_CapacityId(string value);
    internal bool IsSetCapacityId();
}
public class Amazon.Glacier.Model.RemoveTagsFromVaultRequest : AmazonGlacierRequest {
    private string _accountId;
    private List`1<string> _tagKeys;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public List`1<string> TagKeys { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public List`1<string> get_TagKeys();
    public void set_TagKeys(List`1<string> value);
    internal bool IsSetTagKeys();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.RemoveTagsFromVaultResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.RequestTimeoutException : AmazonGlacierException {
    private string _code;
    private string _type;
    public string Code { get; public set; }
    public string Type { get; public set; }
    public RequestTimeoutException(string message);
    public RequestTimeoutException(string message, Exception innerException);
    public RequestTimeoutException(Exception innerException);
    public RequestTimeoutException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public RequestTimeoutException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Glacier.Model.ResourceNotFoundException : AmazonGlacierException {
    private string _code;
    private string _type;
    public string Code { get; public set; }
    public string Type { get; public set; }
    public ResourceNotFoundException(string message);
    public ResourceNotFoundException(string message, Exception innerException);
    public ResourceNotFoundException(Exception innerException);
    public ResourceNotFoundException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ResourceNotFoundException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Glacier.Model.S3Location : object {
    private List`1<Grant> _accessControlList;
    private string _bucketName;
    private CannedACL _cannedACL;
    private Encryption _encryption;
    private string _prefix;
    private StorageClass _storageClass;
    private Dictionary`2<string, string> _tagging;
    private Dictionary`2<string, string> _userMetadata;
    public List`1<Grant> AccessControlList { get; public set; }
    public string BucketName { get; public set; }
    public CannedACL CannedACL { get; public set; }
    public Encryption Encryption { get; public set; }
    public string Prefix { get; public set; }
    public StorageClass StorageClass { get; public set; }
    public Dictionary`2<string, string> Tagging { get; public set; }
    public Dictionary`2<string, string> UserMetadata { get; public set; }
    public List`1<Grant> get_AccessControlList();
    public void set_AccessControlList(List`1<Grant> value);
    internal bool IsSetAccessControlList();
    public string get_BucketName();
    public void set_BucketName(string value);
    internal bool IsSetBucketName();
    public CannedACL get_CannedACL();
    public void set_CannedACL(CannedACL value);
    internal bool IsSetCannedACL();
    public Encryption get_Encryption();
    public void set_Encryption(Encryption value);
    internal bool IsSetEncryption();
    public string get_Prefix();
    public void set_Prefix(string value);
    internal bool IsSetPrefix();
    public StorageClass get_StorageClass();
    public void set_StorageClass(StorageClass value);
    internal bool IsSetStorageClass();
    public Dictionary`2<string, string> get_Tagging();
    public void set_Tagging(Dictionary`2<string, string> value);
    internal bool IsSetTagging();
    public Dictionary`2<string, string> get_UserMetadata();
    public void set_UserMetadata(Dictionary`2<string, string> value);
    internal bool IsSetUserMetadata();
}
public class Amazon.Glacier.Model.SelectParameters : object {
    private string _expression;
    private ExpressionType _expressionType;
    private InputSerialization _inputSerialization;
    private OutputSerialization _outputSerialization;
    public string Expression { get; public set; }
    public ExpressionType ExpressionType { get; public set; }
    public InputSerialization InputSerialization { get; public set; }
    public OutputSerialization OutputSerialization { get; public set; }
    public string get_Expression();
    public void set_Expression(string value);
    internal bool IsSetExpression();
    public ExpressionType get_ExpressionType();
    public void set_ExpressionType(ExpressionType value);
    internal bool IsSetExpressionType();
    public InputSerialization get_InputSerialization();
    public void set_InputSerialization(InputSerialization value);
    internal bool IsSetInputSerialization();
    public OutputSerialization get_OutputSerialization();
    public void set_OutputSerialization(OutputSerialization value);
    internal bool IsSetOutputSerialization();
}
public class Amazon.Glacier.Model.ServiceUnavailableException : AmazonGlacierException {
    private string _code;
    private string _type;
    public string Code { get; public set; }
    public string Type { get; public set; }
    public ServiceUnavailableException(string message);
    public ServiceUnavailableException(string message, Exception innerException);
    public ServiceUnavailableException(Exception innerException);
    public ServiceUnavailableException(string message, Exception innerException, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public ServiceUnavailableException(string message, ErrorType errorType, string errorCode, string requestId, HttpStatusCode statusCode);
    public string get_Code();
    public void set_Code(string value);
    internal bool IsSetCode();
    public string get_Type();
    public void set_Type(string value);
    internal bool IsSetType();
}
public class Amazon.Glacier.Model.SetDataRetrievalPolicyRequest : AmazonGlacierRequest {
    private string _accountId;
    private DataRetrievalPolicy _policy;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public DataRetrievalPolicy Policy { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public DataRetrievalPolicy get_Policy();
    public void set_Policy(DataRetrievalPolicy value);
    internal bool IsSetPolicy();
}
public class Amazon.Glacier.Model.SetDataRetrievalPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.SetVaultAccessPolicyRequest : AmazonGlacierRequest {
    private string _accountId;
    private VaultAccessPolicy _policy;
    private string _vaultName;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public VaultAccessPolicy Policy { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public VaultAccessPolicy get_Policy();
    public void set_Policy(VaultAccessPolicy value);
    internal bool IsSetPolicy();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.SetVaultAccessPolicyResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.SetVaultNotificationsRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _vaultName;
    private VaultNotificationConfig _vaultNotificationConfig;
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public VaultNotificationConfig VaultNotificationConfig { get; public set; }
    public SetVaultNotificationsRequest(string vaultName, VaultNotificationConfig vaultNotificationConfig);
    public SetVaultNotificationsRequest(string accountId, string vaultName, VaultNotificationConfig vaultNotificationConfig);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
    public VaultNotificationConfig get_VaultNotificationConfig();
    public void set_VaultNotificationConfig(VaultNotificationConfig value);
    internal bool IsSetVaultNotificationConfig();
}
public class Amazon.Glacier.Model.SetVaultNotificationsResponse : AmazonWebServiceResponse {
}
public class Amazon.Glacier.Model.UploadArchiveRequest : AmazonGlacierRequest {
    private string _accountId;
    private string _archiveDescription;
    private Stream _body;
    private string _checksum;
    private string _vaultName;
    public EventHandler`1<StreamTransferProgressArgs> StreamTransferProgress { get; public set; }
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public string ArchiveDescription { get; public set; }
    public Stream Body { get; public set; }
    public string Checksum { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public UploadArchiveRequest(string vaultName, string archiveDescription, string checksum, Stream body);
    public UploadArchiveRequest(string accountId, string vaultName, string archiveDescription, string checksum, Stream body);
    public EventHandler`1<StreamTransferProgressArgs> get_StreamTransferProgress();
    public void set_StreamTransferProgress(EventHandler`1<StreamTransferProgressArgs> value);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public string get_ArchiveDescription();
    public void set_ArchiveDescription(string value);
    internal bool IsSetArchiveDescription();
    public Stream get_Body();
    public void set_Body(Stream value);
    internal bool IsSetBody();
    public string get_Checksum();
    public void set_Checksum(string value);
    internal bool IsSetChecksum();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.UploadArchiveResponse : AmazonWebServiceResponse {
    private string _archiveId;
    private string _checksum;
    private string _location;
    public string ArchiveId { get; public set; }
    public string Checksum { get; public set; }
    public string Location { get; public set; }
    public string get_ArchiveId();
    public void set_ArchiveId(string value);
    internal bool IsSetArchiveId();
    public string get_Checksum();
    public void set_Checksum(string value);
    internal bool IsSetChecksum();
    public string get_Location();
    public void set_Location(string value);
    internal bool IsSetLocation();
}
public class Amazon.Glacier.Model.UploadListElement : object {
    private string _archiveDescription;
    private Nullable`1<DateTime> _creationDate;
    private string _multipartUploadId;
    private Nullable`1<long> _partSizeInBytes;
    private string _vaultARN;
    public string ArchiveDescription { get; public set; }
    public DateTime CreationDate { get; public set; }
    public string MultipartUploadId { get; public set; }
    public long PartSizeInBytes { get; public set; }
    public string VaultARN { get; public set; }
    public string get_ArchiveDescription();
    public void set_ArchiveDescription(string value);
    internal bool IsSetArchiveDescription();
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    internal bool IsSetCreationDate();
    public string get_MultipartUploadId();
    public void set_MultipartUploadId(string value);
    internal bool IsSetMultipartUploadId();
    public long get_PartSizeInBytes();
    public void set_PartSizeInBytes(long value);
    internal bool IsSetPartSizeInBytes();
    public string get_VaultARN();
    public void set_VaultARN(string value);
    internal bool IsSetVaultARN();
}
public class Amazon.Glacier.Model.UploadMultipartPartRequest : AmazonGlacierRequest {
    private string _accountId;
    private Stream _body;
    private string _checksum;
    private string _range;
    private string _uploadId;
    private string _vaultName;
    public EventHandler`1<StreamTransferProgressArgs> StreamTransferProgress { get; public set; }
    [AWSPropertyAttribute]
public string AccountId { get; public set; }
    public Stream Body { get; public set; }
    public string Checksum { get; public set; }
    public string Range { get; public set; }
    [AWSPropertyAttribute]
public string UploadId { get; public set; }
    [AWSPropertyAttribute]
public string VaultName { get; public set; }
    public UploadMultipartPartRequest(string vaultName, string uploadId, string checksum, string range, Stream body);
    public UploadMultipartPartRequest(string accountId, string vaultName, string uploadId, string checksum, string range, Stream body);
    public EventHandler`1<StreamTransferProgressArgs> get_StreamTransferProgress();
    public void set_StreamTransferProgress(EventHandler`1<StreamTransferProgressArgs> value);
    public string get_AccountId();
    public void set_AccountId(string value);
    internal bool IsSetAccountId();
    public Stream get_Body();
    public void set_Body(Stream value);
    internal bool IsSetBody();
    public string get_Checksum();
    public void set_Checksum(string value);
    internal bool IsSetChecksum();
    public string get_Range();
    public void set_Range(string value);
    internal bool IsSetRange();
    public string get_UploadId();
    public void set_UploadId(string value);
    internal bool IsSetUploadId();
    public string get_VaultName();
    public void set_VaultName(string value);
    internal bool IsSetVaultName();
}
public class Amazon.Glacier.Model.UploadMultipartPartResponse : AmazonWebServiceResponse {
    private string _checksum;
    public string Checksum { get; public set; }
    public string get_Checksum();
    public void set_Checksum(string value);
    internal bool IsSetChecksum();
}
public class Amazon.Glacier.Model.VaultAccessPolicy : object {
    private string _policy;
    public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.Glacier.Model.VaultLockPolicy : object {
    private string _policy;
    public string Policy { get; public set; }
    public string get_Policy();
    public void set_Policy(string value);
    internal bool IsSetPolicy();
}
public class Amazon.Glacier.Model.VaultNotificationConfig : object {
    private List`1<string> _events;
    private string _snsTopic;
    public List`1<string> Events { get; public set; }
    public string SNSTopic { get; public set; }
    public VaultNotificationConfig(string snsTopic, List`1<string> events);
    public List`1<string> get_Events();
    public void set_Events(List`1<string> value);
    internal bool IsSetEvents();
    public string get_SNSTopic();
    public void set_SNSTopic(string value);
    internal bool IsSetSNSTopic();
}
public class Amazon.Glacier.Permission : ConstantClass {
    public static Permission FULL_CONTROL;
    public static Permission READ;
    public static Permission READ_ACP;
    public static Permission WRITE;
    public static Permission WRITE_ACP;
    public Permission(string value);
    private static Permission();
    public static Permission FindValue(string value);
    public static Permission op_Implicit(string value);
}
public class Amazon.Glacier.QuoteFields : ConstantClass {
    public static QuoteFields ALWAYS;
    public static QuoteFields ASNEEDED;
    public QuoteFields(string value);
    private static QuoteFields();
    public static QuoteFields FindValue(string value);
    public static QuoteFields op_Implicit(string value);
}
public class Amazon.Glacier.StatusCode : ConstantClass {
    public static StatusCode Failed;
    public static StatusCode InProgress;
    public static StatusCode Succeeded;
    public StatusCode(string value);
    private static StatusCode();
    public static StatusCode FindValue(string value);
    public static StatusCode op_Implicit(string value);
}
public class Amazon.Glacier.StorageClass : ConstantClass {
    public static StorageClass REDUCED_REDUNDANCY;
    public static StorageClass STANDARD;
    public static StorageClass STANDARD_IA;
    public StorageClass(string value);
    private static StorageClass();
    public static StorageClass FindValue(string value);
    public static StorageClass op_Implicit(string value);
}
[RequiresUnreferencedCodeAttribute("ArchiveTransferManager has not been updated to support Native AOT compilations.")]
public class Amazon.Glacier.Transfer.ArchiveTransferManager : object {
    internal static long MULTIPART_UPLOAD_SIZE_THRESHOLD;
    private bool shouldDispose;
    private bool disposed;
    private IAmazonGlacier glacierClient;
    internal AmazonGlacierClient GlacierClient { get; }
    public ArchiveTransferManager(RegionEndpoint region);
    public ArchiveTransferManager(IAmazonGlacier glacier);
    public ArchiveTransferManager(AWSCredentials credentials, RegionEndpoint region);
    public ArchiveTransferManager(string awsAccessKeyId, string awsSecretAccessKey, RegionEndpoint region);
    internal AmazonGlacierClient get_GlacierClient();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    protected virtual override void Finalize();
    public Task CreateVaultAsync(string vaultName);
    public Task DeleteVaultAsync(string vaultName);
    public Task DeleteArchiveAsync(string vaultName, string archiveId);
    public Task`1<UploadResult> UploadAsync(string vaultName, string archiveDescription, string filepath);
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.ArchiveTransferManager/<UploadAsync>d__18")]
public Task`1<UploadResult> UploadAsync(string vaultName, string archiveDescription, string filepath, UploadOptions options);
    public Task DownloadAsync(string vaultName, string archiveId, string filePath);
    public Task DownloadAsync(string vaultName, string archiveId, string filePath, DownloadOptions options);
    public Task DownloadJobAsync(string vaultName, string jobId, string filePath);
    public Task DownloadJobAsync(string vaultName, string jobId, string filePath, DownloadOptions options);
    public Task`1<string> InitiateArchiveRetrievalJobAsync(string vaultName, string archiveId);
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.ArchiveTransferManager/<InitiateArchiveRetrievalJobAsync>d__24")]
public Task`1<string> InitiateArchiveRetrievalJobAsync(string vaultName, string archiveId, InitiateArchiveRetrievalOptions options);
}
public abstract class Amazon.Glacier.Transfer.CommonOptions : object {
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    public string AccountId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(string value);
}
public class Amazon.Glacier.Transfer.DownloadOptions : CommonOptions {
    private static double DEFAULT_POLLING_INTERVAL;
    [CompilerGeneratedAttribute]
private double <PollingInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHandler`1<StreamTransferProgressArgs> <StreamTransferProgress>k__BackingField;
    public double PollingInterval { get; public set; }
    public EventHandler`1<StreamTransferProgressArgs> StreamTransferProgress { get; public set; }
    [CompilerGeneratedAttribute]
public double get_PollingInterval();
    [CompilerGeneratedAttribute]
public void set_PollingInterval(double value);
    [CompilerGeneratedAttribute]
public EventHandler`1<StreamTransferProgressArgs> get_StreamTransferProgress();
    [CompilerGeneratedAttribute]
public void set_StreamTransferProgress(EventHandler`1<StreamTransferProgressArgs> value);
}
public class Amazon.Glacier.Transfer.InitiateArchiveRetrievalOptions : CommonOptions {
    [CompilerGeneratedAttribute]
private string <SNSTopic>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tier>k__BackingField;
    public string SNSTopic { get; public set; }
    public string Tier { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SNSTopic();
    [CompilerGeneratedAttribute]
public void set_SNSTopic(string value);
    [CompilerGeneratedAttribute]
public string get_Tier();
    [CompilerGeneratedAttribute]
public void set_Tier(string value);
}
internal abstract class Amazon.Glacier.Transfer.Internal.BaseUploadCommand : object {
    protected ArchiveTransferManager manager;
    protected UploadOptions options;
    protected string vaultName;
    protected string archiveDescription;
    protected string filePath;
    [CompilerGeneratedAttribute]
private UploadResult <UploadResult>k__BackingField;
    public UploadResult UploadResult { get; protected set; }
    internal BaseUploadCommand(ArchiveTransferManager manager, string vaultName, string archiveDescription, string filePath, UploadOptions options);
    [CompilerGeneratedAttribute]
public UploadResult get_UploadResult();
    [CompilerGeneratedAttribute]
protected void set_UploadResult(UploadResult value);
    internal abstract virtual Task ExecuteAsync();
}
[RequiresUnreferencedCodeAttribute("ArchiveTransferManager has not been updated to support Native AOT compilations.")]
internal class Amazon.Glacier.Transfer.Internal.DownloadFileCommand : object {
    internal static int MAX_OPERATION_RETRY;
    private static string SQS_POLICY;
    private ArchiveTransferManager manager;
    private string vaultName;
    private string archiveId;
    private string filePath;
    private DownloadOptions options;
    private IAmazonSimpleNotificationService snsClient;
    private IAmazonSQS sqsClient;
    private string topicArn;
    private string queueUrl;
    private string queueArn;
    private bool disposed;
    internal DownloadFileCommand(ArchiveTransferManager manager, string vaultName, string archiveId, string filePath, DownloadOptions options);
    private string getJobIdFromMessage(Message message);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.Internal.DownloadFileCommand/<ExecuteAsync>d__17")]
internal Task ExecuteAsync();
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.Internal.DownloadFileCommand/<processQueueAsync>d__18")]
private Task processQueueAsync(string jobId);
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.Internal.DownloadFileCommand/<processMessageAsync>d__19")]
private Task processMessageAsync(Message message, string jobId);
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.Internal.DownloadFileCommand/<readNextMessageAsync>d__20")]
private Task`1<Message> readNextMessageAsync();
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.Internal.DownloadFileCommand/<initiateJobAsync>d__21")]
private Task`1<string> initiateJobAsync();
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.Internal.DownloadFileCommand/<setupTopicAndQueueAsync>d__22")]
internal Task setupTopicAndQueueAsync();
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.Internal.DownloadFileCommand/<tearDownTopicAndQueueAsync>d__23")]
internal Task tearDownTopicAndQueueAsync();
}
[RequiresUnreferencedCodeAttribute("ArchiveTransferManager has not been updated to support Native AOT compilations.")]
internal class Amazon.Glacier.Transfer.Internal.DownloadJobCommand : object {
    private static int PART_STREAM_HASH_SIZE;
    private ArchiveTransferManager manager;
    private string vaultName;
    private string jobId;
    private string filePath;
    private DownloadOptions options;
    internal DownloadJobCommand(ArchiveTransferManager manager, string vaultName, string jobId, string filePath, DownloadOptions options);
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.Internal.DownloadJobCommand/<ExecuteAsync>d__7")]
internal Task ExecuteAsync();
}
internal class Amazon.Glacier.Transfer.Internal.MultipartUploadCommand : BaseUploadCommand {
    private static long MAXIMUM_PART_SIZE;
    private static long MINIMUM_PART_SIZE;
    private object currentUploadProgressArgsLock;
    private StreamTransferProgressArgs currentUploadProgressArgs;
    internal MultipartUploadCommand(ArchiveTransferManager manager, string vaultName, string archiveDescription, string filePath, UploadOptions options);
    private void ProgressCallback(object sender, StreamTransferProgressArgs args);
    internal static long CalculatePartSize(long fileSize);
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.Internal.MultipartUploadCommand/<ExecuteAsync>d__7")]
internal virtual Task ExecuteAsync();
}
internal class Amazon.Glacier.Transfer.Internal.SinglepartUploadCommand : BaseUploadCommand {
    internal SinglepartUploadCommand(ArchiveTransferManager mananger, string vaultName, string archiveDescription, string filePath, UploadOptions options);
    private void ProgressCallback(object sender, StreamTransferProgressArgs args);
    [AsyncStateMachineAttribute("Amazon.Glacier.Transfer.Internal.SinglepartUploadCommand/<ExecuteAsync>d__2")]
internal virtual Task ExecuteAsync();
}
public class Amazon.Glacier.Transfer.UploadOptions : CommonOptions {
    [CompilerGeneratedAttribute]
private EventHandler`1<StreamTransferProgressArgs> <StreamTransferProgress>k__BackingField;
    public EventHandler`1<StreamTransferProgressArgs> StreamTransferProgress { get; public set; }
    [CompilerGeneratedAttribute]
public EventHandler`1<StreamTransferProgressArgs> get_StreamTransferProgress();
    [CompilerGeneratedAttribute]
public void set_StreamTransferProgress(EventHandler`1<StreamTransferProgressArgs> value);
}
public class Amazon.Glacier.Transfer.UploadResult : object {
    private string archiveId;
    private string checkSum;
    public string ArchiveId { get; }
    public string Checksum { get; }
    internal UploadResult(string archiveId, string checkSum);
    public string get_ArchiveId();
    public string get_Checksum();
}
public static class Amazon.Glacier.TreeHashGenerator : object {
    private static long MB;
    public static string CalculateTreeHash(Stream stream);
    public static string CalculateTreeHash(IEnumerable`1<string> partsTreeHash);
    private static List`1<Byte[]> computePartHashs(Stream stream);
    private static Byte[] computeTreehHash(List`1<Byte[]> partHashsums);
    private static Byte[] stringToByteArrayFastest(string hex);
    private static int getHexVal(char hex);
}
public class Amazon.Glacier.Type : ConstantClass {
    public static Type AmazonCustomerByEmail;
    public static Type CanonicalUser;
    public static Type Group;
    public Type(string value);
    private static Type();
    public static Type FindValue(string value);
    public static Type op_Implicit(string value);
}
