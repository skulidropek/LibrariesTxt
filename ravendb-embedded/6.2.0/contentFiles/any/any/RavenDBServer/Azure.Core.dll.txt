[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.AsyncPageable`1 : object {
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    protected CancellationToken CancellationToken { get; }
    protected AsyncPageable`1(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
protected virtual CancellationToken get_CancellationToken();
    public abstract virtual IAsyncEnumerable`1<Page`1<T>> AsPages(string continuationToken, Nullable`1<int> pageSizeHint);
    [AsyncIteratorStateMachineAttribute("Azure.AsyncPageable`1/<GetAsyncEnumerator>d__6")]
public virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
    public static AsyncPageable`1<T> FromPages(IEnumerable`1<Page`1<T>> pages);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Azure.AzureCoreExtensions : object {
    [ExtensionAttribute]
public static T ToObject(BinaryData data, ObjectSerializer serializer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.AzureCoreExtensions/<ToObjectAsync>d__1`1")]
[ExtensionAttribute]
public static ValueTask`1<T> ToObjectAsync(BinaryData data, ObjectSerializer serializer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static object ToObjectFromJson(BinaryData data);
    [ExtensionAttribute]
public static object ToDynamicFromJson(BinaryData utf8Json);
    [ExtensionAttribute]
public static object ToDynamicFromJson(BinaryData utf8Json, JsonPropertyNames propertyNameFormat, string dateTimeFormat);
    [ExtensionAttribute]
internal static object ToDynamicFromJson(BinaryData utf8Json, DynamicDataOptions options);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
private static object GetObject(JsonElement& element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.AzureKeyCredential : object {
    private string _key;
    [EditorBrowsableAttribute("1")]
public string Key { get; private set; }
    public AzureKeyCredential(string key);
    public string get_Key();
    private void set_Key(string value);
    public void Update(string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.AzureNamedKeyCredential : object {
    private Tuple`2<string, string> _namedKey;
    public string Name { get; }
    public AzureNamedKeyCredential(string name, string key);
    public string get_Name();
    public void Update(string name, string key);
    [EditorBrowsableAttribute("1")]
public void Deconstruct(String& name, String& key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.AzureSasCredential : object {
    private string _signature;
    [EditorBrowsableAttribute("1")]
public string Signature { get; private set; }
    public AzureSasCredential(string signature);
    public string get_Signature();
    private void set_Signature(string value);
    public void Update(string signature);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.AccessToken : ValueType {
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ExpiresOn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <RefreshOn>k__BackingField;
    public string Token { get; }
    public DateTimeOffset ExpiresOn { get; }
    public Nullable`1<DateTimeOffset> RefreshOn { get; }
    public AccessToken(string accessToken, DateTimeOffset expiresOn);
    public AccessToken(string accessToken, DateTimeOffset expiresOn, Nullable`1<DateTimeOffset> refreshOn);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Token();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public DateTimeOffset get_ExpiresOn();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_RefreshOn();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal static class Azure.Core.AppContextSwitchHelper : object {
    [NullableContextAttribute("1")]
public static bool GetConfigValue(string appContexSwitchName, string environmentVariableName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.Argument : object {
    public static void AssertNotNull(T value, string name);
    [NullableContextAttribute("0")]
public static void AssertNotNull(Nullable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(IEnumerable`1<T> value, string name);
    public static void AssertNotNullOrEmpty(string value, string name);
    public static void AssertNotNullOrWhiteSpace(string value, string name);
    [NullableContextAttribute("0")]
public static void AssertNotDefault(T& value, string name);
    public static void AssertInRange(T value, T minimum, T maximum, string name);
    public static void AssertEnumDefined(Type enumType, object value, string name);
    public static T CheckNotNull(T value, string name);
    public static string CheckNotNullOrEmpty(string value, string name);
    public static void AssertNull(T value, string name, string message);
}
internal class Azure.Core.ArrayBackedPropertyBag`2 : ValueType {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ValueTuple`2<TKey, TValue> _first;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ValueTuple`2<TKey, TValue> _second;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ValueTuple`2[] _rest;
    private int _count;
    [NullableAttribute("1")]
private object _lock;
    public int Count { get; }
    public bool IsEmpty { get; }
    public int get_Count();
    public bool get_IsEmpty();
    public void GetAt(int index, TKey& key, TValue& value);
    public bool TryGetValue(TKey key, TValue& value);
    public bool TryAdd(TKey key, TValue value, TValue& existingValue);
    public void Set(TKey key, TValue value);
    public bool TryRemove(TKey key);
    private bool IsFirst(TKey key);
    private bool IsSecond(TKey key);
    private void AddInternal(TKey key, TValue value);
    private void SetAt(int index, ValueTuple`2<TKey, TValue> value);
    [NullableContextAttribute("1")]
private TValue GetAt(int index);
    private int GetIndex(TKey key);
    public void Dispose();
    private ValueTuple`2[] GetRest();
    [ConditionalAttribute("DEBUG")]
private void CheckDisposed();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AsyncLockWithValue`1 : object {
    private object _syncObj;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Queue`1<TaskCompletionSource`1<LockOrValue<T>>> _waiters;
    private bool _isLocked;
    private bool _hasValue;
    private long _index;
    [NullableAttribute("2")]
private T _value;
    public bool HasValue { get; }
    public AsyncLockWithValue`1(T value);
    public bool get_HasValue();
    [NullableContextAttribute("2")]
public bool TryGetValue(T& value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.AsyncLockWithValue`1/<GetLockOrValueAsync>d__11")]
public ValueTask`1<LockOrValue<T>> GetLockOrValueAsync(bool async, CancellationToken cancellationToken);
    private void SetValue(T value, Int64& lockIndex);
    private void Reset(Int64& lockIndex);
    private void UnlockOrGetNextWaiter(Int64& lockIndex, TaskCompletionSource`1& nextWaiter);
}
internal static class Azure.Core.AuthorizationChallengeParser : object {
    [NullableContextAttribute("1")]
public static string GetChallengeParameterFromResponse(Response response, string challengeScheme, string challengeParameter);
    internal static bool TryGetNextChallenge(ReadOnlySpan`1& headerValue, ReadOnlySpan`1& challengeKey);
    internal static bool TryGetNextParameter(ReadOnlySpan`1& headerValue, ReadOnlySpan`1& paramKey, ReadOnlySpan`1& paramValue, char separator);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AzureKeyCredentialPolicy : HttpPipelineSynchronousPolicy {
    private string _name;
    private AzureKeyCredential _credential;
    [NullableAttribute("2")]
private string _prefix;
    public AzureKeyCredentialPolicy(AzureKeyCredential credential, string name, string prefix);
    public virtual void OnSendingRequest(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.AzureLocation : ValueType {
    private static char Space;
    [CompilerGeneratedAttribute]
private static Dictionary`2<string, AzureLocation> <PublicCloudLocations>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <EastAsia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SoutheastAsia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <CentralUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <EastUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <EastUS2>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <WestUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <WestUS2>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <WestUS3>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <NorthCentralUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SouthCentralUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <NorthEurope>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <WestEurope>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <JapanWest>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <JapanEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <BrazilSouth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <AustraliaEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <AustraliaSoutheast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SouthIndia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <CentralIndia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <WestIndia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <CanadaCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <CanadaEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <UKSouth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <UKWest>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <WestCentralUS>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <KoreaCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <KoreaSouth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <FranceCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <FranceSouth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <AustraliaCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <AustraliaCentral2>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <UAECentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <UAENorth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SouthAfricaNorth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SouthAfricaWest>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SwedenCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SwedenSouth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SwitzerlandNorth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <SwitzerlandWest>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <GermanyNorth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <GermanyWestCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <GermanyCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <GermanyNorthEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <NorwayWest>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <NorwayEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <BrazilSoutheast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <ChinaNorth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <ChinaEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <ChinaNorth2>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <ChinaNorth3>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <ChinaEast2>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <ChinaEast3>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <QatarCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USDoDCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USDoDEast>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USGovArizona>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USGovTexas>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USGovVirginia>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <USGovIowa>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <IsraelCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <ItalyNorth>k__BackingField;
    [CompilerGeneratedAttribute]
private static AzureLocation <PolandCentral>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    private static Dictionary`2<string, AzureLocation> PublicCloudLocations { get; }
    public static AzureLocation EastAsia { get; }
    public static AzureLocation SoutheastAsia { get; }
    public static AzureLocation CentralUS { get; }
    public static AzureLocation EastUS { get; }
    public static AzureLocation EastUS2 { get; }
    public static AzureLocation WestUS { get; }
    public static AzureLocation WestUS2 { get; }
    public static AzureLocation WestUS3 { get; }
    public static AzureLocation NorthCentralUS { get; }
    public static AzureLocation SouthCentralUS { get; }
    public static AzureLocation NorthEurope { get; }
    public static AzureLocation WestEurope { get; }
    public static AzureLocation JapanWest { get; }
    public static AzureLocation JapanEast { get; }
    public static AzureLocation BrazilSouth { get; }
    public static AzureLocation AustraliaEast { get; }
    public static AzureLocation AustraliaSoutheast { get; }
    public static AzureLocation SouthIndia { get; }
    public static AzureLocation CentralIndia { get; }
    public static AzureLocation WestIndia { get; }
    public static AzureLocation CanadaCentral { get; }
    public static AzureLocation CanadaEast { get; }
    public static AzureLocation UKSouth { get; }
    public static AzureLocation UKWest { get; }
    public static AzureLocation WestCentralUS { get; }
    public static AzureLocation KoreaCentral { get; }
    public static AzureLocation KoreaSouth { get; }
    public static AzureLocation FranceCentral { get; }
    public static AzureLocation FranceSouth { get; }
    public static AzureLocation AustraliaCentral { get; }
    public static AzureLocation AustraliaCentral2 { get; }
    public static AzureLocation UAECentral { get; }
    public static AzureLocation UAENorth { get; }
    public static AzureLocation SouthAfricaNorth { get; }
    public static AzureLocation SouthAfricaWest { get; }
    public static AzureLocation SwedenCentral { get; }
    public static AzureLocation SwedenSouth { get; }
    public static AzureLocation SwitzerlandNorth { get; }
    public static AzureLocation SwitzerlandWest { get; }
    public static AzureLocation GermanyNorth { get; }
    public static AzureLocation GermanyWestCentral { get; }
    public static AzureLocation GermanyCentral { get; }
    public static AzureLocation GermanyNorthEast { get; }
    public static AzureLocation NorwayWest { get; }
    public static AzureLocation NorwayEast { get; }
    public static AzureLocation BrazilSoutheast { get; }
    public static AzureLocation ChinaNorth { get; }
    public static AzureLocation ChinaEast { get; }
    public static AzureLocation ChinaNorth2 { get; }
    public static AzureLocation ChinaNorth3 { get; }
    public static AzureLocation ChinaEast2 { get; }
    public static AzureLocation ChinaEast3 { get; }
    public static AzureLocation QatarCentral { get; }
    public static AzureLocation USDoDCentral { get; }
    public static AzureLocation USDoDEast { get; }
    public static AzureLocation USGovArizona { get; }
    public static AzureLocation USGovTexas { get; }
    public static AzureLocation USGovVirginia { get; }
    public static AzureLocation USGovIowa { get; }
    public static AzureLocation IsraelCentral { get; }
    public static AzureLocation ItalyNorth { get; }
    public static AzureLocation PolandCentral { get; }
    public string Name { get; }
    [NullableAttribute("2")]
public string DisplayName { get; }
    public AzureLocation(string location);
    public AzureLocation(string name, string displayName);
    private static AzureLocation();
    [CompilerGeneratedAttribute]
private static Dictionary`2<string, AzureLocation> get_PublicCloudLocations();
    [CompilerGeneratedAttribute]
public static AzureLocation get_EastAsia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SoutheastAsia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_CentralUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_EastUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_EastUS2();
    [CompilerGeneratedAttribute]
public static AzureLocation get_WestUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_WestUS2();
    [CompilerGeneratedAttribute]
public static AzureLocation get_WestUS3();
    [CompilerGeneratedAttribute]
public static AzureLocation get_NorthCentralUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SouthCentralUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_NorthEurope();
    [CompilerGeneratedAttribute]
public static AzureLocation get_WestEurope();
    [CompilerGeneratedAttribute]
public static AzureLocation get_JapanWest();
    [CompilerGeneratedAttribute]
public static AzureLocation get_JapanEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_BrazilSouth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_AustraliaEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_AustraliaSoutheast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SouthIndia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_CentralIndia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_WestIndia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_CanadaCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_CanadaEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_UKSouth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_UKWest();
    [CompilerGeneratedAttribute]
public static AzureLocation get_WestCentralUS();
    [CompilerGeneratedAttribute]
public static AzureLocation get_KoreaCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_KoreaSouth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_FranceCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_FranceSouth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_AustraliaCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_AustraliaCentral2();
    [CompilerGeneratedAttribute]
public static AzureLocation get_UAECentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_UAENorth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SouthAfricaNorth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SouthAfricaWest();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SwedenCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SwedenSouth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SwitzerlandNorth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_SwitzerlandWest();
    [CompilerGeneratedAttribute]
public static AzureLocation get_GermanyNorth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_GermanyWestCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_GermanyCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_GermanyNorthEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_NorwayWest();
    [CompilerGeneratedAttribute]
public static AzureLocation get_NorwayEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_BrazilSoutheast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_ChinaNorth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_ChinaEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_ChinaNorth2();
    [CompilerGeneratedAttribute]
public static AzureLocation get_ChinaNorth3();
    [CompilerGeneratedAttribute]
public static AzureLocation get_ChinaEast2();
    [CompilerGeneratedAttribute]
public static AzureLocation get_ChinaEast3();
    [CompilerGeneratedAttribute]
public static AzureLocation get_QatarCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USDoDCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USDoDEast();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USGovArizona();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USGovTexas();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USGovVirginia();
    [CompilerGeneratedAttribute]
public static AzureLocation get_USGovIowa();
    [CompilerGeneratedAttribute]
public static AzureLocation get_IsraelCentral();
    [CompilerGeneratedAttribute]
public static AzureLocation get_ItalyNorth();
    [CompilerGeneratedAttribute]
public static AzureLocation get_PolandCentral();
    private static string GetNameFromDisplayName(string name, Boolean& foundSpace);
    [CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DisplayName();
    private static AzureLocation CreateStaticReference(string name, string displayName);
    public virtual string ToString();
    public static AzureLocation op_Implicit(string location);
    public sealed virtual bool Equals(AzureLocation other);
    public static string op_Implicit(AzureLocation location);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public static bool op_Equality(AzureLocation left, AzureLocation right);
    public static bool op_Inequality(AzureLocation left, AzureLocation right);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.AzureSasCredentialSynchronousPolicy : HttpPipelineSynchronousPolicy {
    private AzureSasCredential _credential;
    public AzureSasCredentialSynchronousPolicy(AzureSasCredential credential);
    public virtual void OnSendingRequest(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.Base64Url : object {
    public static Byte[] Decode(string encoded);
    public static string Encode(Byte[] bytes);
    internal static string DecodeString(string encoded);
    internal static string EncodeString(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.BufferedReadStream : Stream {
    private static byte CR;
    private static byte LF;
    private Stream _inner;
    private Byte[] _buffer;
    private ArrayPool`1<byte> _bytePool;
    private int _bufferOffset;
    private int _bufferCount;
    private bool _disposed;
    [NullableAttribute("0")]
public ArraySegment`1<byte> BufferedData { get; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanTimeout { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public BufferedReadStream(Stream inner, int bufferSize);
    public BufferedReadStream(Stream inner, int bufferSize, ArrayPool`1<byte> bytePool);
    [NullableContextAttribute("0")]
public ArraySegment`1<byte> get_BufferedData();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanTimeout();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    protected virtual void Dispose(bool disposing);
    public virtual void Flush();
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual int Read(Byte[] buffer, int offset, int count);
    [AsyncStateMachineAttribute("Azure.Core.BufferedReadStream/<ReadAsync>d__33")]
public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public bool EnsureBuffered();
    [AsyncStateMachineAttribute("Azure.Core.BufferedReadStream/<EnsureBufferedAsync>d__35")]
public Task`1<bool> EnsureBufferedAsync(CancellationToken cancellationToken);
    public bool EnsureBuffered(int minCount);
    [AsyncStateMachineAttribute("Azure.Core.BufferedReadStream/<EnsureBufferedAsync>d__37")]
public Task`1<bool> EnsureBufferedAsync(int minCount, CancellationToken cancellationToken);
    public string ReadLine(int lengthLimit);
    [AsyncStateMachineAttribute("Azure.Core.BufferedReadStream/<ReadLineAsync>d__39")]
public Task`1<string> ReadLineAsync(int lengthLimit, CancellationToken cancellationToken);
    private void ProcessLineChar(MemoryStream builder, Boolean& foundCR, Boolean& foundCRLF, Boolean& foundLF);
    private static string DecodeLine(MemoryStream builder, bool foundCRLF, bool foundLF);
    private void CheckDisposed();
    private static void ValidateBuffer(Byte[] buffer, int offset, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.Buffers.AzureBaseBuffersExtensions : object {
    private static int DefaultCopyBufferSize;
    [AsyncStateMachineAttribute("Azure.Core.Buffers.AzureBaseBuffersExtensions/<WriteAsync>d__1")]
[ExtensionAttribute]
public static Task WriteAsync(Stream stream, ReadOnlyMemory`1<byte> buffer, CancellationToken cancellation);
    [AsyncStateMachineAttribute("Azure.Core.Buffers.AzureBaseBuffersExtensions/<WriteAsync>d__2")]
[ExtensionAttribute]
public static Task WriteAsync(Stream stream, ReadOnlySequence`1<byte> buffer, CancellationToken cancellation);
    [AsyncStateMachineAttribute("Azure.Core.Buffers.AzureBaseBuffersExtensions/<CopyToAsync>d__3")]
[ExtensionAttribute]
public static Task CopyToAsync(Stream source, Stream destination, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static void CopyTo(Stream source, Stream destination, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("68")]
internal class Azure.Core.CallerShouldAuditAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    public string Reason { get; public set; }
    public CallerShouldAuditAttribute(string reason);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Azure.Core.CancellationHelper : object {
    private static string s_cancellationMessage;
    private static CancellationHelper();
    internal static bool ShouldWrapInOperationCanceledException(Exception exception, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
internal static Exception CreateOperationCanceledException(Exception innerException, CancellationToken cancellationToken, string message);
    [NullableContextAttribute("2")]
private static void ThrowOperationCanceledException(Exception innerException, CancellationToken cancellationToken);
    internal static void ThrowIfCancellationRequested(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.ChainingClassifier : ResponseClassifier {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ResponseClassificationHandler[] _handlers;
    private ResponseClassifier _endOfChain;
    public ChainingClassifier(ValueTuple`2[] statusCodes, ResponseClassificationHandler[] handlers, ResponseClassifier endOfChain);
    public virtual bool IsErrorResponse(HttpMessage message);
    private void AddClassifiers(ReadOnlySpan`1<ResponseClassificationHandler> handlers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.ClientOptions : object {
    private HttpPipelineTransport _transport;
    [CompilerGeneratedAttribute]
private bool <IsCustomTransportSet>k__BackingField;
    [CompilerGeneratedAttribute]
private static ClientOptions <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private DiagnosticsOptions <Diagnostics>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <Retry>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private HttpPipelinePolicy <RetryPolicy>k__BackingField;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> <Policies>k__BackingField;
    internal bool IsCustomTransportSet { get; private set; }
    public static ClientOptions Default { get; private set; }
    public HttpPipelineTransport Transport { get; public set; }
    public DiagnosticsOptions Diagnostics { get; }
    public RetryOptions Retry { get; }
    [NullableAttribute("2")]
public HttpPipelinePolicy RetryPolicy { get; public set; }
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> Policies { get; private set; }
    [NullableContextAttribute("2")]
protected ClientOptions(DiagnosticsOptions diagnostics);
    [NullableContextAttribute("2")]
internal ClientOptions(ClientOptions clientOptions, DiagnosticsOptions diagnostics);
    private static ClientOptions();
    [CompilerGeneratedAttribute]
internal bool get_IsCustomTransportSet();
    [CompilerGeneratedAttribute]
private void set_IsCustomTransportSet(bool value);
    [CompilerGeneratedAttribute]
public static ClientOptions get_Default();
    [CompilerGeneratedAttribute]
private static void set_Default(ClientOptions value);
    internal static void ResetDefaultOptions();
    public HttpPipelineTransport get_Transport();
    public void set_Transport(HttpPipelineTransport value);
    [CompilerGeneratedAttribute]
public DiagnosticsOptions get_Diagnostics();
    [CompilerGeneratedAttribute]
public RetryOptions get_Retry();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public HttpPipelinePolicy get_RetryPolicy();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RetryPolicy(HttpPipelinePolicy value);
    public void AddPolicy(HttpPipelinePolicy policy, HttpPipelinePosition position);
    [CompilerGeneratedAttribute]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> get_Policies();
    [CompilerGeneratedAttribute]
private void set_Policies(List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> value);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.ContentType : ValueType {
    private string _contentType;
    [CompilerGeneratedAttribute]
private static ContentType <ApplicationJson>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentType <ApplicationOctetStream>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentType <TextPlain>k__BackingField;
    public static ContentType ApplicationJson { get; }
    public static ContentType ApplicationOctetStream { get; }
    public static ContentType TextPlain { get; }
    public ContentType(string contentType);
    private static ContentType();
    [CompilerGeneratedAttribute]
public static ContentType get_ApplicationJson();
    [CompilerGeneratedAttribute]
public static ContentType get_ApplicationOctetStream();
    [CompilerGeneratedAttribute]
public static ContentType get_TextPlain();
    public static ContentType op_Implicit(string contentType);
    public sealed virtual bool Equals(ContentType other);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(string other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(ContentType left, ContentType right);
    public static bool op_Inequality(ContentType left, ContentType right);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
public interface Azure.Core.Cryptography.IKeyEncryptionKey {
    public string KeyId { get; }
    public abstract virtual string get_KeyId();
    public abstract virtual Byte[] WrapKey(string algorithm, ReadOnlyMemory`1<byte> key, CancellationToken cancellationToken);
    public abstract virtual Task`1<Byte[]> WrapKeyAsync(string algorithm, ReadOnlyMemory`1<byte> key, CancellationToken cancellationToken);
    public abstract virtual Byte[] UnwrapKey(string algorithm, ReadOnlyMemory`1<byte> encryptedKey, CancellationToken cancellationToken);
    public abstract virtual Task`1<Byte[]> UnwrapKeyAsync(string algorithm, ReadOnlyMemory`1<byte> encryptedKey, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Azure.Core.Cryptography.IKeyEncryptionKeyResolver {
    public abstract virtual IKeyEncryptionKey Resolve(string keyId, CancellationToken cancellationToken);
    public abstract virtual Task`1<IKeyEncryptionKey> ResolveAsync(string keyId, CancellationToken cancellationToken);
}
internal class Azure.Core.DefaultClientOptions : ClientOptions {
    [NullableContextAttribute("2")]
private static Nullable`1<bool> EnvironmentVariableToBool(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.DelayStrategy : object {
    internal static double DefaultJitterFactor;
    private Random _random;
    private double _minJitterFactor;
    private double _maxJitterFactor;
    private TimeSpan _maxDelay;
    protected DelayStrategy(Nullable`1<TimeSpan> maxDelay, double jitterFactor);
    public static DelayStrategy CreateExponentialDelayStrategy(Nullable`1<TimeSpan> initialDelay, Nullable`1<TimeSpan> maxDelay);
    public static DelayStrategy CreateFixedDelayStrategy(Nullable`1<TimeSpan> delay);
    [NullableContextAttribute("2")]
protected abstract virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
    [NullableContextAttribute("2")]
public TimeSpan GetNextDelay(Response response, int retryNumber);
    private TimeSpan ApplyJitter(TimeSpan delay);
    protected static TimeSpan Max(TimeSpan val1, TimeSpan val2);
    protected static TimeSpan Min(TimeSpan val1, TimeSpan val2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Azure.Core.DelegatedTokenCredential : object {
    public static TokenCredential Create(Func`3<TokenRequestContext, CancellationToken, AccessToken> getToken, Func`3<TokenRequestContext, CancellationToken, ValueTask`1<AccessToken>> getTokenAsync);
    public static TokenCredential Create(Func`3<TokenRequestContext, CancellationToken, AccessToken> getToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EventSourceAttribute]
internal class Azure.Core.Diagnostics.AzureCoreEventSource : AzureEventSource {
    private static string EventSourceName;
    private static int RequestEvent;
    private static int RequestContentEvent;
    private static int ResponseEvent;
    private static int ResponseContentEvent;
    private static int ResponseDelayEvent;
    private static int ErrorResponseEvent;
    private static int ErrorResponseContentEvent;
    private static int RequestRetryingEvent;
    private static int ResponseContentBlockEvent;
    private static int ErrorResponseContentBlockEvent;
    private static int ResponseContentTextEvent;
    private static int ErrorResponseContentTextEvent;
    private static int ResponseContentTextBlockEvent;
    private static int ErrorResponseContentTextBlockEvent;
    private static int RequestContentTextEvent;
    private static int ExceptionResponseEvent;
    private static int BackgroundRefreshFailedEvent;
    private static int RequestRedirectEvent;
    private static int RequestRedirectBlockedEvent;
    private static int RequestRedirectCountExceededEvent;
    private static int PipelineTransportOptionsNotAppliedEvent;
    [CompilerGeneratedAttribute]
private static AzureCoreEventSource <Singleton>k__BackingField;
    public static AzureCoreEventSource Singleton { get; }
    private static AzureCoreEventSource();
    [CompilerGeneratedAttribute]
public static AzureCoreEventSource get_Singleton();
    [EventAttribute("19")]
public void BackgroundRefreshFailed(string requestId, string exception);
    [NonEventAttribute]
public void Request(Request request, string assemblyName, HttpMessageSanitizer sanitizer);
    [EventAttribute("1")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Request(string requestId, string method, string uri, string headers, string clientAssembly);
    [NonEventAttribute]
public void RequestContent(string requestId, Byte[] content, Encoding textEncoding);
    [EventAttribute("2")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void RequestContent(string requestId, Byte[] content);
    [EventAttribute("17")]
public void RequestContentText(string requestId, string content);
    [NonEventAttribute]
public void Response(Response response, HttpMessageSanitizer sanitizer, double elapsed);
    [EventAttribute("5")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Response(string requestId, int status, string reasonPhrase, string headers, double seconds);
    [NonEventAttribute]
public void ResponseContent(string requestId, Byte[] content, Encoding textEncoding);
    [EventAttribute("6")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void ResponseContent(string requestId, Byte[] content);
    [EventAttribute("13")]
public void ResponseContentText(string requestId, string content);
    [NonEventAttribute]
public void ResponseContentBlock(string requestId, int blockNumber, Byte[] content, Encoding textEncoding);
    [EventAttribute("11")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void ResponseContentBlock(string requestId, int blockNumber, Byte[] content);
    [EventAttribute("15")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void ResponseContentTextBlock(string requestId, int blockNumber, string content);
    [NonEventAttribute]
public void ErrorResponse(Response response, HttpMessageSanitizer sanitizer, double elapsed);
    [EventAttribute("8")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void ErrorResponse(string requestId, int status, string reasonPhrase, string headers, double seconds);
    [NonEventAttribute]
public void ErrorResponseContent(string requestId, Byte[] content, Encoding textEncoding);
    [EventAttribute("9")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void ErrorResponseContent(string requestId, Byte[] content);
    [EventAttribute("14")]
public void ErrorResponseContentText(string requestId, string content);
    [NonEventAttribute]
public void ErrorResponseContentBlock(string requestId, int blockNumber, Byte[] content, Encoding textEncoding);
    [EventAttribute("12")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void ErrorResponseContentBlock(string requestId, int blockNumber, Byte[] content);
    [EventAttribute("16")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void ErrorResponseContentTextBlock(string requestId, int blockNumber, string content);
    [EventAttribute("10")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void RequestRetrying(string requestId, int retryNumber, double seconds);
    [EventAttribute("7")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void ResponseDelay(string requestId, double seconds);
    [EventAttribute("18")]
public void ExceptionResponse(string requestId, string exception);
    [NonEventAttribute]
public void RequestRedirect(Request request, Uri redirectUri, Response response);
    [EventAttribute("20")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void RequestRedirect(string requestId, string from, string to, int status);
    [EventAttribute("21")]
public void RequestRedirectBlocked(string requestId, string from, string to);
    [EventAttribute("22")]
public void RequestRedirectCountExceeded(string requestId, string from, string to);
    [NonEventAttribute]
public void PipelineTransportOptionsNotApplied(Type optionsType);
    [EventAttribute("23")]
public void PipelineTransportOptionsNotApplied(string optionsType);
    [NonEventAttribute]
private static string FormatHeaders(IEnumerable`1<HttpHeader> headers, HttpMessageSanitizer sanitizer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.Diagnostics.AzureEventSource : EventSource {
    private static string SharedDataKey;
    private static HashSet`1<string> NamesInUse;
    private static String[] MainEventSourceTraits;
    private static AzureEventSource();
    protected AzureEventSource(string eventSourceName);
    private static string DeduplicateName(string eventSourceName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Diagnostics.AzureEventSourceListener : EventListener {
    public static string TraitName;
    public static string TraitValue;
    private List`1<EventSource> _eventSources;
    private Action`2<EventWrittenEventArgs, string> _log;
    private EventLevel _level;
    public AzureEventSourceListener(Action`2<EventWrittenEventArgs, string> log, EventLevel level);
    protected sealed virtual void OnEventSourceCreated(EventSource eventSource);
    protected sealed virtual void OnEventWritten(EventWrittenEventArgs eventData);
    public static AzureEventSourceListener CreateConsoleLogger(EventLevel level);
    public static AzureEventSourceListener CreateTraceLogger(EventLevel level);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Azure.Core.DiagnosticsOptions : object {
    private static int MaxApplicationIdLength;
    private string _applicationId;
    [CompilerGeneratedAttribute]
private bool <IsLoggingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDistributedTracingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTelemetryEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLoggingContentEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LoggedContentSizeLimit>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IList`1<string> <LoggedHeaderNames>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IList`1<string> <LoggedQueryParameters>k__BackingField;
    public bool IsLoggingEnabled { get; public set; }
    public bool IsDistributedTracingEnabled { get; public set; }
    public bool IsTelemetryEnabled { get; public set; }
    public bool IsLoggingContentEnabled { get; public set; }
    public int LoggedContentSizeLimit { get; public set; }
    [NullableAttribute("1")]
public IList`1<string> LoggedHeaderNames { get; internal set; }
    [NullableAttribute("1")]
public IList`1<string> LoggedQueryParameters { get; internal set; }
    public string ApplicationId { get; public set; }
    public static string DefaultApplicationId { get; public set; }
    internal DiagnosticsOptions(DiagnosticsOptions diagnosticsOptions);
    [CompilerGeneratedAttribute]
public bool get_IsLoggingEnabled();
    [CompilerGeneratedAttribute]
public void set_IsLoggingEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsDistributedTracingEnabled();
    [CompilerGeneratedAttribute]
public void set_IsDistributedTracingEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsTelemetryEnabled();
    [CompilerGeneratedAttribute]
public void set_IsTelemetryEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsLoggingContentEnabled();
    [CompilerGeneratedAttribute]
public void set_IsLoggingContentEnabled(bool value);
    [CompilerGeneratedAttribute]
public int get_LoggedContentSizeLimit();
    [CompilerGeneratedAttribute]
public void set_LoggedContentSizeLimit(int value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IList`1<string> get_LoggedHeaderNames();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal void set_LoggedHeaderNames(IList`1<string> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IList`1<string> get_LoggedQueryParameters();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal void set_LoggedQueryParameters(IList`1<string> value);
    public string get_ApplicationId();
    public void set_ApplicationId(string value);
    public static string get_DefaultApplicationId();
    public static void set_DefaultApplicationId(string value);
    private static Nullable`1<bool> EnvironmentVariableToBool(string value);
}
internal class Azure.Core.DictionaryHeaders : object {
    private Dictionary`2<string, object> _headers;
    public void AddHeader(string name, string value);
    public bool TryGetHeader(string name, String& value);
    public bool TryGetHeaderValues(string name, IEnumerable`1& values);
    public bool ContainsHeader(string name);
    public void SetHeader(string name, string value);
    public bool RemoveHeader(string name);
    public IEnumerable`1<HttpHeader> EnumerateHeaders();
    private static string JoinHeaderValue(IEnumerable`1<string> values);
}
internal class Azure.Core.ExponentialDelayStrategy : DelayStrategy {
    private TimeSpan _delay;
    public ExponentialDelayStrategy(Nullable`1<TimeSpan> delay, Nullable`1<TimeSpan> maxDelay);
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
[NullableContextAttribute("1")]
public interface Azure.Core.Extensions.IAzureClientBuilder`2 {
}
[NullableContextAttribute("1")]
public interface Azure.Core.Extensions.IAzureClientFactoryBuilder {
    public abstract virtual IAzureClientBuilder`2<TClient, TOptions> RegisterClientFactory(Func`2<TOptions, TClient> clientFactory);
}
public interface Azure.Core.Extensions.IAzureClientFactoryBuilderWithConfiguration`1 {
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("Binding strongly typed objects to configuration values is not supported with trimming. Use the Configuration Binder Source Generator (EnableConfigurationBindingGenerator=true) instead.")]
[RequiresDynamicCodeAttribute("Binding strongly typed objects to configuration values requires generating dynamic code at runtime, for example instantiating generic types. Use the Configuration Binder Source Generator (EnableConfigurationBindingGenerator=true) instead.")]
public abstract virtual IAzureClientBuilder`2<TClient, TOptions> RegisterClientFactory(TConfiguration configuration);
}
[NullableContextAttribute("1")]
public interface Azure.Core.Extensions.IAzureClientFactoryBuilderWithCredential {
    public abstract virtual IAzureClientBuilder`2<TClient, TOptions> RegisterClientFactory(Func`3<TOptions, TokenCredential, TClient> clientFactory, bool requiresCredential);
}
internal class Azure.Core.FixedDelayStrategy : DelayStrategy {
    private TimeSpan _delay;
    public FixedDelayStrategy(TimeSpan delay);
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
internal class Azure.Core.FixedDelayWithNoJitterStrategy : DelayStrategy {
    private static TimeSpan DefaultDelay;
    private TimeSpan _delay;
    public FixedDelayWithNoJitterStrategy(Nullable`1<TimeSpan> suggestedDelay);
    private static FixedDelayWithNoJitterStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.GenericOperationSource`1 : object {
    private sealed virtual override T Azure.Core.IOperationSource<T>.CreateResult(Response response, CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<T> Azure.Core.IOperationSource<T>.CreateResultAsync(Response response, CancellationToken cancellationToken);
    private T CreateResult(Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
public class Azure.Core.GeoJson.GeoArray`1 : ValueType {
    private object _container;
    public T Item { get; }
    public int Count { get; }
    internal GeoArray`1(object container);
    public sealed virtual T get_Item(int index);
    public sealed virtual int get_Count();
    [NullableContextAttribute("0")]
public Enumerator<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Azure.Core.GeoJson.GeoBoundingBox : object {
    [CompilerGeneratedAttribute]
private double <West>k__BackingField;
    [CompilerGeneratedAttribute]
private double <South>k__BackingField;
    [CompilerGeneratedAttribute]
private double <East>k__BackingField;
    [CompilerGeneratedAttribute]
private double <North>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MinAltitude>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MaxAltitude>k__BackingField;
    public double West { get; }
    public double South { get; }
    public double East { get; }
    public double North { get; }
    public Nullable`1<double> MinAltitude { get; }
    public Nullable`1<double> MaxAltitude { get; }
    public double Item { get; }
    public GeoBoundingBox(double west, double south, double east, double north);
    public GeoBoundingBox(double west, double south, double east, double north, Nullable`1<double> minAltitude, Nullable`1<double> maxAltitude);
    [CompilerGeneratedAttribute]
public double get_West();
    [CompilerGeneratedAttribute]
public double get_South();
    [CompilerGeneratedAttribute]
public double get_East();
    [CompilerGeneratedAttribute]
public double get_North();
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_MinAltitude();
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_MaxAltitude();
    public sealed virtual bool Equals(GeoBoundingBox other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public double get_Item(int index);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoCollection : GeoObject {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<GeoObject> <Geometries>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    internal IReadOnlyList`1<GeoObject> Geometries { get; }
    public int Count { get; }
    public GeoObject Item { get; }
    public GeoObjectType Type { get; }
    public GeoCollection(IEnumerable`1<GeoObject> geometries);
    public GeoCollection(IEnumerable`1<GeoObject> geometries, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<GeoObject> get_Geometries();
    public sealed virtual IEnumerator`1<GeoObject> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual int get_Count();
    public sealed virtual GeoObject get_Item(int index);
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.GeoJson.GeoJsonConverter : JsonConverter`1<GeoObject> {
    private static string PointType;
    private static string LineStringType;
    private static string MultiPointType;
    private static string PolygonType;
    private static string MultiLineStringType;
    private static string MultiPolygonType;
    private static string GeometryCollectionType;
    private static string TypeProperty;
    private static string GeometriesProperty;
    private static string CoordinatesProperty;
    private static string BBoxProperty;
    public virtual bool CanConvert(Type typeToConvert);
    public virtual GeoObject Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, GeoObject value, JsonSerializerOptions options);
    internal static GeoObject Read(JsonElement element);
    [NullableContextAttribute("2")]
private static GeoBoundingBox ReadBoundingBox(JsonElement& element);
    private static IReadOnlyDictionary`2<string, object> ReadAdditionalProperties(JsonElement& element, string knownProperty);
    [NullableContextAttribute("2")]
private static object ReadAdditionalPropertyValue(JsonElement& element);
    private static IReadOnlyList`1<GeoPosition> ReadCoordinates(JsonElement coordinatesElement);
    private static GeoPosition ReadCoordinate(JsonElement coordinate);
    internal static void Write(Utf8JsonWriter writer, GeoObject value);
    private static void WriteAdditionalPropertyValue(Utf8JsonWriter writer, object value);
    private static JsonElement GetRequiredProperty(JsonElement element, string name);
    [CompilerGeneratedAttribute]
internal static void <Write>g__WritePositionValues|20_0(GeoPosition type, <>c__DisplayClass20_0& );
    [CompilerGeneratedAttribute]
internal static void <Write>g__WriteType|20_1(string type, <>c__DisplayClass20_0& );
    [CompilerGeneratedAttribute]
internal static void <Write>g__WritePosition|20_2(GeoPosition type, <>c__DisplayClass20_0& );
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static void <Write>g__WritePositions|20_3(GeoArray`1<GeoPosition> positions, <>c__DisplayClass20_0& );
}
public class Azure.Core.GeoJson.GeoLinearRing : object {
    [CompilerGeneratedAttribute]
private GeoArray`1<GeoPosition> <Coordinates>k__BackingField;
    public GeoArray`1<GeoPosition> Coordinates { get; }
    [NullableContextAttribute("1")]
public GeoLinearRing(IEnumerable`1<GeoPosition> coordinates);
    [CompilerGeneratedAttribute]
public GeoArray`1<GeoPosition> get_Coordinates();
}
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoLineString : GeoObject {
    [CompilerGeneratedAttribute]
private GeoArray`1<GeoPosition> <Coordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    public GeoArray`1<GeoPosition> Coordinates { get; }
    public GeoObjectType Type { get; }
    [NullableContextAttribute("1")]
public GeoLineString(IEnumerable`1<GeoPosition> coordinates);
    [NullableContextAttribute("1")]
public GeoLineString(IEnumerable`1<GeoPosition> coordinates, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
public GeoArray`1<GeoPosition> get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoLineStringCollection : GeoObject {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<GeoLineString> <Lines>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    internal IReadOnlyList`1<GeoLineString> Lines { get; }
    public int Count { get; }
    public GeoLineString Item { get; }
    [NullableAttribute("0")]
public GeoArray`1<GeoArray`1<GeoPosition>> Coordinates { get; }
    public GeoObjectType Type { get; }
    public GeoLineStringCollection(IEnumerable`1<GeoLineString> lines);
    public GeoLineStringCollection(IEnumerable`1<GeoLineString> lines, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<GeoLineString> get_Lines();
    public sealed virtual IEnumerator`1<GeoLineString> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual int get_Count();
    public sealed virtual GeoLineString get_Item(int index);
    [NullableContextAttribute("0")]
public GeoArray`1<GeoArray`1<GeoPosition>> get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public abstract class Azure.Core.GeoJson.GeoObject : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal static IReadOnlyDictionary`2<string, object> DefaultProperties;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <CustomProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoBoundingBox <BoundingBox>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IReadOnlyDictionary`2<string, object> CustomProperties { get; }
    public GeoObjectType Type { get; }
    public GeoBoundingBox BoundingBox { get; }
    internal GeoObject(GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    private static GeoObject();
    [CompilerGeneratedAttribute]
internal IReadOnlyDictionary`2<string, object> get_CustomProperties();
    public abstract virtual GeoObjectType get_Type();
    [CompilerGeneratedAttribute]
public GeoBoundingBox get_BoundingBox();
    [NullableContextAttribute("1")]
public bool TryGetCustomProperty(string name, Object& value);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public static GeoObject Parse(string json);
}
public enum Azure.Core.GeoJson.GeoObjectType : Enum {
    public int value__;
    public static GeoObjectType Point;
    public static GeoObjectType MultiPoint;
    public static GeoObjectType Polygon;
    public static GeoObjectType MultiPolygon;
    public static GeoObjectType LineString;
    public static GeoObjectType MultiLineString;
    public static GeoObjectType GeometryCollection;
}
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoPoint : GeoObject {
    [CompilerGeneratedAttribute]
private GeoPosition <Coordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    public GeoPosition Coordinates { get; }
    public GeoObjectType Type { get; }
    public GeoPoint(double longitude, double latitude);
    public GeoPoint(double longitude, double latitude, Nullable`1<double> altitude);
    public GeoPoint(GeoPosition position);
    [NullableContextAttribute("2")]
public GeoPoint(GeoPosition position, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
public GeoPosition get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoPointCollection : GeoObject {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<GeoPoint> <Points>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    internal IReadOnlyList`1<GeoPoint> Points { get; }
    public int Count { get; }
    public GeoPoint Item { get; }
    [NullableAttribute("0")]
public GeoArray`1<GeoPosition> Coordinates { get; }
    public GeoObjectType Type { get; }
    public GeoPointCollection(IEnumerable`1<GeoPoint> points);
    public GeoPointCollection(IEnumerable`1<GeoPoint> points, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<GeoPoint> get_Points();
    public sealed virtual IEnumerator`1<GeoPoint> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual int get_Count();
    public sealed virtual GeoPoint get_Item(int index);
    [NullableContextAttribute("0")]
public GeoArray`1<GeoPosition> get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoPolygon : GeoObject {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<GeoLinearRing> <Rings>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    public IReadOnlyList`1<GeoLinearRing> Rings { get; }
    public GeoLinearRing OuterRing { get; }
    [NullableAttribute("0")]
public GeoArray`1<GeoArray`1<GeoPosition>> Coordinates { get; }
    public GeoObjectType Type { get; }
    public GeoPolygon(IEnumerable`1<GeoPosition> positions);
    public GeoPolygon(IEnumerable`1<GeoLinearRing> rings);
    public GeoPolygon(IEnumerable`1<GeoLinearRing> rings, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<GeoLinearRing> get_Rings();
    public GeoLinearRing get_OuterRing();
    [NullableContextAttribute("0")]
public GeoArray`1<GeoArray`1<GeoPosition>> get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[JsonConverterAttribute("Azure.Core.GeoJson.GeoJsonConverter")]
public class Azure.Core.GeoJson.GeoPolygonCollection : GeoObject {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<GeoPolygon> <Polygons>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoObjectType <Type>k__BackingField;
    internal IReadOnlyList`1<GeoPolygon> Polygons { get; }
    public int Count { get; }
    public GeoPolygon Item { get; }
    [NullableAttribute("0")]
public GeoArray`1<GeoArray`1<GeoArray`1<GeoPosition>>> Coordinates { get; }
    public GeoObjectType Type { get; }
    public GeoPolygonCollection(IEnumerable`1<GeoPolygon> polygons);
    public GeoPolygonCollection(IEnumerable`1<GeoPolygon> polygons, GeoBoundingBox boundingBox, IReadOnlyDictionary`2<string, object> customProperties);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<GeoPolygon> get_Polygons();
    public sealed virtual IEnumerator`1<GeoPolygon> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual int get_Count();
    public sealed virtual GeoPolygon get_Item(int index);
    [NullableContextAttribute("0")]
public GeoArray`1<GeoArray`1<GeoArray`1<GeoPosition>>> get_Coordinates();
    [CompilerGeneratedAttribute]
public virtual GeoObjectType get_Type();
}
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
public class Azure.Core.GeoJson.GeoPosition : ValueType {
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Altitude>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Longitude>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Latitude>k__BackingField;
    public Nullable`1<double> Altitude { get; }
    public double Longitude { get; }
    public double Latitude { get; }
    public double Item { get; }
    public int Count { get; }
    public GeoPosition(double longitude, double latitude);
    public GeoPosition(double longitude, double latitude, Nullable`1<double> altitude);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Altitude();
    [CompilerGeneratedAttribute]
public double get_Longitude();
    [CompilerGeneratedAttribute]
public double get_Latitude();
    public sealed virtual bool Equals(GeoPosition other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(GeoPosition left, GeoPosition right);
    public static bool op_Inequality(GeoPosition left, GeoPosition right);
    [NullableContextAttribute("1")]
public virtual string ToString();
    public double get_Item(int index);
    public int get_Count();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.HashCodeBuilder : ValueType {
    private static UInt32 s_seed;
    private static UInt32 Prime1;
    private static UInt32 Prime2;
    private static UInt32 Prime3;
    private static UInt32 Prime4;
    private static UInt32 Prime5;
    private UInt32 _v1;
    private UInt32 _v2;
    private UInt32 _v3;
    private UInt32 _v4;
    private UInt32 _queue1;
    private UInt32 _queue2;
    private UInt32 _queue3;
    private UInt32 _length;
    private static HashCodeBuilder();
    private static UInt32 GenerateGlobalSeed();
    public static int Combine(T1 value1);
    public static int Combine(T1 value1, T2 value2);
    public static int Combine(T1 value1, T2 value2, T3 value3);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);
    public static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);
    private static void Initialize(UInt32& v1, UInt32& v2, UInt32& v3, UInt32& v4);
    private static UInt32 Round(UInt32 hash, UInt32 input);
    private static UInt32 QueueRound(UInt32 hash, UInt32 queuedValue);
    private static UInt32 MixState(UInt32 v1, UInt32 v2, UInt32 v3, UInt32 v4);
    public static UInt32 RotateLeft(UInt32 value, int offset);
    private static UInt32 MixEmptyState();
    private static UInt32 MixFinal(UInt32 hash);
    public void Add(T value);
    public void Add(T value, IEqualityComparer`1<T> comparer);
    private void Add(int value);
    public int ToHashCode();
    [ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code.", "True")]
[EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("HashCode is a mutable struct and should not be compared with other HashCodes.", "True")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.HttpHeader : ValueType {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Name { get; }
    public string Value { get; }
    public HttpHeader(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Value();
    public virtual int GetHashCode();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual string ToString();
    public sealed virtual bool Equals(HttpHeader other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.HttpMessage : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ArrayBackedPropertyBag`2<ulong, object> _propertyBag;
    [NullableAttribute("2")]
private Response _response;
    [CompilerGeneratedAttribute]
private Request <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseClassifier <ResponseClassifier>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BufferResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <NetworkTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RetryNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ProcessingStartTime>k__BackingField;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> <Policies>k__BackingField;
    public Request Request { get; }
    public Response Response { get; public set; }
    public bool HasResponse { get; }
    public CancellationToken CancellationToken { get; internal set; }
    public ResponseClassifier ResponseClassifier { get; public set; }
    public bool BufferResponse { get; public set; }
    public Nullable`1<TimeSpan> NetworkTimeout { get; public set; }
    internal int RetryNumber { get; internal set; }
    internal DateTimeOffset ProcessingStartTime { get; internal set; }
    public MessageProcessingContext ProcessingContext { get; }
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> Policies { get; internal set; }
    public HttpMessage(Request request, ResponseClassifier responseClassifier);
    [CompilerGeneratedAttribute]
public Request get_Request();
    public Response get_Response();
    public void set_Response(Response value);
    public bool get_HasResponse();
    internal void ClearResponse();
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
internal void set_CancellationToken(CancellationToken value);
    [CompilerGeneratedAttribute]
public ResponseClassifier get_ResponseClassifier();
    [CompilerGeneratedAttribute]
public void set_ResponseClassifier(ResponseClassifier value);
    [CompilerGeneratedAttribute]
public bool get_BufferResponse();
    [CompilerGeneratedAttribute]
public void set_BufferResponse(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_NetworkTimeout();
    [CompilerGeneratedAttribute]
public void set_NetworkTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
internal int get_RetryNumber();
    [CompilerGeneratedAttribute]
internal void set_RetryNumber(int value);
    [CompilerGeneratedAttribute]
internal DateTimeOffset get_ProcessingStartTime();
    [CompilerGeneratedAttribute]
internal void set_ProcessingStartTime(DateTimeOffset value);
    public MessageProcessingContext get_ProcessingContext();
    [NullableContextAttribute("2")]
internal void ApplyRequestContext(RequestContext context, ResponseClassifier classifier);
    [CompilerGeneratedAttribute]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> get_Policies();
    [CompilerGeneratedAttribute]
internal void set_Policies(List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> value);
    public bool TryGetProperty(string name, Object& value);
    public void SetProperty(string name, object value);
    public bool TryGetProperty(Type type, Object& value);
    public void SetProperty(Type type, object value);
    [NullableContextAttribute("2")]
public Stream ExtractResponseContent();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.HttpMessageSanitizer : object {
    private static string LogAllValue;
    private bool _logAllHeaders;
    private bool _logFullQueries;
    private String[] _allowedQueryParameters;
    private string _redactedPlaceholder;
    private HashSet`1<string> _allowedHeaders;
    [NullableAttribute("2")]
[ThreadStaticAttribute]
private static StringBuilder s_cachedStringBuilder;
    private static int MaxCachedStringBuilderCapacity;
    internal static HttpMessageSanitizer Default;
    public HttpMessageSanitizer(String[] allowedQueryParameters, String[] allowedHeaders, string redactedPlaceholder);
    private static HttpMessageSanitizer();
    public string SanitizeHeader(string name, string value);
    public string SanitizeUrl(string url);
    private static StringBuilder RentStringBuilder(int capacity);
    private static string ToStringAndReturnStringBuilder(StringBuilder builder);
    [CompilerGeneratedAttribute]
internal static StringBuilder <SanitizeUrl>g__AppendReadOnlySpan|11_0(StringBuilder builder, ReadOnlySpan`1<char> span);
}
public enum Azure.Core.HttpPipelinePosition : Enum {
    public int value__;
    public static HttpPipelinePosition PerCall;
    public static HttpPipelinePosition PerRetry;
    public static HttpPipelinePosition BeforeTransport;
}
[AttributeUsageAttribute("32")]
internal class Azure.Core.InitializationConstructorAttribute : Attribute {
}
internal interface Azure.Core.IOperation {
    public abstract virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
internal interface Azure.Core.IOperation`1 {
    public abstract virtual ValueTask`1<OperationState`1<T>> UpdateStateAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface Azure.Core.IOperationSource`1 {
    public abstract virtual T CreateResult(Response response, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> CreateResultAsync(Response response, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Json.MutableJsonChange : ValueType {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <AddedPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private MutableJsonChangeKind <ChangeKind>k__BackingField;
    public string Path { get; }
    public int Index { get; }
    [NullableAttribute("2")]
public object Value { get; }
    [NullableAttribute("2")]
public string AddedPropertyName { get; }
    public MutableJsonChangeKind ChangeKind { get; }
    public JsonValueKind ValueKind { get; }
    [NullableContextAttribute("2")]
public MutableJsonChange(string path, int index, object value, MutableJsonChangeKind changeKind, string addedPropertyName);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Path();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Index();
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Value();
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_AddedPropertyName();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public MutableJsonChangeKind get_ChangeKind();
    [IsReadOnlyAttribute]
public JsonValueKind get_ValueKind();
    [IsReadOnlyAttribute]
internal void EnsureString();
    [IsReadOnlyAttribute]
internal void EnsureNumber();
    [IsReadOnlyAttribute]
internal void EnsureArray();
    [IsReadOnlyAttribute]
internal int GetArrayLength();
    internal bool IsDescendant(string path);
    [NullableContextAttribute("0")]
internal bool IsDescendant(ReadOnlySpan`1<char> ancestorPath);
    [NullableContextAttribute("0")]
internal static bool IsDescendant(ReadOnlySpan`1<char> ancestorPath, ReadOnlySpan`1<char> descendantPath);
    internal bool IsDirectDescendant(string path);
    [NullableContextAttribute("0")]
internal bool IsLessThan(ReadOnlySpan`1<char> otherPath);
    [NullableContextAttribute("0")]
internal bool IsGreaterThan(ReadOnlySpan`1<char> otherPath);
    internal string AsString();
    public virtual string ToString();
}
internal enum Azure.Core.Json.MutableJsonChangeKind : Enum {
    public int value__;
    public static MutableJsonChangeKind PropertyUpdate;
    public static MutableJsonChangeKind PropertyAddition;
    public static MutableJsonChangeKind PropertyRemoval;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiresUnreferencedCodeAttribute("This class utilizes reflection-based JSON serialization and deserialization which is not compatible with trimming.")]
[RequiresDynamicCodeAttribute("This class utilizes reflection-based JSON serialization and deserialization which is not compatible with trimming.")]
[JsonConverterAttribute("Azure.Core.Json.MutableJsonDocument/MutableJsonDocumentConverter")]
internal class Azure.Core.Json.MutableJsonDocument : object {
    private static JsonSerializerOptions DefaultSerializerOptions;
    [NullableAttribute("0")]
private ReadOnlyMemory`1<byte> _original;
    private JsonDocument _originalDocument;
    private JsonSerializerOptions _serializerOptions;
    internal static string SerializationRequiresUnreferencedCodeClass;
    [NullableAttribute("2")]
private ChangeTracker _changeTracker;
    internal JsonSerializerOptions SerializerOptions { get; }
    internal ChangeTracker Changes { get; }
    public MutableJsonElement RootElement { get; }
    [NullableContextAttribute("0")]
private MutableJsonDocument(JsonDocument document, ReadOnlyMemory`1<byte> utf8Json, JsonSerializerOptions serializerOptions);
    private static MutableJsonDocument();
    internal JsonSerializerOptions get_SerializerOptions();
    internal ChangeTracker get_Changes();
    public MutableJsonElement get_RootElement();
    public void WriteTo(Stream stream, string format);
    [NullableContextAttribute("2")]
internal void AssertInvalidFormat(string format);
    private void WriteJson(Stream stream);
    private void WriteOriginal(Stream stream);
    private void WritePatch(Stream stream);
    public void WriteTo(Utf8JsonWriter writer);
    [NullableContextAttribute("0")]
private static void Write(Stream stream, ReadOnlySpan`1<byte> buffer);
    [NullableContextAttribute("0")]
public static MutableJsonDocument Parse(ReadOnlyMemory`1<byte> utf8Json, JsonSerializerOptions serializerOptions);
    public static MutableJsonDocument Parse(Utf8JsonReader& reader, JsonSerializerOptions serializerOptions);
    public static MutableJsonDocument Parse(BinaryData utf8Json, JsonSerializerOptions serializerOptions);
    public static MutableJsonDocument Parse(string json, JsonSerializerOptions serializerOptions);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL3050")]
[JsonConverterAttribute("Azure.Core.Json.MutableJsonElement/MutableJsonElementConverter")]
internal class Azure.Core.Json.MutableJsonElement : ValueType {
    internal static int MaxStackLimit;
    private MutableJsonDocument _root;
    private JsonElement _element;
    private string _path;
    private int _highWaterMark;
    internal static string SerializationRequiresUnreferencedCodeConstructor;
    internal static string SerializationRequiresUnreferencedCodeMethod;
    private ChangeTracker Changes { get; }
    public Nullable`1<JsonValueKind> ValueKind { get; }
    [DebuggerBrowsableAttribute("0")]
internal string DebuggerDisplay { get; }
    [RequiresUnreferencedCodeAttribute("This struct utilizes reflection-based JSON serialization which is not compatible with trimming.")]
[RequiresDynamicCodeAttribute("This struct utilizes reflection-based JSON serialization which is not compatible with trimming.")]
internal MutableJsonElement(MutableJsonDocument root, JsonElement element, string path, int highWaterMark);
    private ChangeTracker get_Changes();
    public Nullable`1<JsonValueKind> get_ValueKind();
    public MutableJsonElement GetProperty(string name);
    [NullableContextAttribute("0")]
public MutableJsonElement GetProperty(ReadOnlySpan`1<char> name);
    public bool TryGetProperty(string name, MutableJsonElement& value);
    [NullableContextAttribute("0")]
public bool TryGetProperty(ReadOnlySpan`1<char> name, MutableJsonElement& value);
    [NullableContextAttribute("0")]
private static string GetString(ReadOnlySpan`1<char> value, int start, int end);
    public int GetArrayLength();
    internal MutableJsonElement GetIndexElement(int index);
    public bool TryGetDouble(Double& value);
    public double GetDouble();
    private static string GetFormatExceptionText(string path, Type type);
    public bool TryGetInt32(Int32& value);
    public int GetInt32();
    public bool TryGetInt64(Int64& value);
    public long GetInt64();
    public bool TryGetSingle(Single& value);
    public float GetSingle();
    [NullableContextAttribute("2")]
public string GetString();
    public bool GetBoolean();
    public bool TryGetByte(Byte& value);
    public byte GetByte();
    public bool TryGetDateTime(DateTime& value);
    public DateTime GetDateTime();
    public bool TryGetDateTimeOffset(DateTimeOffset& value);
    public DateTimeOffset GetDateTimeOffset();
    public bool TryGetDecimal(Decimal& value);
    public decimal GetDecimal();
    public bool TryGetGuid(Guid& value);
    public Guid GetGuid();
    public bool TryGetInt16(Int16& value);
    public short GetInt16();
    public bool TryGetSByte(SByte& value);
    public sbyte GetSByte();
    public bool TryGetUInt16(UInt16& value);
    public ushort GetUInt16();
    public bool TryGetUInt32(UInt32& value);
    public UInt32 GetUInt32();
    public bool TryGetUInt64(UInt64& value);
    public ulong GetUInt64();
    public ArrayEnumerator EnumerateArray();
    public ObjectEnumerator EnumerateObject();
    public void RemoveProperty(string name);
    public void Set(double value);
    public MutableJsonElement SetProperty(string name, double value);
    public void Set(int value);
    public MutableJsonElement SetProperty(string name, int value);
    public void Set(long value);
    public MutableJsonElement SetProperty(string name, long value);
    public void Set(float value);
    public MutableJsonElement SetProperty(string name, float value);
    public void Set(string value);
    public MutableJsonElement SetProperty(string name, string value);
    public void SetNull();
    public MutableJsonElement SetPropertyNull(string name);
    public void Set(bool value);
    public MutableJsonElement SetProperty(string name, bool value);
    public void Set(byte value);
    public MutableJsonElement SetProperty(string name, byte value);
    public void Set(sbyte value);
    public MutableJsonElement SetProperty(string name, sbyte value);
    public void Set(short value);
    public MutableJsonElement SetProperty(string name, short value);
    public void Set(ushort value);
    public MutableJsonElement SetProperty(string name, ushort value);
    public void Set(UInt32 value);
    public MutableJsonElement SetProperty(string name, UInt32 value);
    public void Set(ulong value);
    public MutableJsonElement SetProperty(string name, ulong value);
    public void Set(decimal value);
    public MutableJsonElement SetProperty(string name, decimal value);
    public void Set(Guid value);
    public MutableJsonElement SetProperty(string name, Guid value);
    public void Set(DateTime value);
    public MutableJsonElement SetProperty(string name, DateTime value);
    public void Set(DateTimeOffset value);
    public MutableJsonElement SetProperty(string name, DateTimeOffset value);
    public void Set(JsonElement value);
    public MutableJsonElement SetProperty(string name, JsonElement value);
    public virtual string ToString();
    [NullableContextAttribute("2")]
[RequiresUnreferencedCodeAttribute("This method utilizes reflection-based JSON serialization which is not compatible with trimming.")]
[RequiresDynamicCodeAttribute("This method utilizes reflection-based JSON serialization which is not compatible with trimming.")]
internal static JsonElement SerializeToJsonElement(object value, JsonSerializerOptions options);
    private static JsonElement ParseFromBytes(Byte[] bytes);
    internal JsonElement GetJsonElement();
    private Byte[] GetRawBytes();
    internal static Utf8JsonReader GetReaderForElement(JsonElement element);
    internal void DisposeRoot();
    private void EnsureObject();
    private void EnsureArray();
    private void EnsureValid();
    internal string get_DebuggerDisplay();
    internal void WriteTo(Utf8JsonWriter writer, string format);
    internal void WriteTo(Utf8JsonWriter writer);
    private void WriteElement(string path, int highWaterMark, JsonElement element, Utf8JsonWriter writer);
    private void WriteObject(string path, int highWaterMark, JsonElement element, Utf8JsonWriter writer);
    private void WriteArray(string path, int highWaterMark, JsonElement element, Utf8JsonWriter writer);
    private void WritePrimitiveChange(MutableJsonChange change, Utf8JsonWriter writer);
    internal void WritePatch(Utf8JsonWriter writer);
    [NullableContextAttribute("0")]
private static ReadOnlySpan`1<char> GetFirstSegment(ReadOnlySpan`1<char> path);
    [NullableContextAttribute("0")]
private static ReadOnlySpan`1<char> GetLastSegment(ReadOnlySpan`1<char> path);
    [NullableContextAttribute("0")]
private static void CopyTo(Span`1<char> target, Int32& targetLength, ReadOnlySpan`1<char> value);
    [NullableContextAttribute("0")]
private void CloseOpenObjects(Utf8JsonWriter writer, ReadOnlySpan`1<char> changePath, Span`1<char> patchPath, Int32& patchPathLength, MutableJsonElement& patchElement);
    [NullableContextAttribute("0")]
private void OpenAncestorObjects(Utf8JsonWriter writer, ReadOnlySpan`1<char> path, Int32& changePathLength, Span`1<char> currentPath, Int32& currentPathLength, Span`1<char> patchPath, Int32& patchPathLength, MutableJsonElement& patchElement);
    [NullableContextAttribute("0")]
private void CloseFinalObjects(Utf8JsonWriter writer, ReadOnlySpan`1<char> patchPath);
    [NullableContextAttribute("0")]
private void WritePatchValue(Utf8JsonWriter writer, MutableJsonChange change, ReadOnlySpan`1<char> patchPath, MutableJsonElement patchElement);
    [NullableContextAttribute("0")]
private void WriteObjectUpdate(Utf8JsonWriter writer, ReadOnlySpan`1<char> path, MutableJsonElement patchElement);
    [NullableContextAttribute("0")]
private MutableJsonElement GetPropertyFromRoot(ReadOnlySpan`1<char> path);
    [NullableContextAttribute("0")]
private JsonElement GetOriginal(ReadOnlySpan`1<char> path);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.JsonPatch.JsonPatchOperation : ValueType {
    [CompilerGeneratedAttribute]
private JsonPatchOperationKind <Kind>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RawJsonValue>k__BackingField;
    public JsonPatchOperationKind Kind { get; }
    [NullableAttribute("1")]
public string Path { get; }
    public string From { get; }
    public string RawJsonValue { get; }
    public JsonPatchOperation(JsonPatchOperationKind kind, string path, string from, string rawJsonValue);
    [CompilerGeneratedAttribute]
public JsonPatchOperationKind get_Kind();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public string get_From();
    [CompilerGeneratedAttribute]
public string get_RawJsonValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.JsonPatch.JsonPatchOperationKind : ValueType {
    private string _operation;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Add>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Remove>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Replace>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Move>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Copy>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonPatchOperationKind <Test>k__BackingField;
    public static JsonPatchOperationKind Add { get; }
    public static JsonPatchOperationKind Remove { get; }
    public static JsonPatchOperationKind Replace { get; }
    public static JsonPatchOperationKind Move { get; }
    public static JsonPatchOperationKind Copy { get; }
    public static JsonPatchOperationKind Test { get; }
    private JsonPatchOperationKind(string operation);
    private static JsonPatchOperationKind();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Add();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Remove();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Replace();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Move();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Copy();
    [CompilerGeneratedAttribute]
public static JsonPatchOperationKind get_Test();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.KeyValueAccumulator : ValueType {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, String[]> _accumulator;
    private Dictionary`2<string, List`1<string>> _expandingAccumulator;
    [CompilerGeneratedAttribute]
private int <ValueCount>k__BackingField;
    public bool HasValues { get; }
    public int KeyCount { get; }
    public int ValueCount { get; private set; }
    public void Append(string key, string value);
    public bool get_HasValues();
    public int get_KeyCount();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_ValueCount();
    [CompilerGeneratedAttribute]
private void set_ValueCount(int value);
    public Dictionary`2<string, String[]> GetResults();
}
internal class Azure.Core.MemoryResponse : Response {
    private static int NoStatusCode;
    private static string XmsClientRequestIdName;
    private int _status;
    private string _reasonPhrase;
    private IDictionary`2<string, List`1<string>> _headers;
    [CompilerGeneratedAttribute]
private Stream <ContentStream>k__BackingField;
    public int Status { get; }
    public string ReasonPhrase { get; }
    public Stream ContentStream { get; public set; }
    public string ClientRequestId { get; public set; }
    public virtual int get_Status();
    public virtual string get_ReasonPhrase();
    [CompilerGeneratedAttribute]
public virtual Stream get_ContentStream();
    [CompilerGeneratedAttribute]
public virtual void set_ContentStream(Stream value);
    public virtual string get_ClientRequestId();
    public virtual void set_ClientRequestId(string value);
    public void SetStatus(int status);
    public void SetReasonPhrase(string reasonPhrase);
    public void SetContent(Byte[] content);
    public void SetContent(string content);
    public virtual void Dispose();
    public void SetHeader(string name, string value);
    public void SetHeader(string name, IEnumerable`1<string> values);
    public void AddHeader(string name, string value);
    protected internal virtual bool ContainsHeader(string name);
    protected internal virtual IEnumerable`1<HttpHeader> EnumerateHeaders();
    protected internal virtual bool TryGetHeader(string name, String& value);
    protected internal virtual bool TryGetHeaderValues(string name, IEnumerable`1& values);
    private static string JoinHeaderValues(IEnumerable`1<string> values);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.MessageProcessingContext : ValueType {
    private HttpMessage _message;
    public DateTimeOffset StartTime { get; internal set; }
    public int RetryNumber { get; public set; }
    internal MessageProcessingContext(HttpMessage message);
    public DateTimeOffset get_StartTime();
    internal void set_StartTime(DateTimeOffset value);
    public int get_RetryNumber();
    public void set_RetryNumber(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.MultipartBoundary : object {
    private Int32[] _skipTable;
    private string _boundary;
    private bool _expectLeadingCrlf;
    [CompilerGeneratedAttribute]
private Byte[] <BoundaryBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FinalBoundaryLength>k__BackingField;
    public bool ExpectLeadingCrlf { get; public set; }
    public Byte[] BoundaryBytes { get; private set; }
    public int FinalBoundaryLength { get; private set; }
    public MultipartBoundary(string boundary, bool expectLeadingCrlf);
    private void Initialize(string boundary, bool expectLeadingCrlf);
    public int GetSkipValue(byte input);
    public bool get_ExpectLeadingCrlf();
    public void set_ExpectLeadingCrlf(bool value);
    [CompilerGeneratedAttribute]
public Byte[] get_BoundaryBytes();
    [CompilerGeneratedAttribute]
private void set_BoundaryBytes(Byte[] value);
    [CompilerGeneratedAttribute]
public int get_FinalBoundaryLength();
    [CompilerGeneratedAttribute]
private void set_FinalBoundaryLength(int value);
}
internal class Azure.Core.MultipartReader : object {
    public static int DefaultHeadersCountLimit;
    public static int DefaultHeadersLengthLimit;
    private static int DefaultBufferSize;
    private BufferedReadStream _stream;
    private MultipartBoundary _boundary;
    private MultipartReaderStream _currentStream;
    [CompilerGeneratedAttribute]
private int <HeadersCountLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <HeadersLengthLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <BodyLengthLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExpectBoundariesWithCRLF>k__BackingField;
    public int HeadersCountLimit { get; public set; }
    public int HeadersLengthLimit { get; public set; }
    public Nullable`1<long> BodyLengthLimit { get; public set; }
    public bool ExpectBoundariesWithCRLF { get; public set; }
    public MultipartReader(string boundary, Stream stream);
    public MultipartReader(string boundary, Stream stream, int bufferSize);
    [CompilerGeneratedAttribute]
public int get_HeadersCountLimit();
    [CompilerGeneratedAttribute]
public void set_HeadersCountLimit(int value);
    [CompilerGeneratedAttribute]
public int get_HeadersLengthLimit();
    [CompilerGeneratedAttribute]
public void set_HeadersLengthLimit(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_BodyLengthLimit();
    [CompilerGeneratedAttribute]
public void set_BodyLengthLimit(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public bool get_ExpectBoundariesWithCRLF();
    [CompilerGeneratedAttribute]
public void set_ExpectBoundariesWithCRLF(bool value);
    [AsyncStateMachineAttribute("Azure.Core.MultipartReader/<ReadNextSectionAsync>d__24")]
public Task`1<MultipartSection> ReadNextSectionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.MultipartReader/<ReadHeadersAsync>d__25")]
private Task`1<Dictionary`2<string, String[]>> ReadHeadersAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.MultipartReaderStream : Stream {
    private MultipartBoundary _boundary;
    private BufferedReadStream _innerStream;
    private ArrayPool`1<byte> _bytePool;
    private long _innerOffset;
    private long _position;
    private long _observedLength;
    private bool _finished;
    [CompilerGeneratedAttribute]
private bool <FinalBoundaryFound>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <LengthLimit>k__BackingField;
    public bool FinalBoundaryFound { get; private set; }
    public Nullable`1<long> LengthLimit { get; public set; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public MultipartReaderStream(BufferedReadStream stream, MultipartBoundary boundary);
    public MultipartReaderStream(BufferedReadStream stream, MultipartBoundary boundary, ArrayPool`1<byte> bytePool);
    [CompilerGeneratedAttribute]
public bool get_FinalBoundaryFound();
    [CompilerGeneratedAttribute]
private void set_FinalBoundaryFound(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_LengthLimit();
    [CompilerGeneratedAttribute]
public void set_LengthLimit(Nullable`1<long> value);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual void Flush();
    private void PositionInnerStream();
    private int UpdatePosition(int read);
    public virtual int Read(Byte[] buffer, int offset, int count);
    [AsyncStateMachineAttribute("Azure.Core.MultipartReaderStream/<ReadAsync>d__36")]
public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private bool SubMatch(ArraySegment`1<byte> segment1, Byte[] matchBytes, Int32& matchOffset, Int32& matchCount);
    private static int CompareBuffers(Byte[] buffer1, int offset1, Byte[] buffer2, int offset2, int count);
}
[ExtensionAttribute]
public static class Azure.Core.MultipartResponse : object {
    private static int KB;
    private static int ResponseLineSize;
    private static string MultipartContentTypePrefix;
    private static string ContentIdName;
    internal static InvalidOperationException InvalidBatchContentType(string contentType);
    internal static InvalidOperationException InvalidHttpStatusLine(string statusLine);
    internal static InvalidOperationException InvalidHttpHeaderLine(string headerLine);
    public static Response[] Parse(Response response, bool expectCrLf, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.MultipartResponse/<ParseAsync>d__8")]
public static Task`1<Response[]> ParseAsync(Response response, bool expectCrLf, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.MultipartResponse/<ParseAsync>d__9")]
internal static Task`1<Response[]> ParseAsync(Response parentResponse, bool expectBoundariesWithCRLF, bool async, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.MultipartResponse/<ReadLineAsync>d__10")]
[ExtensionAttribute]
internal static Task`1<string> ReadLineAsync(BufferedReadStream stream, bool async, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.MultipartResponse/<GetNextSectionAsync>d__11")]
[ExtensionAttribute]
internal static Task`1<MultipartSection> GetNextSectionAsync(MultipartReader reader, bool async, CancellationToken cancellationToken);
    private static bool GetBoundary(string contentType, String& batchBoundary);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.MultipartSection : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, String[]> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private Stream <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <BaseStreamOffset>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, String[]> Headers { get; public set; }
    public Stream Body { get; public set; }
    public Nullable`1<long> BaseStreamOffset { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, String[]> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(Dictionary`2<string, String[]> value);
    [CompilerGeneratedAttribute]
public Stream get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(Stream value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_BaseStreamOffset();
    [CompilerGeneratedAttribute]
public void set_BaseStreamOffset(Nullable`1<long> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.NextLinkOperationImplementation : object {
    internal static string NotSet;
    internal static string RehydrationTokenVersion;
    private static string ApiVersionParam;
    private static String[] FailureStates;
    private static String[] SuccessStates;
    private HeaderSource _headerSource;
    private Uri _startRequestUri;
    private OperationFinalStateVia _finalStateVia;
    private HttpPipeline _pipeline;
    [NullableAttribute("2")]
private string _apiVersion;
    [NullableAttribute("2")]
private string _lastKnownLocation;
    private string _nextRequestUri;
    [CompilerGeneratedAttribute]
private string <OperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMethod <RequestMethod>k__BackingField;
    public string OperationId { get; private set; }
    public RequestMethod RequestMethod { get; }
    private NextLinkOperationImplementation(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, HeaderSource headerSource, string lastKnownLocation, OperationFinalStateVia finalStateVia, string apiVersion, string operationId, bool isNextRequestPolling);
    private static NextLinkOperationImplementation();
    [CompilerGeneratedAttribute]
public string get_OperationId();
    [CompilerGeneratedAttribute]
private void set_OperationId(string value);
    [CompilerGeneratedAttribute]
public RequestMethod get_RequestMethod();
    public static IOperation Create(HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, HttpPipeline pipeline, RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia, bool skipApiVersionOverride, string apiVersionOverrideValue);
    public static IOperation`1<T> Create(IOperationSource`1<T> operationSource, IOperation operation);
    public static IOperation Create(HttpPipeline pipeline, RehydrationToken rehydrationToken);
    private static string ParseOperationId(Uri startRequestUri, string nextRequestUri);
    public RehydrationToken GetRehydrationToken();
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, Response response, OperationFinalStateVia finalStateVia);
    public static RehydrationToken GetRehydrationToken(RequestMethod requestMethod, Uri startRequestUri, string nextRequestUri, string headerSource, string lastKnownLocation, string finalStateVia, string operationId);
    [NullableContextAttribute("2")]
private static string ConstructStringValue(string value);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<UpdateStateAsync>d__29")]
public sealed virtual ValueTask`1<OperationState> UpdateStateAsync(bool async, CancellationToken cancellationToken);
    private static OperationState GetOperationStateFromFinalResponse(RequestMethod requestMethod, Response response);
    private void UpdateNextRequestUri(ResponseHeaders headers);
    internal static string AppendOrReplaceApiVersion(string uri, string apiVersion);
    [NullableContextAttribute("0")]
internal static bool TryGetApiVersion(Uri startRequestUri, ReadOnlySpan`1& apiVersion);
    [NullableContextAttribute("2")]
private string GetFinalUri(string resourceLocation);
    private Response GetResponse(string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.NextLinkOperationImplementation/<GetResponseAsync>d__36")]
private ValueTask`1<Response> GetResponseAsync(string uri, CancellationToken cancellationToken);
    private HttpMessage CreateRequest(string uri);
    private static bool IsFinalState(Response response, HeaderSource headerSource, Nullable`1& failureState, String& resourceLocation);
    private static string GetRequiredString(JsonElement& element);
    private static bool ShouldIgnoreHeader(RequestMethod method, Response response);
    private static HeaderSource GetHeaderSource(RequestMethod requestMethod, Uri requestUri, Response response, string apiVersion, String& nextRequestUri, Boolean& isNextRequestPolling);
    private static void AssertNotNull(T value, string name);
}
internal enum Azure.Core.OperationFinalStateVia : Enum {
    public int value__;
    public static OperationFinalStateVia AzureAsyncOperation;
    public static OperationFinalStateVia Location;
    public static OperationFinalStateVia OriginalUri;
    public static OperationFinalStateVia OperationLocation;
    public static OperationFinalStateVia LocationOverride;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal : OperationInternalBase {
    private OperationInternal`1<VoidValue> _internalOperation;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public OperationInternal(IOperation operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal(OperationState finalState);
    public static OperationInternal Succeeded(Response rawResponse);
    public static OperationInternal Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal/<UpdateStatusAsync>d__9")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationInternal`1 : OperationInternalBase {
    private IOperation`1<T> _operation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLockWithValue`1<OperationState`1<T>> _stateLock;
    private Response _rawResponse;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasValue { get; }
    public T Value { get; }
    public OperationInternal`1(IOperation`1<T> operation, ClientDiagnostics clientDiagnostics, Response rawResponse, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    internal OperationInternal`1(OperationState`1<T> finalState);
    public static OperationInternal`1<T> Succeeded(Response rawResponse, T value);
    public static OperationInternal`1<T> Failed(Response rawResponse, RequestFailedException operationFailedException);
    public virtual Response get_RawResponse();
    public virtual bool get_HasCompleted();
    public bool get_HasValue();
    public T get_Value();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__15")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__16")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<WaitForCompletionAsync>d__19")]
private ValueTask`1<Response`1<T>> WaitForCompletionAsync(bool async, Nullable`1<TimeSpan> pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternal`1/<UpdateStatusAsync>d__20")]
protected virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    private static Response GetResponseFromState(OperationState`1<T> state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Azure.Core.OperationInternalBase : object {
    private ClientDiagnostics _diagnostics;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, string> _scopeAttributes;
    [NullableAttribute("2")]
private DelayStrategy _fallbackStrategy;
    private AsyncLockWithValue`1<Response> _responseLock;
    private string _waitForCompletionResponseScopeName;
    protected string _updateStatusScopeName;
    protected string _waitForCompletionScopeName;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    protected OperationInternalBase(Response rawResponse);
    protected OperationInternalBase(ClientDiagnostics clientDiagnostics, string operationTypeName, IEnumerable`1<KeyValuePair`2<string, string>> scopeAttributes, DelayStrategy fallbackStrategy);
    public abstract virtual Response get_RawResponse();
    public abstract virtual bool get_HasCompleted();
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<UpdateStatusAsync>d__13")]
public ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__15")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__16")]
public ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationInternalBase/<WaitForCompletionResponseAsync>d__19")]
protected ValueTask`1<Response> WaitForCompletionResponseAsync(bool async, Nullable`1<TimeSpan> pollingInterval, string scopeName, CancellationToken cancellationToken);
    protected abstract virtual ValueTask`1<Response> UpdateStatusAsync(bool async, CancellationToken cancellationToken);
    protected DiagnosticScope CreateScope(string scopeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.OperationPoller : object {
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public OperationPoller(DelayStrategy strategy);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public ValueTask`1<Response> WaitForCompletionResponseAsync(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response WaitForCompletionResponse(OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__6`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(Operation`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__8`1")]
public ValueTask`1<Response`1<T>> WaitForCompletionAsync(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    public Response`1<T> WaitForCompletion(OperationInternal`1<T> operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__10")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, Operation operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<WaitForCompletionAsync>d__11")]
private ValueTask`1<Response> WaitForCompletionAsync(bool async, OperationInternalBase operation, Nullable`1<TimeSpan> delayHint, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.OperationPoller/<Delay>d__12")]
private static ValueTask Delay(bool async, TimeSpan delay, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState : ValueType {
    [CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    [NullableAttribute("2")]
public RequestFailedException OperationFailedException { get; }
    private OperationState(Response rawResponse, bool hasCompleted, bool hasSucceeded, RequestFailedException operationFailedException);
    [CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    public static OperationState Success(Response rawResponse);
    public static OperationState Failure(Response rawResponse, RequestFailedException operationFailedException);
    public static OperationState Pending(Response rawResponse);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.OperationState`1 : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Response <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSucceeded>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestFailedException <OperationFailedException>k__BackingField;
    [NullableAttribute("1")]
public Response RawResponse { get; }
    public bool HasCompleted { get; }
    public bool HasSucceeded { get; }
    public T Value { get; }
    public RequestFailedException OperationFailedException { get; }
    private OperationState`1(Response rawResponse, bool hasCompleted, bool hasSucceeded, T value, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Response get_RawResponse();
    [CompilerGeneratedAttribute]
public bool get_HasCompleted();
    [CompilerGeneratedAttribute]
public bool get_HasSucceeded();
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public RequestFailedException get_OperationFailedException();
    [NullableContextAttribute("1")]
public static OperationState`1<T> Success(Response rawResponse, T value);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Failure(Response rawResponse, RequestFailedException operationFailedException);
    [NullableContextAttribute("1")]
public static OperationState`1<T> Pending(Response rawResponse);
}
internal static class Azure.Core.Pipeline.ActivityExtensions : object {
    [CompilerGeneratedAttribute]
private static bool <SupportsActivitySource>k__BackingField;
    public static bool SupportsActivitySource { get; private set; }
    private static ActivityExtensions();
    [CompilerGeneratedAttribute]
public static bool get_SupportsActivitySource();
    [CompilerGeneratedAttribute]
private static void set_SupportsActivitySource(bool value);
    public static void ResetFeatureSwitch();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.BearerTokenAuthenticationPolicy : HttpPipelinePolicy {
    private String[] _scopes;
    private AccessTokenCache _accessTokenCache;
    public BearerTokenAuthenticationPolicy(TokenCredential credential, string scope);
    public BearerTokenAuthenticationPolicy(TokenCredential credential, IEnumerable`1<string> scopes);
    internal BearerTokenAuthenticationPolicy(TokenCredential credential, IEnumerable`1<string> scopes, TimeSpan tokenRefreshOffset, TimeSpan tokenRefreshRetryDelay);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    protected virtual ValueTask AuthorizeRequestAsync(HttpMessage message);
    protected virtual void AuthorizeRequest(HttpMessage message);
    [NullableContextAttribute("0")]
protected virtual ValueTask`1<bool> AuthorizeRequestOnChallengeAsync(HttpMessage message);
    protected virtual bool AuthorizeRequestOnChallenge(HttpMessage message);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.BearerTokenAuthenticationPolicy/<ProcessAsync>d__11")]
private ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.BearerTokenAuthenticationPolicy/<AuthenticateAndAuthorizeRequestAsync>d__12")]
protected ValueTask AuthenticateAndAuthorizeRequestAsync(HttpMessage message, TokenRequestContext context);
    protected void AuthenticateAndAuthorizeRequest(HttpMessage message, TokenRequestContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientDiagnostics : DiagnosticScopeFactory {
    public ClientDiagnostics(ClientOptions options, Nullable`1<bool> suppressNestedClientActivities);
    public ClientDiagnostics(string optionsNamespace, string providerNamespace, DiagnosticsOptions diagnosticsOptions, Nullable`1<bool> suppressNestedClientActivities);
    internal static HttpMessageSanitizer CreateMessageSanitizer(DiagnosticsOptions diagnostics);
    internal static string GetResourceProviderNamespace(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ClientRequestIdPolicy : HttpPipelineSynchronousPolicy {
    internal static string ClientRequestIdHeader;
    internal static string EchoClientRequestId;
    [CompilerGeneratedAttribute]
private static ClientRequestIdPolicy <Shared>k__BackingField;
    public static ClientRequestIdPolicy Shared { get; }
    private static ClientRequestIdPolicy();
    [CompilerGeneratedAttribute]
public static ClientRequestIdPolicy get_Shared();
    public virtual void OnSendingRequest(HttpMessage message);
}
internal static class Azure.Core.Pipeline.ContentTypeUtilities : object {
    public static bool TryGetTextEncoding(string contentType, Encoding& encoding);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DefaultRequestFailedDetailsParser : RequestFailedDetailsParser {
    public virtual bool TryParse(Response response, ResponseError& error, IDictionary`2& data);
    public static bool TryParseDetails(Response response, ResponseError& error, IDictionary`2& data);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Pipeline.DiagnosticScope : ValueType {
    private static string AzureSdkScopeLabel;
    internal static string OpenTelemetrySchemaAttribute;
    internal static string OpenTelemetrySchemaVersion;
    private static object AzureSdkScopeValue;
    [NullableAttribute("2")]
private ActivityAdapter _activityAdapter;
    private bool _suppressNestedClientActivities;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; }
    [RequiresUnreferencedCodeAttribute("The diagnosticSourceArgs are used in a call to DiagnosticSource.Write, all necessary properties need to be preserved on the type being passed in using DynamicDependency attributes.")]
internal DiagnosticScope(string scopeName, DiagnosticListener source, object diagnosticSourceArgs, ActivitySource activitySource, ActivityKind kind, bool suppressNestedClientActivities);
    private static DiagnosticScope();
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    public void AddAttribute(string name, string value);
    public void AddIntegerAttribute(string name, int value);
    public void AddLongAttribute(string name, long value);
    public void AddAttribute(string name, T value, Func`2<T, string> format);
    public void AddLink(string traceparent, string tracestate, IDictionary`2<string, object> attributes);
    public void Start();
    public void SetDisplayName(string displayName);
    public void SetStartTime(DateTime dateTime);
    public void SetTraceContext(string traceparent, string tracestate);
    public sealed virtual void Dispose();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(Exception exception);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
public void Failed(string errorCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.DiagnosticScopeFactory : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, DiagnosticListener> _listeners;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    [NullableAttribute("2")]
private DiagnosticListener _source;
    private bool _suppressNestedClientActivities;
    private bool _isStable;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<string, ActivitySource> ActivitySources;
    [CompilerGeneratedAttribute]
private bool <IsActivityEnabled>k__BackingField;
    public bool IsActivityEnabled { get; }
    public DiagnosticScopeFactory(string clientNamespace, string resourceProviderNamespace, bool isActivityEnabled, bool suppressNestedClientActivities, bool isStable);
    private static DiagnosticScopeFactory();
    [CompilerGeneratedAttribute]
public bool get_IsActivityEnabled();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
public DiagnosticScope CreateScope(string name, ActivityKind kind);
    private ActivitySource GetActivitySource(string ns, string name);
}
public class Azure.Core.Pipeline.DisposableHttpPipeline : HttpPipeline {
    private bool isTransportOwnedInternally;
    [NullableContextAttribute("1")]
internal DisposableHttpPipeline(HttpPipelineTransport transport, int perCallIndex, int perRetryIndex, HttpPipelinePolicy[] policies, ResponseClassifier responseClassifier, bool isTransportOwnedInternally);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.GeoRedundantFallbackPolicy : HttpPipelineSynchronousPolicy {
    private Fallback _writeFallback;
    private Fallback _readFallback;
    public GeoRedundantFallbackPolicy(String[] readFallbackHosts, String[] writeFallbackHosts, Nullable`1<TimeSpan> primaryCoolDown);
    public static void SetHostAffinity(HttpMessage message, bool hostAffinity);
    private static bool GetHostAffinity(HttpMessage message);
    private static void SetPrimaryHost(HttpMessage message);
    private static string GetPrimaryHost(HttpMessage message);
    public virtual void OnSendingRequest(HttpMessage message);
    private static void UpdateHostIfNeeded(HttpMessage message, Fallback fallback);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.HttpClientTransport : HttpPipelineTransport {
    internal static string MessageForServerCertificateCallback;
    public static HttpClientTransport Shared;
    [CompilerGeneratedAttribute]
private HttpClient <Client>k__BackingField;
    internal HttpClient Client { get; }
    [NullableContextAttribute("2")]
internal HttpClientTransport(HttpPipelineTransportOptions options);
    public HttpClientTransport(HttpMessageHandler messageHandler);
    public HttpClientTransport(HttpClient client);
    private static HttpClientTransport();
    [CompilerGeneratedAttribute]
internal HttpClient get_Client();
    public sealed virtual Request CreateRequest();
    public virtual void Process(HttpMessage message);
    public virtual ValueTask ProcessAsync(HttpMessage message);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.HttpClientTransport/<ProcessSyncOrAsync>d__12")]
private ValueTask ProcessSyncOrAsync(HttpMessage message, bool async);
    private static HttpClient CreateDefaultClient(HttpPipelineTransportOptions options);
    private static HttpMessageHandler CreateDefaultHandler(HttpPipelineTransportOptions options);
    private static void SetProxySettings(HttpMessageHandler messageHandler);
    private static SocketsHttpHandler ApplyOptionsToHandler(SocketsHttpHandler httpHandler, HttpPipelineTransportOptions options);
    public sealed virtual void Dispose();
    private static void SetPropertiesOrOptions(HttpRequestMessage httpRequest, string name, T value);
    private static bool UseCookies();
    private static HttpRequestMessage BuildRequestMessage(HttpMessage message);
    internal static bool TryGetHeader(HttpHeaders headers, HttpContent content, string name, String& value);
    internal static bool TryGetHeader(HttpHeaders headers, HttpContent content, string name, IEnumerable`1& values);
    [IteratorStateMachineAttribute("Azure.Core.Pipeline.HttpClientTransport/<GetHeaders>d__24")]
internal static IEnumerable`1<HttpHeader> GetHeaders(HttpHeaders headers, HttpContent content);
    internal static bool RemoveHeader(HttpHeaders headers, HttpContent content, string name);
    internal static bool ContainsHeader(HttpHeaders headers, HttpContent content, string name);
    private static string JoinHeaderValues(HeaderStringValues values);
}
internal class Azure.Core.Pipeline.HttpEnvironmentProxy : object {
    private static string EnvAllProxyUC;
    private static string EnvAllProxyLC;
    private static string EnvHttpProxyLC;
    private static string EnvHttpProxyUC;
    private static string EnvHttpsProxyLC;
    private static string EnvHttpsProxyUC;
    private static string EnvNoProxyLC;
    private static string EnvNoProxyUC;
    private static string EnvCGI;
    private Uri _httpProxyUri;
    private Uri _httpsProxyUri;
    private String[] _bypass;
    private ICredentials _credentials;
    public ICredentials Credentials { get; public set; }
    private HttpEnvironmentProxy(Uri httpProxy, Uri httpsProxy, string bypassList);
    public static bool TryCreate(IWebProxy& proxy);
    private static Uri GetUriFromString(string value);
    private bool IsMatchInBypassList(Uri input);
    public sealed virtual Uri GetProxy(Uri uri);
    public sealed virtual bool IsBypassed(Uri uri);
    public sealed virtual ICredentials get_Credentials();
    public sealed virtual void set_Credentials(ICredentials value);
}
internal class Azure.Core.Pipeline.HttpEnvironmentProxyCredentials : object {
    private NetworkCredential _httpCred;
    private NetworkCredential _httpsCred;
    private Uri _httpProxy;
    private Uri _httpsProxy;
    public HttpEnvironmentProxyCredentials(Uri httpProxy, NetworkCredential httpCred, Uri httpsProxy, NetworkCredential httpsCred);
    public sealed virtual NetworkCredential GetCredential(Uri uri, string authType);
    public static HttpEnvironmentProxyCredentials TryCreate(Uri httpProxy, Uri httpsProxy);
    private static NetworkCredential GetCredentialsFromString(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.HttpPipeline : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static AsyncLocal`1<HttpMessagePropertiesScope> CurrentHttpMessagePropertiesScope;
    private protected HttpPipelineTransport _transport;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ReadOnlyMemory`1<HttpPipelinePolicy> _pipeline;
    private bool _internallyConstructed;
    private int _perCallIndex;
    private int _perRetryIndex;
    [CompilerGeneratedAttribute]
private ResponseClassifier <ResponseClassifier>k__BackingField;
    public ResponseClassifier ResponseClassifier { get; }
    public HttpPipeline(HttpPipelineTransport transport, HttpPipelinePolicy[] policies, ResponseClassifier responseClassifier);
    internal HttpPipeline(HttpPipelineTransport transport, int perCallIndex, int perRetryIndex, HttpPipelinePolicy[] pipeline, ResponseClassifier responseClassifier);
    private static HttpPipeline();
    public Request CreateRequest();
    public HttpMessage CreateMessage();
    public HttpMessage CreateMessage(RequestContext context);
    [NullableContextAttribute("2")]
public HttpMessage CreateMessage(RequestContext context, ResponseClassifier classifier);
    [CompilerGeneratedAttribute]
public ResponseClassifier get_ResponseClassifier();
    public ValueTask SendAsync(HttpMessage message, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.HttpPipeline/<SendAsync>d__16")]
private ValueTask SendAsync(HttpMessage message);
    public void Send(HttpMessage message, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.HttpPipeline/<SendRequestAsync>d__18")]
public ValueTask`1<Response> SendRequestAsync(Request request, CancellationToken cancellationToken);
    public Response SendRequest(Request request, CancellationToken cancellationToken);
    public static IDisposable CreateClientRequestIdScope(string clientRequestId);
    public static IDisposable CreateHttpMessagePropertiesScope(IDictionary`2<string, object> messageProperties);
    private ReadOnlyMemory`1<HttpPipelinePolicy> CreateRequestPipeline(HttpPipelinePolicy[] policies, List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> customPolicies);
    private static int AddCustomPolicies(List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> source, HttpPipelinePolicy[] target, HttpPipelinePosition position, int start);
    private static void AddHttpMessageProperties(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Azure.Core.Pipeline.HttpPipelineBuilder : object {
    private static int DefaultPolicyCount;
    private static HttpPipelineBuilder();
    public static HttpPipeline Build(ClientOptions options, HttpPipelinePolicy[] perRetryPolicies);
    public static HttpPipeline Build(ClientOptions options, HttpPipelinePolicy[] perCallPolicies, HttpPipelinePolicy[] perRetryPolicies, ResponseClassifier responseClassifier);
    public static DisposableHttpPipeline Build(ClientOptions options, HttpPipelinePolicy[] perCallPolicies, HttpPipelinePolicy[] perRetryPolicies, HttpPipelineTransportOptions transportOptions, ResponseClassifier responseClassifier);
    public static HttpPipeline Build(HttpPipelineOptions options);
    public static DisposableHttpPipeline Build(HttpPipelineOptions options, HttpPipelineTransportOptions transportOptions);
    internal static ValueTuple`6<ResponseClassifier, HttpPipelineTransport, int, int, HttpPipelinePolicy[], bool> BuildInternal(HttpPipelineOptions buildOptions, HttpPipelineTransportOptions defaultTransportOptions);
    internal static TelemetryPolicy CreateTelemetryPolicy(ClientOptions options);
    [CompilerGeneratedAttribute]
internal static void <BuildInternal>g__AddUserPolicies|6_0(HttpPipelinePosition position, <>c__DisplayClass6_0& );
    [CompilerGeneratedAttribute]
internal static void <BuildInternal>g__AddNonNullPolicies|6_1(HttpPipelinePolicy[] policiesToAdd, <>c__DisplayClass6_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.HttpPipelineOptions : object {
    [CompilerGeneratedAttribute]
private ClientOptions <ClientOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<HttpPipelinePolicy> <PerCallPolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<HttpPipelinePolicy> <PerRetryPolicies>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ResponseClassifier <ResponseClassifier>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestFailedDetailsParser <RequestFailedDetailsParser>k__BackingField;
    public ClientOptions ClientOptions { get; }
    public IList`1<HttpPipelinePolicy> PerCallPolicies { get; }
    public IList`1<HttpPipelinePolicy> PerRetryPolicies { get; }
    [NullableAttribute("2")]
public ResponseClassifier ResponseClassifier { get; public set; }
    public RequestFailedDetailsParser RequestFailedDetailsParser { get; public set; }
    public HttpPipelineOptions(ClientOptions options);
    [CompilerGeneratedAttribute]
public ClientOptions get_ClientOptions();
    [CompilerGeneratedAttribute]
public IList`1<HttpPipelinePolicy> get_PerCallPolicies();
    [CompilerGeneratedAttribute]
public IList`1<HttpPipelinePolicy> get_PerRetryPolicies();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ResponseClassifier get_ResponseClassifier();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ResponseClassifier(ResponseClassifier value);
    [CompilerGeneratedAttribute]
public RequestFailedDetailsParser get_RequestFailedDetailsParser();
    [CompilerGeneratedAttribute]
public void set_RequestFailedDetailsParser(RequestFailedDetailsParser value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.Pipeline.HttpPipelinePolicy : object {
    public abstract virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public abstract virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    protected static ValueTask ProcessNextAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    protected static void ProcessNext(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DynamicallyAccessedMembersAttribute("8")]
public abstract class Azure.Core.Pipeline.HttpPipelineSynchronousPolicy : HttpPipelinePolicy {
    private static Type[] _onReceivedResponseParameters;
    private bool _hasOnReceivedResponse;
    private static HttpPipelineSynchronousPolicy();
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.HttpPipelineSynchronousPolicy/<InnerProcessAsync>d__5")]
private ValueTask InnerProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void OnSendingRequest(HttpMessage message);
    public virtual void OnReceivedResponse(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.Pipeline.HttpPipelineTransport : object {
    public abstract virtual void Process(HttpMessage message);
    public abstract virtual ValueTask ProcessAsync(HttpMessage message);
    public abstract virtual Request CreateRequest();
    internal static HttpPipelineTransport Create(HttpPipelineTransportOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.HttpPipelineTransportOptions : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<ServerCertificateCustomValidationArgs, bool> <ServerCertificateCustomValidationCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<X509Certificate2> <ClientCertificates>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsClientRedirectEnabled>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<ServerCertificateCustomValidationArgs, bool> ServerCertificateCustomValidationCallback { get; public set; }
    public IList`1<X509Certificate2> ClientCertificates { get; }
    public bool IsClientRedirectEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<ServerCertificateCustomValidationArgs, bool> get_ServerCertificateCustomValidationCallback();
    [CompilerGeneratedAttribute]
public void set_ServerCertificateCustomValidationCallback(Func`2<ServerCertificateCustomValidationArgs, bool> value);
    [CompilerGeneratedAttribute]
public IList`1<X509Certificate2> get_ClientCertificates();
    [CompilerGeneratedAttribute]
public bool get_IsClientRedirectEnabled();
    [CompilerGeneratedAttribute]
public void set_IsClientRedirectEnabled(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.HttpPipelineTransportPolicy : HttpPipelinePolicy {
    private HttpPipelineTransport _transport;
    private HttpMessageSanitizer _sanitizer;
    [NullableAttribute("2")]
private RequestFailedDetailsParser _errorParser;
    public HttpPipelineTransportPolicy(HttpPipelineTransport transport, HttpMessageSanitizer sanitizer, RequestFailedDetailsParser failureContentExtractor);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.HttpPipelineTransportPolicy/<ProcessAsync>d__4")]
public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.LoggingPolicy : HttpPipelinePolicy {
    private static double RequestTooLongTime;
    private static AzureCoreEventSource s_eventSource;
    private bool _logContent;
    private int _maxLength;
    private HttpMessageSanitizer _sanitizer;
    [NullableAttribute("2")]
private string _assemblyName;
    public LoggingPolicy(bool logContent, int maxLength, HttpMessageSanitizer sanitizer, string assemblyName);
    private static LoggingPolicy();
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.LoggingPolicy/<ProcessAsync>d__9")]
private ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ReadClientRequestIdPolicy : HttpPipelineSynchronousPolicy {
    public static string MessagePropertyKey;
    [CompilerGeneratedAttribute]
private static ReadClientRequestIdPolicy <Shared>k__BackingField;
    public static ReadClientRequestIdPolicy Shared { get; }
    private static ReadClientRequestIdPolicy();
    [CompilerGeneratedAttribute]
public static ReadClientRequestIdPolicy get_Shared();
    public virtual void OnSendingRequest(HttpMessage message);
}
internal abstract class Azure.Core.Pipeline.ReadOnlyStream : Stream {
    public bool CanWrite { get; }
    public virtual bool get_CanWrite();
    [NullableContextAttribute("1")]
public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void SetLength(long value);
    public virtual void Flush();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ReadTimeoutStream : ReadOnlyStream {
    private Stream _stream;
    private TimeSpan _readTimeout;
    private CancellationTokenSource _cancellationTokenSource;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public int ReadTimeout { get; public set; }
    public ReadTimeoutStream(Stream stream, TimeSpan readTimeout);
    public virtual int Read(Byte[] buffer, int offset, int count);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.ReadTimeoutStream/<ReadAsync>d__5")]
public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    private CancellationTokenSource StartTimeout(CancellationToken additionalToken, Boolean& dispose);
    private void InitializeTokenSource();
    private void DisposeStream();
    private void StopTimeout(CancellationTokenSource source, bool dispose);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual int get_ReadTimeout();
    public virtual void set_ReadTimeout(int value);
    private void UpdateReadTimeout();
    public virtual void Close();
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.RedirectPolicy : HttpPipelinePolicy {
    private int _maxAutomaticRedirections;
    private bool _allowAutoRedirects;
    [CompilerGeneratedAttribute]
private static RedirectPolicy <Shared>k__BackingField;
    internal static RedirectPolicy Shared { get; }
    internal RedirectPolicy(bool allowAutoRedirect);
    private static RedirectPolicy();
    [CompilerGeneratedAttribute]
internal static RedirectPolicy get_Shared();
    public static void SetAllowAutoRedirect(HttpMessage message, bool allowAutoRedirect);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.RedirectPolicy/<ProcessAsync>d__7")]
internal ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    private static Uri GetUriForRedirect(Request request, Response response);
    private static bool RequestRequiresForceGet(int statusCode, RequestMethod requestMethod);
    internal static bool IsSupportedSecureScheme(string scheme);
    internal static bool IsSecureWebSocketScheme(string scheme);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [NullableContextAttribute("2")]
private static bool TryParseValue(string value, Uri& parsedValue);
    private static string DecodeUtf8FromString(string input);
    private bool AllowAutoRedirect(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.RequestActivityPolicy : HttpPipelinePolicy {
    private bool _isDistributedTracingEnabled;
    [NullableAttribute("2")]
private string _resourceProviderNamespace;
    private HttpMessageSanitizer _sanitizer;
    private static string TraceParentHeaderName;
    private static string TraceStateHeaderName;
    private static string RequestIdHeaderName;
    private static DiagnosticListener s_diagnosticSource;
    private static ActivitySource s_activitySource;
    private bool ShouldCreateActivity { get; }
    private bool IsActivitySourceEnabled { get; }
    public RequestActivityPolicy(bool isDistributedTracingEnabled, string resourceProviderNamespace, HttpMessageSanitizer httpMessageSanitizer);
    private static RequestActivityPolicy();
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.RequestActivityPolicy/<ProcessAsync>d__11")]
private ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026")]
private DiagnosticScope CreateDiagnosticScope(T sourceArgs);
    private static ValueTask ProcessNextAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    private bool get_ShouldCreateActivity();
    private bool get_IsActivitySourceEnabled();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private string <ProcessAsync>b__11_0(RequestUriBuilder u);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ResponseBodyPolicy : HttpPipelinePolicy {
    private static int DefaultCopyBufferSize;
    private TimeSpan _networkTimeout;
    public ResponseBodyPolicy(TimeSpan networkTimeout);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.ResponseBodyPolicy/<ProcessAsync>d__5")]
private ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.ResponseBodyPolicy/<CopyToAsync>d__6")]
private Task CopyToAsync(Stream source, Stream destination, CancellationTokenSource cancellationTokenSource);
    private void CopyTo(Stream source, Stream destination, CancellationTokenSource cancellationTokenSource);
    [NullableContextAttribute("2")]
internal static void ThrowIfCancellationRequestedOrTimeout(CancellationToken originalToken, CancellationToken timeoutToken, Exception inner, TimeSpan timeout);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.RetryPolicy : HttpPipelinePolicy {
    private int _maxRetries;
    private DelayStrategy _delayStrategy;
    [NullableContextAttribute("2")]
public RetryPolicy(int maxRetries, DelayStrategy delayStrategy);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.RetryPolicy/<ProcessAsync>d__5")]
private ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
    [AsyncStateMachineAttribute("Azure.Core.Pipeline.RetryPolicy/<WaitAsync>d__6")]
internal virtual Task WaitAsync(TimeSpan time, CancellationToken cancellationToken);
    internal virtual void Wait(TimeSpan time, CancellationToken cancellationToken);
    protected internal virtual bool ShouldRetry(HttpMessage message, Exception exception);
    [NullableContextAttribute("0")]
protected internal virtual ValueTask`1<bool> ShouldRetryAsync(HttpMessage message, Exception exception);
    private bool ShouldRetryInternal(HttpMessage message, Exception exception);
    internal TimeSpan GetNextDelay(HttpMessage message, Nullable`1<TimeSpan> retryAfter);
    [NullableContextAttribute("0")]
internal ValueTask`1<TimeSpan> GetNextDelayAsync(HttpMessage message, Nullable`1<TimeSpan> retryAfter);
    protected internal virtual void OnSendingRequest(HttpMessage message);
    protected internal virtual ValueTask OnSendingRequestAsync(HttpMessage message);
    protected internal virtual void OnRequestSent(HttpMessage message);
    protected internal virtual ValueTask OnRequestSentAsync(HttpMessage message);
    private TimeSpan GetNextDelayInternal(HttpMessage message);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Azure.Core.Pipeline.ServerCertificateCustomValidationArgs : object {
    [CompilerGeneratedAttribute]
private X509Certificate2 <Certificate>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Chain <CertificateAuthorityChain>k__BackingField;
    [CompilerGeneratedAttribute]
private SslPolicyErrors <SslPolicyErrors>k__BackingField;
    public X509Certificate2 Certificate { get; }
    public X509Chain CertificateAuthorityChain { get; }
    public SslPolicyErrors SslPolicyErrors { get; }
    public ServerCertificateCustomValidationArgs(X509Certificate2 certificate, X509Chain certificateAuthorityChain, SslPolicyErrors sslPolicyErrors);
    [CompilerGeneratedAttribute]
public X509Certificate2 get_Certificate();
    [CompilerGeneratedAttribute]
public X509Chain get_CertificateAuthorityChain();
    [CompilerGeneratedAttribute]
public SslPolicyErrors get_SslPolicyErrors();
}
internal static class Azure.Core.Pipeline.ServicePointHelpers : object {
    private static int RuntimeDefaultConnectionLimit;
    private static int IncreasedConnectionLimit;
    private static int IncreasedConnectionLeaseTimeout;
    private static TimeSpan DefaultConnectionLeaseTimeoutTimeSpan;
    private static TimeSpan IncreasedConnectionLeaseTimeoutTimeSpan;
    private static ServicePointHelpers();
    [NullableContextAttribute("1")]
public static void SetLimits(HttpMessageHandler messageHandler);
}
[ExtensionAttribute]
internal static class Azure.Core.Pipeline.TaskExtensions : object {
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable AwaitWithCancellation(Task task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationTaskAwaitable`1<T> AwaitWithCancellation(Task`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static WithCancellationValueTaskAwaitable`1<T> AwaitWithCancellation(ValueTask`1<T> task, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static T EnsureCompleted(Task`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(Task task);
    [ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
    [ExtensionAttribute]
public static Enumerable`1<T> EnsureSyncEnumerable(IAsyncEnumerable`1<T> asyncEnumerable);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable`1<T> EnsureCompleted(ConfiguredValueTaskAwaitable`1<T> awaitable, bool async);
    [ExtensionAttribute]
public static ConfiguredValueTaskAwaitable EnsureCompleted(ConfiguredValueTaskAwaitable awaitable, bool async);
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.TelemetryPolicy : HttpPipelineSynchronousPolicy {
    private string _defaultHeader;
    public TelemetryPolicy(TelemetryDetails telemetryDetails);
    public virtual void OnSendingRequest(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Pipeline.ThreadSafeRandom : Random {
    private Random _random;
    public virtual int Next();
    public virtual int Next(int minValue, int maxValue);
    public virtual int Next(int maxValue);
    public virtual double NextDouble();
    public virtual void NextBytes(Byte[] buffer);
}
internal class Azure.Core.Pipeline.UserAgentValueKey : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.RehydrationOperation : Operation {
    private NextLinkOperationImplementation _nextLinkOperation;
    private OperationInternal _operation;
    public string Id { get; }
    public bool HasCompleted { get; }
    public RehydrationOperation(NextLinkOperationImplementation nextLinkOperation, OperationState operationState, ClientOptions options);
    public virtual string get_Id();
    public virtual Nullable`1<RehydrationToken> GetRehydrationToken();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Core.RehydrationOperation`1 : Operation`1<T> {
    private OperationInternal`1<T> _operation;
    private NextLinkOperationImplementation _nextLinkOperation;
    public T Value { get; }
    public bool HasValue { get; }
    public string Id { get; }
    public bool HasCompleted { get; }
    public RehydrationOperation`1(NextLinkOperationImplementation nextLinkOperation, OperationState`1<T> operationState, IOperation`1<T> operation, ClientOptions options);
    public virtual T get_Value();
    public virtual bool get_HasValue();
    public virtual string get_Id();
    public virtual Nullable`1<RehydrationToken> GetRehydrationToken();
    public virtual bool get_HasCompleted();
    public virtual Response GetRawResponse();
    public virtual Response UpdateStatus(CancellationToken cancellationToken);
    public virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.RehydrationToken : ValueType {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HeaderSource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextRequestUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InitialUri>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMethod <RequestMethod>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <LastKnownLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FinalStateVia>k__BackingField;
    public string Id { get; }
    internal string Version { get; }
    internal string HeaderSource { get; }
    internal string NextRequestUri { get; }
    internal string InitialUri { get; }
    internal RequestMethod RequestMethod { get; }
    [NullableAttribute("2")]
internal string LastKnownLocation { get; }
    internal string FinalStateVia { get; }
    internal RehydrationToken(string id, string version, string headerSource, string nextRequestUri, string initialUri, RequestMethod requestMethod, string lastKnownLocation, string finalStateVia);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal string get_Version();
    [CompilerGeneratedAttribute]
internal string get_HeaderSource();
    [CompilerGeneratedAttribute]
internal string get_NextRequestUri();
    [CompilerGeneratedAttribute]
internal string get_InitialUri();
    [CompilerGeneratedAttribute]
internal RequestMethod get_RequestMethod();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal string get_LastKnownLocation();
    [CompilerGeneratedAttribute]
internal string get_FinalStateVia();
    internal RehydrationToken DeserializeRehydrationToken(JsonElement element, ModelReaderWriterOptions options);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<Azure.Core.RehydrationToken>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override RehydrationToken System.ClientModel.Primitives.IJsonModel<Azure.Core.RehydrationToken>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<Azure.Core.RehydrationToken>.Write(ModelReaderWriterOptions options);
    private sealed virtual override RehydrationToken System.ClientModel.Primitives.IPersistableModel<Azure.Core.RehydrationToken>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<Azure.Core.RehydrationToken>.GetFormatFromOptions(ModelReaderWriterOptions options);
    private sealed virtual override BinaryData System.ClientModel.Primitives.IPersistableModel<System.Object>.Write(ModelReaderWriterOptions options);
    private sealed virtual override object System.ClientModel.Primitives.IPersistableModel<System.Object>.Create(BinaryData data, ModelReaderWriterOptions options);
    private sealed virtual override string System.ClientModel.Primitives.IPersistableModel<System.Object>.GetFormatFromOptions(ModelReaderWriterOptions options);
    private sealed virtual override void System.ClientModel.Primitives.IJsonModel<System.Object>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options);
    private sealed virtual override object System.ClientModel.Primitives.IJsonModel<System.Object>.Create(Utf8JsonReader& reader, ModelReaderWriterOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.Request : object {
    [NullableAttribute("2")]
private RequestUriBuilder _uri;
    [CompilerGeneratedAttribute]
private RequestMethod <Method>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestContent <Content>k__BackingField;
    public RequestUriBuilder Uri { get; public set; }
    public RequestMethod Method { get; public set; }
    [NullableAttribute("2")]
public RequestContent Content { get; public set; }
    public string ClientRequestId { get; public set; }
    public RequestHeaders Headers { get; }
    public virtual RequestUriBuilder get_Uri();
    public virtual void set_Uri(RequestUriBuilder value);
    [CompilerGeneratedAttribute]
public virtual RequestMethod get_Method();
    [CompilerGeneratedAttribute]
public virtual void set_Method(RequestMethod value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual RequestContent get_Content();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_Content(RequestContent value);
    protected internal abstract virtual void AddHeader(string name, string value);
    protected internal abstract virtual bool TryGetHeader(string name, String& value);
    protected internal abstract virtual bool TryGetHeaderValues(string name, IEnumerable`1& values);
    protected internal abstract virtual bool ContainsHeader(string name);
    protected internal virtual void SetHeader(string name, string value);
    protected internal abstract virtual bool RemoveHeader(string name);
    protected internal abstract virtual IEnumerable`1<HttpHeader> EnumerateHeaders();
    public abstract virtual string get_ClientRequestId();
    public abstract virtual void set_ClientRequestId(string value);
    public RequestHeaders get_Headers();
    public abstract virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.RequestContent : object {
    internal static string SerializationRequiresUnreferencedCode;
    private static Encoding s_UTF8NoBomEncoding;
    private static RequestContent();
    public static RequestContent Create(Stream stream);
    public static RequestContent Create(Byte[] bytes);
    public static RequestContent Create(Byte[] bytes, int index, int length);
    [NullableContextAttribute("0")]
public static RequestContent Create(ReadOnlyMemory`1<byte> bytes);
    [NullableContextAttribute("0")]
public static RequestContent Create(ReadOnlySequence`1<byte> bytes);
    public static RequestContent Create(string content);
    public static RequestContent Create(BinaryData content);
    public static RequestContent Create(DynamicData content);
    [RequiresUnreferencedCodeAttribute("This method uses reflection-based serialization which is incompatible with trimming. Try using one of the 'Create' overloads that doesn't wrap a serialized version of an object.")]
[RequiresDynamicCodeAttribute("This method uses reflection-based serialization which is incompatible with trimming. Try using one of the 'Create' overloads that doesn't wrap a serialized version of an object.")]
public static RequestContent Create(object serializable);
    [RequiresUnreferencedCodeAttribute("This method uses reflection-based serialization which is incompatible with trimming. Try using one of the 'Create' overloads that doesn't wrap a serialized version of an object.")]
[RequiresDynamicCodeAttribute("This method uses reflection-based serialization which is incompatible with trimming. Try using one of the 'Create' overloads that doesn't wrap a serialized version of an object.")]
public static RequestContent Create(object serializable, ObjectSerializer serializer);
    [RequiresUnreferencedCodeAttribute("This method uses reflection-based serialization which is incompatible with trimming. Try using one of the 'Create' overloads that doesn't wrap a serialized version of an object.")]
[RequiresDynamicCodeAttribute("This method uses reflection-based serialization which is incompatible with trimming. Try using one of the 'Create' overloads that doesn't wrap a serialized version of an object.")]
public static RequestContent Create(object serializable, JsonPropertyNames propertyNameFormat, string dateTimeFormat);
    public static RequestContent op_Implicit(string content);
    public static RequestContent op_Implicit(BinaryData content);
    public static RequestContent op_Implicit(DynamicData content);
    public abstract virtual Task WriteToAsync(Stream stream, CancellationToken cancellation);
    public abstract virtual void WriteTo(Stream stream, CancellationToken cancellation);
    public abstract virtual bool TryComputeLength(Int64& length);
    public abstract virtual void Dispose();
}
public abstract class Azure.Core.RequestFailedDetailsParser : object {
    [NullableContextAttribute("1")]
public abstract virtual bool TryParse(Response response, ResponseError& error, IDictionary`2& data);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.RequestHeaders : ValueType {
    private Request _request;
    internal RequestHeaders(Request request);
    public sealed virtual IEnumerator`1<HttpHeader> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public void Add(HttpHeader header);
    public void Add(string name, string value);
    public bool TryGetValue(string name, String& value);
    public bool TryGetValues(string name, IEnumerable`1& values);
    public bool Contains(string name);
    public void SetValue(string name, string value);
    public bool Remove(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.RequestMethod : ValueType {
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Get>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Post>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Put>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Patch>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Delete>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Head>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestMethod <Trace>k__BackingField;
    public string Method { get; }
    public static RequestMethod Get { get; }
    public static RequestMethod Post { get; }
    public static RequestMethod Put { get; }
    public static RequestMethod Patch { get; }
    public static RequestMethod Delete { get; }
    public static RequestMethod Head { get; }
    public static RequestMethod Options { get; }
    public static RequestMethod Trace { get; }
    public RequestMethod(string method);
    private static RequestMethod();
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Get();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Post();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Put();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Patch();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Delete();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Head();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Options();
    [CompilerGeneratedAttribute]
public static RequestMethod get_Trace();
    public static RequestMethod Parse(string method);
    public sealed virtual bool Equals(RequestMethod other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(RequestMethod left, RequestMethod right);
    public static bool op_Inequality(RequestMethod left, RequestMethod right);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.RequestUriBuilder : object {
    private static char QuerySeparator;
    private static char PathSeparator;
    private StringBuilder _pathAndQuery;
    private int _queryIndex;
    [NullableAttribute("2")]
private Uri _uri;
    private int _port;
    [NullableAttribute("2")]
private string _host;
    [NullableAttribute("2")]
private string _scheme;
    [NullableAttribute("2")]
public string Scheme { get; public set; }
    [NullableAttribute("2")]
public string Host { get; public set; }
    public int Port { get; public set; }
    public string Query { get; public set; }
    public string Path { get; public set; }
    protected bool HasPath { get; }
    protected bool HasQuery { get; }
    private int PathLength { get; }
    private int QueryLength { get; }
    public string PathAndQuery { get; }
    private bool HasDefaultPortForScheme { get; }
    [NullableContextAttribute("2")]
public string get_Scheme();
    [NullableContextAttribute("2")]
public void set_Scheme(string value);
    [NullableContextAttribute("2")]
public string get_Host();
    [NullableContextAttribute("2")]
public void set_Host(string value);
    public int get_Port();
    public void set_Port(int value);
    public string get_Query();
    public void set_Query(string value);
    public string get_Path();
    public void set_Path(string value);
    protected bool get_HasPath();
    protected bool get_HasQuery();
    private int get_PathLength();
    private int get_QueryLength();
    public string get_PathAndQuery();
    public void Reset(Uri value);
    public Uri ToUri();
    public void AppendQuery(string name, string value);
    public void AppendQuery(string name, string value, bool escapeValue);
    [NullableContextAttribute("0")]
public void AppendQuery(ReadOnlySpan`1<char> name, ReadOnlySpan`1<char> value, bool escapeValue);
    public void AppendPath(string value);
    public void AppendPath(string value, bool escape);
    [NullableContextAttribute("0")]
public void AppendPath(ReadOnlySpan`1<char> value, bool escape);
    public virtual string ToString();
    private bool get_HasDefaultPortForScheme();
    private void ResetUri();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.ResourceIdentifier : object {
    internal static char Separator;
    private static string RootStringValue;
    private static string ProvidersKey;
    private static string SubscriptionsKey;
    private static string LocationsKey;
    private static string ResourceGroupKey;
    private static string SubscriptionStart;
    private static string ProviderStart;
    private bool _initialized;
    [NullableAttribute("2")]
private string _stringValue;
    private ResourceType _resourceType;
    private string _name;
    [NullableAttribute("2")]
private ResourceIdentifier _parent;
    private bool _isProviderResource;
    [NullableAttribute("2")]
private string _subscriptionId;
    [NullableAttribute("2")]
private string _provider;
    private Nullable`1<AzureLocation> _location;
    [NullableAttribute("2")]
private string _resourceGroupName;
    public static ResourceIdentifier Root;
    private string StringValue { get; }
    public ResourceType ResourceType { get; }
    public string Name { get; }
    [NullableAttribute("2")]
public ResourceIdentifier Parent { get; }
    internal bool IsProviderResource { get; }
    [NullableAttribute("2")]
public string SubscriptionId { get; }
    [NullableAttribute("2")]
public string Provider { get; }
    public Nullable`1<AzureLocation> Location { get; }
    [NullableAttribute("2")]
public string ResourceGroupName { get; }
    public ResourceIdentifier(string resourceId);
    private ResourceIdentifier(ResourceIdentifier parent, ResourceType resourceType, string resourceName, bool isProviderResource, SpecialType specialType);
    private static ResourceIdentifier();
    private void Init(ResourceIdentifier parent, ResourceType resourceType, string resourceName, bool isProviderResource, SpecialType specialType);
    [NullableContextAttribute("2")]
private string Parse();
    [NullableContextAttribute("2")]
private string CheckSubscriptionFormat();
    private T GetValue(T& value);
    [NullableContextAttribute("0")]
private static ResourceType ChooseResourceType(ReadOnlySpan`1<char> resourceTypeName, ResourceIdentifier parent, SpecialType& specialType);
    [NullableContextAttribute("0")]
private static string GetNextParts(ResourceIdentifier parent, ReadOnlySpan`1& remaining, ReadOnlySpan`1& nextWord, Nullable`1& parts);
    [NullableContextAttribute("0")]
private static ReadOnlySpan`1<char> PopNextWord(ReadOnlySpan`1& remaining);
    private string get_StringValue();
    public ResourceType get_ResourceType();
    public string get_Name();
    [NullableContextAttribute("2")]
public ResourceIdentifier get_Parent();
    internal bool get_IsProviderResource();
    [NullableContextAttribute("2")]
public string get_SubscriptionId();
    [NullableContextAttribute("2")]
public string get_Provider();
    public Nullable`1<AzureLocation> get_Location();
    [NullableContextAttribute("2")]
public string get_ResourceGroupName();
    private string ToResourceString();
    public virtual string ToString();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(ResourceIdentifier other);
    [NullableContextAttribute("2")]
public sealed virtual int CompareTo(ResourceIdentifier other);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    public static string op_Implicit(ResourceIdentifier id);
    public static bool op_Equality(ResourceIdentifier left, ResourceIdentifier right);
    public static bool op_Inequality(ResourceIdentifier left, ResourceIdentifier right);
    public static bool op_LessThan(ResourceIdentifier left, ResourceIdentifier right);
    public static bool op_LessThanOrEqual(ResourceIdentifier left, ResourceIdentifier right);
    public static bool op_GreaterThan(ResourceIdentifier left, ResourceIdentifier right);
    public static bool op_GreaterThanOrEqual(ResourceIdentifier left, ResourceIdentifier right);
    public static ResourceIdentifier Parse(string input);
    [NullableContextAttribute("2")]
public static bool TryParse(string input, ResourceIdentifier& result);
    [EditorBrowsableAttribute("1")]
public ResourceIdentifier AppendProviderResource(string providerNamespace, string resourceType, string resourceName);
    [EditorBrowsableAttribute("1")]
public ResourceIdentifier AppendChildResource(string childResourceType, string childResourceName);
    private static void ValidateProviderResourceParameters(string providerNamespace, string resourceType, string resourceName);
    private static void ValidateChildResourceParameters(string childResourceType, string childResourceName);
    private static void ValidatePathSegment(string segment, string parameterName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.ResourceType : ValueType {
    internal static ResourceType Tenant;
    internal static ResourceType Subscription;
    internal static ResourceType ResourceGroup;
    internal static ResourceType Provider;
    internal static string ResourceNamespace;
    private string _stringValue;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Namespace { get; }
    public string Type { get; }
    public ResourceType(string resourceType);
    internal ResourceType(string providerNamespace, string name);
    private ResourceType(string providerNamespace, string name, string fullName);
    private static ResourceType();
    internal ResourceType AppendChild(string childType);
    [EditorBrowsableAttribute("1")]
public string GetLastType();
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public string get_Type();
    public static ResourceType op_Implicit(string resourceType);
    public static string op_Implicit(ResourceType resourceType);
    public static bool op_Equality(ResourceType left, ResourceType right);
    public static bool op_Inequality(ResourceType left, ResourceType right);
    public sealed virtual bool Equals(ResourceType other);
    public virtual string ToString();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
public abstract class Azure.Core.ResponseClassificationHandler : object {
    [NullableContextAttribute("1")]
public abstract virtual bool TryClassify(HttpMessage message, Boolean& isError);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.ResponseClassifier : object {
    [CompilerGeneratedAttribute]
private static ResponseClassifier <Shared>k__BackingField;
    internal static ResponseClassifier Shared { get; }
    private static ResponseClassifier();
    [CompilerGeneratedAttribute]
internal static ResponseClassifier get_Shared();
    public virtual bool IsRetriableResponse(HttpMessage message);
    public virtual bool IsRetriableException(Exception exception);
    public virtual bool IsRetriable(HttpMessage message, Exception exception);
    public virtual bool IsErrorResponse(HttpMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.ResponseHeaders : ValueType {
    private static string RetryAfterHeaderName;
    private static string RetryAfterMsHeaderName;
    private static string XRetryAfterMsHeaderName;
    private Response _response;
    public Nullable`1<DateTimeOffset> Date { get; }
    [NullableAttribute("2")]
public string ContentType { get; }
    public Nullable`1<int> ContentLength { get; }
    public Nullable`1<long> ContentLengthLong { get; }
    public Nullable`1<ETag> ETag { get; }
    [NullableAttribute("2")]
public string RequestId { get; }
    internal Nullable`1<TimeSpan> RetryAfter { get; }
    internal ResponseHeaders(Response response);
    public Nullable`1<DateTimeOffset> get_Date();
    [NullableContextAttribute("2")]
public string get_ContentType();
    public Nullable`1<int> get_ContentLength();
    public Nullable`1<long> get_ContentLengthLong();
    public Nullable`1<ETag> get_ETag();
    [NullableContextAttribute("2")]
public string get_RequestId();
    internal Nullable`1<TimeSpan> get_RetryAfter();
    public sealed virtual IEnumerator`1<HttpHeader> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public bool TryGetValue(string name, String& value);
    public bool TryGetValues(string name, IEnumerable`1& values);
    public bool Contains(string name);
}
public enum Azure.Core.RetryMode : Enum {
    public int value__;
    public static RetryMode Fixed;
    public static RetryMode Exponential;
}
public class Azure.Core.RetryOptions : object {
    internal static int DefaultMaxRetries;
    internal static TimeSpan DefaultMaxDelay;
    internal static TimeSpan DefaultInitialDelay;
    [CompilerGeneratedAttribute]
private int <MaxRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Delay>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <MaxDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <NetworkTimeout>k__BackingField;
    public int MaxRetries { get; public set; }
    public TimeSpan Delay { get; public set; }
    public TimeSpan MaxDelay { get; public set; }
    public RetryMode Mode { get; public set; }
    public TimeSpan NetworkTimeout { get; public set; }
    [NullableContextAttribute("2")]
internal RetryOptions(RetryOptions retryOptions);
    private static RetryOptions();
    [CompilerGeneratedAttribute]
public int get_MaxRetries();
    [CompilerGeneratedAttribute]
public void set_MaxRetries(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Delay();
    [CompilerGeneratedAttribute]
public void set_Delay(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_MaxDelay();
    [CompilerGeneratedAttribute]
public void set_MaxDelay(TimeSpan value);
    [CompilerGeneratedAttribute]
public RetryMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(RetryMode value);
    [CompilerGeneratedAttribute]
public TimeSpan get_NetworkTimeout();
    [CompilerGeneratedAttribute]
public void set_NetworkTimeout(TimeSpan value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.RuntimeInformationWrapper : object {
    public string FrameworkDescription { get; }
    public string OSDescription { get; }
    public Architecture OSArchitecture { get; }
    public Architecture ProcessArchitecture { get; }
    public virtual string get_FrameworkDescription();
    public virtual string get_OSDescription();
    public virtual Architecture get_OSArchitecture();
    public virtual Architecture get_ProcessArchitecture();
    public virtual bool IsOSPlatform(OSPlatform osPlatform);
}
internal class Azure.Core.SequentialDelayStrategy : DelayStrategy {
    [NullableAttribute("1")]
private static TimeSpan[] _pollingSequence;
    private static TimeSpan _maxDelay;
    private static SequentialDelayStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
[RequiresUnreferencedCodeAttribute("This class utilizes reflection-based JSON serialization and deserialization which is not compatible with trimming.")]
[RequiresDynamicCodeAttribute("This class utilizes reflection-based JSON serialization and deserialization which is not compatible with trimming.")]
[JsonConverterAttribute("Azure.Core.Serialization.DynamicData/DynamicDataJsonConverter")]
public class Azure.Core.Serialization.DynamicData : object {
    internal static string RoundTripFormat;
    internal static string UnixFormat;
    private static MethodInfo GetPropertyMethod;
    private static MethodInfo SetPropertyMethod;
    private static MethodInfo GetEnumerableMethod;
    private static MethodInfo GetViaIndexerMethod;
    private static MethodInfo SetViaIndexerMethod;
    private MutableJsonElement _element;
    private DynamicDataOptions _options;
    private JsonSerializerOptions _serializerOptions;
    internal static string SerializationRequiresUnreferencedCodeClass;
    private static Dictionary`2<Type, MethodInfo> CastFromOperators;
    [DebuggerBrowsableAttribute("0")]
private string DebuggerDisplay { get; }
    internal DynamicData(MutableJsonElement element, DynamicDataOptions options);
    private static DynamicData();
    internal void WriteTo(Stream stream);
    private object GetProperty(string name);
    private string FormatPropertyName(string value);
    private object GetViaIndexer(object index);
    private IEnumerable GetEnumerable();
    private object SetProperty(string name, object value);
    private static bool HasTypeConverter(object value);
    private JsonElement ConvertType(object value);
    private object SetViaIndexer(object index, object value);
    private void SetPropertyInternal(string name, object value);
    private void SetInternal(MutableJsonElement& element, object value);
    [NullableContextAttribute("2")]
private T ConvertTo();
    public virtual string ToString();
    public sealed virtual void Dispose();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    internal bool Equals(DynamicData other);
    private bool NumberEqual(DynamicData other);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    private string get_DebuggerDisplay();
    private sealed virtual override DynamicMetaObject System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression parameter);
    public static bool op_Implicit(DynamicData value);
    public static string op_Implicit(DynamicData value);
    public static byte op_Implicit(DynamicData value);
    public static sbyte op_Implicit(DynamicData value);
    public static short op_Implicit(DynamicData value);
    public static ushort op_Implicit(DynamicData value);
    public static int op_Implicit(DynamicData value);
    public static UInt32 op_Implicit(DynamicData value);
    public static long op_Implicit(DynamicData value);
    public static ulong op_Implicit(DynamicData value);
    public static float op_Implicit(DynamicData value);
    public static double op_Implicit(DynamicData value);
    public static decimal op_Implicit(DynamicData value);
    public static DateTime op_Explicit(DynamicData value);
    public static DateTimeOffset op_Explicit(DynamicData value);
    public static Guid op_Explicit(DynamicData value);
    [NullableContextAttribute("2")]
public static bool op_Equality(DynamicData left, object right);
    [NullableContextAttribute("2")]
public static bool op_Inequality(DynamicData left, object right);
    private static string GetInvalidKindExceptionText(Type target, MutableJsonElement element);
    private static string GetInvalidFormatExceptionText(Type target, MutableJsonElement element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Core.Serialization.DynamicDataOptions : object {
    [CompilerGeneratedAttribute]
private JsonPropertyNames <PropertyNameFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateTimeFormat>k__BackingField;
    public JsonPropertyNames PropertyNameFormat { get; public set; }
    public string DateTimeFormat { get; public set; }
    public DynamicDataOptions(DynamicDataOptions options);
    [CompilerGeneratedAttribute]
public JsonPropertyNames get_PropertyNameFormat();
    [CompilerGeneratedAttribute]
public void set_PropertyNameFormat(JsonPropertyNames value);
    [CompilerGeneratedAttribute]
public string get_DateTimeFormat();
    [CompilerGeneratedAttribute]
public void set_DateTimeFormat(string value);
    internal static JsonSerializerOptions ToSerializerOptions(DynamicDataOptions options);
    internal static DynamicDataOptions FromSerializerOptions(JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Azure.Core.Serialization.DynamicDataProperty : ValueType {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicData <Value>k__BackingField;
    public string Name { get; }
    public DynamicData Value { get; }
    internal DynamicDataProperty(string name, DynamicData value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public DynamicData get_Value();
    private sealed virtual override DynamicMetaObject System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression parameter);
}
[NullableContextAttribute("1")]
public interface Azure.Core.Serialization.IMemberNameConverter {
    public abstract virtual string ConvertMemberName(MemberInfo member);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiresUnreferencedCodeAttribute("This class uses reflection-based JSON serialization and deserialization that is not compatible with trimming.")]
[RequiresDynamicCodeAttribute("This class uses reflection-based JSON serialization and deserialization that is not compatible with trimming.")]
public class Azure.Core.Serialization.JsonObjectSerializer : ObjectSerializer {
    private static int JsonIgnoreConditionAlways;
    [NullableAttribute("2")]
private static PropertyInfo s_jsonIgnoreAttributeCondition;
    private static bool s_jsonIgnoreAttributeConditionInitialized;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<MemberInfo, string> _cache;
    private JsonSerializerOptions _options;
    [CompilerGeneratedAttribute]
private static JsonObjectSerializer <Default>k__BackingField;
    public static JsonObjectSerializer Default { get; }
    public JsonObjectSerializer(JsonSerializerOptions options);
    private static JsonObjectSerializer();
    [CompilerGeneratedAttribute]
public static JsonObjectSerializer get_Default();
    public virtual void Serialize(Stream stream, object value, Type inputType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.Serialization.JsonObjectSerializer/<SerializeAsync>d__11")]
public virtual ValueTask SerializeAsync(Stream stream, object value, Type inputType, CancellationToken cancellationToken);
    public virtual object Deserialize(Stream stream, Type returnType, CancellationToken cancellationToken);
    public virtual ValueTask`1<object> DeserializeAsync(Stream stream, Type returnType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public virtual BinaryData Serialize(object value, Type inputType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public virtual ValueTask`1<BinaryData> SerializeAsync(object value, Type inputType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private BinaryData SerializeToBinaryDataInternal(object value, Type inputType);
    private sealed virtual override string Azure.Core.Serialization.IMemberNameConverter.ConvertMemberName(MemberInfo member);
    private static int GetCondition(JsonIgnoreAttribute attribute);
    private string GetPropertyName(MemberInfo memberInfo);
    [CompilerGeneratedAttribute]
private string <Azure.Core.Serialization.IMemberNameConverter.ConvertMemberName>b__17_0(MemberInfo m);
}
public enum Azure.Core.Serialization.JsonPropertyNames : Enum {
    public int value__;
    public static JsonPropertyNames UseExact;
    public static JsonPropertyNames CamelCase;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Core.Serialization.ObjectSerializer : object {
    public abstract virtual void Serialize(Stream stream, object value, Type inputType, CancellationToken cancellationToken);
    public abstract virtual ValueTask SerializeAsync(Stream stream, object value, Type inputType, CancellationToken cancellationToken);
    public abstract virtual object Deserialize(Stream stream, Type returnType, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<object> DeserializeAsync(Stream stream, Type returnType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public virtual BinaryData Serialize(object value, Type inputType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Azure.Core.Serialization.ObjectSerializer/<SerializeAsync>d__5")]
public virtual ValueTask`1<BinaryData> SerializeAsync(object value, Type inputType, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Azure.Core.Serialization.ObjectSerializer/<SerializeToBinaryDataInternalAsync>d__6")]
private ValueTask`1<BinaryData> SerializeToBinaryDataInternalAsync(object value, Type inputType, bool async, CancellationToken cancellationToken);
}
[AttributeUsageAttribute("32")]
internal class Azure.Core.SerializationConstructorAttribute : Attribute {
}
internal static class Azure.Core.Shared.EventSourceEventFormatting : object {
    [NullableContextAttribute("1")]
public static string Format(EventWrittenEventArgs eventData);
    private static void ProcessPayloadArray(Object[] payloadArray);
    [NullableContextAttribute("2")]
private static object FormatValue(object o);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.StatusCodeClassifier : ResponseClassifier {
    private static int Length;
    private UInt64[] _successCodes;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ResponseClassificationHandler[] <Handlers>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ResponseClassificationHandler[] Handlers { get; internal set; }
    [NullableContextAttribute("0")]
public StatusCodeClassifier(ReadOnlySpan`1<ushort> successStatusCodes);
    private StatusCodeClassifier(UInt64[] successCodes, ResponseClassificationHandler[] handlers);
    [CompilerGeneratedAttribute]
internal ResponseClassificationHandler[] get_Handlers();
    [CompilerGeneratedAttribute]
internal void set_Handlers(ResponseClassificationHandler[] value);
    public virtual bool IsErrorResponse(HttpMessage message);
    internal virtual StatusCodeClassifier Clone();
    internal void AddClassifier(int statusCode, bool isError);
    private bool IsSuccessCode(int statusCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Azure.Core.StreamHelperExtensions : object {
    private static int _maxReadBufferSize;
    [ExtensionAttribute]
public static Task DrainAsync(Stream stream, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task DrainAsync(Stream stream, Nullable`1<long> limit, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Core.StreamHelperExtensions/<DrainAsync>d__3")]
[ExtensionAttribute]
public static Task DrainAsync(Stream stream, ArrayPool`1<byte> bytePool, Nullable`1<long> limit, CancellationToken cancellationToken);
}
[ExtensionAttribute]
internal static class Azure.Core.StringExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static int IndexOfOrdinal(string s, char c);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static int GetHashCodeOrdinal(string s);
}
public class Azure.Core.SyncAsyncEventHandler`1 : MulticastDelegate {
    public SyncAsyncEventHandler`1(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task Invoke(T e);
    public virtual IAsyncResult BeginInvoke(T e, AsyncCallback callback, object object);
    public virtual Task EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.Core.TelemetryDetails : object {
    private static int MaxApplicationIdLength;
    private string _userAgent;
    [CompilerGeneratedAttribute]
private Assembly <Assembly>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ApplicationId>k__BackingField;
    public Assembly Assembly { get; }
    [NullableAttribute("2")]
public string ApplicationId { get; }
    public TelemetryDetails(Assembly assembly, string applicationId);
    [NullableContextAttribute("2")]
internal TelemetryDetails(Assembly assembly, string applicationId, RuntimeInformationWrapper runtimeInformation);
    [CompilerGeneratedAttribute]
public Assembly get_Assembly();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ApplicationId();
    public void Apply(HttpMessage message);
    internal static string GenerateUserAgentString(Assembly clientAssembly, string applicationId, RuntimeInformationWrapper runtimeInformation);
    public virtual string ToString();
    private static string EscapeProductInformation(string productInfo);
    private static bool ContainsNonAscii(string value);
}
public abstract class Azure.Core.TokenCredential : object {
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/identity")]
public abstract virtual ValueTask`1<AccessToken> GetTokenAsync(TokenRequestContext requestContext, CancellationToken cancellationToken);
    [CallerShouldAuditAttribute("https://aka.ms/azsdk/callershouldaudit/identity")]
public abstract virtual AccessToken GetToken(TokenRequestContext requestContext, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Azure.Core.TokenRequestContext : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private String[] <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCaeEnabled>k__BackingField;
    [NullableAttribute("1")]
public String[] Scopes { get; }
    public string ParentRequestId { get; }
    public string Claims { get; }
    public string TenantId { get; }
    public bool IsCaeEnabled { get; }
    [NullableContextAttribute("1")]
public TokenRequestContext(String[] scopes, string parentRequestId);
    public TokenRequestContext(String[] scopes, string parentRequestId, string claims);
    public TokenRequestContext(String[] scopes, string parentRequestId, string claims, string tenantId);
    public TokenRequestContext(String[] scopes, string parentRequestId, string claims, string tenantId, bool isCaeEnabled);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public String[] get_Scopes();
    [CompilerGeneratedAttribute]
public string get_ParentRequestId();
    [CompilerGeneratedAttribute]
public string get_Claims();
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public bool get_IsCaeEnabled();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
internal class Azure.Core.TypeReferenceTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <IgnoreExtraProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <InternalPropertiesToInclude>k__BackingField;
    public bool IgnoreExtraProperties { get; }
    public String[] InternalPropertiesToInclude { get; }
    public TypeReferenceTypeAttribute(bool ignoreExtraProperties, String[] internalPropertiesToInclude);
    [CompilerGeneratedAttribute]
public bool get_IgnoreExtraProperties();
    [CompilerGeneratedAttribute]
public String[] get_InternalPropertiesToInclude();
}
[IsReadOnlyAttribute]
internal class Azure.Core.VoidValue : ValueType {
}
[FlagsAttribute]
public enum Azure.ErrorOptions : Enum {
    public int value__;
    public static ErrorOptions Default;
    public static ErrorOptions NoThrow;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[JsonConverterAttribute("Azure.ETagConverter")]
public class Azure.ETag : ValueType {
    private static char QuoteCharacter;
    private static string QuoteString;
    private static string WeakETagPrefix;
    private static string DefaultFormat;
    private static string HeaderFormat;
    [NullableAttribute("2")]
private string _value;
    public static ETag All;
    public ETag(string etag);
    private static ETag();
    public static bool op_Equality(ETag left, ETag right);
    public static bool op_Inequality(ETag left, ETag right);
    public sealed virtual bool Equals(ETag other);
    [NullableContextAttribute("2")]
public bool Equals(string other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [EditorBrowsableAttribute("1")]
public virtual string ToString();
    public string ToString(string format);
    internal static ETag Parse(string value);
    private static bool IsValidQuotedFormat(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.ETagConverter : JsonConverter`1<ETag> {
    public virtual ETag Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, ETag value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.HttpAuthorization : object {
    [CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Parameter>k__BackingField;
    public string Scheme { get; }
    public string Parameter { get; }
    public HttpAuthorization(string scheme, string parameter);
    [CompilerGeneratedAttribute]
public string get_Scheme();
    [CompilerGeneratedAttribute]
public string get_Parameter();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
public class Azure.HttpRange : ValueType {
    [NullableAttribute("1")]
private static string Unit;
    [CompilerGeneratedAttribute]
private long <Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Length>k__BackingField;
    public long Offset { get; }
    public Nullable`1<long> Length { get; }
    public HttpRange(long offset, Nullable`1<long> length);
    [CompilerGeneratedAttribute]
public long get_Offset();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Length();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(HttpRange left, HttpRange right);
    public static bool op_Inequality(HttpRange left, HttpRange right);
    public sealed virtual bool Equals(HttpRange other);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.JsonPatchDocument : object {
    [NullableAttribute("0")]
private ReadOnlyMemory`1<byte> _rawDocument;
    private ObjectSerializer _serializer;
    private Collection`1<JsonPatchOperation> _operations;
    public JsonPatchDocument(ObjectSerializer serializer);
    [NullableContextAttribute("0")]
public JsonPatchDocument(ReadOnlyMemory`1<byte> rawDocument);
    [NullableContextAttribute("0")]
public JsonPatchDocument(ReadOnlyMemory`1<byte> rawDocument, ObjectSerializer serializer);
    public void AppendAddRaw(string path, string rawJsonValue);
    public void AppendAdd(string path, T value);
    public void AppendReplaceRaw(string path, string rawJsonValue);
    public void AppendReplace(string path, T value);
    public void AppendCopy(string from, string path);
    public void AppendMove(string from, string path);
    public void AppendRemove(string path);
    public void AppendTestRaw(string path, string rawJsonValue);
    public void AppendTest(string path, T value);
    [NullableContextAttribute("0")]
public ReadOnlyMemory`1<byte> ToBytes();
    public virtual string ToString();
    private void WriteTo(Utf8JsonWriter writer);
    private string Serialize(T value);
}
public class Azure.MatchConditions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<ETag> <IfMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ETag> <IfNoneMatch>k__BackingField;
    public Nullable`1<ETag> IfMatch { get; public set; }
    public Nullable`1<ETag> IfNoneMatch { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<ETag> get_IfMatch();
    [CompilerGeneratedAttribute]
public void set_IfMatch(Nullable`1<ETag> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ETag> get_IfNoneMatch();
    [CompilerGeneratedAttribute]
public void set_IfNoneMatch(Nullable`1<ETag> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsonConverterAttribute("Azure.Messaging.CloudEventConverter")]
public class Azure.Messaging.CloudEvent : object {
    [CompilerGeneratedAttribute]
private BinaryData <Data>k__BackingField;
    private string _id;
    [CompilerGeneratedAttribute]
private CloudEventDataFormat <DataFormat>k__BackingField;
    private string _source;
    private string _type;
    [CompilerGeneratedAttribute]
private string <SpecVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DataSerializationType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <ExtensionAttributes>k__BackingField;
    public BinaryData Data { get; public set; }
    [NullableAttribute("1")]
public string Id { get; public set; }
    internal CloudEventDataFormat DataFormat { get; internal set; }
    [NullableAttribute("1")]
public string Source { get; public set; }
    [NullableAttribute("1")]
public string Type { get; public set; }
    internal string SpecVersion { get; internal set; }
    public Nullable`1<DateTimeOffset> Time { get; public set; }
    public string DataSchema { get; public set; }
    public string DataContentType { get; public set; }
    internal Type DataSerializationType { get; }
    public string Subject { get; public set; }
    [NullableAttribute("1")]
public IDictionary`2<string, object> ExtensionAttributes { get; }
    [NullableContextAttribute("1")]
public CloudEvent(string source, string type, object jsonSerializableData, Type dataSerializationType);
    [NullableContextAttribute("1")]
public CloudEvent(string source, string type, BinaryData data, string dataContentType, CloudEventDataFormat dataFormat);
    [CompilerGeneratedAttribute]
public BinaryData get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(BinaryData value);
    [NullableContextAttribute("1")]
public string get_Id();
    [NullableContextAttribute("1")]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
internal CloudEventDataFormat get_DataFormat();
    [CompilerGeneratedAttribute]
internal void set_DataFormat(CloudEventDataFormat value);
    [NullableContextAttribute("1")]
public string get_Source();
    [NullableContextAttribute("1")]
public void set_Source(string value);
    [NullableContextAttribute("1")]
public string get_Type();
    [NullableContextAttribute("1")]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
internal string get_SpecVersion();
    [CompilerGeneratedAttribute]
internal void set_SpecVersion(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_DataSchema();
    [CompilerGeneratedAttribute]
public void set_DataSchema(string value);
    [CompilerGeneratedAttribute]
public string get_DataContentType();
    [CompilerGeneratedAttribute]
public void set_DataContentType(string value);
    [CompilerGeneratedAttribute]
internal Type get_DataSerializationType();
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_ExtensionAttributes();
    [NullableContextAttribute("1")]
public static CloudEvent[] ParseMany(BinaryData json, bool skipValidation);
    [NullableContextAttribute("1")]
public static CloudEvent Parse(BinaryData json, bool skipValidation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.Messaging.CloudEventConstants : object {
    public static string SpecVersion;
    public static string Id;
    public static string Source;
    public static string Type;
    public static string DataContentType;
    public static string DataSchema;
    public static string Subject;
    public static string Time;
    public static string Data;
    public static string DataBase64;
    public static string ErrorSkipValidationSuggestion;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.Messaging.CloudEventConverter : JsonConverter`1<CloudEvent> {
    public virtual CloudEvent Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    internal static CloudEvent DeserializeCloudEvent(JsonElement element, bool skipValidation);
    public virtual void Write(Utf8JsonWriter writer, CloudEvent value, JsonSerializerOptions options);
    private static void WriteObjectValue(Utf8JsonWriter writer, object value);
    [NullableContextAttribute("2")]
private static object GetObject(JsonElement& element);
}
public enum Azure.Messaging.CloudEventDataFormat : Enum {
    public int value__;
    public static CloudEventDataFormat Binary;
    public static CloudEventDataFormat Json;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Azure.Messaging.CloudEventExtensionAttributes`2 : object {
    private Dictionary`2<TKey, TValue> _backingDictionary;
    private static HashSet`1<string> s_reservedAttributes;
    public TValue Item { get; public set; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    private static CloudEventExtensionAttributes`2();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual void Add(TKey key, TValue value);
    public void AddWithoutValidation(TKey key, TValue value);
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [NullableContextAttribute("2")]
private static void ValidateAttribute(string name, object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Azure.Messaging.MessageContent : object {
    [CompilerGeneratedAttribute]
private BinaryData <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ContentType> <ContentTypeCore>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    public BinaryData Data { get; public set; }
    public Nullable`1<ContentType> ContentType { get; public set; }
    [EditorBrowsableAttribute("1")]
protected Nullable`1<ContentType> ContentTypeCore { get; protected set; }
    public bool IsReadOnly { get; }
    [CompilerGeneratedAttribute]
public virtual BinaryData get_Data();
    [CompilerGeneratedAttribute]
public virtual void set_Data(BinaryData value);
    public virtual Nullable`1<ContentType> get_ContentType();
    public virtual void set_ContentType(Nullable`1<ContentType> value);
    [CompilerGeneratedAttribute]
protected virtual Nullable`1<ContentType> get_ContentTypeCore();
    [CompilerGeneratedAttribute]
protected virtual void set_ContentTypeCore(Nullable`1<ContentType> value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsReadOnly();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Azure.NullableResponse`1 : object {
    [NullableAttribute("1")]
private static string NoValue;
    public bool HasValue { get; }
    public T Value { get; }
    public abstract virtual bool get_HasValue();
    public abstract virtual T get_Value();
    [NullableContextAttribute("1")]
public abstract virtual Response GetRawResponse();
    [EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Operation : object {
    public string Id { get; }
    public bool HasCompleted { get; }
    public static Operation`1<T> Rehydrate(HttpPipeline pipeline, RehydrationToken rehydrationToken, ClientOptions options);
    public static Operation Rehydrate(HttpPipeline pipeline, RehydrationToken rehydrationToken, ClientOptions options);
    [AsyncStateMachineAttribute("Azure.Operation/<RehydrateAsync>d__2`1")]
public static Task`1<Operation`1<T>> RehydrateAsync(HttpPipeline pipeline, RehydrationToken rehydrationToken, ClientOptions options);
    [AsyncStateMachineAttribute("Azure.Operation/<RehydrateAsync>d__3")]
public static Task`1<Operation> RehydrateAsync(HttpPipeline pipeline, RehydrationToken rehydrationToken, ClientOptions options);
    public virtual Nullable`1<RehydrationToken> GetRehydrationToken();
    public abstract virtual string get_Id();
    public abstract virtual Response GetRawResponse();
    public abstract virtual bool get_HasCompleted();
    public abstract virtual ValueTask`1<Response> UpdateStatusAsync(CancellationToken cancellationToken);
    public abstract virtual Response UpdateStatus(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation/<WaitForCompletionResponseAsync>d__12")]
public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation/<WaitForCompletionResponseAsync>d__13")]
public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation/<WaitForCompletionResponseAsync>d__14")]
public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(DelayStrategy delayStrategy, CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual Response WaitForCompletionResponse(DelayStrategy delayStrategy, CancellationToken cancellationToken);
    internal static T GetValue(T& value);
    [NullableContextAttribute("0")]
internal static T GetValue(Nullable`1& value);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Operation`1 : Operation {
    public T Value { get; }
    public bool HasValue { get; }
    public abstract virtual T get_Value();
    public abstract virtual bool get_HasValue();
    public virtual Response`1<T> WaitForCompletion(CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(TimeSpan pollingInterval, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation`1/<WaitForCompletionAsync>d__6")]
public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation`1/<WaitForCompletionAsync>d__7")]
public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
    public virtual Response`1<T> WaitForCompletion(DelayStrategy delayStrategy, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation`1/<WaitForCompletionAsync>d__9")]
public virtual ValueTask`1<Response`1<T>> WaitForCompletionAsync(DelayStrategy delayStrategy, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation`1/<WaitForCompletionResponseAsync>d__10")]
[EditorBrowsableAttribute("1")]
public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Azure.Operation`1/<WaitForCompletionResponseAsync>d__11")]
[EditorBrowsableAttribute("1")]
public virtual ValueTask`1<Response> WaitForCompletionResponseAsync(TimeSpan pollingInterval, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Page`1 : object {
    public IReadOnlyList`1<T> Values { get; }
    [NullableAttribute("2")]
public string ContinuationToken { get; }
    public abstract virtual IReadOnlyList`1<T> get_Values();
    [NullableContextAttribute("2")]
public abstract virtual string get_ContinuationToken();
    public abstract virtual Response GetRawResponse();
    public static Page`1<T> FromValues(IReadOnlyList`1<T> values, string continuationToken, Response response);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Pageable`1 : object {
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    protected CancellationToken CancellationToken { get; }
    protected Pageable`1(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
protected virtual CancellationToken get_CancellationToken();
    public abstract virtual IEnumerable`1<Page`1<T>> AsPages(string continuationToken, Nullable`1<int> pageSizeHint);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual string ToString();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [IteratorStateMachineAttribute("Azure.Pageable`1/<GetEnumerator>d__8")]
public virtual IEnumerator`1<T> GetEnumerator();
    public static Pageable`1<T> FromPages(IEnumerable`1<Page`1<T>> pages);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Azure.PageableOperation`1 : Operation`1<AsyncPageable`1<T>> {
    [EditorBrowsableAttribute("1")]
public AsyncPageable`1<T> Value { get; }
    public virtual AsyncPageable`1<T> get_Value();
    public abstract virtual AsyncPageable`1<T> GetValuesAsync(CancellationToken cancellationToken);
    public abstract virtual Pageable`1<T> GetValues(CancellationToken cancellationToken);
}
public class Azure.RequestConditions : MatchConditions {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <IfModifiedSince>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <IfUnmodifiedSince>k__BackingField;
    public Nullable`1<DateTimeOffset> IfModifiedSince { get; public set; }
    public Nullable`1<DateTimeOffset> IfUnmodifiedSince { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_IfModifiedSince();
    [CompilerGeneratedAttribute]
public void set_IfModifiedSince(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_IfUnmodifiedSince();
    [CompilerGeneratedAttribute]
public void set_IfUnmodifiedSince(Nullable`1<DateTimeOffset> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.RequestContext : object {
    private bool _frozen;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ValueTuple`2[] _statusCodes;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ResponseClassificationHandler[] _handlers;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> <Policies>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorOptions <ErrorOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ValueTuple`2[] StatusCodes { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ResponseClassificationHandler[] Handlers { get; }
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> Policies { get; private set; }
    public ErrorOptions ErrorOptions { get; public set; }
    public CancellationToken CancellationToken { get; public set; }
    internal ValueTuple`2[] get_StatusCodes();
    internal ResponseClassificationHandler[] get_Handlers();
    [CompilerGeneratedAttribute]
internal List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> get_Policies();
    [CompilerGeneratedAttribute]
private void set_Policies(List`1<ValueTuple`2<HttpPipelinePosition, HttpPipelinePolicy>> value);
    [CompilerGeneratedAttribute]
public ErrorOptions get_ErrorOptions();
    [CompilerGeneratedAttribute]
public void set_ErrorOptions(ErrorOptions value);
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
public void set_CancellationToken(CancellationToken value);
    public static RequestContext op_Implicit(ErrorOptions options);
    public void AddPolicy(HttpPipelinePolicy policy, HttpPipelinePosition position);
    public void AddClassifier(int statusCode, bool isError);
    public void AddClassifier(ResponseClassificationHandler classifier);
    internal void Freeze();
    internal ResponseClassifier Apply(ResponseClassifier classifier);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Azure.RequestFailedException : Exception {
    private static string DefaultMessage;
    internal static string NoContentOnSuccessMessage;
    [CompilerGeneratedAttribute]
private int <Status>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ErrorCode>k__BackingField;
    [NullableAttribute("2")]
private Response _response;
    public int Status { get; }
    [NullableAttribute("2")]
public string ErrorCode { get; }
    public RequestFailedException(string message);
    public RequestFailedException(string message, Exception innerException);
    [EditorBrowsableAttribute("1")]
public RequestFailedException(int status, string message);
    [EditorBrowsableAttribute("1")]
public RequestFailedException(int status, string message, Exception innerException);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public RequestFailedException(int status, string message, string errorCode, Exception innerException);
    private RequestFailedException(int status, ValueTuple`2<string, ResponseError> details);
    [NullableContextAttribute("2")]
private RequestFailedException(int status, ErrorDetails details, Exception innerException);
    public RequestFailedException(Response response);
    public RequestFailedException(Response response, Exception innerException);
    [NullableContextAttribute("2")]
public RequestFailedException(Response response, Exception innerException, RequestFailedDetailsParser detailsParser);
    protected RequestFailedException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public int get_Status();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ErrorCode();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    [NullableContextAttribute("2")]
public Response GetRawResponse();
    private static ErrorDetails CreateExceptionDetails(Response response, RequestFailedDetailsParser parser);
    private static void AppendContentAndHeaders(Response response, StringBuilder messageBuilder);
    private static void AppendErrorCodeAndAdditionalInfo(ResponseError error, IDictionary`2<string, string> additionalInfo, StringBuilder messageBuilder);
    private static void AppendStatusAndReason(Response response, ResponseError error, StringBuilder messageBuilder);
    private static void BufferResponseIfNeeded(Response response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Azure.Response : object {
    private static BinaryData s_EmptyBinaryData;
    [CompilerGeneratedAttribute]
private bool <IsError>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMessageSanitizer <Sanitizer>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RequestFailedDetailsParser <RequestFailedDetailsParser>k__BackingField;
    public int Status { get; }
    public string ReasonPhrase { get; }
    [NullableAttribute("2")]
public Stream ContentStream { get; public set; }
    public string ClientRequestId { get; public set; }
    public ResponseHeaders Headers { get; }
    public BinaryData Content { get; }
    public bool IsError { get; internal set; }
    internal HttpMessageSanitizer Sanitizer { get; internal set; }
    [NullableAttribute("2")]
internal RequestFailedDetailsParser RequestFailedDetailsParser { get; internal set; }
    private static Response();
    public abstract virtual int get_Status();
    public abstract virtual string get_ReasonPhrase();
    [NullableContextAttribute("2")]
public abstract virtual Stream get_ContentStream();
    [NullableContextAttribute("2")]
public abstract virtual void set_ContentStream(Stream value);
    public abstract virtual string get_ClientRequestId();
    public abstract virtual void set_ClientRequestId(string value);
    public virtual ResponseHeaders get_Headers();
    public virtual BinaryData get_Content();
    public abstract virtual void Dispose();
    [CompilerGeneratedAttribute]
public virtual bool get_IsError();
    [CompilerGeneratedAttribute]
internal virtual void set_IsError(bool value);
    [CompilerGeneratedAttribute]
internal HttpMessageSanitizer get_Sanitizer();
    [CompilerGeneratedAttribute]
internal void set_Sanitizer(HttpMessageSanitizer value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal RequestFailedDetailsParser get_RequestFailedDetailsParser();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_RequestFailedDetailsParser(RequestFailedDetailsParser value);
    protected internal abstract virtual bool TryGetHeader(string name, String& value);
    protected internal abstract virtual bool TryGetHeaderValues(string name, IEnumerable`1& values);
    protected internal abstract virtual bool ContainsHeader(string name);
    protected internal abstract virtual IEnumerable`1<HttpHeader> EnumerateHeaders();
    public static Response`1<T> FromValue(T value, Response response);
    public virtual string ToString();
    [NullableContextAttribute("2")]
internal static void DisposeStreamIfNotBuffered(Stream& stream);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DebuggerTypeProxyAttribute("Azure.ResponseDebugView`1")]
public abstract class Azure.Response`1 : NullableResponse`1<T> {
    [EditorBrowsableAttribute("1")]
public bool HasValue { get; }
    public T Value { get; }
    public virtual bool get_HasValue();
    public virtual T get_Value();
    public static T op_Implicit(Response`1<T> response);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute("1")]
public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Azure.ResponseDebugView`1 : object {
    private Response`1<T> _response;
    public Response GetRawResponse { get; }
    public T Value { get; }
    public ResponseDebugView`1(Response`1<T> response);
    public Response get_GetRawResponse();
    public T get_Value();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsonConverterAttribute("Azure.ResponseError/Converter")]
[TypeReferenceTypeAttribute("True", "Mono.Cecil.CustomAttributeArgument[]")]
public class Azure.ResponseError : object {
    private JsonElement _element;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseInnerError <InnerError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<ResponseError> <Details>k__BackingField;
    public string Code { get; }
    public string Message { get; }
    internal ResponseInnerError InnerError { get; }
    internal string Target { get; }
    [NullableAttribute("1")]
internal IReadOnlyList`1<ResponseError> Details { get; }
    [InitializationConstructorAttribute]
public ResponseError(string code, string message);
    [SerializationConstructorAttribute]
internal ResponseError(string code, string message, string target, JsonElement element, ResponseInnerError innerError, IReadOnlyList`1<ResponseError> details);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
internal ResponseInnerError get_InnerError();
    [CompilerGeneratedAttribute]
internal string get_Target();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal IReadOnlyList`1<ResponseError> get_Details();
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
internal void Append(StringBuilder builder, bool includeRaw);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSerializableAttribute("Azure.ResponseError")]
[JsonSerializableAttribute("Azure.RequestFailedException/ErrorResponse")]
[JsonSerializableAttribute("Azure.ResponseInnerError")]
[JsonSerializableAttribute("System.Text.Json.JsonElement")]
[JsonSerializableAttribute("System.Text.Json.JsonDocument")]
[JsonSerializableAttribute("System.Text.Json.JsonValueKind")]
[JsonSerializableAttribute("System.String")]
[JsonSerializableAttribute("System.Boolean")]
[JsonSerializableAttribute("System.Collections.Generic.List`1<Azure.ResponseError>")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "6.0.9.1912")]
internal class Azure.ResponseErrorSourceGenerationContext : JsonSerializerContext {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ResponseError> _ResponseError;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ErrorResponse> _ErrorResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ResponseInnerError> _ResponseInnerError;
    [NullableAttribute("2")]
private JsonTypeInfo`1<JsonElement> _JsonElement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<JsonDocument> _JsonDocument;
    [NullableAttribute("2")]
private JsonTypeInfo`1<JsonValueKind> _JsonValueKind;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    [NullableAttribute("2")]
private JsonTypeInfo`1<bool> _Boolean;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<ResponseError>> _ListResponseError;
    [CompilerGeneratedAttribute]
private static JsonSerializerOptions <s_defaultOptions>k__BackingField;
    [NullableAttribute("2")]
private static ResponseErrorSourceGenerationContext s_defaultContext;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_error;
    private static JsonEncodedText PropName_RootElement;
    public JsonTypeInfo`1<ResponseError> ResponseError { get; }
    public JsonTypeInfo`1<ErrorResponse> ErrorResponse { get; }
    public JsonTypeInfo`1<ResponseInnerError> ResponseInnerError { get; }
    public JsonTypeInfo`1<JsonElement> JsonElement { get; }
    public JsonTypeInfo`1<JsonDocument> JsonDocument { get; }
    public JsonTypeInfo`1<JsonValueKind> JsonValueKind { get; }
    public JsonTypeInfo`1<string> String { get; }
    public JsonTypeInfo`1<bool> Boolean { get; }
    public JsonTypeInfo`1<List`1<ResponseError>> ListResponseError { get; }
    private static JsonSerializerOptions s_defaultOptions { get; }
    public static ResponseErrorSourceGenerationContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public ResponseErrorSourceGenerationContext(JsonSerializerOptions options);
    private static ResponseErrorSourceGenerationContext();
    public JsonTypeInfo`1<ResponseError> get_ResponseError();
    public JsonTypeInfo`1<ErrorResponse> get_ErrorResponse();
    private static JsonPropertyInfo[] ErrorResponsePropInit(JsonSerializerContext context);
    private static void ErrorResponseSerializeHandler(Utf8JsonWriter writer, ErrorResponse value);
    public JsonTypeInfo`1<ResponseInnerError> get_ResponseInnerError();
    public JsonTypeInfo`1<JsonElement> get_JsonElement();
    public JsonTypeInfo`1<JsonDocument> get_JsonDocument();
    private static JsonPropertyInfo[] JsonDocumentPropInit(JsonSerializerContext context);
    private static void JsonDocumentSerializeHandler(Utf8JsonWriter writer, JsonDocument value);
    public JsonTypeInfo`1<JsonValueKind> get_JsonValueKind();
    public JsonTypeInfo`1<string> get_String();
    public JsonTypeInfo`1<bool> get_Boolean();
    public JsonTypeInfo`1<List`1<ResponseError>> get_ListResponseError();
    private static void ListResponseErrorSerializeHandler(Utf8JsonWriter writer, List`1<ResponseError> value);
    [CompilerGeneratedAttribute]
private static JsonSerializerOptions get_s_defaultOptions();
    public static ResponseErrorSourceGenerationContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private JsonConverter GetRuntimeProvidedCustomConverter(Type type);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[JsonConverterAttribute("Azure.ResponseInnerError/Converter")]
internal class Azure.ResponseInnerError : object {
    private JsonElement _innerErrorElement;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseInnerError <InnerError>k__BackingField;
    public string Code { get; }
    public ResponseInnerError InnerError { get; }
    internal ResponseInnerError(string code, ResponseInnerError innerError, JsonElement innerErrorElement);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public ResponseInnerError get_InnerError();
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
internal void Append(StringBuilder builder);
}
public class Azure.SyncAsyncEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private bool <IsRunningSynchronously>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    public bool IsRunningSynchronously { get; }
    public CancellationToken CancellationToken { get; }
    public SyncAsyncEventArgs(bool isRunningSynchronously, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public bool get_IsRunningSynchronously();
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Azure.ValueResponse`1 : Response`1<T> {
    private Response _response;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public T Value { get; }
    public ValueResponse`1(Response response, T value);
    [CompilerGeneratedAttribute]
public virtual T get_Value();
    public virtual Response GetRawResponse();
}
public enum Azure.WaitUntil : Enum {
    public int value__;
    public static WaitUntil Completed;
    public static WaitUntil Started;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
internal class System.Diagnostics.CodeAnalysis.ExperimentalAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UrlFormat>k__BackingField;
    public string DiagnosticId { get; }
    [NullableAttribute("2")]
public string UrlFormat { get; public set; }
    public ExperimentalAttribute(string diagnosticId);
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UrlFormat();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UrlFormat(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.ScopedRefAttribute : Attribute {
}
