[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.ActiveHandlerTrackingEntry : object {
    private static TimerCallback TimerCallback;
    private object _lock;
    private bool _timerInitialized;
    private Timer _timer;
    private TimerCallback _callback;
    [CompilerGeneratedAttribute]
private LifetimeTrackingHttpMessageHandler <Handler>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Lifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Key>k__BackingField;
    public LifetimeTrackingHttpMessageHandler Handler { get; private set; }
    public TimeSpan Lifetime { get; }
    public int Key { get; }
    public ActiveHandlerTrackingEntry(int key, LifetimeTrackingHttpMessageHandler handler, TimeSpan lifetime);
    private static ActiveHandlerTrackingEntry();
    [CompilerGeneratedAttribute]
public LifetimeTrackingHttpMessageHandler get_Handler();
    [CompilerGeneratedAttribute]
private void set_Handler(LifetimeTrackingHttpMessageHandler value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Lifetime();
    [CompilerGeneratedAttribute]
public int get_Key();
    public void StartExpiryTimer(TimerCallback callback);
    private void StartExpiryTimerSlow(TimerCallback callback);
    private void Timer_Tick();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.ApiCallDetails : object {
    [NullableAttribute("2")]
private string _debugInformation;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Audit> <AuditTrail>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, ThreadPoolStatistics> <ThreadPoolStats>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<TcpState, int> <TcpStats>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMethod <HttpMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <HttpStatusCode>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Exception <OriginalException>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <RequestBodyInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ResponseBodyInBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseMimeType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasSuccessfulStatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasExpectedContentType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private ITransportConfiguration <TransportConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, IEnumerable`1<string>> <ParsedHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorResponse <ErrorResponse>k__BackingField;
    public IEnumerable`1<Audit> AuditTrail { get; internal set; }
    internal IReadOnlyDictionary`2<string, ThreadPoolStatistics> ThreadPoolStats { get; internal set; }
    internal IReadOnlyDictionary`2<TcpState, int> TcpStats { get; internal set; }
    public string DebugInformation { get; }
    public HttpMethod HttpMethod { get; internal set; }
    public Nullable`1<int> HttpStatusCode { get; internal set; }
    [NullableAttribute("2")]
public Exception OriginalException { get; internal set; }
    public Byte[] RequestBodyInBytes { get; internal set; }
    public Byte[] ResponseBodyInBytes { get; internal set; }
    public string ResponseMimeType { get; public set; }
    public bool HasSuccessfulStatusCode { get; internal set; }
    public bool HasExpectedContentType { get; internal set; }
    internal bool HasSuccessfulStatusCodeAndExpectedContentType { get; }
    internal bool SuccessOrKnownError { get; }
    [NullableAttribute("2")]
public Uri Uri { get; internal set; }
    internal ITransportConfiguration TransportConfiguration { get; internal set; }
    internal IReadOnlyDictionary`2<string, IEnumerable`1<string>> ParsedHeaders { get; internal set; }
    internal ErrorResponse ErrorResponse { get; internal set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<Audit> get_AuditTrail();
    [CompilerGeneratedAttribute]
internal void set_AuditTrail(IEnumerable`1<Audit> value);
    [CompilerGeneratedAttribute]
internal IReadOnlyDictionary`2<string, ThreadPoolStatistics> get_ThreadPoolStats();
    [CompilerGeneratedAttribute]
internal void set_ThreadPoolStats(IReadOnlyDictionary`2<string, ThreadPoolStatistics> value);
    [CompilerGeneratedAttribute]
internal IReadOnlyDictionary`2<TcpState, int> get_TcpStats();
    [CompilerGeneratedAttribute]
internal void set_TcpStats(IReadOnlyDictionary`2<TcpState, int> value);
    public string get_DebugInformation();
    [CompilerGeneratedAttribute]
public HttpMethod get_HttpMethod();
    [CompilerGeneratedAttribute]
internal void set_HttpMethod(HttpMethod value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_HttpStatusCode();
    [CompilerGeneratedAttribute]
internal void set_HttpStatusCode(Nullable`1<int> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Exception get_OriginalException();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_OriginalException(Exception value);
    [CompilerGeneratedAttribute]
public Byte[] get_RequestBodyInBytes();
    [CompilerGeneratedAttribute]
internal void set_RequestBodyInBytes(Byte[] value);
    [CompilerGeneratedAttribute]
public Byte[] get_ResponseBodyInBytes();
    [CompilerGeneratedAttribute]
internal void set_ResponseBodyInBytes(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_ResponseMimeType();
    [CompilerGeneratedAttribute]
public void set_ResponseMimeType(string value);
    [CompilerGeneratedAttribute]
public bool get_HasSuccessfulStatusCode();
    [CompilerGeneratedAttribute]
internal void set_HasSuccessfulStatusCode(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasExpectedContentType();
    [CompilerGeneratedAttribute]
internal void set_HasExpectedContentType(bool value);
    internal bool get_HasSuccessfulStatusCodeAndExpectedContentType();
    internal bool get_SuccessOrKnownError();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Uri get_Uri();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
internal ITransportConfiguration get_TransportConfiguration();
    [CompilerGeneratedAttribute]
internal void set_TransportConfiguration(ITransportConfiguration value);
    [CompilerGeneratedAttribute]
internal IReadOnlyDictionary`2<string, IEnumerable`1<string>> get_ParsedHeaders();
    [CompilerGeneratedAttribute]
internal void set_ParsedHeaders(IReadOnlyDictionary`2<string, IEnumerable`1<string>> value);
    public bool TryGetHeader(string key, IEnumerable`1& headerValues);
    [CompilerGeneratedAttribute]
internal ErrorResponse get_ErrorResponse();
    [CompilerGeneratedAttribute]
internal void set_ErrorResponse(ErrorResponse value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.ApiKey : AuthorizationHeader {
    private string _apiKey;
    [CompilerGeneratedAttribute]
private string <AuthScheme>k__BackingField;
    public string AuthScheme { get; }
    public ApiKey(string apiKey);
    [CompilerGeneratedAttribute]
public virtual string get_AuthScheme();
    public virtual bool TryGetAuthorizationParameters(String& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.AuthorizationHeader : object {
    public string AuthScheme { get; }
    public abstract virtual string get_AuthScheme();
    public abstract virtual bool TryGetAuthorizationParameters(String& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.Base64ApiKey : AuthorizationHeader {
    private string _base64String;
    [CompilerGeneratedAttribute]
private string <AuthScheme>k__BackingField;
    public string AuthScheme { get; }
    public Base64ApiKey(string id, string apiKey);
    public Base64ApiKey(string base64EncodedApiKey);
    [CompilerGeneratedAttribute]
public virtual string get_AuthScheme();
    public virtual bool TryGetAuthorizationParameters(String& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.BasicAuthentication : AuthorizationHeader {
    private string _base64String;
    [CompilerGeneratedAttribute]
private static string <BasicAuthenticationScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    public static string BasicAuthenticationScheme { get; }
    public string AuthScheme { get; }
    internal string Username { get; }
    public BasicAuthentication(string username, string password);
    private static BasicAuthentication();
    [CompilerGeneratedAttribute]
public static string get_BasicAuthenticationScheme();
    [CompilerGeneratedAttribute]
public virtual string get_AuthScheme();
    [CompilerGeneratedAttribute]
internal string get_Username();
    public virtual bool TryGetAuthorizationParameters(String& value);
    public static string GetBase64String(string header);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Elastic.Transport.BytesResponse : TransportResponse`1<Byte[]> {
    public BytesResponse(Byte[] body);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Transport.CertificateHelpers : object {
    private static string _colon;
    private static string _hyphen;
    public static bool ValidateCertificateFingerprint(X509Certificate certificate, string expectedFingerprint);
    public static string ComparableFingerprint(string fingerprint);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Elastic.Transport.CertificateValidations : object {
    public static bool AllowAll(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors errors);
    public static bool DenyAll(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors errors);
    public static Func`5<object, X509Certificate, X509Chain, SslPolicyErrors, bool> AuthorityPartOfChain(X509Certificate caCertificate, bool trustRoot, X509RevocationMode revocationMode);
    public static Func`5<object, X509Certificate, X509Chain, SslPolicyErrors, bool> AuthorityIsRoot(X509Certificate caCertificate, bool trustRoot, X509RevocationMode revocationMode);
    private static bool ValidRootCa(X509Certificate caCertificate, X509Certificate certificate, bool trustRoot, X509RevocationMode revocationMode);
    private static bool ValidIntermediateCa(X509Certificate caCertificate, X509Certificate certificate, X509Chain chain, bool trustRoot, X509RevocationMode revocationMode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.CloudNodePool : SingleNodePool {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationHeader <AuthenticationHeader>k__BackingField;
    private string ClusterName { get; }
    public AuthorizationHeader AuthenticationHeader { get; }
    public CloudNodePool(string cloudId, AuthorizationHeader credentials, DateTimeProvider dateTimeProvider);
    private CloudNodePool(ParsedCloudId parsedCloudId, DateTimeProvider dateTimeProvider);
    [CompilerGeneratedAttribute]
private string get_ClusterName();
    [CompilerGeneratedAttribute]
public AuthorizationHeader get_AuthenticationHeader();
    private static ParsedCloudId ParseCloudId(string cloudId);
    protected virtual void Dispose(bool disposing);
}
internal static class Elastic.Transport.ConnectionInfo : object {
    public static bool UsingCurlHandler { get; }
    public static bool get_UsingCurlHandler();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.CustomResponseBuilder : object {
    public abstract virtual object DeserializeResponse(Serializer serializer, ApiCallDetails response, Stream stream);
    public abstract virtual Task`1<object> DeserializeResponseAsync(Serializer serializer, ApiCallDetails response, Stream stream, CancellationToken ctx);
}
public abstract class Elastic.Transport.DateTimeProvider : object {
    public abstract virtual DateTimeOffset Now();
    public abstract virtual DateTimeOffset DeadTime(int attempts, Nullable`1<TimeSpan> minDeadTimeout, Nullable`1<TimeSpan> maxDeadTimeout);
}
public class Elastic.Transport.DefaultDateTimeProvider : DateTimeProvider {
    [NullableAttribute("1")]
public static DefaultDateTimeProvider Default;
    private static TimeSpan DefaultTimeout;
    private static TimeSpan MaximumTimeout;
    private static DefaultDateTimeProvider();
    public virtual DateTimeOffset DeadTime(int attempts, Nullable`1<TimeSpan> minDeadTimeout, Nullable`1<TimeSpan> maxDeadTimeout);
    public virtual DateTimeOffset Now();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.DefaultMemoryStreamFactory : MemoryStreamFactory {
    [CompilerGeneratedAttribute]
private static DefaultMemoryStreamFactory <Default>k__BackingField;
    public static DefaultMemoryStreamFactory Default { get; }
    private static DefaultMemoryStreamFactory();
    [CompilerGeneratedAttribute]
public static DefaultMemoryStreamFactory get_Default();
    public virtual MemoryStream Create();
    public virtual MemoryStream Create(Byte[] bytes);
    public virtual MemoryStream Create(Byte[] bytes, int index, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.DefaultMetaHeaderProducer : MetaHeaderProducer {
    private static string MetaHeaderName;
    private MetaDataHeader _asyncMetaDataHeader;
    private MetaDataHeader _syncMetaDataHeader;
    public string HeaderName { get; }
    public DefaultMetaHeaderProducer(Type clientType, string serviceIdentifier);
    public DefaultMetaHeaderProducer(VersionInfo versionInfo, string serviceIdentifier);
    public virtual string get_HeaderName();
    public virtual string ProduceHeaderValue(RequestData requestData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.DefaultMetaHeaderProvider : MetaHeaderProvider {
    private MetaHeaderProducer[] _producers;
    public MetaHeaderProducer[] Producers { get; }
    public DefaultMetaHeaderProvider(Type clientType, string serviceIdentifier);
    public DefaultMetaHeaderProvider(VersionInfo versionInfo, string serviceIdentifier);
    public virtual MetaHeaderProducer[] get_Producers();
}
public class Elastic.Transport.DefaultRequestParameters : RequestParameters {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.DefaultRequestPipeline`1 : RequestPipeline {
    private IRequestInvoker _requestInvoker;
    private NodePool _nodePool;
    private DateTimeProvider _dateTimeProvider;
    private MemoryStreamFactory _memoryStreamFactory;
    private Func`2<Node, bool> _nodePredicate;
    private ProductRegistration _productRegistration;
    private TConfiguration _settings;
    private ResponseBuilder _responseBuilder;
    [NullableAttribute("2")]
private RequestConfiguration _pingAndSniffRequestConfiguration;
    private List`1<Audit> _auditTrail;
    [CompilerGeneratedAttribute]
private bool <Refresh>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Retried>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <StartedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestConfiguration <RequestConfiguration>k__BackingField;
    public IEnumerable`1<Audit> AuditTrail { get; }
    private RequestConfiguration PingAndSniffRequestConfiguration { get; }
    public bool DepletedRetries { get; }
    public bool FirstPoolUsageNeedsSniffing { get; }
    public bool IsTakingTooLong { get; }
    public int MaxRetries { get; }
    public bool Refresh { get; private set; }
    public int Retried { get; private set; }
    public IEnumerable`1<Node> SniffNodes { get; }
    public bool SniffsOnConnectionFailure { get; }
    public bool SniffsOnStaleCluster { get; }
    public bool StaleClusterState { get; }
    public DateTimeOffset StartedOn { get; }
    private TimeSpan PingTimeout { get; }
    private IRequestConfiguration RequestConfiguration { get; }
    private bool RequestDisabledSniff { get; }
    private TimeSpan RequestTimeout { get; }
    internal DefaultRequestPipeline`1(TConfiguration configurationValues, DateTimeProvider dateTimeProvider, MemoryStreamFactory memoryStreamFactory, RequestParameters requestParameters);
    public virtual IEnumerable`1<Audit> get_AuditTrail();
    private RequestConfiguration get_PingAndSniffRequestConfiguration();
    public bool get_DepletedRetries();
    public virtual bool get_FirstPoolUsageNeedsSniffing();
    public virtual bool get_IsTakingTooLong();
    public virtual int get_MaxRetries();
    [CompilerGeneratedAttribute]
public bool get_Refresh();
    [CompilerGeneratedAttribute]
private void set_Refresh(bool value);
    [CompilerGeneratedAttribute]
public int get_Retried();
    [CompilerGeneratedAttribute]
private void set_Retried(int value);
    public IEnumerable`1<Node> get_SniffNodes();
    public virtual bool get_SniffsOnConnectionFailure();
    public virtual bool get_SniffsOnStaleCluster();
    public virtual bool get_StaleClusterState();
    [CompilerGeneratedAttribute]
public virtual DateTimeOffset get_StartedOn();
    private TimeSpan get_PingTimeout();
    [CompilerGeneratedAttribute]
private IRequestConfiguration get_RequestConfiguration();
    private bool get_RequestDisabledSniff();
    private TimeSpan get_RequestTimeout();
    public virtual void AuditCancellationRequested();
    public virtual void BadResponse(TResponse& response, ApiCallDetails callDetails, RequestData data, TransportException exception);
    public virtual TResponse CallProductEndpoint(RequestData requestData);
    public virtual Task`1<TResponse> CallProductEndpointAsync(RequestData requestData, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Transport.DefaultRequestPipeline`1/<CallProductEndpointCoreAsync>d__55`1")]
private ValueTask`1<TResponse> CallProductEndpointCoreAsync(bool isAsync, RequestData requestData, CancellationToken cancellationToken);
    public virtual TransportException CreateClientException(TResponse response, ApiCallDetails callDetails, RequestData data, List`1<PipelineException> seenExceptions);
    public virtual void FirstPoolUsage(SemaphoreSlim semaphore);
    [AsyncStateMachineAttribute("Elastic.Transport.DefaultRequestPipeline`1/<FirstPoolUsageAsync>d__58")]
public virtual Task FirstPoolUsageAsync(SemaphoreSlim semaphore, CancellationToken cancellationToken);
    public virtual void MarkAlive(Node node);
    public virtual void MarkDead(Node node);
    public virtual bool TryGetSingleNode(Node& node);
    [IteratorStateMachineAttribute("Elastic.Transport.DefaultRequestPipeline`1/<NextNode>d__62")]
public virtual IEnumerable`1<Node> NextNode();
    public virtual void Ping(Node node);
    public virtual Task PingAsync(Node node, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Transport.DefaultRequestPipeline`1/<PingCoreAsync>d__65")]
public ValueTask PingCoreAsync(bool isAsync, Node node, CancellationToken cancellationToken);
    public virtual void Sniff();
    public virtual Task SniffAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Transport.DefaultRequestPipeline`1/<SniffCoreAsync>d__68")]
public ValueTask SniffCoreAsync(bool isAsync, CancellationToken cancellationToken);
    public virtual void SniffOnConnectionFailure();
    [AsyncStateMachineAttribute("Elastic.Transport.DefaultRequestPipeline`1/<SniffOnConnectionFailureAsync>d__70")]
public virtual Task SniffOnConnectionFailureAsync(CancellationToken cancellationToken);
    public virtual void SniffOnStaleCluster();
    [AsyncStateMachineAttribute("Elastic.Transport.DefaultRequestPipeline`1/<SniffOnStaleClusterAsync>d__72")]
public virtual Task SniffOnStaleClusterAsync(CancellationToken cancellationToken);
    public virtual void ThrowNoNodesAttempted(RequestData requestData, List`1<PipelineException> seenExceptions);
    private bool PingDisabled(Node node);
    private Auditable Audit(AuditEvent type, Node node);
    private static void ThrowBadAuthPipelineExceptionWhenNeeded(ApiCallDetails details, TransportResponse response);
    private void LazyAuditable(AuditEvent e, Node n);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private int <get_SniffNodes>b__32_0(Node n);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.DefaultRequestPipelineFactory`1 : RequestPipelineFactory`1<TConfiguration> {
    public virtual RequestPipeline Create(TConfiguration configurationValues, DateTimeProvider dateTimeProvider, MemoryStreamFactory memoryStreamFactory, RequestParameters requestParameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.DefaultResponseBuilder`1 : ResponseBuilder {
    private bool _isEmptyError;
    public virtual TResponse ToResponse(RequestData requestData, Exception ex, Nullable`1<int> statusCode, Dictionary`2<string, IEnumerable`1<string>> headers, Stream responseStream, string mimeType, long contentLength, IReadOnlyDictionary`2<string, ThreadPoolStatistics> threadPoolStats, IReadOnlyDictionary`2<TcpState, int> tcpStats);
    [AsyncStateMachineAttribute("Elastic.Transport.DefaultResponseBuilder`1/<ToResponseAsync>d__3`1")]
public virtual Task`1<TResponse> ToResponseAsync(RequestData requestData, Exception ex, Nullable`1<int> statusCode, Dictionary`2<string, IEnumerable`1<string>> headers, Stream responseStream, string mimeType, long contentLength, IReadOnlyDictionary`2<string, ThreadPoolStatistics> threadPoolStats, IReadOnlyDictionary`2<TcpState, int> tcpStats, CancellationToken cancellationToken);
    private static bool MayHaveBody(Nullable`1<int> statusCode, HttpMethod httpMethod, long contentLength);
    private static ApiCallDetails Initialize(RequestData requestData, Exception exception, Nullable`1<int> statusCode, Dictionary`2<string, IEnumerable`1<string>> headers, string mimeType, IReadOnlyDictionary`2<string, ThreadPoolStatistics> threadPoolStats, IReadOnlyDictionary`2<TcpState, int> tcpStats, long contentLength);
    protected virtual bool RequiresErrorDeserialization(ApiCallDetails details, RequestData requestData);
    protected virtual bool TryGetError(ApiCallDetails apiCallDetails, RequestData requestData, Stream responseStream, TError& error);
    protected virtual void SetErrorOnResponse(TResponse response, TError error);
    private TResponse SetBody(ApiCallDetails details, RequestData requestData, Stream responseStream, string mimeType);
    private Task`1<TResponse> SetBodyAsync(ApiCallDetails details, RequestData requestData, Stream responseStream, string mimeType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Transport.DefaultResponseBuilder`1/<SetBodyCoreAsync>d__11`1")]
private ValueTask`1<TResponse> SetBodyCoreAsync(bool isAsync, ApiCallDetails details, RequestData requestData, Stream responseStream, string mimeType, CancellationToken cancellationToken);
    private static bool SetSpecialTypes(string mimeType, Byte[] bytes, MemoryStreamFactory memoryStreamFactory, TResponse& cs);
    [NullableContextAttribute("0")]
private static bool NeedsToEagerReadStream();
    private static Byte[] SwapStreams(Stream& responseStream, MemoryStream& ms);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.Diagnostics.AuditDiagnosticObserver : TypedDiagnosticObserver`1<Audit> {
    public AuditDiagnosticObserver(Action`1<KeyValuePair`2<string, Audit>> onNext, Action`1<Exception> onError, Action onCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.Diagnostics.Auditing.Audit : object {
    [CompilerGeneratedAttribute]
private AuditEvent <Event>k__BackingField;
    [CompilerGeneratedAttribute]
private Node <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathAndQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Ended>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Started>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public AuditEvent Event { get; internal set; }
    public Node Node { get; internal set; }
    public string PathAndQuery { get; internal set; }
    public DateTimeOffset Ended { get; internal set; }
    public DateTimeOffset Started { get; }
    public Exception Exception { get; internal set; }
    internal Audit(AuditEvent type, DateTimeOffset started);
    [CompilerGeneratedAttribute]
public AuditEvent get_Event();
    [CompilerGeneratedAttribute]
internal void set_Event(AuditEvent value);
    [CompilerGeneratedAttribute]
public Node get_Node();
    [CompilerGeneratedAttribute]
internal void set_Node(Node value);
    [CompilerGeneratedAttribute]
public string get_PathAndQuery();
    [CompilerGeneratedAttribute]
internal void set_PathAndQuery(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Ended();
    [CompilerGeneratedAttribute]
internal void set_Ended(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Started();
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
internal void set_Exception(Exception value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.Diagnostics.Auditing.Auditable : object {
    private Audit _audit;
    private DateTimeProvider _dateTimeProvider;
    unknown AuditEvent Event {public set; }
    unknown Exception Exception {public set; }
    unknown string PathAndQuery {public set; }
    public Auditable(AuditEvent type, List`1& auditTrail, DateTimeProvider dateTimeProvider, Node node);
    public void set_Event(AuditEvent value);
    public void set_Exception(Exception value);
    public void set_PathAndQuery(string value);
    public sealed virtual void Dispose();
}
public enum Elastic.Transport.Diagnostics.Auditing.AuditEvent : Enum {
    public int value__;
    public static AuditEvent SniffOnStartup;
    public static AuditEvent SniffOnFail;
    public static AuditEvent SniffOnStaleCluster;
    public static AuditEvent SniffSuccess;
    public static AuditEvent SniffFailure;
    public static AuditEvent PingSuccess;
    public static AuditEvent PingFailure;
    public static AuditEvent Resurrection;
    public static AuditEvent AllNodesDead;
    public static AuditEvent BadResponse;
    public static AuditEvent HealthyResponse;
    public static AuditEvent MaxTimeoutReached;
    public static AuditEvent MaxRetriesReached;
    public static AuditEvent BadRequest;
    public static AuditEvent NoNodesAttempted;
    public static AuditEvent CancellationRequested;
    public static AuditEvent FailedOverAllNodes;
}
[ExtensionAttribute]
internal static class Elastic.Transport.Diagnostics.Auditing.AuditEventExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string GetAuditDiagnosticEventName(AuditEvent event);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.Diagnostics.Diagnostic`1 : Diagnostic`2<TState, TState> {
    public Diagnostic`1(string operationName, DiagnosticSource source, TState state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.Diagnostics.Diagnostic`2 : Activity {
    [CompilerGeneratedAttribute]
private static Diagnostic`2<TState, TStateEnd> <Default>k__BackingField;
    private DiagnosticSource _source;
    private TStateEnd _endState;
    private bool _default;
    private bool _disposed;
    public static Diagnostic`2<TState, TStateEnd> Default { get; }
    public TStateEnd EndState { get; internal set; }
    public Diagnostic`2(string operationName, DiagnosticSource source, TState state);
    private static Diagnostic`2();
    [CompilerGeneratedAttribute]
public static Diagnostic`2<TState, TStateEnd> get_Default();
    public TStateEnd get_EndState();
    internal void set_EndState(TStateEnd value);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Transport.Diagnostics.DiagnosticSources : object {
    [CompilerGeneratedAttribute]
private static AuditDiagnosticKeys <AuditTrailEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private static RequestPipelineDiagnosticKeys <RequestPipeline>k__BackingField;
    [CompilerGeneratedAttribute]
private static HttpConnectionDiagnosticKeys <HttpConnection>k__BackingField;
    [CompilerGeneratedAttribute]
private static SerializerDiagnosticKeys <Serializer>k__BackingField;
    [CompilerGeneratedAttribute]
private static EmptyDisposable <SingletonDisposable>k__BackingField;
    public static AuditDiagnosticKeys AuditTrailEvents { get; }
    public static RequestPipelineDiagnosticKeys RequestPipeline { get; }
    public static HttpConnectionDiagnosticKeys HttpConnection { get; }
    public static SerializerDiagnosticKeys Serializer { get; }
    internal static EmptyDisposable SingletonDisposable { get; }
    private static DiagnosticSources();
    [CompilerGeneratedAttribute]
public static AuditDiagnosticKeys get_AuditTrailEvents();
    [CompilerGeneratedAttribute]
public static RequestPipelineDiagnosticKeys get_RequestPipeline();
    [CompilerGeneratedAttribute]
public static HttpConnectionDiagnosticKeys get_HttpConnection();
    [CompilerGeneratedAttribute]
public static SerializerDiagnosticKeys get_Serializer();
    [CompilerGeneratedAttribute]
internal static EmptyDisposable get_SingletonDisposable();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.Diagnostics.HttpConnectionDiagnosticObserver : TypedDiagnosticObserver`2<RequestData, Nullable`1<int>> {
    public HttpConnectionDiagnosticObserver(Action`1<KeyValuePair`2<string, RequestData>> onNextStart, Action`1<KeyValuePair`2<string, Nullable`1<int>>> onNextEnd, Action`1<Exception> onError, Action onCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Elastic.Transport.Diagnostics.OpenTelemetry : object {
    internal static string OpenTelemetrySchemaVersion;
    internal static int MinimumMillisecondsToEmitTimingSpanAttribute;
    public static string ElasticTransportActivitySourceName;
    internal static ActivitySource ElasticTransportActivitySource;
    public static bool ElasticTransportActivitySourceHasListeners { get; }
    internal static bool CurrentSpanIsElasticTransportOwnedAndHasListeners { get; }
    internal static bool CurrentSpanIsElasticTransportOwnedHasListenersAndAllDataRequested { get; }
    private static OpenTelemetry();
    public static bool get_ElasticTransportActivitySourceHasListeners();
    internal static bool get_CurrentSpanIsElasticTransportOwnedAndHasListeners();
    internal static bool get_CurrentSpanIsElasticTransportOwnedHasListenersAndAllDataRequested();
    internal static void SetCommonAttributes(Activity activity, OpenTelemetryData openTelemetryData, ITransportConfiguration settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Transport.Diagnostics.OpenTelemetryAttributes : object {
    public static string ElasticTransportProductName;
    public static string ElasticTransportProductVersion;
    public static string ElasticTransportVersion;
    public static string ElasticTransportSchemaVersion;
    public static string DbElasticsearchSchemaUrl;
    public static string ElasticTransportAttemptedNodes;
    public static string ElasticTransportPrepareRequestMs;
    public static string ElasticTransportDeserializeResponseMs;
    public static string DbElasticsearchClusterName;
    public static string DbElasticsearchNodeName;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Elastic.Transport.Diagnostics.OpenTelemetryData : ValueType {
    [CompilerGeneratedAttribute]
private string <SpanName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <SpanAttributes>k__BackingField;
    public string SpanName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, object> SpanAttributes { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SpanName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SpanName(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_SpanAttributes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SpanAttributes(Dictionary`2<string, object> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.Diagnostics.RequestPipelineDiagnosticObserver : TypedDiagnosticObserver`2<RequestData, ApiCallDetails> {
    public RequestPipelineDiagnosticObserver(Action`1<KeyValuePair`2<string, RequestData>> onNextStart, Action`1<KeyValuePair`2<string, ApiCallDetails>> onNextEnd, Action`1<Exception> onError, Action onCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Transport.Diagnostics.ResponseStatics : object {
    private static string RequestAlreadyCaptured;
    private static string ResponseAlreadyCaptured;
    private static ResponseStatics();
    public static string DebugInformationBuilder(ApiCallDetails r, StringBuilder sb);
    public static void DebugAuditTrailExceptions(IEnumerable`1<Audit> auditTrail, StringBuilder sb);
    public static void DebugAuditTrail(IEnumerable`1<Audit> auditTrail, StringBuilder sb);
    private static void AuditNodeUrl(StringBuilder sb, Audit audit);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Transport.Diagnostics.SemanticConventions : object {
    public static string DbSystem;
    public static string DbUser;
    public static string HttpResponseStatusCode;
    public static string HttpRequestMethod;
    public static string ServerAddress;
    public static string ServerPort;
    public static string UrlFull;
    public static string UserAgentOriginal;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.Diagnostics.SerializerDiagnosticObserver : TypedDiagnosticObserver`1<SerializerRegistrationInformation> {
    public SerializerDiagnosticObserver(Action`1<KeyValuePair`2<string, SerializerRegistrationInformation>> onNext, Action`1<Exception> onError, Action onCompleted);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Transport.Diagnostics.TcpStats : object {
    private static int StateLength;
    private static ReadOnlyDictionary`2<TcpState, int> Empty;
    private static TcpStats();
    public static TcpConnectionInformation[] GetActiveTcpConnections();
    public static ReadOnlyDictionary`2<TcpState, int> GetStates();
    public static TcpStatistics GetTcpStatistics(NetworkInterfaceComponent version);
}
public class Elastic.Transport.Diagnostics.ThreadPoolStatistics : object {
    [CompilerGeneratedAttribute]
private int <Busy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Free>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Min>k__BackingField;
    public int Busy { get; }
    public int Free { get; }
    public int Max { get; }
    public int Min { get; }
    public ThreadPoolStatistics(int min, int max, int busy, int free);
    [CompilerGeneratedAttribute]
public int get_Busy();
    [CompilerGeneratedAttribute]
public int get_Free();
    [CompilerGeneratedAttribute]
public int get_Max();
    [CompilerGeneratedAttribute]
public int get_Min();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Elastic.Transport.Diagnostics.ThreadPoolStats : object {
    private static string WorkerThreads;
    private static string CompletionPortThreads;
    private static ThreadPoolStats();
    public static ReadOnlyDictionary`2<string, ThreadPoolStatistics> GetStats();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Elastic.Transport.Diagnostics.TypedDiagnosticObserver`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`1<KeyValuePair`2<string, TOnNext>> _onNext;
    private Action`1<Exception> _onError;
    private Action _onCompleted;
    protected TypedDiagnosticObserver`1(Action`1<KeyValuePair`2<string, TOnNext>> onNext, Action`1<Exception> onError, Action onCompleted);
    private sealed virtual override void System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnCompleted();
    private sealed virtual override void System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnError(Exception error);
    private sealed virtual override void System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnNext(KeyValuePair`2<string, object> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.Diagnostics.TypedDiagnosticObserver`2 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`1<KeyValuePair`2<string, TOnNextStart>> _onNextStart;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`1<KeyValuePair`2<string, TOnNextEnd>> _onNextEnd;
    private Action`1<Exception> _onError;
    private Action _onCompleted;
    protected TypedDiagnosticObserver`2(Action`1<KeyValuePair`2<string, TOnNextStart>> onNextStart, Action`1<KeyValuePair`2<string, TOnNextEnd>> onNextEnd, Action`1<Exception> onError, Action onCompleted);
    private sealed virtual override void System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnCompleted();
    private sealed virtual override void System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnError(Exception error);
    private sealed virtual override void System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnNext(KeyValuePair`2<string, object> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Elastic.Transport.DistributedTransport : DistributedTransport`1<TransportConfiguration> {
    public DistributedTransport(TransportConfiguration configurationValues);
    [NullableContextAttribute("2")]
internal DistributedTransport(TransportConfiguration configurationValues, RequestPipelineFactory`1<TransportConfiguration> pipelineProvider, DateTimeProvider dateTimeProvider, MemoryStreamFactory memoryStreamFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.DistributedTransport`1 : object {
    private ProductRegistration _productRegistration;
    [CompilerGeneratedAttribute]
private DateTimeProvider <DateTimeProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private MemoryStreamFactory <MemoryStreamFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestPipelineFactory`1<TConfiguration> <PipelineProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private TConfiguration <Configuration>k__BackingField;
    private DateTimeProvider DateTimeProvider { get; }
    private MemoryStreamFactory MemoryStreamFactory { get; }
    private RequestPipelineFactory`1<TConfiguration> PipelineProvider { get; }
    public TConfiguration Configuration { get; }
    [NullableContextAttribute("2")]
public DistributedTransport`1(TConfiguration configurationValues, RequestPipelineFactory`1<TConfiguration> pipelineProvider, DateTimeProvider dateTimeProvider, MemoryStreamFactory memoryStreamFactory);
    [CompilerGeneratedAttribute]
private DateTimeProvider get_DateTimeProvider();
    [CompilerGeneratedAttribute]
private MemoryStreamFactory get_MemoryStreamFactory();
    [CompilerGeneratedAttribute]
private RequestPipelineFactory`1<TConfiguration> get_PipelineProvider();
    [CompilerGeneratedAttribute]
public sealed virtual TConfiguration get_Configuration();
    public TResponse Request(HttpMethod method, string path, PostData data, RequestParameters requestParameters, OpenTelemetryData& openTelemetryData);
    public Task`1<TResponse> RequestAsync(HttpMethod method, string path, PostData data, RequestParameters requestParameters, OpenTelemetryData& openTelemetryData, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Transport.DistributedTransport`1/<RequestCoreAsync>d__16`1")]
private ValueTask`1<TResponse> RequestCoreAsync(bool isAsync, HttpMethod method, string path, PostData data, RequestParameters requestParameters, OpenTelemetryData openTelemetryData, CancellationToken cancellationToken);
    private static void ThrowUnexpectedTransportException(Exception killerException, List`1<PipelineException> seenExceptions, RequestData requestData, TResponse response, RequestPipeline pipeline);
    private static void HandlePipelineException(TResponse& response, PipelineException ex, RequestPipeline pipeline, Node node, List`1& seenExceptions);
    private TResponse FinalizeResponse(RequestData requestData, RequestPipeline pipeline, List`1<PipelineException> seenExceptions, TResponse response);
    [NullableContextAttribute("2")]
private static ApiCallDetails GetMostRecentCallDetails(TResponse response, IEnumerable`1<PipelineException> seenExceptions);
    private void HandleTransportException(RequestData data, Exception clientException, TransportResponse response);
    private void Ping(RequestPipeline pipeline, Node node);
    [AsyncStateMachineAttribute("Elastic.Transport.DistributedTransport`1/<PingAsync>d__23")]
private Task PingAsync(RequestPipeline pipeline, Node node, CancellationToken cancellationToken);
    private sealed virtual override TResponse Elastic.Transport.ITransport.Request(HttpMethod method, string path, PostData postData, RequestParameters requestParameters, OpenTelemetryData& modreq(System.Runtime.InteropServices.InAttribute) openTelemetryData);
    private sealed virtual override Task`1<TResponse> Elastic.Transport.ITransport.RequestAsync(HttpMethod method, string path, PostData postData, RequestParameters requestParameters, OpenTelemetryData& modreq(System.Runtime.InteropServices.InAttribute) openTelemetryData, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Elastic.Transport.DynamicDictionary : DynamicObject {
    private IDictionary`2<string, DynamicValue> _backingDictionary;
    private static Regex SplitRegex;
    public int Count { get; }
    public static DynamicDictionary Empty { get; }
    public bool IsReadOnly { get; }
    public DynamicValue Item { get; public set; }
    public ICollection`1<string> Keys { get; }
    public ICollection`1<DynamicValue> Values { get; }
    private static DynamicDictionary();
    public sealed virtual int get_Count();
    public Dictionary`2<string, object> ToDictionary();
    public static DynamicDictionary get_Empty();
    public sealed virtual bool get_IsReadOnly();
    public T Get(string path);
    public sealed virtual DynamicValue get_Item(string name);
    public sealed virtual void set_Item(string name, DynamicValue value);
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual ICollection`1<DynamicValue> get_Values();
    public sealed virtual void Add(KeyValuePair`2<string, DynamicValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<string, DynamicValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual bool Remove(KeyValuePair`2<string, DynamicValue> item);
    public sealed virtual void Add(string key, DynamicValue value);
    public sealed virtual bool ContainsKey(string key);
    public sealed virtual bool Remove(string key);
    public sealed virtual bool TryGetValue(string key, DynamicValue& value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, DynamicValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Elastic.Transport.DynamicValue>>.GetEnumerator();
    public sealed virtual bool Equals(DynamicDictionary other);
    public static DynamicDictionary Create(IDictionary`2<string, object> values);
    public static DynamicDictionary Create(JsonElement e);
    public virtual bool TrySetMember(SetMemberBinder binder, object value);
    public virtual bool TryGetMember(GetMemberBinder binder, Object& result);
    public virtual IEnumerable`1<string> GetDynamicMemberNames();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private static string GetNeutralKey(string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.DynamicDictionaryConverter : JsonConverter`1<DynamicDictionary> {
    public virtual DynamicDictionary Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, DynamicDictionary dictionary, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Elastic.Transport.DynamicResponse : TransportResponse`1<DynamicDictionary> {
    [CompilerGeneratedAttribute]
private DynamicDictionary <Dictionary>k__BackingField;
    private DynamicDictionary Dictionary { get; }
    public DynamicResponse(DynamicDictionary dictionary);
    [CompilerGeneratedAttribute]
private DynamicDictionary get_Dictionary();
    public T Get(string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Elastic.Transport.DynamicValue : DynamicObject {
    private object _value;
    [CompilerGeneratedAttribute]
private static DynamicValue <NullValue>k__BackingField;
    public bool HasValue { get; }
    public DynamicValue Item { get; }
    public static DynamicValue NullValue { get; }
    public object Value { get; }
    public int Count { get; }
    public DynamicValue Item { get; }
    public DynamicValue(object value);
    private static DynamicValue();
    public bool get_HasValue();
    public DynamicValue get_Item(string name);
    public T Get(string path);
    [CompilerGeneratedAttribute]
public static DynamicValue get_NullValue();
    public static DynamicValue SelfOrNew(object v);
    public object get_Value();
    public sealed virtual TypeCode GetTypeCode();
    public sealed virtual bool ToBoolean(IFormatProvider provider);
    public sealed virtual byte ToByte(IFormatProvider provider);
    public sealed virtual char ToChar(IFormatProvider provider);
    public sealed virtual DateTime ToDateTime(IFormatProvider provider);
    public sealed virtual decimal ToDecimal(IFormatProvider provider);
    public sealed virtual double ToDouble(IFormatProvider provider);
    public sealed virtual short ToInt16(IFormatProvider provider);
    public sealed virtual int ToInt32(IFormatProvider provider);
    public sealed virtual long ToInt64(IFormatProvider provider);
    [CLSCompliantAttribute("False")]
public sealed virtual sbyte ToSByte(IFormatProvider provider);
    public sealed virtual float ToSingle(IFormatProvider provider);
    public sealed virtual string ToString(IFormatProvider provider);
    public sealed virtual object ToType(Type conversionType, IFormatProvider provider);
    [CLSCompliantAttribute("False")]
public sealed virtual ushort ToUInt16(IFormatProvider provider);
    [CLSCompliantAttribute("False")]
public sealed virtual UInt32 ToUInt32(IFormatProvider provider);
    [CLSCompliantAttribute("False")]
public sealed virtual ulong ToUInt64(IFormatProvider provider);
    public IDictionary`2<string, DynamicValue> ToDictionary();
    public sealed virtual bool Equals(DynamicValue compareValue);
    public virtual bool TryGetMember(GetMemberBinder binder, Object& result);
    private bool Dispatch(Object& result, string name);
    private static object GetDynamicMember(object obj, string memberName);
    public T Default(T defaultValue);
    public T TryParse(T defaultValue);
    public static object ConsumeJsonElement(Type targetReturnType, JsonElement e);
    internal bool TryParse(object defaultValue, Type targetReturnType, object value, Object& newObject);
    public static bool op_Equality(DynamicValue dynamicValue, object compareValue);
    public static bool op_Inequality(DynamicValue dynamicValue, object compareValue);
    public virtual bool Equals(object compareValue);
    public virtual int GetHashCode();
    public virtual bool TryBinaryOperation(BinaryOperationBinder binder, object arg, Object& result);
    public virtual bool TryConvert(ConvertBinder binder, Object& result);
    public virtual string ToString();
    public static bool op_Implicit(DynamicValue dynamicValue);
    public static string op_Implicit(DynamicValue dynamicValue);
    public static int op_Implicit(DynamicValue dynamicValue);
    public static Guid op_Implicit(DynamicValue dynamicValue);
    public static DateTime op_Implicit(DynamicValue dynamicValue);
    public static DateTimeOffset op_Implicit(DynamicValue dynamicValue);
    public static TimeSpan op_Implicit(DynamicValue dynamicValue);
    public static long op_Implicit(DynamicValue dynamicValue);
    public static float op_Implicit(DynamicValue dynamicValue);
    public static decimal op_Implicit(DynamicValue dynamicValue);
    public static double op_Implicit(DynamicValue dynamicValue);
    [IteratorStateMachineAttribute("Elastic.Transport.DynamicValue/<ToEnumerable>d__57")]
public IEnumerable`1<DynamicValue> ToEnumerable();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<DynamicValue> GetEnumerator();
    public sealed virtual int get_Count();
    public DynamicValue get_Item(int i);
    [CompilerGeneratedAttribute]
internal static object <ConsumeJsonElement>g__ParseNumber|37_0(JsonElement el);
}
internal class Elastic.Transport.EmptyError : ErrorResponse {
    [NullableAttribute("1")]
public static EmptyError Instance;
    private static EmptyError();
    public virtual bool HasError();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.ErrorCauseConverter : ErrorCauseConverter`1<ErrorCause> {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.ErrorCauseConverter`1 : JsonConverter`1<TErrorCause> {
    public virtual TErrorCause Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    private static Nullable`1<int> ReadIntFromString(Utf8JsonReader& reader, JsonSerializerOptions options);
    private static IReadOnlyCollection`1<string> ReadSingleOrCollection(Utf8JsonReader& reader, JsonSerializerOptions options);
    protected virtual bool ReadMore(Utf8JsonReader& reader, JsonSerializerOptions options, string propertyName, TErrorCause errorCause);
    public virtual void Write(Utf8JsonWriter writer, TErrorCause value, JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
internal static void <Write>g__Serialize|4_0(Utf8JsonWriter writer, JsonSerializerOptions options, string name, T value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.ErrorConverter : ErrorCauseConverter`1<Error> {
    protected virtual bool ReadMore(Utf8JsonReader& reader, JsonSerializerOptions options, string propertyName, Error errorCause);
    [CompilerGeneratedAttribute]
internal static void <ReadMore>g__ReadAssign|0_0(Utf8JsonReader& r, Action`2<Error, T> set, <>c__DisplayClass0_0& );
}
public abstract class Elastic.Transport.ErrorResponse : object {
    public abstract virtual bool HasError();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.ExceptionConverter : JsonConverter`1<Exception> {
    public virtual bool CanConvert(Type typeToConvert);
    private static List`1<Dictionary`2<string, object>> FlattenExceptions(Exception e);
    private static Dictionary`2<string, object> ToDictionary(Exception e, int depth);
    public virtual Exception Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, Exception value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.ExpiredHandlerTrackingEntry : object {
    private WeakReference _livenessTracker;
    [CompilerGeneratedAttribute]
private HttpMessageHandler <InnerHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Key>k__BackingField;
    public bool CanDispose { get; }
    public HttpMessageHandler InnerHandler { get; }
    public int Key { get; }
    public ExpiredHandlerTrackingEntry(ActiveHandlerTrackingEntry other);
    public bool get_CanDispose();
    [CompilerGeneratedAttribute]
public HttpMessageHandler get_InnerHandler();
    [CompilerGeneratedAttribute]
public int get_Key();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Transport.Extensions.EmptyReadOnly`1 : object {
    public static IReadOnlyCollection`1<TElement> Collection;
    public static IReadOnlyList`1<TElement> List;
    private static EmptyReadOnly`1();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Elastic.Transport.Extensions.EmptyReadOnly`2 : object {
    [NullableAttribute("1")]
public static IReadOnlyDictionary`2<TKey, TValue> Dictionary;
    private static EmptyReadOnly`2();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Transport.Extensions.EmptyReadOnlyExtensions : object {
    [ExtensionAttribute]
public static IReadOnlyCollection`1<T> ToReadOnlyCollection(IEnumerable`1<T> enumerable);
    [ExtensionAttribute]
public static IReadOnlyCollection`1<T> ToReadOnlyCollection(IList`1<T> enumerable);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Elastic.Transport.Extensions.EnumExtensions : object {
    private static ConcurrentDictionary`2<Type, Func`2<Enum, string>> EnumStringResolvers;
    private static EnumExtensions();
    [ExtensionAttribute]
internal static string GetStringValue(HttpMethod enumValue);
    [ExtensionAttribute]
public static string GetStringValue(Enum e);
    private static Func`2<Enum, string> GetEnumStringResolver(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Transport.Extensions.Extensions : object {
    private static long MillisecondsInAWeek;
    private static long MillisecondsInADay;
    private static long MillisecondsInAnHour;
    private static long MillisecondsInAMinute;
    private static long MillisecondsInASecond;
    [ExtensionAttribute]
[ObsoleteAttribute("Please use the overload placing the enumerated array as out")]
internal static bool HasAny(ICollection`1<T> list);
    [ExtensionAttribute]
internal static bool HasAny(IEnumerable`1<T> list, T[]& enumerated);
    [ExtensionAttribute]
internal static IEnumerable`1<T> DistinctByCustom(IEnumerable`1<T> items, Func`2<T, TKey> property);
    [ExtensionAttribute]
internal static void ThrowIfEmpty(IEnumerable`1<T> object, string parameterName);
    [ExtensionAttribute]
internal static void ThrowIfNull(T value, string name);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static bool IsNullOrEmpty(string value);
    [ExtensionAttribute]
internal static string Utf8String(Byte[] bytes);
    [ExtensionAttribute]
internal static string Utf8String(MemoryStream ms);
    [ExtensionAttribute]
internal static Byte[] Utf8Bytes(string s);
    [ExtensionAttribute]
internal static string ToTimeUnit(TimeSpan timeSpan);
    [ExtensionAttribute]
internal static Exception AsAggregateOrFirst(IEnumerable`1<Exception> exceptions);
}
internal static class Elastic.Transport.Extensions.Fluent : object {
    [NullableContextAttribute("1")]
internal static TDescriptor Assign(TDescriptor self, TValue value, Action`2<TInterface, TValue> assign);
}
[ExtensionAttribute]
internal static class Elastic.Transport.Extensions.JsonElementExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IDictionary`2<string, object> ToDictionary(JsonElement e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Transport.Extensions.NameValueCollectionExtensions : object {
    private static int MaxCharsOnStack;
    [ExtensionAttribute]
internal static string ToQueryString(NameValueCollection nv);
    [ExtensionAttribute]
internal static void UpdateFromDictionary(NameValueCollection queryString, Dictionary`2<string, object> queryStringUpdates, UrlFormatter provider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.Extensions.SemVersion : object {
    private static Regex Regex;
    [CompilerGeneratedAttribute]
private int <Major>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Minor>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Patch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prerelease>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Metadata>k__BackingField;
    public int Major { get; }
    public int Minor { get; }
    public int Patch { get; }
    public string Prerelease { get; }
    public string Metadata { get; }
    public SemVersion(int major, int minor, int patch);
    [NullableContextAttribute("2")]
public SemVersion(int major, int minor, int patch, string prerelease);
    [NullableContextAttribute("2")]
public SemVersion(int major, int minor, int patch, string prerelease, string metadata);
    private static SemVersion();
    [CompilerGeneratedAttribute]
public int get_Major();
    [CompilerGeneratedAttribute]
public int get_Minor();
    [CompilerGeneratedAttribute]
public int get_Patch();
    [CompilerGeneratedAttribute]
public string get_Prerelease();
    [CompilerGeneratedAttribute]
public string get_Metadata();
    public static bool op_Equality(SemVersion left, SemVersion right);
    public static bool op_Inequality(SemVersion left, SemVersion right);
    public static bool op_GreaterThan(SemVersion left, SemVersion right);
    public static bool op_GreaterThanOrEqual(SemVersion left, SemVersion right);
    public static bool op_LessThan(SemVersion left, SemVersion right);
    public static bool op_LessThanOrEqual(SemVersion left, SemVersion right);
    public static bool TryParse(string input, SemVersion& version);
    [NullableContextAttribute("2")]
public SemVersion Update(Nullable`1<int> major, Nullable`1<int> minor, Nullable`1<int> patch, string prerelease, string metadata);
    [NullableContextAttribute("2")]
public int CompareByPrecedence(SemVersion other);
    [NullableContextAttribute("2")]
public sealed virtual int CompareTo(SemVersion other);
    public sealed virtual int CompareTo(object obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(SemVersion other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    private static int CompareComponent(string a, string b, bool lower);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Elastic.Transport.Extensions.TransportSerializerExtensions : object {
    [ExtensionAttribute]
public static Byte[] SerializeToBytes(Serializer serializer, T data, SerializationFormatting formatting);
    [ExtensionAttribute]
public static Byte[] SerializeToBytes(Serializer serializer, T data, MemoryStreamFactory memoryStreamFactory, SerializationFormatting formatting);
    [ExtensionAttribute]
public static string SerializeToString(Serializer serializer, T data, SerializationFormatting formatting);
    [ExtensionAttribute]
public static string SerializeToString(Serializer serializer, T data, MemoryStreamFactory memoryStreamFactory, SerializationFormatting formatting);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Elastic.Transport.HeadersList : ValueType {
    private List`1<string> _headers;
    public int Count { get; }
    public HeadersList(IEnumerable`1<string> headers);
    public HeadersList(IEnumerable`1<string> headers, string additionalHeader);
    public HeadersList(IEnumerable`1<string> headers, IEnumerable`1<string> otherHeaders);
    public HeadersList(string header);
    public int get_Count();
    public sealed virtual IEnumerator`1<string> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public enum Elastic.Transport.HttpMethod : Enum {
    public int value__;
    [EnumMemberAttribute]
public static HttpMethod GET;
    [EnumMemberAttribute]
public static HttpMethod POST;
    [EnumMemberAttribute]
public static HttpMethod PUT;
    [EnumMemberAttribute]
public static HttpMethod DELETE;
    [EnumMemberAttribute]
public static HttpMethod HEAD;
}
[ExtensionAttribute]
public static class Elastic.Transport.HttpMethodExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string GetStringValue(HttpMethod httpMethod);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.HttpRequestInvoker : object {
    private static string MissingConnectionLimitMethodError;
    private string _expectedCertificateFingerprint;
    [CompilerGeneratedAttribute]
private static DiagnosticSource <DiagnosticSource>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestDataHttpClientFactory <HttpClientFactory>k__BackingField;
    public int InUseHandlers { get; }
    public int RemovedHandlers { get; }
    private static DiagnosticSource DiagnosticSource { get; }
    private RequestDataHttpClientFactory HttpClientFactory { get; }
    public HttpRequestInvoker(Func`3<HttpMessageHandler, RequestData, HttpMessageHandler> wrappingHandler);
    private static HttpRequestInvoker();
    public int get_InUseHandlers();
    public int get_RemovedHandlers();
    [CompilerGeneratedAttribute]
private static DiagnosticSource get_DiagnosticSource();
    [CompilerGeneratedAttribute]
private RequestDataHttpClientFactory get_HttpClientFactory();
    public sealed virtual TResponse Request(RequestData requestData);
    public sealed virtual Task`1<TResponse> RequestAsync(RequestData requestData, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Transport.HttpRequestInvoker/<RequestCoreAsync>d__16`1")]
private ValueTask`1<TResponse> RequestCoreAsync(bool isAsync, RequestData requestData, CancellationToken cancellationToken);
    private static Dictionary`2<string, IEnumerable`1<string>> ParseHeaders(RequestData requestData, HttpResponseMessage responseMessage);
    private HttpClient GetClient(RequestData requestData);
    protected HttpMessageHandler CreateHttpClientHandler(RequestData requestData);
    private string ComparableFingerprint(string fingerprint);
    internal HttpRequestMessage CreateHttpRequestMessage(RequestData requestData);
    internal void SetAuthenticationIfNeeded(HttpRequestMessage requestMessage, RequestData requestData);
    private static void SetConfiguredAuthenticationHeaderIfNeeded(HttpRequestMessage requestMessage, RequestData requestData);
    private static HttpRequestMessage CreateRequestMessage(RequestData requestData);
    private static void SetContent(HttpRequestMessage message, RequestData requestData);
    [AsyncStateMachineAttribute("Elastic.Transport.HttpRequestInvoker/<SetContentAsync>d__26")]
private static Task SetContentAsync(HttpRequestMessage message, RequestData requestData, CancellationToken cancellationToken);
    private static HttpMethod ConvertHttpMethod(HttpMethod httpMethod);
    internal static int GetClientKey(RequestData requestData);
    public virtual void DisposeManagedResources();
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private HttpMessageHandler <.ctor>b__2_0(RequestData r);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("CoreFX HttpWebRequest uses HttpClient under the covers but does not reuse HttpClient instances, do NOT use on .NET core only used as the default on Full Framework")]
public class Elastic.Transport.HttpWebRequestInvoker : object {
    private string _expectedCertificateFingerprint;
    [CompilerGeneratedAttribute]
private static bool <IsMono>k__BackingField;
    internal static bool IsMono { get; }
    private static HttpWebRequestInvoker();
    [CompilerGeneratedAttribute]
internal static bool get_IsMono();
    private sealed virtual override void System.IDisposable.Dispose();
    public sealed virtual TResponse Request(RequestData requestData);
    public sealed virtual Task`1<TResponse> RequestAsync(RequestData requestData, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Transport.HttpWebRequestInvoker/<RequestCoreAsync>d__9`1")]
private ValueTask`1<TResponse> RequestCoreAsync(bool isAsync, RequestData requestData, CancellationToken cancellationToken);
    private static Dictionary`2<string, IEnumerable`1<string>> ParseHeaders(RequestData requestData, HttpWebResponse responseMessage, Dictionary`2<string, IEnumerable`1<string>> responseHeaders);
    protected virtual HttpWebRequest CreateHttpWebRequest(RequestData requestData);
    protected virtual void SetClientCertificates(HttpWebRequest request, RequestData requestData);
    private string ComparableFingerprint(string fingerprint);
    protected virtual void SetServerCertificateValidationCallBackIfNeeded(HttpWebRequest request, RequestData requestData);
    private static HttpWebRequest CreateWebRequest(RequestData requestData);
    protected virtual void AlterServicePoint(ServicePoint requestServicePoint, RequestData requestData);
    protected virtual void SetProxyIfNeeded(HttpWebRequest request, RequestData requestData);
    protected virtual void SetAuthenticationIfNeeded(RequestData requestData, HttpWebRequest request);
    private static void SetBasicAuthenticationIfNeeded(HttpWebRequest request, RequestData requestData);
    private static Action RegisterApmTaskTimeout(IAsyncResult result, WebRequest request, RequestData requestData);
    private static void TimeoutCallback(object state, bool timedOut);
    private static void HandleResponse(HttpWebResponse response, Nullable`1& statusCode, Stream& responseStream, String& mimeType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.InMemoryRequestInvoker : object {
    private static Byte[] EmptyBody;
    private string _contentType;
    [NullableAttribute("2")]
private Exception _exception;
    private Byte[] _responseBody;
    private int _statusCode;
    private Dictionary`2<string, IEnumerable`1<string>> _headers;
    public InMemoryRequestInvoker(Byte[] responseBody, int statusCode, Exception exception, string contentType, Dictionary`2<string, IEnumerable`1<string>> headers);
    private static InMemoryRequestInvoker();
    private sealed virtual override void System.IDisposable.Dispose();
    public sealed virtual TResponse Request(RequestData requestData);
    public sealed virtual Task`1<TResponse> RequestAsync(RequestData requestData, CancellationToken cancellationToken);
    public TResponse BuildResponse(RequestData requestData, Byte[] responseBody, Nullable`1<int> statusCode, string contentType);
    [AsyncStateMachineAttribute("Elastic.Transport.InMemoryRequestInvoker/<BuildResponseAsync>d__12`1")]
public Task`1<TResponse> BuildResponseAsync(RequestData requestData, CancellationToken cancellationToken, Byte[] responseBody, Nullable`1<int> statusCode, string contentType);
}
[NullableContextAttribute("1")]
public interface Elastic.Transport.IRequestConfiguration {
    public string Accept { get; public set; }
    public IReadOnlyCollection`1<int> AllowedStatusCodes { get; public set; }
    public AuthorizationHeader AuthenticationHeader { get; public set; }
    public X509CertificateCollection ClientCertificates { get; public set; }
    public string ContentType { get; public set; }
    public Nullable`1<bool> DisableDirectStreaming { get; public set; }
    public Nullable`1<bool> DisableAuditTrail { get; public set; }
    public Nullable`1<bool> DisablePing { get; public set; }
    public Nullable`1<bool> DisableSniff { get; public set; }
    public Nullable`1<bool> EnableHttpPipelining { get; public set; }
    public Uri ForceNode { get; public set; }
    public Nullable`1<int> MaxRetries { get; public set; }
    public string OpaqueId { get; public set; }
    public Nullable`1<bool> ParseAllHeaders { get; public set; }
    public Nullable`1<TimeSpan> PingTimeout { get; public set; }
    public Nullable`1<TimeSpan> RequestTimeout { get; public set; }
    public HeadersList ResponseHeadersToParse { get; public set; }
    public string RunAs { get; public set; }
    public Nullable`1<bool> ThrowExceptions { get; public set; }
    public Nullable`1<bool> TransferEncodingChunked { get; public set; }
    public NameValueCollection Headers { get; public set; }
    public Nullable`1<bool> EnableTcpStats { get; public set; }
    public Nullable`1<bool> EnableThreadPoolStats { get; public set; }
    public RequestMetaData RequestMetaData { get; public set; }
    public abstract virtual string get_Accept();
    public abstract virtual void set_Accept(string value);
    public abstract virtual IReadOnlyCollection`1<int> get_AllowedStatusCodes();
    public abstract virtual void set_AllowedStatusCodes(IReadOnlyCollection`1<int> value);
    public abstract virtual AuthorizationHeader get_AuthenticationHeader();
    public abstract virtual void set_AuthenticationHeader(AuthorizationHeader value);
    public abstract virtual X509CertificateCollection get_ClientCertificates();
    public abstract virtual void set_ClientCertificates(X509CertificateCollection value);
    public abstract virtual string get_ContentType();
    public abstract virtual void set_ContentType(string value);
    public abstract virtual Nullable`1<bool> get_DisableDirectStreaming();
    public abstract virtual void set_DisableDirectStreaming(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_DisableAuditTrail();
    public abstract virtual void set_DisableAuditTrail(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_DisablePing();
    public abstract virtual void set_DisablePing(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_DisableSniff();
    public abstract virtual void set_DisableSniff(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_EnableHttpPipelining();
    public abstract virtual void set_EnableHttpPipelining(Nullable`1<bool> value);
    public abstract virtual Uri get_ForceNode();
    public abstract virtual void set_ForceNode(Uri value);
    public abstract virtual Nullable`1<int> get_MaxRetries();
    public abstract virtual void set_MaxRetries(Nullable`1<int> value);
    public abstract virtual string get_OpaqueId();
    public abstract virtual void set_OpaqueId(string value);
    public abstract virtual Nullable`1<bool> get_ParseAllHeaders();
    public abstract virtual void set_ParseAllHeaders(Nullable`1<bool> value);
    public abstract virtual Nullable`1<TimeSpan> get_PingTimeout();
    public abstract virtual void set_PingTimeout(Nullable`1<TimeSpan> value);
    public abstract virtual Nullable`1<TimeSpan> get_RequestTimeout();
    public abstract virtual void set_RequestTimeout(Nullable`1<TimeSpan> value);
    public abstract virtual HeadersList get_ResponseHeadersToParse();
    public abstract virtual void set_ResponseHeadersToParse(HeadersList value);
    public abstract virtual string get_RunAs();
    public abstract virtual void set_RunAs(string value);
    public abstract virtual Nullable`1<bool> get_ThrowExceptions();
    public abstract virtual void set_ThrowExceptions(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_TransferEncodingChunked();
    public abstract virtual void set_TransferEncodingChunked(Nullable`1<bool> value);
    public abstract virtual NameValueCollection get_Headers();
    public abstract virtual void set_Headers(NameValueCollection value);
    public abstract virtual Nullable`1<bool> get_EnableTcpStats();
    public abstract virtual void set_EnableTcpStats(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_EnableThreadPoolStats();
    public abstract virtual void set_EnableThreadPoolStats(Nullable`1<bool> value);
    public abstract virtual RequestMetaData get_RequestMetaData();
    public abstract virtual void set_RequestMetaData(RequestMetaData value);
}
[NullableContextAttribute("1")]
public interface Elastic.Transport.IRequestInvoker {
    public abstract virtual Task`1<TResponse> RequestAsync(RequestData requestData, CancellationToken cancellationToken);
    public abstract virtual TResponse Request(RequestData requestData);
}
[NullableContextAttribute("1")]
public interface Elastic.Transport.IStringable {
    public abstract virtual string GetString();
}
[NullableContextAttribute("1")]
public interface Elastic.Transport.ITransport {
    public abstract virtual TResponse Request(HttpMethod method, string path, PostData postData, RequestParameters requestParameters, OpenTelemetryData& modreq(System.Runtime.InteropServices.InAttribute) openTelemetryData);
    public abstract virtual Task`1<TResponse> RequestAsync(HttpMethod method, string path, PostData postData, RequestParameters requestParameters, OpenTelemetryData& modreq(System.Runtime.InteropServices.InAttribute) openTelemetryData, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Elastic.Transport.ITransport`1 {
    public TConfiguration Configuration { get; }
    public abstract virtual TConfiguration get_Configuration();
}
[NullableContextAttribute("1")]
public interface Elastic.Transport.ITransportConfiguration {
    public AuthorizationHeader Authentication { get; }
    public SemaphoreSlim BootstrapLock { get; }
    public X509CertificateCollection ClientCertificates { get; }
    public IRequestInvoker Connection { get; }
    public int ConnectionLimit { get; }
    public NodePool NodePool { get; }
    public ProductRegistration ProductRegistration { get; }
    public Nullable`1<TimeSpan> DeadTimeout { get; }
    public bool DisableAutomaticProxyDetection { get; }
    public bool DisableDirectStreaming { get; }
    public bool DisableAuditTrail { get; }
    public bool DisablePings { get; }
    public bool EnableHttpCompression { get; }
    public NameValueCollection Headers { get; }
    public bool HttpPipeliningEnabled { get; }
    public Nullable`1<TimeSpan> KeepAliveInterval { get; }
    public Nullable`1<TimeSpan> KeepAliveTime { get; }
    public Nullable`1<TimeSpan> MaxDeadTimeout { get; }
    public Nullable`1<int> MaxRetries { get; }
    public Nullable`1<TimeSpan> MaxRetryTimeout { get; }
    public MemoryStreamFactory MemoryStreamFactory { get; }
    public Func`2<Node, bool> NodePredicate { get; }
    public Action`1<ApiCallDetails> OnRequestCompleted { get; }
    public Action`1<RequestData> OnRequestDataCreated { get; }
    public Nullable`1<bool> ParseAllHeaders { get; }
    public Nullable`1<TimeSpan> PingTimeout { get; }
    public string ProxyAddress { get; }
    public string ProxyPassword { get; }
    public string ProxyUsername { get; }
    public NameValueCollection QueryStringParameters { get; }
    public Serializer RequestResponseSerializer { get; }
    public TimeSpan RequestTimeout { get; }
    public HeadersList ResponseHeadersToParse { get; }
    public Func`5<object, X509Certificate, X509Chain, SslPolicyErrors, bool> ServerCertificateValidationCallback { get; }
    public string CertificateFingerprint { get; }
    public IReadOnlyCollection`1<int> SkipDeserializationForStatusCodes { get; }
    public Nullable`1<TimeSpan> SniffInformationLifeSpan { get; }
    public bool SniffsOnConnectionFault { get; }
    public bool SniffsOnStartup { get; }
    public bool ThrowExceptions { get; }
    public UrlFormatter UrlFormatter { get; }
    public UserAgent UserAgent { get; }
    public Func`3<HttpMethod, int, bool> StatusCodeToResponseSuccess { get; }
    public bool TransferEncodingChunked { get; }
    public TimeSpan DnsRefreshTimeout { get; }
    public bool EnableTcpStats { get; }
    public bool EnableThreadPoolStats { get; }
    public bool PrettyJson { get; }
    public MetaHeaderProvider MetaHeaderProvider { get; }
    public bool DisableMetaHeader { get; }
    public abstract virtual AuthorizationHeader get_Authentication();
    public abstract virtual SemaphoreSlim get_BootstrapLock();
    public abstract virtual X509CertificateCollection get_ClientCertificates();
    public abstract virtual IRequestInvoker get_Connection();
    public abstract virtual int get_ConnectionLimit();
    public abstract virtual NodePool get_NodePool();
    public abstract virtual ProductRegistration get_ProductRegistration();
    public abstract virtual Nullable`1<TimeSpan> get_DeadTimeout();
    public abstract virtual bool get_DisableAutomaticProxyDetection();
    public abstract virtual bool get_DisableDirectStreaming();
    public abstract virtual bool get_DisableAuditTrail();
    public abstract virtual bool get_DisablePings();
    public abstract virtual bool get_EnableHttpCompression();
    public abstract virtual NameValueCollection get_Headers();
    public abstract virtual bool get_HttpPipeliningEnabled();
    public abstract virtual Nullable`1<TimeSpan> get_KeepAliveInterval();
    public abstract virtual Nullable`1<TimeSpan> get_KeepAliveTime();
    public abstract virtual Nullable`1<TimeSpan> get_MaxDeadTimeout();
    public abstract virtual Nullable`1<int> get_MaxRetries();
    public abstract virtual Nullable`1<TimeSpan> get_MaxRetryTimeout();
    public abstract virtual MemoryStreamFactory get_MemoryStreamFactory();
    public abstract virtual Func`2<Node, bool> get_NodePredicate();
    public abstract virtual Action`1<ApiCallDetails> get_OnRequestCompleted();
    public abstract virtual Action`1<RequestData> get_OnRequestDataCreated();
    public abstract virtual Nullable`1<bool> get_ParseAllHeaders();
    public abstract virtual Nullable`1<TimeSpan> get_PingTimeout();
    public abstract virtual string get_ProxyAddress();
    public abstract virtual string get_ProxyPassword();
    public abstract virtual string get_ProxyUsername();
    public abstract virtual NameValueCollection get_QueryStringParameters();
    public abstract virtual Serializer get_RequestResponseSerializer();
    public abstract virtual TimeSpan get_RequestTimeout();
    public abstract virtual HeadersList get_ResponseHeadersToParse();
    public abstract virtual Func`5<object, X509Certificate, X509Chain, SslPolicyErrors, bool> get_ServerCertificateValidationCallback();
    public abstract virtual string get_CertificateFingerprint();
    public abstract virtual IReadOnlyCollection`1<int> get_SkipDeserializationForStatusCodes();
    public abstract virtual Nullable`1<TimeSpan> get_SniffInformationLifeSpan();
    public abstract virtual bool get_SniffsOnConnectionFault();
    public abstract virtual bool get_SniffsOnStartup();
    public abstract virtual bool get_ThrowExceptions();
    public abstract virtual UrlFormatter get_UrlFormatter();
    public abstract virtual UserAgent get_UserAgent();
    public abstract virtual Func`3<HttpMethod, int, bool> get_StatusCodeToResponseSuccess();
    public abstract virtual bool get_TransferEncodingChunked();
    public abstract virtual TimeSpan get_DnsRefreshTimeout();
    public abstract virtual bool get_EnableTcpStats();
    public abstract virtual bool get_EnableThreadPoolStats();
    public abstract virtual bool get_PrettyJson();
    public abstract virtual MetaHeaderProvider get_MetaHeaderProvider();
    public abstract virtual bool get_DisableMetaHeader();
}
[NullableContextAttribute("1")]
public interface Elastic.Transport.IUrlParameter {
    public abstract virtual string GetString(ITransportConfiguration settings);
}
internal class Elastic.Transport.LifetimeTrackingHttpMessageHandler : DelegatingHandler {
    [NullableContextAttribute("1")]
public LifetimeTrackingHttpMessageHandler(HttpMessageHandler innerHandler);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.LowLevelRequestResponseSerializer : Serializer {
    internal static LowLevelRequestResponseSerializer Instance;
    private Lazy`1<JsonSerializerOptions> _indented;
    private Lazy`1<JsonSerializerOptions> _none;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<JsonConverter> <AdditionalConverters>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<JsonConverter> <BakedInConverters>k__BackingField;
    private IReadOnlyCollection`1<JsonConverter> AdditionalConverters { get; }
    private IList`1<JsonConverter> BakedInConverters { get; }
    public LowLevelRequestResponseSerializer(IEnumerable`1<JsonConverter> converters);
    private static LowLevelRequestResponseSerializer();
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<JsonConverter> get_AdditionalConverters();
    [CompilerGeneratedAttribute]
private IList`1<JsonConverter> get_BakedInConverters();
    public JsonSerializerOptions CreateSerializerOptions(SerializationFormatting formatting);
    [NullableContextAttribute("2")]
private static bool TryReturnDefault(Stream stream, T& deserialize);
    private JsonSerializerOptions GetFormatting(SerializationFormatting formatting);
    public virtual object Deserialize(Type type, Stream stream);
    public virtual T Deserialize(Stream stream);
    public virtual void Serialize(T data, Stream stream, SerializationFormatting formatting);
    [AsyncStateMachineAttribute("Elastic.Transport.LowLevelRequestResponseSerializer/<SerializeAsync>d__17`1")]
public virtual Task SerializeAsync(T data, Stream stream, SerializationFormatting formatting, CancellationToken cancellationToken);
    public virtual ValueTask`1<object> DeserializeAsync(Type type, Stream stream, CancellationToken cancellationToken);
    public virtual ValueTask`1<T> DeserializeAsync(Stream stream, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private JsonSerializerOptions <.ctor>b__10_0();
    [CompilerGeneratedAttribute]
private JsonSerializerOptions <.ctor>b__10_1();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.MemoryStreamFactory : object {
    public abstract virtual MemoryStream Create();
    public abstract virtual MemoryStream Create(Byte[] bytes);
    public abstract virtual MemoryStream Create(Byte[] bytes, int index, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.MetaDataHeader : object {
    private static char _separator;
    private string _headerValue;
    private static string _httpClientIdentifier;
    [CompilerGeneratedAttribute]
private string <ServiceIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransportVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RuntimeVersion>k__BackingField;
    public string ServiceIdentifier { get; private set; }
    public string ClientVersion { get; private set; }
    public string TransportVersion { get; private set; }
    public string RuntimeVersion { get; private set; }
    public MetaDataHeader(VersionInfo version, string serviceIdentifier, bool isAsync);
    private static MetaDataHeader();
    [CompilerGeneratedAttribute]
public string get_ServiceIdentifier();
    [CompilerGeneratedAttribute]
private void set_ServiceIdentifier(string value);
    [CompilerGeneratedAttribute]
public string get_ClientVersion();
    [CompilerGeneratedAttribute]
private void set_ClientVersion(string value);
    [CompilerGeneratedAttribute]
public string get_TransportVersion();
    [CompilerGeneratedAttribute]
private void set_TransportVersion(string value);
    [CompilerGeneratedAttribute]
public string get_RuntimeVersion();
    [CompilerGeneratedAttribute]
private void set_RuntimeVersion(string value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.MetaHeaderProducer : object {
    public string HeaderName { get; }
    public abstract virtual string get_HeaderName();
    public abstract virtual string ProduceHeaderValue(RequestData requestData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.MetaHeaderProvider : object {
    public MetaHeaderProducer[] Producers { get; }
    public abstract virtual MetaHeaderProducer[] get_Producers();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.Node : object {
    private IReadOnlyCollection`1<string> _features;
    private HashSet`1<string> _featureSet;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAlive>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <DeadUntil>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FailedAttempts>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsResurrected>k__BackingField;
    public IReadOnlyCollection`1<string> Features { get; public set; }
    public IReadOnlyDictionary`2<string, object> Settings { get; public set; }
    public string Id { get; internal set; }
    public string Name { get; public set; }
    public Uri Uri { get; }
    public bool IsAlive { get; private set; }
    public DateTimeOffset DeadUntil { get; private set; }
    public int FailedAttempts { get; private set; }
    public bool IsResurrected { get; public set; }
    public Node(Uri uri, IEnumerable`1<string> features);
    public IReadOnlyCollection`1<string> get_Features();
    public void set_Features(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_Settings();
    [CompilerGeneratedAttribute]
public void set_Settings(IReadOnlyDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public bool get_IsAlive();
    [CompilerGeneratedAttribute]
private void set_IsAlive(bool value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_DeadUntil();
    [CompilerGeneratedAttribute]
private void set_DeadUntil(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public int get_FailedAttempts();
    [CompilerGeneratedAttribute]
private void set_FailedAttempts(int value);
    [CompilerGeneratedAttribute]
public bool get_IsResurrected();
    [CompilerGeneratedAttribute]
public void set_IsResurrected(bool value);
    public bool HasFeature(string feature);
    public void MarkDead(DateTimeOffset until);
    public void MarkAlive();
    public Uri CreatePath(string path);
    public Node Clone();
    public sealed virtual bool Equals(Node other);
    public static bool op_Equality(Node left, Node right);
    public static bool op_Inequality(Node left, Node right);
    public static Node op_Implicit(Uri uri);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.NodePool : object {
    private bool _disposed;
    [CompilerGeneratedAttribute]
private bool <SniffedOnStartup>k__BackingField;
    public DateTimeOffset LastUpdate { get; protected set; }
    public int MaxRetries { get; }
    public IReadOnlyCollection`1<Node> Nodes { get; }
    public bool SniffedOnStartup { get; private set; }
    public bool SupportsPinging { get; }
    public bool SupportsReseeding { get; }
    public bool UsingSsl { get; protected set; }
    public abstract virtual DateTimeOffset get_LastUpdate();
    protected abstract virtual void set_LastUpdate(DateTimeOffset value);
    public abstract virtual int get_MaxRetries();
    public abstract virtual IReadOnlyCollection`1<Node> get_Nodes();
    [CompilerGeneratedAttribute]
public bool get_SniffedOnStartup();
    [CompilerGeneratedAttribute]
private void set_SniffedOnStartup(bool value);
    public void MarkAsSniffed();
    public abstract virtual bool get_SupportsPinging();
    public abstract virtual bool get_SupportsReseeding();
    public abstract virtual bool get_UsingSsl();
    protected abstract virtual void set_UsingSsl(bool value);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    public abstract virtual IEnumerable`1<Node> CreateView(Action`2<AuditEvent, Node> audit);
    public abstract virtual void Reseed(IEnumerable`1<Node> nodes);
}
internal static class Elastic.Transport.NonCapturingTimer : object {
    [NullableContextAttribute("1")]
public static Timer Create(TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Elastic.Transport.PipelineException : Exception {
    [CompilerGeneratedAttribute]
private PipelineFailure <FailureReason>k__BackingField;
    [CompilerGeneratedAttribute]
private TransportResponse <Response>k__BackingField;
    public PipelineFailure FailureReason { get; }
    public bool Recoverable { get; }
    public TransportResponse Response { get; internal set; }
    public PipelineException(PipelineFailure failure);
    [NullableContextAttribute("1")]
public PipelineException(PipelineFailure failure, Exception innerException);
    [CompilerGeneratedAttribute]
public PipelineFailure get_FailureReason();
    public bool get_Recoverable();
    [CompilerGeneratedAttribute]
public TransportResponse get_Response();
    [CompilerGeneratedAttribute]
internal void set_Response(TransportResponse value);
    [NullableContextAttribute("1")]
private static string GetMessage(PipelineFailure failure);
}
public enum Elastic.Transport.PipelineFailure : Enum {
    public int value__;
    public static PipelineFailure BadAuthentication;
    public static PipelineFailure BadResponse;
    public static PipelineFailure PingFailure;
    public static PipelineFailure SniffFailure;
    public static PipelineFailure CouldNotStartSniffOnStartup;
    public static PipelineFailure MaxTimeoutReached;
    public static PipelineFailure MaxRetriesReached;
    public static PipelineFailure Unexpected;
    public static PipelineFailure BadRequest;
    public static PipelineFailure NoNodesAttempted;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.PostData : object {
    protected static int BufferSize;
    protected static Byte[] NewLineByteArray;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableDirectStreaming>k__BackingField;
    [CompilerGeneratedAttribute]
private PostType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <WrittenBytes>k__BackingField;
    public Nullable`1<bool> DisableDirectStreaming { get; public set; }
    public PostType Type { get; private set; }
    public Byte[] WrittenBytes { get; private set; }
    public static PostData Empty { get; }
    private static PostData();
    public static PostData Bytes(Byte[] bytes);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableDirectStreaming();
    [CompilerGeneratedAttribute]
public void set_DisableDirectStreaming(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public PostType get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(PostType value);
    [CompilerGeneratedAttribute]
public Byte[] get_WrittenBytes();
    [CompilerGeneratedAttribute]
private void set_WrittenBytes(Byte[] value);
    public static PostData get_Empty();
    public abstract virtual void Write(Stream writableStream, ITransportConfiguration settings);
    public abstract virtual Task WriteAsync(Stream writableStream, ITransportConfiguration settings, CancellationToken cancellationToken);
    public static PostData op_Implicit(Byte[] byteArray);
    protected Stream InitWrite(Stream writableStream, ITransportConfiguration settings, MemoryStream& buffer, Boolean& disableDirectStreaming);
    protected void BufferIfNeeded(ITransportConfiguration settings, MemoryStream& buffer, Stream& stream);
    protected void FinishStream(Stream writableStream, MemoryStream buffer, ITransportConfiguration settings);
    [AsyncStateMachineAttribute("Elastic.Transport.PostData/<FinishStreamAsync>d__24")]
protected ValueTask FinishStreamAsync(Stream writableStream, MemoryStream buffer, ITransportConfiguration settings, CancellationToken ctx);
    public static PostData MultiJson(IEnumerable`1<string> listOfString);
    public static PostData MultiJson(IEnumerable`1<T> listOfSerializables);
    [NullableContextAttribute("0")]
public static PostData ReadOnlyMemory(ReadOnlyMemory`1<byte> bytes);
    public static PostData Serializable(T data);
    public static PostData StreamHandler(T state, Action`2<T, Stream> syncWriter, Func`4<T, Stream, CancellationToken, Task> asyncWriter);
    public static PostData String(string serializedString);
    public static PostData op_Implicit(string literalString);
}
public enum Elastic.Transport.PostType : Enum {
    public int value__;
    public static PostType ByteArray;
    public static PostType ReadOnlyMemory;
    public static PostType LiteralString;
    public static PostType Serializable;
    public static PostType EnumerableOfString;
    public static PostType EnumerableOfObject;
    public static PostType StreamHandler;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.Products.DefaultProductRegistration : ProductRegistration {
    private HeadersList _headers;
    private MetaHeaderProvider _metaHeaderProvider;
    [CompilerGeneratedAttribute]
private static DefaultProductRegistration <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductAssemblyVersion>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <DefaultOpenTelemetryAttributes>k__BackingField;
    public static DefaultProductRegistration Default { get; }
    public string Name { get; }
    [NullableAttribute("2")]
public string ServiceIdentifier { get; }
    public bool SupportsPing { get; }
    public bool SupportsSniff { get; }
    public HeadersList ResponseHeadersToParse { get; }
    public MetaHeaderProvider MetaHeaderProvider { get; }
    public string DefaultMimeType { get; }
    public string ProductAssemblyVersion { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, object> DefaultOpenTelemetryAttributes { get; }
    private static DefaultProductRegistration();
    [CompilerGeneratedAttribute]
public static DefaultProductRegistration get_Default();
    public virtual string get_Name();
    [NullableContextAttribute("2")]
public virtual string get_ServiceIdentifier();
    public virtual bool get_SupportsPing();
    public virtual bool get_SupportsSniff();
    public virtual int SniffOrder(Node node);
    public virtual bool NodePredicate(Node node);
    public virtual HeadersList get_ResponseHeadersToParse();
    public virtual MetaHeaderProvider get_MetaHeaderProvider();
    public virtual string get_DefaultMimeType();
    [CompilerGeneratedAttribute]
public virtual string get_ProductAssemblyVersion();
    [CompilerGeneratedAttribute]
public virtual IReadOnlyDictionary`2<string, object> get_DefaultOpenTelemetryAttributes();
    public virtual bool HttpStatusCodeClassifier(HttpMethod method, int statusCode);
    public virtual bool TryGetServerErrorReason(TResponse response, String& reason);
    public virtual RequestData CreateSniffRequestData(Node node, IRequestConfiguration requestConfiguration, ITransportConfiguration settings, MemoryStreamFactory memoryStreamFactory);
    public virtual Task`1<Tuple`2<TransportResponse, IReadOnlyCollection`1<Node>>> SniffAsync(IRequestInvoker requestInvoker, bool forceSsl, RequestData requestData, CancellationToken cancellationToken);
    public virtual Tuple`2<TransportResponse, IReadOnlyCollection`1<Node>> Sniff(IRequestInvoker requestInvoker, bool forceSsl, RequestData requestData);
    public virtual RequestData CreatePingRequestData(Node node, RequestConfiguration requestConfiguration, ITransportConfiguration global, MemoryStreamFactory memoryStreamFactory);
    public virtual Task`1<TransportResponse> PingAsync(IRequestInvoker requestInvoker, RequestData pingData, CancellationToken cancellationToken);
    public virtual TransportResponse Ping(IRequestInvoker requestInvoker, RequestData pingData);
    public virtual IReadOnlyCollection`1<string> DefaultHeadersToParse();
    public virtual Dictionary`2<string, object> ParseOpenTelemetryAttributesFromApiCallDetails(ApiCallDetails callDetails);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Elastic.Transport.Products.Elasticsearch.ElasticsearchErrorExtensions : object {
    [ExtensionAttribute]
public static bool TryGetElasticsearchServerError(StringResponse response, ElasticsearchServerError& serverError);
    [ExtensionAttribute]
public static bool TryGetElasticsearchServerError(BytesResponse response, ElasticsearchServerError& serverError);
    [ExtensionAttribute]
public static bool TryGetElasticsearchServerError(TransportResponse response, ElasticsearchServerError& serverError);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Elastic.Transport.Products.Elasticsearch.ElasticsearchNodeFeatures : object {
    public static string HoldsData;
    public static string HttpEnabled;
    public static string IngestEnabled;
    public static string MasterEligible;
    public static IReadOnlyCollection`1<string> Default;
    public static IReadOnlyCollection`1<string> MasterEligibleOnly;
    public static IReadOnlyCollection`1<string> NotMasterEligible;
    private static ElasticsearchNodeFeatures();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.Products.Elasticsearch.ElasticsearchProductRegistration : ProductRegistration {
    internal static string XFoundHandlingClusterHeader;
    internal static string XFoundHandlingInstanceHeader;
    private HeadersList _headers;
    private MetaHeaderProvider _metaHeaderProvider;
    private Nullable`1<int> _clientMajorVersion;
    private static string _clusterName;
    private static String[] _all;
    private static String[] _instanceHeader;
    [CompilerGeneratedAttribute]
private static ProductRegistration <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsPing>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsSniff>k__BackingField;
    public static string SniffPath;
    [CompilerGeneratedAttribute]
private string <ProductAssemblyVersion>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <DefaultOpenTelemetryAttributes>k__BackingField;
    public static ProductRegistration Default { get; }
    public string Name { get; }
    [NullableAttribute("2")]
public string ServiceIdentifier { get; }
    public bool SupportsPing { get; }
    public bool SupportsSniff { get; }
    public HeadersList ResponseHeadersToParse { get; }
    public MetaHeaderProvider MetaHeaderProvider { get; }
    public ResponseBuilder ResponseBuilder { get; }
    public string DefaultMimeType { get; }
    public string ProductAssemblyVersion { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, object> DefaultOpenTelemetryAttributes { get; }
    public ElasticsearchProductRegistration(Type markerType);
    private static ElasticsearchProductRegistration();
    [CompilerGeneratedAttribute]
public static ProductRegistration get_Default();
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [NullableContextAttribute("2")]
public virtual string get_ServiceIdentifier();
    [CompilerGeneratedAttribute]
public virtual bool get_SupportsPing();
    [CompilerGeneratedAttribute]
public virtual bool get_SupportsSniff();
    public virtual HeadersList get_ResponseHeadersToParse();
    public virtual MetaHeaderProvider get_MetaHeaderProvider();
    public virtual ResponseBuilder get_ResponseBuilder();
    public virtual string get_DefaultMimeType();
    public virtual int SniffOrder(Node node);
    public virtual bool NodePredicate(Node node);
    public virtual bool HttpStatusCodeClassifier(HttpMethod method, int statusCode);
    public virtual bool TryGetServerErrorReason(TResponse response, String& reason);
    public virtual RequestData CreateSniffRequestData(Node node, IRequestConfiguration requestConfiguration, ITransportConfiguration settings, MemoryStreamFactory memoryStreamFactory);
    [AsyncStateMachineAttribute("Elastic.Transport.Products.Elasticsearch.ElasticsearchProductRegistration/<SniffAsync>d__38")]
public virtual Task`1<Tuple`2<TransportResponse, IReadOnlyCollection`1<Node>>> SniffAsync(IRequestInvoker requestInvoker, bool forceSsl, RequestData requestData, CancellationToken cancellationToken);
    public virtual Tuple`2<TransportResponse, IReadOnlyCollection`1<Node>> Sniff(IRequestInvoker requestInvoker, bool forceSsl, RequestData requestData);
    public virtual RequestData CreatePingRequestData(Node node, RequestConfiguration requestConfiguration, ITransportConfiguration global, MemoryStreamFactory memoryStreamFactory);
    [AsyncStateMachineAttribute("Elastic.Transport.Products.Elasticsearch.ElasticsearchProductRegistration/<PingAsync>d__41")]
public virtual Task`1<TransportResponse> PingAsync(IRequestInvoker requestInvoker, RequestData pingData, CancellationToken cancellationToken);
    public virtual TransportResponse Ping(IRequestInvoker requestInvoker, RequestData pingData);
    public virtual IReadOnlyCollection`1<string> DefaultHeadersToParse();
    public virtual Dictionary`2<string, object> ParseOpenTelemetryAttributesFromApiCallDetails(ApiCallDetails callDetails);
    [CompilerGeneratedAttribute]
public virtual string get_ProductAssemblyVersion();
    [CompilerGeneratedAttribute]
public virtual IReadOnlyDictionary`2<string, object> get_DefaultOpenTelemetryAttributes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.Products.Elasticsearch.ElasticsearchResponse : TransportResponse {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ElasticsearchServerError <ElasticsearchServerError>k__BackingField;
    [JsonIgnoreAttribute]
public IEnumerable`1<string> ElasticsearchWarnings { get; }
    [JsonIgnoreAttribute]
public string DebugInformation { get; }
    [JsonIgnoreAttribute]
public bool IsValidResponse { get; }
    [NullableAttribute("2")]
[JsonIgnoreAttribute]
public ElasticsearchServerError ElasticsearchServerError { get; internal set; }
    [IteratorStateMachineAttribute("Elastic.Transport.Products.Elasticsearch.ElasticsearchResponse/<get_ElasticsearchWarnings>d__1")]
public IEnumerable`1<string> get_ElasticsearchWarnings();
    public string get_DebugInformation();
    public virtual bool get_IsValidResponse();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ElasticsearchServerError get_ElasticsearchServerError();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_ElasticsearchServerError(ElasticsearchServerError value);
    [NullableContextAttribute("2")]
public bool TryGetOriginalException(Exception& exception);
    protected virtual void DebugIsValid(StringBuilder sb);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.Products.Elasticsearch.ElasticsearchResponseBuilder : DefaultResponseBuilder`1<ElasticsearchServerError> {
    protected virtual void SetErrorOnResponse(TResponse response, ElasticsearchServerError error);
    protected virtual bool TryGetError(ApiCallDetails apiCallDetails, RequestData requestData, Stream responseStream, ElasticsearchServerError& error);
    protected sealed virtual bool RequiresErrorDeserialization(ApiCallDetails apiCallDetails, RequestData requestData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Elastic.Transport.Products.Elasticsearch.ElasticsearchServerError : ErrorResponse {
    [CompilerGeneratedAttribute]
private Error <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Status>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyNameAttribute("error")]
public Error Error { get; public set; }
    [DataMemberAttribute]
[JsonPropertyNameAttribute("status")]
public int Status { get; public set; }
    public ElasticsearchServerError(Error error, Nullable`1<int> statusCode);
    [CompilerGeneratedAttribute]
public Error get_Error();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Error(Error value);
    [CompilerGeneratedAttribute]
public int get_Status();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Status(int value);
    public static bool TryCreate(Stream stream, ElasticsearchServerError& serverError);
    public static ElasticsearchServerError Create(Stream stream);
    public static ValueTask`1<ElasticsearchServerError> CreateAsync(Stream stream, CancellationToken token);
    public virtual string ToString();
    public virtual bool HasError();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
[JsonConverterAttribute("Elastic.Transport.Products.Elasticsearch.ErrorConverter")]
public class Elastic.Transport.Products.Elasticsearch.Error : ErrorCause {
    private static IReadOnlyDictionary`2<string, string> DefaultHeaders;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ErrorCause> <RootCause>k__BackingField;
    [JsonPropertyNameAttribute("headers")]
public IReadOnlyDictionary`2<string, string> Headers { get; public set; }
    [JsonPropertyNameAttribute("root_cause")]
public IReadOnlyCollection`1<ErrorCause> RootCause { get; public set; }
    private static Error();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ErrorCause> get_RootCause();
    [CompilerGeneratedAttribute]
public void set_RootCause(IReadOnlyCollection`1<ErrorCause> value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
[JsonConverterAttribute("Elastic.Transport.ErrorCauseConverter")]
public class Elastic.Transport.Products.Elasticsearch.ErrorCause : object {
    private static IReadOnlyDictionary`2<string, object> DefaultDictionary;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorCause <CausedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexUUID>k__BackingField;
    public IReadOnlyDictionary`2<string, object> AdditionalProperties { get; internal set; }
    public string Type { get; internal set; }
    [JsonPropertyNameAttribute("stack_trace")]
public string StackTrace { get; internal set; }
    public string Reason { get; internal set; }
    public ErrorCause CausedBy { get; internal set; }
    public string Index { get; internal set; }
    public string IndexUUID { get; internal set; }
    private static ErrorCause();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
internal void set_AdditionalProperties(IReadOnlyDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_StackTrace();
    [CompilerGeneratedAttribute]
internal void set_StackTrace(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
internal void set_Reason(string value);
    [CompilerGeneratedAttribute]
public ErrorCause get_CausedBy();
    [CompilerGeneratedAttribute]
internal void set_CausedBy(ErrorCause value);
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_IndexUUID();
    [CompilerGeneratedAttribute]
internal void set_IndexUUID(string value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Transport.Products.Elasticsearch.ErrorConverter : JsonConverter`1<Error> {
    public virtual Error Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, Error value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.Products.Elasticsearch.NodeInfo : object {
    [CompilerGeneratedAttribute]
private string <build_hash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <host>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeInfoHttp <http>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ip>k__BackingField;
    [CompilerGeneratedAttribute]
private string <name>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <roles>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <settings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <transport_address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <version>k__BackingField;
    public string build_hash { get; public set; }
    public string host { get; public set; }
    public NodeInfoHttp http { get; public set; }
    public string ip { get; public set; }
    public string name { get; public set; }
    public IList`1<string> roles { get; public set; }
    public IDictionary`2<string, object> settings { get; public set; }
    public string transport_address { get; public set; }
    public string version { get; public set; }
    internal bool HoldsData { get; }
    internal bool HttpEnabled { get; }
    internal bool IngestEnabled { get; }
    internal bool MasterEligible { get; }
    [CompilerGeneratedAttribute]
public string get_build_hash();
    [CompilerGeneratedAttribute]
public void set_build_hash(string value);
    [CompilerGeneratedAttribute]
public string get_host();
    [CompilerGeneratedAttribute]
public void set_host(string value);
    [CompilerGeneratedAttribute]
public NodeInfoHttp get_http();
    [CompilerGeneratedAttribute]
public void set_http(NodeInfoHttp value);
    [CompilerGeneratedAttribute]
public string get_ip();
    [CompilerGeneratedAttribute]
public void set_ip(string value);
    [CompilerGeneratedAttribute]
public string get_name();
    [CompilerGeneratedAttribute]
public void set_name(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_roles();
    [CompilerGeneratedAttribute]
public void set_roles(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_settings();
    [CompilerGeneratedAttribute]
public void set_settings(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_transport_address();
    [CompilerGeneratedAttribute]
public void set_transport_address(string value);
    [CompilerGeneratedAttribute]
public string get_version();
    [CompilerGeneratedAttribute]
public void set_version(string value);
    internal bool get_HoldsData();
    internal bool get_HttpEnabled();
    internal bool get_IngestEnabled();
    internal bool get_MasterEligible();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.Products.Elasticsearch.NodeInfoHttp : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <bound_address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <publish_address>k__BackingField;
    public IList`1<string> bound_address { get; public set; }
    public string publish_address { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<string> get_bound_address();
    [CompilerGeneratedAttribute]
public void set_bound_address(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_publish_address();
    [CompilerGeneratedAttribute]
public void set_publish_address(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Elastic.Transport.Products.Elasticsearch.ShardFailure : object {
    [CompilerGeneratedAttribute]
private string <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorCause <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Shard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [JsonPropertyNameAttribute("index")]
public string Index { get; public set; }
    [JsonPropertyNameAttribute("node")]
public string Node { get; public set; }
    [JsonPropertyNameAttribute("reason")]
public ErrorCause Reason { get; public set; }
    [JsonPropertyNameAttribute("shard")]
[JsonNumberHandlingAttribute("1")]
public Nullable`1<int> Shard { get; public set; }
    [JsonPropertyNameAttribute("status")]
public string Status { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public ErrorCause get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(ErrorCause value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Shard();
    [CompilerGeneratedAttribute]
public void set_Shard(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Elastic.Transport.Products.Elasticsearch.SniffParser : object {
    [CompilerGeneratedAttribute]
private static Regex <AddressRegex>k__BackingField;
    public static Regex AddressRegex { get; }
    private static SniffParser();
    [CompilerGeneratedAttribute]
public static Regex get_AddressRegex();
    public static Uri ParseToUri(string boundAddress, bool forceHttp);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.Products.Elasticsearch.SniffResponse : TransportResponse {
    [CompilerGeneratedAttribute]
private string <cluster_name>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, NodeInfo> <nodes>k__BackingField;
    public string cluster_name { get; public set; }
    public Dictionary`2<string, NodeInfo> nodes { get; public set; }
    [CompilerGeneratedAttribute]
public string get_cluster_name();
    [CompilerGeneratedAttribute]
public void set_cluster_name(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, NodeInfo> get_nodes();
    [CompilerGeneratedAttribute]
public void set_nodes(Dictionary`2<string, NodeInfo> value);
    [IteratorStateMachineAttribute("Elastic.Transport.Products.Elasticsearch.SniffResponse/<ToNodes>d__8")]
public IEnumerable`1<Node> ToNodes(bool forceHttp);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.Products.ProductRegistration : object {
    public string DefaultMimeType { get; }
    public string Name { get; }
    [NullableAttribute("2")]
public string ServiceIdentifier { get; }
    public bool SupportsPing { get; }
    public bool SupportsSniff { get; }
    public HeadersList ResponseHeadersToParse { get; }
    public MetaHeaderProvider MetaHeaderProvider { get; }
    public string ProductAssemblyVersion { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, object> DefaultOpenTelemetryAttributes { get; }
    public ResponseBuilder ResponseBuilder { get; }
    public abstract virtual string get_DefaultMimeType();
    public abstract virtual string get_Name();
    [NullableContextAttribute("2")]
public abstract virtual string get_ServiceIdentifier();
    public abstract virtual bool get_SupportsPing();
    public abstract virtual bool get_SupportsSniff();
    public abstract virtual HeadersList get_ResponseHeadersToParse();
    public abstract virtual RequestData CreatePingRequestData(Node node, RequestConfiguration requestConfiguration, ITransportConfiguration global, MemoryStreamFactory memoryStreamFactory);
    public abstract virtual Task`1<TransportResponse> PingAsync(IRequestInvoker requestInvoker, RequestData pingData, CancellationToken cancellationToken);
    public abstract virtual TransportResponse Ping(IRequestInvoker requestInvoker, RequestData pingData);
    public abstract virtual RequestData CreateSniffRequestData(Node node, IRequestConfiguration requestConfiguration, ITransportConfiguration settings, MemoryStreamFactory memoryStreamFactory);
    public abstract virtual Task`1<Tuple`2<TransportResponse, IReadOnlyCollection`1<Node>>> SniffAsync(IRequestInvoker requestInvoker, bool forceSsl, RequestData requestData, CancellationToken cancellationToken);
    public abstract virtual Tuple`2<TransportResponse, IReadOnlyCollection`1<Node>> Sniff(IRequestInvoker requestInvoker, bool forceSsl, RequestData requestData);
    public abstract virtual int SniffOrder(Node node);
    public abstract virtual bool NodePredicate(Node node);
    public abstract virtual bool HttpStatusCodeClassifier(HttpMethod method, int statusCode);
    public abstract virtual bool TryGetServerErrorReason(TResponse response, String& reason);
    public abstract virtual MetaHeaderProvider get_MetaHeaderProvider();
    public abstract virtual string get_ProductAssemblyVersion();
    public abstract virtual IReadOnlyDictionary`2<string, object> get_DefaultOpenTelemetryAttributes();
    public abstract virtual IReadOnlyCollection`1<string> DefaultHeadersToParse();
    public abstract virtual Dictionary`2<string, object> ParseOpenTelemetryAttributesFromApiCallDetails(ApiCallDetails callDetails);
    public virtual ResponseBuilder get_ResponseBuilder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.RecyclableMemoryStream : MemoryStream {
    private static long MaxStreamLength;
    private static Byte[] EmptyArray;
    private List`1<Byte[]> _blocks;
    private Byte[] _byteBuffer;
    private Guid _id;
    private RecyclableMemoryStreamManager _memoryManager;
    private string _tag;
    private List`1<Byte[]> _dirtyBuffers;
    private long _disposedState;
    private Byte[] _largeBuffer;
    [CompilerGeneratedAttribute]
private string <AllocationStack>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisposeStack>k__BackingField;
    private int _length;
    private int _position;
    internal Guid Id { get; }
    internal string Tag { get; }
    internal RecyclableMemoryStreamManager MemoryManager { get; }
    internal string AllocationStack { get; }
    internal string DisposeStack { get; private set; }
    public int Capacity { get; public set; }
    public long Length { get; }
    public long Position { get; public set; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanTimeout { get; }
    public bool CanWrite { get; }
    private bool Disposed { get; }
    public RecyclableMemoryStream(RecyclableMemoryStreamManager memoryManager);
    public RecyclableMemoryStream(RecyclableMemoryStreamManager memoryManager, Guid id);
    public RecyclableMemoryStream(RecyclableMemoryStreamManager memoryManager, string tag);
    public RecyclableMemoryStream(RecyclableMemoryStreamManager memoryManager, Guid id, string tag);
    public RecyclableMemoryStream(RecyclableMemoryStreamManager memoryManager, string tag, int requestedSize);
    public RecyclableMemoryStream(RecyclableMemoryStreamManager memoryManager, Guid id, string tag, int requestedSize);
    internal RecyclableMemoryStream(RecyclableMemoryStreamManager memoryManager, Guid id, string tag, int requestedSize, Byte[] initialLargeBuffer);
    private static RecyclableMemoryStream();
    internal Guid get_Id();
    internal string get_Tag();
    internal RecyclableMemoryStreamManager get_MemoryManager();
    [CompilerGeneratedAttribute]
internal string get_AllocationStack();
    [CompilerGeneratedAttribute]
internal string get_DisposeStack();
    [CompilerGeneratedAttribute]
private void set_DisposeStack(string value);
    protected virtual override void Finalize();
    protected virtual void Dispose(bool disposing);
    public virtual void Close();
    public virtual int get_Capacity();
    public virtual void set_Capacity(int value);
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanTimeout();
    public virtual bool get_CanWrite();
    public virtual Byte[] GetBuffer();
    [NullableContextAttribute("0")]
public virtual bool TryGetBuffer(ArraySegment`1& buffer);
    [ObsoleteAttribute("This method has degraded performance vs. GetBuffer and should be avoided.")]
public virtual Byte[] ToArray();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public int SafeRead(Byte[] buffer, int offset, int count, Int32& streamPosition);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual string ToString();
    public virtual void WriteByte(byte value);
    public virtual int ReadByte();
    public int SafeReadByte(Int32& streamPosition);
    public virtual void SetLength(long value);
    public virtual long Seek(long offset, SeekOrigin loc);
    public virtual void WriteTo(Stream stream);
    private bool get_Disposed();
    private void CheckDisposed();
    private int InternalRead(Byte[] buffer, int offset, int count, int fromPosition);
    private BlockAndOffset GetBlockAndRelativeOffset(int offset);
    private void EnsureCapacity(int newCapacity);
    private void ReleaseLargeBuffer();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.RecyclableMemoryStreamFactory : MemoryStreamFactory {
    private static string TagSource;
    private RecyclableMemoryStreamManager _manager;
    [CompilerGeneratedAttribute]
private static RecyclableMemoryStreamFactory <Default>k__BackingField;
    public static RecyclableMemoryStreamFactory Default { get; }
    private static RecyclableMemoryStreamFactory();
    [CompilerGeneratedAttribute]
public static RecyclableMemoryStreamFactory get_Default();
    private static RecyclableMemoryStreamManager CreateManager(bool experimental);
    public virtual MemoryStream Create();
    public virtual MemoryStream Create(Byte[] bytes);
    public virtual MemoryStream Create(Byte[] bytes, int index, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.RecyclableMemoryStreamManager : object {
    public static Events EventsWriter;
    public static int DefaultBlockSize;
    public static int DefaultLargeBufferMultiple;
    public static int DefaultMaximumBufferSize;
    private Int64[] _largeBufferFreeSize;
    private Int64[] _largeBufferInUseSize;
    private ConcurrentStack`1[] _largePools;
    private ConcurrentStack`1<Byte[]> _smallPool;
    private long _smallPoolFreeSize;
    private long _smallPoolInUseSize;
    [CompilerGeneratedAttribute]
private bool <AggressiveBufferReturn>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BlockSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GenerateCallStacks>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LargeBufferMultiple>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumBufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MaximumFreeLargePoolBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MaximumFreeSmallPoolBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MaximumStreamCapacity>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseExponentialLargeBuffer>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHandler BlockCreated;
    [CompilerGeneratedAttribute]
private EventHandler BlockDiscarded;
    [CompilerGeneratedAttribute]
private EventHandler LargeBufferCreated;
    [CompilerGeneratedAttribute]
private EventHandler StreamCreated;
    [CompilerGeneratedAttribute]
private EventHandler StreamDisposed;
    [CompilerGeneratedAttribute]
private EventHandler StreamFinalized;
    [CompilerGeneratedAttribute]
private StreamLengthReportHandler StreamLength;
    [CompilerGeneratedAttribute]
private EventHandler StreamConvertedToArray;
    [CompilerGeneratedAttribute]
private LargeBufferDiscardedEventHandler LargeBufferDiscarded;
    [CompilerGeneratedAttribute]
private UsageReportEventHandler UsageReport;
    public bool AggressiveBufferReturn { get; public set; }
    public int BlockSize { get; }
    public bool GenerateCallStacks { get; public set; }
    public int LargeBufferMultiple { get; }
    public long LargeBuffersFree { get; }
    public long LargePoolFreeSize { get; }
    public long LargePoolInUseSize { get; }
    public int MaximumBufferSize { get; }
    public long MaximumFreeLargePoolBytes { get; public set; }
    public long MaximumFreeSmallPoolBytes { get; public set; }
    public long MaximumStreamCapacity { get; public set; }
    public long SmallBlocksFree { get; }
    public long SmallPoolFreeSize { get; }
    public long SmallPoolInUseSize { get; }
    public bool UseExponentialLargeBuffer { get; }
    public bool UseMultipleLargeBuffer { get; }
    public RecyclableMemoryStreamManager(int blockSize, int largeBufferMultiple, int maximumBufferSize);
    public RecyclableMemoryStreamManager(int blockSize, int largeBufferMultiple, int maximumBufferSize, bool useExponentialLargeBuffer);
    private static RecyclableMemoryStreamManager();
    [CompilerGeneratedAttribute]
public bool get_AggressiveBufferReturn();
    [CompilerGeneratedAttribute]
public void set_AggressiveBufferReturn(bool value);
    [CompilerGeneratedAttribute]
public int get_BlockSize();
    [CompilerGeneratedAttribute]
public bool get_GenerateCallStacks();
    [CompilerGeneratedAttribute]
public void set_GenerateCallStacks(bool value);
    [CompilerGeneratedAttribute]
public int get_LargeBufferMultiple();
    public long get_LargeBuffersFree();
    public long get_LargePoolFreeSize();
    public long get_LargePoolInUseSize();
    [CompilerGeneratedAttribute]
public int get_MaximumBufferSize();
    [CompilerGeneratedAttribute]
public long get_MaximumFreeLargePoolBytes();
    [CompilerGeneratedAttribute]
public void set_MaximumFreeLargePoolBytes(long value);
    [CompilerGeneratedAttribute]
public long get_MaximumFreeSmallPoolBytes();
    [CompilerGeneratedAttribute]
public void set_MaximumFreeSmallPoolBytes(long value);
    [CompilerGeneratedAttribute]
public long get_MaximumStreamCapacity();
    [CompilerGeneratedAttribute]
public void set_MaximumStreamCapacity(long value);
    public long get_SmallBlocksFree();
    public long get_SmallPoolFreeSize();
    public long get_SmallPoolInUseSize();
    [CompilerGeneratedAttribute]
public bool get_UseExponentialLargeBuffer();
    public bool get_UseMultipleLargeBuffer();
    internal Byte[] GetBlock();
    internal Byte[] GetLargeBuffer(int requiredSize, string tag);
    private int RoundToLargeBufferSize(int requiredSize);
    private bool IsLargeBufferSize(int value);
    private int GetPoolIndex(int length);
    internal void ReturnLargeBuffer(Byte[] buffer, string tag);
    internal void ReturnBlocks(ICollection`1<Byte[]> blocks, string tag);
    internal void ReportBlockCreated();
    internal void ReportBlockDiscarded();
    internal void ReportLargeBufferCreated();
    internal void ReportLargeBufferDiscarded(MemoryStreamDiscardReason reason);
    internal void ReportStreamCreated();
    internal void ReportStreamDisposed();
    internal void ReportStreamFinalized();
    internal void ReportStreamLength(long bytes);
    internal void ReportStreamToArray();
    internal void ReportUsageReport(long smallPoolInUseBytes, long smallPoolFreeBytes, long largePoolInUseBytes, long largePoolFreeBytes);
    public MemoryStream GetStream();
    public MemoryStream GetStream(Byte[] bytes);
    public MemoryStream GetStream(Guid id);
    public MemoryStream GetStream(string tag);
    public MemoryStream GetStream(Guid id, string tag);
    public MemoryStream GetStream(string tag, int requiredSize);
    public MemoryStream GetStream(Guid id, string tag, int requiredSize);
    public MemoryStream GetStream(Guid id, string tag, int requiredSize, bool asContiguousBuffer);
    public MemoryStream GetStream(string tag, int requiredSize, bool asContiguousBuffer);
    public MemoryStream GetStream(Guid id, string tag, Byte[] buffer, int offset, int count);
    public MemoryStream GetStream(string tag, Byte[] buffer, int offset, int count);
    [CompilerGeneratedAttribute]
public void add_BlockCreated(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_BlockCreated(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_BlockDiscarded(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_BlockDiscarded(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_LargeBufferCreated(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_LargeBufferCreated(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_StreamCreated(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_StreamCreated(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_StreamDisposed(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_StreamDisposed(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_StreamFinalized(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_StreamFinalized(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_StreamLength(StreamLengthReportHandler value);
    [CompilerGeneratedAttribute]
public void remove_StreamLength(StreamLengthReportHandler value);
    [CompilerGeneratedAttribute]
public void add_StreamConvertedToArray(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_StreamConvertedToArray(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_LargeBufferDiscarded(LargeBufferDiscardedEventHandler value);
    [CompilerGeneratedAttribute]
public void remove_LargeBufferDiscarded(LargeBufferDiscardedEventHandler value);
    [CompilerGeneratedAttribute]
public void add_UsageReport(UsageReportEventHandler value);
    [CompilerGeneratedAttribute]
public void remove_UsageReport(UsageReportEventHandler value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.ReflectionVersionInfo : VersionInfo {
    private static SemVersion Empty;
    public static string TransportVersion;
    private ReflectionVersionInfo(SemVersion version);
    private static ReflectionVersionInfo();
    public static ReflectionVersionInfo Create();
    public static ReflectionVersionInfo Create(Type type);
    private static SemVersion DetermineVersionFromType(Type type);
    private static string GetVersionPrefixPart(string fullVersionName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.RequestConfiguration : object {
    [CompilerGeneratedAttribute]
private string <Accept>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<int> <AllowedStatusCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationHeader <AuthenticationHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private X509CertificateCollection <ClientCertificates>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableDirectStreaming>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableAuditTrail>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisablePing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableSniff>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableHttpPipelining>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ForceNode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OpaqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <PingTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <RequestTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunAs>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ThrowExceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TransferEncodingChunked>k__BackingField;
    [CompilerGeneratedAttribute]
private NameValueCollection <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableTcpStats>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableThreadPoolStats>k__BackingField;
    [CompilerGeneratedAttribute]
private HeadersList <ResponseHeadersToParse>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ParseAllHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMetaData <RequestMetaData>k__BackingField;
    public string Accept { get; public set; }
    public IReadOnlyCollection`1<int> AllowedStatusCodes { get; public set; }
    public AuthorizationHeader AuthenticationHeader { get; public set; }
    public X509CertificateCollection ClientCertificates { get; public set; }
    public string ContentType { get; public set; }
    public Nullable`1<bool> DisableDirectStreaming { get; public set; }
    public Nullable`1<bool> DisableAuditTrail { get; public set; }
    public Nullable`1<bool> DisablePing { get; public set; }
    public Nullable`1<bool> DisableSniff { get; public set; }
    public Nullable`1<bool> EnableHttpPipelining { get; public set; }
    public Uri ForceNode { get; public set; }
    public Nullable`1<int> MaxRetries { get; public set; }
    public string OpaqueId { get; public set; }
    public Nullable`1<TimeSpan> PingTimeout { get; public set; }
    public Nullable`1<TimeSpan> RequestTimeout { get; public set; }
    public string RunAs { get; public set; }
    public Nullable`1<bool> ThrowExceptions { get; public set; }
    public Nullable`1<bool> TransferEncodingChunked { get; public set; }
    public NameValueCollection Headers { get; public set; }
    public Nullable`1<bool> EnableTcpStats { get; public set; }
    public Nullable`1<bool> EnableThreadPoolStats { get; public set; }
    public HeadersList ResponseHeadersToParse { get; public set; }
    public Nullable`1<bool> ParseAllHeaders { get; public set; }
    public RequestMetaData RequestMetaData { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Accept();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Accept(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<int> get_AllowedStatusCodes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowedStatusCodes(IReadOnlyCollection`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual AuthorizationHeader get_AuthenticationHeader();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthenticationHeader(AuthorizationHeader value);
    [CompilerGeneratedAttribute]
public sealed virtual X509CertificateCollection get_ClientCertificates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ClientCertificates(X509CertificateCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DisableDirectStreaming();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisableDirectStreaming(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DisableAuditTrail();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisableAuditTrail(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DisablePing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisablePing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DisableSniff();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisableSniff(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_EnableHttpPipelining();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnableHttpPipelining(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_ForceNode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ForceNode(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxRetries();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxRetries(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_OpaqueId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OpaqueId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TimeSpan> get_PingTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PingTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TimeSpan> get_RequestTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequestTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RunAs();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RunAs(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ThrowExceptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ThrowExceptions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TransferEncodingChunked();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TransferEncodingChunked(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual NameValueCollection get_Headers();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Headers(NameValueCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_EnableTcpStats();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnableTcpStats(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_EnableThreadPoolStats();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnableThreadPoolStats(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual HeadersList get_ResponseHeadersToParse();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ResponseHeadersToParse(HeadersList value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ParseAllHeaders();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ParseAllHeaders(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual RequestMetaData get_RequestMetaData();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequestMetaData(RequestMetaData value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.RequestConfigurationDescriptor : object {
    [CompilerGeneratedAttribute]
private string <Elastic.Transport.IRequestConfiguration.Accept>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<int> <Elastic.Transport.IRequestConfiguration.AllowedStatusCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationHeader <Elastic.Transport.IRequestConfiguration.AuthenticationHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private X509CertificateCollection <Elastic.Transport.IRequestConfiguration.ClientCertificates>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Elastic.Transport.IRequestConfiguration.ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Elastic.Transport.IRequestConfiguration.DisableDirectStreaming>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Elastic.Transport.IRequestConfiguration.DisableAuditTrail>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Elastic.Transport.IRequestConfiguration.DisablePing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Elastic.Transport.IRequestConfiguration.DisableSniff>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Elastic.Transport.IRequestConfiguration.EnableHttpPipelining>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Elastic.Transport.IRequestConfiguration.ForceNode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Elastic.Transport.IRequestConfiguration.MaxRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Elastic.Transport.IRequestConfiguration.OpaqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Elastic.Transport.IRequestConfiguration.PingTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Elastic.Transport.IRequestConfiguration.RequestTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Elastic.Transport.IRequestConfiguration.RunAs>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Elastic.Transport.IRequestConfiguration.ThrowExceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Elastic.Transport.IRequestConfiguration.TransferEncodingChunked>k__BackingField;
    [CompilerGeneratedAttribute]
private NameValueCollection <Elastic.Transport.IRequestConfiguration.Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Elastic.Transport.IRequestConfiguration.EnableTcpStats>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Elastic.Transport.IRequestConfiguration.EnableThreadPoolStats>k__BackingField;
    [CompilerGeneratedAttribute]
private HeadersList <Elastic.Transport.IRequestConfiguration.ResponseHeadersToParse>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Elastic.Transport.IRequestConfiguration.ParseAllHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestMetaData <Elastic.Transport.IRequestConfiguration.RequestMetaData>k__BackingField;
    private string Elastic.Transport.IRequestConfiguration.Accept { get; private set; }
    private IReadOnlyCollection`1<int> Elastic.Transport.IRequestConfiguration.AllowedStatusCodes { get; private set; }
    private AuthorizationHeader Elastic.Transport.IRequestConfiguration.AuthenticationHeader { get; private set; }
    private X509CertificateCollection Elastic.Transport.IRequestConfiguration.ClientCertificates { get; private set; }
    private string Elastic.Transport.IRequestConfiguration.ContentType { get; private set; }
    private Nullable`1<bool> Elastic.Transport.IRequestConfiguration.DisableDirectStreaming { get; private set; }
    private Nullable`1<bool> Elastic.Transport.IRequestConfiguration.DisableAuditTrail { get; private set; }
    private Nullable`1<bool> Elastic.Transport.IRequestConfiguration.DisablePing { get; private set; }
    private Nullable`1<bool> Elastic.Transport.IRequestConfiguration.DisableSniff { get; private set; }
    private Nullable`1<bool> Elastic.Transport.IRequestConfiguration.EnableHttpPipelining { get; private set; }
    private Uri Elastic.Transport.IRequestConfiguration.ForceNode { get; private set; }
    private Nullable`1<int> Elastic.Transport.IRequestConfiguration.MaxRetries { get; private set; }
    private string Elastic.Transport.IRequestConfiguration.OpaqueId { get; private set; }
    private Nullable`1<TimeSpan> Elastic.Transport.IRequestConfiguration.PingTimeout { get; private set; }
    private Nullable`1<TimeSpan> Elastic.Transport.IRequestConfiguration.RequestTimeout { get; private set; }
    private string Elastic.Transport.IRequestConfiguration.RunAs { get; private set; }
    private IRequestConfiguration Self { get; }
    private Nullable`1<bool> Elastic.Transport.IRequestConfiguration.ThrowExceptions { get; private set; }
    private Nullable`1<bool> Elastic.Transport.IRequestConfiguration.TransferEncodingChunked { get; private set; }
    private NameValueCollection Elastic.Transport.IRequestConfiguration.Headers { get; private set; }
    private Nullable`1<bool> Elastic.Transport.IRequestConfiguration.EnableTcpStats { get; private set; }
    private Nullable`1<bool> Elastic.Transport.IRequestConfiguration.EnableThreadPoolStats { get; private set; }
    private HeadersList Elastic.Transport.IRequestConfiguration.ResponseHeadersToParse { get; private set; }
    private Nullable`1<bool> Elastic.Transport.IRequestConfiguration.ParseAllHeaders { get; private set; }
    private RequestMetaData Elastic.Transport.IRequestConfiguration.RequestMetaData { get; private set; }
    public RequestConfigurationDescriptor(IRequestConfiguration config);
    [CompilerGeneratedAttribute]
private sealed virtual override string Elastic.Transport.IRequestConfiguration.get_Accept();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_Accept(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IReadOnlyCollection`1<int> Elastic.Transport.IRequestConfiguration.get_AllowedStatusCodes();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_AllowedStatusCodes(IReadOnlyCollection`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override AuthorizationHeader Elastic.Transport.IRequestConfiguration.get_AuthenticationHeader();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_AuthenticationHeader(AuthorizationHeader value);
    [CompilerGeneratedAttribute]
private sealed virtual override X509CertificateCollection Elastic.Transport.IRequestConfiguration.get_ClientCertificates();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_ClientCertificates(X509CertificateCollection value);
    [CompilerGeneratedAttribute]
private sealed virtual override string Elastic.Transport.IRequestConfiguration.get_ContentType();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_ContentType(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> Elastic.Transport.IRequestConfiguration.get_DisableDirectStreaming();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_DisableDirectStreaming(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> Elastic.Transport.IRequestConfiguration.get_DisableAuditTrail();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_DisableAuditTrail(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> Elastic.Transport.IRequestConfiguration.get_DisablePing();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_DisablePing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> Elastic.Transport.IRequestConfiguration.get_DisableSniff();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_DisableSniff(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> Elastic.Transport.IRequestConfiguration.get_EnableHttpPipelining();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_EnableHttpPipelining(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Uri Elastic.Transport.IRequestConfiguration.get_ForceNode();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_ForceNode(Uri value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<int> Elastic.Transport.IRequestConfiguration.get_MaxRetries();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_MaxRetries(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string Elastic.Transport.IRequestConfiguration.get_OpaqueId();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_OpaqueId(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TimeSpan> Elastic.Transport.IRequestConfiguration.get_PingTimeout();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_PingTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<TimeSpan> Elastic.Transport.IRequestConfiguration.get_RequestTimeout();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_RequestTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
private sealed virtual override string Elastic.Transport.IRequestConfiguration.get_RunAs();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_RunAs(string value);
    private IRequestConfiguration get_Self();
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> Elastic.Transport.IRequestConfiguration.get_ThrowExceptions();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_ThrowExceptions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> Elastic.Transport.IRequestConfiguration.get_TransferEncodingChunked();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_TransferEncodingChunked(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override NameValueCollection Elastic.Transport.IRequestConfiguration.get_Headers();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_Headers(NameValueCollection value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> Elastic.Transport.IRequestConfiguration.get_EnableTcpStats();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_EnableTcpStats(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> Elastic.Transport.IRequestConfiguration.get_EnableThreadPoolStats();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_EnableThreadPoolStats(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override HeadersList Elastic.Transport.IRequestConfiguration.get_ResponseHeadersToParse();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_ResponseHeadersToParse(HeadersList value);
    [CompilerGeneratedAttribute]
private sealed virtual override Nullable`1<bool> Elastic.Transport.IRequestConfiguration.get_ParseAllHeaders();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_ParseAllHeaders(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
private sealed virtual override RequestMetaData Elastic.Transport.IRequestConfiguration.get_RequestMetaData();
    [CompilerGeneratedAttribute]
private sealed virtual override void Elastic.Transport.IRequestConfiguration.set_RequestMetaData(RequestMetaData value);
    public RequestConfigurationDescriptor RunAs(string username);
    public RequestConfigurationDescriptor RequestTimeout(TimeSpan requestTimeout);
    public RequestConfigurationDescriptor OpaqueId(string opaqueId);
    public RequestConfigurationDescriptor PingTimeout(TimeSpan pingTimeout);
    public RequestConfigurationDescriptor ContentType(string contentTypeHeader);
    public RequestConfigurationDescriptor Accept(string acceptHeader);
    public RequestConfigurationDescriptor AllowedStatusCodes(IEnumerable`1<int> codes);
    public RequestConfigurationDescriptor AllowedStatusCodes(Int32[] codes);
    public RequestConfigurationDescriptor DisableSniffing(Nullable`1<bool> disable);
    public RequestConfigurationDescriptor DisablePing(Nullable`1<bool> disable);
    public RequestConfigurationDescriptor ThrowExceptions(bool throwExceptions);
    public RequestConfigurationDescriptor DisableDirectStreaming(Nullable`1<bool> disable);
    public RequestConfigurationDescriptor DisableAuditTrail(Nullable`1<bool> disable);
    public RequestConfigurationDescriptor ForceNode(Uri uri);
    public RequestConfigurationDescriptor MaxRetries(int retry);
    public RequestConfigurationDescriptor Authentication(AuthorizationHeader authentication);
    public RequestConfigurationDescriptor EnableHttpPipelining(bool enable);
    public RequestConfigurationDescriptor ClientCertificates(X509CertificateCollection certificates);
    public RequestConfigurationDescriptor ClientCertificate(X509Certificate certificate);
    public RequestConfigurationDescriptor ClientCertificate(string certificatePath);
    public RequestConfigurationDescriptor TransferEncodingChunked(Nullable`1<bool> transferEncodingChunked);
    public RequestConfigurationDescriptor GlobalHeaders(NameValueCollection headers);
    public RequestConfigurationDescriptor EnableTcpStats(Nullable`1<bool> enableTcpStats);
    public RequestConfigurationDescriptor EnableThreadPoolStats(Nullable`1<bool> enableThreadPoolStats);
    public RequestConfigurationDescriptor ParseAllHeaders(Nullable`1<bool> enable);
    public RequestConfigurationDescriptor ResponseHeadersToParse(IEnumerable`1<string> headers);
    public RequestConfigurationDescriptor RequestMetaData(RequestMetaData metaData);
}
[ExtensionAttribute]
public static class Elastic.Transport.RequestConfigurationExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void SetRequestMetaData(IRequestConfiguration requestConfiguration, RequestMetaData requestMetaData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.RequestData : object {
    public static string DefaultMimeType;
    public static string MimeTypeTextPlain;
    public static string OpaqueIdHeader;
    public static string RunAsSecurityHeader;
    private Uri _requestUri;
    private Node _node;
    private string _path;
    [CompilerGeneratedAttribute]
private string <Accept>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<int> <AllowedStatusCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationHeader <AuthenticationHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private X509CertificateCollection <ClientCertificates>k__BackingField;
    [CompilerGeneratedAttribute]
private ITransportConfiguration <ConnectionSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private CustomResponseBuilder <CustomResponseBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableAutomaticProxyDetection>k__BackingField;
    [CompilerGeneratedAttribute]
private HeadersList <ResponseHeadersToParse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ParseAllHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private NameValueCollection <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HttpCompression>k__BackingField;
    [CompilerGeneratedAttribute]
private int <KeepAliveInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private int <KeepAliveTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MadeItToResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private MemoryStreamFactory <MemoryStreamFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMethod <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathAndQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <PingTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Pipelined>k__BackingField;
    [CompilerGeneratedAttribute]
private PostData <PostData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RequestTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunAs>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<int> <SkipDeserializationForStatusCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowExceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private UserAgent <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TransferEncodingChunked>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TcpStats>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThreadPoolStats>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DnsRefreshTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private MetaHeaderProvider <MetaHeaderProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <RequestMetaData>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAsync>k__BackingField;
    [CompilerGeneratedAttribute]
private OpenTelemetryData <OpenTelemetryData>k__BackingField;
    public string Accept { get; }
    public IReadOnlyCollection`1<int> AllowedStatusCodes { get; }
    public AuthorizationHeader AuthenticationHeader { get; }
    public X509CertificateCollection ClientCertificates { get; }
    public ITransportConfiguration ConnectionSettings { get; }
    public CustomResponseBuilder CustomResponseBuilder { get; }
    public bool DisableAutomaticProxyDetection { get; }
    public HeadersList ResponseHeadersToParse { get; }
    public bool ParseAllHeaders { get; }
    public NameValueCollection Headers { get; }
    public bool HttpCompression { get; }
    public int KeepAliveInterval { get; }
    public int KeepAliveTime { get; }
    public bool MadeItToResponse { get; public set; }
    public MemoryStreamFactory MemoryStreamFactory { get; }
    public HttpMethod Method { get; }
    [NullableAttribute("2")]
public Node Node { get; public set; }
    public AuditEvent OnFailureAuditEvent { get; }
    public PipelineFailure OnFailurePipelineFailure { get; }
    public string PathAndQuery { get; }
    public TimeSpan PingTimeout { get; }
    public bool Pipelined { get; }
    public PostData PostData { get; }
    public string ProxyAddress { get; }
    public string ProxyPassword { get; }
    public string ProxyUsername { get; }
    public string ContentType { get; }
    public TimeSpan RequestTimeout { get; }
    public string RunAs { get; }
    public IReadOnlyCollection`1<int> SkipDeserializationForStatusCodes { get; }
    public bool ThrowExceptions { get; }
    public UserAgent UserAgent { get; }
    public bool TransferEncodingChunked { get; }
    public bool TcpStats { get; }
    public bool ThreadPoolStats { get; }
    public Uri Uri { get; }
    public TimeSpan DnsRefreshTimeout { get; }
    public MetaHeaderProvider MetaHeaderProvider { get; }
    public IReadOnlyDictionary`2<string, string> RequestMetaData { get; }
    public bool IsAsync { get; internal set; }
    internal OpenTelemetryData OpenTelemetryData { get; }
    public RequestData(HttpMethod method, string path, PostData data, ITransportConfiguration global, RequestParameters local, MemoryStreamFactory memoryStreamFactory, OpenTelemetryData openTelemetryData);
    private RequestData(HttpMethod method, PostData data, ITransportConfiguration global, IRequestConfiguration local, MemoryStreamFactory memoryStreamFactory);
    [CompilerGeneratedAttribute]
public string get_Accept();
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<int> get_AllowedStatusCodes();
    [CompilerGeneratedAttribute]
public AuthorizationHeader get_AuthenticationHeader();
    [CompilerGeneratedAttribute]
public X509CertificateCollection get_ClientCertificates();
    [CompilerGeneratedAttribute]
public ITransportConfiguration get_ConnectionSettings();
    [CompilerGeneratedAttribute]
public CustomResponseBuilder get_CustomResponseBuilder();
    [CompilerGeneratedAttribute]
public bool get_DisableAutomaticProxyDetection();
    [CompilerGeneratedAttribute]
public HeadersList get_ResponseHeadersToParse();
    [CompilerGeneratedAttribute]
public bool get_ParseAllHeaders();
    [CompilerGeneratedAttribute]
public NameValueCollection get_Headers();
    [CompilerGeneratedAttribute]
public bool get_HttpCompression();
    [CompilerGeneratedAttribute]
public int get_KeepAliveInterval();
    [CompilerGeneratedAttribute]
public int get_KeepAliveTime();
    [CompilerGeneratedAttribute]
public bool get_MadeItToResponse();
    [CompilerGeneratedAttribute]
public void set_MadeItToResponse(bool value);
    [CompilerGeneratedAttribute]
public MemoryStreamFactory get_MemoryStreamFactory();
    [CompilerGeneratedAttribute]
public HttpMethod get_Method();
    [NullableContextAttribute("2")]
public Node get_Node();
    [NullableContextAttribute("2")]
public void set_Node(Node value);
    public AuditEvent get_OnFailureAuditEvent();
    public PipelineFailure get_OnFailurePipelineFailure();
    [CompilerGeneratedAttribute]
public string get_PathAndQuery();
    [CompilerGeneratedAttribute]
public TimeSpan get_PingTimeout();
    [CompilerGeneratedAttribute]
public bool get_Pipelined();
    [CompilerGeneratedAttribute]
public PostData get_PostData();
    [CompilerGeneratedAttribute]
public string get_ProxyAddress();
    [CompilerGeneratedAttribute]
public string get_ProxyPassword();
    [CompilerGeneratedAttribute]
public string get_ProxyUsername();
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public TimeSpan get_RequestTimeout();
    [CompilerGeneratedAttribute]
public string get_RunAs();
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<int> get_SkipDeserializationForStatusCodes();
    [CompilerGeneratedAttribute]
public bool get_ThrowExceptions();
    [CompilerGeneratedAttribute]
public UserAgent get_UserAgent();
    [CompilerGeneratedAttribute]
public bool get_TransferEncodingChunked();
    [CompilerGeneratedAttribute]
public bool get_TcpStats();
    [CompilerGeneratedAttribute]
public bool get_ThreadPoolStats();
    public Uri get_Uri();
    [CompilerGeneratedAttribute]
public TimeSpan get_DnsRefreshTimeout();
    [CompilerGeneratedAttribute]
public MetaHeaderProvider get_MetaHeaderProvider();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_RequestMetaData();
    [CompilerGeneratedAttribute]
public bool get_IsAsync();
    [CompilerGeneratedAttribute]
internal void set_IsAsync(bool value);
    [CompilerGeneratedAttribute]
internal OpenTelemetryData get_OpenTelemetryData();
    public virtual string ToString();
    private string CreatePathWithQueryStrings(string path, ITransportConfiguration global, RequestParameters request);
    internal bool ValidateResponseContentType(string responseMimeType);
    public static string ToQueryString(NameValueCollection collection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.RequestDataContent : HttpContent {
    private RequestData _requestData;
    private Func`6<RequestData, CompleteTaskOnCloseStream, RequestDataContent, TransportContext, CancellationToken, Task> _onStreamAvailableAsync;
    private Action`4<RequestData, CompleteTaskOnCloseStream, RequestDataContent, TransportContext> _onStreamAvailable;
    private CancellationToken _token;
    public RequestDataContent(RequestData requestData);
    public RequestDataContent(RequestData requestData, CancellationToken token);
    private static void OnStreamAvailable(RequestData data, Stream stream, HttpContent content, TransportContext context);
    [AsyncStateMachineAttribute("Elastic.Transport.RequestDataContent/<OnStreamAvailableAsync>d__7")]
private static Task OnStreamAvailableAsync(RequestData data, Stream stream, HttpContent content, TransportContext context, CancellationToken ctx);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    [AsyncStateMachineAttribute("Elastic.Transport.RequestDataContent/<SerializeToStreamAsync>d__9")]
protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context, CancellationToken cancellationToken);
    protected virtual void SerializeToStream(Stream stream, TransportContext context, CancellationToken _);
    protected virtual bool TryComputeLength(Int64& length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.RequestDataHttpClientFactory : object {
    private Func`2<RequestData, HttpMessageHandler> _createHttpClientHandler;
    private static TimerCallback CleanupCallback;
    private Func`3<int, RequestData, Lazy`1<ActiveHandlerTrackingEntry>> _entryFactory;
    private TimeSpan _defaultCleanupInterval;
    private Timer _cleanupTimer;
    private object _cleanupTimerLock;
    private object _cleanupActiveLock;
    private ConcurrentDictionary`2<int, Lazy`1<ActiveHandlerTrackingEntry>> _activeHandlers;
    private int _removedHandlers;
    private ConcurrentQueue`1<ExpiredHandlerTrackingEntry> _expiredHandlers;
    private TimerCallback _expiryCallback;
    public int InUseHandlers { get; }
    public int RemovedHandlers { get; }
    public RequestDataHttpClientFactory(Func`2<RequestData, HttpMessageHandler> createHttpClientHandler);
    private static RequestDataHttpClientFactory();
    public int get_InUseHandlers();
    public int get_RemovedHandlers();
    public HttpClient CreateClient(RequestData requestData);
    private HttpMessageHandler CreateHandler(int key, RequestData requestData);
    private ActiveHandlerTrackingEntry CreateHandlerEntry(int key, RequestData requestData);
    private void ExpiryTimer_Tick(object state);
    private void StartHandlerEntryTimer(ActiveHandlerTrackingEntry entry);
    private void StartCleanupTimer();
    private void StopCleanupTimer();
    private void CleanupTimer_Tick();
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private Lazy`1<ActiveHandlerTrackingEntry> <.ctor>b__15_0(int key, RequestData requestData);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private Lazy`1<ActiveHandlerTrackingEntry> <CreateHandler>b__17_0(int k, RequestData r);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.RequestMetaData : object {
    internal static string HelperKey;
    private Dictionary`2<string, string> _metaDataItems;
    public IReadOnlyDictionary`2<string, string> Items { get; }
    internal bool TryAddMetaData(string key, string value);
    public IReadOnlyDictionary`2<string, string> get_Items();
}
[ExtensionAttribute]
public static class Elastic.Transport.RequestMetaDataExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddHelper(RequestMetaData metaData, string helperValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.RequestParameters : object {
    [CompilerGeneratedAttribute]
private CustomResponseBuilder <CustomResponseBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <QueryString>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestConfiguration <RequestConfiguration>k__BackingField;
    public CustomResponseBuilder CustomResponseBuilder { get; public set; }
    public Dictionary`2<string, object> QueryString { get; internal set; }
    public IRequestConfiguration RequestConfiguration { get; public set; }
    [CompilerGeneratedAttribute]
public CustomResponseBuilder get_CustomResponseBuilder();
    [CompilerGeneratedAttribute]
public void set_CustomResponseBuilder(CustomResponseBuilder value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_QueryString();
    [CompilerGeneratedAttribute]
internal void set_QueryString(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public IRequestConfiguration get_RequestConfiguration();
    [CompilerGeneratedAttribute]
public void set_RequestConfiguration(IRequestConfiguration value);
    public bool ContainsQueryString(string name);
    public TOut GetQueryStringValue(string name);
    public string GetResolvedQueryStringValue(string name, ITransportConfiguration transportConfiguration);
    public void SetQueryString(string name, object value);
    protected TOut Q(string name);
    protected void Q(string name, object value);
    protected void Q(string name, IStringable value);
    private void RemoveQueryString(string name);
    protected void SetAcceptHeader(string format);
    public string AcceptHeaderFromFormat(string format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.RequestPipeline : object {
    private bool _disposed;
    public IEnumerable`1<Audit> AuditTrail { get; }
    public bool FirstPoolUsageNeedsSniffing { get; }
    public bool IsTakingTooLong { get; }
    public int MaxRetries { get; }
    public bool SniffsOnConnectionFailure { get; }
    public bool SniffsOnStaleCluster { get; }
    public bool StaleClusterState { get; }
    public DateTimeOffset StartedOn { get; }
    public abstract virtual IEnumerable`1<Audit> get_AuditTrail();
    public abstract virtual bool get_FirstPoolUsageNeedsSniffing();
    public abstract virtual bool get_IsTakingTooLong();
    public abstract virtual int get_MaxRetries();
    public abstract virtual bool get_SniffsOnConnectionFailure();
    public abstract virtual bool get_SniffsOnStaleCluster();
    public abstract virtual bool get_StaleClusterState();
    public abstract virtual DateTimeOffset get_StartedOn();
    public abstract virtual TResponse CallProductEndpoint(RequestData requestData);
    public abstract virtual Task`1<TResponse> CallProductEndpointAsync(RequestData requestData, CancellationToken cancellationToken);
    public abstract virtual void MarkAlive(Node node);
    public abstract virtual void MarkDead(Node node);
    public abstract virtual bool TryGetSingleNode(Node& node);
    public abstract virtual IEnumerable`1<Node> NextNode();
    public abstract virtual void Ping(Node node);
    public abstract virtual Task PingAsync(Node node, CancellationToken cancellationToken);
    public abstract virtual void FirstPoolUsage(SemaphoreSlim semaphore);
    public abstract virtual Task FirstPoolUsageAsync(SemaphoreSlim semaphore, CancellationToken cancellationToken);
    public abstract virtual void Sniff();
    public abstract virtual Task SniffAsync(CancellationToken cancellationToken);
    public abstract virtual void SniffOnStaleCluster();
    public abstract virtual Task SniffOnStaleClusterAsync(CancellationToken cancellationToken);
    public abstract virtual void SniffOnConnectionFailure();
    public abstract virtual Task SniffOnConnectionFailureAsync(CancellationToken cancellationToken);
    public abstract virtual void BadResponse(TResponse& response, ApiCallDetails callDetails, RequestData data, TransportException exception);
    public abstract virtual void ThrowNoNodesAttempted(RequestData requestData, List`1<PipelineException> seenExceptions);
    public abstract virtual void AuditCancellationRequested();
    [NullableContextAttribute("2")]
public abstract virtual TransportException CreateClientException(TResponse response, ApiCallDetails callDetails, RequestData data, List`1<PipelineException> seenExceptions);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    protected virtual void DisposeManagedResources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.RequestPipelineFactory`1 : object {
    public abstract virtual RequestPipeline Create(TConfiguration configuration, DateTimeProvider dateTimeProvider, MemoryStreamFactory memoryStreamFactory, RequestParameters requestParameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Transport.RequestPipelineStatics : object {
    public static string NoNodesAttemptedMessage;
    [CompilerGeneratedAttribute]
private static DiagnosticSource <DiagnosticSource>k__BackingField;
    public static DiagnosticSource DiagnosticSource { get; }
    private static RequestPipelineStatics();
    [CompilerGeneratedAttribute]
public static DiagnosticSource get_DiagnosticSource();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.ResponseBuilder : object {
    [CompilerGeneratedAttribute]
private static ResponseBuilder <Default>k__BackingField;
    public static ResponseBuilder Default { get; }
    private static ResponseBuilder();
    [CompilerGeneratedAttribute]
public static ResponseBuilder get_Default();
    public abstract virtual TResponse ToResponse(RequestData requestData, Exception ex, Nullable`1<int> statusCode, Dictionary`2<string, IEnumerable`1<string>> headers, Stream responseStream, string mimeType, long contentLength, IReadOnlyDictionary`2<string, ThreadPoolStatistics> threadPoolStats, IReadOnlyDictionary`2<TcpState, int> tcpStats);
    public abstract virtual Task`1<TResponse> ToResponseAsync(RequestData requestData, Exception ex, Nullable`1<int> statusCode, Dictionary`2<string, IEnumerable`1<string>> headers, Stream responseStream, string mimeType, long contentLength, IReadOnlyDictionary`2<string, ThreadPoolStatistics> threadPoolStats, IReadOnlyDictionary`2<TcpState, int> tcpStats, CancellationToken cancellationToken);
}
internal static class Elastic.Transport.ResponseBuilderDefaults : object {
    public static int BufferSize;
    [NullableAttribute("1")]
public static Type[] SpecialTypes;
    private static ResponseBuilderDefaults();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.RuntimeVersionInfo : VersionInfo {
    private static SemVersion Empty;
    private static bool IsRunningInContainer { get; }
    private RuntimeVersionInfo(SemVersion version);
    private static RuntimeVersionInfo();
    private static SemVersion GetRuntimeVersion();
    private static string GetNetCoreVersion();
    private static bool TryGetVersionFromAssemblyPath(Assembly assembly, String& runtimeVersion);
    private static bool TryGetVersionFromProductInfo(string productVersion, string productName, String& version);
    private static bool TryGetVersionFromFrameworkName(string frameworkName, String& runtimeVersion);
    private static bool get_IsRunningInContainer();
}
public enum Elastic.Transport.SerializationFormatting : Enum {
    public int value__;
    public static SerializationFormatting None;
    public static SerializationFormatting Indented;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.Serializer : object {
    public abstract virtual object Deserialize(Type type, Stream stream);
    public abstract virtual T Deserialize(Stream stream);
    public abstract virtual ValueTask`1<object> DeserializeAsync(Type type, Stream stream, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<T> DeserializeAsync(Stream stream, CancellationToken cancellationToken);
    public abstract virtual void Serialize(T data, Stream stream, SerializationFormatting formatting);
    public abstract virtual Task SerializeAsync(T data, Stream stream, SerializationFormatting formatting, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.SerializerRegistrationInformation : object {
    private string _stringRepresentation;
    [CompilerGeneratedAttribute]
private Type <TypeInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Purpose>k__BackingField;
    public Type TypeInformation { get; }
    public string Purpose { get; }
    public SerializerRegistrationInformation(Type type, string purpose);
    [CompilerGeneratedAttribute]
public Type get_TypeInformation();
    [CompilerGeneratedAttribute]
public string get_Purpose();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.SingleNodePool : NodePool {
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastUpdate>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<Node> <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsingSsl>k__BackingField;
    public DateTimeOffset LastUpdate { get; protected set; }
    public int MaxRetries { get; }
    public IReadOnlyCollection`1<Node> Nodes { get; }
    public bool SupportsPinging { get; }
    public bool SupportsReseeding { get; }
    public bool UsingSsl { get; protected set; }
    public SingleNodePool(Uri uri, DateTimeProvider dateTimeProvider);
    [CompilerGeneratedAttribute]
public virtual DateTimeOffset get_LastUpdate();
    [CompilerGeneratedAttribute]
protected virtual void set_LastUpdate(DateTimeOffset value);
    public virtual int get_MaxRetries();
    [CompilerGeneratedAttribute]
public virtual IReadOnlyCollection`1<Node> get_Nodes();
    public virtual bool get_SupportsPinging();
    public virtual bool get_SupportsReseeding();
    [CompilerGeneratedAttribute]
public virtual bool get_UsingSsl();
    [CompilerGeneratedAttribute]
protected virtual void set_UsingSsl(bool value);
    public virtual IEnumerable`1<Node> CreateView(Action`2<AuditEvent, Node> audit);
    public virtual void Reseed(IEnumerable`1<Node> nodes);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.SniffingNodePool : StaticNodePool {
    private bool _disposed;
    private ReaderWriterLockSlim _readerWriter;
    public IReadOnlyCollection`1<Node> Nodes { get; }
    public bool SupportsPinging { get; }
    public bool SupportsReseeding { get; }
    public SniffingNodePool(IEnumerable`1<Uri> uris, bool randomize, DateTimeProvider dateTimeProvider);
    public SniffingNodePool(IEnumerable`1<Node> nodes, bool randomize, DateTimeProvider dateTimeProvider);
    public SniffingNodePool(IEnumerable`1<Node> nodes, Func`2<Node, float> nodeScorer, DateTimeProvider dateTimeProvider);
    public virtual IReadOnlyCollection`1<Node> get_Nodes();
    public virtual bool get_SupportsPinging();
    public virtual bool get_SupportsReseeding();
    public virtual void Reseed(IEnumerable`1<Node> nodes);
    public virtual IEnumerable`1<Node> CreateView(Action`2<AuditEvent, Node> audit);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.StaticNodePool : NodePool {
    protected int GlobalCursor;
    private Func`2<Node, float> _nodeScorer;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastUpdate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsingSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeProvider <DateTimeProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Node> <InternalNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private Random <Random>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Randomize>k__BackingField;
    public DateTimeOffset LastUpdate { get; protected set; }
    public int MaxRetries { get; }
    public IReadOnlyCollection`1<Node> Nodes { get; }
    public bool SupportsPinging { get; }
    public bool SupportsReseeding { get; }
    public bool UsingSsl { get; protected set; }
    protected IReadOnlyList`1<Node> AliveNodes { get; }
    protected DateTimeProvider DateTimeProvider { get; private set; }
    protected List`1<Node> InternalNodes { get; protected set; }
    protected Random Random { get; }
    protected bool Randomize { get; }
    public StaticNodePool(IEnumerable`1<Uri> uris, bool randomize, DateTimeProvider dateTimeProvider);
    public StaticNodePool(IEnumerable`1<Node> nodes, bool randomize, DateTimeProvider dateTimeProvider);
    protected StaticNodePool(IEnumerable`1<Node> nodes, bool randomize, Nullable`1<int> randomizeSeed, DateTimeProvider dateTimeProvider);
    protected StaticNodePool(IEnumerable`1<Node> nodes, Func`2<Node, float> nodeScorer, DateTimeProvider dateTimeProvider);
    private void Initialize(IEnumerable`1<Node> nodes, DateTimeProvider dateTimeProvider);
    [CompilerGeneratedAttribute]
public virtual DateTimeOffset get_LastUpdate();
    [CompilerGeneratedAttribute]
protected virtual void set_LastUpdate(DateTimeOffset value);
    public virtual int get_MaxRetries();
    public virtual IReadOnlyCollection`1<Node> get_Nodes();
    public virtual bool get_SupportsPinging();
    public virtual bool get_SupportsReseeding();
    [CompilerGeneratedAttribute]
public virtual bool get_UsingSsl();
    [CompilerGeneratedAttribute]
protected virtual void set_UsingSsl(bool value);
    protected IReadOnlyList`1<Node> get_AliveNodes();
    [CompilerGeneratedAttribute]
protected DateTimeProvider get_DateTimeProvider();
    [CompilerGeneratedAttribute]
private void set_DateTimeProvider(DateTimeProvider value);
    [CompilerGeneratedAttribute]
protected List`1<Node> get_InternalNodes();
    [CompilerGeneratedAttribute]
protected void set_InternalNodes(List`1<Node> value);
    [CompilerGeneratedAttribute]
protected Random get_Random();
    [CompilerGeneratedAttribute]
protected bool get_Randomize();
    [IteratorStateMachineAttribute("Elastic.Transport.StaticNodePool/<CreateView>d__39")]
public virtual IEnumerable`1<Node> CreateView(Action`2<AuditEvent, Node> audit);
    public virtual void Reseed(IEnumerable`1<Node> nodes);
    protected Node RetryInternalNodes(int globalCursor, Action`2<AuditEvent, Node> audit);
    [IteratorStateMachineAttribute("Elastic.Transport.StaticNodePool/<SelectAliveNodes>d__42")]
protected static IEnumerable`1<Node> SelectAliveNodes(int cursor, IReadOnlyList`1<Node> aliveNodes, Action`2<AuditEvent, Node> audit);
    protected IOrderedEnumerable`1<Node> SortNodes(IEnumerable`1<Node> nodes);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private int <SortNodes>b__43_0(Node n);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.StickyNodePool : StaticNodePool {
    public StickyNodePool(IEnumerable`1<Uri> uris, DateTimeProvider dateTimeProvider);
    public StickyNodePool(IEnumerable`1<Node> nodes, DateTimeProvider dateTimeProvider);
    [IteratorStateMachineAttribute("Elastic.Transport.StickyNodePool/<CreateView>d__2")]
public virtual IEnumerable`1<Node> CreateView(Action`2<AuditEvent, Node> audit);
    public virtual void Reseed(IEnumerable`1<Node> nodes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.StickySniffingNodePool : SniffingNodePool {
    public bool SupportsPinging { get; }
    public bool SupportsReseeding { get; }
    public StickySniffingNodePool(IEnumerable`1<Uri> uris, Func`2<Node, float> nodeScorer, DateTimeProvider dateTimeProvider);
    public StickySniffingNodePool(IEnumerable`1<Node> nodes, Func`2<Node, float> nodeScorer, DateTimeProvider dateTimeProvider);
    public virtual bool get_SupportsPinging();
    public virtual bool get_SupportsReseeding();
    [IteratorStateMachineAttribute("Elastic.Transport.StickySniffingNodePool/<CreateView>d__6")]
public virtual IEnumerable`1<Node> CreateView(Action`2<AuditEvent, Node> audit);
    private static float DefaultNodeScore(Node node);
}
[ExtensionAttribute]
internal static class Elastic.Transport.StringExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static string ToCamelCase(string s);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Elastic.Transport.StringResponse : TransportResponse`1<string> {
    public StringResponse(string body);
}
[ExtensionAttribute]
internal static class Elastic.Transport.TaskExtensions : object {
    [ConditionalAttribute("DEBUG")]
private static void VerifyTaskCompleted(bool isCompleted);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static T EnsureCompleted(ValueTask`1<T> task);
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Elastic.Transport.TestableResponseFactory : object {
    public static T CreateSuccessfulResponse(T response, int httpStatusCode);
    public static T CreateResponse(T response, int httpStatusCode, bool statusCodeRepresentsSuccess);
    internal static T CreateResponse(T response, ApiCallDetails apiCallDetails);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Elastic.Transport.TransportConfiguration : TransportConfigurationBase`1<TransportConfiguration> {
    [CompilerGeneratedAttribute]
private static MemoryStreamFactory <DefaultMemoryStreamFactory>k__BackingField;
    public static TimeSpan DefaultPingTimeout;
    public static TimeSpan DefaultPingTimeoutOnSsl;
    public static TimeSpan DefaultTimeout;
    public static TimeSpan DefaultDnsRefreshTimeout;
    public static int DefaultConnectionLimit;
    private static bool UsingCurlHandler { get; }
    public static MemoryStreamFactory DefaultMemoryStreamFactory { get; }
    public TransportConfiguration(Uri uri, ProductRegistration productRegistration);
    public TransportConfiguration(string cloudId, BasicAuthentication credentials, ProductRegistration productRegistration);
    public TransportConfiguration(string cloudId, Base64ApiKey credentials, ProductRegistration productRegistration);
    [NullableContextAttribute("2")]
public TransportConfiguration(NodePool nodePool, IRequestInvoker invoker, Serializer serializer, ProductRegistration productRegistration);
    private static TransportConfiguration();
    private static bool get_UsingCurlHandler();
    [CompilerGeneratedAttribute]
public static MemoryStreamFactory get_DefaultMemoryStreamFactory();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
public abstract class Elastic.Transport.TransportConfigurationBase`1 : object {
    private IRequestInvoker _requestInvoker;
    private NodePool _nodePool;
    private ProductRegistration _productRegistration;
    private NameValueCollection _headers;
    private NameValueCollection _queryString;
    private SemaphoreSlim _semaphore;
    private UrlFormatter _urlFormatter;
    private AuthorizationHeader _authenticationHeader;
    private X509CertificateCollection _clientCertificates;
    private Action`1<ApiCallDetails> _completedRequestHandler;
    private int _transportClientLimit;
    private Nullable`1<TimeSpan> _deadTimeout;
    private bool _disableAutomaticProxyDetection;
    private bool _disableDirectStreaming;
    private bool _disableAuditTrail;
    private bool _disablePings;
    private bool _enableHttpCompression;
    private bool _enableHttpPipelining;
    private Nullable`1<TimeSpan> _keepAliveInterval;
    private Nullable`1<TimeSpan> _keepAliveTime;
    private Nullable`1<TimeSpan> _maxDeadTimeout;
    private Nullable`1<int> _maxRetries;
    private Nullable`1<TimeSpan> _maxRetryTimeout;
    private Func`2<Node, bool> _nodePredicate;
    private Action`1<RequestData> _onRequestDataCreated;
    private Nullable`1<TimeSpan> _pingTimeout;
    private string _proxyAddress;
    private string _proxyPassword;
    private string _proxyUsername;
    private TimeSpan _requestTimeout;
    private TimeSpan _dnsRefreshTimeout;
    private Func`5<object, X509Certificate, X509Chain, SslPolicyErrors, bool> _serverCertificateValidationCallback;
    private IReadOnlyCollection`1<int> _skipDeserializationForStatusCodes;
    private Nullable`1<TimeSpan> _sniffLifeSpan;
    private bool _sniffOnConnectionFault;
    private bool _sniffOnStartup;
    private bool _throwExceptions;
    private bool _transferEncodingChunked;
    private MemoryStreamFactory _memoryStreamFactory;
    private bool _enableTcpStats;
    private bool _enableThreadPoolStats;
    private UserAgent _userAgent;
    private string _certificateFingerprint;
    private bool _disableMetaHeader;
    [NullableAttribute("2")]
private MetaHeaderProvider _metaHeaderProvider;
    private Func`3<HttpMethod, int, bool> _statusCodeToResponseSuccess;
    [CompilerGeneratedAttribute]
private Serializer <UseThisRequestResponseSerializer>k__BackingField;
    private bool _prettyJson;
    private Nullable`1<bool> _parseAllHeaders;
    private HeadersList _headersToParse;
    protected Serializer UseThisRequestResponseSerializer { get; protected set; }
    private AuthorizationHeader Elastic.Transport.ITransportConfiguration.Authentication { get; }
    private SemaphoreSlim Elastic.Transport.ITransportConfiguration.BootstrapLock { get; }
    private X509CertificateCollection Elastic.Transport.ITransportConfiguration.ClientCertificates { get; }
    private IRequestInvoker Elastic.Transport.ITransportConfiguration.Connection { get; }
    private ProductRegistration Elastic.Transport.ITransportConfiguration.ProductRegistration { get; }
    private int Elastic.Transport.ITransportConfiguration.ConnectionLimit { get; }
    private NodePool Elastic.Transport.ITransportConfiguration.NodePool { get; }
    private Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.DeadTimeout { get; }
    private bool Elastic.Transport.ITransportConfiguration.DisableAutomaticProxyDetection { get; }
    private bool Elastic.Transport.ITransportConfiguration.DisableDirectStreaming { get; }
    private bool Elastic.Transport.ITransportConfiguration.DisableAuditTrail { get; }
    private bool Elastic.Transport.ITransportConfiguration.DisablePings { get; }
    private bool Elastic.Transport.ITransportConfiguration.EnableHttpCompression { get; }
    private NameValueCollection Elastic.Transport.ITransportConfiguration.Headers { get; }
    private bool Elastic.Transport.ITransportConfiguration.HttpPipeliningEnabled { get; }
    private Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.KeepAliveInterval { get; }
    private Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.KeepAliveTime { get; }
    private Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.MaxDeadTimeout { get; }
    private Nullable`1<int> Elastic.Transport.ITransportConfiguration.MaxRetries { get; }
    private Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.MaxRetryTimeout { get; }
    private MemoryStreamFactory Elastic.Transport.ITransportConfiguration.MemoryStreamFactory { get; }
    private Func`2<Node, bool> Elastic.Transport.ITransportConfiguration.NodePredicate { get; }
    private Action`1<ApiCallDetails> Elastic.Transport.ITransportConfiguration.OnRequestCompleted { get; }
    private Action`1<RequestData> Elastic.Transport.ITransportConfiguration.OnRequestDataCreated { get; }
    private Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.PingTimeout { get; }
    private string Elastic.Transport.ITransportConfiguration.ProxyAddress { get; }
    private string Elastic.Transport.ITransportConfiguration.ProxyPassword { get; }
    private string Elastic.Transport.ITransportConfiguration.ProxyUsername { get; }
    private NameValueCollection Elastic.Transport.ITransportConfiguration.QueryStringParameters { get; }
    private Serializer Elastic.Transport.ITransportConfiguration.RequestResponseSerializer { get; }
    private TimeSpan Elastic.Transport.ITransportConfiguration.RequestTimeout { get; }
    private TimeSpan Elastic.Transport.ITransportConfiguration.DnsRefreshTimeout { get; }
    private string Elastic.Transport.ITransportConfiguration.CertificateFingerprint { get; }
    private Func`5<object, X509Certificate, X509Chain, SslPolicyErrors, bool> Elastic.Transport.ITransportConfiguration.ServerCertificateValidationCallback { get; }
    private IReadOnlyCollection`1<int> Elastic.Transport.ITransportConfiguration.SkipDeserializationForStatusCodes { get; }
    private Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.SniffInformationLifeSpan { get; }
    private bool Elastic.Transport.ITransportConfiguration.SniffsOnConnectionFault { get; }
    private bool Elastic.Transport.ITransportConfiguration.SniffsOnStartup { get; }
    private bool Elastic.Transport.ITransportConfiguration.ThrowExceptions { get; }
    private UrlFormatter Elastic.Transport.ITransportConfiguration.UrlFormatter { get; }
    private UserAgent Elastic.Transport.ITransportConfiguration.UserAgent { get; }
    private Func`3<HttpMethod, int, bool> Elastic.Transport.ITransportConfiguration.StatusCodeToResponseSuccess { get; }
    private bool Elastic.Transport.ITransportConfiguration.TransferEncodingChunked { get; }
    private bool Elastic.Transport.ITransportConfiguration.EnableTcpStats { get; }
    private bool Elastic.Transport.ITransportConfiguration.EnableThreadPoolStats { get; }
    private bool Elastic.Transport.ITransportConfiguration.PrettyJson { get; }
    private Nullable`1<bool> Elastic.Transport.ITransportConfiguration.ParseAllHeaders { get; }
    private HeadersList Elastic.Transport.ITransportConfiguration.ResponseHeadersToParse { get; }
    private MetaHeaderProvider Elastic.Transport.ITransportConfiguration.MetaHeaderProvider { get; }
    private bool Elastic.Transport.ITransportConfiguration.DisableMetaHeader { get; }
    [NullableContextAttribute("2")]
protected TransportConfigurationBase`1(NodePool nodePool, IRequestInvoker requestInvoker, Serializer requestResponseSerializer, ProductRegistration productRegistration);
    [CompilerGeneratedAttribute]
protected Serializer get_UseThisRequestResponseSerializer();
    [CompilerGeneratedAttribute]
protected void set_UseThisRequestResponseSerializer(Serializer value);
    private sealed virtual override AuthorizationHeader Elastic.Transport.ITransportConfiguration.get_Authentication();
    private sealed virtual override SemaphoreSlim Elastic.Transport.ITransportConfiguration.get_BootstrapLock();
    private sealed virtual override X509CertificateCollection Elastic.Transport.ITransportConfiguration.get_ClientCertificates();
    private sealed virtual override IRequestInvoker Elastic.Transport.ITransportConfiguration.get_Connection();
    private sealed virtual override ProductRegistration Elastic.Transport.ITransportConfiguration.get_ProductRegistration();
    private sealed virtual override int Elastic.Transport.ITransportConfiguration.get_ConnectionLimit();
    private sealed virtual override NodePool Elastic.Transport.ITransportConfiguration.get_NodePool();
    private sealed virtual override Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.get_DeadTimeout();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_DisableAutomaticProxyDetection();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_DisableDirectStreaming();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_DisableAuditTrail();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_DisablePings();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_EnableHttpCompression();
    private sealed virtual override NameValueCollection Elastic.Transport.ITransportConfiguration.get_Headers();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_HttpPipeliningEnabled();
    private sealed virtual override Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.get_KeepAliveInterval();
    private sealed virtual override Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.get_KeepAliveTime();
    private sealed virtual override Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.get_MaxDeadTimeout();
    private sealed virtual override Nullable`1<int> Elastic.Transport.ITransportConfiguration.get_MaxRetries();
    private sealed virtual override Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.get_MaxRetryTimeout();
    private sealed virtual override MemoryStreamFactory Elastic.Transport.ITransportConfiguration.get_MemoryStreamFactory();
    private sealed virtual override Func`2<Node, bool> Elastic.Transport.ITransportConfiguration.get_NodePredicate();
    private sealed virtual override Action`1<ApiCallDetails> Elastic.Transport.ITransportConfiguration.get_OnRequestCompleted();
    private sealed virtual override Action`1<RequestData> Elastic.Transport.ITransportConfiguration.get_OnRequestDataCreated();
    private sealed virtual override Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.get_PingTimeout();
    private sealed virtual override string Elastic.Transport.ITransportConfiguration.get_ProxyAddress();
    private sealed virtual override string Elastic.Transport.ITransportConfiguration.get_ProxyPassword();
    private sealed virtual override string Elastic.Transport.ITransportConfiguration.get_ProxyUsername();
    private sealed virtual override NameValueCollection Elastic.Transport.ITransportConfiguration.get_QueryStringParameters();
    private sealed virtual override Serializer Elastic.Transport.ITransportConfiguration.get_RequestResponseSerializer();
    private sealed virtual override TimeSpan Elastic.Transport.ITransportConfiguration.get_RequestTimeout();
    private sealed virtual override TimeSpan Elastic.Transport.ITransportConfiguration.get_DnsRefreshTimeout();
    private sealed virtual override string Elastic.Transport.ITransportConfiguration.get_CertificateFingerprint();
    private sealed virtual override Func`5<object, X509Certificate, X509Chain, SslPolicyErrors, bool> Elastic.Transport.ITransportConfiguration.get_ServerCertificateValidationCallback();
    private sealed virtual override IReadOnlyCollection`1<int> Elastic.Transport.ITransportConfiguration.get_SkipDeserializationForStatusCodes();
    private sealed virtual override Nullable`1<TimeSpan> Elastic.Transport.ITransportConfiguration.get_SniffInformationLifeSpan();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_SniffsOnConnectionFault();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_SniffsOnStartup();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_ThrowExceptions();
    private sealed virtual override UrlFormatter Elastic.Transport.ITransportConfiguration.get_UrlFormatter();
    private sealed virtual override UserAgent Elastic.Transport.ITransportConfiguration.get_UserAgent();
    private sealed virtual override Func`3<HttpMethod, int, bool> Elastic.Transport.ITransportConfiguration.get_StatusCodeToResponseSuccess();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_TransferEncodingChunked();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_EnableTcpStats();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_EnableThreadPoolStats();
    private sealed virtual override void System.IDisposable.Dispose();
    private static void DefaultCompletedRequestHandler(ApiCallDetails response);
    private static void DefaultRequestDataCreated(RequestData response);
    protected T Assign(TValue value, Action`2<T, TValue> assigner);
    public T EnableTcpKeepAlive(TimeSpan keepAliveTime, TimeSpan keepAliveInterval);
    public T MaximumRetries(int maxRetries);
    public T ConnectionLimit(int connectionLimit);
    public T SniffOnConnectionFault(bool sniffsOnConnectionFault);
    public T SniffOnStartup(bool sniffsOnStartup);
    public T SniffLifeSpan(Nullable`1<TimeSpan> sniffLifeSpan);
    public T EnableHttpCompression(bool enabled);
    public T DisableAutomaticProxyDetection(bool disable);
    public T ThrowExceptions(bool alwaysThrow);
    public T DisablePing(bool disable);
    public T GlobalQueryStringParameters(NameValueCollection queryStringParameters);
    public T GlobalHeaders(NameValueCollection headers);
    public T RequestTimeout(TimeSpan timeout);
    public T PingTimeout(TimeSpan timeout);
    public T DeadTimeout(TimeSpan timeout);
    public T MaxDeadTimeout(TimeSpan timeout);
    public T MaxRetryTimeout(TimeSpan maxRetryTimeout);
    public T DnsRefreshTimeout(TimeSpan timeout);
    public T CertificateFingerprint(string fingerprint);
    public T Proxy(Uri proxyAddress, string username, string password);
    public T Proxy(Uri proxyAddress);
    public T DisableDirectStreaming(bool b);
    public T DisableAuditTrail(bool b);
    public T OnRequestCompleted(Action`1<ApiCallDetails> handler);
    public T OnRequestDataCreated(Action`1<RequestData> handler);
    public T Authentication(AuthorizationHeader header);
    public T EnableHttpPipelining(bool enabled);
    public T NodePredicate(Func`2<Node, bool> predicate);
    public virtual T EnableDebugMode(Action`1<ApiCallDetails> onRequestCompleted);
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_PrettyJson();
    public virtual T PrettyJson(bool b);
    private sealed virtual override Nullable`1<bool> Elastic.Transport.ITransportConfiguration.get_ParseAllHeaders();
    public virtual T ParseAllHeaders(bool b);
    private sealed virtual override HeadersList Elastic.Transport.ITransportConfiguration.get_ResponseHeadersToParse();
    private sealed virtual override MetaHeaderProvider Elastic.Transport.ITransportConfiguration.get_MetaHeaderProvider();
    private sealed virtual override bool Elastic.Transport.ITransportConfiguration.get_DisableMetaHeader();
    public virtual T ResponseHeadersToParse(HeadersList headersToParse);
    public T ServerCertificateValidationCallback(Func`5<object, X509Certificate, X509Chain, SslPolicyErrors, bool> callback);
    public T ClientCertificates(X509CertificateCollection certificates);
    public T ClientCertificate(X509Certificate certificate);
    public T ClientCertificate(string certificatePath);
    public T SkipDeserializationForStatusCodes(Int32[] statusCodes);
    public T UserAgent(UserAgent userAgent);
    public T TransferEncodingChunked(bool transferEncodingChunked);
    public T MemoryStreamFactory(MemoryStreamFactory memoryStreamFactory);
    public T EnableTcpStats(bool enableTcpStats);
    public T EnableThreadPoolStats(bool enableThreadPoolStats);
    public T DisableMetaHeader(bool disable);
    protected virtual void DisposeManagedResources();
    protected T UpdateGlobalQueryString(string key, string value, bool enabled);
    [CompilerGeneratedAttribute]
private bool <.ctor>b__46_0(HttpMethod m, int i);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <EnableDebugMode>b__173_0(T a, Action`1<ApiCallDetails> v);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.TransportException : Exception {
    [CompilerGeneratedAttribute]
private IEnumerable`1<Audit> <AuditTrail>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PipelineFailure> <FailureReason>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestData <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiCallDetails <ApiCallDetails>k__BackingField;
    public IEnumerable`1<Audit> AuditTrail { get; internal set; }
    public Nullable`1<PipelineFailure> FailureReason { get; }
    public RequestData Request { get; internal set; }
    public ApiCallDetails ApiCallDetails { get; internal set; }
    public string DebugInformation { get; }
    public TransportException(string message);
    public TransportException(PipelineFailure failure, string message, Exception innerException);
    public TransportException(PipelineFailure failure, string message, TransportResponse response);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Audit> get_AuditTrail();
    [CompilerGeneratedAttribute]
internal void set_AuditTrail(IEnumerable`1<Audit> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PipelineFailure> get_FailureReason();
    [CompilerGeneratedAttribute]
public RequestData get_Request();
    [CompilerGeneratedAttribute]
internal void set_Request(RequestData value);
    [CompilerGeneratedAttribute]
public ApiCallDetails get_ApiCallDetails();
    [CompilerGeneratedAttribute]
internal void set_ApiCallDetails(ApiCallDetails value);
    public string get_DebugInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Elastic.Transport.TransportExtensions : object {
    [ExtensionAttribute]
public static TResponse Request(ITransport transport, HttpMethod method, string path);
    [ExtensionAttribute]
public static TResponse Request(ITransport transport, HttpMethod method, string path, PostData postData);
    [ExtensionAttribute]
public static TResponse Request(ITransport transport, HttpMethod method, string path, PostData postData, RequestParameters requestParameters);
    [ExtensionAttribute]
public static Task`1<TResponse> RequestAsync(ITransport transport, HttpMethod method, string path, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TResponse> RequestAsync(ITransport transport, HttpMethod method, string path, PostData postData, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TResponse> RequestAsync(ITransport transport, HttpMethod method, string path, PostData postData, RequestParameters requestParameters, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Elastic.Transport.TransportHttpMethodExtensions : object {
    [ExtensionAttribute]
public static TResponse Get(ITransport requestHandler, string path, RequestParameters parameters);
    [ExtensionAttribute]
public static Task`1<TResponse> GetAsync(ITransport requestHandler, string path, RequestParameters parameters, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static TResponse Head(ITransport requestHandler, string path, RequestParameters parameters);
    [ExtensionAttribute]
public static Task`1<TResponse> HeadAsync(ITransport requestHandler, string path, RequestParameters parameters, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static VoidResponse Head(ITransport requestHandler, string path, RequestParameters parameters);
    [ExtensionAttribute]
public static Task`1<VoidResponse> HeadAsync(ITransport requestHandler, string path, RequestParameters parameters, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static TResponse Post(ITransport requestHandler, string path, PostData data, RequestParameters parameters);
    [ExtensionAttribute]
public static Task`1<TResponse> PostAsync(ITransport requestHandler, string path, PostData data, RequestParameters parameters, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static TResponse Put(ITransport requestHandler, string path, PostData data, RequestParameters parameters);
    [ExtensionAttribute]
public static Task`1<TResponse> PutAsync(ITransport requestHandler, string path, PostData data, RequestParameters parameters, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static TResponse Delete(ITransport requestHandler, string path, PostData data, RequestParameters parameters);
    [ExtensionAttribute]
public static Task`1<TResponse> DeleteAsync(ITransport requestHandler, string path, PostData data, RequestParameters parameters, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.TransportResponse : object {
    [CompilerGeneratedAttribute]
private ApiCallDetails <ApiCallDetails>k__BackingField;
    [JsonIgnoreAttribute]
public ApiCallDetails ApiCallDetails { get; internal set; }
    [CompilerGeneratedAttribute]
public ApiCallDetails get_ApiCallDetails();
    [CompilerGeneratedAttribute]
internal void set_ApiCallDetails(ApiCallDetails value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.TransportResponse`1 : TransportResponse {
    [CompilerGeneratedAttribute]
private T <Body>k__BackingField;
    public T Body { get; protected internal set; }
    [CompilerGeneratedAttribute]
public T get_Body();
    [CompilerGeneratedAttribute]
protected internal void set_Body(T value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.UnexpectedTransportException : TransportException {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<PipelineException> <SeenExceptions>k__BackingField;
    public IReadOnlyCollection`1<PipelineException> SeenExceptions { get; }
    public UnexpectedTransportException(Exception killerException, IReadOnlyCollection`1<PipelineException> seenExceptions);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<PipelineException> get_SeenExceptions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.UrlFormatter : object {
    private ITransportConfiguration _settings;
    public UrlFormatter(ITransportConfiguration settings);
    [NullableContextAttribute("2")]
public sealed virtual string Format(string format, object arg, IFormatProvider formatProvider);
    public sealed virtual object GetFormat(Type formatType);
    [NullableContextAttribute("2")]
public string CreateString(object value);
    [NullableContextAttribute("2")]
public static string CreateString(object value, ITransportConfiguration settings);
    private static string CreateStringFromArray(Array value, ITransportConfiguration settings);
    private static string CreateStringFromIList(IList value, ITransportConfiguration settings);
    private static string CreateStringFromIEnumerable(IEnumerable value, ITransportConfiguration settings);
    private static string ResolveUrlParameterOrDefault(object value, ITransportConfiguration settings);
    private static string GetEnumMemberName(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Elastic.Transport.UserAgent : object {
    private string _toString;
    private UserAgent(string reposName, Type typeVersionLookup, String[] metadata);
    private UserAgent(string fullUserAgentString);
    public static UserAgent Create(string reposName, Type typeVersionLookup);
    public static UserAgent Create(string reposName, Type typeVersionLookup, String[] metadata);
    public static UserAgent Create(string fullUserAgentString);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Elastic.Transport.VersionInfo : object {
    private SemVersion _version;
    public int Major { get; }
    public int Minor { get; }
    public int Patch { get; }
    [NullableAttribute("2")]
public string Prerelease { get; }
    [NullableAttribute("2")]
public string Metadata { get; }
    public bool IsPrerelease { get; }
    protected VersionInfo(SemVersion version);
    public int get_Major();
    public int get_Minor();
    public int get_Patch();
    [NullableContextAttribute("2")]
public string get_Prerelease();
    [NullableContextAttribute("2")]
public string get_Metadata();
    public bool get_IsPrerelease();
    public virtual string ToString();
    public string ToMetadataHeaderValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Elastic.Transport.VoidResponse : TransportResponse`1<VoidBody> {
    [CompilerGeneratedAttribute]
private static VoidResponse <Default>k__BackingField;
    public static VoidResponse Default { get; }
    private static VoidResponse();
    [CompilerGeneratedAttribute]
public static VoidResponse get_Default();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Transport.WebProxy : object {
    private Uri _uri;
    [CompilerGeneratedAttribute]
private ICredentials <Credentials>k__BackingField;
    public ICredentials Credentials { get; public set; }
    public WebProxy(Uri uri);
    [CompilerGeneratedAttribute]
public sealed virtual ICredentials get_Credentials();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Credentials(ICredentials value);
    public sealed virtual Uri GetProxy(Uri destination);
    public sealed virtual bool IsBypassed(Uri host);
}
