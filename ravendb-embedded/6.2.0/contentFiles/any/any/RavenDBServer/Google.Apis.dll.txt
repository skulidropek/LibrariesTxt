[ExtensionAttribute]
public static class Google.Apis.Download.DownloadProgress : object {
    [ExtensionAttribute]
public static void ThrowOnFailure(IDownloadProgress progress);
}
public enum Google.Apis.Download.DownloadStatus : Enum {
    public int value__;
    public static DownloadStatus NotStarted;
    public static DownloadStatus Downloading;
    public static DownloadStatus Completed;
    public static DownloadStatus Failed;
}
public interface Google.Apis.Download.IDownloadProgress {
    public DownloadStatus Status { get; }
    public long BytesDownloaded { get; }
    public Exception Exception { get; }
    public abstract virtual DownloadStatus get_Status();
    public abstract virtual long get_BytesDownloaded();
    public abstract virtual Exception get_Exception();
}
public interface Google.Apis.Download.IMediaDownloader {
    public int ChunkSize { get; public set; }
    [CompilerGeneratedAttribute]
public abstract virtual void add_ProgressChanged(Action`1<IDownloadProgress> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ProgressChanged(Action`1<IDownloadProgress> value);
    public abstract virtual int get_ChunkSize();
    public abstract virtual void set_ChunkSize(int value);
    public abstract virtual IDownloadProgress Download(string url, Stream stream);
    public abstract virtual Task`1<IDownloadProgress> DownloadAsync(string url, Stream stream);
    public abstract virtual Task`1<IDownloadProgress> DownloadAsync(string url, Stream stream, CancellationToken cancellationToken);
}
public class Google.Apis.Download.MediaDownloader : object {
    private static ILogger Logger;
    private IClientService service;
    private static int MB;
    public static int MaximumChunkSize;
    private int chunkSize;
    [CompilerGeneratedAttribute]
private RangeHeaderValue <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<HttpResponseMessage, StreamInterceptor> <ResponseStreamInterceptorProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<HttpRequestMessage> <ModifyRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<IDownloadProgress> ProgressChanged;
    public int ChunkSize { get; public set; }
    public RangeHeaderValue Range { get; public set; }
    public Func`2<HttpResponseMessage, StreamInterceptor> ResponseStreamInterceptorProvider { get; public set; }
    public Action`1<HttpRequestMessage> ModifyRequest { get; public set; }
    private static MediaDownloader();
    public MediaDownloader(IClientService service);
    public sealed virtual int get_ChunkSize();
    public sealed virtual void set_ChunkSize(int value);
    [CompilerGeneratedAttribute]
public RangeHeaderValue get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(RangeHeaderValue value);
    [CompilerGeneratedAttribute]
public Func`2<HttpResponseMessage, StreamInterceptor> get_ResponseStreamInterceptorProvider();
    [CompilerGeneratedAttribute]
public void set_ResponseStreamInterceptorProvider(Func`2<HttpResponseMessage, StreamInterceptor> value);
    private void UpdateProgress(IDownloadProgress progress);
    [CompilerGeneratedAttribute]
public Action`1<HttpRequestMessage> get_ModifyRequest();
    [CompilerGeneratedAttribute]
public void set_ModifyRequest(Action`1<HttpRequestMessage> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ProgressChanged(Action`1<IDownloadProgress> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ProgressChanged(Action`1<IDownloadProgress> value);
    public sealed virtual IDownloadProgress Download(string url, Stream stream);
    [AsyncStateMachineAttribute("Google.Apis.Download.MediaDownloader/<DownloadAsync>d__28")]
public sealed virtual Task`1<IDownloadProgress> DownloadAsync(string url, Stream stream);
    [AsyncStateMachineAttribute("Google.Apis.Download.MediaDownloader/<DownloadAsync>d__29")]
public sealed virtual Task`1<IDownloadProgress> DownloadAsync(string url, Stream stream, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Apis.Download.MediaDownloader/<DownloadCoreAsync>d__31")]
private Task`1<IDownloadProgress> DownloadCoreAsync(string url, Stream stream, CancellationToken cancellationToken);
    protected virtual void OnResponseReceived(HttpResponseMessage response);
    protected virtual void OnDataReceived(Byte[] data, int length);
    protected virtual void OnDownloadCompleted();
}
public enum Google.Apis.ETagAction : Enum {
    public int value__;
    public static ETagAction Default;
    public static ETagAction Ignore;
    public static ETagAction IfMatch;
    public static ETagAction IfNoneMatch;
}
public class Google.Apis.Requests.BatchRequest : object {
    private static string DefaultBatchUrl;
    private static int QueueLimit;
    private IList`1<InnerRequest> allRequests;
    private string batchUrl;
    private IClientService service;
    internal string BatchUrl { get; }
    public int Count { get; }
    public BatchRequest(IClientService service);
    public BatchRequest(IClientService service, string batchUrl);
    internal string get_BatchUrl();
    public int get_Count();
    public void Queue(IClientServiceRequest request, OnResponse`1<TResponse> callback);
    public Task ExecuteAsync();
    [AsyncStateMachineAttribute("Google.Apis.Requests.BatchRequest/<ExecuteAsync>d__16")]
public Task ExecuteAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Apis.Requests.BatchRequest/<EnsureSuccessAsync>d__17")]
private Task EnsureSuccessAsync(HttpResponseMessage result);
    [VisibleForTestOnly]
internal static HttpResponseMessage ParseAsHttpResponse(string content);
    [AsyncStateMachineAttribute("Google.Apis.Requests.BatchRequest/<CreateOuterRequestContent>d__19")]
[VisibleForTestOnly]
internal static Task`1<HttpContent> CreateOuterRequestContent(IEnumerable`1<IClientServiceRequest> requests);
    [AsyncStateMachineAttribute("Google.Apis.Requests.BatchRequest/<CreateIndividualRequest>d__20")]
[VisibleForTestOnly]
internal static Task`1<HttpContent> CreateIndividualRequest(IClientServiceRequest request);
    [AsyncStateMachineAttribute("Google.Apis.Requests.BatchRequest/<CreateRequestContentString>d__21")]
[VisibleForTestOnly]
internal static Task`1<string> CreateRequestContentString(HttpRequestMessage requestMessage);
}
public abstract class Google.Apis.Requests.ClientServiceRequest : object {
    protected List`1<IHttpUnsuccessfulResponseHandler> _unsuccessfulResponseHandlers;
    protected List`1<IHttpExceptionHandler> _exceptionHandlers;
    protected List`1<IHttpExecuteInterceptor> _executeInterceptors;
    [CompilerGeneratedAttribute]
private IHttpExecuteInterceptor <Credential>k__BackingField;
    public IHttpExecuteInterceptor Credential { get; public set; }
    [CompilerGeneratedAttribute]
public IHttpExecuteInterceptor get_Credential();
    [CompilerGeneratedAttribute]
public void set_Credential(IHttpExecuteInterceptor value);
    public void AddUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler handler);
    public void AddExceptionHandler(IHttpExceptionHandler handler);
    public void AddExecuteInterceptor(IHttpExecuteInterceptor handler);
}
public abstract class Google.Apis.Requests.ClientServiceRequest`1 : ClientServiceRequest {
    private static ILogger Logger;
    private IClientService service;
    [CompilerGeneratedAttribute]
private ETagAction <ETagAction>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<HttpRequestMessage> <ModifyRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ValidateParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IParameter> <RequestParameters>k__BackingField;
    public ETagAction ETagAction { get; public set; }
    public Action`1<HttpRequestMessage> ModifyRequest { get; public set; }
    public Nullable`1<bool> ValidateParameters { get; public set; }
    public string MethodName { get; }
    public string RestPath { get; }
    public string HttpMethod { get; }
    public IDictionary`2<string, IParameter> RequestParameters { get; private set; }
    public IClientService Service { get; }
    protected ClientServiceRequest`1(IClientService service);
    private static ClientServiceRequest`1();
    [CompilerGeneratedAttribute]
public ETagAction get_ETagAction();
    [CompilerGeneratedAttribute]
public void set_ETagAction(ETagAction value);
    [CompilerGeneratedAttribute]
public Action`1<HttpRequestMessage> get_ModifyRequest();
    [CompilerGeneratedAttribute]
public void set_ModifyRequest(Action`1<HttpRequestMessage> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ValidateParameters();
    [CompilerGeneratedAttribute]
public void set_ValidateParameters(Nullable`1<bool> value);
    public abstract virtual string get_MethodName();
    public abstract virtual string get_RestPath();
    public abstract virtual string get_HttpMethod();
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, IParameter> get_RequestParameters();
    [CompilerGeneratedAttribute]
private void set_RequestParameters(IDictionary`2<string, IParameter> value);
    public sealed virtual IClientService get_Service();
    protected virtual void InitParameters();
    public sealed virtual TResponse Execute();
    public sealed virtual Stream ExecuteAsStream();
    [AsyncStateMachineAttribute("Google.Apis.Requests.ClientServiceRequest`1/<ExecuteAsync>d__30")]
public sealed virtual Task`1<TResponse> ExecuteAsync();
    [AsyncStateMachineAttribute("Google.Apis.Requests.ClientServiceRequest`1/<ExecuteAsync>d__31")]
public sealed virtual Task`1<TResponse> ExecuteAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Apis.Requests.ClientServiceRequest`1/<ExecuteAsStreamAsync>d__32")]
public sealed virtual Task`1<Stream> ExecuteAsStreamAsync();
    [AsyncStateMachineAttribute("Google.Apis.Requests.ClientServiceRequest`1/<ExecuteAsStreamAsync>d__33")]
public sealed virtual Task`1<Stream> ExecuteAsStreamAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Apis.Requests.ClientServiceRequest`1/<ExecuteUnparsedAsync>d__34")]
private Task`1<HttpResponseMessage> ExecuteUnparsedAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Apis.Requests.ClientServiceRequest`1/<ParseResponse>d__35")]
private Task`1<TResponse> ParseResponse(HttpResponseMessage response);
    public sealed virtual HttpRequestMessage CreateRequest(Nullable`1<bool> overrideGZipEnabled);
    private RequestBuilder CreateBuilder();
    protected string GenerateRequestUri();
    protected virtual object GetBody();
    private void AddETag(HttpRequestMessage request);
    [VisibleForTestOnly]
public static ETagAction GetDefaultETagAction(string httpMethod);
    private void AddParameters(RequestBuilder requestBuilder, ParameterCollection inputParameters);
}
[ExtensionAttribute]
public static class Google.Apis.Requests.ClientServiceRequestExtensions : object {
    [ExtensionAttribute]
public static TRequest Configure(TRequest request, Action`1<TRequest> configurationAction);
}
[ExtensionAttribute]
internal static class Google.Apis.Requests.HttpRequestMessageExtenstions : object {
    [ExtensionAttribute]
internal static void SetRequestSerailizedContent(HttpRequestMessage request, IClientService service, object body, bool gzipEnabled);
    internal static HttpContent CreateZipContent(string content);
    private static Stream CreateGZipStream(string serializedObject);
}
public interface Google.Apis.Requests.IClientServiceRequest {
    public string MethodName { get; }
    public string RestPath { get; }
    public string HttpMethod { get; }
    public IDictionary`2<string, IParameter> RequestParameters { get; }
    public IClientService Service { get; }
    public abstract virtual string get_MethodName();
    public abstract virtual string get_RestPath();
    public abstract virtual string get_HttpMethod();
    public abstract virtual IDictionary`2<string, IParameter> get_RequestParameters();
    public abstract virtual IClientService get_Service();
    public abstract virtual HttpRequestMessage CreateRequest(Nullable`1<bool> overrideGZipEnabled);
    public abstract virtual Task`1<Stream> ExecuteAsStreamAsync();
    public abstract virtual Task`1<Stream> ExecuteAsStreamAsync(CancellationToken cancellationToken);
    public abstract virtual Stream ExecuteAsStream();
}
public interface Google.Apis.Requests.IClientServiceRequest`1 {
    public abstract virtual Task`1<TResponse> ExecuteAsync();
    public abstract virtual Task`1<TResponse> ExecuteAsync(CancellationToken cancellationToken);
    public abstract virtual TResponse Execute();
}
public interface Google.Apis.Requests.IDirectResponseSchema {
    public string ETag { get; public set; }
    public abstract virtual string get_ETag();
    public abstract virtual void set_ETag(string value);
}
public class Google.Apis.Requests.PageStreamer`4 : object {
    private static TResource[] emptyResources;
    private Action`2<TRequest, TToken> requestModifier;
    private Func`2<TResponse, TToken> tokenExtractor;
    private Func`2<TResponse, IEnumerable`1<TResource>> resourceExtractor;
    public PageStreamer`4(Action`2<TRequest, TToken> requestModifier, Func`2<TResponse, TToken> tokenExtractor, Func`2<TResponse, IEnumerable`1<TResource>> resourceExtractor);
    private static PageStreamer`4();
    [IteratorStateMachineAttribute("Google.Apis.Requests.PageStreamer`4/<Fetch>d__5")]
public IEnumerable`1<TResource> Fetch(TRequest request);
    [AsyncStateMachineAttribute("Google.Apis.Requests.PageStreamer`4/<FetchAllAsync>d__6")]
public Task`1<IList`1<TResource>> FetchAllAsync(TRequest request, CancellationToken cancellationToken);
}
public class Google.Apis.Requests.VersionHeaderBuilder : object {
    private static Lazy`1<string> s_environmentVersion;
    public static string HeaderName;
    private List`1<string> _names;
    private List`1<string> _values;
    private static VersionHeaderBuilder();
    public VersionHeaderBuilder AppendVersion(string name, string version);
    private static void CheckArgument(bool condition, string paramName, string message);
    public VersionHeaderBuilder AppendAssemblyVersion(string name, Type type);
    public VersionHeaderBuilder AppendDotNetEnvironment();
    private static bool IsHeaderNameValueValid(string nameOrValue);
    private static string GetEnvironmentVersion();
    private static string GetEntryAssemblyVersionOrNull();
    private static string FormatAssemblyVersion(Type type);
    internal static string FormatInformationalVersion(string info);
    private static string FormatVersion(Version version);
    public virtual string ToString();
    public VersionHeaderBuilder Clone();
}
[ExtensionAttribute]
internal static class Google.Apis.Responses.HttpResponseMessageExtensions : object {
    [AsyncStateMachineAttribute("Google.Apis.Responses.HttpResponseMessageExtensions/<DeserializeErrorAsync>d__0")]
[ExtensionAttribute]
internal static Task`1<RequestError> DeserializeErrorAsync(HttpResponseMessage response, string name, ISerializer serializer);
}
public abstract class Google.Apis.Services.BaseClientService : object {
    private static string DefaultUniverseDomain;
    private static ILogger Logger;
    [VisibleForTestOnly]
public static UInt32 DefaultMaxUrlLength;
    [CompilerGeneratedAttribute]
private bool <ValidateParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseUriOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UniverseDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private ConfigurableHttpClient <HttpClient>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfigurableHttpClientInitializer <HttpClientInitializer>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GZipEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationName>k__BackingField;
    [CompilerGeneratedAttribute]
private ISerializer <Serializer>k__BackingField;
    internal bool ValidateParameters { get; }
    protected string BaseUriOverride { get; }
    public string UniverseDomain { get; public set; }
    public ConfigurableHttpClient HttpClient { get; private set; }
    public IConfigurableHttpClientInitializer HttpClientInitializer { get; private set; }
    public bool GZipEnabled { get; private set; }
    public string ApiKey { get; private set; }
    public string ApplicationName { get; private set; }
    public ISerializer Serializer { get; private set; }
    public string Name { get; }
    public string BaseUri { get; }
    public string BasePath { get; }
    public string BatchUri { get; }
    public string BatchPath { get; }
    public IList`1<string> Features { get; }
    protected BaseClientService(Initializer initializer);
    private static BaseClientService();
    [CompilerGeneratedAttribute]
internal bool get_ValidateParameters();
    [CompilerGeneratedAttribute]
protected string get_BaseUriOverride();
    [CompilerGeneratedAttribute]
public string get_UniverseDomain();
    [CompilerGeneratedAttribute]
public void set_UniverseDomain(string value);
    private bool HasFeature(Features feature);
    private ConfigurableHttpClient CreateHttpClient(Initializer initializer, string versionHeader);
    protected virtual BackOffHandler CreateBackOffHandler();
    protected internal string GetEffectiveUri(string explicitUri, string defaultUri);
    [CompilerGeneratedAttribute]
public sealed virtual ConfigurableHttpClient get_HttpClient();
    [CompilerGeneratedAttribute]
private void set_HttpClient(ConfigurableHttpClient value);
    [CompilerGeneratedAttribute]
public sealed virtual IConfigurableHttpClientInitializer get_HttpClientInitializer();
    [CompilerGeneratedAttribute]
private void set_HttpClientInitializer(IConfigurableHttpClientInitializer value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_GZipEnabled();
    [CompilerGeneratedAttribute]
private void set_GZipEnabled(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiKey();
    [CompilerGeneratedAttribute]
private void set_ApiKey(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApplicationName();
    [CompilerGeneratedAttribute]
private void set_ApplicationName(string value);
    public sealed virtual void SetRequestSerailizedContent(HttpRequestMessage request, object body);
    [CompilerGeneratedAttribute]
public sealed virtual ISerializer get_Serializer();
    [CompilerGeneratedAttribute]
private void set_Serializer(ISerializer value);
    public virtual string SerializeObject(object obj);
    [AsyncStateMachineAttribute("Google.Apis.Services.BaseClientService/<DeserializeResponse>d__45`1")]
public virtual Task`1<T> DeserializeResponse(HttpResponseMessage response);
    public virtual Task`1<RequestError> DeserializeError(HttpResponseMessage response);
    public abstract virtual string get_Name();
    public abstract virtual string get_BaseUri();
    public abstract virtual string get_BasePath();
    public virtual string get_BatchUri();
    public virtual string get_BatchPath();
    public abstract virtual IList`1<string> get_Features();
    public virtual void Dispose();
}
public interface Google.Apis.Services.IClientService {
    public ConfigurableHttpClient HttpClient { get; }
    public IConfigurableHttpClientInitializer HttpClientInitializer { get; }
    public string Name { get; }
    public string BaseUri { get; }
    public string BasePath { get; }
    public IList`1<string> Features { get; }
    public bool GZipEnabled { get; }
    public string ApiKey { get; }
    public string ApplicationName { get; }
    public ISerializer Serializer { get; }
    public abstract virtual ConfigurableHttpClient get_HttpClient();
    public abstract virtual IConfigurableHttpClientInitializer get_HttpClientInitializer();
    public abstract virtual string get_Name();
    public abstract virtual string get_BaseUri();
    public abstract virtual string get_BasePath();
    public abstract virtual IList`1<string> get_Features();
    public abstract virtual bool get_GZipEnabled();
    public abstract virtual string get_ApiKey();
    public abstract virtual string get_ApplicationName();
    public abstract virtual void SetRequestSerailizedContent(HttpRequestMessage request, object body);
    public abstract virtual ISerializer get_Serializer();
    public abstract virtual string SerializeObject(object data);
    public abstract virtual Task`1<T> DeserializeResponse(HttpResponseMessage response);
    public abstract virtual Task`1<RequestError> DeserializeError(HttpResponseMessage response);
}
public interface Google.Apis.Upload.IUploadProgress {
    public UploadStatus Status { get; }
    public long BytesSent { get; }
    public Exception Exception { get; }
    public abstract virtual UploadStatus get_Status();
    public abstract virtual long get_BytesSent();
    public abstract virtual Exception get_Exception();
}
public interface Google.Apis.Upload.IUploadSessionData {
    public Uri UploadUri { get; }
    public abstract virtual Uri get_UploadUri();
}
public abstract class Google.Apis.Upload.ResumableUpload : object {
    private static ILogger Logger;
    private static int KB;
    private static int MB;
    public static int MinimumChunkSize;
    public static int DefaultChunkSize;
    internal int BufferSize;
    private static int UnknownSize;
    private static string ZeroByteContentRangeHeader;
    private static string DefaultGoogleApiClientHeader;
    [CompilerGeneratedAttribute]
private ResumableUploadOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private ConfigurableHttpClient <HttpClient>k__BackingField;
    [CompilerGeneratedAttribute]
private Stream <ContentStream>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StreamLength>k__BackingField;
    [CompilerGeneratedAttribute]
private UploadBuffer <Buffer>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <UploadUri>k__BackingField;
    [CompilerGeneratedAttribute]
private long <BytesServerReceived>k__BackingField;
    [CompilerGeneratedAttribute]
private long <BytesClientSent>k__BackingField;
    [VisibleForTestOnly]
protected int chunkSize;
    [CompilerGeneratedAttribute]
private Action`1<IUploadProgress> ProgressChanged;
    [CompilerGeneratedAttribute]
private StreamInterceptor <UploadStreamInterceptor>k__BackingField;
    [CompilerGeneratedAttribute]
private ResumableUploadProgress <Progress>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<IUploadSessionData> UploadSessionData;
    protected ResumableUploadOptions Options { get; }
    internal ConfigurableHttpClient HttpClient { get; }
    public Stream ContentStream { get; }
    internal long StreamLength { get; internal set; }
    private UploadBuffer Buffer { get; private set; }
    private Uri UploadUri { get; private set; }
    private long BytesServerReceived { get; private set; }
    private long BytesClientSent { get; private set; }
    public int ChunkSize { get; public set; }
    public StreamInterceptor UploadStreamInterceptor { get; public set; }
    private ResumableUploadProgress Progress { get; private set; }
    protected ResumableUpload(Stream contentStream, ResumableUploadOptions options);
    private static ResumableUpload();
    public static ResumableUpload CreateFromUploadUri(Uri uploadUri, Stream contentStream, ResumableUploadOptions options);
    [CompilerGeneratedAttribute]
protected ResumableUploadOptions get_Options();
    [CompilerGeneratedAttribute]
internal ConfigurableHttpClient get_HttpClient();
    [CompilerGeneratedAttribute]
public Stream get_ContentStream();
    [CompilerGeneratedAttribute]
internal long get_StreamLength();
    [CompilerGeneratedAttribute]
internal void set_StreamLength(long value);
    [CompilerGeneratedAttribute]
private UploadBuffer get_Buffer();
    [CompilerGeneratedAttribute]
private void set_Buffer(UploadBuffer value);
    [CompilerGeneratedAttribute]
private Uri get_UploadUri();
    [CompilerGeneratedAttribute]
private void set_UploadUri(Uri value);
    [CompilerGeneratedAttribute]
private long get_BytesServerReceived();
    [CompilerGeneratedAttribute]
private void set_BytesServerReceived(long value);
    [CompilerGeneratedAttribute]
private long get_BytesClientSent();
    [CompilerGeneratedAttribute]
private void set_BytesClientSent(long value);
    public int get_ChunkSize();
    public void set_ChunkSize(int value);
    [CompilerGeneratedAttribute]
public void add_ProgressChanged(Action`1<IUploadProgress> value);
    [CompilerGeneratedAttribute]
public void remove_ProgressChanged(Action`1<IUploadProgress> value);
    [CompilerGeneratedAttribute]
public StreamInterceptor get_UploadStreamInterceptor();
    [CompilerGeneratedAttribute]
public void set_UploadStreamInterceptor(StreamInterceptor value);
    [CompilerGeneratedAttribute]
private ResumableUploadProgress get_Progress();
    [CompilerGeneratedAttribute]
private void set_Progress(ResumableUploadProgress value);
    private void UpdateProgress(ResumableUploadProgress progress);
    public IUploadProgress GetProgress();
    [CompilerGeneratedAttribute]
public void add_UploadSessionData(Action`1<IUploadSessionData> value);
    [CompilerGeneratedAttribute]
public void remove_UploadSessionData(Action`1<IUploadSessionData> value);
    private void SendUploadSessionData(ResumeableUploadSessionData sessionData);
    public IUploadProgress Upload();
    public Task`1<IUploadProgress> UploadAsync();
    [AsyncStateMachineAttribute("Google.Apis.Upload.ResumableUpload/<UploadAsync>d__67")]
public Task`1<IUploadProgress> UploadAsync(CancellationToken cancellationToken);
    public IUploadProgress Resume();
    public IUploadProgress Resume(Uri uploadUri);
    public Task`1<IUploadProgress> ResumeAsync();
    public Task`1<IUploadProgress> ResumeAsync(CancellationToken cancellationToken);
    public Task`1<IUploadProgress> ResumeAsync(Uri uploadUri);
    [AsyncStateMachineAttribute("Google.Apis.Upload.ResumableUpload/<ResumeAsync>d__73")]
public Task`1<IUploadProgress> ResumeAsync(Uri uploadUri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Apis.Upload.ResumableUpload/<UploadCoreAsync>d__74")]
private Task`1<IUploadProgress> UploadCoreAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<Uri> InitiateSessionAsync(CancellationToken cancellationToken);
    protected virtual void ProcessResponse(HttpResponseMessage httpResponse);
    [AsyncStateMachineAttribute("Google.Apis.Upload.ResumableUpload/<SendNextChunkAsync>d__77")]
protected Task`1<bool> SendNextChunkAsync(Stream stream, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Apis.Upload.ResumableUpload/<HandleResponse>d__78")]
private Task`1<bool> HandleResponse(HttpResponseMessage response);
    [AsyncStateMachineAttribute("Google.Apis.Upload.ResumableUpload/<ExceptionForResponseAsync>d__79")]
protected Task`1<GoogleApiException> ExceptionForResponseAsync(HttpResponseMessage response);
    private void MediaCompleted(HttpResponseMessage response);
    [AsyncStateMachineAttribute("Google.Apis.Upload.ResumableUpload/<PrepareBufferUnknownSizeAsync>d__81")]
private Task PrepareBufferUnknownSizeAsync(Stream stream, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Apis.Upload.ResumableUpload/<PrepareBufferKnownSizeAsync>d__82")]
private Task PrepareBufferKnownSizeAsync(Stream stream, CancellationToken cancellationToken);
    private long GetNextByte(string range);
    private string GetContentRangeHeader(long chunkStart, long chunkSize);
}
public class Google.Apis.Upload.ResumableUpload`1 : ResumableUpload {
    private static string PayloadContentTypeHeader;
    private static string PayloadContentLengthHeader;
    private static string UploadType;
    private static string Resumable;
    [CompilerGeneratedAttribute]
private IClientService <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private TRequest <Body>k__BackingField;
    public IClientService Service { get; private set; }
    public string Path { get; private set; }
    public string HttpMethod { get; private set; }
    public string ContentType { get; private set; }
    public TRequest Body { get; public set; }
    protected ResumableUpload`1(IClientService service, string path, string httpMethod, Stream contentStream, string contentType);
    [CompilerGeneratedAttribute]
public IClientService get_Service();
    [CompilerGeneratedAttribute]
private void set_Service(IClientService value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_HttpMethod();
    [CompilerGeneratedAttribute]
private void set_HttpMethod(string value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
private void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public TRequest get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(TRequest value);
    [AsyncStateMachineAttribute("Google.Apis.Upload.ResumableUpload`1/<InitiateSessionAsync>d__25")]
public virtual Task`1<Uri> InitiateSessionAsync(CancellationToken cancellationToken);
    private HttpRequestMessage CreateInitializeRequest();
    private void SetAllPropertyValues(RequestBuilder requestBuilder);
}
public class Google.Apis.Upload.ResumableUpload`2 : ResumableUpload`1<TRequest> {
    [CompilerGeneratedAttribute]
private TResponse <ResponseBody>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<TResponse> ResponseReceived;
    public TResponse ResponseBody { get; private set; }
    protected ResumableUpload`2(IClientService service, string path, string httpMethod, Stream contentStream, string contentType);
    [CompilerGeneratedAttribute]
public TResponse get_ResponseBody();
    [CompilerGeneratedAttribute]
private void set_ResponseBody(TResponse value);
    [CompilerGeneratedAttribute]
public void add_ResponseReceived(Action`1<TResponse> value);
    [CompilerGeneratedAttribute]
public void remove_ResponseReceived(Action`1<TResponse> value);
    protected virtual void ProcessResponse(HttpResponseMessage response);
}
public class Google.Apis.Upload.ResumableUploadOptions : object {
    [CompilerGeneratedAttribute]
private HttpClient <HttpClient>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<HttpRequestMessage> <ModifySessionInitiationRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private ISerializer <Serializer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    public HttpClient HttpClient { get; public set; }
    public Action`1<HttpRequestMessage> ModifySessionInitiationRequest { get; public set; }
    public ISerializer Serializer { get; public set; }
    public string ServiceName { get; public set; }
    internal ConfigurableHttpClient ConfigurableHttpClient { get; }
    [CompilerGeneratedAttribute]
public HttpClient get_HttpClient();
    [CompilerGeneratedAttribute]
public void set_HttpClient(HttpClient value);
    [CompilerGeneratedAttribute]
public Action`1<HttpRequestMessage> get_ModifySessionInitiationRequest();
    [CompilerGeneratedAttribute]
public void set_ModifySessionInitiationRequest(Action`1<HttpRequestMessage> value);
    [CompilerGeneratedAttribute]
public ISerializer get_Serializer();
    [CompilerGeneratedAttribute]
public void set_Serializer(ISerializer value);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
public void set_ServiceName(string value);
    internal ConfigurableHttpClient get_ConfigurableHttpClient();
}
[ExtensionAttribute]
public static class Google.Apis.Upload.UploadProgress : object {
    [ExtensionAttribute]
public static void ThrowOnFailure(IUploadProgress progress);
}
public enum Google.Apis.Upload.UploadStatus : Enum {
    public int value__;
    public static UploadStatus NotStarted;
    public static UploadStatus Starting;
    public static UploadStatus Uploading;
    public static UploadStatus Completed;
    public static UploadStatus Failed;
}
[ExtensionAttribute]
internal static class Google.Apis.Util.HttpRequestMessageExtensions : object {
    [ExtensionAttribute]
public static void SetOption(HttpRequestMessage request, string key, TValue value);
    [ExtensionAttribute]
public static bool TryGetOption(HttpRequestMessage request, string key, TValue& value);
}
public class Google.Apis.Util.Store.FileDataStore : object {
    private static string XdgDataHomeSubdirectory;
    private static Task CompletedTask;
    private string folderPath;
    public string FolderPath { get; }
    public FileDataStore(string folder, bool fullPath);
    private static FileDataStore();
    public string get_FolderPath();
    private string GetHomeDirectory();
    public sealed virtual Task StoreAsync(string key, T value);
    public sealed virtual Task DeleteAsync(string key);
    public sealed virtual Task`1<T> GetAsync(string key);
    public sealed virtual Task ClearAsync();
    public static string GenerateStoredKey(string key, Type t);
}
public class Google.Apis.Util.Store.NullDataStore : object {
    private static Task s_completedTask;
    private static NullDataStore();
    private static Task`1<T> CompletedTask();
    public sealed virtual Task ClearAsync();
    public sealed virtual Task DeleteAsync(string key);
    public sealed virtual Task`1<T> GetAsync(string key);
    public sealed virtual Task StoreAsync(string key, T value);
}
