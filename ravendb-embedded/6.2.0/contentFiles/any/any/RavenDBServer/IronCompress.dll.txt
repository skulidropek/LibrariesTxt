public enum IronCompress.Codec : Enum {
    public int value__;
    public static Codec Snappy;
    public static Codec Zstd;
    public static Codec Gzip;
    public static Codec Brotli;
    public static Codec LZO;
    public static Codec LZ4;
}
public class IronCompress.Iron : object {
    [NullableAttribute("1")]
private ArrayPool`1<byte> _allocPool;
    private static Nullable`1<bool> _isNativeLibraryAvailable;
    [CompilerGeneratedAttribute]
private Nullable`1<Platform> <ForcePlatform>k__BackingField;
    public static bool IsNativeLibraryAvailable { get; }
    public Nullable`1<Platform> ForcePlatform { get; public set; }
    [NullableContextAttribute("2")]
public Iron(ArrayPool`1<byte> allocPool);
    public static bool get_IsNativeLibraryAvailable();
    private static bool SupportsManaged(Codec c);
    private static bool SupportsNative(Codec c);
    [CompilerGeneratedAttribute]
public Nullable`1<Platform> get_ForcePlatform();
    [CompilerGeneratedAttribute]
public void set_ForcePlatform(Nullable`1<Platform> value);
    public IronCompressResult Compress(Codec codec, ReadOnlySpan`1<byte> input, Nullable`1<int> outputLength, CompressionLevel compressionLevel);
    public IronCompressResult Decompress(Codec codec, ReadOnlySpan`1<byte> input, Nullable`1<int> outputLength);
    [NullableContextAttribute("1")]
private static Exception CreateUnavailableException(Codec codec);
    private IronCompressResult NativeCompressOrDecompress(bool compressOrDecompress, Codec codec, ReadOnlySpan`1<byte> input, CompressionLevel compressionLevel, Nullable`1<int> outputLength);
    private IronCompressResult ManagedCompressOrDecompress(bool compressOrDecompress, Codec codec, ReadOnlySpan`1<byte> input, CompressionLevel compressionLevel, Nullable`1<int> outputLength);
    private int ToNativeCompressionLevel(CompressionLevel compressionLevel);
    private static Byte[] Gzip(ReadOnlySpan`1<byte> data, CompressionLevel compressionLevel);
    private static Byte[] ZstdManagedCompress(ReadOnlySpan`1<byte> data, CompressionLevel compressionLevel);
    private static Byte[] BrotliCompress(ReadOnlySpan`1<byte> data, CompressionLevel compressionLevel);
    private static Byte[] SnappyManagedCompress(ReadOnlySpan`1<byte> data);
    private static Byte[] Ungzip(ReadOnlySpan`1<byte> data);
    private static Byte[] ZstdManagedUncompress(ReadOnlySpan`1<byte> data);
    private static Byte[] BrotliUncompress(ReadOnlySpan`1<byte> data);
    private static Byte[] SnappyManagedUncompress(ReadOnlySpan`1<byte> data);
}
public class IronCompress.IronCompressResult : object {
    [NullableAttribute("1")]
private Byte[] _data;
    private int _dataSize;
    [NullableAttribute("2")]
private ArrayPool`1<byte> _arrayPool;
    [CompilerGeneratedAttribute]
private Codec <Codec>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NativeUsed>k__BackingField;
    public int Length { get; }
    public Codec Codec { get; }
    public bool NativeUsed { get; }
    [NullableContextAttribute("1")]
public IronCompressResult(Byte[] data, Codec codec, bool nativeUsed, int dataSize, ArrayPool`1<byte> arrayPool);
    public int get_Length();
    [CompilerGeneratedAttribute]
public Codec get_Codec();
    [CompilerGeneratedAttribute]
public bool get_NativeUsed();
    public Span`1<byte> AsSpan();
    public static Span`1<byte> op_Implicit(IronCompressResult r);
    public static ReadOnlySpan`1<byte> op_Implicit(IronCompressResult r);
    public sealed virtual void Dispose();
}
[SuppressUnmanagedCodeSecurityAttribute]
internal static class IronCompress.Native : object {
    [NullableAttribute("1")]
private static string LibName;
    private static Native();
    [NullableContextAttribute("1")]
private static IntPtr DllImportResolver(string libraryName, Assembly assembly, Nullable`1<DllImportSearchPath> searchPath);
    internal static bool compress(bool compress, int codec, Byte* inputBuffer, int inputBufferSize, Byte* outputBuffer, Int32* outputBufferSize, int compressionLevel);
    internal static bool ping();
    internal static bool is_supported(int codec);
}
public enum IronCompress.Platform : Enum {
    public int value__;
    public static Platform Native;
    public static Platform Managed;
}
