[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddRazorTemplating(IServiceCollection services);
}
internal class Razor.Templating.Core.CustomRouter : object {
    [NullableContextAttribute("1")]
public sealed virtual VirtualPathData GetVirtualPath(VirtualPathContext context);
    [NullableContextAttribute("1")]
public sealed virtual Task RouteAsync(RouteContext context);
}
public class Razor.Templating.Core.Exceptions.ViewNotFoundException : InvalidOperationException {
    [NullableContextAttribute("1")]
public ViewNotFoundException(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Razor.Templating.Core.Infrastructure.ApplicationPartsManager : object {
    private static List`1<string> RclReferences;
    private static ApplicationPartsManager();
    public static List`1<ApplicationPart> GetApplicationParts();
    private static void AddApplicationParts(List`1& applicationParts, Assembly assembly);
    private static IEnumerable`1<Assembly> GetAllBinDirectoryAssemblies();
    private static List`1<Assembly> GetAllAssemblies();
    private static IEnumerable`1<Assembly> GetRclAssemblies();
}
internal static class Razor.Templating.Core.Infrastructure.Constants : object {
    [NullableAttribute("1")]
public static string LibraryIdentifier;
}
internal static class Razor.Templating.Core.Infrastructure.DirectoryHelper : object {
    [NullableContextAttribute("2")]
internal static string GetMainExecutableDirectory();
    [NullableContextAttribute("1")]
internal static string GetWebRootDirectory(string assembliesBaseDirectory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Razor.Templating.Core.Infrastructure.HostingEnvironment : object {
    [CompilerGeneratedAttribute]
private string <EnvironmentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebRootPath>k__BackingField;
    [CompilerGeneratedAttribute]
private IFileProvider <WebRootFileProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentRootPath>k__BackingField;
    [CompilerGeneratedAttribute]
private IFileProvider <ContentRootFileProvider>k__BackingField;
    public string EnvironmentName { get; public set; }
    public string ApplicationName { get; public set; }
    public string WebRootPath { get; public set; }
    public IFileProvider WebRootFileProvider { get; public set; }
    public string ContentRootPath { get; public set; }
    public IFileProvider ContentRootFileProvider { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_EnvironmentName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnvironmentName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApplicationName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApplicationName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WebRootPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebRootPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IFileProvider get_WebRootFileProvider();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebRootFileProvider(IFileProvider value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentRootPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentRootPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IFileProvider get_ContentRootFileProvider();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentRootFileProvider(IFileProvider value);
}
internal static class Razor.Templating.Core.Infrastructure.Logger : object {
    [NullableContextAttribute("1")]
[ConditionalAttribute("DEBUG")]
public static void Log(string message);
}
[NullableContextAttribute("1")]
public interface Razor.Templating.Core.IRazorTemplateEngine {
    public abstract virtual Task`1<string> RenderAsync(string viewName, object viewModel, Dictionary`2<string, object> viewBagOrViewData);
    public abstract virtual Task`1<ValueTuple`2<bool, string>> TryRenderAsync(string viewName, object viewModel, Dictionary`2<string, object> viewBagOrViewData);
    public abstract virtual Task`1<string> RenderPartialAsync(string viewName, object viewModel, Dictionary`2<string, object> viewBagOrViewData);
    public abstract virtual Task`1<ValueTuple`2<bool, string>> TryRenderPartialAsync(string viewName, object viewModel, Dictionary`2<string, object> viewBagOrViewData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Razor.Templating.Core.RazorTemplateEngine : object {
    private static Lazy`1<IRazorTemplateEngine> _instance;
    [NullableAttribute("2")]
private static IServiceCollection _services;
    private static RazorTemplateEngine();
    internal static void UseServiceCollection(IServiceCollection services);
    private static IRazorTemplateEngine CreateInstance();
    [AsyncStateMachineAttribute("Razor.Templating.Core.RazorTemplateEngine/<RenderAsync>d__4")]
public static Task`1<string> RenderAsync(string viewName, object viewModel, Dictionary`2<string, object> viewBagOrViewData);
    [AsyncStateMachineAttribute("Razor.Templating.Core.RazorTemplateEngine/<RenderPartialAsync>d__5")]
public static Task`1<string> RenderPartialAsync(string viewName, object viewModel, Dictionary`2<string, object> viewBagOrViewData);
    [AsyncStateMachineAttribute("Razor.Templating.Core.RazorTemplateEngine/<TryRenderPartialAsync>d__6")]
public static Task`1<ValueTuple`2<bool, string>> TryRenderPartialAsync(string viewName, object viewModel, Dictionary`2<string, object> viewBagOrViewData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Razor.Templating.Core.RazorTemplateEngineRenderer : object {
    private IServiceProvider _serviceProvider;
    public RazorTemplateEngineRenderer(IServiceProvider serviceProvider);
    [AsyncStateMachineAttribute("Razor.Templating.Core.RazorTemplateEngineRenderer/<RenderAsync>d__2")]
public sealed virtual Task`1<string> RenderAsync(string viewName, object viewModel, Dictionary`2<string, object> viewBagOrViewData);
    [AsyncStateMachineAttribute("Razor.Templating.Core.RazorTemplateEngineRenderer/<RenderPartialAsync>d__3")]
public sealed virtual Task`1<string> RenderPartialAsync(string viewName, object viewModel, Dictionary`2<string, object> viewBagOrViewData);
    private static ViewDataDictionary GetViewDataDictionaryFromViewBagOrViewData(Dictionary`2<string, object> viewBagOrViewData);
    [AsyncStateMachineAttribute("Razor.Templating.Core.RazorTemplateEngineRenderer/<TryRenderAsync>d__5")]
public sealed virtual Task`1<ValueTuple`2<bool, string>> TryRenderAsync(string viewName, object viewModel, Dictionary`2<string, object> viewBagOrViewData);
    [AsyncStateMachineAttribute("Razor.Templating.Core.RazorTemplateEngineRenderer/<TryRenderPartialAsync>d__6")]
public sealed virtual Task`1<ValueTuple`2<bool, string>> TryRenderPartialAsync(string viewName, object viewModel, Dictionary`2<string, object> viewBagOrViewData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Razor.Templating.Core.RazorViewToStringRenderer : object {
    private IRazorViewEngine _viewEngine;
    private ITempDataProvider _tempDataProvider;
    private IServiceProvider _serviceProvider;
    public RazorViewToStringRenderer(IRazorViewEngine viewEngine, ITempDataProvider tempDataProvider, IServiceProvider serviceProvider);
    [AsyncStateMachineAttribute("Razor.Templating.Core.RazorViewToStringRenderer/<RenderViewToStringAsync>d__4")]
public Task`1<string> RenderViewToStringAsync(string viewName, object model, ViewDataDictionary viewDataDictionary, bool isMainPage);
    private IView FindView(ActionContext actionContext, string viewName, bool isMainPage);
    private ActionContext GetActionContext();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
