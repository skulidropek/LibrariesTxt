[CompilerGeneratedAttribute]
internal static class Microsoft.Internal.Web.Utils.CommonResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [CompilerGeneratedAttribute]
private static Func`2<string, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Argument_Cannot_Be_Null_Or_Empty { get; }
    internal static string Argument_Must_Be_Between { get; }
    internal static string Argument_Must_Be_Enum_Member { get; }
    internal static string Argument_Must_Be_GreaterThan { get; }
    internal static string Argument_Must_Be_GreaterThanOrEqualTo { get; }
    internal static string Argument_Must_Be_LessThan { get; }
    internal static string Argument_Must_Be_LessThanOrEqualTo { get; }
    internal static string Argument_Must_Be_Null_Or_Non_Empty { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Argument_Cannot_Be_Null_Or_Empty();
    internal static string get_Argument_Must_Be_Between();
    internal static string get_Argument_Must_Be_Enum_Member();
    internal static string get_Argument_Must_Be_GreaterThan();
    internal static string get_Argument_Must_Be_GreaterThanOrEqualTo();
    internal static string get_Argument_Must_Be_LessThan();
    internal static string get_Argument_Must_Be_LessThanOrEqualTo();
    internal static string get_Argument_Must_Be_Null_Or_Non_Empty();
    [CompilerGeneratedAttribute]
private static bool <get_ResourceManager>b__0(string s);
}
internal class System.Web.WebPages.Razor.AssemblyBuilderWrapper : object {
    [CompilerGeneratedAttribute]
private AssemblyBuilder <InnerBuilder>k__BackingField;
    internal AssemblyBuilder InnerBuilder { get; internal set; }
    public AssemblyBuilderWrapper(AssemblyBuilder builder);
    [CompilerGeneratedAttribute]
internal AssemblyBuilder get_InnerBuilder();
    [CompilerGeneratedAttribute]
internal void set_InnerBuilder(AssemblyBuilder value);
    public sealed virtual void AddCodeCompileUnit(BuildProvider buildProvider, CodeCompileUnit compileUnit);
    public sealed virtual void GenerateTypeFactory(string typeName);
}
public class System.Web.WebPages.Razor.Configuration.HostSection : ConfigurationSection {
    public static string SectionName;
    private static ConfigurationProperty _typeProperty;
    private bool _factoryTypeSet;
    private string _factoryType;
    [ConfigurationPropertyAttribute("factoryType")]
public string FactoryType { get; public set; }
    private static HostSection();
    public string get_FactoryType();
    public void set_FactoryType(string value);
}
public class System.Web.WebPages.Razor.Configuration.RazorPagesSection : ConfigurationSection {
    public static string SectionName;
    private static ConfigurationProperty _pageBaseTypeProperty;
    private static ConfigurationProperty _namespacesProperty;
    private bool _pageBaseTypeSet;
    private bool _namespacesSet;
    private string _pageBaseType;
    private NamespaceCollection _namespaces;
    [ConfigurationPropertyAttribute("pageBaseType")]
public string PageBaseType { get; public set; }
    [ConfigurationPropertyAttribute("namespaces")]
public NamespaceCollection Namespaces { get; public set; }
    private static RazorPagesSection();
    public string get_PageBaseType();
    public void set_PageBaseType(string value);
    public NamespaceCollection get_Namespaces();
    public void set_Namespaces(NamespaceCollection value);
}
public class System.Web.WebPages.Razor.Configuration.RazorWebSectionGroup : ConfigurationSectionGroup {
    public static string GroupName;
    private bool _hostSet;
    private bool _pagesSet;
    private HostSection _host;
    private RazorPagesSection _pages;
    [ConfigurationPropertyAttribute("host")]
public HostSection Host { get; public set; }
    [ConfigurationPropertyAttribute("pages")]
public RazorPagesSection Pages { get; public set; }
    private static RazorWebSectionGroup();
    public HostSection get_Host();
    public void set_Host(HostSection value);
    public RazorPagesSection get_Pages();
    public void set_Pages(RazorPagesSection value);
}
internal class System.Web.WebPages.Razor.HostingEnvironmentWrapper : object {
    public sealed virtual string MapPath(string virtualPath);
}
internal interface System.Web.WebPages.Razor.IAssemblyBuilder {
    public abstract virtual void AddCodeCompileUnit(BuildProvider buildProvider, CodeCompileUnit compileUnit);
    public abstract virtual void GenerateTypeFactory(string typeName);
}
internal interface System.Web.WebPages.Razor.IHostingEnvironment {
    public abstract virtual string MapPath(string virtualPath);
}
[EditorBrowsableAttribute("1")]
public static class System.Web.WebPages.Razor.PreApplicationStartCode : object {
    private static bool _startWasCalled;
    public static void Start();
}
[BuildProviderAppliesToAttribute]
public class System.Web.WebPages.Razor.RazorBuildProvider : BuildProvider {
    private static EventHandler`1<CodeGenerationCompleteEventArgs> CodeGenerationCompleted;
    private static EventHandler CodeGenerationStarted;
    private EventHandler`1<CodeGenerationCompleteEventArgs> _codeGenerationCompletedInternal;
    private EventHandler _codeGenerationStartedInternal;
    private static Nullable`1<bool> _isFullTrust;
    private CodeCompileUnit _generatedCode;
    private WebPageRazorHost _host;
    private IList _virtualPathDependencies;
    private IAssemblyBuilder _assemblyBuilder;
    internal WebPageRazorHost Host { get; internal set; }
    public ICollection VirtualPathDependencies { get; }
    public string VirtualPath { get; }
    public AssemblyBuilder AssemblyBuilder { get; }
    internal IAssemblyBuilder AssemblyBuilderInternal { get; }
    internal CodeCompileUnit GeneratedCode { get; internal set; }
    public CompilerType CodeCompilerType { get; }
    public static void add_CodeGenerationCompleted(EventHandler`1<CodeGenerationCompleteEventArgs> value);
    public static void remove_CodeGenerationCompleted(EventHandler`1<CodeGenerationCompleteEventArgs> value);
    public static void add_CodeGenerationStarted(EventHandler value);
    public static void remove_CodeGenerationStarted(EventHandler value);
    private void add__codeGenerationCompletedInternal(EventHandler`1<CodeGenerationCompleteEventArgs> value);
    private void remove__codeGenerationCompletedInternal(EventHandler`1<CodeGenerationCompleteEventArgs> value);
    private void add__codeGenerationStartedInternal(EventHandler value);
    private void remove__codeGenerationStartedInternal(EventHandler value);
    internal WebPageRazorHost get_Host();
    internal void set_Host(WebPageRazorHost value);
    public virtual ICollection get_VirtualPathDependencies();
    public void AddVirtualPathDependency(string dependency);
    public string get_VirtualPath();
    public AssemblyBuilder get_AssemblyBuilder();
    internal IAssemblyBuilder get_AssemblyBuilderInternal();
    internal CodeCompileUnit get_GeneratedCode();
    internal void set_GeneratedCode(CodeCompileUnit value);
    public virtual CompilerType get_CodeCompilerType();
    internal void add_CodeGenerationCompletedInternal(EventHandler`1<CodeGenerationCompleteEventArgs> value);
    internal void remove_CodeGenerationCompletedInternal(EventHandler`1<CodeGenerationCompleteEventArgs> value);
    internal void add_CodeGenerationStartedInternal(EventHandler value);
    internal void remove_CodeGenerationStartedInternal(EventHandler value);
    public virtual Type GetGeneratedType(CompilerResults results);
    public virtual void GenerateCode(AssemblyBuilder assemblyBuilder);
    internal virtual void GenerateCodeCore(IAssemblyBuilder assemblyBuilder);
    protected internal virtual TextReader InternalOpenReader();
    protected internal virtual WebPageRazorHost CreateHost();
    private void OnCodeGenerationStarted(IAssemblyBuilder assemblyBuilder);
    private void OnCodeGenerationCompleted(CodeCompileUnit generatedCode);
    private void EnsureGeneratedCode();
    private static HttpParseException CreateExceptionFromParserError(RazorError error, string virtualPath);
    private static void SetIncludeDebugInfoFlag(CompilerType compilerType);
}
[CompilerGeneratedAttribute]
[DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
internal class System.Web.WebPages.Razor.Resources.RazorWebResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string BuildProvider_No_CodeLanguageService_For_Path { get; }
    internal static string Could_Not_Locate_FactoryType { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_BuildProvider_No_CodeLanguageService_For_Path();
    internal static string get_Could_Not_Locate_FactoryType();
}
public class System.Web.WebPages.Razor.WebCodeRazorHost : WebPageRazorHost {
    private static string AppCodeDir;
    private static string HttpContextAccessorName;
    private static string HelperPageBaseType;
    [CompilerGeneratedAttribute]
private static Func`2<CodeMemberProperty, bool> CS$<>9__CachedAnonymousMethodDelegate6;
    public WebCodeRazorHost(string virtualPath);
    public WebCodeRazorHost(string virtualPath, string physicalPath);
    private static WebCodeRazorHost();
    public virtual void PostProcessGeneratedCode(CodeCompileUnit codeCompileUnit, CodeNamespace generatedNamespace, CodeTypeDeclaration generatedClass, CodeMemberMethod executeMethod);
    protected virtual string GetClassName(string virtualPath);
    private static string DetermineNamespace(string virtualPath);
    private static string GetDirectory(string virtualPath);
    [CompilerGeneratedAttribute]
private static bool <PostProcessGeneratedCode>b__5(CodeMemberProperty p);
}
public class System.Web.WebPages.Razor.WebPageRazorHost : RazorEngineHost {
    internal static string PageClassNamePrefix;
    internal static string ApplicationInstancePropertyName;
    internal static string ContextPropertyName;
    internal static string DefineSectionMethodName;
    internal static string WebDefaultNamespace;
    internal static string WriteToMethodName;
    internal static string WriteLiteralToMethodName;
    private static string ApplicationStartFileName;
    private static string PageStartFileName;
    internal static string FallbackApplicationTypeName;
    internal static string PageBaseClass;
    internal static string TemplateTypeName;
    private static ConcurrentDictionary`2<string, object> _importedNamespaces;
    private string _className;
    private RazorCodeLanguage _codeLanguage;
    private string _globalAsaxTypeName;
    private Nullable`1<bool> _isSpecialPage;
    private string _physicalPath;
    private Dictionary`2<string, string> _specialFileBaseTypes;
    private string _specialFileBaseClass;
    [CompilerGeneratedAttribute]
private bool <DefaultDebugCompilation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultPageBaseClass>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VirtualPath>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, object>, string> CS$<>9__CachedAnonymousMethodDelegate1;
    [CompilerGeneratedAttribute]
private static Func`2<string, CodeNamespaceImport> CS$<>9__CachedAnonymousMethodDelegate4;
    public RazorCodeLanguage CodeLanguage { get; protected set; }
    public string DefaultBaseClass { get; public set; }
    public string DefaultClassName { get; public set; }
    public bool DefaultDebugCompilation { get; public set; }
    public string DefaultPageBaseClass { get; public set; }
    internal string GlobalAsaxTypeName { get; internal set; }
    public bool IsSpecialPage { get; }
    public string PhysicalPath { get; public set; }
    private string SpecialPageBaseClass { get; }
    public string VirtualPath { get; private set; }
    public WebPageRazorHost(string virtualPath);
    public WebPageRazorHost(string virtualPath, string physicalPath);
    private static WebPageRazorHost();
    public virtual RazorCodeLanguage get_CodeLanguage();
    protected virtual void set_CodeLanguage(RazorCodeLanguage value);
    public virtual string get_DefaultBaseClass();
    public virtual void set_DefaultBaseClass(string value);
    public virtual string get_DefaultClassName();
    public virtual void set_DefaultClassName(string value);
    [CompilerGeneratedAttribute]
public bool get_DefaultDebugCompilation();
    [CompilerGeneratedAttribute]
public void set_DefaultDebugCompilation(bool value);
    [CompilerGeneratedAttribute]
public string get_DefaultPageBaseClass();
    [CompilerGeneratedAttribute]
public void set_DefaultPageBaseClass(string value);
    internal string get_GlobalAsaxTypeName();
    internal void set_GlobalAsaxTypeName(string value);
    public bool get_IsSpecialPage();
    public string get_PhysicalPath();
    public void set_PhysicalPath(string value);
    private string get_SpecialPageBaseClass();
    [CompilerGeneratedAttribute]
public string get_VirtualPath();
    [CompilerGeneratedAttribute]
private void set_VirtualPath(string value);
    public static void AddGlobalImport(string ns);
    private void CheckForSpecialPage();
    public virtual MarkupParser CreateMarkupParser();
    private static RazorCodeLanguage DetermineCodeLanguage(string fileName);
    protected virtual string GetClassName(string virtualPath);
    protected virtual RazorCodeLanguage GetCodeLanguage();
    public static IEnumerable`1<string> GetGlobalImports();
    private static RazorCodeLanguage GetLanguageByExtension(string extension);
    private void MapPhysicalPath();
    public virtual void PostProcessGeneratedCode(CodeCompileUnit codeCompileUnit, CodeNamespace generatedNamespace, CodeTypeDeclaration generatedClass, CodeMemberMethod executeMethod);
    protected void RegisterSpecialFile(string fileName, Type baseType);
    protected void RegisterSpecialFile(string fileName, string baseTypeName);
    [CompilerGeneratedAttribute]
private static string <GetGlobalImports>b__0(KeyValuePair`2<string, object> pair);
    [CompilerGeneratedAttribute]
private static CodeNamespaceImport <PostProcessGeneratedCode>b__3(string s);
}
public class System.Web.WebPages.Razor.WebRazorHostFactory : object {
    private static ConcurrentDictionary`2<string, Func`1<WebRazorHostFactory>> _factories;
    internal static Func`2<string, Type> TypeFactory;
    [CompilerGeneratedAttribute]
private static Func`2<NamespaceInfo, string> CS$<>9__CachedAnonymousMethodDelegate1;
    private static WebRazorHostFactory();
    public static WebPageRazorHost CreateDefaultHost(string virtualPath);
    public static WebPageRazorHost CreateDefaultHost(string virtualPath, string physicalPath);
    public static WebPageRazorHost CreateHostFromConfig(string virtualPath);
    public static WebPageRazorHost CreateHostFromConfig(string virtualPath, string physicalPath);
    public static WebPageRazorHost CreateHostFromConfig(RazorWebSectionGroup config, string virtualPath);
    public static WebPageRazorHost CreateHostFromConfig(RazorWebSectionGroup config, string virtualPath, string physicalPath);
    internal static WebPageRazorHost CreateHostFromConfigCore(RazorWebSectionGroup config, string virtualPath);
    internal static WebPageRazorHost CreateHostFromConfigCore(RazorWebSectionGroup config, string virtualPath, string physicalPath);
    private static Func`1<WebRazorHostFactory> CreateFactory(string typeName);
    public static void ApplyConfigurationToHost(RazorPagesSection config, WebPageRazorHost host);
    public virtual WebPageRazorHost CreateHost(string virtualPath, string physicalPath);
    internal static RazorWebSectionGroup GetRazorSection(string virtualPath);
    private static string EnsureAppRelative(string virtualPath);
    private static Type DefaultTypeFactory(string typeName);
    [CompilerGeneratedAttribute]
private static string <ApplyConfigurationToHost>b__0(NamespaceInfo ns);
}
