[ExtensionAttribute]
internal static class RazorGenerator.Mvc.AssemblyExtensions : object {
    [ExtensionAttribute]
public static DateTime GetLastWriteTimeUtc(Assembly assembly, DateTime fallback);
}
public class RazorGenerator.Mvc.CompositePrecompiledMvcEngine : VirtualPathProviderViewEngine {
    private IDictionary`2<string, ViewMapping> _mappings;
    private IViewPageActivator _viewPageActivator;
    public CompositePrecompiledMvcEngine(PrecompiledViewAssembly[] viewAssemblies);
    public CompositePrecompiledMvcEngine(IEnumerable`1<PrecompiledViewAssembly> viewAssemblies, IViewPageActivator viewPageActivator);
    protected virtual bool FileExists(ControllerContext controllerContext, string virtualPath);
    protected virtual IView CreatePartialView(ControllerContext controllerContext, string partialPath);
    protected virtual IView CreateView(ControllerContext controllerContext, string viewPath, string masterPath);
    private IView CreateViewInternal(string viewPath, string masterPath, bool runViewStartPages);
    public sealed virtual object CreateInstance(string virtualPath);
    public sealed virtual bool Exists(string virtualPath);
}
internal class RazorGenerator.Mvc.DefaultViewPageActivator : object {
    private Func`1<IDependencyResolver> _resolverThunk;
    [CompilerGeneratedAttribute]
private static Func`1<IDependencyResolver> CS$<>9__CachedAnonymousMethodDelegate2;
    public static DefaultViewPageActivator Current { get; }
    public DefaultViewPageActivator(IDependencyResolver resolver);
    public static DefaultViewPageActivator get_Current();
    public sealed virtual object Create(ControllerContext controllerContext, Type type);
    [CompilerGeneratedAttribute]
private static IDependencyResolver <.ctor>b__0();
}
public class RazorGenerator.Mvc.PrecompiledMvcEngine : VirtualPathProviderViewEngine {
    private IDictionary`2<string, Type> _mappings;
    private IViewPageActivator _viewPageActivator;
    public static String[] DefaultAreaLocationFormats;
    public static String[] DefaultLocationFormats;
    public static String[] DefaultFileExtensions;
    [CompilerGeneratedAttribute]
private string <BaseVirtualPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Lazy`1<DateTime> <AssemblyLastWriteTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreemptPhysicalFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsePhysicalViewsIfNewer>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<Type, bool> CS$<>9__CachedAnonymousMethodDelegate9;
    [CompilerGeneratedAttribute]
private static Func`2<Type, <>f__AnonymousType0`2<Type, PageVirtualPathAttribute>> CS$<>9__CachedAnonymousMethodDelegatea;
    [CompilerGeneratedAttribute]
private static Func`2<<>f__AnonymousType0`2<Type, PageVirtualPathAttribute>, bool> CS$<>9__CachedAnonymousMethodDelegateb;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, Type>, string> CS$<>9__CachedAnonymousMethodDelegated;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, Type>, Type> CS$<>9__CachedAnonymousMethodDelegatee;
    protected string BaseVirtualPath { get; private set; }
    protected Lazy`1<DateTime> AssemblyLastWriteTime { get; private set; }
    public bool PreemptPhysicalFiles { get; public set; }
    public bool UsePhysicalViewsIfNewer { get; public set; }
    public PrecompiledMvcEngine(Assembly assembly);
    public PrecompiledMvcEngine(Assembly assembly, string baseVirtualPath);
    public PrecompiledMvcEngine(Assembly assembly, string baseVirtualPath, IViewPageActivator viewPageActivator);
    private static PrecompiledMvcEngine();
    [CompilerGeneratedAttribute]
protected string get_BaseVirtualPath();
    [CompilerGeneratedAttribute]
private void set_BaseVirtualPath(string value);
    [CompilerGeneratedAttribute]
protected Lazy`1<DateTime> get_AssemblyLastWriteTime();
    [CompilerGeneratedAttribute]
private void set_AssemblyLastWriteTime(Lazy`1<DateTime> value);
    [CompilerGeneratedAttribute]
public bool get_PreemptPhysicalFiles();
    [CompilerGeneratedAttribute]
public void set_PreemptPhysicalFiles(bool value);
    [CompilerGeneratedAttribute]
public bool get_UsePhysicalViewsIfNewer();
    [CompilerGeneratedAttribute]
public void set_UsePhysicalViewsIfNewer(bool value);
    protected virtual bool FileExists(ControllerContext controllerContext, string virtualPath);
    protected virtual IView CreatePartialView(ControllerContext controllerContext, string partialPath);
    protected virtual IView CreateView(ControllerContext controllerContext, string viewPath, string masterPath);
    private IView CreateViewInternal(string viewPath, string masterPath, bool runViewStartPages);
    public sealed virtual object CreateInstance(string virtualPath);
    public sealed virtual bool Exists(string virtualPath);
    protected virtual bool IsPhysicalFileNewer(string virtualPath);
    internal static bool IsPhysicalFileNewer(string virtualPath, string baseVirtualPath, Lazy`1<DateTime> assemblyLastWriteTime);
    internal static string EnsureVirtualPathPrefix(string virtualPath);
    internal static string NormalizeBaseVirtualPath(string virtualPath);
    private static string CombineVirtualPaths(string baseVirtualPath, string virtualPath);
    [CompilerGeneratedAttribute]
private static bool <.ctor>b__2(Type type);
    [CompilerGeneratedAttribute]
private static <>f__AnonymousType0`2<Type, PageVirtualPathAttribute> <.ctor>b__3(Type type);
    [CompilerGeneratedAttribute]
private static bool <.ctor>b__4(<>f__AnonymousType0`2<Type, PageVirtualPathAttribute> <>h__TransparentIdentifier0);
    [CompilerGeneratedAttribute]
private KeyValuePair`2<string, Type> <.ctor>b__5(<>f__AnonymousType0`2<Type, PageVirtualPathAttribute> <>h__TransparentIdentifier0);
    [CompilerGeneratedAttribute]
private static string <.ctor>b__6(KeyValuePair`2<string, Type> t);
    [CompilerGeneratedAttribute]
private static Type <.ctor>b__7(KeyValuePair`2<string, Type> t);
}
public class RazorGenerator.Mvc.PrecompiledMvcView : object {
    private static Lazy`1<Action`2<WebViewPage, string>> _overriddenLayoutSetter;
    private Type _type;
    private string _virtualPath;
    private string _masterPath;
    private IViewPageActivator _viewPageActivator;
    [CompilerGeneratedAttribute]
private bool <RunViewStartPages>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ViewStartFileExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`1<Action`2<WebViewPage, string>> CS$<>9__CachedAnonymousMethodDelegate1;
    public bool RunViewStartPages { get; private set; }
    public IEnumerable`1<string> ViewStartFileExtensions { get; private set; }
    public string VirtualPath { get; }
    public PrecompiledMvcView(string virtualPath, Type type, bool runViewStartPages, IEnumerable`1<string> fileExtension);
    public PrecompiledMvcView(string virtualPath, string masterPath, Type type, bool runViewStartPages, IEnumerable`1<string> fileExtension);
    public PrecompiledMvcView(string virtualPath, string masterPath, Type type, bool runViewStartPages, IEnumerable`1<string> fileExtension, IViewPageActivator viewPageActivator);
    private static PrecompiledMvcView();
    [CompilerGeneratedAttribute]
public bool get_RunViewStartPages();
    [CompilerGeneratedAttribute]
private void set_RunViewStartPages(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ViewStartFileExtensions();
    [CompilerGeneratedAttribute]
private void set_ViewStartFileExtensions(IEnumerable`1<string> value);
    public string get_VirtualPath();
    public sealed virtual void Render(ViewContext viewContext, TextWriter writer);
    private static Action`2<WebViewPage, string> CreateOverriddenLayoutSetterDelegate();
    [CompilerGeneratedAttribute]
private static Action`2<WebViewPage, string> <.cctor>b__0();
}
public class RazorGenerator.Mvc.PrecompiledViewAssembly : object {
    private string _baseVirtualPath;
    private Assembly _assembly;
    private Lazy`1<DateTime> _assemblyLastWriteTime;
    [CompilerGeneratedAttribute]
private bool <PreemptPhysicalFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsePhysicalViewsIfNewer>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<Type, bool> CS$<>9__CachedAnonymousMethodDelegateb;
    [CompilerGeneratedAttribute]
private static Func`2<Type, <>f__AnonymousType0`2<Type, PageVirtualPathAttribute>> CS$<>9__CachedAnonymousMethodDelegatec;
    [CompilerGeneratedAttribute]
private static Func`2<<>f__AnonymousType0`2<Type, PageVirtualPathAttribute>, bool> CS$<>9__CachedAnonymousMethodDelegated;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, Type>, string> CS$<>9__CachedAnonymousMethodDelegatee;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, Type>, Type> CS$<>9__CachedAnonymousMethodDelegatef;
    public bool PreemptPhysicalFiles { get; public set; }
    public bool UsePhysicalViewsIfNewer { get; public set; }
    public PrecompiledViewAssembly(Assembly assembly);
    public PrecompiledViewAssembly(Assembly assembly, string baseVirtualPath);
    public static PrecompiledViewAssembly OfType(string baseVirtualPath, bool usePhysicalViewsIfNewer, bool preemptPhysicalFiles);
    public static PrecompiledViewAssembly OfType(bool usePhysicalViewsIfNewer, bool preemptPhysicalFiles);
    [CompilerGeneratedAttribute]
public bool get_PreemptPhysicalFiles();
    [CompilerGeneratedAttribute]
public void set_PreemptPhysicalFiles(bool value);
    [CompilerGeneratedAttribute]
public bool get_UsePhysicalViewsIfNewer();
    [CompilerGeneratedAttribute]
public void set_UsePhysicalViewsIfNewer(bool value);
    public IDictionary`2<string, Type> GetTypeMappings();
    public bool IsPhysicalFileNewer(string virtualPath);
    private static string CombineVirtualPaths(string baseVirtualPath, string virtualPath);
    [CompilerGeneratedAttribute]
private DateTime <.ctor>b__0();
    [CompilerGeneratedAttribute]
private static bool <GetTypeMappings>b__5(Type type);
    [CompilerGeneratedAttribute]
private static <>f__AnonymousType0`2<Type, PageVirtualPathAttribute> <GetTypeMappings>b__6(Type type);
    [CompilerGeneratedAttribute]
private static bool <GetTypeMappings>b__7(<>f__AnonymousType0`2<Type, PageVirtualPathAttribute> <>h__TransparentIdentifier4);
    [CompilerGeneratedAttribute]
private KeyValuePair`2<string, Type> <GetTypeMappings>b__8(<>f__AnonymousType0`2<Type, PageVirtualPathAttribute> <>h__TransparentIdentifier4);
    [CompilerGeneratedAttribute]
private static string <GetTypeMappings>b__9(KeyValuePair`2<string, Type> t);
    [CompilerGeneratedAttribute]
private static Type <GetTypeMappings>b__a(KeyValuePair`2<string, Type> t);
}
public class RazorGenerator.Mvc.PrecompiledViewLocationCache : object {
    private string _assemblyName;
    private IViewLocationCache _innerCache;
    public PrecompiledViewLocationCache(string assemblyName, IViewLocationCache innerCache);
    public sealed virtual string GetViewLocation(HttpContextBase httpContext, string key);
    public sealed virtual void InsertViewLocation(HttpContextBase httpContext, string key, string virtualPath);
}
