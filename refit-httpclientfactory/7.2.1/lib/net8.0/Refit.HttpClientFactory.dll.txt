[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Refit.HttpClientFactoryExtensions : object {
    private static MethodInfo RequestBuilderGenericForTypeMethod;
    private static HttpClientFactoryExtensions();
    [ExtensionAttribute]
public static IHttpClientBuilder AddRefitClient(IServiceCollection services, RefitSettings settings);
    [ExtensionAttribute]
public static IHttpClientBuilder AddRefitClient(IServiceCollection services, Type refitInterfaceType, RefitSettings settings);
    [ExtensionAttribute]
public static IHttpClientBuilder AddRefitClient(IServiceCollection services, Func`2<IServiceProvider, RefitSettings> settingsAction, string httpClientName);
    [ExtensionAttribute]
public static IHttpClientBuilder AddRefitClient(IServiceCollection services, Type refitInterfaceType, Func`2<IServiceProvider, RefitSettings> settingsAction, string httpClientName);
    [NullableContextAttribute("2")]
private static HttpMessageHandler CreateInnerHandlerIfProvided(RefitSettings settings);
    [ExtensionAttribute]
private static IHttpClientBuilder AddTypedClient(IHttpClientBuilder builder, Type type, Func`3<HttpClient, IServiceProvider, object> factory);
}
[NullableContextAttribute("2")]
public interface Refit.ISettingsFor {
    public RefitSettings Settings { get; }
    public abstract virtual RefitSettings get_Settings();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Refit.SettingsFor`1 : object {
    [CompilerGeneratedAttribute]
private RefitSettings <Settings>k__BackingField;
    public RefitSettings Settings { get; }
    public SettingsFor`1(RefitSettings settings);
    [CompilerGeneratedAttribute]
public sealed virtual RefitSettings get_Settings();
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.143.54359")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
    private static ThisAssembly();
}
