[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratorAttribute]
public class Refit.Generator.InterfaceStubGeneratorV2 : object {
    private static string TypeParameterVariableName;
    private static DiagnosticDescriptor InvalidRefitMember;
    private static DiagnosticDescriptor RefitNotReferenced;
    private static InterfaceStubGeneratorV2();
    public void GenerateInterfaceStubs(TContext context, Action`2<TContext, Diagnostic> reportDiagnostic, Action`3<TContext, string, SourceText> addSource, CSharpCompilation compilation, string refitInternalNamespace, ImmutableArray`1<MethodDeclarationSyntax> candidateMethods, ImmutableArray`1<InterfaceDeclarationSyntax> candidateInterfaces);
    private static string ProcessInterface(TContext context, Action`2<TContext, Diagnostic> reportDiagnostic, INamedTypeSymbol interfaceSymbol, List`1<IMethodSymbol> refitMethods, ISymbol preserveAttributeSymbol, ISymbol disposableInterfaceSymbol, INamedTypeSymbol httpMethodBaseAttributeSymbol, bool supportsNullable, bool nullableEnabled);
    private static void ProcessRefitMethod(StringBuilder source, IMethodSymbol methodSymbol, bool isTopLevel, HashSet`1<string> memberNames);
    private static void ProcessDisposableMethod(StringBuilder source, IMethodSymbol methodSymbol);
    private static string GenerateConstraints(ImmutableArray`1<ITypeParameterSymbol> typeParameters, bool isOverrideOrExplicitImplementation);
    private static void WriteConstraitsForTypeParameter(StringBuilder source, ITypeParameterSymbol typeParameter, bool isOverrideOrExplicitImplementation);
    private static void ProcessNonRefitMethod(TContext context, Action`2<TContext, Diagnostic> reportDiagnostic, StringBuilder source, IMethodSymbol methodSymbol);
    private static string GenerateTypeParameterExpression(StringBuilder source, IMethodSymbol methodSymbol, HashSet`1<string> memberNames);
    private static void WriteMethodOpening(StringBuilder source, IMethodSymbol methodSymbol, bool isExplicitInterface, bool isAsync);
    private static void WriteMethodClosing(StringBuilder source);
    private static string UniqueName(string name, HashSet`1<string> methodNames);
    private static bool IsRefitMethod(IMethodSymbol methodSymbol, INamedTypeSymbol httpMethodAttibute);
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    [CompilerGeneratedAttribute]
internal static bool <GenerateTypeParameterExpression>g__ContainsTypeParameter|10_2(ITypeSymbol symbol);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <Initialize>b__15_7(SourceProductionContext context, ValueTuple`4<ImmutableArray`1<MethodDeclarationSyntax>, ImmutableArray`1<InterfaceDeclarationSyntax>, string, Compilation> collectedValues);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Refit.Generator.ITypeSymbolExtensions : object {
    [IteratorStateMachineAttribute("Refit.Generator.ITypeSymbolExtensions/<GetBaseTypesAndThis>d__0")]
[ExtensionAttribute]
public static IEnumerable`1<ITypeSymbol> GetBaseTypesAndThis(ITypeSymbol type);
    [ExtensionAttribute]
public static bool InheritsFromOrEquals(ITypeSymbol type, ITypeSymbol baseType, bool includeInterfaces);
    [ExtensionAttribute]
public static bool InheritsFromOrEquals(ITypeSymbol type, ITypeSymbol baseType);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.143.54359")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
    private static ThisAssembly();
}
