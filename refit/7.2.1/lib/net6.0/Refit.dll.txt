[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2176")]
public class Refit.AliasAsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; protected set; }
    public AliasAsAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
protected void set_Name(string value);
}
internal class Refit.AnonymousDisposable : object {
    [NullableAttribute("1")]
private Action block;
    [NullableContextAttribute("1")]
public AnonymousDisposable(Action block);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Refit.ApiException : Exception {
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ReasonPhrase>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpResponseHeaders <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMethod <HttpMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpRequestMessage <RequestMessage>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private HttpContentHeaders <ContentHeaders>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private RefitSettings <RefitSettings>k__BackingField;
    public HttpStatusCode StatusCode { get; }
    [NullableAttribute("2")]
public string ReasonPhrase { get; }
    public HttpResponseHeaders Headers { get; }
    public HttpMethod HttpMethod { get; }
    [NullableAttribute("2")]
public Uri Uri { get; }
    public HttpRequestMessage RequestMessage { get; }
    [NullableAttribute("2")]
public HttpContentHeaders ContentHeaders { get; private set; }
    [NullableAttribute("2")]
public string Content { get; private set; }
    [MemberNotNullWhenAttribute("True", "Content")]
public bool HasContent { get; }
    public RefitSettings RefitSettings { get; }
    protected ApiException(HttpRequestMessage message, HttpMethod httpMethod, string content, HttpStatusCode statusCode, string reasonPhrase, HttpResponseHeaders headers, RefitSettings refitSettings, Exception innerException);
    protected ApiException(string exceptionMessage, HttpRequestMessage message, HttpMethod httpMethod, string content, HttpStatusCode statusCode, string reasonPhrase, HttpResponseHeaders headers, RefitSettings refitSettings, Exception innerException);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_StatusCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ReasonPhrase();
    [CompilerGeneratedAttribute]
public HttpResponseHeaders get_Headers();
    [CompilerGeneratedAttribute]
public HttpMethod get_HttpMethod();
    [NullableContextAttribute("2")]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public HttpRequestMessage get_RequestMessage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public HttpContentHeaders get_ContentHeaders();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_ContentHeaders(HttpContentHeaders value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Content();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Content(string value);
    [MemberNotNullWhenAttribute("True", "Content")]
public bool get_HasContent();
    [CompilerGeneratedAttribute]
public RefitSettings get_RefitSettings();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Refit.ApiException/<GetContentAsAsync>d__32`1")]
public Task`1<T> GetContentAsAsync();
    public static Task`1<ApiException> Create(HttpRequestMessage message, HttpMethod httpMethod, HttpResponseMessage response, RefitSettings refitSettings, Exception innerException);
    [AsyncStateMachineAttribute("Refit.ApiException/<Create>d__34")]
public static Task`1<ApiException> Create(string exceptionMessage, HttpRequestMessage message, HttpMethod httpMethod, HttpResponseMessage response, RefitSettings refitSettings, Exception innerException);
    private static string CreateMessage(HttpStatusCode statusCode, string reasonPhrase);
}
internal static class Refit.ApiResponse : object {
    [NullableContextAttribute("2")]
internal static T Create(HttpResponseMessage resp, object content, RefitSettings settings, ApiException error);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Refit.ApiResponse`1 : object {
    [NullableAttribute("1")]
private HttpResponseMessage response;
    private bool disposed;
    [CompilerGeneratedAttribute]
private T <Content>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private RefitSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiException <Error>k__BackingField;
    public T Content { get; }
    [NullableAttribute("1")]
public RefitSettings Settings { get; }
    [NullableAttribute("1")]
public HttpResponseHeaders Headers { get; }
    public HttpContentHeaders ContentHeaders { get; }
    [MemberNotNullWhenAttribute("True", "Content")]
[MemberNotNullWhenAttribute("True", "ContentHeaders")]
[MemberNotNullWhenAttribute("False", "Error")]
public bool IsSuccessStatusCode { get; }
    public string ReasonPhrase { get; }
    public HttpRequestMessage RequestMessage { get; }
    public HttpStatusCode StatusCode { get; }
    [NullableAttribute("1")]
public Version Version { get; }
    public ApiException Error { get; private set; }
    [NullableContextAttribute("1")]
public ApiResponse`1(HttpResponseMessage response, T content, RefitSettings settings, ApiException error);
    [CompilerGeneratedAttribute]
public sealed virtual T get_Content();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public RefitSettings get_Settings();
    [NullableContextAttribute("1")]
public sealed virtual HttpResponseHeaders get_Headers();
    public sealed virtual HttpContentHeaders get_ContentHeaders();
    [MemberNotNullWhenAttribute("True", "Content")]
[MemberNotNullWhenAttribute("True", "ContentHeaders")]
[MemberNotNullWhenAttribute("False", "Error")]
public sealed virtual bool get_IsSuccessStatusCode();
    public sealed virtual string get_ReasonPhrase();
    public sealed virtual HttpRequestMessage get_RequestMessage();
    public sealed virtual HttpStatusCode get_StatusCode();
    [NullableContextAttribute("1")]
public sealed virtual Version get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual ApiException get_Error();
    [CompilerGeneratedAttribute]
private void set_Error(ApiException value);
    public sealed virtual void Dispose();
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Refit.ApiResponse`1/<EnsureSuccessStatusCodeAsync>d__28")]
public Task`1<ApiResponse`1<T>> EnsureSuccessStatusCodeAsync();
    private void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2176")]
[ObsoleteAttribute("Use Refit.StreamPart, Refit.ByteArrayPart, Refit.FileInfoPart or if necessary, inherit from Refit.MultipartItem", "False")]
public class Refit.AttachmentNameAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; protected set; }
    public AttachmentNameAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
protected void set_Name(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Refit.AuthenticatedHttpClientHandler : DelegatingHandler {
    private Func`3<HttpRequestMessage, CancellationToken, Task`1<string>> getToken;
    public AuthenticatedHttpClientHandler(Func`3<HttpRequestMessage, CancellationToken, Task`1<string>> getToken, HttpMessageHandler innerHandler);
    [AsyncStateMachineAttribute("Refit.AuthenticatedHttpClientHandler/<SendAsync>d__2")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
public class Refit.AuthorizeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    public string Scheme { get; }
    public AuthorizeAttribute(string scheme);
    [CompilerGeneratedAttribute]
public string get_Scheme();
}
[AttributeUsageAttribute("2048")]
public class Refit.BodyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Buffered>k__BackingField;
    [CompilerGeneratedAttribute]
private BodySerializationMethod <SerializationMethod>k__BackingField;
    public Nullable`1<bool> Buffered { get; }
    public BodySerializationMethod SerializationMethod { get; }
    public BodyAttribute(bool buffered);
    public BodyAttribute(BodySerializationMethod serializationMethod, bool buffered);
    public BodyAttribute(BodySerializationMethod serializationMethod);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Buffered();
    [CompilerGeneratedAttribute]
public BodySerializationMethod get_SerializationMethod();
}
public enum Refit.BodySerializationMethod : Enum {
    public int value__;
    public static BodySerializationMethod Default;
    [ObsoleteAttribute("Use BodySerializationMethod.Serialized instead", "False")]
public static BodySerializationMethod Json;
    public static BodySerializationMethod UrlEncoded;
    public static BodySerializationMethod Serialized;
}
internal class Refit.Buffers.PooledBufferWriter : object {
    public static int DefaultSize;
    [NullableAttribute("1")]
private Byte[] buffer;
    private int position;
    public sealed virtual void Advance(int count);
    public sealed virtual Memory`1<byte> GetMemory(int sizeHint);
    public sealed virtual Span`1<byte> GetSpan(int sizeHint);
    private void EnsureFreeCapacity(int count);
    public sealed virtual void Dispose();
    [NullableContextAttribute("1")]
public Stream DetachStream();
    private static void ThrowArgumentOutOfRangeExceptionForNegativeCount();
    private static void ThrowArgumentOutOfRangeExceptionForNegativeOffset();
    private static void ThrowArgumentOutOfRangeExceptionForAdvancedTooFar();
    private static void ThrowArgumentOutOfRangeExceptionForEndOfStreamReached();
    private static void ThrowObjectDisposedException();
    private static void ThrowNotSupportedException();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Refit.ByteArrayPart : MultipartItem {
    [CompilerGeneratedAttribute]
private Byte[] <Value>k__BackingField;
    public Byte[] Value { get; }
    public ByteArrayPart(Byte[] value, string fileName, string contentType, string name);
    [CompilerGeneratedAttribute]
public Byte[] get_Value();
    protected virtual HttpContent CreateContent();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Refit.CachedRequestBuilderImplementation : object {
    private IRequestBuilder innerBuilder;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ConcurrentDictionary`2<MethodTableKey, Func`3<HttpClient, Object[], object>> MethodDictionary;
    public CachedRequestBuilderImplementation(IRequestBuilder innerBuilder);
    public sealed virtual Func`3<HttpClient, Object[], object> BuildRestResultFuncForMethod(string methodName, Type[] parameterTypes, Type[] genericArgumentTypes);
}
internal class Refit.CachedRequestBuilderImplementation`1 : CachedRequestBuilderImplementation {
    [NullableContextAttribute("1")]
public CachedRequestBuilderImplementation`1(IRequestBuilder`1<T> innerBuilder);
}
public class Refit.CamelCaseUrlParameterKeyFormatter : object {
    [NullableContextAttribute("1")]
public sealed virtual string Format(string key);
    private static void FixCasing(Span`1<char> chars);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Refit.CloseGenericMethodKey : ValueType {
    [CompilerGeneratedAttribute]
private MethodInfo <OpenMethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Types>k__BackingField;
    public MethodInfo OpenMethodInfo { get; }
    public Type[] Types { get; }
    internal CloseGenericMethodKey(MethodInfo openMethodInfo, Type[] types);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public MethodInfo get_OpenMethodInfo();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Type[] get_Types();
    public sealed virtual bool Equals(CloseGenericMethodKey other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public enum Refit.CollectionFormat : Enum {
    public int value__;
    public static CollectionFormat RefitParameterFormatter;
    public static CollectionFormat Csv;
    public static CollectionFormat Ssv;
    public static CollectionFormat Tsv;
    public static CollectionFormat Pipes;
    public static CollectionFormat Multi;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Refit.DefaultApiExceptionFactory : object {
    [CompilerGeneratedAttribute]
private RefitSettings <refitSettings>P;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Task`1<Exception> NullTask;
    public DefaultApiExceptionFactory(RefitSettings refitSettings);
    private static DefaultApiExceptionFactory();
    public Task`1<Exception> CreateAsync(HttpResponseMessage responseMessage);
    [AsyncStateMachineAttribute("Refit.DefaultApiExceptionFactory/<CreateExceptionAsync>d__4")]
private static Task`1<Exception> CreateExceptionAsync(HttpResponseMessage responseMessage, RefitSettings refitSettings);
}
public class Refit.DefaultFormUrlEncodedParameterFormatter : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<Type, ConcurrentDictionary`2<string, EnumMemberAttribute>> EnumMemberCache;
    private static DefaultFormUrlEncodedParameterFormatter();
    [NullableContextAttribute("2")]
public virtual string Format(object parameterValue, string formatString);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Refit.DefaultUrlParameterFormatter : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<Type, ConcurrentDictionary`2<string, EnumMemberAttribute>> EnumMemberCache;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<ValueTuple`2<Type, Type>, string> <SpecificFormats>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<Type, string> <GeneralFormats>k__BackingField;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<ValueTuple`2<Type, Type>, string> SpecificFormats { get; }
    private Dictionary`2<Type, string> GeneralFormats { get; }
    private static DefaultUrlParameterFormatter();
    [CompilerGeneratedAttribute]
private Dictionary`2<ValueTuple`2<Type, Type>, string> get_SpecificFormats();
    [CompilerGeneratedAttribute]
private Dictionary`2<Type, string> get_GeneralFormats();
    [NullableContextAttribute("2")]
public void AddFormat(string format);
    public void AddFormat(string format);
    public virtual string Format(object parameterValue, ICustomAttributeProvider attributeProvider, Type type);
}
public class Refit.DefaultUrlParameterKeyFormatter : object {
    [NullableContextAttribute("1")]
public virtual string Format(string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
public class Refit.DeleteAttribute : HttpMethodAttribute {
    public HttpMethod Method { get; }
    public DeleteAttribute(string path);
    public virtual HttpMethod get_Method();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Refit.EmptyDictionary`2 : object {
    private static Dictionary`2<TKey, TValue> Value;
    private static EmptyDictionary`2();
    internal static Dictionary`2<TKey, TValue> Get();
}
[ExtensionAttribute]
internal static class Refit.EnumerableExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static EnumerablePeek TryGetSingle(IEnumerable`1<T> enumerable, T& value);
}
internal enum Refit.EnumerablePeek : Enum {
    public int value__;
    public static EnumerablePeek Empty;
    public static EnumerablePeek Single;
    public static EnumerablePeek Many;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Refit.FileInfoPart : MultipartItem {
    [CompilerGeneratedAttribute]
private FileInfo <Value>k__BackingField;
    public FileInfo Value { get; }
    public FileInfoPart(FileInfo value, string fileName, string contentType, string name);
    [CompilerGeneratedAttribute]
public FileInfo get_Value();
    protected virtual HttpContent CreateContent();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Refit.FormValueMultimap : object {
    private static Dictionary`2<Type, PropertyInfo[]> PropertyCache;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<KeyValuePair`2<string, string>> formEntries;
    private IHttpContentSerializer contentSerializer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> Keys { get; }
    public FormValueMultimap(object source, RefitSettings settings);
    private static FormValueMultimap();
    public IEnumerable`1<string> get_Keys();
    [NullableContextAttribute("2")]
private void Add(string key, string value);
    private string GetFieldNameForProperty(PropertyInfo propertyInfo);
    private static PropertyInfo[] GetProperties(Type type);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, string>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
public class Refit.GetAttribute : HttpMethodAttribute {
    public HttpMethod Method { get; }
    public GetAttribute(string path);
    public virtual HttpMethod get_Method();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
public class Refit.HeadAttribute : HttpMethodAttribute {
    public HttpMethod Method { get; }
    public HeadAttribute(string path);
    public virtual HttpMethod get_Method();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
public class Refit.HeaderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    public string Header { get; }
    public HeaderAttribute(string header);
    [CompilerGeneratedAttribute]
public string get_Header();
}
[AttributeUsageAttribute("2048")]
public class Refit.HeaderCollectionAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1088")]
public class Refit.HeadersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Headers>k__BackingField;
    public String[] Headers { get; }
    public HeadersAttribute(String[] headers);
    [CompilerGeneratedAttribute]
public String[] get_Headers();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Refit.HttpMethodAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public HttpMethod Method { get; }
    public string Path { get; protected set; }
    protected HttpMethodAttribute(string path);
    public abstract virtual HttpMethod get_Method();
    [CompilerGeneratedAttribute]
public virtual string get_Path();
    [CompilerGeneratedAttribute]
protected virtual void set_Path(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Refit.HttpRequestMessageOptions : object {
    [CompilerGeneratedAttribute]
private static string <InterfaceType>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <RestMethodInfo>k__BackingField;
    public static string InterfaceType { get; }
    public static string RestMethodInfo { get; }
    private static HttpRequestMessageOptions();
    [CompilerGeneratedAttribute]
public static string get_InterfaceType();
    [CompilerGeneratedAttribute]
public static string get_RestMethodInfo();
}
[NullableContextAttribute("2")]
public interface Refit.IApiResponse {
    [NullableAttribute("1")]
public HttpResponseHeaders Headers { get; }
    public HttpContentHeaders ContentHeaders { get; }
    [MemberNotNullWhenAttribute("True", "ContentHeaders")]
[MemberNotNullWhenAttribute("False", "Error")]
public bool IsSuccessStatusCode { get; }
    public HttpStatusCode StatusCode { get; }
    public string ReasonPhrase { get; }
    public HttpRequestMessage RequestMessage { get; }
    [NullableAttribute("1")]
public Version Version { get; }
    public ApiException Error { get; }
    [NullableContextAttribute("1")]
public abstract virtual HttpResponseHeaders get_Headers();
    public abstract virtual HttpContentHeaders get_ContentHeaders();
    [MemberNotNullWhenAttribute("True", "ContentHeaders")]
[MemberNotNullWhenAttribute("False", "Error")]
public abstract virtual bool get_IsSuccessStatusCode();
    public abstract virtual HttpStatusCode get_StatusCode();
    public abstract virtual string get_ReasonPhrase();
    public abstract virtual HttpRequestMessage get_RequestMessage();
    [NullableContextAttribute("1")]
public abstract virtual Version get_Version();
    public abstract virtual ApiException get_Error();
}
[NullableContextAttribute("2")]
public interface Refit.IApiResponse`1 {
    public T Content { get; }
    public abstract virtual T get_Content();
}
[NullableContextAttribute("2")]
public interface Refit.IFormUrlEncodedParameterFormatter {
    public abstract virtual string Format(object value, string formatString);
}
[NullableContextAttribute("1")]
public interface Refit.IHttpContentSerializer {
    public abstract virtual HttpContent ToHttpContent(T item);
    public abstract virtual Task`1<T> FromHttpContentAsync(HttpContent content, CancellationToken cancellationToken);
    public abstract virtual string GetFieldNameForProperty(PropertyInfo propertyInfo);
}
[NullableContextAttribute("1")]
public interface Refit.IRequestBuilder {
    public abstract virtual Func`3<HttpClient, Object[], object> BuildRestResultFuncForMethod(string methodName, Type[] parameterTypes, Type[] genericArgumentTypes);
}
public interface Refit.IRequestBuilder`1 {
}
[NullableContextAttribute("1")]
internal interface Refit.IRequestBuilderFactory {
    [NullableContextAttribute("2")]
public abstract virtual IRequestBuilder`1<T> Create(RefitSettings settings);
    public abstract virtual IRequestBuilder Create(Type refitInterfaceType, RefitSettings settings);
}
[NullableContextAttribute("1")]
public interface Refit.IUrlParameterFormatter {
    public abstract virtual string Format(object value, ICustomAttributeProvider attributeProvider, Type type);
}
[NullableContextAttribute("1")]
public interface Refit.IUrlParameterKeyFormatter {
    public abstract virtual string Format(string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("Use NewtonsoftJsonContentSerializer in the Refit.Newtonsoft.Json package instead", "True")]
public class Refit.JsonContentSerializer : object {
    public sealed virtual HttpContent ToHttpContent(T item);
    public sealed virtual Task`1<T> FromHttpContentAsync(HttpContent content, CancellationToken cancellationToken);
    public sealed virtual string GetFieldNameForProperty(PropertyInfo propertyInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Refit.MethodTableKey : ValueType {
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <GenericArguments>k__BackingField;
    private string MethodName { get; }
    private Type[] Parameters { get; }
    private Type[] GenericArguments { get; }
    public MethodTableKey(string methodName, Type[] parameters, Type[] genericArguments);
    [CompilerGeneratedAttribute]
private string get_MethodName();
    [CompilerGeneratedAttribute]
private Type[] get_Parameters();
    [CompilerGeneratedAttribute]
private Type[] get_GenericArguments();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(MethodTableKey other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
public class Refit.MultipartAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <BoundaryText>k__BackingField;
    public string BoundaryText { get; private set; }
    public MultipartAttribute(string boundaryText);
    [CompilerGeneratedAttribute]
public string get_BoundaryText();
    [CompilerGeneratedAttribute]
private void set_BoundaryText(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Refit.MultipartItem : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    public string Name { get; }
    public string ContentType { get; }
    [NullableAttribute("1")]
public string FileName { get; }
    [NullableContextAttribute("1")]
protected MultipartItem(string fileName, string contentType);
    public MultipartItem(string fileName, string contentType, string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_FileName();
    [NullableContextAttribute("1")]
public HttpContent ToContent();
    [NullableContextAttribute("1")]
protected abstract virtual HttpContent CreateContent();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Refit.ObjectToInferredTypesConverter : JsonConverter`1<object> {
    public virtual object Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, object objectToWrite, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
public class Refit.OptionsAttribute : HttpMethodAttribute {
    public HttpMethod Method { get; }
    public OptionsAttribute(string path);
    public virtual HttpMethod get_Method();
}
public enum Refit.ParameterType : Enum {
    public int value__;
    public static ParameterType Normal;
    public static ParameterType RoundTripping;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
public class Refit.PatchAttribute : HttpMethodAttribute {
    public HttpMethod Method { get; }
    public PatchAttribute(string path);
    public virtual HttpMethod get_Method();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
public class Refit.PostAttribute : HttpMethodAttribute {
    public HttpMethod Method { get; }
    public PostAttribute(string path);
    public virtual HttpMethod get_Method();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Refit.ProblemDetails : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, String[]> <Errors>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Extensions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Detail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Instance>k__BackingField;
    [NullableAttribute("1")]
public Dictionary`2<string, String[]> Errors { get; public set; }
    [NullableAttribute("1")]
[JsonExtensionDataAttribute]
public IDictionary`2<string, object> Extensions { get; public set; }
    public string Type { get; public set; }
    public string Title { get; public set; }
    public int Status { get; public set; }
    public string Detail { get; public set; }
    public string Instance { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Dictionary`2<string, String[]> get_Errors();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Errors(Dictionary`2<string, String[]> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Extensions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Extensions(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public int get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(int value);
    [CompilerGeneratedAttribute]
public string get_Detail();
    [CompilerGeneratedAttribute]
public void set_Detail(string value);
    [CompilerGeneratedAttribute]
public string get_Instance();
    [CompilerGeneratedAttribute]
public void set_Instance(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
public class Refit.PropertyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    public string Key { get; }
    [NullableContextAttribute("1")]
public PropertyAttribute(string key);
    [CompilerGeneratedAttribute]
public string get_Key();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
public class Refit.PutAttribute : HttpMethodAttribute {
    public HttpMethod Method { get; }
    public PutAttribute(string path);
    public virtual HttpMethod get_Method();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2176")]
public class Refit.QueryAttribute : Attribute {
    private Nullable`1<CollectionFormat> collectionFormat;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Delimiter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [NullableAttribute("1")]
public string Delimiter { get; protected set; }
    public string Prefix { get; protected set; }
    public string Format { get; public set; }
    public CollectionFormat CollectionFormat { get; public set; }
    public bool IsCollectionFormatSpecified { get; }
    [NullableContextAttribute("1")]
public QueryAttribute(string delimiter);
    [NullableContextAttribute("1")]
public QueryAttribute(string delimiter, string prefix);
    [NullableContextAttribute("1")]
public QueryAttribute(string delimiter, string prefix, string format);
    public QueryAttribute(CollectionFormat collectionFormat);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Delimiter();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected void set_Delimiter(string value);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
protected void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public string get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(string value);
    public CollectionFormat get_CollectionFormat();
    public void set_CollectionFormat(CollectionFormat value);
    public bool get_IsCollectionFormatSpecified();
}
[AttributeUsageAttribute("64")]
public class Refit.QueryUriFormatAttribute : Attribute {
    [CompilerGeneratedAttribute]
private UriFormat <UriFormat>k__BackingField;
    public UriFormat UriFormat { get; }
    public QueryUriFormatAttribute(UriFormat uriFormat);
    [CompilerGeneratedAttribute]
public UriFormat get_UriFormat();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Refit.RefitSettings : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`3<HttpRequestMessage, CancellationToken, Task`1<string>> <AuthorizationHeaderValueGetter>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`1<HttpMessageHandler> <HttpMessageHandlerFactory>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<HttpResponseMessage, Task`1<Exception>> <ExceptionFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private IHttpContentSerializer <ContentSerializer>k__BackingField;
    [CompilerGeneratedAttribute]
private IUrlParameterKeyFormatter <UrlParameterKeyFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private IUrlParameterFormatter <UrlParameterFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private IFormUrlEncodedParameterFormatter <FormUrlEncodedParameterFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private CollectionFormat <CollectionFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Buffered>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <HttpRequestMessageOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpVersionPolicy <VersionPolicy>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`3<HttpRequestMessage, CancellationToken, Task`1<string>> AuthorizationHeaderValueGetter { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`1<HttpMessageHandler> HttpMessageHandlerFactory { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<HttpResponseMessage, Task`1<Exception>> ExceptionFactory { get; public set; }
    public IHttpContentSerializer ContentSerializer { get; public set; }
    public IUrlParameterKeyFormatter UrlParameterKeyFormatter { get; public set; }
    public IUrlParameterFormatter UrlParameterFormatter { get; public set; }
    public IFormUrlEncodedParameterFormatter FormUrlEncodedParameterFormatter { get; public set; }
    public CollectionFormat CollectionFormat { get; public set; }
    public bool Buffered { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, object> HttpRequestMessageOptions { get; public set; }
    public Version Version { get; public set; }
    public HttpVersionPolicy VersionPolicy { get; public set; }
    [NullableContextAttribute("2")]
public RefitSettings(IHttpContentSerializer contentSerializer, IUrlParameterFormatter urlParameterFormatter, IFormUrlEncodedParameterFormatter formUrlEncodedParameterFormatter);
    [NullableContextAttribute("2")]
public RefitSettings(IHttpContentSerializer contentSerializer, IUrlParameterFormatter urlParameterFormatter, IFormUrlEncodedParameterFormatter formUrlEncodedParameterFormatter, IUrlParameterKeyFormatter urlParameterKeyFormatter);
    [CompilerGeneratedAttribute]
public Func`3<HttpRequestMessage, CancellationToken, Task`1<string>> get_AuthorizationHeaderValueGetter();
    [CompilerGeneratedAttribute]
public void set_AuthorizationHeaderValueGetter(Func`3<HttpRequestMessage, CancellationToken, Task`1<string>> value);
    [CompilerGeneratedAttribute]
public Func`1<HttpMessageHandler> get_HttpMessageHandlerFactory();
    [CompilerGeneratedAttribute]
public void set_HttpMessageHandlerFactory(Func`1<HttpMessageHandler> value);
    [CompilerGeneratedAttribute]
public Func`2<HttpResponseMessage, Task`1<Exception>> get_ExceptionFactory();
    [CompilerGeneratedAttribute]
public void set_ExceptionFactory(Func`2<HttpResponseMessage, Task`1<Exception>> value);
    [CompilerGeneratedAttribute]
public IHttpContentSerializer get_ContentSerializer();
    [CompilerGeneratedAttribute]
public void set_ContentSerializer(IHttpContentSerializer value);
    [CompilerGeneratedAttribute]
public IUrlParameterKeyFormatter get_UrlParameterKeyFormatter();
    [CompilerGeneratedAttribute]
public void set_UrlParameterKeyFormatter(IUrlParameterKeyFormatter value);
    [CompilerGeneratedAttribute]
public IUrlParameterFormatter get_UrlParameterFormatter();
    [CompilerGeneratedAttribute]
public void set_UrlParameterFormatter(IUrlParameterFormatter value);
    [CompilerGeneratedAttribute]
public IFormUrlEncodedParameterFormatter get_FormUrlEncodedParameterFormatter();
    [CompilerGeneratedAttribute]
public void set_FormUrlEncodedParameterFormatter(IFormUrlEncodedParameterFormatter value);
    [CompilerGeneratedAttribute]
public CollectionFormat get_CollectionFormat();
    [CompilerGeneratedAttribute]
public void set_CollectionFormat(CollectionFormat value);
    [CompilerGeneratedAttribute]
public bool get_Buffered();
    [CompilerGeneratedAttribute]
public void set_Buffered(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_HttpRequestMessageOptions();
    [CompilerGeneratedAttribute]
public void set_HttpRequestMessageOptions(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public Version get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Version value);
    [CompilerGeneratedAttribute]
public HttpVersionPolicy get_VersionPolicy();
    [CompilerGeneratedAttribute]
public void set_VersionPolicy(HttpVersionPolicy value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Refit.RequestBuilder : object {
    private static RequestBuilderFactory PlatformRequestBuilderFactory;
    private static RequestBuilder();
    [NullableContextAttribute("2")]
public static IRequestBuilder`1<T> ForType(RefitSettings settings);
    public static IRequestBuilder`1<T> ForType();
    public static IRequestBuilder ForType(Type refitInterfaceType, RefitSettings settings);
    public static IRequestBuilder ForType(Type refitInterfaceType);
}
internal class Refit.RequestBuilderFactory : object {
    [NullableContextAttribute("2")]
public sealed virtual IRequestBuilder`1<T> Create(RefitSettings settings);
    [NullableContextAttribute("1")]
public sealed virtual IRequestBuilder Create(Type refitInterfaceType, RefitSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Refit.RequestBuilderImplementation : object {
    private static QueryAttribute DefaultQueryAttribute;
    private static Uri BaseUri;
    private Dictionary`2<string, List`1<RestMethodInfoInternal>> interfaceHttpMethods;
    private ConcurrentDictionary`2<CloseGenericMethodKey, RestMethodInfoInternal> interfaceGenericHttpMethods;
    private IHttpContentSerializer serializer;
    private RefitSettings settings;
    [CompilerGeneratedAttribute]
private Type <TargetType>k__BackingField;
    public Type TargetType { get; }
    public RequestBuilderImplementation(Type refitInterfaceType, RefitSettings refitSettings);
    private static RequestBuilderImplementation();
    [CompilerGeneratedAttribute]
public Type get_TargetType();
    private void AddInterfaceHttpMethods(Type interfaceType, Dictionary`2<string, List`1<RestMethodInfoInternal>> methods);
    private RestMethodInfoInternal FindMatchingRestMethodInfo(string key, Type[] parameterTypes, Type[] genericArgumentTypes);
    private RestMethodInfoInternal CloseGenericMethodIfNeeded(RestMethodInfoInternal restMethodInfo, Type[] genericArgumentTypes);
    public sealed virtual Func`3<HttpClient, Object[], object> BuildRestResultFuncForMethod(string methodName, Type[] parameterTypes, Type[] genericArgumentTypes);
    private void AddMultipartItem(MultipartFormDataContent multiPartContent, string fileName, string parameterName, object itemValue);
    [NullableContextAttribute("2")]
private Func`4<HttpClient, CancellationToken, Object[], Task`1<T>> BuildCancellableTaskFuncForMethod(RestMethodInfoInternal restMethod);
    [AsyncStateMachineAttribute("Refit.RequestBuilderImplementation/<DeserializeContentAsync>d__16`1")]
private Task`1<T> DeserializeContentAsync(HttpResponseMessage resp, HttpContent content, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private List`1<KeyValuePair`2<string, object>> BuildQueryMap(object object, string delimiter, RestMethodParameterInfo parameterInfo);
    private List`1<KeyValuePair`2<string, object>> BuildQueryMap(IDictionary dictionary, string delimiter);
    private Func`2<Object[], HttpRequestMessage> BuildRequestFactoryForMethod(RestMethodInfoInternal restMethod, string basePath, bool paramsContainsCancellationToken);
    private string AddObjectParametersToUrl(RestMethodParameterInfo parameterInfo, object param, string urlTarget);
    private string AddValueParameterToUrl(RestMethodInfoInternal restMethod, RestMethodParameterInfo parameterMapValue, object param, int i, string urlTarget);
    private void AddBodyToRequest(RestMethodInfoInternal restMethod, object param, HttpRequestMessage ret);
    private void AddQueryParameters(RestMethodInfoInternal restMethod, QueryAttribute queryAttribute, object param, List`1<KeyValuePair`2<string, string>> queryParamsToAdd, int i, RestMethodParameterInfo parameterInfo);
    private void AddMultiPart(RestMethodInfoInternal restMethod, int i, object param, MultipartFormDataContent multiPartContent);
    private static void AddHeadersToRequest(Dictionary`2<string, string> headersToAdd, HttpRequestMessage ret);
    private void AddPropertiesToRequest(RestMethodInfoInternal restMethod, HttpRequestMessage ret, Object[] paramList);
    private void AddVersionToRequest(HttpRequestMessage ret);
    [IteratorStateMachineAttribute("Refit.RequestBuilderImplementation/<ParseQueryParameter>d__28")]
private IEnumerable`1<KeyValuePair`2<string, string>> ParseQueryParameter(object param, ParameterInfo parameterInfo, string queryPath, QueryAttribute queryAttribute);
    [IteratorStateMachineAttribute("Refit.RequestBuilderImplementation/<ParseEnumerableQueryParameterValue>d__29")]
private IEnumerable`1<string> ParseEnumerableQueryParameterValue(IEnumerable paramValues, ICustomAttributeProvider customAttributeProvider, Type type, QueryAttribute queryAttribute);
    private static void ParseExistingQueryString(UriBuilder uri, List`1<KeyValuePair`2<string, string>> queryParamsToAdd);
    private static string CreateQueryString(List`1<KeyValuePair`2<string, string>> queryParamsToAdd);
    [NullableContextAttribute("2")]
private Func`3<HttpClient, Object[], IObservable`1<T>> BuildRxFuncForMethod(RestMethodInfoInternal restMethod);
    [NullableContextAttribute("2")]
private Func`3<HttpClient, Object[], Task`1<T>> BuildTaskFuncForMethod(RestMethodInfoInternal restMethod);
    private Func`3<HttpClient, Object[], Task> BuildVoidTaskFuncForMethod(RestMethodInfoInternal restMethod);
    private static bool IsBodyBuffered(RestMethodInfoInternal restMethod, HttpRequestMessage request);
    [NullableContextAttribute("2")]
private static bool DoNotConvertToQueryMap(object value);
    private static void SetHeader(HttpRequestMessage request, string name, string value);
    private static bool IsBodyless(HttpMethod method);
    [CompilerGeneratedAttribute]
internal static bool <DoNotConvertToQueryMap>g__ShouldReturn|36_1(Type type);
}
internal class Refit.RequestBuilderImplementation`1 : RequestBuilderImplementation {
    [NullableContextAttribute("2")]
public RequestBuilderImplementation`1(RefitSettings refitSettings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Refit.RestMethodInfo : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <HostingType>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodInfo <MethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelativePath>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ReturnType>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Name { get; public set; }
    public Type HostingType { get; public set; }
    public MethodInfo MethodInfo { get; public set; }
    public string RelativePath { get; public set; }
    public Type ReturnType { get; public set; }
    public RestMethodInfo(string Name, Type HostingType, MethodInfo MethodInfo, string RelativePath, Type ReturnType);
    [CompilerGeneratedAttribute]
protected RestMethodInfo(RestMethodInfo original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public Type get_HostingType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HostingType(Type value);
    [CompilerGeneratedAttribute]
public MethodInfo get_MethodInfo();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MethodInfo(MethodInfo value);
    [CompilerGeneratedAttribute]
public string get_RelativePath();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RelativePath(string value);
    [CompilerGeneratedAttribute]
public Type get_ReturnType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ReturnType(Type value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RestMethodInfo left, RestMethodInfo right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RestMethodInfo left, RestMethodInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(RestMethodInfo other);
    [CompilerGeneratedAttribute]
public virtual RestMethodInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, Type& HostingType, MethodInfo& MethodInfo, String& RelativePath, Type& ReturnType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{MethodInfo}")]
internal class Refit.RestMethodInfoInternal : object {
    [CompilerGeneratedAttribute]
private int <HeaderCollectionParameterIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodInfo <MethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMethod <HttpMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelativePath>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMultipart>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MultipartBoundary>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ParameterInfo <CancellationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private UriFormat <QueryUriFormat>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<int, string> <HeaderParameterMap>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<int, string> <PropertyParameterMap>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Tuple`3<BodySerializationMethod, bool, int> <BodyParameterInfo>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Tuple`2<string, int> <AuthorizeParameterInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<int, string> <QueryParameterMap>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<int, Tuple`2<string, string>> <AttachmentNameMap>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterInfo[] <ParameterInfoArray>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<int, RestMethodParameterInfo> <ParameterMap>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ReturnType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ReturnResultType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DeserializedResultType>k__BackingField;
    [CompilerGeneratedAttribute]
private RefitSettings <RefitSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsApiResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldDisposeResponse>k__BackingField;
    private static Regex ParameterRegex;
    private static HttpMethod PatchMethod;
    private int HeaderCollectionParameterIndex { get; private set; }
    public string Name { get; public set; }
    public Type Type { get; public set; }
    public MethodInfo MethodInfo { get; public set; }
    public HttpMethod HttpMethod { get; public set; }
    public string RelativePath { get; public set; }
    public bool IsMultipart { get; private set; }
    public string MultipartBoundary { get; private set; }
    [NullableAttribute("2")]
public ParameterInfo CancellationToken { get; public set; }
    public UriFormat QueryUriFormat { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, string> Headers { get; public set; }
    public Dictionary`2<int, string> HeaderParameterMap { get; public set; }
    public Dictionary`2<int, string> PropertyParameterMap { get; public set; }
    [NullableAttribute("2")]
public Tuple`3<BodySerializationMethod, bool, int> BodyParameterInfo { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Tuple`2<string, int> AuthorizeParameterInfo { get; public set; }
    public Dictionary`2<int, string> QueryParameterMap { get; public set; }
    public Dictionary`2<int, Tuple`2<string, string>> AttachmentNameMap { get; public set; }
    public ParameterInfo[] ParameterInfoArray { get; public set; }
    public Dictionary`2<int, RestMethodParameterInfo> ParameterMap { get; public set; }
    public Type ReturnType { get; public set; }
    public Type ReturnResultType { get; public set; }
    public Type DeserializedResultType { get; public set; }
    public RefitSettings RefitSettings { get; public set; }
    public bool IsApiResponse { get; }
    public bool ShouldDisposeResponse { get; private set; }
    public bool HasHeaderCollection { get; }
    public RestMethodInfoInternal(Type targetInterface, MethodInfo methodInfo, RefitSettings refitSettings);
    private static RestMethodInfoInternal();
    [CompilerGeneratedAttribute]
private int get_HeaderCollectionParameterIndex();
    [CompilerGeneratedAttribute]
private void set_HeaderCollectionParameterIndex(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Type value);
    [CompilerGeneratedAttribute]
public MethodInfo get_MethodInfo();
    [CompilerGeneratedAttribute]
public void set_MethodInfo(MethodInfo value);
    [CompilerGeneratedAttribute]
public HttpMethod get_HttpMethod();
    [CompilerGeneratedAttribute]
public void set_HttpMethod(HttpMethod value);
    [CompilerGeneratedAttribute]
public string get_RelativePath();
    [CompilerGeneratedAttribute]
public void set_RelativePath(string value);
    [CompilerGeneratedAttribute]
public bool get_IsMultipart();
    [CompilerGeneratedAttribute]
private void set_IsMultipart(bool value);
    [CompilerGeneratedAttribute]
public string get_MultipartBoundary();
    [CompilerGeneratedAttribute]
private void set_MultipartBoundary(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ParameterInfo get_CancellationToken();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_CancellationToken(ParameterInfo value);
    [CompilerGeneratedAttribute]
public UriFormat get_QueryUriFormat();
    [CompilerGeneratedAttribute]
public void set_QueryUriFormat(UriFormat value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<int, string> get_HeaderParameterMap();
    [CompilerGeneratedAttribute]
public void set_HeaderParameterMap(Dictionary`2<int, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<int, string> get_PropertyParameterMap();
    [CompilerGeneratedAttribute]
public void set_PropertyParameterMap(Dictionary`2<int, string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Tuple`3<BodySerializationMethod, bool, int> get_BodyParameterInfo();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_BodyParameterInfo(Tuple`3<BodySerializationMethod, bool, int> value);
    [CompilerGeneratedAttribute]
public Tuple`2<string, int> get_AuthorizeParameterInfo();
    [CompilerGeneratedAttribute]
public void set_AuthorizeParameterInfo(Tuple`2<string, int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<int, string> get_QueryParameterMap();
    [CompilerGeneratedAttribute]
public void set_QueryParameterMap(Dictionary`2<int, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<int, Tuple`2<string, string>> get_AttachmentNameMap();
    [CompilerGeneratedAttribute]
public void set_AttachmentNameMap(Dictionary`2<int, Tuple`2<string, string>> value);
    [CompilerGeneratedAttribute]
public ParameterInfo[] get_ParameterInfoArray();
    [CompilerGeneratedAttribute]
public void set_ParameterInfoArray(ParameterInfo[] value);
    [CompilerGeneratedAttribute]
public Dictionary`2<int, RestMethodParameterInfo> get_ParameterMap();
    [CompilerGeneratedAttribute]
public void set_ParameterMap(Dictionary`2<int, RestMethodParameterInfo> value);
    [CompilerGeneratedAttribute]
public Type get_ReturnType();
    [CompilerGeneratedAttribute]
public void set_ReturnType(Type value);
    [CompilerGeneratedAttribute]
public Type get_ReturnResultType();
    [CompilerGeneratedAttribute]
public void set_ReturnResultType(Type value);
    [CompilerGeneratedAttribute]
public Type get_DeserializedResultType();
    [CompilerGeneratedAttribute]
public void set_DeserializedResultType(Type value);
    [CompilerGeneratedAttribute]
public RefitSettings get_RefitSettings();
    [CompilerGeneratedAttribute]
public void set_RefitSettings(RefitSettings value);
    [CompilerGeneratedAttribute]
public bool get_IsApiResponse();
    [CompilerGeneratedAttribute]
public bool get_ShouldDisposeResponse();
    [CompilerGeneratedAttribute]
private void set_ShouldDisposeResponse(bool value);
    public bool get_HasHeaderCollection();
    public bool HeaderCollectionAt(int index);
    private static int GetHeaderCollectionParameterIndex(ParameterInfo[] parameterArray);
    public RestMethodInfo ToRestMethodInfo();
    private static Dictionary`2<int, string> BuildRequestPropertyMap(ParameterInfo[] parameterArray);
    private static IEnumerable`1<PropertyInfo> GetParameterProperties(ParameterInfo parameter);
    private static void VerifyUrlPathIsSane(string relativePath);
    private static Dictionary`2<int, RestMethodParameterInfo> BuildParameterMap(string relativePath, ParameterInfo[] parameterInfo);
    private static string GetUrlNameForParameter(ParameterInfo paramInfo);
    private static string GetUrlNameForProperty(PropertyInfo propInfo);
    private static string GetAttachmentNameForParameter(ParameterInfo paramInfo);
    private Tuple`3<BodySerializationMethod, bool, int> FindBodyParameter(ParameterInfo[] parameterArray, bool isMultipart, HttpMethod method);
    private static Tuple`2<string, int> FindAuthorizationParameter(ParameterInfo[] parameterArray);
    private static Dictionary`2<string, string> ParseHeaders(MethodInfo methodInfo);
    private static Dictionary`2<int, string> BuildHeaderParameterMap(ParameterInfo[] parameterArray);
    private void DetermineReturnTypeInfo(MethodInfo methodInfo);
    private void DetermineIfResponseMustBeDisposed();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Refit.RestMethodParameterInfo : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterInfo <ParameterInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsObjectPropertyParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RestMethodParameterProperty> <ParameterProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterType <Type>k__BackingField;
    [NullableAttribute("2")]
public string Name { get; public set; }
    public ParameterInfo ParameterInfo { get; public set; }
    public bool IsObjectPropertyParameter { get; public set; }
    public List`1<RestMethodParameterProperty> ParameterProperties { get; public set; }
    public ParameterType Type { get; public set; }
    public RestMethodParameterInfo(string name, ParameterInfo parameterInfo);
    public RestMethodParameterInfo(bool isObjectPropertyParameter, ParameterInfo parameterInfo);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ParameterInfo get_ParameterInfo();
    [CompilerGeneratedAttribute]
public void set_ParameterInfo(ParameterInfo value);
    [CompilerGeneratedAttribute]
public bool get_IsObjectPropertyParameter();
    [CompilerGeneratedAttribute]
public void set_IsObjectPropertyParameter(bool value);
    [CompilerGeneratedAttribute]
public List`1<RestMethodParameterProperty> get_ParameterProperties();
    [CompilerGeneratedAttribute]
public void set_ParameterProperties(List`1<RestMethodParameterProperty> value);
    [CompilerGeneratedAttribute]
public ParameterType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(ParameterType value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Refit.RestMethodParameterProperty : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyInfo <PropertyInfo>k__BackingField;
    public string Name { get; public set; }
    public PropertyInfo PropertyInfo { get; public set; }
    public RestMethodParameterProperty(string name, PropertyInfo propertyInfo);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public PropertyInfo get_PropertyInfo();
    [CompilerGeneratedAttribute]
public void set_PropertyInfo(PropertyInfo value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Refit.RestService : object {
    private static ConcurrentDictionary`2<Type, Type> TypeMapping;
    private static RestService();
    public static T For(HttpClient client, IRequestBuilder`1<T> builder);
    public static T For(HttpClient client, RefitSettings settings);
    public static T For(HttpClient client);
    public static T For(string hostUrl, RefitSettings settings);
    public static T For(string hostUrl);
    public static object For(Type refitInterfaceType, HttpClient client, IRequestBuilder builder);
    public static object For(Type refitInterfaceType, HttpClient client, RefitSettings settings);
    public static object For(Type refitInterfaceType, HttpClient client);
    public static object For(Type refitInterfaceType, string hostUrl, RefitSettings settings);
    public static object For(Type refitInterfaceType, string hostUrl);
    public static HttpClient CreateHttpClient(string hostUrl, RefitSettings settings);
    private static Type GetGeneratedType(Type refitInterfaceType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Refit.StreamPart : MultipartItem {
    [CompilerGeneratedAttribute]
private Stream <Value>k__BackingField;
    public Stream Value { get; }
    public StreamPart(Stream value, string fileName, string contentType, string name);
    [CompilerGeneratedAttribute]
public Stream get_Value();
    protected virtual HttpContent CreateContent();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Refit.SystemTextJsonContentSerializer : object {
    private JsonSerializerOptions jsonSerializerOptions;
    public SystemTextJsonContentSerializer(JsonSerializerOptions jsonSerializerOptions);
    public sealed virtual HttpContent ToHttpContent(T item);
    [AsyncStateMachineAttribute("Refit.SystemTextJsonContentSerializer/<FromHttpContentAsync>d__4`1")]
public sealed virtual Task`1<T> FromHttpContentAsync(HttpContent content, CancellationToken cancellationToken);
    public sealed virtual string GetFieldNameForProperty(PropertyInfo propertyInfo);
    public static JsonSerializerOptions GetDefaultJsonSerializerOptions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Refit.UniqueName : object {
    public static string ForType();
    public static string ForType(Type refitInterfaceType);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Refit.ValidationApiException : ApiException {
    [NullableAttribute("1")]
private static JsonSerializerOptions SerializerOptions;
    [CompilerGeneratedAttribute]
private ProblemDetails <Content>k__BackingField;
    public ProblemDetails Content { get; private set; }
    private static ValidationApiException();
    [NullableContextAttribute("1")]
private ValidationApiException(ApiException apiException);
    [NullableContextAttribute("1")]
public static ValidationApiException Create(ApiException exception);
    [CompilerGeneratedAttribute]
public ProblemDetails get_Content();
    [CompilerGeneratedAttribute]
private void set_Content(ProblemDetails value);
}
[IsByRefLikeAttribute]
[ObsoleteAttribute("Types with embedded references are not supported in this version of your compiler.", "True")]
[DefaultMemberAttribute("Item")]
internal class Refit.ValueStringBuilder : ValueType {
    [NullableAttribute("2")]
private Char[] _arrayToReturnToPool;
    private Span`1<char> _chars;
    private int _pos;
    public int Length { get; public set; }
    public int Capacity { get; }
    public Char& Item { get; }
    public Span`1<char> RawChars { get; }
    public ValueStringBuilder(Span`1<char> initialBuffer);
    public ValueStringBuilder(int initialCapacity);
    public int get_Length();
    public void set_Length(int value);
    public int get_Capacity();
    public void EnsureCapacity(int capacity);
    public Char& GetPinnableReference();
    public Char& GetPinnableReference(bool terminate);
    public Char& get_Item(int index);
    [NullableContextAttribute("1")]
public virtual string ToString();
    public Span`1<char> get_RawChars();
    public ReadOnlySpan`1<char> AsSpan(bool terminate);
    public ReadOnlySpan`1<char> AsSpan();
    public ReadOnlySpan`1<char> AsSpan(int start);
    public ReadOnlySpan`1<char> AsSpan(int start, int length);
    public bool TryCopyTo(Span`1<char> destination, Int32& charsWritten);
    public void Insert(int index, char value, int count);
    [NullableContextAttribute("2")]
public void Insert(int index, string s);
    public void Append(char c);
    [NullableContextAttribute("2")]
public void Append(string s);
    [NullableContextAttribute("1")]
private void AppendSlow(string s);
    public void Append(char c, int count);
    public void Append(ReadOnlySpan`1<char> value);
    public Span`1<char> AppendSpan(int length);
    private void GrowAndAppend(char c);
    private void Grow(int additionalCapacityBeyondPos);
    public void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Collections.Specialized.NameValueCollection : Dictionary`2<string, string> {
    public String[] AllKeys { get; }
    public String[] get_AllKeys();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal abstract class System.Net.Http.DelegatingStream : Stream {
    [CompilerGeneratedAttribute]
private Stream <InnerStream>k__BackingField;
    protected Stream InnerStream { get; private set; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public int ReadTimeout { get; public set; }
    public bool CanTimeout { get; }
    public int WriteTimeout { get; public set; }
    protected DelegatingStream(Stream innerStream);
    [CompilerGeneratedAttribute]
protected Stream get_InnerStream();
    [CompilerGeneratedAttribute]
private void set_InnerStream(Stream value);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual int get_ReadTimeout();
    public virtual void set_ReadTimeout(int value);
    public virtual bool get_CanTimeout();
    public virtual int get_WriteTimeout();
    public virtual void set_WriteTimeout(int value);
    protected virtual void Dispose(bool disposing);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual int ReadByte();
    public virtual void Flush();
    public virtual Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken);
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual void WriteByte(byte value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Net.Http.PushStreamContent : HttpContent {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`4<Stream, HttpContent, TransportContext, Task> onStreamAvailable;
    public PushStreamContent(Action`3<Stream, HttpContent, TransportContext> onStreamAvailable);
    public PushStreamContent(Func`4<Stream, HttpContent, TransportContext, Task> onStreamAvailable);
    public PushStreamContent(Action`3<Stream, HttpContent, TransportContext> onStreamAvailable, string mediaType);
    public PushStreamContent(Func`4<Stream, HttpContent, TransportContext, Task> onStreamAvailable, string mediaType);
    [NullableContextAttribute("2")]
public PushStreamContent(Action`3<Stream, HttpContent, TransportContext> onStreamAvailable, MediaTypeHeaderValue mediaType);
    [NullableContextAttribute("2")]
public PushStreamContent(Func`4<Stream, HttpContent, TransportContext, Task> onStreamAvailable, MediaTypeHeaderValue mediaType);
    private static Func`4<Stream, HttpContent, TransportContext, Task> Taskify(Action`3<Stream, HttpContent, TransportContext> onStreamAvailable);
    [AsyncStateMachineAttribute("System.Net.Http.PushStreamContent/<SerializeToStreamAsync>d__9")]
protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    protected virtual bool TryComputeLength(Int64& length);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.143.54359")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
    private static ThisAssembly();
}
