internal static class FxResources.Microsoft.Extensions.Configuration.FileExtensions.SR : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.FileConfigurationExtensions : object {
    private static string FileProviderKey;
    private static string FileLoadExceptionHandlerKey;
    [ExtensionAttribute]
public static IConfigurationBuilder SetFileProvider(IConfigurationBuilder builder, IFileProvider fileProvider);
    [ExtensionAttribute]
internal static IFileProvider GetUserDefinedFileProvider(IConfigurationBuilder builder);
    [ExtensionAttribute]
public static IFileProvider GetFileProvider(IConfigurationBuilder builder);
    [ExtensionAttribute]
public static IConfigurationBuilder SetBasePath(IConfigurationBuilder builder, string basePath);
    [ExtensionAttribute]
public static IConfigurationBuilder SetFileLoadExceptionHandler(IConfigurationBuilder builder, Action`1<FileLoadExceptionContext> handler);
    [ExtensionAttribute]
public static Action`1<FileLoadExceptionContext> GetFileLoadExceptionHandler(IConfigurationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.Extensions.Configuration.FileConfigurationProvider : ConfigurationProvider {
    private IDisposable _changeTokenRegistration;
    [CompilerGeneratedAttribute]
private FileConfigurationSource <Source>k__BackingField;
    public FileConfigurationSource Source { get; }
    public FileConfigurationProvider(FileConfigurationSource source);
    [CompilerGeneratedAttribute]
public FileConfigurationSource get_Source();
    public virtual string ToString();
    private void Load(bool reload);
    public virtual void Load();
    public abstract virtual void Load(Stream stream);
    private void HandleException(ExceptionDispatchInfo info);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    [CompilerGeneratedAttribute]
private IChangeToken <.ctor>b__1_0();
    [CompilerGeneratedAttribute]
private void <.ctor>b__1_1();
    [CompilerGeneratedAttribute]
internal static Stream <Load>g__OpenRead|6_0(IFileInfo fileInfo);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Microsoft.Extensions.Configuration.FileConfigurationSource : object {
    [CompilerGeneratedAttribute]
private IFileProvider <FileProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OwnsFileProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Optional>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReloadOnChange>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ReloadDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<FileLoadExceptionContext> <OnLoadException>k__BackingField;
    public IFileProvider FileProvider { get; public set; }
    internal bool OwnsFileProvider { get; private set; }
    public string Path { get; public set; }
    public bool Optional { get; public set; }
    public bool ReloadOnChange { get; public set; }
    public int ReloadDelay { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<FileLoadExceptionContext> OnLoadException { get; public set; }
    [CompilerGeneratedAttribute]
public IFileProvider get_FileProvider();
    [CompilerGeneratedAttribute]
public void set_FileProvider(IFileProvider value);
    [CompilerGeneratedAttribute]
internal bool get_OwnsFileProvider();
    [CompilerGeneratedAttribute]
private void set_OwnsFileProvider(bool value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public bool get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(bool value);
    [CompilerGeneratedAttribute]
public bool get_ReloadOnChange();
    [CompilerGeneratedAttribute]
public void set_ReloadOnChange(bool value);
    [CompilerGeneratedAttribute]
public int get_ReloadDelay();
    [CompilerGeneratedAttribute]
public void set_ReloadDelay(int value);
    [CompilerGeneratedAttribute]
public Action`1<FileLoadExceptionContext> get_OnLoadException();
    [CompilerGeneratedAttribute]
public void set_OnLoadException(Action`1<FileLoadExceptionContext> value);
    [NullableContextAttribute("1")]
public abstract virtual IConfigurationProvider Build(IConfigurationBuilder builder);
    [NullableContextAttribute("1")]
public void EnsureDefaults(IConfigurationBuilder builder);
    public void ResolveFileProvider();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.FileLoadExceptionContext : object {
    [CompilerGeneratedAttribute]
private FileConfigurationProvider <Provider>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Ignore>k__BackingField;
    public FileConfigurationProvider Provider { get; public set; }
    public Exception Exception { get; public set; }
    public bool Ignore { get; public set; }
    [CompilerGeneratedAttribute]
public FileConfigurationProvider get_Provider();
    [CompilerGeneratedAttribute]
public void set_Provider(FileConfigurationProvider value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
    [CompilerGeneratedAttribute]
public bool get_Ignore();
    [CompilerGeneratedAttribute]
public void set_Ignore(bool value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
internal class System.Runtime.InteropServices.LibraryImportAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <LibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntryPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private StringMarshalling <StringMarshalling>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <StringMarshallingCustomType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetLastError>k__BackingField;
    [NullableAttribute("1")]
public string LibraryName { get; }
    public string EntryPoint { get; public set; }
    public StringMarshalling StringMarshalling { get; public set; }
    public Type StringMarshallingCustomType { get; public set; }
    public bool SetLastError { get; public set; }
    [NullableContextAttribute("1")]
public LibraryImportAttribute(string libraryName);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_LibraryName();
    [CompilerGeneratedAttribute]
public string get_EntryPoint();
    [CompilerGeneratedAttribute]
public void set_EntryPoint(string value);
    [CompilerGeneratedAttribute]
public StringMarshalling get_StringMarshalling();
    [CompilerGeneratedAttribute]
public void set_StringMarshalling(StringMarshalling value);
    [CompilerGeneratedAttribute]
public Type get_StringMarshallingCustomType();
    [CompilerGeneratedAttribute]
public void set_StringMarshallingCustomType(Type value);
    [CompilerGeneratedAttribute]
public bool get_SetLastError();
    [CompilerGeneratedAttribute]
public void set_SetLastError(bool value);
}
internal enum System.Runtime.InteropServices.StringMarshalling : Enum {
    public int value__;
    public static StringMarshalling Custom;
    public static StringMarshalling Utf8;
    public static StringMarshalling Utf16;
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string Error_ExpectedPhysicalPath { get; }
    internal static string Error_FileNotFound { get; }
    internal static string Error_FailedToLoad { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, object p1);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, object p1, object p2);
    [NullableContextAttribute("2")]
internal static string Format(string resourceFormat, object p1, object p2, object p3);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, Object[] args);
    [NullableContextAttribute("1")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    [NullableContextAttribute("2")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    [NullableContextAttribute("2")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    [NullableContextAttribute("1")]
internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_Error_ExpectedPhysicalPath();
    internal static string get_Error_FileNotFound();
    internal static string get_Error_FailedToLoad();
}
internal static class System.ThrowHelper : object {
    [NullableContextAttribute("2")]
internal static void ThrowIfNull(object argument, string paramName);
    [DoesNotReturnAttribute]
private static void Throw(string paramName);
    [NullableContextAttribute("1")]
public static string IfNullOrWhitespace(string argument, string paramName);
}
