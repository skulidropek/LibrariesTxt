internal static class FxResources.Microsoft.Extensions.Configuration.Json.SR : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class Microsoft.Extensions.Configuration.Json.JsonConfigurationFileParser : object {
    private Dictionary`2<string, string> _data;
    private Stack`1<string> _paths;
    [NullableContextAttribute("1")]
public static IDictionary`2<string, string> Parse(Stream input);
    private Dictionary`2<string, string> ParseStream(Stream input);
    private void VisitObjectElement(JsonElement element);
    private void VisitArrayElement(JsonElement element);
    private void SetNullIfElementIsEmpty(bool isEmpty);
    private void VisitValue(JsonElement value);
    private void EnterContext(string context);
    private void ExitContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider : FileConfigurationProvider {
    public JsonConfigurationProvider(JsonConfigurationSource source);
    public virtual void Load(Stream stream);
}
public class Microsoft.Extensions.Configuration.Json.JsonConfigurationSource : FileConfigurationSource {
    [NullableContextAttribute("1")]
public virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider : StreamConfigurationProvider {
    public JsonStreamConfigurationProvider(JsonStreamConfigurationSource source);
    public virtual void Load(Stream stream);
}
public class Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource : StreamConfigurationSource {
    [NullableContextAttribute("1")]
public virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.JsonConfigurationExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, string path);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, string path, bool optional);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, string path, bool optional, bool reloadOnChange);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, IFileProvider provider, string path, bool optional, bool reloadOnChange);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, Action`1<JsonConfigurationSource> configureSource);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonStream(IConfigurationBuilder builder, Stream stream);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string Error_InvalidFilePath { get; }
    internal static string Error_InvalidTopLevelJSONElement { get; }
    internal static string Error_JSONParseError { get; }
    internal static string Error_KeyIsDuplicated { get; }
    internal static string Error_UnsupportedJSONToken { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, object p1);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, object p1, object p2);
    [NullableContextAttribute("2")]
internal static string Format(string resourceFormat, object p1, object p2, object p3);
    [NullableContextAttribute("1")]
internal static string Format(string resourceFormat, Object[] args);
    [NullableContextAttribute("1")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    [NullableContextAttribute("2")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    [NullableContextAttribute("2")]
internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    [NullableContextAttribute("1")]
internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_Error_InvalidFilePath();
    internal static string get_Error_InvalidTopLevelJSONElement();
    internal static string get_Error_JSONParseError();
    internal static string get_Error_KeyIsDuplicated();
    internal static string get_Error_UnsupportedJSONToken();
}
internal static class System.ThrowHelper : object {
    [NullableContextAttribute("2")]
internal static void ThrowIfNull(object argument, string paramName);
    [DoesNotReturnAttribute]
private static void Throw(string paramName);
    [NullableContextAttribute("1")]
public static string IfNullOrWhitespace(string argument, string paramName);
}
