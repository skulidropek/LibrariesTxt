[CompilerGeneratedAttribute]
[ExcludeFromCodeCoverageAttribute]
internal static class GitVersionInformation : object {
    public static string Major;
    public static string Minor;
    public static string Patch;
    public static string PreReleaseTag;
    public static string PreReleaseTagWithDash;
    public static string PreReleaseLabel;
    public static string PreReleaseLabelWithDash;
    public static string PreReleaseNumber;
    public static string WeightedPreReleaseNumber;
    public static string BuildMetaData;
    public static string BuildMetaDataPadded;
    public static string FullBuildMetaData;
    public static string MajorMinorPatch;
    public static string SemVer;
    public static string LegacySemVer;
    public static string LegacySemVerPadded;
    public static string AssemblySemVer;
    public static string AssemblySemFileVer;
    public static string FullSemVer;
    public static string InformationalVersion;
    public static string BranchName;
    public static string EscapedBranchName;
    public static string Sha;
    public static string ShortSha;
    public static string NuGetVersionV2;
    public static string NuGetVersion;
    public static string NuGetPreReleaseTagV2;
    public static string NuGetPreReleaseTag;
    public static string VersionSourceSha;
    public static string CommitsSinceVersionSource;
    public static string CommitsSinceVersionSourcePadded;
    public static string UncommittedChanges;
    public static string CommitDate;
    private static GitVersionInformation();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class ReportPortal.Client.Abstractions.Filtering.Filter : object {
    [CompilerGeneratedAttribute]
private FilterOperation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Field>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<object> <Values>k__BackingField;
    public FilterOperation Operation { get; public set; }
    public string Field { get; public set; }
    public List`1<object> Values { get; public set; }
    public Filter(FilterOperation operation, string field, object value, Object[] values);
    [CompilerGeneratedAttribute]
public FilterOperation get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(FilterOperation value);
    [CompilerGeneratedAttribute]
public string get_Field();
    [CompilerGeneratedAttribute]
public void set_Field(string value);
    [CompilerGeneratedAttribute]
public List`1<object> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(List`1<object> value);
}
public enum ReportPortal.Client.Abstractions.Filtering.FilterOperation : Enum {
    public int value__;
    [JsonPropertyNameAttribute("eq")]
public static FilterOperation Equals;
    [JsonPropertyNameAttribute("ne")]
public static FilterOperation NotEquals;
    [JsonPropertyNameAttribute("cnt")]
public static FilterOperation Contains;
    [JsonPropertyNameAttribute("!cnt")]
public static FilterOperation NotContains;
    [JsonPropertyNameAttribute("ex")]
public static FilterOperation Exists;
    [JsonPropertyNameAttribute("in")]
public static FilterOperation In;
    [JsonPropertyNameAttribute("!in")]
public static FilterOperation NotIn;
    [JsonPropertyNameAttribute("gt")]
public static FilterOperation GreaterThan;
    [JsonPropertyNameAttribute("gte")]
public static FilterOperation GreaterThanOrEquals;
    [JsonPropertyNameAttribute("lt")]
public static FilterOperation LowerThan;
    [JsonPropertyNameAttribute("lte")]
public static FilterOperation LowerThanOrEquals;
    [JsonPropertyNameAttribute("btw")]
public static FilterOperation Between;
    [JsonPropertyNameAttribute("size")]
public static FilterOperation Size;
    [JsonPropertyNameAttribute("has")]
public static FilterOperation Has;
    [JsonPropertyNameAttribute("!has")]
public static FilterOperation NotHas;
}
public class ReportPortal.Client.Abstractions.Filtering.FilterOption : object {
    [CompilerGeneratedAttribute]
private Paging <Paging>k__BackingField;
    [CompilerGeneratedAttribute]
private Sorting <Sorting>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Filter> <Filters>k__BackingField;
    public Paging Paging { get; public set; }
    public Sorting Sorting { get; public set; }
    public List`1<Filter> Filters { get; public set; }
    [CompilerGeneratedAttribute]
public Paging get_Paging();
    [CompilerGeneratedAttribute]
public void set_Paging(Paging value);
    [CompilerGeneratedAttribute]
public Sorting get_Sorting();
    [CompilerGeneratedAttribute]
public void set_Sorting(Sorting value);
    [CompilerGeneratedAttribute]
public List`1<Filter> get_Filters();
    [CompilerGeneratedAttribute]
public void set_Filters(List`1<Filter> value);
    public virtual string ToString();
}
public class ReportPortal.Client.Abstractions.Filtering.Paging : object {
    [CompilerGeneratedAttribute]
private int <Number>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Size>k__BackingField;
    public int Number { get; public set; }
    public int Size { get; public set; }
    public Paging(int number, int size);
    [CompilerGeneratedAttribute]
public int get_Number();
    [CompilerGeneratedAttribute]
public void set_Number(int value);
    [CompilerGeneratedAttribute]
public int get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(int value);
}
public enum ReportPortal.Client.Abstractions.Filtering.SortDirection : Enum {
    public int value__;
    [JsonPropertyNameAttribute("ASC")]
public static SortDirection Ascending;
    [JsonPropertyNameAttribute("DESC")]
public static SortDirection Descending;
}
public class ReportPortal.Client.Abstractions.Filtering.Sorting : object {
    [CompilerGeneratedAttribute]
private List`1<string> <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private SortDirection <Direction>k__BackingField;
    public List`1<string> Fields { get; public set; }
    public SortDirection Direction { get; public set; }
    public Sorting(List`1<string> byFields, SortDirection direction);
    [CompilerGeneratedAttribute]
public List`1<string> get_Fields();
    [CompilerGeneratedAttribute]
public void set_Fields(List`1<string> value);
    [CompilerGeneratedAttribute]
public SortDirection get_Direction();
    [CompilerGeneratedAttribute]
public void set_Direction(SortDirection value);
}
public interface ReportPortal.Client.Abstractions.IClientService {
    public ILaunchResource Launch { get; }
    public IAsyncLaunchResource AsyncLaunch { get; }
    public ITestItemResource TestItem { get; }
    public IAsyncTestItemResource AsyncTestItem { get; }
    public ILogItemResource LogItem { get; }
    public IAsyncLogItemResource AsyncLogItem { get; }
    public IUserResource User { get; }
    public IUserFilterResource UserFilter { get; }
    public IProjectResource Project { get; }
    public abstract virtual ILaunchResource get_Launch();
    public abstract virtual IAsyncLaunchResource get_AsyncLaunch();
    public abstract virtual ITestItemResource get_TestItem();
    public abstract virtual IAsyncTestItemResource get_AsyncTestItem();
    public abstract virtual ILogItemResource get_LogItem();
    public abstract virtual IAsyncLogItemResource get_AsyncLogItem();
    public abstract virtual IUserResource get_User();
    public abstract virtual IUserFilterResource get_UserFilter();
    public abstract virtual IProjectResource get_Project();
}
public class ReportPortal.Client.Abstractions.Models.AnalyzerItemsMode : object {
    public static string ToInvestigate;
    public static string AutoAnalyzed;
    public static string ManuallyAnalyzed;
}
public enum ReportPortal.Client.Abstractions.Models.AnalyzerMode : Enum {
    public int value__;
    [JsonPropertyNameAttribute("ALL")]
public static AnalyzerMode All;
    [JsonPropertyNameAttribute("CURRENT_LAUNCH")]
public static AnalyzerMode CurrentLaunch;
    [JsonPropertyNameAttribute("LAUNCH_NAME")]
public static AnalyzerMode LaunchName;
}
public class ReportPortal.Client.Abstractions.Models.ItemAttribute : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSystem>k__BackingField;
    public string Key { get; public set; }
    public string Value { get; public set; }
    [JsonPropertyNameAttribute("system")]
public bool IsSystem { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public bool get_IsSystem();
    [CompilerGeneratedAttribute]
public void set_IsSystem(bool value);
}
public enum ReportPortal.Client.Abstractions.Models.LaunchMode : Enum {
    public int value__;
    [JsonPropertyNameAttribute("DEFAULT")]
public static LaunchMode Default;
    [JsonPropertyNameAttribute("DEBUG")]
public static LaunchMode Debug;
}
public enum ReportPortal.Client.Abstractions.Models.LogLevel : Enum {
    public int value__;
    [JsonPropertyNameAttribute("TRACE")]
public static LogLevel Trace;
    [JsonPropertyNameAttribute("DEBUG")]
public static LogLevel Debug;
    [JsonPropertyNameAttribute("INFO")]
public static LogLevel Info;
    [JsonPropertyNameAttribute("WARN")]
public static LogLevel Warning;
    [JsonPropertyNameAttribute("ERROR")]
public static LogLevel Error;
    [JsonPropertyNameAttribute("FATAL")]
public static LogLevel Fatal;
}
public enum ReportPortal.Client.Abstractions.Models.ProjectRole : Enum {
    public int value__;
    [JsonPropertyNameAttribute("PROJECT_MANAGER")]
public static ProjectRole ProjectManager;
    [JsonPropertyNameAttribute("MEMBER")]
public static ProjectRole Member;
    [JsonPropertyNameAttribute("OPERATOR")]
public static ProjectRole Operator;
    [JsonPropertyNameAttribute("CUSTOMER")]
public static ProjectRole Customer;
}
public enum ReportPortal.Client.Abstractions.Models.Status : Enum {
    public int value__;
    [JsonPropertyNameAttribute("IN_PROGRESS")]
public static Status InProgress;
    [JsonPropertyNameAttribute("PASSED")]
public static Status Passed;
    [JsonPropertyNameAttribute("FAILED")]
public static Status Failed;
    [JsonPropertyNameAttribute("SKIPPED")]
public static Status Skipped;
    [JsonPropertyNameAttribute("INTERRUPTED")]
public static Status Interrupted;
    [JsonPropertyNameAttribute("CANCELLED")]
public static Status Cancelled;
    [JsonPropertyNameAttribute("STOPPED")]
public static Status Stopped;
    [JsonPropertyNameAttribute("INFO")]
public static Status Info;
    [JsonPropertyNameAttribute("WARN")]
public static Status Warn;
}
public enum ReportPortal.Client.Abstractions.Models.TestItemType : Enum {
    public int value__;
    [JsonPropertyNameAttribute("SUITE")]
public static TestItemType Suite;
    [JsonPropertyNameAttribute("TEST")]
public static TestItemType Test;
    [JsonPropertyNameAttribute("STEP")]
public static TestItemType Step;
    [JsonPropertyNameAttribute("BEFORE_CLASS")]
public static TestItemType BeforeClass;
    [JsonPropertyNameAttribute("AFTER_CLASS")]
public static TestItemType AfterClass;
    [JsonPropertyNameAttribute("AFTER_METHOD")]
public static TestItemType AfterMethod;
    [JsonPropertyNameAttribute("BEFORE_METHOD")]
public static TestItemType BeforeMethod;
}
public enum ReportPortal.Client.Abstractions.Models.UserFilterType : Enum {
    public int value__;
    [JsonPropertyNameAttribute("launch")]
public static UserFilterType Launch;
    [JsonPropertyNameAttribute("testitem")]
public static UserFilterType TestItem;
    [JsonPropertyNameAttribute("log")]
public static UserFilterType Log;
}
public class ReportPortal.Client.Abstractions.Models.WellKnownIssueType : ValueType {
    public static string ProductBug;
    public static string AutomationBug;
    public static string SystemIssue;
    public static string ToInvestigate;
    public static string NotDefect;
}
public class ReportPortal.Client.Abstractions.Requests.AnalyzeLaunchRequest : object {
    [CompilerGeneratedAttribute]
private long <LaunchId>k__BackingField;
    [CompilerGeneratedAttribute]
private AnalyzerMode <AnalyzerMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AnalyzerTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AnalyzerItemsMode>k__BackingField;
    public long LaunchId { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.AnalyzerMode>")]
public AnalyzerMode AnalyzerMode { get; public set; }
    public string AnalyzerTypeName { get; public set; }
    [JsonPropertyNameAttribute("analyzeItemsMode")]
public List`1<string> AnalyzerItemsMode { get; public set; }
    [CompilerGeneratedAttribute]
public long get_LaunchId();
    [CompilerGeneratedAttribute]
public void set_LaunchId(long value);
    [CompilerGeneratedAttribute]
public AnalyzerMode get_AnalyzerMode();
    [CompilerGeneratedAttribute]
public void set_AnalyzerMode(AnalyzerMode value);
    [CompilerGeneratedAttribute]
public string get_AnalyzerTypeName();
    [CompilerGeneratedAttribute]
public void set_AnalyzerTypeName(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AnalyzerItemsMode();
    [CompilerGeneratedAttribute]
public void set_AnalyzerItemsMode(List`1<string> value);
}
public class ReportPortal.Client.Abstractions.Requests.AssignTestItemIssuesRequest : object {
    [CompilerGeneratedAttribute]
private List`1<TestItemIssueUpdate> <Issues>k__BackingField;
    public List`1<TestItemIssueUpdate> Issues { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<TestItemIssueUpdate> get_Issues();
    [CompilerGeneratedAttribute]
public void set_Issues(List`1<TestItemIssueUpdate> value);
}
public class ReportPortal.Client.Abstractions.Requests.CreateLogItemRequest : object {
    [CompilerGeneratedAttribute]
private string <TestItemUuid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LaunchUuid>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Time>k__BackingField;
    [CompilerGeneratedAttribute]
private LogLevel <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private LogItemAttach <Attach>k__BackingField;
    [JsonPropertyNameAttribute("itemUuid")]
public string TestItemUuid { get; public set; }
    public string LaunchUuid { get; public set; }
    public DateTime Time { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.LogLevel>")]
public LogLevel Level { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Text { get; public set; }
    [JsonPropertyNameAttribute("file")]
public LogItemAttach Attach { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TestItemUuid();
    [CompilerGeneratedAttribute]
public void set_TestItemUuid(string value);
    [CompilerGeneratedAttribute]
public string get_LaunchUuid();
    [CompilerGeneratedAttribute]
public void set_LaunchUuid(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(DateTime value);
    [CompilerGeneratedAttribute]
public LogLevel get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(LogLevel value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public LogItemAttach get_Attach();
    [CompilerGeneratedAttribute]
public void set_Attach(LogItemAttach value);
}
public class ReportPortal.Client.Abstractions.Requests.CreateUserFilterRequest : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Condition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FilterOrder> <Orders>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsShared>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private UserFilterType <UserFilterType>k__BackingField;
    public string Name { get; public set; }
    public string Description { get; public set; }
    public IEnumerable`1<Condition> Conditions { get; public set; }
    public IEnumerable`1<FilterOrder> Orders { get; public set; }
    [JsonPropertyNameAttribute("share")]
public bool IsShared { get; public set; }
    [DataMemberAttribute]
public string Owner { get; public set; }
    [JsonPropertyNameAttribute("type")]
[JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.UserFilterType>")]
public UserFilterType UserFilterType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Condition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IEnumerable`1<Condition> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<FilterOrder> get_Orders();
    [CompilerGeneratedAttribute]
public void set_Orders(IEnumerable`1<FilterOrder> value);
    [CompilerGeneratedAttribute]
public bool get_IsShared();
    [CompilerGeneratedAttribute]
public void set_IsShared(bool value);
    [CompilerGeneratedAttribute]
public string get_Owner();
    [CompilerGeneratedAttribute]
public void set_Owner(string value);
    [CompilerGeneratedAttribute]
public UserFilterType get_UserFilterType();
    [CompilerGeneratedAttribute]
public void set_UserFilterType(UserFilterType value);
}
public class ReportPortal.Client.Abstractions.Requests.FinishLaunchRequest : object {
    [CompilerGeneratedAttribute]
private DateTime <EndTime>k__BackingField;
    public DateTime EndTime { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_EndTime();
    [CompilerGeneratedAttribute]
public void set_EndTime(DateTime value);
}
public class ReportPortal.Client.Abstractions.Requests.FinishTestItemRequest : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Status <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Issue <Issue>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ItemAttribute> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRetry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RetryOf>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LaunchUuid>k__BackingField;
    public string Description { get; public set; }
    public DateTime EndTime { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.Status>")]
public Status Status { get; public set; }
    public Issue Issue { get; public set; }
    public IList`1<ItemAttribute> Attributes { get; public set; }
    [JsonPropertyNameAttribute("retry")]
public bool IsRetry { get; public set; }
    public string RetryOf { get; public set; }
    public string LaunchUuid { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public DateTime get_EndTime();
    [CompilerGeneratedAttribute]
public void set_EndTime(DateTime value);
    [CompilerGeneratedAttribute]
public Status get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Status value);
    [CompilerGeneratedAttribute]
public Issue get_Issue();
    [CompilerGeneratedAttribute]
public void set_Issue(Issue value);
    [CompilerGeneratedAttribute]
public IList`1<ItemAttribute> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(IList`1<ItemAttribute> value);
    [CompilerGeneratedAttribute]
public bool get_IsRetry();
    [CompilerGeneratedAttribute]
public void set_IsRetry(bool value);
    [CompilerGeneratedAttribute]
public string get_RetryOf();
    [CompilerGeneratedAttribute]
public void set_RetryOf(string value);
    [CompilerGeneratedAttribute]
public string get_LaunchUuid();
    [CompilerGeneratedAttribute]
public void set_LaunchUuid(string value);
}
public class ReportPortal.Client.Abstractions.Requests.LogItemAttach : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MimeType>k__BackingField;
    public string Name { get; public set; }
    [JsonIgnoreAttribute]
public Byte[] Data { get; public set; }
    [JsonIgnoreAttribute]
public string MimeType { get; public set; }
    public LogItemAttach(string mimeType, Byte[] data);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_MimeType();
    [CompilerGeneratedAttribute]
public void set_MimeType(string value);
}
public class ReportPortal.Client.Abstractions.Requests.MergeLaunchesRequest : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private LaunchMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<long> <Launches>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MergeType>k__BackingField;
    public string Name { get; public set; }
    public string Description { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.LaunchMode>")]
public LaunchMode Mode { get; public set; }
    public DateTime StartTime { get; public set; }
    public DateTime EndTime { get; public set; }
    public List`1<long> Launches { get; public set; }
    public string MergeType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public LaunchMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(LaunchMode value);
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_EndTime();
    [CompilerGeneratedAttribute]
public void set_EndTime(DateTime value);
    [CompilerGeneratedAttribute]
public List`1<long> get_Launches();
    [CompilerGeneratedAttribute]
public void set_Launches(List`1<long> value);
    [CompilerGeneratedAttribute]
public string get_MergeType();
    [CompilerGeneratedAttribute]
public void set_MergeType(string value);
}
public class ReportPortal.Client.Abstractions.Requests.StartLaunchRequest : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private LaunchMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRerun>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RerunOfLaunchUuid>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ItemAttribute> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uuid>k__BackingField;
    public string Name { get; public set; }
    public string Description { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.LaunchMode>")]
public LaunchMode Mode { get; public set; }
    public DateTime StartTime { get; public set; }
    [JsonPropertyNameAttribute("rerun")]
public bool IsRerun { get; public set; }
    [JsonPropertyNameAttribute("rerunOf")]
public string RerunOfLaunchUuid { get; public set; }
    public IList`1<ItemAttribute> Attributes { get; public set; }
    public string Uuid { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public LaunchMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(LaunchMode value);
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public bool get_IsRerun();
    [CompilerGeneratedAttribute]
public void set_IsRerun(bool value);
    [CompilerGeneratedAttribute]
public string get_RerunOfLaunchUuid();
    [CompilerGeneratedAttribute]
public void set_RerunOfLaunchUuid(string value);
    [CompilerGeneratedAttribute]
public IList`1<ItemAttribute> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(IList`1<ItemAttribute> value);
    [CompilerGeneratedAttribute]
public string get_Uuid();
    [CompilerGeneratedAttribute]
public void set_Uuid(string value);
}
public class ReportPortal.Client.Abstractions.Requests.StartTestItemRequest : object {
    [CompilerGeneratedAttribute]
private string <LaunchUuid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private TestItemType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRetry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RetryOf>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<KeyValuePair`2<string, string>> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestCaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeReference>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasStats>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ItemAttribute> <Attributes>k__BackingField;
    public string LaunchUuid { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public DateTime StartTime { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.TestItemType>")]
public TestItemType Type { get; public set; }
    [JsonPropertyNameAttribute("retry")]
public bool IsRetry { get; public set; }
    public string RetryOf { get; public set; }
    public IList`1<KeyValuePair`2<string, string>> Parameters { get; public set; }
    public string UniqueId { get; public set; }
    public string TestCaseId { get; public set; }
    [JsonPropertyNameAttribute("codeRef")]
public string CodeReference { get; public set; }
    public bool HasStats { get; public set; }
    public IList`1<ItemAttribute> Attributes { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LaunchUuid();
    [CompilerGeneratedAttribute]
public void set_LaunchUuid(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public TestItemType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(TestItemType value);
    [CompilerGeneratedAttribute]
public bool get_IsRetry();
    [CompilerGeneratedAttribute]
public void set_IsRetry(bool value);
    [CompilerGeneratedAttribute]
public string get_RetryOf();
    [CompilerGeneratedAttribute]
public void set_RetryOf(string value);
    [CompilerGeneratedAttribute]
public IList`1<KeyValuePair`2<string, string>> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(IList`1<KeyValuePair`2<string, string>> value);
    [CompilerGeneratedAttribute]
public string get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(string value);
    [CompilerGeneratedAttribute]
public string get_TestCaseId();
    [CompilerGeneratedAttribute]
public void set_TestCaseId(string value);
    [CompilerGeneratedAttribute]
public string get_CodeReference();
    [CompilerGeneratedAttribute]
public void set_CodeReference(string value);
    [CompilerGeneratedAttribute]
public bool get_HasStats();
    [CompilerGeneratedAttribute]
public void set_HasStats(bool value);
    [CompilerGeneratedAttribute]
public IList`1<ItemAttribute> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(IList`1<ItemAttribute> value);
}
public class ReportPortal.Client.Abstractions.Requests.TestItemIssueUpdate : object {
    [CompilerGeneratedAttribute]
private Issue <Issue>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TestItemId>k__BackingField;
    public Issue Issue { get; public set; }
    public long TestItemId { get; public set; }
    [CompilerGeneratedAttribute]
public Issue get_Issue();
    [CompilerGeneratedAttribute]
public void set_Issue(Issue value);
    [CompilerGeneratedAttribute]
public long get_TestItemId();
    [CompilerGeneratedAttribute]
public void set_TestItemId(long value);
}
public class ReportPortal.Client.Abstractions.Requests.UpdateLaunchRequest : object {
    [CompilerGeneratedAttribute]
private List`1<ItemAttribute> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private LaunchMode <Mode>k__BackingField;
    public List`1<ItemAttribute> Attributes { get; public set; }
    public string Description { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.LaunchMode>")]
public LaunchMode Mode { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ItemAttribute> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(List`1<ItemAttribute> value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public LaunchMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(LaunchMode value);
}
public class ReportPortal.Client.Abstractions.Requests.UpdateTestItemRequest : object {
    [CompilerGeneratedAttribute]
private List`1<ItemAttribute> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Status <Status>k__BackingField;
    public List`1<ItemAttribute> Attributes { get; public set; }
    public string Description { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.Status>")]
public Status Status { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ItemAttribute> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(List`1<ItemAttribute> value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Status get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Status value);
}
public class ReportPortal.Client.Abstractions.Requests.UpdateUserFilterRequest : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Condition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FilterOrder> <Orders>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsShared>k__BackingField;
    [CompilerGeneratedAttribute]
private UserFilterType <UserFilterType>k__BackingField;
    public string Name { get; public set; }
    public string Description { get; public set; }
    public IEnumerable`1<Condition> Conditions { get; public set; }
    public IEnumerable`1<FilterOrder> Orders { get; public set; }
    [JsonPropertyNameAttribute("share")]
public bool IsShared { get; public set; }
    [JsonPropertyNameAttribute("type")]
[JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.UserFilterType>")]
public UserFilterType UserFilterType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Condition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IEnumerable`1<Condition> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<FilterOrder> get_Orders();
    [CompilerGeneratedAttribute]
public void set_Orders(IEnumerable`1<FilterOrder> value);
    [CompilerGeneratedAttribute]
public bool get_IsShared();
    [CompilerGeneratedAttribute]
public void set_IsShared(bool value);
    [CompilerGeneratedAttribute]
public UserFilterType get_UserFilterType();
    [CompilerGeneratedAttribute]
public void set_UserFilterType(UserFilterType value);
}
public interface ReportPortal.Client.Abstractions.Resources.IAsyncLaunchResource {
    public abstract virtual Task`1<LaunchFinishedResponse> FinishAsync(string uuid, FinishLaunchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LaunchResponse> MergeAsync(MergeLaunchesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LaunchCreatedResponse> StartAsync(StartLaunchRequest request, CancellationToken cancellationToken);
}
public interface ReportPortal.Client.Abstractions.Resources.IAsyncLogItemResource {
    public abstract virtual Task`1<LogItemCreatedResponse> CreateAsync(CreateLogItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LogItemsCreatedResponse> CreateAsync(CreateLogItemRequest[] requests, CancellationToken cancellationToken);
}
public interface ReportPortal.Client.Abstractions.Resources.IAsyncTestItemResource {
    public abstract virtual Task`1<MessageResponse> FinishAsync(string uuid, FinishTestItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TestItemCreatedResponse> StartAsync(StartTestItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TestItemCreatedResponse> StartAsync(string uuid, StartTestItemRequest model, CancellationToken cancellationToken);
}
public interface ReportPortal.Client.Abstractions.Resources.ILaunchResource {
    public abstract virtual Task`1<MessageResponse> AnalyzeAsync(AnalyzeLaunchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LaunchFinishedResponse> FinishAsync(string uuid, FinishLaunchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MessageResponse> DeleteAsync(long id, CancellationToken cancellationToken);
    public abstract virtual Task`1<LaunchResponse> GetAsync(long id, CancellationToken cancellationToken);
    public abstract virtual Task`1<LaunchResponse> GetAsync(string uuid, CancellationToken cancellationToken);
    public abstract virtual Task`1<Content`1<LaunchResponse>> GetAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<Content`1<LaunchResponse>> GetAsync(FilterOption filterOption, CancellationToken cancellationToken);
    public abstract virtual Task`1<Content`1<LaunchResponse>> GetDebugAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<Content`1<LaunchResponse>> GetDebugAsync(FilterOption filterOption, CancellationToken cancellationToken);
    public abstract virtual Task`1<LaunchResponse> MergeAsync(MergeLaunchesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LaunchCreatedResponse> StartAsync(StartLaunchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LaunchFinishedResponse> StopAsync(long id, FinishLaunchRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MessageResponse> UpdateAsync(long id, UpdateLaunchRequest request, CancellationToken cancellationToken);
}
public interface ReportPortal.Client.Abstractions.Resources.ILogItemResource {
    public abstract virtual Task`1<LogItemCreatedResponse> CreateAsync(CreateLogItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<LogItemsCreatedResponse> CreateAsync(CreateLogItemRequest[] requests, CancellationToken cancellationToken);
    public abstract virtual Task`1<MessageResponse> DeleteAsync(long id, CancellationToken cancellationToken);
    public abstract virtual Task`1<Byte[]> GetBinaryDataAsync(string id, CancellationToken cancellationToken);
    public abstract virtual Task`1<LogItemResponse> GetAsync(long id, CancellationToken cancellationToken);
    public abstract virtual Task`1<LogItemResponse> GetAsync(string uuid, CancellationToken cancellationToken);
    public abstract virtual Task`1<Content`1<LogItemResponse>> GetAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<Content`1<LogItemResponse>> GetAsync(FilterOption filterOption, CancellationToken cancellationToken);
}
public interface ReportPortal.Client.Abstractions.Resources.IProjectResource {
    public abstract virtual Task`1<ProjectResponse> GetAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ProjectResponse> GetAsync(string projectName, CancellationToken cancellationToken);
    public abstract virtual Task`1<MessageResponse> UpdatePreferencesAsync(string projectName, string userName, long filterId, CancellationToken cancellationToken);
    public abstract virtual Task`1<PreferenceResponse> GetAllPreferencesAsync(string projectName, string userName, CancellationToken cancellationToken);
}
public interface ReportPortal.Client.Abstractions.Resources.ITestItemResource {
    public abstract virtual Task`1<IList`1<Issue>> AssignIssuesAsync(AssignTestItemIssuesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MessageResponse> DeleteAsync(long id, CancellationToken cancellationToken);
    public abstract virtual Task`1<MessageResponse> FinishAsync(string uuid, FinishTestItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TestItemResponse> GetAsync(long id, CancellationToken cancellationToken);
    public abstract virtual Task`1<TestItemResponse> GetAsync(string uuid, CancellationToken cancellationToken);
    public abstract virtual Task`1<Content`1<TestItemHistoryContainer>> GetHistoryAsync(long id, int depth, CancellationToken cancellationToken);
    public abstract virtual Task`1<Content`1<TestItemResponse>> GetAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<Content`1<TestItemResponse>> GetAsync(FilterOption filterOption, CancellationToken cancellationToken);
    public abstract virtual Task`1<TestItemCreatedResponse> StartAsync(StartTestItemRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<TestItemCreatedResponse> StartAsync(string uuid, StartTestItemRequest model, CancellationToken cancellationToken);
    public abstract virtual Task`1<MessageResponse> UpdateAsync(long id, UpdateTestItemRequest request, CancellationToken cancellationToken);
}
public interface ReportPortal.Client.Abstractions.Resources.IUserFilterResource {
    public abstract virtual Task`1<UserFilterCreatedResponse> CreateAsync(CreateUserFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<MessageResponse> UpdateAsync(long id, UpdateUserFilterRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<Content`1<UserFilterResponse>> GetAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<Content`1<UserFilterResponse>> GetAsync(FilterOption filterOption, CancellationToken cancellationToken);
    public abstract virtual Task`1<UserFilterResponse> GetAsync(long id, CancellationToken cancellationToken);
    public abstract virtual Task`1<MessageResponse> DeleteAsync(long id, CancellationToken cancellationToken);
}
public interface ReportPortal.Client.Abstractions.Resources.IUserResource {
    public abstract virtual Task`1<UserResponse> GetAsync(CancellationToken cancellationToken);
}
public class ReportPortal.Client.Abstractions.Responses.BinaryContent : object {
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ThumbnailId>k__BackingField;
    public string ContentType { get; public set; }
    public string Id { get; public set; }
    public string ThumbnailId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_ThumbnailId();
    [CompilerGeneratedAttribute]
public void set_ThumbnailId(string value);
}
public class ReportPortal.Client.Abstractions.Responses.Condition : object {
    [CompilerGeneratedAttribute]
private FilterOperation <UserFilterCondition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilteringField>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyNameAttribute("condition")]
[JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Filtering.FilterOperation>")]
public FilterOperation UserFilterCondition { get; public set; }
    public string FilteringField { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public FilterOperation get_UserFilterCondition();
    [CompilerGeneratedAttribute]
public void set_UserFilterCondition(FilterOperation value);
    [CompilerGeneratedAttribute]
public string get_FilteringField();
    [CompilerGeneratedAttribute]
public void set_FilteringField(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class ReportPortal.Client.Abstractions.Responses.Content`1 : object {
    [CompilerGeneratedAttribute]
private IList`1<T> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private Page <Page>k__BackingField;
    [JsonPropertyNameAttribute("content")]
public IList`1<T> Items { get; public set; }
    public Page Page { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<T> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<T> value);
    [CompilerGeneratedAttribute]
public Page get_Page();
    [CompilerGeneratedAttribute]
public void set_Page(Page value);
}
public class ReportPortal.Client.Abstractions.Responses.Defect : object {
    [CompilerGeneratedAttribute]
private int <Total>k__BackingField;
    public int Total { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(int value);
}
public class ReportPortal.Client.Abstractions.Responses.Defects : object {
    [CompilerGeneratedAttribute]
private Defect <ProductBugs>k__BackingField;
    [CompilerGeneratedAttribute]
private Defect <AutomationBugs>k__BackingField;
    [CompilerGeneratedAttribute]
private Defect <SystemIssues>k__BackingField;
    [CompilerGeneratedAttribute]
private Defect <ToInvestigate>k__BackingField;
    [CompilerGeneratedAttribute]
private Defect <NoDefect>k__BackingField;
    [JsonPropertyNameAttribute("product_bug")]
public Defect ProductBugs { get; public set; }
    [JsonPropertyNameAttribute("automation_bug")]
public Defect AutomationBugs { get; public set; }
    [JsonPropertyNameAttribute("system_issue")]
public Defect SystemIssues { get; public set; }
    [JsonPropertyNameAttribute("to_investigate")]
public Defect ToInvestigate { get; public set; }
    [JsonPropertyNameAttribute("no_defect")]
public Defect NoDefect { get; public set; }
    [CompilerGeneratedAttribute]
public Defect get_ProductBugs();
    [CompilerGeneratedAttribute]
public void set_ProductBugs(Defect value);
    [CompilerGeneratedAttribute]
public Defect get_AutomationBugs();
    [CompilerGeneratedAttribute]
public void set_AutomationBugs(Defect value);
    [CompilerGeneratedAttribute]
public Defect get_SystemIssues();
    [CompilerGeneratedAttribute]
public void set_SystemIssues(Defect value);
    [CompilerGeneratedAttribute]
public Defect get_ToInvestigate();
    [CompilerGeneratedAttribute]
public void set_ToInvestigate(Defect value);
    [CompilerGeneratedAttribute]
public Defect get_NoDefect();
    [CompilerGeneratedAttribute]
public void set_NoDefect(Defect value);
}
public class ReportPortal.Client.Abstractions.Responses.Executions : object {
    [CompilerGeneratedAttribute]
private int <Total>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Passed>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Skipped>k__BackingField;
    public int Total { get; public set; }
    public int Passed { get; public set; }
    public int Failed { get; public set; }
    public int Skipped { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Total();
    [CompilerGeneratedAttribute]
public void set_Total(int value);
    [CompilerGeneratedAttribute]
public int get_Passed();
    [CompilerGeneratedAttribute]
public void set_Passed(int value);
    [CompilerGeneratedAttribute]
public int get_Failed();
    [CompilerGeneratedAttribute]
public void set_Failed(int value);
    [CompilerGeneratedAttribute]
public int get_Skipped();
    [CompilerGeneratedAttribute]
public void set_Skipped(int value);
}
public class ReportPortal.Client.Abstractions.Responses.ExternalSystemIssue : object {
    [CompilerGeneratedAttribute]
private DateTime <SubmitDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Submitter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SystemId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TicketId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BtsProject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BtsUrl>k__BackingField;
    public DateTime SubmitDate { get; public set; }
    public string Submitter { get; public set; }
    public string SystemId { get; public set; }
    public string TicketId { get; public set; }
    public string Url { get; public set; }
    public string BtsProject { get; public set; }
    public string BtsUrl { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_SubmitDate();
    [CompilerGeneratedAttribute]
public void set_SubmitDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Submitter();
    [CompilerGeneratedAttribute]
public void set_Submitter(string value);
    [CompilerGeneratedAttribute]
public string get_SystemId();
    [CompilerGeneratedAttribute]
public void set_SystemId(string value);
    [CompilerGeneratedAttribute]
public string get_TicketId();
    [CompilerGeneratedAttribute]
public void set_TicketId(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_BtsProject();
    [CompilerGeneratedAttribute]
public void set_BtsProject(string value);
    [CompilerGeneratedAttribute]
public string get_BtsUrl();
    [CompilerGeneratedAttribute]
public void set_BtsUrl(string value);
}
public class ReportPortal.Client.Abstractions.Responses.FilterOrder : object {
    [CompilerGeneratedAttribute]
private bool <Asc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SortingColumn>k__BackingField;
    [JsonPropertyNameAttribute("isAsc")]
public bool Asc { get; public set; }
    public string SortingColumn { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Asc();
    [CompilerGeneratedAttribute]
public void set_Asc(bool value);
    [CompilerGeneratedAttribute]
public string get_SortingColumn();
    [CompilerGeneratedAttribute]
public void set_SortingColumn(string value);
}
public class ReportPortal.Client.Abstractions.Responses.Issue : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoAnalyzed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreAnalyzer>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ExternalSystemIssue> <ExternalSystemIssues>k__BackingField;
    [JsonPropertyNameAttribute("issueType")]
public string Type { get; public set; }
    public string Comment { get; public set; }
    public bool AutoAnalyzed { get; public set; }
    public bool IgnoreAnalyzer { get; public set; }
    public IList`1<ExternalSystemIssue> ExternalSystemIssues { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
    [CompilerGeneratedAttribute]
public bool get_AutoAnalyzed();
    [CompilerGeneratedAttribute]
public void set_AutoAnalyzed(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreAnalyzer();
    [CompilerGeneratedAttribute]
public void set_IgnoreAnalyzer(bool value);
    [CompilerGeneratedAttribute]
public IList`1<ExternalSystemIssue> get_ExternalSystemIssues();
    [CompilerGeneratedAttribute]
public void set_ExternalSystemIssues(IList`1<ExternalSystemIssue> value);
}
public class ReportPortal.Client.Abstractions.Responses.LaunchCreatedResponse : object {
    [CompilerGeneratedAttribute]
private string <Uuid>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Number>k__BackingField;
    [JsonPropertyNameAttribute("id")]
public string Uuid { get; public set; }
    public long Number { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Uuid();
    [CompilerGeneratedAttribute]
public void set_Uuid(string value);
    [CompilerGeneratedAttribute]
public long get_Number();
    [CompilerGeneratedAttribute]
public void set_Number(long value);
}
public class ReportPortal.Client.Abstractions.Responses.LaunchFinishedResponse : object {
    [CompilerGeneratedAttribute]
private string <Uuid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Link>k__BackingField;
    [JsonPropertyNameAttribute("id")]
public string Uuid { get; public set; }
    public string Link { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Uuid();
    [CompilerGeneratedAttribute]
public void set_Uuid(string value);
    [CompilerGeneratedAttribute]
public string get_Link();
    [CompilerGeneratedAttribute]
public void set_Link(string value);
}
public class ReportPortal.Client.Abstractions.Responses.LaunchResponse : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uuid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Number>k__BackingField;
    [CompilerGeneratedAttribute]
private LaunchMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ItemAttribute> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private Statistic <Statistics>k__BackingField;
    public long Id { get; public set; }
    public string Uuid { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public int Number { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.LaunchMode>")]
public LaunchMode Mode { get; public set; }
    public DateTime StartTime { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public bool HasRetries { get; public set; }
    public IList`1<ItemAttribute> Attributes { get; public set; }
    public Statistic Statistics { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_Uuid();
    [CompilerGeneratedAttribute]
public void set_Uuid(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public int get_Number();
    [CompilerGeneratedAttribute]
public void set_Number(int value);
    [CompilerGeneratedAttribute]
public LaunchMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(LaunchMode value);
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndTime();
    [CompilerGeneratedAttribute]
public void set_EndTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public bool get_HasRetries();
    [CompilerGeneratedAttribute]
public void set_HasRetries(bool value);
    [CompilerGeneratedAttribute]
public IList`1<ItemAttribute> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(IList`1<ItemAttribute> value);
    [CompilerGeneratedAttribute]
public Statistic get_Statistics();
    [CompilerGeneratedAttribute]
public void set_Statistics(Statistic value);
}
public class ReportPortal.Client.Abstractions.Responses.LogItemCreatedResponse : object {
    [CompilerGeneratedAttribute]
private string <Uuid>k__BackingField;
    [JsonPropertyNameAttribute("id")]
public string Uuid { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Uuid();
    [CompilerGeneratedAttribute]
public void set_Uuid(string value);
}
public class ReportPortal.Client.Abstractions.Responses.LogItemResponse : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uuid>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TestItemId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <LaunchId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Time>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private LogLevel <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private BinaryContent <Content>k__BackingField;
    public long Id { get; public set; }
    public string Uuid { get; public set; }
    [JsonPropertyNameAttribute("itemId")]
public long TestItemId { get; public set; }
    public long LaunchId { get; public set; }
    public DateTime Time { get; public set; }
    [JsonPropertyNameAttribute("message")]
public string Text { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.LogLevel>")]
public LogLevel Level { get; public set; }
    [JsonPropertyNameAttribute("binaryContent")]
public BinaryContent Content { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_Uuid();
    [CompilerGeneratedAttribute]
public void set_Uuid(string value);
    [CompilerGeneratedAttribute]
public long get_TestItemId();
    [CompilerGeneratedAttribute]
public void set_TestItemId(long value);
    [CompilerGeneratedAttribute]
public long get_LaunchId();
    [CompilerGeneratedAttribute]
public void set_LaunchId(long value);
    [CompilerGeneratedAttribute]
public DateTime get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public LogLevel get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(LogLevel value);
    [CompilerGeneratedAttribute]
public BinaryContent get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(BinaryContent value);
}
public class ReportPortal.Client.Abstractions.Responses.LogItemsCreatedResponse : object {
    [CompilerGeneratedAttribute]
private IList`1<LogItemCreatedResponse> <LogItems>k__BackingField;
    [JsonPropertyNameAttribute("responses")]
public IList`1<LogItemCreatedResponse> LogItems { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<LogItemCreatedResponse> get_LogItems();
    [CompilerGeneratedAttribute]
public void set_LogItems(IList`1<LogItemCreatedResponse> value);
}
public class ReportPortal.Client.Abstractions.Responses.MessageResponse : object {
    [CompilerGeneratedAttribute]
private string <Info>k__BackingField;
    [JsonPropertyNameAttribute("message")]
public string Info { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Info();
    [CompilerGeneratedAttribute]
public void set_Info(string value);
}
public class ReportPortal.Client.Abstractions.Responses.Page : object {
    [CompilerGeneratedAttribute]
private int <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalElements>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalPages>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Number>k__BackingField;
    public int Size { get; public set; }
    public int TotalElements { get; public set; }
    public int TotalPages { get; public set; }
    public int Number { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(int value);
    [CompilerGeneratedAttribute]
public int get_TotalElements();
    [CompilerGeneratedAttribute]
public void set_TotalElements(int value);
    [CompilerGeneratedAttribute]
public int get_TotalPages();
    [CompilerGeneratedAttribute]
public void set_TotalPages(int value);
    [CompilerGeneratedAttribute]
public int get_Number();
    [CompilerGeneratedAttribute]
public void set_Number(int value);
}
public class ReportPortal.Client.Abstractions.Responses.PathNames : object {
    [CompilerGeneratedAttribute]
private LaunchPathNameModel <LaunchPathName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ItemPathNameModel> <ItemPaths>k__BackingField;
    public LaunchPathNameModel LaunchPathName { get; public set; }
    public IList`1<ItemPathNameModel> ItemPaths { get; public set; }
    [CompilerGeneratedAttribute]
public LaunchPathNameModel get_LaunchPathName();
    [CompilerGeneratedAttribute]
public void set_LaunchPathName(LaunchPathNameModel value);
    [CompilerGeneratedAttribute]
public IList`1<ItemPathNameModel> get_ItemPaths();
    [CompilerGeneratedAttribute]
public void set_ItemPaths(IList`1<ItemPathNameModel> value);
}
public class ReportPortal.Client.Abstractions.Responses.Project.PreferenceResponse : object {
    [CompilerGeneratedAttribute]
private IList`1<UserFilterResponse> <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <UserId>k__BackingField;
    public IList`1<UserFilterResponse> Filters { get; public set; }
    public long ProjectId { get; public set; }
    public long UserId { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<UserFilterResponse> get_Filters();
    [CompilerGeneratedAttribute]
public void set_Filters(IList`1<UserFilterResponse> value);
    [CompilerGeneratedAttribute]
public long get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(long value);
    [CompilerGeneratedAttribute]
public long get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(long value);
}
public class ReportPortal.Client.Abstractions.Responses.Project.ProjectConfiguration : object {
    [CompilerGeneratedAttribute]
private ProjectDefectSubTypesContainer <DefectSubTypes>k__BackingField;
    [JsonPropertyNameAttribute("subTypes")]
public ProjectDefectSubTypesContainer DefectSubTypes { get; public set; }
    [CompilerGeneratedAttribute]
public ProjectDefectSubTypesContainer get_DefectSubTypes();
    [CompilerGeneratedAttribute]
public void set_DefectSubTypes(ProjectDefectSubTypesContainer value);
}
public class ReportPortal.Client.Abstractions.Responses.Project.ProjectDefectSubType : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Color>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LongName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortName>k__BackingField;
    public long Id { get; public set; }
    public string Color { get; public set; }
    public string Locator { get; public set; }
    public string LongName { get; public set; }
    public string ShortName { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_Color();
    [CompilerGeneratedAttribute]
public void set_Color(string value);
    [CompilerGeneratedAttribute]
public string get_Locator();
    [CompilerGeneratedAttribute]
public void set_Locator(string value);
    [CompilerGeneratedAttribute]
public string get_LongName();
    [CompilerGeneratedAttribute]
public void set_LongName(string value);
    [CompilerGeneratedAttribute]
public string get_ShortName();
    [CompilerGeneratedAttribute]
public void set_ShortName(string value);
}
public class ReportPortal.Client.Abstractions.Responses.Project.ProjectDefectSubTypesContainer : object {
    [CompilerGeneratedAttribute]
private IList`1<ProjectDefectSubType> <ProductBugTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ProjectDefectSubType> <AutomationBugTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ProjectDefectSubType> <SystemIssueTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ProjectDefectSubType> <ToInvestigateTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ProjectDefectSubType> <NoDefectTypes>k__BackingField;
    [JsonPropertyNameAttribute("PRODUCT_BUG")]
public IList`1<ProjectDefectSubType> ProductBugTypes { get; public set; }
    [JsonPropertyNameAttribute("AUTOMATION_BUG")]
public IList`1<ProjectDefectSubType> AutomationBugTypes { get; public set; }
    [JsonPropertyNameAttribute("SYSTEM_ISSUE")]
public IList`1<ProjectDefectSubType> SystemIssueTypes { get; public set; }
    [JsonPropertyNameAttribute("TO_INVESTIGATE")]
public IList`1<ProjectDefectSubType> ToInvestigateTypes { get; public set; }
    [JsonPropertyNameAttribute("NO_DEFECT")]
public IList`1<ProjectDefectSubType> NoDefectTypes { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<ProjectDefectSubType> get_ProductBugTypes();
    [CompilerGeneratedAttribute]
public void set_ProductBugTypes(IList`1<ProjectDefectSubType> value);
    [CompilerGeneratedAttribute]
public IList`1<ProjectDefectSubType> get_AutomationBugTypes();
    [CompilerGeneratedAttribute]
public void set_AutomationBugTypes(IList`1<ProjectDefectSubType> value);
    [CompilerGeneratedAttribute]
public IList`1<ProjectDefectSubType> get_SystemIssueTypes();
    [CompilerGeneratedAttribute]
public void set_SystemIssueTypes(IList`1<ProjectDefectSubType> value);
    [CompilerGeneratedAttribute]
public IList`1<ProjectDefectSubType> get_ToInvestigateTypes();
    [CompilerGeneratedAttribute]
public void set_ToInvestigateTypes(IList`1<ProjectDefectSubType> value);
    [CompilerGeneratedAttribute]
public IList`1<ProjectDefectSubType> get_NoDefectTypes();
    [CompilerGeneratedAttribute]
public void set_NoDefectTypes(IList`1<ProjectDefectSubType> value);
}
public class ReportPortal.Client.Abstractions.Responses.Project.ProjectResponse : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ProjectConfiguration <Configuration>k__BackingField;
    [JsonPropertyNameAttribute("projectId")]
public long Id { get; public set; }
    [JsonPropertyNameAttribute("projectName")]
public string Name { get; public set; }
    public ProjectConfiguration Configuration { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ProjectConfiguration get_Configuration();
    [CompilerGeneratedAttribute]
public void set_Configuration(ProjectConfiguration value);
}
public class ReportPortal.Client.Abstractions.Responses.ProjectAssigment : object {
    [CompilerGeneratedAttribute]
private ProjectRole <ProjectRole>k__BackingField;
    [JsonPropertyNameAttribute("projectRole")]
[JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.ProjectRole>")]
public ProjectRole ProjectRole { get; public set; }
    [CompilerGeneratedAttribute]
public ProjectRole get_ProjectRole();
    [CompilerGeneratedAttribute]
public void set_ProjectRole(ProjectRole value);
}
public class ReportPortal.Client.Abstractions.Responses.ResponsesList`1 : object {
    [CompilerGeneratedAttribute]
private IList`1<T> <Items>k__BackingField;
    [JsonPropertyNameAttribute("responses")]
public IList`1<T> Items { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<T> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<T> value);
}
public class ReportPortal.Client.Abstractions.Responses.Statistic : object {
    [CompilerGeneratedAttribute]
private Executions <Executions>k__BackingField;
    [CompilerGeneratedAttribute]
private Defects <Defects>k__BackingField;
    public Executions Executions { get; public set; }
    public Defects Defects { get; public set; }
    [CompilerGeneratedAttribute]
public Executions get_Executions();
    [CompilerGeneratedAttribute]
public void set_Executions(Executions value);
    [CompilerGeneratedAttribute]
public Defects get_Defects();
    [CompilerGeneratedAttribute]
public void set_Defects(Defects value);
}
public class ReportPortal.Client.Abstractions.Responses.TestItemCreatedResponse : object {
    [CompilerGeneratedAttribute]
private string <Uuid>k__BackingField;
    [JsonPropertyNameAttribute("id")]
public string Uuid { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Uuid();
    [CompilerGeneratedAttribute]
public void set_Uuid(string value);
}
public class ReportPortal.Client.Abstractions.Responses.TestItemHistoryContainer : object {
    [CompilerGeneratedAttribute]
private string <GroupingField>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TestItemResponse> <Resources>k__BackingField;
    public string GroupingField { get; public set; }
    public IList`1<TestItemResponse> Resources { get; public set; }
    [CompilerGeneratedAttribute]
public string get_GroupingField();
    [CompilerGeneratedAttribute]
public void set_GroupingField(string value);
    [CompilerGeneratedAttribute]
public IList`1<TestItemResponse> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IList`1<TestItemResponse> value);
}
public class ReportPortal.Client.Abstractions.Responses.TestItemResponse : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uuid>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TestItemResponse> <Retries>k__BackingField;
    [CompilerGeneratedAttribute]
private Status <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private TestItemType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Issue <Issue>k__BackingField;
    [CompilerGeneratedAttribute]
private PathNames <PathNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasChildren>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<KeyValuePair`2<string, string>> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeReference>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ItemAttribute> <Attributes>k__BackingField;
    public long Id { get; public set; }
    public string Uuid { get; public set; }
    [JsonPropertyNameAttribute("parent")]
public Nullable`1<long> ParentId { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public DateTime StartTime { get; public set; }
    public Nullable`1<DateTime> EndTime { get; public set; }
    public IList`1<TestItemResponse> Retries { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.Status>")]
public Status Status { get; public set; }
    [JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.TestItemType>")]
public TestItemType Type { get; public set; }
    public Issue Issue { get; public set; }
    public PathNames PathNames { get; public set; }
    public bool HasChildren { get; public set; }
    public IList`1<KeyValuePair`2<string, string>> Parameters { get; public set; }
    public string UniqueId { get; public set; }
    [JsonPropertyNameAttribute("codeRef")]
public string CodeReference { get; public set; }
    public IList`1<ItemAttribute> Attributes { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_Uuid();
    [CompilerGeneratedAttribute]
public void set_Uuid(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ParentId();
    [CompilerGeneratedAttribute]
public void set_ParentId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndTime();
    [CompilerGeneratedAttribute]
public void set_EndTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public IList`1<TestItemResponse> get_Retries();
    [CompilerGeneratedAttribute]
public void set_Retries(IList`1<TestItemResponse> value);
    [CompilerGeneratedAttribute]
public Status get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Status value);
    [CompilerGeneratedAttribute]
public TestItemType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(TestItemType value);
    [CompilerGeneratedAttribute]
public Issue get_Issue();
    [CompilerGeneratedAttribute]
public void set_Issue(Issue value);
    [CompilerGeneratedAttribute]
public PathNames get_PathNames();
    [CompilerGeneratedAttribute]
public void set_PathNames(PathNames value);
    [CompilerGeneratedAttribute]
public bool get_HasChildren();
    [CompilerGeneratedAttribute]
public void set_HasChildren(bool value);
    [CompilerGeneratedAttribute]
public IList`1<KeyValuePair`2<string, string>> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(IList`1<KeyValuePair`2<string, string>> value);
    [CompilerGeneratedAttribute]
public string get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(string value);
    [CompilerGeneratedAttribute]
public string get_CodeReference();
    [CompilerGeneratedAttribute]
public void set_CodeReference(string value);
    [CompilerGeneratedAttribute]
public IList`1<ItemAttribute> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(IList`1<ItemAttribute> value);
}
public class ReportPortal.Client.Abstractions.Responses.UserFilterCreatedResponse : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    public long Id { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
}
public class ReportPortal.Client.Abstractions.Responses.UserFilterResponse : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Condition> <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<FilterOrder> <Orders>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsShared>k__BackingField;
    [CompilerGeneratedAttribute]
private UserFilterType <UserFilterType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    public long Id { get; public set; }
    public string Description { get; public set; }
    public IList`1<Condition> Conditions { get; public set; }
    public string Name { get; public set; }
    public IList`1<FilterOrder> Orders { get; public set; }
    [JsonPropertyNameAttribute("share")]
public bool IsShared { get; public set; }
    [JsonPropertyNameAttribute("type")]
[JsonConverterAttribute("ReportPortal.Client.Converters.JsonStringEnumConverterEx`1<ReportPortal.Client.Abstractions.Models.UserFilterType>")]
public UserFilterType UserFilterType { get; public set; }
    public string Owner { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public IList`1<Condition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(IList`1<Condition> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IList`1<FilterOrder> get_Orders();
    [CompilerGeneratedAttribute]
public void set_Orders(IList`1<FilterOrder> value);
    [CompilerGeneratedAttribute]
public bool get_IsShared();
    [CompilerGeneratedAttribute]
public void set_IsShared(bool value);
    [CompilerGeneratedAttribute]
public UserFilterType get_UserFilterType();
    [CompilerGeneratedAttribute]
public void set_UserFilterType(UserFilterType value);
    [CompilerGeneratedAttribute]
public string get_Owner();
    [CompilerGeneratedAttribute]
public void set_Owner(string value);
}
public class ReportPortal.Client.Abstractions.Responses.UserResponse : object {
    [CompilerGeneratedAttribute]
private string <Fullname>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ProjectAssigment> <AssignedProjects>k__BackingField;
    public string Fullname { get; public set; }
    public string Email { get; public set; }
    public IDictionary`2<string, ProjectAssigment> AssignedProjects { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Fullname();
    [CompilerGeneratedAttribute]
public void set_Fullname(string value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ProjectAssigment> get_AssignedProjects();
    [CompilerGeneratedAttribute]
public void set_AssignedProjects(IDictionary`2<string, ProjectAssigment> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSourceGenerationOptionsAttribute]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.StartLaunchRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.FinishLaunchRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.UpdateLaunchRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.AnalyzeLaunchRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.MergeLaunchesRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.MessageResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.LaunchResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.Content`1<ReportPortal.Client.Abstractions.Responses.LaunchResponse>")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.LaunchCreatedResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.LaunchFinishedResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.StartTestItemRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.FinishTestItemRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.UpdateTestItemRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.AssignTestItemIssuesRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.TestItemResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.Content`1<ReportPortal.Client.Abstractions.Responses.TestItemResponse>")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.TestItemCreatedResponse")]
[JsonSerializableAttribute("System.Collections.Generic.IList`1<ReportPortal.Client.Abstractions.Responses.Issue>")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.Content`1<ReportPortal.Client.Abstractions.Responses.TestItemHistoryContainer>")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.CreateLogItemRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.CreateLogItemRequest[]")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.LogItemResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.Content`1<ReportPortal.Client.Abstractions.Responses.LogItemResponse>")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.LogItemCreatedResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.LogItemsCreatedResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.CreateUserFilterRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Requests.UpdateUserFilterRequest")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.UserFilterResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.Content`1<ReportPortal.Client.Abstractions.Responses.UserFilterResponse>")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.UserFilterCreatedResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.UserResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.Project.ProjectResponse")]
[JsonSerializableAttribute("ReportPortal.Client.Abstractions.Responses.Project.PreferenceResponse")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "6.0.6.41905")]
internal class ReportPortal.Client.Converters.ClientSourceGenerationContext : JsonSerializerContext {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    [NullableAttribute("2")]
private JsonTypeInfo`1<LaunchMode> _LaunchMode;
    [NullableAttribute("2")]
private JsonTypeInfo`1<DateTime> _DateTime;
    [NullableAttribute("2")]
private JsonTypeInfo`1<bool> _Boolean;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ItemAttribute> _ItemAttribute;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<ItemAttribute>> _IListItemAttribute;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<StartLaunchRequest> _StartLaunchRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<FinishLaunchRequest> _FinishLaunchRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<ItemAttribute>> _ListItemAttribute;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<UpdateLaunchRequest> _UpdateLaunchRequest;
    [NullableAttribute("2")]
private JsonTypeInfo`1<long> _Int64;
    [NullableAttribute("2")]
private JsonTypeInfo`1<AnalyzerMode> _AnalyzerMode;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<string>> _ListString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<AnalyzeLaunchRequest> _AnalyzeLaunchRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<long>> _ListInt64;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<MergeLaunchesRequest> _MergeLaunchesRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<MessageResponse> _MessageResponse;
    [NullableAttribute("2")]
private JsonTypeInfo`1<int> _Int32;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<DateTime>> _NullableDateTime;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Executions> _Executions;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Defect> _Defect;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Defects> _Defects;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Statistic> _Statistic;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<LaunchResponse> _LaunchResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<LaunchResponse>> _IListLaunchResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Page> _Page;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Content`1<LaunchResponse>> _ContentLaunchResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<LaunchCreatedResponse> _LaunchCreatedResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<LaunchFinishedResponse> _LaunchFinishedResponse;
    [NullableAttribute("2")]
private JsonTypeInfo`1<TestItemType> _TestItemType;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<KeyValuePair`2<string, string>> _KeyValuePairStringString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<KeyValuePair`2<string, string>>> _IListKeyValuePairStringString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<StartTestItemRequest> _StartTestItemRequest;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Status> _Status;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ExternalSystemIssue> _ExternalSystemIssue;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<ExternalSystemIssue>> _IListExternalSystemIssue;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Issue> _Issue;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<FinishTestItemRequest> _FinishTestItemRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<UpdateTestItemRequest> _UpdateTestItemRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<TestItemIssueUpdate> _TestItemIssueUpdate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<List`1<TestItemIssueUpdate>> _ListTestItemIssueUpdate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<AssignTestItemIssuesRequest> _AssignTestItemIssuesRequest;
    [NullableAttribute("2")]
private JsonTypeInfo`1<Nullable`1<long>> _NullableInt64;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<TestItemResponse>> _IListTestItemResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<LaunchPathNameModel> _LaunchPathNameModel;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ItemPathNameModel> _ItemPathNameModel;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<ItemPathNameModel>> _IListItemPathNameModel;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<PathNames> _PathNames;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<TestItemResponse> _TestItemResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Content`1<TestItemResponse>> _ContentTestItemResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<TestItemCreatedResponse> _TestItemCreatedResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<Issue>> _IListIssue;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<TestItemHistoryContainer> _TestItemHistoryContainer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<TestItemHistoryContainer>> _IListTestItemHistoryContainer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Content`1<TestItemHistoryContainer>> _ContentTestItemHistoryContainer;
    [NullableAttribute("2")]
private JsonTypeInfo`1<LogLevel> _LogLevel;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Byte[]> _ByteArray;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<LogItemAttach> _LogItemAttach;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<CreateLogItemRequest> _CreateLogItemRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<CreateLogItemRequest[]> _CreateLogItemRequestArray;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<BinaryContent> _BinaryContent;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<LogItemResponse> _LogItemResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<LogItemResponse>> _IListLogItemResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Content`1<LogItemResponse>> _ContentLogItemResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<LogItemCreatedResponse> _LogItemCreatedResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<LogItemCreatedResponse>> _IListLogItemCreatedResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<LogItemsCreatedResponse> _LogItemsCreatedResponse;
    [NullableAttribute("2")]
private JsonTypeInfo`1<FilterOperation> _FilterOperation;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Condition> _Condition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IEnumerable`1<Condition>> _IEnumerableCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<FilterOrder> _FilterOrder;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IEnumerable`1<FilterOrder>> _IEnumerableFilterOrder;
    [NullableAttribute("2")]
private JsonTypeInfo`1<UserFilterType> _UserFilterType;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<CreateUserFilterRequest> _CreateUserFilterRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<UpdateUserFilterRequest> _UpdateUserFilterRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<Condition>> _IListCondition;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<FilterOrder>> _IListFilterOrder;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<UserFilterResponse> _UserFilterResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<UserFilterResponse>> _IListUserFilterResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<Content`1<UserFilterResponse>> _ContentUserFilterResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<UserFilterCreatedResponse> _UserFilterCreatedResponse;
    [NullableAttribute("2")]
private JsonTypeInfo`1<ProjectRole> _ProjectRole;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ProjectAssigment> _ProjectAssigment;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IDictionary`2<string, ProjectAssigment>> _IDictionaryStringProjectAssigment;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<UserResponse> _UserResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ProjectDefectSubType> _ProjectDefectSubType;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<IList`1<ProjectDefectSubType>> _IListProjectDefectSubType;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ProjectDefectSubTypesContainer> _ProjectDefectSubTypesContainer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ProjectConfiguration> _ProjectConfiguration;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<ProjectResponse> _ProjectResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<PreferenceResponse> _PreferenceResponse;
    [CompilerGeneratedAttribute]
private static JsonSerializerOptions <s_defaultOptions>k__BackingField;
    [NullableAttribute("2")]
private static ClientSourceGenerationContext s_defaultContext;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    private static JsonEncodedText PropName_key;
    private static JsonEncodedText PropName_value;
    private static JsonEncodedText PropName_system;
    private static JsonEncodedText PropName_endTime;
    private static JsonEncodedText PropName_message;
    private static JsonEncodedText PropName_executions;
    private static JsonEncodedText PropName_defects;
    private static JsonEncodedText PropName_total;
    private static JsonEncodedText PropName_passed;
    private static JsonEncodedText PropName_failed;
    private static JsonEncodedText PropName_skipped;
    private static JsonEncodedText PropName_product_bug;
    private static JsonEncodedText PropName_automation_bug;
    private static JsonEncodedText PropName_system_issue;
    private static JsonEncodedText PropName_to_investigate;
    private static JsonEncodedText PropName_no_defect;
    private static JsonEncodedText PropName_content;
    private static JsonEncodedText PropName_page;
    private static JsonEncodedText PropName_size;
    private static JsonEncodedText PropName_totalElements;
    private static JsonEncodedText PropName_totalPages;
    private static JsonEncodedText PropName_number;
    private static JsonEncodedText PropName_id;
    private static JsonEncodedText PropName_link;
    private static JsonEncodedText PropName_issueType;
    private static JsonEncodedText PropName_comment;
    private static JsonEncodedText PropName_autoAnalyzed;
    private static JsonEncodedText PropName_ignoreAnalyzer;
    private static JsonEncodedText PropName_externalSystemIssues;
    private static JsonEncodedText PropName_submitDate;
    private static JsonEncodedText PropName_submitter;
    private static JsonEncodedText PropName_systemId;
    private static JsonEncodedText PropName_ticketId;
    private static JsonEncodedText PropName_url;
    private static JsonEncodedText PropName_btsProject;
    private static JsonEncodedText PropName_btsUrl;
    private static JsonEncodedText PropName_issues;
    private static JsonEncodedText PropName_issue;
    private static JsonEncodedText PropName_testItemId;
    private static JsonEncodedText PropName_launchPathName;
    private static JsonEncodedText PropName_itemPaths;
    private static JsonEncodedText PropName_name;
    private static JsonEncodedText PropName_groupingField;
    private static JsonEncodedText PropName_resources;
    private static JsonEncodedText PropName_contentType;
    private static JsonEncodedText PropName_thumbnailId;
    private static JsonEncodedText PropName_responses;
    private static JsonEncodedText PropName_isAsc;
    private static JsonEncodedText PropName_sortingColumn;
    private static JsonEncodedText PropName_fullname;
    private static JsonEncodedText PropName_email;
    private static JsonEncodedText PropName_assignedProjects;
    private static JsonEncodedText PropName_projectId;
    private static JsonEncodedText PropName_projectName;
    private static JsonEncodedText PropName_configuration;
    private static JsonEncodedText PropName_subTypes;
    private static JsonEncodedText PropName_PRODUCT_BUG;
    private static JsonEncodedText PropName_AUTOMATION_BUG;
    private static JsonEncodedText PropName_SYSTEM_ISSUE;
    private static JsonEncodedText PropName_TO_INVESTIGATE;
    private static JsonEncodedText PropName_NO_DEFECT;
    private static JsonEncodedText PropName_color;
    private static JsonEncodedText PropName_locator;
    private static JsonEncodedText PropName_longName;
    private static JsonEncodedText PropName_shortName;
    private static JsonEncodedText PropName_filters;
    private static JsonEncodedText PropName_userId;
    public JsonTypeInfo`1<string> String { get; }
    public JsonTypeInfo`1<LaunchMode> LaunchMode { get; }
    public JsonTypeInfo`1<DateTime> DateTime { get; }
    public JsonTypeInfo`1<bool> Boolean { get; }
    public JsonTypeInfo`1<ItemAttribute> ItemAttribute { get; }
    public JsonTypeInfo`1<IList`1<ItemAttribute>> IListItemAttribute { get; }
    public JsonTypeInfo`1<StartLaunchRequest> StartLaunchRequest { get; }
    public JsonTypeInfo`1<FinishLaunchRequest> FinishLaunchRequest { get; }
    public JsonTypeInfo`1<List`1<ItemAttribute>> ListItemAttribute { get; }
    public JsonTypeInfo`1<UpdateLaunchRequest> UpdateLaunchRequest { get; }
    public JsonTypeInfo`1<long> Int64 { get; }
    public JsonTypeInfo`1<AnalyzerMode> AnalyzerMode { get; }
    public JsonTypeInfo`1<List`1<string>> ListString { get; }
    public JsonTypeInfo`1<AnalyzeLaunchRequest> AnalyzeLaunchRequest { get; }
    public JsonTypeInfo`1<List`1<long>> ListInt64 { get; }
    public JsonTypeInfo`1<MergeLaunchesRequest> MergeLaunchesRequest { get; }
    public JsonTypeInfo`1<MessageResponse> MessageResponse { get; }
    public JsonTypeInfo`1<int> Int32 { get; }
    public JsonTypeInfo`1<Nullable`1<DateTime>> NullableDateTime { get; }
    public JsonTypeInfo`1<Executions> Executions { get; }
    public JsonTypeInfo`1<Defect> Defect { get; }
    public JsonTypeInfo`1<Defects> Defects { get; }
    public JsonTypeInfo`1<Statistic> Statistic { get; }
    public JsonTypeInfo`1<LaunchResponse> LaunchResponse { get; }
    public JsonTypeInfo`1<IList`1<LaunchResponse>> IListLaunchResponse { get; }
    public JsonTypeInfo`1<Page> Page { get; }
    public JsonTypeInfo`1<Content`1<LaunchResponse>> ContentLaunchResponse { get; }
    public JsonTypeInfo`1<LaunchCreatedResponse> LaunchCreatedResponse { get; }
    public JsonTypeInfo`1<LaunchFinishedResponse> LaunchFinishedResponse { get; }
    public JsonTypeInfo`1<TestItemType> TestItemType { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public JsonTypeInfo`1<KeyValuePair`2<string, string>> KeyValuePairStringString { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public JsonTypeInfo`1<IList`1<KeyValuePair`2<string, string>>> IListKeyValuePairStringString { get; }
    public JsonTypeInfo`1<StartTestItemRequest> StartTestItemRequest { get; }
    public JsonTypeInfo`1<Status> Status { get; }
    public JsonTypeInfo`1<ExternalSystemIssue> ExternalSystemIssue { get; }
    public JsonTypeInfo`1<IList`1<ExternalSystemIssue>> IListExternalSystemIssue { get; }
    public JsonTypeInfo`1<Issue> Issue { get; }
    public JsonTypeInfo`1<FinishTestItemRequest> FinishTestItemRequest { get; }
    public JsonTypeInfo`1<UpdateTestItemRequest> UpdateTestItemRequest { get; }
    public JsonTypeInfo`1<TestItemIssueUpdate> TestItemIssueUpdate { get; }
    public JsonTypeInfo`1<List`1<TestItemIssueUpdate>> ListTestItemIssueUpdate { get; }
    public JsonTypeInfo`1<AssignTestItemIssuesRequest> AssignTestItemIssuesRequest { get; }
    public JsonTypeInfo`1<Nullable`1<long>> NullableInt64 { get; }
    public JsonTypeInfo`1<IList`1<TestItemResponse>> IListTestItemResponse { get; }
    public JsonTypeInfo`1<LaunchPathNameModel> LaunchPathNameModel { get; }
    public JsonTypeInfo`1<ItemPathNameModel> ItemPathNameModel { get; }
    public JsonTypeInfo`1<IList`1<ItemPathNameModel>> IListItemPathNameModel { get; }
    public JsonTypeInfo`1<PathNames> PathNames { get; }
    public JsonTypeInfo`1<TestItemResponse> TestItemResponse { get; }
    public JsonTypeInfo`1<Content`1<TestItemResponse>> ContentTestItemResponse { get; }
    public JsonTypeInfo`1<TestItemCreatedResponse> TestItemCreatedResponse { get; }
    public JsonTypeInfo`1<IList`1<Issue>> IListIssue { get; }
    public JsonTypeInfo`1<TestItemHistoryContainer> TestItemHistoryContainer { get; }
    public JsonTypeInfo`1<IList`1<TestItemHistoryContainer>> IListTestItemHistoryContainer { get; }
    public JsonTypeInfo`1<Content`1<TestItemHistoryContainer>> ContentTestItemHistoryContainer { get; }
    public JsonTypeInfo`1<LogLevel> LogLevel { get; }
    public JsonTypeInfo`1<Byte[]> ByteArray { get; }
    public JsonTypeInfo`1<LogItemAttach> LogItemAttach { get; }
    public JsonTypeInfo`1<CreateLogItemRequest> CreateLogItemRequest { get; }
    public JsonTypeInfo`1<CreateLogItemRequest[]> CreateLogItemRequestArray { get; }
    public JsonTypeInfo`1<BinaryContent> BinaryContent { get; }
    public JsonTypeInfo`1<LogItemResponse> LogItemResponse { get; }
    public JsonTypeInfo`1<IList`1<LogItemResponse>> IListLogItemResponse { get; }
    public JsonTypeInfo`1<Content`1<LogItemResponse>> ContentLogItemResponse { get; }
    public JsonTypeInfo`1<LogItemCreatedResponse> LogItemCreatedResponse { get; }
    public JsonTypeInfo`1<IList`1<LogItemCreatedResponse>> IListLogItemCreatedResponse { get; }
    public JsonTypeInfo`1<LogItemsCreatedResponse> LogItemsCreatedResponse { get; }
    public JsonTypeInfo`1<FilterOperation> FilterOperation { get; }
    public JsonTypeInfo`1<Condition> Condition { get; }
    public JsonTypeInfo`1<IEnumerable`1<Condition>> IEnumerableCondition { get; }
    public JsonTypeInfo`1<FilterOrder> FilterOrder { get; }
    public JsonTypeInfo`1<IEnumerable`1<FilterOrder>> IEnumerableFilterOrder { get; }
    public JsonTypeInfo`1<UserFilterType> UserFilterType { get; }
    public JsonTypeInfo`1<CreateUserFilterRequest> CreateUserFilterRequest { get; }
    public JsonTypeInfo`1<UpdateUserFilterRequest> UpdateUserFilterRequest { get; }
    public JsonTypeInfo`1<IList`1<Condition>> IListCondition { get; }
    public JsonTypeInfo`1<IList`1<FilterOrder>> IListFilterOrder { get; }
    public JsonTypeInfo`1<UserFilterResponse> UserFilterResponse { get; }
    public JsonTypeInfo`1<IList`1<UserFilterResponse>> IListUserFilterResponse { get; }
    public JsonTypeInfo`1<Content`1<UserFilterResponse>> ContentUserFilterResponse { get; }
    public JsonTypeInfo`1<UserFilterCreatedResponse> UserFilterCreatedResponse { get; }
    public JsonTypeInfo`1<ProjectRole> ProjectRole { get; }
    public JsonTypeInfo`1<ProjectAssigment> ProjectAssigment { get; }
    public JsonTypeInfo`1<IDictionary`2<string, ProjectAssigment>> IDictionaryStringProjectAssigment { get; }
    public JsonTypeInfo`1<UserResponse> UserResponse { get; }
    public JsonTypeInfo`1<ProjectDefectSubType> ProjectDefectSubType { get; }
    public JsonTypeInfo`1<IList`1<ProjectDefectSubType>> IListProjectDefectSubType { get; }
    public JsonTypeInfo`1<ProjectDefectSubTypesContainer> ProjectDefectSubTypesContainer { get; }
    public JsonTypeInfo`1<ProjectConfiguration> ProjectConfiguration { get; }
    public JsonTypeInfo`1<ProjectResponse> ProjectResponse { get; }
    public JsonTypeInfo`1<PreferenceResponse> PreferenceResponse { get; }
    private static JsonSerializerOptions s_defaultOptions { get; }
    public static ClientSourceGenerationContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public ClientSourceGenerationContext(JsonSerializerOptions options);
    private static ClientSourceGenerationContext();
    public JsonTypeInfo`1<string> get_String();
    public JsonTypeInfo`1<LaunchMode> get_LaunchMode();
    public JsonTypeInfo`1<DateTime> get_DateTime();
    public JsonTypeInfo`1<bool> get_Boolean();
    public JsonTypeInfo`1<ItemAttribute> get_ItemAttribute();
    private static JsonPropertyInfo[] ItemAttributePropInit(JsonSerializerContext context);
    private static void ItemAttributeSerializeHandler(Utf8JsonWriter writer, ItemAttribute value);
    public JsonTypeInfo`1<IList`1<ItemAttribute>> get_IListItemAttribute();
    private static void IListItemAttributeSerializeHandler(Utf8JsonWriter writer, IList`1<ItemAttribute> value);
    public JsonTypeInfo`1<StartLaunchRequest> get_StartLaunchRequest();
    private static JsonPropertyInfo[] StartLaunchRequestPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<FinishLaunchRequest> get_FinishLaunchRequest();
    private static JsonPropertyInfo[] FinishLaunchRequestPropInit(JsonSerializerContext context);
    private static void FinishLaunchRequestSerializeHandler(Utf8JsonWriter writer, FinishLaunchRequest value);
    public JsonTypeInfo`1<List`1<ItemAttribute>> get_ListItemAttribute();
    private static void ListItemAttributeSerializeHandler(Utf8JsonWriter writer, List`1<ItemAttribute> value);
    public JsonTypeInfo`1<UpdateLaunchRequest> get_UpdateLaunchRequest();
    private static JsonPropertyInfo[] UpdateLaunchRequestPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<long> get_Int64();
    public JsonTypeInfo`1<AnalyzerMode> get_AnalyzerMode();
    public JsonTypeInfo`1<List`1<string>> get_ListString();
    private static void ListStringSerializeHandler(Utf8JsonWriter writer, List`1<string> value);
    public JsonTypeInfo`1<AnalyzeLaunchRequest> get_AnalyzeLaunchRequest();
    private static JsonPropertyInfo[] AnalyzeLaunchRequestPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<List`1<long>> get_ListInt64();
    private static void ListInt64SerializeHandler(Utf8JsonWriter writer, List`1<long> value);
    public JsonTypeInfo`1<MergeLaunchesRequest> get_MergeLaunchesRequest();
    private static JsonPropertyInfo[] MergeLaunchesRequestPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<MessageResponse> get_MessageResponse();
    private static JsonPropertyInfo[] MessageResponsePropInit(JsonSerializerContext context);
    private static void MessageResponseSerializeHandler(Utf8JsonWriter writer, MessageResponse value);
    public JsonTypeInfo`1<int> get_Int32();
    public JsonTypeInfo`1<Nullable`1<DateTime>> get_NullableDateTime();
    public JsonTypeInfo`1<Executions> get_Executions();
    private static JsonPropertyInfo[] ExecutionsPropInit(JsonSerializerContext context);
    private static void ExecutionsSerializeHandler(Utf8JsonWriter writer, Executions value);
    public JsonTypeInfo`1<Defect> get_Defect();
    private static JsonPropertyInfo[] DefectPropInit(JsonSerializerContext context);
    private static void DefectSerializeHandler(Utf8JsonWriter writer, Defect value);
    public JsonTypeInfo`1<Defects> get_Defects();
    private static JsonPropertyInfo[] DefectsPropInit(JsonSerializerContext context);
    private static void DefectsSerializeHandler(Utf8JsonWriter writer, Defects value);
    public JsonTypeInfo`1<Statistic> get_Statistic();
    private static JsonPropertyInfo[] StatisticPropInit(JsonSerializerContext context);
    private static void StatisticSerializeHandler(Utf8JsonWriter writer, Statistic value);
    public JsonTypeInfo`1<LaunchResponse> get_LaunchResponse();
    private static JsonPropertyInfo[] LaunchResponsePropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<IList`1<LaunchResponse>> get_IListLaunchResponse();
    private static void IListLaunchResponseSerializeHandler(Utf8JsonWriter writer, IList`1<LaunchResponse> value);
    public JsonTypeInfo`1<Page> get_Page();
    private static JsonPropertyInfo[] PagePropInit(JsonSerializerContext context);
    private static void PageSerializeHandler(Utf8JsonWriter writer, Page value);
    public JsonTypeInfo`1<Content`1<LaunchResponse>> get_ContentLaunchResponse();
    private static JsonPropertyInfo[] ContentLaunchResponsePropInit(JsonSerializerContext context);
    private static void ContentLaunchResponseSerializeHandler(Utf8JsonWriter writer, Content`1<LaunchResponse> value);
    public JsonTypeInfo`1<LaunchCreatedResponse> get_LaunchCreatedResponse();
    private static JsonPropertyInfo[] LaunchCreatedResponsePropInit(JsonSerializerContext context);
    private static void LaunchCreatedResponseSerializeHandler(Utf8JsonWriter writer, LaunchCreatedResponse value);
    public JsonTypeInfo`1<LaunchFinishedResponse> get_LaunchFinishedResponse();
    private static JsonPropertyInfo[] LaunchFinishedResponsePropInit(JsonSerializerContext context);
    private static void LaunchFinishedResponseSerializeHandler(Utf8JsonWriter writer, LaunchFinishedResponse value);
    public JsonTypeInfo`1<TestItemType> get_TestItemType();
    public JsonTypeInfo`1<KeyValuePair`2<string, string>> get_KeyValuePairStringString();
    private static JsonPropertyInfo[] KeyValuePairStringStringPropInit(JsonSerializerContext context);
    private static void KeyValuePairStringStringSerializeHandler(Utf8JsonWriter writer, KeyValuePair`2<string, string> value);
    private static JsonParameterInfoValues[] KeyValuePairStringStringCtorParamInit();
    public JsonTypeInfo`1<IList`1<KeyValuePair`2<string, string>>> get_IListKeyValuePairStringString();
    private static void IListKeyValuePairStringStringSerializeHandler(Utf8JsonWriter writer, IList`1<KeyValuePair`2<string, string>> value);
    public JsonTypeInfo`1<StartTestItemRequest> get_StartTestItemRequest();
    private static JsonPropertyInfo[] StartTestItemRequestPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<Status> get_Status();
    public JsonTypeInfo`1<ExternalSystemIssue> get_ExternalSystemIssue();
    private static JsonPropertyInfo[] ExternalSystemIssuePropInit(JsonSerializerContext context);
    private static void ExternalSystemIssueSerializeHandler(Utf8JsonWriter writer, ExternalSystemIssue value);
    public JsonTypeInfo`1<IList`1<ExternalSystemIssue>> get_IListExternalSystemIssue();
    private static void IListExternalSystemIssueSerializeHandler(Utf8JsonWriter writer, IList`1<ExternalSystemIssue> value);
    public JsonTypeInfo`1<Issue> get_Issue();
    private static JsonPropertyInfo[] IssuePropInit(JsonSerializerContext context);
    private static void IssueSerializeHandler(Utf8JsonWriter writer, Issue value);
    public JsonTypeInfo`1<FinishTestItemRequest> get_FinishTestItemRequest();
    private static JsonPropertyInfo[] FinishTestItemRequestPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<UpdateTestItemRequest> get_UpdateTestItemRequest();
    private static JsonPropertyInfo[] UpdateTestItemRequestPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<TestItemIssueUpdate> get_TestItemIssueUpdate();
    private static JsonPropertyInfo[] TestItemIssueUpdatePropInit(JsonSerializerContext context);
    private static void TestItemIssueUpdateSerializeHandler(Utf8JsonWriter writer, TestItemIssueUpdate value);
    public JsonTypeInfo`1<List`1<TestItemIssueUpdate>> get_ListTestItemIssueUpdate();
    private static void ListTestItemIssueUpdateSerializeHandler(Utf8JsonWriter writer, List`1<TestItemIssueUpdate> value);
    public JsonTypeInfo`1<AssignTestItemIssuesRequest> get_AssignTestItemIssuesRequest();
    private static JsonPropertyInfo[] AssignTestItemIssuesRequestPropInit(JsonSerializerContext context);
    private static void AssignTestItemIssuesRequestSerializeHandler(Utf8JsonWriter writer, AssignTestItemIssuesRequest value);
    public JsonTypeInfo`1<Nullable`1<long>> get_NullableInt64();
    public JsonTypeInfo`1<IList`1<TestItemResponse>> get_IListTestItemResponse();
    private static void IListTestItemResponseSerializeHandler(Utf8JsonWriter writer, IList`1<TestItemResponse> value);
    public JsonTypeInfo`1<LaunchPathNameModel> get_LaunchPathNameModel();
    private static JsonPropertyInfo[] LaunchPathNameModelPropInit(JsonSerializerContext context);
    private static void LaunchPathNameModelSerializeHandler(Utf8JsonWriter writer, LaunchPathNameModel value);
    public JsonTypeInfo`1<ItemPathNameModel> get_ItemPathNameModel();
    private static JsonPropertyInfo[] ItemPathNameModelPropInit(JsonSerializerContext context);
    private static void ItemPathNameModelSerializeHandler(Utf8JsonWriter writer, ItemPathNameModel value);
    public JsonTypeInfo`1<IList`1<ItemPathNameModel>> get_IListItemPathNameModel();
    private static void IListItemPathNameModelSerializeHandler(Utf8JsonWriter writer, IList`1<ItemPathNameModel> value);
    public JsonTypeInfo`1<PathNames> get_PathNames();
    private static JsonPropertyInfo[] PathNamesPropInit(JsonSerializerContext context);
    private static void PathNamesSerializeHandler(Utf8JsonWriter writer, PathNames value);
    public JsonTypeInfo`1<TestItemResponse> get_TestItemResponse();
    private static JsonPropertyInfo[] TestItemResponsePropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<Content`1<TestItemResponse>> get_ContentTestItemResponse();
    private static JsonPropertyInfo[] ContentTestItemResponsePropInit(JsonSerializerContext context);
    private static void ContentTestItemResponseSerializeHandler(Utf8JsonWriter writer, Content`1<TestItemResponse> value);
    public JsonTypeInfo`1<TestItemCreatedResponse> get_TestItemCreatedResponse();
    private static JsonPropertyInfo[] TestItemCreatedResponsePropInit(JsonSerializerContext context);
    private static void TestItemCreatedResponseSerializeHandler(Utf8JsonWriter writer, TestItemCreatedResponse value);
    public JsonTypeInfo`1<IList`1<Issue>> get_IListIssue();
    private static void IListIssueSerializeHandler(Utf8JsonWriter writer, IList`1<Issue> value);
    public JsonTypeInfo`1<TestItemHistoryContainer> get_TestItemHistoryContainer();
    private static JsonPropertyInfo[] TestItemHistoryContainerPropInit(JsonSerializerContext context);
    private static void TestItemHistoryContainerSerializeHandler(Utf8JsonWriter writer, TestItemHistoryContainer value);
    public JsonTypeInfo`1<IList`1<TestItemHistoryContainer>> get_IListTestItemHistoryContainer();
    private static void IListTestItemHistoryContainerSerializeHandler(Utf8JsonWriter writer, IList`1<TestItemHistoryContainer> value);
    public JsonTypeInfo`1<Content`1<TestItemHistoryContainer>> get_ContentTestItemHistoryContainer();
    private static JsonPropertyInfo[] ContentTestItemHistoryContainerPropInit(JsonSerializerContext context);
    private static void ContentTestItemHistoryContainerSerializeHandler(Utf8JsonWriter writer, Content`1<TestItemHistoryContainer> value);
    public JsonTypeInfo`1<LogLevel> get_LogLevel();
    public JsonTypeInfo`1<Byte[]> get_ByteArray();
    public JsonTypeInfo`1<LogItemAttach> get_LogItemAttach();
    private static JsonPropertyInfo[] LogItemAttachPropInit(JsonSerializerContext context);
    private static void LogItemAttachSerializeHandler(Utf8JsonWriter writer, LogItemAttach value);
    public JsonTypeInfo`1<CreateLogItemRequest> get_CreateLogItemRequest();
    private static JsonPropertyInfo[] CreateLogItemRequestPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<CreateLogItemRequest[]> get_CreateLogItemRequestArray();
    private static void CreateLogItemRequestArraySerializeHandler(Utf8JsonWriter writer, CreateLogItemRequest[] value);
    public JsonTypeInfo`1<BinaryContent> get_BinaryContent();
    private static JsonPropertyInfo[] BinaryContentPropInit(JsonSerializerContext context);
    private static void BinaryContentSerializeHandler(Utf8JsonWriter writer, BinaryContent value);
    public JsonTypeInfo`1<LogItemResponse> get_LogItemResponse();
    private static JsonPropertyInfo[] LogItemResponsePropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<IList`1<LogItemResponse>> get_IListLogItemResponse();
    private static void IListLogItemResponseSerializeHandler(Utf8JsonWriter writer, IList`1<LogItemResponse> value);
    public JsonTypeInfo`1<Content`1<LogItemResponse>> get_ContentLogItemResponse();
    private static JsonPropertyInfo[] ContentLogItemResponsePropInit(JsonSerializerContext context);
    private static void ContentLogItemResponseSerializeHandler(Utf8JsonWriter writer, Content`1<LogItemResponse> value);
    public JsonTypeInfo`1<LogItemCreatedResponse> get_LogItemCreatedResponse();
    private static JsonPropertyInfo[] LogItemCreatedResponsePropInit(JsonSerializerContext context);
    private static void LogItemCreatedResponseSerializeHandler(Utf8JsonWriter writer, LogItemCreatedResponse value);
    public JsonTypeInfo`1<IList`1<LogItemCreatedResponse>> get_IListLogItemCreatedResponse();
    private static void IListLogItemCreatedResponseSerializeHandler(Utf8JsonWriter writer, IList`1<LogItemCreatedResponse> value);
    public JsonTypeInfo`1<LogItemsCreatedResponse> get_LogItemsCreatedResponse();
    private static JsonPropertyInfo[] LogItemsCreatedResponsePropInit(JsonSerializerContext context);
    private static void LogItemsCreatedResponseSerializeHandler(Utf8JsonWriter writer, LogItemsCreatedResponse value);
    public JsonTypeInfo`1<FilterOperation> get_FilterOperation();
    public JsonTypeInfo`1<Condition> get_Condition();
    private static JsonPropertyInfo[] ConditionPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<IEnumerable`1<Condition>> get_IEnumerableCondition();
    private static void IEnumerableConditionSerializeHandler(Utf8JsonWriter writer, IEnumerable`1<Condition> value);
    public JsonTypeInfo`1<FilterOrder> get_FilterOrder();
    private static JsonPropertyInfo[] FilterOrderPropInit(JsonSerializerContext context);
    private static void FilterOrderSerializeHandler(Utf8JsonWriter writer, FilterOrder value);
    public JsonTypeInfo`1<IEnumerable`1<FilterOrder>> get_IEnumerableFilterOrder();
    private static void IEnumerableFilterOrderSerializeHandler(Utf8JsonWriter writer, IEnumerable`1<FilterOrder> value);
    public JsonTypeInfo`1<UserFilterType> get_UserFilterType();
    public JsonTypeInfo`1<CreateUserFilterRequest> get_CreateUserFilterRequest();
    private static JsonPropertyInfo[] CreateUserFilterRequestPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<UpdateUserFilterRequest> get_UpdateUserFilterRequest();
    private static JsonPropertyInfo[] UpdateUserFilterRequestPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<IList`1<Condition>> get_IListCondition();
    private static void IListConditionSerializeHandler(Utf8JsonWriter writer, IList`1<Condition> value);
    public JsonTypeInfo`1<IList`1<FilterOrder>> get_IListFilterOrder();
    private static void IListFilterOrderSerializeHandler(Utf8JsonWriter writer, IList`1<FilterOrder> value);
    public JsonTypeInfo`1<UserFilterResponse> get_UserFilterResponse();
    private static JsonPropertyInfo[] UserFilterResponsePropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<IList`1<UserFilterResponse>> get_IListUserFilterResponse();
    private static void IListUserFilterResponseSerializeHandler(Utf8JsonWriter writer, IList`1<UserFilterResponse> value);
    public JsonTypeInfo`1<Content`1<UserFilterResponse>> get_ContentUserFilterResponse();
    private static JsonPropertyInfo[] ContentUserFilterResponsePropInit(JsonSerializerContext context);
    private static void ContentUserFilterResponseSerializeHandler(Utf8JsonWriter writer, Content`1<UserFilterResponse> value);
    public JsonTypeInfo`1<UserFilterCreatedResponse> get_UserFilterCreatedResponse();
    private static JsonPropertyInfo[] UserFilterCreatedResponsePropInit(JsonSerializerContext context);
    private static void UserFilterCreatedResponseSerializeHandler(Utf8JsonWriter writer, UserFilterCreatedResponse value);
    public JsonTypeInfo`1<ProjectRole> get_ProjectRole();
    public JsonTypeInfo`1<ProjectAssigment> get_ProjectAssigment();
    private static JsonPropertyInfo[] ProjectAssigmentPropInit(JsonSerializerContext context);
    public JsonTypeInfo`1<IDictionary`2<string, ProjectAssigment>> get_IDictionaryStringProjectAssigment();
    private static void IDictionaryStringProjectAssigmentSerializeHandler(Utf8JsonWriter writer, IDictionary`2<string, ProjectAssigment> value);
    public JsonTypeInfo`1<UserResponse> get_UserResponse();
    private static JsonPropertyInfo[] UserResponsePropInit(JsonSerializerContext context);
    private static void UserResponseSerializeHandler(Utf8JsonWriter writer, UserResponse value);
    public JsonTypeInfo`1<ProjectDefectSubType> get_ProjectDefectSubType();
    private static JsonPropertyInfo[] ProjectDefectSubTypePropInit(JsonSerializerContext context);
    private static void ProjectDefectSubTypeSerializeHandler(Utf8JsonWriter writer, ProjectDefectSubType value);
    public JsonTypeInfo`1<IList`1<ProjectDefectSubType>> get_IListProjectDefectSubType();
    private static void IListProjectDefectSubTypeSerializeHandler(Utf8JsonWriter writer, IList`1<ProjectDefectSubType> value);
    public JsonTypeInfo`1<ProjectDefectSubTypesContainer> get_ProjectDefectSubTypesContainer();
    private static JsonPropertyInfo[] ProjectDefectSubTypesContainerPropInit(JsonSerializerContext context);
    private static void ProjectDefectSubTypesContainerSerializeHandler(Utf8JsonWriter writer, ProjectDefectSubTypesContainer value);
    public JsonTypeInfo`1<ProjectConfiguration> get_ProjectConfiguration();
    private static JsonPropertyInfo[] ProjectConfigurationPropInit(JsonSerializerContext context);
    private static void ProjectConfigurationSerializeHandler(Utf8JsonWriter writer, ProjectConfiguration value);
    public JsonTypeInfo`1<ProjectResponse> get_ProjectResponse();
    private static JsonPropertyInfo[] ProjectResponsePropInit(JsonSerializerContext context);
    private static void ProjectResponseSerializeHandler(Utf8JsonWriter writer, ProjectResponse value);
    public JsonTypeInfo`1<PreferenceResponse> get_PreferenceResponse();
    private static JsonPropertyInfo[] PreferenceResponsePropInit(JsonSerializerContext context);
    private static void PreferenceResponseSerializeHandler(Utf8JsonWriter writer, PreferenceResponse value);
    [CompilerGeneratedAttribute]
private static JsonSerializerOptions get_s_defaultOptions();
    public static ClientSourceGenerationContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private JsonConverter GetRuntimeProvidedCustomConverter(Type type);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
}
internal class ReportPortal.Client.Converters.JsonStringEnumConverterEx`1 : JsonConverter`1<TEnum> {
    private Dictionary`2<TEnum, string> _enumToString;
    private Dictionary`2<string, TEnum> _stringToEnum;
    public virtual TEnum Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, TEnum value, JsonSerializerOptions options);
}
internal class ReportPortal.Client.Converters.ModelSerializer : object {
    [AsyncStateMachineAttribute("ReportPortal.Client.Converters.ModelSerializer/<DeserializeAsync>d__0`1")]
public static Task`1<T> DeserializeAsync(Stream stream, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Converters.ModelSerializer/<SerializeAsync>d__1`1")]
public static Task SerializeAsync(object obj, Stream stream, CancellationToken cancellationToken);
}
[ExtensionAttribute]
internal static class ReportPortal.Client.Extensions.EnumDescription : object {
    [ExtensionAttribute]
public static string GetDescriptionAttribute(T source);
}
[ExtensionAttribute]
internal static class ReportPortal.Client.Extensions.UriExtensions : object {
    [ExtensionAttribute]
public static Uri Normalize(Uri uri);
}
public interface ReportPortal.Client.IHttpClientFactory {
    public abstract virtual HttpClient Create();
}
internal class ReportPortal.Client.Resources.ServiceAsyncLaunchResource : ServiceBaseResource {
    public ServiceAsyncLaunchResource(HttpClient httpClient, string project);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceAsyncLaunchResource/<StartAsync>d__1")]
public sealed virtual Task`1<LaunchCreatedResponse> StartAsync(StartLaunchRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceAsyncLaunchResource/<FinishAsync>d__2")]
public sealed virtual Task`1<LaunchFinishedResponse> FinishAsync(string uuid, FinishLaunchRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceAsyncLaunchResource/<MergeAsync>d__3")]
public sealed virtual Task`1<LaunchResponse> MergeAsync(MergeLaunchesRequest request, CancellationToken cancellationToken);
}
internal class ReportPortal.Client.Resources.ServiceAsyncLogItemResource : ServiceBaseResource {
    public ServiceAsyncLogItemResource(HttpClient httpClient, string project);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceAsyncLogItemResource/<CreateAsync>d__1")]
public sealed virtual Task`1<LogItemCreatedResponse> CreateAsync(CreateLogItemRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceAsyncLogItemResource/<CreateAsync>d__2")]
public sealed virtual Task`1<LogItemsCreatedResponse> CreateAsync(CreateLogItemRequest[] requests, CancellationToken cancellationToken);
}
internal class ReportPortal.Client.Resources.ServiceAsyncTestItemResource : ServiceBaseResource {
    public ServiceAsyncTestItemResource(HttpClient httpClient, string project);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceAsyncTestItemResource/<StartAsync>d__1")]
public sealed virtual Task`1<TestItemCreatedResponse> StartAsync(StartTestItemRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceAsyncTestItemResource/<StartAsync>d__2")]
public sealed virtual Task`1<TestItemCreatedResponse> StartAsync(string uuid, StartTestItemRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceAsyncTestItemResource/<FinishAsync>d__3")]
public sealed virtual Task`1<MessageResponse> FinishAsync(string uuid, FinishTestItemRequest request, CancellationToken cancellationToken);
}
internal abstract class ReportPortal.Client.Resources.ServiceBaseResource : object {
    [CompilerGeneratedAttribute]
private HttpClient <HttpClient>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    protected HttpClient HttpClient { get; }
    protected string ProjectName { get; }
    public ServiceBaseResource(HttpClient httpClient, string projectName);
    [CompilerGeneratedAttribute]
protected HttpClient get_HttpClient();
    [CompilerGeneratedAttribute]
protected string get_ProjectName();
    protected Task`1<TResponse> GetAsJsonAsync(string uri, CancellationToken cancellationToken);
    protected Task`1<TResponse> PostAsJsonAsync(string uri, TRequest request, CancellationToken cancellationToken);
    protected Task`1<TResponse> PutAsJsonAsync(string uri, TRequest request, CancellationToken cancellationToken);
    protected Task`1<TResponse> DeleteAsJsonAsync(string uri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceBaseResource/<SendAsJsonAsync>d__11`2")]
private Task`1<TResponse> SendAsJsonAsync(HttpMethod httpMethod, string uri, TRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceBaseResource/<SendHttpRequestAsync>d__12`1")]
protected Task`1<TResponse> SendHttpRequestAsync(HttpMethod httpMethod, string uri, HttpContent httpContent, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceBaseResource/<GetAsBytesAsync>d__13")]
protected Task`1<Byte[]> GetAsBytesAsync(string uri, CancellationToken cancellationToken);
    private void CheckSuccessStatusCode(HttpResponseMessage response, Stream stream);
}
internal class ReportPortal.Client.Resources.ServiceLaunchResource : ServiceBaseResource {
    public ServiceLaunchResource(HttpClient httpClient, string project);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<GetAsync>d__1")]
public sealed virtual Task`1<LaunchResponse> GetAsync(string uuid, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<GetAsync>d__2")]
public sealed virtual Task`1<LaunchResponse> GetAsync(long id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<StartAsync>d__3")]
public sealed virtual Task`1<LaunchCreatedResponse> StartAsync(StartLaunchRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<FinishAsync>d__4")]
public sealed virtual Task`1<LaunchFinishedResponse> FinishAsync(string uuid, FinishLaunchRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<StopAsync>d__5")]
public sealed virtual Task`1<LaunchFinishedResponse> StopAsync(long id, FinishLaunchRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<DeleteAsync>d__6")]
public sealed virtual Task`1<MessageResponse> DeleteAsync(long id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<MergeAsync>d__7")]
public sealed virtual Task`1<LaunchResponse> MergeAsync(MergeLaunchesRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<UpdateAsync>d__8")]
public sealed virtual Task`1<MessageResponse> UpdateAsync(long id, UpdateLaunchRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<AnalyzeAsync>d__9")]
public sealed virtual Task`1<MessageResponse> AnalyzeAsync(AnalyzeLaunchRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<GetAsync>d__10")]
public sealed virtual Task`1<Content`1<LaunchResponse>> GetAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<GetAsync>d__11")]
public sealed virtual Task`1<Content`1<LaunchResponse>> GetAsync(FilterOption filterOption, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<GetDebugAsync>d__12")]
public sealed virtual Task`1<Content`1<LaunchResponse>> GetDebugAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLaunchResource/<GetDebugAsync>d__13")]
public sealed virtual Task`1<Content`1<LaunchResponse>> GetDebugAsync(FilterOption filterOption, CancellationToken cancellationToken);
}
internal class ReportPortal.Client.Resources.ServiceLogItemResource : ServiceBaseResource {
    public ServiceLogItemResource(HttpClient httpClient, string project);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLogItemResource/<GetAsync>d__1")]
public sealed virtual Task`1<Content`1<LogItemResponse>> GetAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLogItemResource/<GetAsync>d__2")]
public sealed virtual Task`1<Content`1<LogItemResponse>> GetAsync(FilterOption filterOption, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLogItemResource/<GetAsync>d__3")]
public sealed virtual Task`1<LogItemResponse> GetAsync(string uuid, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLogItemResource/<GetAsync>d__4")]
public sealed virtual Task`1<LogItemResponse> GetAsync(long id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLogItemResource/<GetBinaryDataAsync>d__5")]
public sealed virtual Task`1<Byte[]> GetBinaryDataAsync(string id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLogItemResource/<CreateAsync>d__6")]
public sealed virtual Task`1<LogItemCreatedResponse> CreateAsync(CreateLogItemRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLogItemResource/<CreateAsync>d__7")]
public sealed virtual Task`1<LogItemsCreatedResponse> CreateAsync(CreateLogItemRequest[] requests, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceLogItemResource/<DeleteAsync>d__8")]
public sealed virtual Task`1<MessageResponse> DeleteAsync(long id, CancellationToken cancellationToken);
}
internal class ReportPortal.Client.Resources.ServiceProjectResource : ServiceBaseResource {
    public ServiceProjectResource(HttpClient httpClient, string project);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceProjectResource/<GetAsync>d__1")]
public sealed virtual Task`1<ProjectResponse> GetAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceProjectResource/<GetAsync>d__2")]
public sealed virtual Task`1<ProjectResponse> GetAsync(string projectName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceProjectResource/<UpdatePreferencesAsync>d__3")]
public sealed virtual Task`1<MessageResponse> UpdatePreferencesAsync(string projectName, string userName, long filterId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceProjectResource/<GetAllPreferencesAsync>d__4")]
public sealed virtual Task`1<PreferenceResponse> GetAllPreferencesAsync(string projectName, string userName, CancellationToken cancellationToken);
}
internal class ReportPortal.Client.Resources.ServiceTestItemResource : ServiceBaseResource {
    public ServiceTestItemResource(HttpClient httpClient, string project);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceTestItemResource/<GetAsync>d__1")]
public sealed virtual Task`1<Content`1<TestItemResponse>> GetAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceTestItemResource/<GetAsync>d__2")]
public sealed virtual Task`1<Content`1<TestItemResponse>> GetAsync(FilterOption filterOption, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceTestItemResource/<GetAsync>d__3")]
public sealed virtual Task`1<TestItemResponse> GetAsync(long id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceTestItemResource/<GetAsync>d__4")]
public sealed virtual Task`1<TestItemResponse> GetAsync(string uuid, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceTestItemResource/<StartAsync>d__5")]
public sealed virtual Task`1<TestItemCreatedResponse> StartAsync(StartTestItemRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceTestItemResource/<StartAsync>d__6")]
public sealed virtual Task`1<TestItemCreatedResponse> StartAsync(string uuid, StartTestItemRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceTestItemResource/<FinishAsync>d__7")]
public sealed virtual Task`1<MessageResponse> FinishAsync(string uuid, FinishTestItemRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceTestItemResource/<UpdateAsync>d__8")]
public sealed virtual Task`1<MessageResponse> UpdateAsync(long id, UpdateTestItemRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceTestItemResource/<DeleteAsync>d__9")]
public sealed virtual Task`1<MessageResponse> DeleteAsync(long id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceTestItemResource/<AssignIssuesAsync>d__10")]
public sealed virtual Task`1<IList`1<Issue>> AssignIssuesAsync(AssignTestItemIssuesRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceTestItemResource/<GetHistoryAsync>d__11")]
public sealed virtual Task`1<Content`1<TestItemHistoryContainer>> GetHistoryAsync(long id, int depth, CancellationToken cancellationToken);
}
internal class ReportPortal.Client.Resources.ServiceUserFilterResource : ServiceBaseResource {
    public ServiceUserFilterResource(HttpClient httpClient, string project);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceUserFilterResource/<GetAsync>d__1")]
public sealed virtual Task`1<Content`1<UserFilterResponse>> GetAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceUserFilterResource/<GetAsync>d__2")]
public sealed virtual Task`1<Content`1<UserFilterResponse>> GetAsync(FilterOption filterOption, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceUserFilterResource/<CreateAsync>d__3")]
public sealed virtual Task`1<UserFilterCreatedResponse> CreateAsync(CreateUserFilterRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceUserFilterResource/<UpdateAsync>d__4")]
public sealed virtual Task`1<MessageResponse> UpdateAsync(long id, UpdateUserFilterRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceUserFilterResource/<GetAsync>d__5")]
public sealed virtual Task`1<UserFilterResponse> GetAsync(long id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceUserFilterResource/<DeleteAsync>d__6")]
public sealed virtual Task`1<MessageResponse> DeleteAsync(long id, CancellationToken cancellationToken);
}
internal class ReportPortal.Client.Resources.ServiceUserResource : ServiceBaseResource {
    public ServiceUserResource(HttpClient httpClient, string project);
    [AsyncStateMachineAttribute("ReportPortal.Client.Resources.ServiceUserResource/<GetAsync>d__1")]
public sealed virtual Task`1<UserResponse> GetAsync(CancellationToken cancellationToken);
}
public class ReportPortal.Client.Service : object {
    private HttpClient _httpClient;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private ILaunchResource <Launch>k__BackingField;
    [CompilerGeneratedAttribute]
private IAsyncLaunchResource <AsyncLaunch>k__BackingField;
    [CompilerGeneratedAttribute]
private ITestItemResource <TestItem>k__BackingField;
    [CompilerGeneratedAttribute]
private IAsyncTestItemResource <AsyncTestItem>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogItemResource <LogItem>k__BackingField;
    [CompilerGeneratedAttribute]
private IAsyncLogItemResource <AsyncLogItem>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserResource <User>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserFilterResource <UserFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectResource <Project>k__BackingField;
    public string ProjectName { get; }
    public ILaunchResource Launch { get; }
    public IAsyncLaunchResource AsyncLaunch { get; }
    public ITestItemResource TestItem { get; }
    public IAsyncTestItemResource AsyncTestItem { get; }
    public ILogItemResource LogItem { get; }
    public IAsyncLogItemResource AsyncLogItem { get; }
    public IUserResource User { get; }
    public IUserFilterResource UserFilter { get; }
    public IProjectResource Project { get; }
    private static Service();
    public Service(Uri uri, string projectName, string token, IHttpClientFactory httpClientFactory);
    private static Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public sealed virtual ILaunchResource get_Launch();
    [CompilerGeneratedAttribute]
public sealed virtual IAsyncLaunchResource get_AsyncLaunch();
    [CompilerGeneratedAttribute]
public sealed virtual ITestItemResource get_TestItem();
    [CompilerGeneratedAttribute]
public sealed virtual IAsyncTestItemResource get_AsyncTestItem();
    [CompilerGeneratedAttribute]
public sealed virtual ILogItemResource get_LogItem();
    [CompilerGeneratedAttribute]
public sealed virtual IAsyncLogItemResource get_AsyncLogItem();
    [CompilerGeneratedAttribute]
public sealed virtual IUserResource get_User();
    [CompilerGeneratedAttribute]
public sealed virtual IUserFilterResource get_UserFilter();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectResource get_Project();
    public sealed virtual void Dispose();
}
public class ReportPortal.Client.ServiceException : Exception {
    private string _message;
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RequestUri>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMethod <HttpMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseBody>k__BackingField;
    public HttpStatusCode HttpStatusCode { get; }
    public Uri RequestUri { get; }
    public HttpMethod HttpMethod { get; }
    public string ResponseBody { get; }
    public string Message { get; }
    public ServiceException(string message, HttpStatusCode httpStatusCode, Uri requestUri, HttpMethod httpMethod, string responseBody);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_HttpStatusCode();
    [CompilerGeneratedAttribute]
public Uri get_RequestUri();
    [CompilerGeneratedAttribute]
public HttpMethod get_HttpMethod();
    [CompilerGeneratedAttribute]
public string get_ResponseBody();
    public virtual string get_Message();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
