[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Respawn.DbAdapter : object {
    public static IDbAdapter SqlServer;
    public static IDbAdapter Postgres;
    public static IDbAdapter MySql;
    public static IDbAdapter Oracle;
    public static IDbAdapter Informix;
    private static DbAdapter();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Respawn.Graph.GraphBuilder : object {
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<Table> <ToDelete>k__BackingField;
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<Relationship> <CyclicalTableRelationships>k__BackingField;
    public ReadOnlyCollection`1<Table> ToDelete { get; }
    public ReadOnlyCollection`1<Relationship> CyclicalTableRelationships { get; }
    public GraphBuilder(HashSet`1<Table> tables, HashSet`1<Relationship> relationships);
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<Table> get_ToDelete();
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<Relationship> get_CyclicalTableRelationships();
    private static void FillRelationships(HashSet`1<Table> tables, HashSet`1<Relationship> relationships);
    private static ValueTuple`2<HashSet`1<Relationship>, Stack`1<Table>> FindAndRemoveCycles(HashSet`1<Table> allTables);
    private static bool HasCycles(Table table, HashSet`1<Table> notVisited, HashSet`1<Table> visiting, HashSet`1<Table> visited, Stack`1<Table> toDelete, HashSet`1<Relationship> cyclicalRelationships);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Respawn.Graph.Relationship : object {
    [CompilerGeneratedAttribute]
private Table <ParentTable>k__BackingField;
    [CompilerGeneratedAttribute]
private Table <ReferencedTable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public Table ParentTable { get; public set; }
    public Table ReferencedTable { get; public set; }
    public string Name { get; public set; }
    public Relationship(Table ParentTable, Table ReferencedTable, string Name);
    [CompilerGeneratedAttribute]
protected Relationship(Relationship original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Table get_ParentTable();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ParentTable(Table value);
    [CompilerGeneratedAttribute]
public Table get_ReferencedTable();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ReferencedTable(Table value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(Relationship left, Relationship right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(Relationship left, Relationship right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(Relationship other);
    [CompilerGeneratedAttribute]
public virtual Relationship <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Table& ParentTable, Table& ReferencedTable, String& Name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Respawn.Graph.Table : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<Relationship> <Relationships>k__BackingField;
    [NullableAttribute("2")]
public string Schema { get; }
    public string Name { get; }
    public HashSet`1<Relationship> Relationships { get; }
    public Table(string name);
    public Table(string schema, string name);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Schema();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public HashSet`1<Relationship> get_Relationships();
    public string GetFullName(char quoteIdentifier);
    public static Table op_Implicit(string name);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Table other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("2")]
public static bool op_Equality(Table left, Table right);
    [NullableContextAttribute("2")]
public static bool op_Inequality(Table left, Table right);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Respawn.Graph.TemporalTable : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <HistoryTableSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HistoryTableName>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [NullableAttribute("2")]
public string Schema { get; public set; }
    public string Name { get; public set; }
    [NullableAttribute("2")]
public string HistoryTableSchema { get; public set; }
    public string HistoryTableName { get; public set; }
    public TemporalTable(string Schema, string Name, string HistoryTableSchema, string HistoryTableName);
    [CompilerGeneratedAttribute]
protected TemporalTable(TemporalTable original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Schema();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Schema(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_HistoryTableSchema();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HistoryTableSchema(string value);
    [CompilerGeneratedAttribute]
public string get_HistoryTableName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HistoryTableName(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TemporalTable left, TemporalTable right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TemporalTable left, TemporalTable right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TemporalTable other);
    [CompilerGeneratedAttribute]
public virtual TemporalTable <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Schema, String& Name, String& HistoryTableSchema, String& HistoryTableName);
}
[NullableContextAttribute("1")]
public interface Respawn.IDbAdapter {
    public abstract virtual string BuildTableCommandText(RespawnerOptions options);
    public abstract virtual string BuildTemporalTableCommandText(RespawnerOptions options);
    public abstract virtual string BuildRelationshipCommandText(RespawnerOptions options);
    public abstract virtual string BuildDeleteCommandText(GraphBuilder builder);
    public abstract virtual string BuildReseedSql(IEnumerable`1<Table> tablesToDelete);
    public abstract virtual string BuildTurnOffSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOffSystemVersioning);
    public abstract virtual string BuildTurnOnSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOnSystemVersioning);
    public virtual Task`1<bool> CheckSupportsTemporalTables(DbConnection connection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Respawn.InformixDbAdapter : object {
    private static char QuoteCharacter;
    public sealed virtual string BuildTableCommandText(RespawnerOptions options);
    public sealed virtual string BuildRelationshipCommandText(RespawnerOptions options);
    public sealed virtual string BuildDeleteCommandText(GraphBuilder graph);
    public sealed virtual string BuildReseedSql(IEnumerable`1<Table> tablesToDelete);
    public sealed virtual string BuildTemporalTableCommandText(RespawnerOptions options);
    public sealed virtual string BuildTurnOffSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOffSystemVersioning);
    public sealed virtual string BuildTurnOnSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOnSystemVersioning);
    public sealed virtual Task`1<bool> CheckSupportsTemporalTables(DbConnection connection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Respawn.MySqlAdapter : object {
    private static char QuoteCharacter;
    public sealed virtual string BuildTableCommandText(RespawnerOptions options);
    public sealed virtual string BuildRelationshipCommandText(RespawnerOptions options);
    public sealed virtual string BuildDeleteCommandText(GraphBuilder graph);
    public sealed virtual string BuildReseedSql(IEnumerable`1<Table> tablesToDelete);
    public sealed virtual string BuildTemporalTableCommandText(RespawnerOptions options);
    public sealed virtual string BuildTurnOffSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOffSystemVersioning);
    public sealed virtual string BuildTurnOnSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOnSystemVersioning);
    public sealed virtual Task`1<bool> CheckSupportsTemporalTables(DbConnection connection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Respawn.OracleDbAdapter : object {
    private static char QuoteCharacter;
    public sealed virtual string BuildTableCommandText(RespawnerOptions options);
    public sealed virtual string BuildRelationshipCommandText(RespawnerOptions options);
    public sealed virtual string BuildDeleteCommandText(GraphBuilder graph);
    [IteratorStateMachineAttribute("Respawn.OracleDbAdapter/<BuildCommands>d__4")]
private static IEnumerable`1<string> BuildCommands(GraphBuilder graph);
    public sealed virtual string BuildReseedSql(IEnumerable`1<Table> tablesToDelete);
    public sealed virtual string BuildTemporalTableCommandText(RespawnerOptions options);
    public sealed virtual string BuildTurnOffSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOffSystemVersioning);
    public sealed virtual string BuildTurnOnSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOnSystemVersioning);
    public sealed virtual Task`1<bool> CheckSupportsTemporalTables(DbConnection connection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Respawn.PostgresDbAdapter : object {
    private static char QuoteCharacter;
    private static string InformationSchema;
    private static string PostgresSchemaPrefix;
    public sealed virtual string BuildTableCommandText(RespawnerOptions options);
    public sealed virtual string BuildRelationshipCommandText(RespawnerOptions options);
    public sealed virtual string BuildDeleteCommandText(GraphBuilder graph);
    public sealed virtual string BuildReseedSql(IEnumerable`1<Table> tablesToDelete);
    public sealed virtual string BuildTemporalTableCommandText(RespawnerOptions options);
    public sealed virtual string BuildTurnOffSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOffSystemVersioning);
    public sealed virtual string BuildTurnOnSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOnSystemVersioning);
    public sealed virtual Task`1<bool> CheckSupportsTemporalTables(DbConnection connection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Respawn.Respawner : object {
    private IList`1<TemporalTable> _temporalTables;
    [CompilerGeneratedAttribute]
private RespawnerOptions <Options>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DeleteSql>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ReseedSql>k__BackingField;
    public RespawnerOptions Options { get; }
    [NullableAttribute("2")]
public string DeleteSql { get; private set; }
    [NullableAttribute("2")]
public string ReseedSql { get; private set; }
    private Respawner(RespawnerOptions options);
    [CompilerGeneratedAttribute]
public RespawnerOptions get_Options();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DeleteSql();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_DeleteSql(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ReseedSql();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_ReseedSql(string value);
    [AsyncStateMachineAttribute("Respawn.Respawner/<CreateAsync>d__13")]
public static Task`1<Respawner> CreateAsync(string nameOrConnectionString, RespawnerOptions options);
    [AsyncStateMachineAttribute("Respawn.Respawner/<CreateAsync>d__14")]
public static Task`1<Respawner> CreateAsync(DbConnection connection, RespawnerOptions options);
    [AsyncStateMachineAttribute("Respawn.Respawner/<ResetAsync>d__15")]
public virtual Task ResetAsync(string nameOrConnectionString);
    [AsyncStateMachineAttribute("Respawn.Respawner/<ResetAsync>d__16")]
public virtual Task ResetAsync(DbConnection connection);
    [AsyncStateMachineAttribute("Respawn.Respawner/<ExecuteAlterSystemVersioningAsync>d__17")]
private Task ExecuteAlterSystemVersioningAsync(DbConnection connection, string commandText);
    [AsyncStateMachineAttribute("Respawn.Respawner/<ExecuteDeleteSqlAsync>d__18")]
private Task ExecuteDeleteSqlAsync(DbConnection connection);
    [AsyncStateMachineAttribute("Respawn.Respawner/<BuildDeleteTables>d__19")]
private Task BuildDeleteTables(DbConnection connection);
    [AsyncStateMachineAttribute("Respawn.Respawner/<GetRelationships>d__20")]
private Task`1<HashSet`1<Relationship>> GetRelationships(DbConnection connection);
    [AsyncStateMachineAttribute("Respawn.Respawner/<GetAllTables>d__21")]
private Task`1<HashSet`1<Table>> GetAllTables(DbConnection connection);
    [AsyncStateMachineAttribute("Respawn.Respawner/<GetAllTemporalTables>d__22")]
private Task`1<IList`1<TemporalTable>> GetAllTemporalTables(DbConnection connection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Respawn.RespawnerOptions : object {
    [CompilerGeneratedAttribute]
private Table[] <TablesToIgnore>k__BackingField;
    [CompilerGeneratedAttribute]
private Table[] <TablesToInclude>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <SchemasToInclude>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <SchemasToExclude>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CheckTemporalTables>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WithReseed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CommandTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private IDbAdapter <DbAdapter>k__BackingField;
    public Table[] TablesToIgnore { get; public set; }
    public Table[] TablesToInclude { get; public set; }
    public String[] SchemasToInclude { get; public set; }
    public String[] SchemasToExclude { get; public set; }
    public bool CheckTemporalTables { get; public set; }
    public bool WithReseed { get; public set; }
    public Nullable`1<int> CommandTimeout { get; public set; }
    public IDbAdapter DbAdapter { get; public set; }
    [CompilerGeneratedAttribute]
public Table[] get_TablesToIgnore();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TablesToIgnore(Table[] value);
    [CompilerGeneratedAttribute]
public Table[] get_TablesToInclude();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TablesToInclude(Table[] value);
    [CompilerGeneratedAttribute]
public String[] get_SchemasToInclude();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SchemasToInclude(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_SchemasToExclude();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SchemasToExclude(String[] value);
    [CompilerGeneratedAttribute]
public bool get_CheckTemporalTables();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CheckTemporalTables(bool value);
    [CompilerGeneratedAttribute]
public bool get_WithReseed();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WithReseed(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CommandTimeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CommandTimeout(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IDbAdapter get_DbAdapter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DbAdapter(IDbAdapter value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Respawn.SqlServerDbAdapter : object {
    private static char QuoteCharacter;
    private Nullable`1<byte> _compatibilityLevel;
    private Nullable`1<int> _engineEdition;
    public sealed virtual string BuildTableCommandText(RespawnerOptions options);
    public sealed virtual string BuildRelationshipCommandText(RespawnerOptions options);
    public sealed virtual string BuildDeleteCommandText(GraphBuilder graph);
    public sealed virtual string BuildReseedSql(IEnumerable`1<Table> tablesToDelete);
    public sealed virtual string BuildTemporalTableCommandText(RespawnerOptions options);
    public sealed virtual string BuildTurnOffSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOffSystemVersioning);
    public sealed virtual string BuildTurnOnSystemVersioningCommandText(IEnumerable`1<TemporalTable> tablesToTurnOnSystemVersioning);
    [AsyncStateMachineAttribute("Respawn.SqlServerDbAdapter/<CheckSupportsTemporalTables>d__10")]
public sealed virtual Task`1<bool> CheckSupportsTemporalTables(DbConnection connection);
    [AsyncStateMachineAttribute("Respawn.SqlServerDbAdapter/<GetEngineEdition>d__11")]
private static Task`1<int> GetEngineEdition(DbConnection connection);
    [AsyncStateMachineAttribute("Respawn.SqlServerDbAdapter/<GetCompatibilityLevel>d__12")]
private static Task`1<byte> GetCompatibilityLevel(DbConnection connection);
}
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
