[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class RestSharp.AsyncHelpers : object {
    public static void RunSync(Func`1<Task> task);
    public static T RunSync(Func`1<Task`1<T>> task);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class RestSharp.Authenticators.AuthenticatorBase : object {
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    protected string Token { get; protected set; }
    protected AuthenticatorBase(string token);
    [CompilerGeneratedAttribute]
protected string get_Token();
    [CompilerGeneratedAttribute]
protected void set_Token(string value);
    protected abstract virtual ValueTask`1<Parameter> GetAuthenticationParameter(string accessToken);
    [AsyncStateMachineAttribute("RestSharp.Authenticators.AuthenticatorBase/<Authenticate>d__6")]
public sealed virtual ValueTask Authenticate(IRestClient client, RestRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.Authenticators.HttpBasicAuthenticator : AuthenticatorBase {
    public HttpBasicAuthenticator(string username, string password);
    public HttpBasicAuthenticator(string username, string password, Encoding encoding);
    private static string GetHeader(string username, string password, Encoding encoding);
    protected virtual ValueTask`1<Parameter> GetAuthenticationParameter(string accessToken);
}
[NullableContextAttribute("1")]
public interface RestSharp.Authenticators.IAuthenticator {
    public abstract virtual ValueTask Authenticate(IRestClient client, RestRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.Authenticators.JwtAuthenticator : AuthenticatorBase {
    public JwtAuthenticator(string accessToken);
    public void SetBearerToken(string accessToken);
    private static string GetToken(string accessToken);
    protected virtual ValueTask`1<Parameter> GetAuthenticationParameter(string accessToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class RestSharp.Authenticators.OAuth.Extensions.OAuthExtensions : object {
    [ExtensionAttribute]
public static string ToRequestValue(OAuthSignatureMethod signatureMethod);
    [ExtensionAttribute]
public static string HashWith(string input, HashAlgorithm algorithm);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class RestSharp.Authenticators.OAuth.Extensions.StringExtensions : object {
    [ExtensionAttribute]
public static bool EqualsIgnoreCase(string left, string right);
    [ExtensionAttribute]
public static string Then(string input, string value);
    [ExtensionAttribute]
public static Uri AsUri(string value);
    [ExtensionAttribute]
public static Byte[] GetBytes(string input);
    [ExtensionAttribute]
public static string PercentEncode(string s);
}
[ExtensionAttribute]
internal static class RestSharp.Authenticators.OAuth.Extensions.TimeExtensions : object {
    [ExtensionAttribute]
public static long ToUnixTime(DateTime dateTime);
}
public enum RestSharp.Authenticators.OAuth.OAuthParameterHandling : Enum {
    public int value__;
    public static OAuthParameterHandling HttpAuthorizationHeader;
    public static OAuthParameterHandling UrlOrPostParameters;
}
public enum RestSharp.Authenticators.OAuth.OAuthSignatureMethod : Enum {
    public int value__;
    public static OAuthSignatureMethod HmacSha1;
    public static OAuthSignatureMethod HmacSha256;
    public static OAuthSignatureMethod PlainText;
    public static OAuthSignatureMethod RsaSha1;
}
public enum RestSharp.Authenticators.OAuth.OAuthSignatureTreatment : Enum {
    public int value__;
    public static OAuthSignatureTreatment Escaped;
    public static OAuthSignatureTreatment Unescaped;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class RestSharp.Authenticators.OAuth.OAuthTools : object {
    private static string AlphaNumeric;
    private static string Digit;
    private static string Lower;
    private static string Unreserved;
    private static string Upper;
    private static Random Random;
    private static object RandomLock;
    private static RandomNumberGenerator Rng;
    private static Encoding Encoding;
    private static String[] UriRfc3986CharsToEscape;
    private static String[] UriRfc3968EscapedHex;
    private static OAuthTools();
    public static string GetNonce();
    public static string GetTimestamp();
    private static string GetTimestamp(DateTime dateTime);
    [NullableContextAttribute("2")]
public static string UrlEncodeRelaxed(string value);
    [NullableContextAttribute("2")]
public static string UrlEncodeStrict(string value);
    private static string NormalizeRequestParameters(WebPairCollection parameters);
    internal static IEnumerable`1<string> SortParametersExcludingSignature(WebPairCollection parameters);
    private static string ConstructRequestUrl(Uri url);
    public static string ConcatenateRequestElements(string method, string url, WebPairCollection parameters);
    public static string GetSignature(OAuthSignatureMethod signatureMethod, string signatureBase, string consumerSecret);
    public static string GetSignature(OAuthSignatureMethod signatureMethod, OAuthSignatureTreatment signatureTreatment, string signatureBase, string consumerSecret);
    public static string GetSignature(OAuthSignatureMethod signatureMethod, OAuthSignatureTreatment signatureTreatment, string signatureBase, string consumerSecret, string tokenSecret);
    private static string GetHmacSignature(KeyedHashAlgorithm crypto, string consumerSecret, string tokenSecret, string signatureBase);
    [CompilerGeneratedAttribute]
internal static string <GetSignature>g__GetRsaSignature|23_0(<>c__DisplayClass23_0& );
}
public enum RestSharp.Authenticators.OAuth.OAuthType : Enum {
    public int value__;
    public static OAuthType RequestToken;
    public static OAuthType AccessToken;
    public static OAuthType ProtectedResource;
    public static OAuthType ClientAuthentication;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class RestSharp.Authenticators.OAuth.OAuthWorkflow : object {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CallbackUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Verifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthSignatureMethod <SignatureMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthSignatureTreatment <SignatureTreatment>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthParameterHandling <ParameterHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestTokenUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessTokenUrl>k__BackingField;
    public string Version { get; public set; }
    public string ConsumerKey { get; public set; }
    public string ConsumerSecret { get; public set; }
    public string Token { get; public set; }
    public string TokenSecret { get; public set; }
    public string CallbackUrl { get; public set; }
    public string Verifier { get; public set; }
    public string SessionHandle { get; public set; }
    public OAuthSignatureMethod SignatureMethod { get; public set; }
    public OAuthSignatureTreatment SignatureTreatment { get; public set; }
    public OAuthParameterHandling ParameterHandling { get; public set; }
    public string ClientUsername { get; public set; }
    public string ClientPassword { get; public set; }
    public string RequestTokenUrl { get; public set; }
    public string AccessTokenUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ConsumerKey();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConsumerKey(string value);
    [CompilerGeneratedAttribute]
public string get_ConsumerSecret();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConsumerSecret(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Token(string value);
    [CompilerGeneratedAttribute]
public string get_TokenSecret();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TokenSecret(string value);
    [CompilerGeneratedAttribute]
public string get_CallbackUrl();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CallbackUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Verifier();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Verifier(string value);
    [CompilerGeneratedAttribute]
public string get_SessionHandle();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SessionHandle(string value);
    [CompilerGeneratedAttribute]
public OAuthSignatureMethod get_SignatureMethod();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SignatureMethod(OAuthSignatureMethod value);
    [CompilerGeneratedAttribute]
public OAuthSignatureTreatment get_SignatureTreatment();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SignatureTreatment(OAuthSignatureTreatment value);
    [CompilerGeneratedAttribute]
public OAuthParameterHandling get_ParameterHandling();
    [CompilerGeneratedAttribute]
public void set_ParameterHandling(OAuthParameterHandling value);
    [CompilerGeneratedAttribute]
public string get_ClientUsername();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ClientUsername(string value);
    [CompilerGeneratedAttribute]
public string get_ClientPassword();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ClientPassword(string value);
    [CompilerGeneratedAttribute]
public string get_RequestTokenUrl();
    [CompilerGeneratedAttribute]
public void set_RequestTokenUrl(string value);
    [CompilerGeneratedAttribute]
public string get_AccessTokenUrl();
    [CompilerGeneratedAttribute]
public void set_AccessTokenUrl(string value);
    [NullableContextAttribute("1")]
public OAuthParameters BuildRequestTokenInfo(string method, WebPairCollection parameters);
    [NullableContextAttribute("1")]
public OAuthParameters BuildAccessTokenSignature(string method, WebPairCollection parameters);
    [NullableContextAttribute("1")]
public OAuthParameters BuildClientAuthAccessTokenSignature(string method, WebPairCollection parameters);
    [NullableContextAttribute("1")]
public OAuthParameters BuildProtectedResourceSignature(string method, WebPairCollection parameters, string url);
    private void ValidateTokenRequestState();
    private void ValidateAccessRequestState();
    private void ValidateClientAuthAccessRequestState();
    private void ValidateProtectedResourceState();
    [NullableContextAttribute("1")]
private WebPairCollection GenerateAuthParameters(string timestamp, string nonce);
    [NullableContextAttribute("1")]
private WebPairCollection GenerateXAuthParameters(string timestamp, string nonce);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class RestSharp.Authenticators.OAuth.WebPair : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <WebValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static WebPairComparer <Comparer>k__BackingField;
    public string Name { get; }
    [NullableAttribute("2")]
public string Value { get; }
    [NullableAttribute("2")]
private string WebValue { get; }
    internal static WebPairComparer Comparer { get; }
    public WebPair(string name, string value, bool encode);
    private static WebPair();
    [CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Value();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private string get_WebValue();
    public string GetQueryParameter(bool web);
    [CompilerGeneratedAttribute]
internal static WebPairComparer get_Comparer();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class RestSharp.Authenticators.OAuth.WebPairCollection : object {
    private List`1<WebPair> _parameters;
    public int Count { get; }
    public bool IsReadOnly { get; }
    public WebPair Item { get; public set; }
    public sealed virtual IEnumerator`1<WebPair> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(WebPair parameter);
    public void AddRange(IEnumerable`1<WebPair> collection);
    public void Add(string name, string value);
    public WebPairCollection AddNotEmpty(string name, string value, bool encode);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(WebPair parameter);
    public sealed virtual void CopyTo(WebPair[] parametersArray, int arrayIndex);
    public sealed virtual bool Remove(WebPair parameter);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual int IndexOf(WebPair parameter);
    public sealed virtual void Insert(int index, WebPair parameter);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual WebPair get_Item(int index);
    public sealed virtual void set_Item(int index, WebPair value);
    private void AddCollection(IEnumerable`1<WebPair> collection);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class RestSharp.Authenticators.OAuth1Authenticator : object {
    [CompilerGeneratedAttribute]
private string <Realm>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthParameterHandling <ParameterHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthSignatureMethod <SignatureMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthSignatureTreatment <SignatureTreatment>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Verifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CallbackUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientPassword>k__BackingField;
    public string Realm { get; public set; }
    public OAuthParameterHandling ParameterHandling { get; public set; }
    public OAuthSignatureMethod SignatureMethod { get; public set; }
    public OAuthSignatureTreatment SignatureTreatment { get; public set; }
    public OAuthType Type { get; public set; }
    public string ConsumerKey { get; public set; }
    public string ConsumerSecret { get; public set; }
    public string Token { get; public set; }
    public string TokenSecret { get; public set; }
    public string Verifier { get; public set; }
    public string Version { get; public set; }
    public string CallbackUrl { get; public set; }
    public string SessionHandle { get; public set; }
    public string ClientUsername { get; public set; }
    public string ClientPassword { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Realm();
    [CompilerGeneratedAttribute]
public virtual void set_Realm(string value);
    [CompilerGeneratedAttribute]
public virtual OAuthParameterHandling get_ParameterHandling();
    [CompilerGeneratedAttribute]
public virtual void set_ParameterHandling(OAuthParameterHandling value);
    [CompilerGeneratedAttribute]
public virtual OAuthSignatureMethod get_SignatureMethod();
    [CompilerGeneratedAttribute]
public virtual void set_SignatureMethod(OAuthSignatureMethod value);
    [CompilerGeneratedAttribute]
public virtual OAuthSignatureTreatment get_SignatureTreatment();
    [CompilerGeneratedAttribute]
public virtual void set_SignatureTreatment(OAuthSignatureTreatment value);
    [CompilerGeneratedAttribute]
public virtual OAuthType get_Type();
    [CompilerGeneratedAttribute]
public virtual void set_Type(OAuthType value);
    [CompilerGeneratedAttribute]
public virtual string get_ConsumerKey();
    [CompilerGeneratedAttribute]
public virtual void set_ConsumerKey(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ConsumerSecret();
    [CompilerGeneratedAttribute]
public virtual void set_ConsumerSecret(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Token();
    [CompilerGeneratedAttribute]
public virtual void set_Token(string value);
    [CompilerGeneratedAttribute]
public virtual string get_TokenSecret();
    [CompilerGeneratedAttribute]
public virtual void set_TokenSecret(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Verifier();
    [CompilerGeneratedAttribute]
public virtual void set_Verifier(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Version();
    [CompilerGeneratedAttribute]
public virtual void set_Version(string value);
    [CompilerGeneratedAttribute]
public virtual string get_CallbackUrl();
    [CompilerGeneratedAttribute]
public virtual void set_CallbackUrl(string value);
    [CompilerGeneratedAttribute]
public virtual string get_SessionHandle();
    [CompilerGeneratedAttribute]
public virtual void set_SessionHandle(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ClientUsername();
    [CompilerGeneratedAttribute]
public virtual void set_ClientUsername(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ClientPassword();
    [CompilerGeneratedAttribute]
public virtual void set_ClientPassword(string value);
    [NullableContextAttribute("1")]
public sealed virtual ValueTask Authenticate(IRestClient client, RestRequest request);
    [NullableContextAttribute("1")]
public static OAuth1Authenticator ForRequestToken(string consumerKey, string consumerSecret, OAuthSignatureMethod signatureMethod);
    [NullableContextAttribute("1")]
public static OAuth1Authenticator ForRequestToken(string consumerKey, string consumerSecret, string callbackUrl);
    [NullableContextAttribute("1")]
public static OAuth1Authenticator ForAccessToken(string consumerKey, string consumerSecret, string token, string tokenSecret, OAuthSignatureMethod signatureMethod);
    [NullableContextAttribute("1")]
public static OAuth1Authenticator ForAccessToken(string consumerKey, string consumerSecret, string token, string tokenSecret, string verifier);
    [NullableContextAttribute("1")]
public static OAuth1Authenticator ForAccessTokenRefresh(string consumerKey, string consumerSecret, string token, string tokenSecret, string sessionHandle);
    [NullableContextAttribute("1")]
public static OAuth1Authenticator ForAccessTokenRefresh(string consumerKey, string consumerSecret, string token, string tokenSecret, string verifier, string sessionHandle);
    [NullableContextAttribute("1")]
public static OAuth1Authenticator ForClientAuthentication(string consumerKey, string consumerSecret, string username, string password, OAuthSignatureMethod signatureMethod);
    [NullableContextAttribute("1")]
public static OAuth1Authenticator ForProtectedResource(string consumerKey, string consumerSecret, string accessToken, string accessTokenSecret, OAuthSignatureMethod signatureMethod);
    [NullableContextAttribute("1")]
private void AddOAuthData(IRestClient client, RestRequest request, OAuthWorkflow workflow);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static bool <AddOAuthData>g__BaseQuery|69_0(Parameter x);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private IEnumerable`1<Parameter> <AddOAuthData>g__CreateHeaderParameters|69_2(<>c__DisplayClass69_0& );
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private IEnumerable`1<Parameter> <AddOAuthData>g__CreateUrlParameters|69_3(<>c__DisplayClass69_0& );
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <AddOAuthData>g__GetAuthorizationHeader|69_4(<>c__DisplayClass69_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.Authenticators.OAuth2.OAuth2AuthorizationRequestHeaderAuthenticator : AuthenticatorBase {
    private string _tokenType;
    public OAuth2AuthorizationRequestHeaderAuthenticator(string accessToken);
    public OAuth2AuthorizationRequestHeaderAuthenticator(string accessToken, string tokenType);
    protected virtual ValueTask`1<Parameter> GetAuthenticationParameter(string accessToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.Authenticators.OAuth2.OAuth2UriQueryParameterAuthenticator : AuthenticatorBase {
    public OAuth2UriQueryParameterAuthenticator(string accessToken);
    protected virtual ValueTask`1<Parameter> GetAuthenticationParameter(string accessToken);
}
[ExtensionAttribute]
internal static class RestSharp.Authenticators.ParametersExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static IEnumerable`1<WebPair> ToWebParameters(IEnumerable`1<Parameter> p);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class RestSharp.BodyExtensions : object {
    [ExtensionAttribute]
public static bool TryGetBodyParameter(RestRequest request, BodyParameter& bodyParameter);
    [ExtensionAttribute]
public static bool HasFiles(RestRequest request);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class RestSharp.BodyParameter : Parameter {
    [CompilerGeneratedAttribute]
private DataFormat <DataFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentEncoding>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public DataFormat DataFormat { get; public set; }
    public string ContentEncoding { get; public set; }
    [NullableContextAttribute("1")]
public BodyParameter(string name, object value, ContentType contentType, DataFormat dataFormat);
    [NullableContextAttribute("1")]
public BodyParameter(object value, ContentType contentType, DataFormat dataFormat);
    [CompilerGeneratedAttribute]
protected BodyParameter(BodyParameter original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public DataFormat get_DataFormat();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DataFormat(DataFormat value);
    [CompilerGeneratedAttribute]
public string get_ContentEncoding();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ContentEncoding(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(BodyParameter left, BodyParameter right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(BodyParameter left, BodyParameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(Parameter other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(BodyParameter other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual Parameter <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class RestSharp.BuildUriExtensions : object {
    [ExtensionAttribute]
public static Uri BuildUri(IRestClient client, RestRequest request);
    [ExtensionAttribute]
public static Uri BuildUriWithoutQueryParameters(IRestClient client, RestRequest request);
    [ExtensionAttribute]
public static string GetRequestQuery(IRestClient client, RestRequest request);
    private static void DoBuildUriValidations(IRestClient client, RestRequest request);
    [CompilerGeneratedAttribute]
internal static string <GetRequestQuery>g__GetString|2_1(string name, string value, Func`2<string, string> encode);
}
public class RestSharp.CalculateResponseStatus : MulticastDelegate {
    public CalculateResponseStatus(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual ResponseStatus Invoke(HttpResponseMessage httpResponse);
    public virtual IAsyncResult BeginInvoke(HttpResponseMessage httpResponse, AsyncCallback callback, object object);
    public virtual ResponseStatus EndInvoke(IAsyncResult result);
}
public class RestSharp.ConfigureHeaders : MulticastDelegate {
    public ConfigureHeaders(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(HttpRequestHeaders headers);
    public virtual IAsyncResult BeginInvoke(HttpRequestHeaders headers, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class RestSharp.ConfigureRestClient : MulticastDelegate {
    public ConfigureRestClient(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(RestClientOptions options);
    public virtual IAsyncResult BeginInvoke(RestClientOptions options, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class RestSharp.ConfigureSerialization : MulticastDelegate {
    public ConfigureSerialization(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(SerializerConfig config);
    public virtual IAsyncResult BeginInvoke(SerializerConfig config, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.ContentType : object {
    public static ContentType Json;
    public static ContentType Xml;
    public static ContentType Plain;
    public static ContentType Binary;
    public static ContentType GZip;
    public static ContentType FormUrlEncoded;
    public static ContentType Undefined;
    private static Dictionary`2<DataFormat, ContentType> DataFormatMap;
    public static String[] JsonAccept;
    public static String[] XmlAccept;
    private string _value;
    public string Value { get; }
    public MediaTypeHeaderValue AsMediaTypeHeaderValue { get; }
    private ContentType(string contentType);
    private static ContentType();
    public string get_Value();
    public static ContentType FromDataFormat(DataFormat dataFormat);
    public virtual string ToString();
    public static ContentType op_Implicit(string contentType);
    public static string op_Implicit(ContentType contentType);
    public ContentType Or(ContentType contentType);
    public string OrValue(string contentType);
    public MediaTypeHeaderValue get_AsMediaTypeHeaderValue();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(ContentType other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public enum RestSharp.DataFormat : Enum {
    public int value__;
    public static DataFormat Json;
    public static DataFormat Xml;
    public static DataFormat Binary;
    public static DataFormat None;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.DateFormat : ValueType {
    public static string ISO_8601;
    public static string ROUND_TRIP;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.DefaultParameters : ParametersCollection {
    private ReadOnlyRestClientOptions _options;
    private object _lock;
    private static ParameterType[] MultiParameterTypes;
    public DefaultParameters(ReadOnlyRestClientOptions options);
    private static DefaultParameters();
    public DefaultParameters AddParameter(Parameter parameter);
    public DefaultParameters RemoveParameter(string name, ParameterType type);
    public DefaultParameters ReplaceParameter(Parameter parameter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.DeserializationException : Exception {
    [CompilerGeneratedAttribute]
private RestResponse <Response>k__BackingField;
    public RestResponse Response { get; }
    public DeserializationException(RestResponse response, Exception innerException);
    [CompilerGeneratedAttribute]
public RestResponse get_Response();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class RestSharp.Ensure : object {
    public static T NotNull(T value, string name);
    public static string NotEmpty(string value, string name);
    public static string NotEmptyString(object value, string name);
}
[ExtensionAttribute]
internal static class RestSharp.Extensions.CollectionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void ForEach(IEnumerable`1<T> items, Action`1<T> action);
}
[ExtensionAttribute]
internal static class RestSharp.Extensions.CookieContainerExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddCookies(CookieContainer cookieContainer, Uri uri, IEnumerable`1<string> cookiesHeader);
}
[AttributeUsageAttribute("4")]
public class RestSharp.Extensions.GenerateImmutableAttribute : Attribute {
}
[ExtensionAttribute]
internal static class RestSharp.Extensions.HttpHeadersExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IReadOnlyCollection`1<HeaderParameter> GetHeaderParameters(HttpHeaders httpHeaders);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class RestSharp.Extensions.HttpResponseExtensions : object {
    [ExtensionAttribute]
public static Exception MaybeException(HttpResponseMessage httpResponse);
    [ExtensionAttribute]
public static string GetResponseString(HttpResponseMessage response, Byte[] bytes, Encoding clientEncoding);
    [ExtensionAttribute]
public static Task`1<Stream> ReadResponseStream(HttpResponseMessage httpResponse, Func`2<Stream, Stream> writer, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static Encoding <GetResponseString>g__TryGetEncoding|1_0(string es);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class RestSharp.Extensions.ReflectionExtensions : object {
    [ExtensionAttribute]
public static T GetAttribute(MemberInfo prop);
    [ExtensionAttribute]
public static T GetAttribute(Type type);
    [ExtensionAttribute]
public static bool IsSubclassOfRawGeneric(Type toCheck, Type generic);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static object ChangeType(object source, Type newType);
    [ExtensionAttribute]
public static object FindEnumValue(Type type, string value, CultureInfo culture);
}
[ExtensionAttribute]
internal static class RestSharp.Extensions.StreamExtensions : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("RestSharp.Extensions.StreamExtensions/<ReadAsBytes>d__0")]
[ExtensionAttribute]
public static Task`1<Byte[]> ReadAsBytes(Stream input, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class RestSharp.Extensions.StringExtensions : object {
    private static Regex IsUpperCaseRegex;
    private static Regex AddUnderscoresRegex1;
    private static Regex AddUnderscoresRegex2;
    private static Regex AddUnderscoresRegex3;
    private static Regex AddDashesRegex1;
    private static Regex AddDashesRegex2;
    private static Regex AddDashesRegex3;
    private static Regex AddSpacesRegex1;
    private static Regex AddSpacesRegex2;
    private static Regex AddSpacesRegex3;
    private static StringExtensions();
    [ExtensionAttribute]
internal static string UrlDecode(string input);
    [ExtensionAttribute]
internal static string UrlEncode(string input);
    [ExtensionAttribute]
internal static string UrlEncode(string input, Encoding encoding);
    [ExtensionAttribute]
internal static string RemoveUnderscoresAndDashes(string input);
    [ExtensionAttribute]
internal static string ToPascalCase(string lowercaseAndUnderscoredWord, CultureInfo culture);
    [ExtensionAttribute]
internal static string ToPascalCase(string text, bool removeUnderscores, CultureInfo culture);
    [ExtensionAttribute]
internal static string ToCamelCase(string lowercaseAndUnderscoredWord, CultureInfo culture);
    [IteratorStateMachineAttribute("RestSharp.Extensions.StringExtensions/<GetNameVariants>d__17")]
[ExtensionAttribute]
internal static IEnumerable`1<string> GetNameVariants(string name, CultureInfo culture);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static bool IsEmpty(string value);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static bool IsNotEmpty(string value);
    [ExtensionAttribute]
internal static string JoinToString(IEnumerable`1<string> strings, string separator);
    [ExtensionAttribute]
private static string MakeInitialLowerCase(string word, CultureInfo culture);
    [ExtensionAttribute]
private static string AddUnderscores(string pascalCasedWord);
    [ExtensionAttribute]
private static string AddDashes(string pascalCasedWord);
    [ExtensionAttribute]
private static bool IsUpperCase(string inputString);
    [ExtensionAttribute]
private static string AddUnderscorePrefix(string pascalCasedWord);
    [ExtensionAttribute]
private static string AddSpaces(string pascalCasedWord);
}
[ExtensionAttribute]
internal static class RestSharp.Extensions.WithExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static T With(T self, Action`1<T> do);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.FileParameter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentType <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<Stream> <GetFile>k__BackingField;
    [CompilerGeneratedAttribute]
private FileParameterOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Name { get; }
    public string FileName { get; }
    public ContentType ContentType { get; }
    public Func`1<Stream> GetFile { get; }
    public FileParameterOptions Options { get; }
    private FileParameter(string name, string fileName, Func`1<Stream> getFile, ContentType contentType, FileParameterOptions options);
    [CompilerGeneratedAttribute]
protected FileParameter(FileParameter original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public ContentType get_ContentType();
    [CompilerGeneratedAttribute]
public Func`1<Stream> get_GetFile();
    [CompilerGeneratedAttribute]
public FileParameterOptions get_Options();
    public static FileParameter Create(string name, Byte[] data, string filename, ContentType contentType, FileParameterOptions options);
    public static FileParameter Create(string name, Func`1<Stream> getFile, string fileName, ContentType contentType, FileParameterOptions options);
    [NullableContextAttribute("2")]
public static FileParameter FromFile(string fullPath, string name, ContentType contentType, FileParameterOptions options);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(FileParameter left, FileParameter right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(FileParameter left, FileParameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(FileParameter other);
    [CompilerGeneratedAttribute]
public virtual FileParameter <Clone>$();
}
public class RestSharp.FileParameterOptions : object {
    [CompilerGeneratedAttribute]
private bool <DisableFileNameStar>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableFilenameEncoding>k__BackingField;
    public bool DisableFileNameStar { get; public set; }
    public bool DisableFilenameEncoding { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_DisableFileNameStar();
    [CompilerGeneratedAttribute]
public void set_DisableFileNameStar(bool value);
    [CompilerGeneratedAttribute]
public bool get_DisableFilenameEncoding();
    [CompilerGeneratedAttribute]
public void set_DisableFilenameEncoding(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.GetOrPostParameter : NamedParameter {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public GetOrPostParameter(string name, string value, bool encode);
    [CompilerGeneratedAttribute]
protected GetOrPostParameter(GetOrPostParameter original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(GetOrPostParameter left, GetOrPostParameter right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(GetOrPostParameter left, GetOrPostParameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(NamedParameter other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(GetOrPostParameter other);
    [CompilerGeneratedAttribute]
public virtual Parameter <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class RestSharp.HeaderParameter : Parameter {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public HeaderParameter(string name, string value);
    [CompilerGeneratedAttribute]
protected HeaderParameter(HeaderParameter original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(HeaderParameter left, HeaderParameter right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(HeaderParameter left, HeaderParameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(Parameter other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(HeaderParameter other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual Parameter <Clone>$();
}
[ExtensionAttribute]
internal static class RestSharp.HttpRequestMessageExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddHeaders(HttpRequestMessage message, RequestHeaders headers);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static void <AddHeaders>g__AddHeader|0_2(Parameter parameter, HttpHeaders httpHeaders);
}
[NullableContextAttribute("1")]
public interface RestSharp.IRestClient {
    public ReadOnlyRestClientOptions Options { get; }
    public RestSerializers Serializers { get; }
    public DefaultParameters DefaultParameters { get; }
    public abstract virtual ReadOnlyRestClientOptions get_Options();
    public abstract virtual RestSerializers get_Serializers();
    public abstract virtual DefaultParameters get_DefaultParameters();
    public abstract virtual Task`1<RestResponse> ExecuteAsync(RestRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<Stream> DownloadStreamAsync(RestRequest request, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.JsonParameter : BodyParameter {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public JsonParameter(string name, object value, ContentType contentType);
    public JsonParameter(object value, ContentType contentType);
    [CompilerGeneratedAttribute]
protected JsonParameter(JsonParameter original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(JsonParameter left, JsonParameter right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(JsonParameter left, JsonParameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(BodyParameter other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(JsonParameter other);
    [CompilerGeneratedAttribute]
public virtual Parameter <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class RestSharp.KnownHeaders : object {
    public static string Authorization;
    public static string Accept;
    public static string Allow;
    public static string Expires;
    public static string ContentDisposition;
    public static string ContentEncoding;
    public static string ContentLanguage;
    public static string ContentLength;
    public static string ContentLocation;
    public static string ContentRange;
    public static string ContentType;
    public static string LastModified;
    public static string ContentMD5;
    public static string Host;
    public static string Cookie;
    public static string SetCookie;
    public static string UserAgent;
    internal static String[] ContentHeaders;
    private static HashSet`1<string> ContentHeadersHash;
    private static KnownHeaders();
    internal static bool IsContentHeader(string key);
}
public enum RestSharp.Method : Enum {
    public int value__;
    public static Method Get;
    public static Method Post;
    public static Method Put;
    public static Method Delete;
    public static Method Head;
    public static Method Options;
    public static Method Patch;
    public static Method Merge;
    public static Method Copy;
    public static Method Search;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.NamedParameter : Parameter {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    protected NamedParameter(string name, object value, ParameterType type, bool encode);
    [CompilerGeneratedAttribute]
protected NamedParameter(NamedParameter original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(NamedParameter left, NamedParameter right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(NamedParameter left, NamedParameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(Parameter other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(NamedParameter other);
    [CompilerGeneratedAttribute]
public virtual Parameter <Clone>$();
}
[ExtensionAttribute]
internal static class RestSharp.ObjectParser : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IEnumerable`1<ParsedParameter> GetProperties(object obj, String[] includedProperties);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static string <GetProperties>g__ParseValue|0_0(string format, object value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static IEnumerable`1<ParsedParameter> <GetProperties>g__GetArray|0_1(PropertyInfo propertyInfo, object value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static ParsedParameter <GetProperties>g__GetValue|0_2(PropertyInfo propertyInfo, object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class RestSharp.Parameter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Encode>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ContentType <ContentType>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Name { get; public set; }
    public object Value { get; public set; }
    public ParameterType Type { get; public set; }
    public bool Encode { get; public set; }
    [NullableAttribute("1")]
public ContentType ContentType { get; protected set; }
    protected Parameter(string Name, object Value, ParameterType Type, bool Encode);
    [CompilerGeneratedAttribute]
protected Parameter(Parameter original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(object value);
    [CompilerGeneratedAttribute]
public ParameterType get_Type();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Type(ParameterType value);
    [CompilerGeneratedAttribute]
public bool get_Encode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Encode(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ContentType get_ContentType();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ContentType(ContentType value);
    [NullableContextAttribute("1")]
public sealed virtual string ToString();
    public static Parameter CreateParameter(string name, object value, ParameterType type, bool encode);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(Parameter left, Parameter right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(Parameter left, Parameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public virtual bool Equals(Parameter other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public abstract virtual Parameter <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, Object& Value, ParameterType& Type, Boolean& Encode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class RestSharp.ParametersCollection : object {
    protected List`1<Parameter> Parameters;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`3<Parameter, string, bool> SearchPredicate;
    public int Count { get; }
    private static ParametersCollection();
    public bool Exists(Parameter parameter);
    public Parameter TryFind(string parameterName);
    public IEnumerable`1<Parameter> GetParameters(ParameterType parameterType);
    public IEnumerable`1<T> GetParameters();
    public sealed virtual IEnumerator`1<Parameter> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual int get_Count();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class RestSharp.ParametersCollectionExtensions : object {
    [ExtensionAttribute]
internal static IEnumerable`1<Parameter> GetQueryParameters(ParametersCollection parameters, Method method);
    [ExtensionAttribute]
internal static IEnumerable`1<GetOrPostParameter> GetContentParameters(ParametersCollection parameters, Method method);
    private static bool IsPost(Method method);
}
public enum RestSharp.ParameterType : Enum {
    public int value__;
    public static ParameterType GetOrPost;
    public static ParameterType UrlSegment;
    public static ParameterType HttpHeader;
    public static ParameterType RequestBody;
    public static ParameterType QueryString;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class RestSharp.ParsedParameter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Encode>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Name { get; public set; }
    [NullableAttribute("2")]
public string Value { get; public set; }
    public bool Encode { get; public set; }
    public ParsedParameter(string Name, string Value, bool Encode);
    [CompilerGeneratedAttribute]
protected ParsedParameter(ParsedParameter original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Value();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Value(string value);
    [CompilerGeneratedAttribute]
public bool get_Encode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Encode(bool value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ParsedParameter left, ParsedParameter right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ParsedParameter left, ParsedParameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(ParsedParameter other);
    [CompilerGeneratedAttribute]
public virtual ParsedParameter <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& Value, Boolean& Encode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class RestSharp.PropertyCache`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static IReadOnlyCollection`1<Populator<T>> Populators;
    private static PropertyCache`1();
    internal static IEnumerable`1<Parameter> GetParameters(T entity, String[] includedProperties);
    internal static IEnumerable`1<Parameter> GetParameters(T entity);
    private static IEnumerable`1<Parameter> GetParameters(T entity, IEnumerable`1<Populator<T>> populators);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.QueryParameter : NamedParameter {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public QueryParameter(string name, string value, bool encode);
    [CompilerGeneratedAttribute]
protected QueryParameter(QueryParameter original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(QueryParameter left, QueryParameter right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(QueryParameter left, QueryParameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(NamedParameter other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(QueryParameter other);
    [CompilerGeneratedAttribute]
public virtual Parameter <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class RestSharp.ReadOnlyRestClientOptions : object {
    [CompilerGeneratedAttribute]
private Uri <BaseUrl>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<HttpMessageHandler, HttpMessageHandler> <ConfigureMessageHandler>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private CalculateResponseStatus <CalculateResponseStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private IAuthenticator <Authenticator>k__BackingField;
    [CompilerGeneratedAttribute]
private ICredentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseDefaultCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableCharset>k__BackingField;
    [CompilerGeneratedAttribute]
private DecompressionMethods <AutomaticDecompression>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxRedirects>k__BackingField;
    [CompilerGeneratedAttribute]
private X509CertificateCollection <ClientCertificates>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebProxy <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private CacheControlHeaderValue <CachePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FollowRedirects>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Expect100Continue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreAuthenticate>k__BackingField;
    [CompilerGeneratedAttribute]
private RemoteCertificateValidationCallback <RemoteCertificateValidationCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseHost>k__BackingField;
    [CompilerGeneratedAttribute]
private CookieContainer <CookieContainer>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxTimeout>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Encoding <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowOnDeserializationError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FailOnDeserializationError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowOnAnyError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowMultipleDefaultParametersWithSameName>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Func`2<string, string> <Encode>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Func`3<string, Encoding, string> <EncodeQuery>k__BackingField;
    public Uri BaseUrl { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<HttpMessageHandler, HttpMessageHandler> ConfigureMessageHandler { get; }
    [NullableAttribute("1")]
public CalculateResponseStatus CalculateResponseStatus { get; }
    public IAuthenticator Authenticator { get; }
    public ICredentials Credentials { get; }
    public bool UseDefaultCredentials { get; }
    public bool DisableCharset { get; }
    public DecompressionMethods AutomaticDecompression { get; }
    public Nullable`1<int> MaxRedirects { get; }
    public X509CertificateCollection ClientCertificates { get; }
    public IWebProxy Proxy { get; }
    public CacheControlHeaderValue CachePolicy { get; }
    public bool FollowRedirects { get; }
    public Nullable`1<bool> Expect100Continue { get; }
    public string UserAgent { get; }
    public bool PreAuthenticate { get; }
    public RemoteCertificateValidationCallback RemoteCertificateValidationCallback { get; }
    public string BaseHost { get; }
    public CookieContainer CookieContainer { get; }
    public int MaxTimeout { get; }
    [NullableAttribute("1")]
public Encoding Encoding { get; }
    public bool ThrowOnDeserializationError { get; }
    public bool FailOnDeserializationError { get; }
    public bool ThrowOnAnyError { get; }
    public bool AllowMultipleDefaultParametersWithSameName { get; }
    [NullableAttribute("1")]
public Func`2<string, string> Encode { get; }
    [NullableAttribute("1")]
public Func`3<string, Encoding, string> EncodeQuery { get; }
    [NullableContextAttribute("1")]
public ReadOnlyRestClientOptions(RestClientOptions inner);
    [CompilerGeneratedAttribute]
public Uri get_BaseUrl();
    [CompilerGeneratedAttribute]
public Func`2<HttpMessageHandler, HttpMessageHandler> get_ConfigureMessageHandler();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public CalculateResponseStatus get_CalculateResponseStatus();
    [CompilerGeneratedAttribute]
public IAuthenticator get_Authenticator();
    [CompilerGeneratedAttribute]
public ICredentials get_Credentials();
    [CompilerGeneratedAttribute]
public bool get_UseDefaultCredentials();
    [CompilerGeneratedAttribute]
public bool get_DisableCharset();
    [CompilerGeneratedAttribute]
public DecompressionMethods get_AutomaticDecompression();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxRedirects();
    [CompilerGeneratedAttribute]
public X509CertificateCollection get_ClientCertificates();
    [CompilerGeneratedAttribute]
public IWebProxy get_Proxy();
    [CompilerGeneratedAttribute]
public CacheControlHeaderValue get_CachePolicy();
    [CompilerGeneratedAttribute]
public bool get_FollowRedirects();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Expect100Continue();
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public bool get_PreAuthenticate();
    [CompilerGeneratedAttribute]
public RemoteCertificateValidationCallback get_RemoteCertificateValidationCallback();
    [CompilerGeneratedAttribute]
public string get_BaseHost();
    [CompilerGeneratedAttribute]
public CookieContainer get_CookieContainer();
    [CompilerGeneratedAttribute]
public int get_MaxTimeout();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Encoding get_Encoding();
    [CompilerGeneratedAttribute]
public bool get_ThrowOnDeserializationError();
    [CompilerGeneratedAttribute]
public bool get_FailOnDeserializationError();
    [CompilerGeneratedAttribute]
public bool get_ThrowOnAnyError();
    [CompilerGeneratedAttribute]
public bool get_AllowMultipleDefaultParametersWithSameName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Func`2<string, string> get_Encode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Func`3<string, Encoding, string> get_EncodeQuery();
}
public enum RestSharp.RequestArrayQueryType : Enum {
    public int value__;
    public static RequestArrayQueryType CommaSeparated;
    public static RequestArrayQueryType ArrayParameters;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class RestSharp.RequestContent : object {
    private RestClient _client;
    private RestRequest _request;
    private List`1<Stream> _streams;
    private ParametersCollection _parameters;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private HttpContent <Content>k__BackingField;
    [NullableAttribute("2")]
private HttpContent Content { get; private set; }
    public RequestContent(RestClient client, RestRequest request);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private HttpContent get_Content();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Content(HttpContent value);
    public HttpContent BuildContent();
    private void AddFiles();
    private HttpContent Serialize(BodyParameter body);
    private static bool BodyShouldBeMultipartForm(BodyParameter bodyParameter);
    private string GetOrSetFormBoundary();
    private MultipartFormDataContent CreateMultipartFormDataContent();
    private void AddBody(bool hasPostParameters);
    private void AddPostParameters(GetOrPostParameter[] postParameters);
    private static string GetBoundary(string boundary, bool quote);
    private void AddHeaders();
    private void ReplaceHeader(string name, string value);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private HttpContent <Serialize>g__GetBinary|11_0(<>c__DisplayClass11_0& );
    [CompilerGeneratedAttribute]
private HttpContent <Serialize>g__GetSerialized|11_1(<>c__DisplayClass11_0& );
    [CompilerGeneratedAttribute]
private void <AddHeaders>g__AddHeader|18_1(HeaderParameter parameter);
    [CompilerGeneratedAttribute]
private string <AddHeaders>g__GetContentTypeHeader|18_2(string contentType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class RestSharp.RequestHeaders : object {
    [CompilerGeneratedAttribute]
private RequestParameters <Parameters>k__BackingField;
    public RequestParameters Parameters { get; }
    [CompilerGeneratedAttribute]
public RequestParameters get_Parameters();
    public RequestHeaders AddHeaders(ParametersCollection parameters);
    public RequestHeaders AddAcceptHeader(String[] acceptedContentTypes);
    public RequestHeaders AddCookieHeaders(Uri uri, CookieContainer cookieContainer);
    [CompilerGeneratedAttribute]
internal static IEnumerable`1<string> <AddCookieHeaders>g__SplitHeader|5_1(string header);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.RequestParameters : ParametersCollection {
    public RequestParameters(IEnumerable`1<Parameter> parameters);
    public ParametersCollection AddParameters(IEnumerable`1<Parameter> parameters);
    public ParametersCollection AddParameters(ParametersCollection parameters);
    public void AddParameter(Parameter parameter);
    public void RemoveParameter(string name);
    public void RemoveParameter(Parameter parameter);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class RestSharp.RequestPropertyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestArrayQueryType <ArrayQueryType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Encode>k__BackingField;
    public string Name { get; public set; }
    public string Format { get; public set; }
    public RequestArrayQueryType ArrayQueryType { get; public set; }
    public bool Encode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(string value);
    [CompilerGeneratedAttribute]
public RequestArrayQueryType get_ArrayQueryType();
    [CompilerGeneratedAttribute]
public void set_ArrayQueryType(RequestArrayQueryType value);
    [CompilerGeneratedAttribute]
public bool get_Encode();
    [CompilerGeneratedAttribute]
public void set_Encode(bool value);
}
public enum RestSharp.ResponseStatus : Enum {
    public int value__;
    public static ResponseStatus None;
    public static ResponseStatus Completed;
    public static ResponseStatus Error;
    public static ResponseStatus TimedOut;
    public static ResponseStatus Aborted;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class RestSharp.ResponseThrowExtension : object {
    [ExtensionAttribute]
public static RestResponse ThrowIfError(RestResponse response);
    [ExtensionAttribute]
public static RestResponse`1<T> ThrowIfError(RestResponse`1<T> response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.RestClient : object {
    [CompilerGeneratedAttribute]
private String[] <AcceptedContentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpClient <HttpClient>k__BackingField;
    [CompilerGeneratedAttribute]
private ReadOnlyRestClientOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private RestSerializers <Serializers>k__BackingField;
    [CompilerGeneratedAttribute]
private DefaultParameters <DefaultParameters>k__BackingField;
    private bool _disposeHttpClient;
    private bool _disposed;
    public String[] AcceptedContentTypes { get; public set; }
    internal HttpClient HttpClient { get; }
    public ReadOnlyRestClientOptions Options { get; }
    public RestSerializers Serializers { get; private set; }
    public DefaultParameters DefaultParameters { get; }
    [NullableAttribute("2")]
[ObsoleteAttribute("Use RestClientOptions.Authenticator instead")]
public IAuthenticator Authenticator { get; }
    [NullableContextAttribute("2")]
public RestClient(RestClientOptions options, ConfigureHeaders configureDefaultHeaders, ConfigureSerialization configureSerialization, bool useClientFactory);
    [NullableContextAttribute("2")]
public RestClient(ConfigureRestClient configureRestClient, ConfigureHeaders configureDefaultHeaders, ConfigureSerialization configureSerialization, bool useClientFactory);
    [NullableContextAttribute("2")]
public RestClient(Uri baseUrl, ConfigureRestClient configureRestClient, ConfigureHeaders configureDefaultHeaders, ConfigureSerialization configureSerialization, bool useClientFactory);
    [NullableContextAttribute("2")]
public RestClient(string baseUrl, ConfigureRestClient configureRestClient, ConfigureHeaders configureDefaultHeaders, ConfigureSerialization configureSerialization);
    [NullableContextAttribute("2")]
public RestClient(HttpClient httpClient, RestClientOptions options, bool disposeHttpClient, ConfigureSerialization configureSerialization);
    [NullableContextAttribute("2")]
public RestClient(HttpClient httpClient, bool disposeHttpClient, ConfigureRestClient configureRestClient, ConfigureSerialization configureSerialization);
    [NullableContextAttribute("2")]
public RestClient(HttpMessageHandler handler, bool disposeHandler, ConfigureRestClient configureRestClient, ConfigureSerialization configureSerialization);
    [AsyncStateMachineAttribute("RestSharp.RestClient/<ExecuteAsync>d__0")]
public sealed virtual Task`1<RestResponse> ExecuteAsync(RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClient/<DownloadStreamAsync>d__1")]
public sealed virtual Task`1<Stream> DownloadStreamAsync(RestRequest request, CancellationToken cancellationToken);
    private static RestResponse GetErrorResponse(RestRequest request, Exception exception, CancellationToken timeoutToken);
    [AsyncStateMachineAttribute("RestSharp.RestClient/<ExecuteRequestAsync>d__3")]
private Task`1<HttpResponse> ExecuteRequestAsync(RestRequest request, CancellationToken cancellationToken);
    private static HttpMethod AsHttpMethod(Method method);
    [CompilerGeneratedAttribute]
public String[] get_AcceptedContentTypes();
    [CompilerGeneratedAttribute]
public void set_AcceptedContentTypes(String[] value);
    [CompilerGeneratedAttribute]
internal HttpClient get_HttpClient();
    [CompilerGeneratedAttribute]
public sealed virtual ReadOnlyRestClientOptions get_Options();
    [CompilerGeneratedAttribute]
public sealed virtual RestSerializers get_Serializers();
    [CompilerGeneratedAttribute]
private void set_Serializers(RestSerializers value);
    [CompilerGeneratedAttribute]
public sealed virtual DefaultParameters get_DefaultParameters();
    [NullableContextAttribute("2")]
public IAuthenticator get_Authenticator();
    private static RestClientOptions ConfigureOptions(RestClientOptions options, ConfigureRestClient configureRestClient);
    private static void ConfigureHttpClient(HttpClient httpClient, RestClientOptions options);
    private static void ConfigureHttpMessageHandler(HttpClientHandler handler, ReadOnlyRestClientOptions options);
    [NullableContextAttribute("2")]
[MemberNotNullAttribute("Serializers")]
[MemberNotNullAttribute("AcceptedContentTypes")]
private void ConfigureSerializers(ConfigureSerialization configureSerialization);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
internal static bool <GetErrorResponse>g__TimedOut|2_0(<>c__DisplayClass2_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class RestSharp.RestClientExtensions : object {
    [ExtensionAttribute]
public static RestResponse`1<T> Deserialize(IRestClient client, RestResponse response);
    [ExtensionAttribute]
[ObsoleteAttribute("Set the RestClientOptions.Encode property instead")]
public static RestClient UseUrlEncoder(RestClient client, Func`2<string, string> encoder);
    [ExtensionAttribute]
[ObsoleteAttribute("Set the RestClientOptions.EncodeQuery property instead")]
public static RestClient UseQueryEncoder(RestClient client, Func`3<string, Encoding, string> queryEncoder);
    [ExtensionAttribute]
[ObsoleteAttribute("Set the RestClientOptions.Authenticator property instead")]
public static RestClient UseAuthenticator(RestClient client, IAuthenticator authenticator);
    [ExtensionAttribute]
public static Task`1<RestResponse`1<T>> ExecuteGetAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<RestResponse> ExecuteGetAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<RestResponse`1<T>> ExecutePostAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<RestResponse> ExecutePostAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<RestResponse`1<T>> ExecutePutAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<RestResponse> ExecutePutAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<ExecuteAsync>d__10`1")]
[ExtensionAttribute]
public static Task`1<RestResponse`1<T>> ExecuteAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<RestResponse> ExecuteAsync(IRestClient client, RestRequest request, Method httpMethod, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<RestResponse`1<T>> ExecuteAsync(IRestClient client, RestRequest request, Method httpMethod, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<GetAsync>d__13`1")]
[ExtensionAttribute]
public static Task`1<T> GetAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<GetAsync>d__14")]
[ExtensionAttribute]
public static Task`1<RestResponse> GetAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<PostAsync>d__15`1")]
[ExtensionAttribute]
public static Task`1<T> PostAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static RestResponse Post(IRestClient client, RestRequest request);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<PostAsync>d__17")]
[ExtensionAttribute]
public static Task`1<RestResponse> PostAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<PutAsync>d__18`1")]
[ExtensionAttribute]
public static Task`1<T> PutAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<PutAsync>d__19")]
[ExtensionAttribute]
public static Task`1<RestResponse> PutAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<HeadAsync>d__20`1")]
[ExtensionAttribute]
public static Task`1<T> HeadAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<HeadAsync>d__21")]
[ExtensionAttribute]
public static Task`1<RestResponse> HeadAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<OptionsAsync>d__22`1")]
[ExtensionAttribute]
public static Task`1<T> OptionsAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<OptionsAsync>d__23")]
[ExtensionAttribute]
public static Task`1<RestResponse> OptionsAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<PatchAsync>d__24`1")]
[ExtensionAttribute]
public static Task`1<T> PatchAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<PatchAsync>d__25")]
[ExtensionAttribute]
public static Task`1<RestResponse> PatchAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<DeleteAsync>d__26`1")]
[ExtensionAttribute]
public static Task`1<T> DeleteAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<DeleteAsync>d__27")]
[ExtensionAttribute]
public static Task`1<RestResponse> DeleteAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<DownloadDataAsync>d__28")]
[ExtensionAttribute]
public static Task`1<Byte[]> DownloadDataAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("RestSharp.RestClientExtensions/<StreamJsonAsync>d__29`1")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<T> StreamJsonAsync(IRestClient client, string resource, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TResponse> GetJsonAsync(RestClient client, string resource, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TResponse> GetJsonAsync(RestClient client, string resource, object parameters, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TResponse> PostJsonAsync(RestClient client, string resource, TRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<PostJsonAsync>d__33`1")]
[ExtensionAttribute]
public static Task`1<HttpStatusCode> PostJsonAsync(RestClient client, string resource, TRequest request, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TResponse> PutJsonAsync(RestClient client, string resource, TRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RestSharp.RestClientExtensions/<PutJsonAsync>d__35`1")]
[ExtensionAttribute]
public static Task`1<HttpStatusCode> PutJsonAsync(RestClient client, string resource, TRequest request, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IRestClient AddDefaultParameter(IRestClient client, Parameter parameter);
    [ExtensionAttribute]
public static IRestClient AddDefaultParameter(IRestClient client, string name, string value);
    [ExtensionAttribute]
public static IRestClient AddDefaultParameter(IRestClient client, string name, object value, ParameterType type);
    [ExtensionAttribute]
public static IRestClient AddDefaultHeader(IRestClient client, string name, string value);
    [ExtensionAttribute]
public static IRestClient AddDefaultHeaders(IRestClient client, Dictionary`2<string, string> headers);
    [ExtensionAttribute]
public static IRestClient AddDefaultUrlSegment(IRestClient client, string name, string value);
    [ExtensionAttribute]
public static IRestClient AddDefaultQueryParameter(IRestClient client, string name, string value);
    [ExtensionAttribute]
public static RestResponse Execute(RestClient client, RestRequest request, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Stream DownloadStream(RestClient client, RestRequest request, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static TResponse GetJson(RestClient client, string resource);
    [ExtensionAttribute]
public static TResponse GetJson(RestClient client, string resource, object parameters);
    [ExtensionAttribute]
public static TResponse PostJson(RestClient client, string resource, TRequest request);
    [ExtensionAttribute]
public static HttpStatusCode PostJson(RestClient client, string resource, TRequest request);
    [ExtensionAttribute]
public static TResponse PutJson(RestClient client, string resource, TRequest request);
    [ExtensionAttribute]
public static HttpStatusCode PutJson(RestClient client, string resource, TRequest request);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[GenerateImmutableAttribute]
public class RestSharp.RestClientOptions : object {
    [NullableAttribute("1")]
private static Version Version;
    [NullableAttribute("1")]
private static string DefaultUserAgent;
    [CompilerGeneratedAttribute]
private Uri <BaseUrl>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<HttpMessageHandler, HttpMessageHandler> <ConfigureMessageHandler>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private CalculateResponseStatus <CalculateResponseStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private IAuthenticator <Authenticator>k__BackingField;
    [CompilerGeneratedAttribute]
private ICredentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseDefaultCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableCharset>k__BackingField;
    [CompilerGeneratedAttribute]
private DecompressionMethods <AutomaticDecompression>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxRedirects>k__BackingField;
    [CompilerGeneratedAttribute]
private X509CertificateCollection <ClientCertificates>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebProxy <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private CacheControlHeaderValue <CachePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FollowRedirects>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Expect100Continue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreAuthenticate>k__BackingField;
    [CompilerGeneratedAttribute]
private RemoteCertificateValidationCallback <RemoteCertificateValidationCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseHost>k__BackingField;
    [CompilerGeneratedAttribute]
private CookieContainer <CookieContainer>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxTimeout>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Encoding <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowOnDeserializationError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FailOnDeserializationError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowOnAnyError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowMultipleDefaultParametersWithSameName>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Func`2<string, string> <Encode>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Func`3<string, Encoding, string> <EncodeQuery>k__BackingField;
    public Uri BaseUrl { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<HttpMessageHandler, HttpMessageHandler> ConfigureMessageHandler { get; public set; }
    [NullableAttribute("1")]
public CalculateResponseStatus CalculateResponseStatus { get; public set; }
    public IAuthenticator Authenticator { get; public set; }
    public ICredentials Credentials { get; public set; }
    public bool UseDefaultCredentials { get; public set; }
    public bool DisableCharset { get; public set; }
    public DecompressionMethods AutomaticDecompression { get; public set; }
    public Nullable`1<int> MaxRedirects { get; public set; }
    public X509CertificateCollection ClientCertificates { get; public set; }
    public IWebProxy Proxy { get; public set; }
    public CacheControlHeaderValue CachePolicy { get; public set; }
    public bool FollowRedirects { get; public set; }
    public Nullable`1<bool> Expect100Continue { get; public set; }
    public string UserAgent { get; public set; }
    public bool PreAuthenticate { get; public set; }
    public RemoteCertificateValidationCallback RemoteCertificateValidationCallback { get; public set; }
    public string BaseHost { get; public set; }
    public CookieContainer CookieContainer { get; public set; }
    public int MaxTimeout { get; public set; }
    [NullableAttribute("1")]
public Encoding Encoding { get; public set; }
    public bool ThrowOnDeserializationError { get; public set; }
    public bool FailOnDeserializationError { get; public set; }
    public bool ThrowOnAnyError { get; public set; }
    public bool AllowMultipleDefaultParametersWithSameName { get; public set; }
    [NullableAttribute("1")]
public Func`2<string, string> Encode { get; public set; }
    [NullableAttribute("1")]
public Func`3<string, Encoding, string> EncodeQuery { get; public set; }
    [NullableContextAttribute("1")]
public RestClientOptions(Uri baseUrl);
    [NullableContextAttribute("1")]
public RestClientOptions(string baseUrl);
    private static RestClientOptions();
    [CompilerGeneratedAttribute]
public Uri get_BaseUrl();
    [CompilerGeneratedAttribute]
public void set_BaseUrl(Uri value);
    [CompilerGeneratedAttribute]
public Func`2<HttpMessageHandler, HttpMessageHandler> get_ConfigureMessageHandler();
    [CompilerGeneratedAttribute]
public void set_ConfigureMessageHandler(Func`2<HttpMessageHandler, HttpMessageHandler> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public CalculateResponseStatus get_CalculateResponseStatus();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_CalculateResponseStatus(CalculateResponseStatus value);
    [CompilerGeneratedAttribute]
public IAuthenticator get_Authenticator();
    [CompilerGeneratedAttribute]
public void set_Authenticator(IAuthenticator value);
    [CompilerGeneratedAttribute]
public ICredentials get_Credentials();
    [CompilerGeneratedAttribute]
public void set_Credentials(ICredentials value);
    [CompilerGeneratedAttribute]
public bool get_UseDefaultCredentials();
    [CompilerGeneratedAttribute]
public void set_UseDefaultCredentials(bool value);
    [CompilerGeneratedAttribute]
public bool get_DisableCharset();
    [CompilerGeneratedAttribute]
public void set_DisableCharset(bool value);
    [CompilerGeneratedAttribute]
public DecompressionMethods get_AutomaticDecompression();
    [CompilerGeneratedAttribute]
public void set_AutomaticDecompression(DecompressionMethods value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxRedirects();
    [CompilerGeneratedAttribute]
public void set_MaxRedirects(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public X509CertificateCollection get_ClientCertificates();
    [CompilerGeneratedAttribute]
public void set_ClientCertificates(X509CertificateCollection value);
    [CompilerGeneratedAttribute]
public IWebProxy get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(IWebProxy value);
    [CompilerGeneratedAttribute]
public CacheControlHeaderValue get_CachePolicy();
    [CompilerGeneratedAttribute]
public void set_CachePolicy(CacheControlHeaderValue value);
    [CompilerGeneratedAttribute]
public bool get_FollowRedirects();
    [CompilerGeneratedAttribute]
public void set_FollowRedirects(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Expect100Continue();
    [CompilerGeneratedAttribute]
public void set_Expect100Continue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public bool get_PreAuthenticate();
    [CompilerGeneratedAttribute]
public void set_PreAuthenticate(bool value);
    [CompilerGeneratedAttribute]
public RemoteCertificateValidationCallback get_RemoteCertificateValidationCallback();
    [CompilerGeneratedAttribute]
public void set_RemoteCertificateValidationCallback(RemoteCertificateValidationCallback value);
    [CompilerGeneratedAttribute]
public string get_BaseHost();
    [CompilerGeneratedAttribute]
public void set_BaseHost(string value);
    [CompilerGeneratedAttribute]
public CookieContainer get_CookieContainer();
    [CompilerGeneratedAttribute]
public void set_CookieContainer(CookieContainer value);
    [CompilerGeneratedAttribute]
public int get_MaxTimeout();
    [CompilerGeneratedAttribute]
public void set_MaxTimeout(int value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Encoding get_Encoding();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Encoding(Encoding value);
    [CompilerGeneratedAttribute]
public bool get_ThrowOnDeserializationError();
    [CompilerGeneratedAttribute]
public void set_ThrowOnDeserializationError(bool value);
    [CompilerGeneratedAttribute]
public bool get_FailOnDeserializationError();
    [CompilerGeneratedAttribute]
public void set_FailOnDeserializationError(bool value);
    [CompilerGeneratedAttribute]
public bool get_ThrowOnAnyError();
    [CompilerGeneratedAttribute]
public void set_ThrowOnAnyError(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowMultipleDefaultParametersWithSameName();
    [CompilerGeneratedAttribute]
public void set_AllowMultipleDefaultParametersWithSameName(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Func`2<string, string> get_Encode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Encode(Func`2<string, string> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Func`3<string, Encoding, string> get_EncodeQuery();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_EncodeQuery(Func`3<string, Encoding, string> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class RestSharp.RestClientSyncExtensions : object {
    [ExtensionAttribute]
public static RestResponse`1<T> ExecuteGet(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse ExecuteGet(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse`1<T> ExecutePost(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse ExecutePost(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse`1<T> ExecutePut(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse ExecutePut(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse`1<T> Execute(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse Execute(RestClient client, RestRequest request, Method httpMethod);
    [ExtensionAttribute]
public static RestResponse`1<T> Execute(RestClient client, RestRequest request, Method httpMethod);
    [ExtensionAttribute]
public static T Get(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse Get(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static T Post(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static T Put(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse Put(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static T Head(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse Head(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static T Options(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse Options(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static T Patch(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse Patch(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static T Delete(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static RestResponse Delete(RestClient client, RestRequest request);
    [ExtensionAttribute]
public static Byte[] DownloadData(RestClient client, RestRequest request);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class RestSharp.RestRequest : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`3<HttpResponseMessage, RestRequest, RestResponse> _advancedResponseHandler;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<Stream, Stream> _responseWriter;
    [NullableAttribute("1")]
private List`1<FileParameter> _files;
    [CompilerGeneratedAttribute]
private bool <AlwaysMultipartFormData>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MultipartFormQuoteParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MultipartFormQuoteBoundary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FormBoundary>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private RequestParameters <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private CookieContainer <CookieContainer>k__BackingField;
    [CompilerGeneratedAttribute]
private IAuthenticator <Authenticator>k__BackingField;
    [CompilerGeneratedAttribute]
private Method <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Timeout>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private DataFormat <RequestFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RootElement>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<RestResponse> <OnBeforeDeserialization>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<HttpRequestMessage, ValueTask> <OnBeforeRequest>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<HttpResponseMessage, ValueTask> <OnAfterRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Attempts>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpCompletionOption <CompletionOption>k__BackingField;
    [CompilerGeneratedAttribute]
private CacheControlHeaderValue <CachePolicy>k__BackingField;
    public bool AlwaysMultipartFormData { get; public set; }
    public bool MultipartFormQuoteParameters { get; public set; }
    public bool MultipartFormQuoteBoundary { get; public set; }
    public string FormBoundary { get; public set; }
    [NullableAttribute("1")]
public RequestParameters Parameters { get; }
    public CookieContainer CookieContainer { get; public set; }
    public IAuthenticator Authenticator { get; public set; }
    [NullableAttribute("1")]
public IReadOnlyCollection`1<FileParameter> Files { get; }
    public Method Method { get; public set; }
    public int Timeout { get; public set; }
    [NullableAttribute("1")]
public string Resource { get; public set; }
    public DataFormat RequestFormat { get; public set; }
    public string RootElement { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<RestResponse> OnBeforeDeserialization { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<HttpRequestMessage, ValueTask> OnBeforeRequest { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<HttpResponseMessage, ValueTask> OnAfterRequest { get; public set; }
    public int Attempts { get; private set; }
    public HttpCompletionOption CompletionOption { get; public set; }
    public CacheControlHeaderValue CachePolicy { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<Stream, Stream> ResponseWriter { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`3<HttpResponseMessage, RestRequest, RestResponse> AdvancedResponseWriter { get; public set; }
    public RestRequest(string resource, Method method);
    [NullableContextAttribute("1")]
public RestRequest(Uri resource, Method method);
    [CompilerGeneratedAttribute]
public bool get_AlwaysMultipartFormData();
    [CompilerGeneratedAttribute]
public void set_AlwaysMultipartFormData(bool value);
    [CompilerGeneratedAttribute]
public bool get_MultipartFormQuoteParameters();
    [CompilerGeneratedAttribute]
public void set_MultipartFormQuoteParameters(bool value);
    [CompilerGeneratedAttribute]
public bool get_MultipartFormQuoteBoundary();
    [CompilerGeneratedAttribute]
public void set_MultipartFormQuoteBoundary(bool value);
    [CompilerGeneratedAttribute]
public string get_FormBoundary();
    [CompilerGeneratedAttribute]
public void set_FormBoundary(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public RequestParameters get_Parameters();
    [CompilerGeneratedAttribute]
public CookieContainer get_CookieContainer();
    [CompilerGeneratedAttribute]
public void set_CookieContainer(CookieContainer value);
    [CompilerGeneratedAttribute]
public IAuthenticator get_Authenticator();
    [CompilerGeneratedAttribute]
public void set_Authenticator(IAuthenticator value);
    [NullableContextAttribute("1")]
public IReadOnlyCollection`1<FileParameter> get_Files();
    [CompilerGeneratedAttribute]
public Method get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(Method value);
    [CompilerGeneratedAttribute]
public int get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(int value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Resource();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Resource(string value);
    [CompilerGeneratedAttribute]
public DataFormat get_RequestFormat();
    [CompilerGeneratedAttribute]
public void set_RequestFormat(DataFormat value);
    [CompilerGeneratedAttribute]
public string get_RootElement();
    [CompilerGeneratedAttribute]
public void set_RootElement(string value);
    [CompilerGeneratedAttribute]
public Action`1<RestResponse> get_OnBeforeDeserialization();
    [CompilerGeneratedAttribute]
public void set_OnBeforeDeserialization(Action`1<RestResponse> value);
    [CompilerGeneratedAttribute]
public Func`2<HttpRequestMessage, ValueTask> get_OnBeforeRequest();
    [CompilerGeneratedAttribute]
public void set_OnBeforeRequest(Func`2<HttpRequestMessage, ValueTask> value);
    [CompilerGeneratedAttribute]
public Func`2<HttpResponseMessage, ValueTask> get_OnAfterRequest();
    [CompilerGeneratedAttribute]
public void set_OnAfterRequest(Func`2<HttpResponseMessage, ValueTask> value);
    internal void IncreaseNumAttempts();
    [CompilerGeneratedAttribute]
public int get_Attempts();
    [CompilerGeneratedAttribute]
private void set_Attempts(int value);
    [CompilerGeneratedAttribute]
public HttpCompletionOption get_CompletionOption();
    [CompilerGeneratedAttribute]
public void set_CompletionOption(HttpCompletionOption value);
    [CompilerGeneratedAttribute]
public CacheControlHeaderValue get_CachePolicy();
    [CompilerGeneratedAttribute]
public void set_CachePolicy(CacheControlHeaderValue value);
    public Func`2<Stream, Stream> get_ResponseWriter();
    public void set_ResponseWriter(Func`2<Stream, Stream> value);
    public Func`3<HttpResponseMessage, RestRequest, RestResponse> get_AdvancedResponseWriter();
    public void set_AdvancedResponseWriter(Func`3<HttpResponseMessage, RestRequest, RestResponse> value);
    [NullableContextAttribute("1")]
public RestRequest AddParameter(Parameter parameter);
    [NullableContextAttribute("1")]
public RestRequest RemoveParameter(Parameter parameter);
    [NullableContextAttribute("1")]
internal RestRequest AddFile(FileParameter file);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static IEnumerable`1<KeyValuePair`2<string, string>> <.ctor>g__ParseQuery|3_0(string query);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class RestSharp.RestRequestExtensions : object {
    private static Regex PortSplitRegex;
    private static RestRequestExtensions();
    [ExtensionAttribute]
public static RestRequest AddParameter(RestRequest request, string name, string value, bool encode);
    [ExtensionAttribute]
public static RestRequest AddParameter(RestRequest request, string name, T value, bool encode);
    [ExtensionAttribute]
private static RestRequest AddParameters(RestRequest request, IEnumerable`1<Parameter> parameters);
    [ExtensionAttribute]
public static RestRequest AddOrUpdateParameter(RestRequest request, string name, string value, bool encode);
    [ExtensionAttribute]
public static RestRequest AddOrUpdateParameter(RestRequest request, string name, T value, bool encode);
    [ExtensionAttribute]
public static RestRequest AddUrlSegment(RestRequest request, string name, string value, bool encode);
    [ExtensionAttribute]
public static RestRequest AddUrlSegment(RestRequest request, string name, T value, bool encode);
    [ExtensionAttribute]
public static RestRequest AddQueryParameter(RestRequest request, string name, string value, bool encode);
    [ExtensionAttribute]
public static RestRequest AddQueryParameter(RestRequest request, string name, T value, bool encode);
    [ExtensionAttribute]
public static RestRequest AddHeader(RestRequest request, string name, string value);
    [ExtensionAttribute]
public static RestRequest AddHeader(RestRequest request, string name, T value);
    [ExtensionAttribute]
public static RestRequest AddOrUpdateHeader(RestRequest request, string name, string value);
    [ExtensionAttribute]
public static RestRequest AddOrUpdateHeader(RestRequest request, string name, T value);
    [ExtensionAttribute]
public static RestRequest AddHeaders(RestRequest request, ICollection`1<KeyValuePair`2<string, string>> headers);
    [ExtensionAttribute]
public static RestRequest AddOrUpdateHeaders(RestRequest request, ICollection`1<KeyValuePair`2<string, string>> headers);
    [ExtensionAttribute]
public static RestRequest AddParameter(RestRequest request, string name, object value, ParameterType type, bool encode);
    [ExtensionAttribute]
private static RestRequest AddBodyParameter(RestRequest request, string name, object value);
    [ExtensionAttribute]
public static RestRequest AddOrUpdateParameter(RestRequest request, string name, object value, ParameterType type, bool encode);
    [ExtensionAttribute]
public static RestRequest AddOrUpdateParameter(RestRequest request, Parameter parameter);
    [ExtensionAttribute]
private static RestRequest RemoveParameter(RestRequest request, string name, ParameterType type);
    [ExtensionAttribute]
public static RestRequest AddOrUpdateParameters(RestRequest request, IEnumerable`1<Parameter> parameters);
    [ExtensionAttribute]
public static RestRequest AddFile(RestRequest request, string name, string path, ContentType contentType, FileParameterOptions options);
    [ExtensionAttribute]
public static RestRequest AddFile(RestRequest request, string name, Byte[] bytes, string fileName, ContentType contentType, FileParameterOptions options);
    [ExtensionAttribute]
public static RestRequest AddFile(RestRequest request, string name, Func`1<Stream> getFile, string fileName, ContentType contentType, FileParameterOptions options);
    [ExtensionAttribute]
public static RestRequest AddBody(RestRequest request, object obj, ContentType contentType);
    [ExtensionAttribute]
public static RestRequest AddStringBody(RestRequest request, string body, DataFormat dataFormat);
    [ExtensionAttribute]
public static RestRequest AddStringBody(RestRequest request, string body, ContentType contentType);
    [ExtensionAttribute]
public static RestRequest AddJsonBody(RestRequest request, string jsonString, bool forceSerialize, ContentType contentType);
    [ExtensionAttribute]
public static RestRequest AddJsonBody(RestRequest request, T obj, ContentType contentType);
    [ExtensionAttribute]
public static RestRequest AddXmlBody(RestRequest request, T obj, ContentType contentType, string xmlNamespace);
    [ExtensionAttribute]
public static RestRequest AddObject(RestRequest request, T obj, String[] includedProperties);
    [ExtensionAttribute]
public static RestRequest AddObjectStatic(RestRequest request, T obj, String[] includedProperties);
    [ExtensionAttribute]
public static RestRequest AddObjectStatic(RestRequest request, T obj);
    [ExtensionAttribute]
public static RestRequest AddCookie(RestRequest request, string name, string value, string path, string domain);
    private static void CheckAndThrowsForInvalidHost(string name, string value);
    private static void CheckAndThrowsDuplicateKeys(ICollection`1<KeyValuePair`2<string, string>> headers);
    [CompilerGeneratedAttribute]
internal static bool <CheckAndThrowsForInvalidHost>g__InvalidHost|35_0(string host);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerDisplay()}")]
public class RestSharp.RestResponse : RestResponseBase {
    public RestResponse(RestRequest request);
    [AsyncStateMachineAttribute("RestSharp.RestResponse/<FromHttpResponse>d__0")]
internal static Task`1<RestResponse> FromHttpResponse(HttpResponseMessage httpResponse, RestRequest request, Encoding encoding, CookieCollection cookieCollection, CalculateResponseStatus calculateResponseStatus, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerDisplay()}")]
public class RestSharp.RestResponse`1 : RestResponse {
    [CompilerGeneratedAttribute]
private T <Data>k__BackingField;
    public T Data { get; public set; }
    [NullableContextAttribute("1")]
public RestResponse`1(RestRequest request);
    [CompilerGeneratedAttribute]
public T get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(T value);
    [NullableContextAttribute("1")]
public static RestResponse`1<T> FromResponse(RestResponse response);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerDisplay()}")]
public abstract class RestSharp.RestResponseBase : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private RestRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ContentLength>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ICollection`1<string> <ContentEncoding>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSuccessStatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <RawBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ResponseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Server>k__BackingField;
    [CompilerGeneratedAttribute]
private CookieCollection <Cookies>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyCollection`1<HeaderParameter> <Headers>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyCollection`1<HeaderParameter> <ContentHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseStatus <ResponseStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <ErrorException>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RootElement>k__BackingField;
    [NullableAttribute("1")]
public RestRequest Request { get; public set; }
    public string ContentType { get; public set; }
    public Nullable`1<long> ContentLength { get; public set; }
    [NullableAttribute("1")]
public ICollection`1<string> ContentEncoding { get; public set; }
    public string Content { get; public set; }
    public HttpStatusCode StatusCode { get; public set; }
    public bool IsSuccessStatusCode { get; public set; }
    public bool IsSuccessful { get; }
    public string StatusDescription { get; public set; }
    public Byte[] RawBytes { get; public set; }
    public Uri ResponseUri { get; public set; }
    public string Server { get; public set; }
    public CookieCollection Cookies { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyCollection`1<HeaderParameter> Headers { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyCollection`1<HeaderParameter> ContentHeaders { get; public set; }
    public ResponseStatus ResponseStatus { get; public set; }
    public string ErrorMessage { get; public set; }
    public Exception ErrorException { get; public set; }
    public Version Version { get; public set; }
    public string RootElement { get; public set; }
    [NullableContextAttribute("1")]
protected RestResponseBase(RestRequest request);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public RestRequest get_Request();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Request(RestRequest value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ContentLength();
    [CompilerGeneratedAttribute]
public void set_ContentLength(Nullable`1<long> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ICollection`1<string> get_ContentEncoding();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ContentEncoding(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public bool get_IsSuccessStatusCode();
    [CompilerGeneratedAttribute]
public void set_IsSuccessStatusCode(bool value);
    public bool get_IsSuccessful();
    [CompilerGeneratedAttribute]
public string get_StatusDescription();
    [CompilerGeneratedAttribute]
public void set_StatusDescription(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_RawBytes();
    [CompilerGeneratedAttribute]
public void set_RawBytes(Byte[] value);
    [CompilerGeneratedAttribute]
public Uri get_ResponseUri();
    [CompilerGeneratedAttribute]
public void set_ResponseUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_Server();
    [CompilerGeneratedAttribute]
public void set_Server(string value);
    [CompilerGeneratedAttribute]
public CookieCollection get_Cookies();
    [CompilerGeneratedAttribute]
public void set_Cookies(CookieCollection value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<HeaderParameter> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IReadOnlyCollection`1<HeaderParameter> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<HeaderParameter> get_ContentHeaders();
    [CompilerGeneratedAttribute]
public void set_ContentHeaders(IReadOnlyCollection`1<HeaderParameter> value);
    [CompilerGeneratedAttribute]
public ResponseStatus get_ResponseStatus();
    [CompilerGeneratedAttribute]
public void set_ResponseStatus(ResponseStatus value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public Exception get_ErrorException();
    [CompilerGeneratedAttribute]
public void set_ErrorException(Exception value);
    [CompilerGeneratedAttribute]
public Version get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Version value);
    [CompilerGeneratedAttribute]
public string get_RootElement();
    [CompilerGeneratedAttribute]
public void set_RootElement(string value);
    [NullableContextAttribute("1")]
protected string DebuggerDisplay();
    internal Exception GetException();
    [NullableContextAttribute("1")]
internal void AddException(Exception exception);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class RestSharp.RestXmlRequest : RestRequest {
    [CompilerGeneratedAttribute]
private string <DateFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <XmlNamespace>k__BackingField;
    public string DateFormat { get; public set; }
    public string XmlNamespace { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DateFormat();
    [CompilerGeneratedAttribute]
public void set_DateFormat(string value);
    [CompilerGeneratedAttribute]
public string get_XmlNamespace();
    [CompilerGeneratedAttribute]
public void set_XmlNamespace(string value);
}
[NullableContextAttribute("2")]
public interface RestSharp.Serializers.IDeserializer {
    public abstract virtual T Deserialize(RestResponse response);
}
[NullableContextAttribute("1")]
public interface RestSharp.Serializers.IRestSerializer {
    public ISerializer Serializer { get; }
    public IDeserializer Deserializer { get; }
    public String[] AcceptedContentTypes { get; }
    public SupportsContentType SupportsContentType { get; }
    public DataFormat DataFormat { get; }
    public abstract virtual ISerializer get_Serializer();
    public abstract virtual IDeserializer get_Deserializer();
    public abstract virtual String[] get_AcceptedContentTypes();
    public abstract virtual SupportsContentType get_SupportsContentType();
    public abstract virtual DataFormat get_DataFormat();
    public abstract virtual string Serialize(Parameter parameter);
}
[NullableContextAttribute("1")]
public interface RestSharp.Serializers.ISerializer {
    public ContentType ContentType { get; public set; }
    public abstract virtual ContentType get_ContentType();
    public abstract virtual void set_ContentType(ContentType value);
    public abstract virtual string Serialize(object obj);
}
[NullableContextAttribute("2")]
public interface RestSharp.Serializers.IWithDateFormat {
    public string DateFormat { get; public set; }
    public abstract virtual string get_DateFormat();
    public abstract virtual void set_DateFormat(string value);
}
[NullableContextAttribute("2")]
public interface RestSharp.Serializers.IWithRootElement {
    public string RootElement { get; public set; }
    public abstract virtual string get_RootElement();
    public abstract virtual void set_RootElement(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class RestSharp.Serializers.Json.RestClientExtensions : object {
    [ExtensionAttribute]
public static SerializerConfig UseSystemTextJson(SerializerConfig serializerConfig);
    [ExtensionAttribute]
public static SerializerConfig UseSystemTextJson(SerializerConfig serializerConfig, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.Serializers.Json.SystemTextJsonSerializer : object {
    private JsonSerializerOptions _options;
    [CompilerGeneratedAttribute]
private ContentType <ContentType>k__BackingField;
    public ContentType ContentType { get; public set; }
    public ISerializer Serializer { get; }
    public IDeserializer Deserializer { get; }
    public DataFormat DataFormat { get; }
    public String[] AcceptedContentTypes { get; }
    public SupportsContentType SupportsContentType { get; }
    public SystemTextJsonSerializer(JsonSerializerOptions options);
    [NullableContextAttribute("2")]
public sealed virtual string Serialize(object obj);
    public sealed virtual string Serialize(Parameter bodyParameter);
    [NullableContextAttribute("2")]
public sealed virtual T Deserialize(RestResponse response);
    [CompilerGeneratedAttribute]
public sealed virtual ContentType get_ContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentType(ContentType value);
    public sealed virtual ISerializer get_Serializer();
    public sealed virtual IDeserializer get_Deserializer();
    public sealed virtual DataFormat get_DataFormat();
    public sealed virtual String[] get_AcceptedContentTypes();
    public sealed virtual SupportsContentType get_SupportsContentType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.Serializers.RestSerializers : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<DataFormat, SerializerRecord> <Serializers>k__BackingField;
    public IReadOnlyDictionary`2<DataFormat, SerializerRecord> Serializers { get; }
    public RestSerializers(Dictionary`2<DataFormat, SerializerRecord> records);
    public RestSerializers(SerializerConfig config);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<DataFormat, SerializerRecord> get_Serializers();
    public IRestSerializer GetSerializer(DataFormat dataFormat);
    internal String[] GetAcceptedContentTypes();
    internal RestResponse`1<T> Deserialize(RestRequest request, RestResponse raw, ReadOnlyRestClientOptions options);
    [NullableContextAttribute("2")]
public T DeserializeContent(RestResponse response);
    private IDeserializer GetContentDeserializer(RestResponseBase response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.Serializers.SerializerConfig : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<DataFormat, SerializerRecord> <Serializers>k__BackingField;
    internal Dictionary`2<DataFormat, SerializerRecord> Serializers { get; }
    [CompilerGeneratedAttribute]
internal Dictionary`2<DataFormat, SerializerRecord> get_Serializers();
    public SerializerConfig UseSerializer(Func`1<IRestSerializer> serializerFactory);
    public void UseDefaultSerializers();
    public SerializerConfig UseSerializer();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class RestSharp.Serializers.SerializerConfigExtensions : object {
    [ExtensionAttribute]
public static SerializerConfig UseJson(SerializerConfig config);
    [ExtensionAttribute]
public static SerializerConfig UseXml(SerializerConfig config);
    [ExtensionAttribute]
public static SerializerConfig UseOnlySerializer(SerializerConfig config, Func`1<IRestSerializer> serializerFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.Serializers.SerializerRecord : object {
    [CompilerGeneratedAttribute]
private DataFormat <DataFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <AcceptedContentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private SupportsContentType <SupportsContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<IRestSerializer> <GetSerializer>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public DataFormat DataFormat { get; public set; }
    public String[] AcceptedContentTypes { get; public set; }
    public SupportsContentType SupportsContentType { get; public set; }
    public Func`1<IRestSerializer> GetSerializer { get; public set; }
    public SerializerRecord(DataFormat DataFormat, String[] AcceptedContentTypes, SupportsContentType SupportsContentType, Func`1<IRestSerializer> GetSerializer);
    [CompilerGeneratedAttribute]
protected SerializerRecord(SerializerRecord original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public DataFormat get_DataFormat();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DataFormat(DataFormat value);
    [CompilerGeneratedAttribute]
public String[] get_AcceptedContentTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AcceptedContentTypes(String[] value);
    [CompilerGeneratedAttribute]
public SupportsContentType get_SupportsContentType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SupportsContentType(SupportsContentType value);
    [CompilerGeneratedAttribute]
public Func`1<IRestSerializer> get_GetSerializer();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GetSerializer(Func`1<IRestSerializer> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(SerializerRecord left, SerializerRecord right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(SerializerRecord left, SerializerRecord right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(SerializerRecord other);
    [CompilerGeneratedAttribute]
public virtual SerializerRecord <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(DataFormat& DataFormat, String[]& AcceptedContentTypes, SupportsContentType& SupportsContentType, Func`1& GetSerializer);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class RestSharp.Serializers.Xml.DotNetXmlDeserializer : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Encoding <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RootElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateFormat>k__BackingField;
    [NullableAttribute("1")]
public Encoding Encoding { get; public set; }
    [ObsoleteAttribute("DotnetXmlDeserializer does not support RootElement.")]
public string RootElement { get; public set; }
    public string Namespace { get; public set; }
    [ObsoleteAttribute("DotnetXmlDeserializer does not support DateFormat.")]
public string DateFormat { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Encoding get_Encoding();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Encoding(Encoding value);
    [CompilerGeneratedAttribute]
public string get_RootElement();
    [CompilerGeneratedAttribute]
public void set_RootElement(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Namespace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_DateFormat();
    [CompilerGeneratedAttribute]
public void set_DateFormat(string value);
    public sealed virtual T Deserialize(RestResponse response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.Serializers.Xml.DotNetXmlSerializer : object {
    [CompilerGeneratedAttribute]
private Encoding <Encoding>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <RootElement>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentType <ContentType>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<ValueTuple`2<Type, string>, XmlSerializer> Cache;
    private static ReaderWriterLockSlim CacheLock;
    public Encoding Encoding { get; public set; }
    [NullableAttribute("2")]
public string RootElement { get; public set; }
    [NullableAttribute("2")]
public string Namespace { get; public set; }
    public ContentType ContentType { get; public set; }
    public DotNetXmlSerializer(string namespace);
    private static DotNetXmlSerializer();
    [CompilerGeneratedAttribute]
public Encoding get_Encoding();
    [CompilerGeneratedAttribute]
public void set_Encoding(Encoding value);
    public sealed virtual string Serialize(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_RootElement();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RootElement(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Namespace();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ContentType get_ContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentType(ContentType value);
    private static XmlSerializer GetXmlSerializer(Type type, string rootElement);
}
[ExtensionAttribute]
public static class RestSharp.Serializers.Xml.DotNetXmlSerializerClientExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static SerializerConfig UseDotNetXmlSerializer(SerializerConfig serializerConfig, string xmlNamespace, Encoding encoding);
}
[NullableContextAttribute("2")]
public interface RestSharp.Serializers.Xml.IXmlDeserializer {
    public string Namespace { get; public set; }
    public abstract virtual string get_Namespace();
    public abstract virtual void set_Namespace(string value);
}
[NullableContextAttribute("2")]
public interface RestSharp.Serializers.Xml.IXmlSerializer {
    public string Namespace { get; public set; }
    public abstract virtual string get_Namespace();
    public abstract virtual void set_Namespace(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.Serializers.Xml.XmlRestSerializer : object {
    private IXmlDeserializer _xmlDeserializer;
    private IXmlSerializer _xmlSerializer;
    public ISerializer Serializer { get; }
    public IDeserializer Deserializer { get; }
    public String[] AcceptedContentTypes { get; }
    public SupportsContentType SupportsContentType { get; }
    public DataFormat DataFormat { get; }
    public XmlRestSerializer(IXmlSerializer xmlSerializer, IXmlDeserializer xmlDeserializer);
    public sealed virtual ISerializer get_Serializer();
    public sealed virtual IDeserializer get_Deserializer();
    public sealed virtual String[] get_AcceptedContentTypes();
    public sealed virtual SupportsContentType get_SupportsContentType();
    public sealed virtual DataFormat get_DataFormat();
    public sealed virtual string Serialize(Parameter parameter);
    public XmlRestSerializer WithXmlSerializer(IXmlSerializer xmlSerializer);
    public XmlRestSerializer WithXmlDeserializer(IXmlDeserializer xmlDeserializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class RestSharp.SimpleClientFactory : object {
    private static ConcurrentDictionary`2<string, HttpClient> CachedClients;
    private static SimpleClientFactory();
    public static HttpClient GetClient(Uri baseUrl, Func`1<HttpClient> getClient);
}
public class RestSharp.SupportsContentType : MulticastDelegate {
    public SupportsContentType(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual bool Invoke(ContentType contentType);
    public virtual IAsyncResult BeginInvoke(ContentType contentType, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class RestSharp.UriExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static Uri MergeBaseUrlAndResource(Uri baseUrl, string resource);
    [ExtensionAttribute]
public static Uri AddQueryString(Uri uri, string query);
    [ExtensionAttribute]
public static UrlSegmentParamsValues GetUrlSegmentParamsValues(Uri baseUri, string resource, Func`2<string, string> encode, ParametersCollection[] parametersCollections);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class RestSharp.UrlSegmentParameter : NamedParameter {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public UrlSegmentParameter(string name, string value, bool encode);
    [CompilerGeneratedAttribute]
protected UrlSegmentParameter(UrlSegmentParameter original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(UrlSegmentParameter left, UrlSegmentParameter right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(UrlSegmentParameter left, UrlSegmentParameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(NamedParameter other);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(UrlSegmentParameter other);
    [CompilerGeneratedAttribute]
public virtual Parameter <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class RestSharp.UrlSegmentParamsValues : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public Uri Uri { get; public set; }
    public string Resource { get; public set; }
    public UrlSegmentParamsValues(Uri Uri, string Resource);
    [CompilerGeneratedAttribute]
protected UrlSegmentParamsValues(UrlSegmentParamsValues original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public string get_Resource();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Resource(string value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(UrlSegmentParamsValues left, UrlSegmentParamsValues right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(UrlSegmentParamsValues left, UrlSegmentParamsValues right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(UrlSegmentParamsValues other);
    [CompilerGeneratedAttribute]
public virtual UrlSegmentParamsValues <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Uri& Uri, String& Resource);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class RestSharp.XmlParameter : BodyParameter {
    [CompilerGeneratedAttribute]
private string <XmlNamespace>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string XmlNamespace { get; }
    [NullableContextAttribute("1")]
public XmlParameter(string name, object value, string xmlNamespace, ContentType contentType);
    public XmlParameter(object value, string xmlNamespace, ContentType contentType);
    [CompilerGeneratedAttribute]
protected XmlParameter(XmlParameter original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_XmlNamespace();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(XmlParameter left, XmlParameter right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(XmlParameter left, XmlParameter right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(BodyParameter other);
    [CompilerGeneratedAttribute]
public virtual bool Equals(XmlParameter other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual Parameter <Clone>$();
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[EditorBrowsableAttribute("1")]
internal class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
