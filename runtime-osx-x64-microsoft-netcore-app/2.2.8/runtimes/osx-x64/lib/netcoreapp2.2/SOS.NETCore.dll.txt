internal class SOS.SymbolReader : object {
    private static string GetFileName(string pathName);
    internal static IntPtr LoadSymbolsForModule(string assemblyPath, bool isFileLayout, ulong loadedPeAddress, int loadedPeSize, ulong inMemoryPdbAddress, int inMemoryPdbSize, ReadMemoryDelegate readMemory);
    internal static void Dispose(IntPtr symbolReaderHandle);
    internal static bool ResolveSequencePoint(IntPtr symbolReaderHandle, string filePath, int lineNumber, Int32& methodToken, Int32& ilOffset);
    internal static bool GetLineByILOffset(IntPtr symbolReaderHandle, int methodToken, long ilOffset, Int32& lineNumber, IntPtr& fileName);
    private static bool GetSourceLineByILOffset(IntPtr symbolReaderHandle, int methodToken, long ilOffset, Int32& lineNumber, String& fileName);
    internal static bool GetLocalVariableName(IntPtr symbolReaderHandle, int methodToken, int localIndex, IntPtr& localVarName);
    internal static bool GetLocalVariableByIndex(IntPtr symbolReaderHandle, int methodToken, int localIndex, String& localVarName);
    internal static bool GetLocalsInfoForMethod(string assemblyPath, int methodToken, List`1& locals);
    internal static bool GetInfoForMethod(string assemblyPath, int methodToken, MethodDebugInfo& debugInfo);
    private static bool GetDebugInfoForMethod(string assemblyPath, int methodToken, List`1& points);
    private static OpenedReader GetReader(string assemblyPath, bool isFileLayout, Stream peStream, Stream pdbStream);
    private static OpenedReader TryOpenReaderForInMemoryPdb(Stream pdbStream);
    private static OpenedReader TryOpenReaderFromAssembly(string assemblyPath, bool isFileLayout, Stream peStream);
    private static void ReadPortableDebugTableEntries(PEReader peReader, DebugDirectoryEntry& codeViewEntry, DebugDirectoryEntry& embeddedPdbEntry);
    private static OpenedReader TryOpenReaderFromCodeView(PEReader peReader, DebugDirectoryEntry codeViewEntry, string assemblyPath);
    private static OpenedReader TryOpenReaderFromEmbeddedPdb(PEReader peReader, DebugDirectoryEntry embeddedPdbEntry);
    private static Stream TryOpenFile(string path);
}
