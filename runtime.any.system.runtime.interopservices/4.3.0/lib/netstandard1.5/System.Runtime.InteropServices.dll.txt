internal static class FxResources.System.Runtime.InteropServices.SR : object {
}
[SecuritySafeCriticalAttribute]
public class System.Runtime.InteropServices.ComAwareEventInfo : EventInfo {
    private EventInfo _innerEventInfo;
    public EventAttributes Attributes { get; }
    public Type DeclaringType { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    public ComAwareEventInfo(Type type, string eventName);
    [SecuritySafeCriticalAttribute]
public virtual void AddEventHandler(object target, Delegate handler);
    [SecuritySafeCriticalAttribute]
public virtual void RemoveEventHandler(object target, Delegate handler);
    public virtual EventAttributes get_Attributes();
    public virtual MethodInfo GetAddMethod(bool nonPublic);
    public virtual MethodInfo GetRaiseMethod(bool nonPublic);
    public virtual MethodInfo GetRemoveMethod(bool nonPublic);
    public virtual Type get_DeclaringType();
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual bool IsDefined(Type attributeType, bool inherit);
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
    private static void GetDataForComInvocation(EventInfo eventInfo, Guid& sourceIid, Int32& dispid);
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.ComTypes.ADVF : Enum {
    public int value__;
    public static ADVF ADVF_NODATA;
    public static ADVF ADVF_PRIMEFIRST;
    public static ADVF ADVF_ONLYONCE;
    public static ADVF ADVF_DATAONSTOP;
    public static ADVF ADVFCACHE_NOHANDLER;
    public static ADVF ADVFCACHE_FORCEBUILTIN;
    public static ADVF ADVFCACHE_ONSAVE;
}
public enum System.Runtime.InteropServices.ComTypes.DATADIR : Enum {
    public int value__;
    public static DATADIR DATADIR_GET;
    public static DATADIR DATADIR_SET;
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.ComTypes.DVASPECT : Enum {
    public int value__;
    public static DVASPECT DVASPECT_CONTENT;
    public static DVASPECT DVASPECT_THUMBNAIL;
    public static DVASPECT DVASPECT_ICON;
    public static DVASPECT DVASPECT_DOCPRINT;
}
public class System.Runtime.InteropServices.ComTypes.FORMATETC : ValueType {
    public short cfFormat;
    public IntPtr ptd;
    public DVASPECT dwAspect;
    public int lindex;
    public TYMED tymed;
}
[GuidAttribute("0000010F-0000-0000-C000-000000000046")]
[InterfaceTypeAttribute("1")]
public interface System.Runtime.InteropServices.ComTypes.IAdviseSink {
    public abstract virtual void OnDataChange(FORMATETC& format, STGMEDIUM& stgmedium);
    public abstract virtual void OnViewChange(int aspect, int index);
    public abstract virtual void OnRename(IMoniker moniker);
    public abstract virtual void OnSave();
    public abstract virtual void OnClose();
}
[GuidAttribute("00000103-0000-0000-C000-000000000046")]
[InterfaceTypeAttribute("1")]
public interface System.Runtime.InteropServices.ComTypes.IEnumFORMATETC {
    public abstract virtual int Next(int celt, FORMATETC[] rgelt, Int32[] pceltFetched);
    public abstract virtual int Skip(int celt);
    public abstract virtual int Reset();
    public abstract virtual void Clone(IEnumFORMATETC& newEnum);
}
public class System.Runtime.InteropServices.ComTypes.STATDATA : ValueType {
    public FORMATETC formatetc;
    public ADVF advf;
    public IAdviseSink advSink;
    public int connection;
}
public class System.Runtime.InteropServices.ComTypes.STGMEDIUM : ValueType {
    public TYMED tymed;
    public IntPtr unionmember;
    public object pUnkForRelease;
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.ComTypes.TYMED : Enum {
    public int value__;
    public static TYMED TYMED_HGLOBAL;
    public static TYMED TYMED_FILE;
    public static TYMED TYMED_ISTREAM;
    public static TYMED TYMED_ISTORAGE;
    public static TYMED TYMED_GDI;
    public static TYMED TYMED_MFPICT;
    public static TYMED TYMED_ENHMF;
    public static TYMED TYMED_NULL;
}
[AttributeUsageAttribute("2048")]
public class System.Runtime.InteropServices.DefaultParameterValueAttribute : Attribute {
    private object _value;
    public object Value { get; }
    public DefaultParameterValueAttribute(object value);
    public object get_Value();
}
public class System.Runtime.InteropServices.HandleCollector : object {
    private static int deltaPercent;
    private string _name;
    private int _initialThreshold;
    private int _maximumThreshold;
    private int _threshold;
    private int _handleCount;
    private Int32[] _gc_counts;
    private int _gc_gen;
    public int Count { get; }
    public int InitialThreshold { get; }
    public int MaximumThreshold { get; }
    public string Name { get; }
    public HandleCollector(string name, int initialThreshold);
    public HandleCollector(string name, int initialThreshold, int maximumThreshold);
    private void Sleep(int milliseconds);
    public int get_Count();
    public int get_InitialThreshold();
    public int get_MaximumThreshold();
    public string get_Name();
    public void Add();
    public void Remove();
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string InvalidOperation_HCCountOverflow { get; }
    internal static string ArgumentOutOfRange_NeedNonNegNumRequired { get; }
    internal static string Argument_InvalidThreshold { get; }
    internal static string Arg_NeedNonNegNumRequired { get; }
    internal static string Arg_InvalidThreshold { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_InvalidOperation_HCCountOverflow();
    internal static string get_ArgumentOutOfRange_NeedNonNegNumRequired();
    internal static string get_Argument_InvalidThreshold();
    internal static string get_Arg_NeedNonNegNumRequired();
    internal static string get_Arg_InvalidThreshold();
    internal static Type get_ResourceType();
}
