public class Build.Tasks.ComputeManagedAssembliesToCompileToNative : Task {
    [CompilerGeneratedAttribute]
private ITaskItem[] <Assemblies>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <SdkAssemblies>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <FrameworkAssemblies>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DotNetAppHostExecutableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DotNetHostFxrLibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DotNetHostPolicyLibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <ManagedAssemblies>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <SatelliteAssemblies>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <AssembliesToSkipPublish>k__BackingField;
    [RequiredAttribute]
public ITaskItem[] Assemblies { get; public set; }
    [RequiredAttribute]
public ITaskItem[] SdkAssemblies { get; public set; }
    [RequiredAttribute]
public ITaskItem[] FrameworkAssemblies { get; public set; }
    [RequiredAttribute]
public string DotNetAppHostExecutableName { get; public set; }
    [RequiredAttribute]
public string DotNetHostFxrLibraryName { get; public set; }
    [RequiredAttribute]
public string DotNetHostPolicyLibraryName { get; public set; }
    [OutputAttribute]
public ITaskItem[] ManagedAssemblies { get; public set; }
    [OutputAttribute]
public ITaskItem[] SatelliteAssemblies { get; public set; }
    [OutputAttribute]
public ITaskItem[] AssembliesToSkipPublish { get; public set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Assemblies();
    [CompilerGeneratedAttribute]
public void set_Assemblies(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_SdkAssemblies();
    [CompilerGeneratedAttribute]
public void set_SdkAssemblies(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_FrameworkAssemblies();
    [CompilerGeneratedAttribute]
public void set_FrameworkAssemblies(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_DotNetAppHostExecutableName();
    [CompilerGeneratedAttribute]
public void set_DotNetAppHostExecutableName(string value);
    [CompilerGeneratedAttribute]
public string get_DotNetHostFxrLibraryName();
    [CompilerGeneratedAttribute]
public void set_DotNetHostFxrLibraryName(string value);
    [CompilerGeneratedAttribute]
public string get_DotNetHostPolicyLibraryName();
    [CompilerGeneratedAttribute]
public void set_DotNetHostPolicyLibraryName(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_ManagedAssemblies();
    [CompilerGeneratedAttribute]
public void set_ManagedAssemblies(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_SatelliteAssemblies();
    [CompilerGeneratedAttribute]
public void set_SatelliteAssemblies(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_AssembliesToSkipPublish();
    [CompilerGeneratedAttribute]
public void set_AssembliesToSkipPublish(ITaskItem[] value);
    public virtual bool Execute();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("64")]
internal class System.Runtime.InteropServices.LibraryImportAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <LibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntryPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private StringMarshalling <StringMarshalling>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <StringMarshallingCustomType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetLastError>k__BackingField;
    public string LibraryName { get; }
    public string EntryPoint { get; public set; }
    public StringMarshalling StringMarshalling { get; public set; }
    public Type StringMarshallingCustomType { get; public set; }
    public bool SetLastError { get; public set; }
    public LibraryImportAttribute(string libraryName);
    [CompilerGeneratedAttribute]
public string get_LibraryName();
    [CompilerGeneratedAttribute]
public string get_EntryPoint();
    [CompilerGeneratedAttribute]
public void set_EntryPoint(string value);
    [CompilerGeneratedAttribute]
public StringMarshalling get_StringMarshalling();
    [CompilerGeneratedAttribute]
public void set_StringMarshalling(StringMarshalling value);
    [CompilerGeneratedAttribute]
public Type get_StringMarshallingCustomType();
    [CompilerGeneratedAttribute]
public void set_StringMarshallingCustomType(Type value);
    [CompilerGeneratedAttribute]
public bool get_SetLastError();
    [CompilerGeneratedAttribute]
public void set_SetLastError(bool value);
}
internal enum System.Runtime.InteropServices.StringMarshalling : Enum {
    public int value__;
    public static StringMarshalling Custom;
    public static StringMarshalling Utf8;
    public static StringMarshalling Utf16;
}
