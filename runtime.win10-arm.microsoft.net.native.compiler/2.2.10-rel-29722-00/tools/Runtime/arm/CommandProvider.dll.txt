public enum CommandProvider.Alignment : Enum {
    public int value__;
    public static Alignment Left;
    public static Alignment Center;
    public static Alignment Right;
}
public static class CommandProvider.ArgumentParser : object {
    public static String[] Parse(string commandLine);
}
public static class CommandProvider.ColumnFilter : object {
    public static void Add(Func`2& filter, string filterSpec);
    public static void Add(Func`2& filter, string filterSpec);
    public static void ParseFilter(string filterSpec, String& columnName, String& columnFilter);
    private static ulong ParseHex(string value);
}
public enum CommandProvider.ColumnType : Enum {
    public int value__;
    public static ColumnType String;
    public static ColumnType Int;
    public static ColumnType Pointer;
}
public class CommandProvider.CommandException : Exception {
    private static string DefaultErrorText;
    public CommandException(Exception nestedException);
    public CommandException(string text);
    public CommandException(string text, Exception nestedException);
}
public class CommandProvider.CommandProvider : object {
    private ICorDebugProcess m_process;
    private ICorDebugDataTarget m_dataTarget;
    private IConsoleOutput m_consoleOutput;
    private bool m_isDebuggee64Bit;
    public CommandProvider(ICorDebugProcess process, ICorDebugDataTarget dataTarget, IConsoleOutput consoleOutput);
    public string FormatAddress(ulong address);
    public Nullable`1<ulong> AddressFromString(string stringAddress);
    public ulong ReadAddressFromProcess(ulong pointerToAddress);
    public sbyte ReadSByteFromProcess(ulong pointerToAddress);
    public byte ReadByteFromProcess(ulong pointerToAddress);
    public char ReadCharFromProcess(ulong pointerToAddress);
    public short ReadInt16FromProcess(ulong pointerToAddress);
    public ushort ReadUInt16FromProcess(ulong pointerToAddress);
    public int ReadInt32FromProcess(ulong pointerToAddress);
    public UInt32 ReadUInt32FromProcess(ulong pointerToAddress);
    public float ReadFloatFromProcess(ulong pointerToAddress);
    public long ReadInt64FromProcess(ulong pointerToAddress);
    public ulong ReadUInt64FromProcess(ulong pointerToAddress);
    public double ReadDoubleFromProcess(ulong pointerToAddress);
    public Char[] ReadCharArrayFromProcess(ulong pointerToAddress, UInt32 length);
    public void Write(string text);
    public void Write(string formattedString, Object[] args);
    public void WriteLine(string text);
    public void WriteLine(string formattedString, Object[] args);
    public sealed virtual void RunCommand(string command, string arguments);
    public void RunCommand_DumpDynamicTypes(String[] arguments);
    public void RunCommand_DumpEEType(String[] arguments);
    public void PrintDumpObjHelp();
    public void PrintDumpArrayHelp(bool notAnArray);
    public bool IsCorElementTypeValueType(CorElementType corElementType);
    public string ReadStringObject(ulong objectAddress);
    public void PrintObjectContents(OutputTable table, COR_TYPEID typeId, ulong baseAddress, ulong excessOffset, string namePrefix);
    public void RunCommand_DumpObj(String[] arguments);
    private UInt64[] GenerateIndicesFromIndex(ulong index, List`1<RankInfo> rankData, List`1& factors);
    private bool CheckIfIndicesInBoundsToEmit(UInt64[] indices, List`1<RankInfo> rankData, List`1<RankInfo> bounds);
    private string GenerateArrayIndexString(UInt64[] indices, List`1<RankInfo> rankData);
    private static bool TryParseRange(string rangeSpecified, List`1& ranges);
    public void RunCommand_DumpArray(String[] arguments);
    private void PrintArray(OutputTable table, ulong objectAddress, ulong count, List`1<RankInfo> boundsInfo, List`1<RankInfo> rangeToPrint, Action`2<ulong, UInt64[]> perElementFunction);
}
public class CommandProvider.CommandProviderFactory : object {
    public static int Initialize(string parameter);
    public sealed virtual ICommandProvider CreateCommandProvider(ICorDebugProcess process, ICorDebugDataTarget dataTarget, IConsoleOutput consoleOutput);
}
[GuidAttribute("4e996f69-7c97-43a7-8a54-621cb6fdd26a")]
[InterfaceTypeAttribute("1")]
public interface CommandProvider.ICommandProvider {
    public abstract virtual void RunCommand(string command, string arguments);
}
[GuidAttribute("f88fd507-3b86-4de0-b4f5-1c58581faea6")]
[InterfaceTypeAttribute("1")]
public interface CommandProvider.ICommandProviderFactory {
    public abstract virtual ICommandProvider CreateCommandProvider(ICorDebugProcess pProcess, ICorDebugDataTarget pDataTarget, IConsoleOutput pConsoleOutput);
}
[GuidAttribute("e2f23a59-b5a7-4d71-ba7a-b1cbbdc2c9c9")]
[InterfaceTypeAttribute("1")]
public interface CommandProvider.IConsoleOutput {
    public abstract virtual void Write(string text);
}
[ExtensionAttribute]
internal static class CommandProvider.MetadataExtensions : object {
    [ExtensionAttribute]
public static CorMetadataImport GetMetadata(ICorDebugType type);
    [ExtensionAttribute]
public static int GetToken(ICorDebugType type);
    [ExtensionAttribute]
public static string FormatTypeName(ICorDebugType type);
}
public class CommandProvider.OutputTable : object {
    private List`1<Column> m_columns;
    private List`1<string> m_values;
    public void AddColumnString(string name, Alignment alignment);
    public void AddColumnInt(string name, Alignment alignment);
    public void AddColumnPointer(string name, Alignment alignment);
    public void Put(string value);
    public void ClearData();
    public void Put(string formattedString, Object[] args);
    public string SummaryView();
    public string DetailedView();
    public void CsvExport(StreamWriter writer);
    private void WriteAligned(StringBuilder output, string text, int columnIndex, int columnWidth);
}
public class CommandProvider.TypeNameFormatter : object {
    private ICorDebugType m_type;
    private ICorDebugType[] m_genericArgs;
    public TypeNameFormatter(ICorDebugType type);
    public virtual string ToString();
    private void FormatArray(StringBuilder output, UInt32 rank);
    private void FormatPointer(StringBuilder output);
    private void FormatClass(StringBuilder output);
    private static string SanitizeClassName(string className);
}
public enum Microsoft.Samples.Debugging.CorDebug.CorDebuggerVersion : Enum {
    public int value__;
    public static CorDebuggerVersion RTM;
    public static CorDebuggerVersion Everett;
    public static CorDebuggerVersion Whidbey;
}
[FlagsAttribute]
public enum Microsoft.Samples.Debugging.CorDebug.CorDebugJITCompilerFlags : Enum {
    public int value__;
    public static CorDebugJITCompilerFlags CORDEBUG_JIT_DEFAULT;
    public static CorDebugJITCompilerFlags CORDEBUG_JIT_DISABLE_OPTIMIZATION;
    public static CorDebugJITCompilerFlags CORDEBUG_JIT_ENABLE_ENC;
}
public class Microsoft.Samples.Debugging.CorDebug.CorDynamicTypeDebugDataEnumerator : CorEnumerator`2<ICorDebugDynamicTypeDebugDataEnum, ICorDebugDynamicTypeDebugData> {
    public CorDynamicTypeDebugDataEnumerator(ICorDebugDynamicTypeDebugDataEnum typeEnum);
    private static bool MoveNext(ICorDebugDynamicTypeDebugDataEnum enumerator, ICorDebugDynamicTypeDebugData& nextElement);
}
public class Microsoft.Samples.Debugging.CorDebug.CorEnumerator`2 : object {
    private ICorDebugEnumType m_enum;
    private CorType m_current;
    private MoveNextFunc<ICorDebugEnumType, CorType> m_moveNextFunc;
    public int Count { get; }
    public CorType Current { get; }
    private object System.Collections.IEnumerator.Current { get; }
    protected CorEnumerator`2(ICorDebugEnumType rawEnumerator, MoveNextFunc<ICorDebugEnumType, CorType> moveNextFunc);
    public int get_Count();
    public sealed virtual IEnumerator`1<CorType> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
    public sealed virtual CorType get_Current();
    private sealed virtual override object System.Collections.IEnumerator.get_Current();
    public sealed virtual void Dispose();
}
public class Microsoft.Samples.Debugging.CorDebug.CorSharedMethodDebugDataEnumerator : CorEnumerator`2<ICorDebugSharedMethodDebugDataEnum, ICorDebugSharedMethodDebugData> {
    public CorSharedMethodDebugDataEnumerator(ICorDebugSharedMethodDebugDataEnum methodEnum);
    private static bool MoveNext(ICorDebugSharedMethodDebugDataEnum enumerator, ICorDebugSharedMethodDebugData& nextElement);
}
public enum Microsoft.Samples.Debugging.CorDebug.CorTokenType : Enum {
    public int value__;
    public static CorTokenType mdtModule;
    public static CorTokenType mdtTypeRef;
    public static CorTokenType mdtTypeDef;
    public static CorTokenType mdtFieldDef;
    public static CorTokenType mdtMethodDef;
    public static CorTokenType mdtParamDef;
    public static CorTokenType mdtInterfaceImpl;
    public static CorTokenType mdtMemberRef;
    public static CorTokenType mdtCustomAttribute;
    public static CorTokenType mdtPermission;
    public static CorTokenType mdtSignature;
    public static CorTokenType mdtEvent;
    public static CorTokenType mdtProperty;
    public static CorTokenType mdtModuleRef;
    public static CorTokenType mdtTypeSpec;
    public static CorTokenType mdtAssembly;
    public static CorTokenType mdtAssemblyRef;
    public static CorTokenType mdtFile;
    public static CorTokenType mdtExportedType;
    public static CorTokenType mdtManifestResource;
    public static CorTokenType mdtGenericParam;
    public static CorTokenType mdtMethodSpec;
    public static CorTokenType mdtGenericParamConstraint;
    public static CorTokenType mdtString;
    public static CorTokenType mdtName;
    public static CorTokenType mdtBaseType;
}
public class Microsoft.Samples.Debugging.CorDebug.CorTypeEnumerator : CorEnumerator`2<ICorDebugTypeEnum, ICorDebugType> {
    public CorTypeEnumerator(ICorDebugTypeEnum typeEnum);
    private static bool MoveNext(ICorDebugTypeEnum enumerator, ICorDebugType& nextElement);
}
[ExtensionAttribute]
public static class Microsoft.Samples.Debugging.CorDebug.EnumeratorExtensions : object {
    [ExtensionAttribute]
public static CorTypeEnumerator Enumerate(ICorDebugTypeEnum typeEnum);
    [ExtensionAttribute]
public static CorDynamicTypeDebugDataEnumerator Enumerate(ICorDebugDynamicTypeDebugDataEnum typeEnum);
    [ExtensionAttribute]
public static CorSharedMethodDebugDataEnumerator Enumerate(ICorDebugSharedMethodDebugDataEnum methodEnum);
}
public enum Microsoft.Samples.Debugging.CorDebug.HResult : Enum {
    public int value__;
    public static HResult E_UNEXPECTED;
    public static HResult E_NOTIMPL;
    public static HResult E_OUTOFMEMORY;
    public static HResult E_INVALIDARG;
    public static HResult E_NOINTERFACE;
    public static HResult E_POINTER;
    public static HResult E_HANDLE;
    public static HResult E_ABORT;
    public static HResult E_FAIL;
    public static HResult E_ACCESSDENIED;
    public static HResult E_PENDING;
    public static HResult E_PDB_NOT_FOUND;
    public static HResult E_PDB_CORRUPT;
    public static HResult E_PARTIAL_COPY;
    public static HResult E_BAD_LENGTH;
    public static HResult CO_E_INIT_TLS;
    public static HResult CO_E_INIT_SHARED_ALLOCATOR;
    public static HResult CO_E_INIT_MEMORY_ALLOCATOR;
    public static HResult CO_E_INIT_CLASS_CACHE;
    public static HResult CO_E_INIT_RPC_CHANNEL;
    public static HResult CO_E_INIT_TLS_SET_CHANNEL_CONTROL;
    public static HResult CO_E_INIT_TLS_CHANNEL_CONTROL;
    public static HResult CO_E_INIT_UNACCEPTED_USER_ALLOCATOR;
    public static HResult CO_E_INIT_SCM_MUTEX_EXISTS;
    public static HResult CO_E_INIT_SCM_FILE_MAPPING_EXISTS;
    public static HResult CO_E_INIT_SCM_MAP_VIEW_OF_FILE;
    public static HResult CO_E_INIT_SCM_EXEC_FAILURE;
    public static HResult CO_E_INIT_ONLY_SINGLE_THREADED;
    public static HResult CO_E_CANT_REMOTE;
    public static HResult CO_E_BAD_SERVER_NAME;
    public static HResult CO_E_WRONG_SERVER_IDENTITY;
    public static HResult CO_E_OLE1DDE_DISABLED;
    public static HResult CO_E_RUNAS_SYNTAX;
    public static HResult CO_E_CREATEPROCESS_FAILURE;
    public static HResult CO_E_RUNAS_CREATEPROCESS_FAILURE;
    public static HResult CO_E_RUNAS_LOGON_FAILURE;
    public static HResult CO_E_LAUNCH_PERMSSION_DENIED;
    public static HResult CO_E_START_SERVICE_FAILURE;
    public static HResult CO_E_REMOTE_COMMUNICATION_FAILURE;
    public static HResult CO_E_SERVER_START_TIMEOUT;
    public static HResult CO_E_CLSREG_INCONSISTENT;
    public static HResult CO_E_IIDREG_INCONSISTENT;
    public static HResult CO_E_NOT_SUPPORTED;
    public static HResult CO_E_RELOAD_DLL;
    public static HResult CO_E_MSI_ERROR;
    public static HResult CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT;
    public static HResult CO_E_SERVER_PAUSED;
    public static HResult CO_E_SERVER_NOT_PAUSED;
    public static HResult CO_E_CLASS_DISABLED;
    public static HResult CO_E_CLRNOTAVAILABLE;
    public static HResult CO_E_ASYNC_WORK_REJECTED;
    public static HResult CO_E_SERVER_INIT_TIMEOUT;
    public static HResult CO_E_NO_SECCTX_IN_ACTIVATE;
    public static HResult CO_E_TRACKER_CONFIG;
    public static HResult CO_E_THREADPOOL_CONFIG;
    public static HResult CO_E_SXS_CONFIG;
    public static HResult CO_E_MALFORMED_SPN;
    public static HResult S_OK;
    public static HResult S_FALSE;
    public static HResult OLE_E_FIRST;
    public static HResult OLE_E_LAST;
    public static HResult OLE_S_FIRST;
    public static HResult OLE_S_LAST;
    public static HResult OLE_E_OLEVERB;
    public static HResult OLE_E_ADVF;
    public static HResult OLE_E_ENUM_NOMORE;
    public static HResult OLE_E_ADVISENOTSUPPORTED;
    public static HResult OLE_E_NOCONNECTION;
    public static HResult OLE_E_NOTRUNNING;
    public static HResult OLE_E_NOCACHE;
    public static HResult OLE_E_BLANK;
    public static HResult OLE_E_CLASSDIFF;
    public static HResult OLE_E_CANT_GETMONIKER;
    public static HResult OLE_E_CANT_BINDTOSOURCE;
    public static HResult OLE_E_STATIC;
    public static HResult OLE_E_PROMPTSAVECANCELLED;
    public static HResult OLE_E_INVALIDRECT;
    public static HResult OLE_E_WRONGCOMPOBJ;
    public static HResult OLE_E_INVALIDHWND;
    public static HResult OLE_E_NOT_INPLACEACTIVE;
    public static HResult OLE_E_CANTCONVERT;
    public static HResult OLE_E_NOSTORAGE;
    public static HResult DV_E_FORMATETC;
    public static HResult DV_E_DVTARGETDEVICE;
    public static HResult DV_E_STGMEDIUM;
    public static HResult DV_E_STATDATA;
    public static HResult DV_E_LINDEX;
    public static HResult DV_E_TYMED;
    public static HResult DV_E_CLIPFORMAT;
    public static HResult DV_E_DVASPECT;
    public static HResult DV_E_DVTARGETDEVICE_SIZE;
    public static HResult DV_E_NOIVIEWOBJECT;
    public static HResult DRAGDROP_E_FIRST;
    public static HResult DRAGDROP_E_LAST;
    public static HResult DRAGDROP_S_FIRST;
    public static HResult DRAGDROP_S_LAST;
    public static HResult DRAGDROP_E_NOTREGISTERED;
    public static HResult DRAGDROP_E_ALREADYREGISTERED;
    public static HResult DRAGDROP_E_INVALIDHWND;
    public static HResult CLASSFACTORY_E_FIRST;
    public static HResult CLASSFACTORY_E_LAST;
    public static HResult CLASSFACTORY_S_FIRST;
    public static HResult CLASSFACTORY_S_LAST;
    public static HResult CLASS_E_NOAGGREGATION;
    public static HResult CLASS_E_CLASSNOTAVAILABLE;
    public static HResult CLASS_E_NOTLICENSED;
    public static HResult MARSHAL_E_FIRST;
    public static HResult MARSHAL_E_LAST;
    public static HResult MARSHAL_S_FIRST;
    public static HResult MARSHAL_S_LAST;
    public static HResult DATA_E_FIRST;
    public static HResult DATA_E_LAST;
    public static HResult DATA_S_FIRST;
    public static HResult DATA_S_LAST;
    public static HResult VIEW_E_FIRST;
    public static HResult VIEW_E_LAST;
    public static HResult VIEW_S_FIRST;
    public static HResult VIEW_S_LAST;
    public static HResult VIEW_E_DRAW;
    public static HResult REGDB_E_FIRST;
    public static HResult REGDB_E_LAST;
    public static HResult REGDB_S_FIRST;
    public static HResult REGDB_S_LAST;
    public static HResult REGDB_E_READREGDB;
    public static HResult REGDB_E_WRITEREGDB;
    public static HResult REGDB_E_KEYMISSING;
    public static HResult REGDB_E_INVALIDVALUE;
    public static HResult REGDB_E_CLASSNOTREG;
    public static HResult REGDB_E_IIDNOTREG;
    public static HResult REGDB_E_BADTHREADINGMODEL;
    public static HResult CAT_E_FIRST;
    public static HResult CAT_E_LAST;
    public static HResult CAT_E_CATIDNOEXIST;
    public static HResult CAT_E_NODESCRIPTION;
    public static HResult CS_E_FIRST;
    public static HResult CS_E_LAST;
    public static HResult CS_E_PACKAGE_NOTFOUND;
    public static HResult CS_E_NOT_DELETABLE;
    public static HResult CS_E_CLASS_NOTFOUND;
    public static HResult CS_E_INVALID_VERSION;
    public static HResult CS_E_NO_CLASSSTORE;
    public static HResult CS_E_OBJECT_NOTFOUND;
    public static HResult CS_E_OBJECT_ALREADY_EXISTS;
    public static HResult CS_E_INVALID_PATH;
    public static HResult CS_E_NETWORK_ERROR;
    public static HResult CS_E_ADMIN_LIMIT_EXCEEDED;
    public static HResult CS_E_SCHEMA_MISMATCH;
    public static HResult CS_E_INTERNAL_ERROR;
    public static HResult CACHE_E_FIRST;
    public static HResult CACHE_E_LAST;
    public static HResult CACHE_S_FIRST;
    public static HResult CACHE_S_LAST;
    public static HResult CACHE_E_NOCACHE_UPDATED;
    public static HResult OLEOBJ_E_FIRST;
    public static HResult OLEOBJ_E_LAST;
    public static HResult OLEOBJ_S_FIRST;
    public static HResult OLEOBJ_S_LAST;
    public static HResult OLEOBJ_E_NOVERBS;
    public static HResult OLEOBJ_E_INVALIDVERB;
    public static HResult CLIENTSITE_E_FIRST;
    public static HResult CLIENTSITE_E_LAST;
    public static HResult CLIENTSITE_S_FIRST;
    public static HResult CLIENTSITE_S_LAST;
    public static HResult INPLACE_E_NOTUNDOABLE;
    public static HResult INPLACE_E_NOTOOLSPACE;
    public static HResult INPLACE_E_FIRST;
    public static HResult INPLACE_E_LAST;
    public static HResult INPLACE_S_FIRST;
    public static HResult INPLACE_S_LAST;
    public static HResult ENUM_E_FIRST;
    public static HResult ENUM_E_LAST;
    public static HResult ENUM_S_FIRST;
    public static HResult ENUM_S_LAST;
    public static HResult CONVERT10_E_FIRST;
    public static HResult CONVERT10_E_LAST;
    public static HResult CONVERT10_S_FIRST;
    public static HResult CONVERT10_S_LAST;
    public static HResult CONVERT10_E_OLESTREAM_GET;
    public static HResult CONVERT10_E_OLESTREAM_PUT;
    public static HResult CONVERT10_E_OLESTREAM_FMT;
    public static HResult CONVERT10_E_OLESTREAM_BITMAP_TO_DIB;
    public static HResult CONVERT10_E_STG_FMT;
    public static HResult CONVERT10_E_STG_NO_STD_STREAM;
    public static HResult CONVERT10_E_STG_DIB_TO_BITMAP;
    public static HResult CLIPBRD_E_FIRST;
    public static HResult CLIPBRD_E_LAST;
    public static HResult CLIPBRD_S_FIRST;
    public static HResult CLIPBRD_S_LAST;
    public static HResult CLIPBRD_E_CANT_OPEN;
    public static HResult CLIPBRD_E_CANT_EMPTY;
    public static HResult CLIPBRD_E_CANT_SET;
    public static HResult CLIPBRD_E_BAD_DATA;
    public static HResult CLIPBRD_E_CANT_CLOSE;
    public static HResult MK_E_FIRST;
    public static HResult MK_E_LAST;
    public static HResult MK_S_FIRST;
    public static HResult MK_S_LAST;
    public static HResult MK_E_CONNECTMANUALLY;
    public static HResult MK_E_EXCEEDEDDEADLINE;
    public static HResult MK_E_NEEDGENERIC;
    public static HResult MK_E_UNAVAILABLE;
    public static HResult MK_E_SYNTAX;
    public static HResult MK_E_NOOBJECT;
    public static HResult MK_E_INVALIDEXTENSION;
    public static HResult MK_E_INTERMEDIATEINTERFACENOTSUPPORTED;
    public static HResult MK_E_NOTBINDABLE;
    public static HResult MK_E_NOTBOUND;
    public static HResult MK_E_CANTOPENFILE;
    public static HResult MK_E_MUSTBOTHERUSER;
    public static HResult MK_E_NOINVERSE;
    public static HResult MK_E_NOSTORAGE;
    public static HResult MK_E_NOPREFIX;
    public static HResult MK_E_ENUMERATION_FAILED;
    public static HResult CO_E_FIRST;
    public static HResult CO_E_LAST;
    public static HResult CO_S_FIRST;
    public static HResult CO_S_LAST;
    public static HResult CO_E_NOTINITIALIZED;
    public static HResult CO_E_ALREADYINITIALIZED;
    public static HResult CO_E_CANTDETERMINECLASS;
    public static HResult CO_E_CLASSSTRING;
    public static HResult CO_E_IIDSTRING;
    public static HResult CO_E_APPNOTFOUND;
    public static HResult CO_E_APPSINGLEUSE;
    public static HResult CO_E_ERRORINAPP;
    public static HResult CO_E_DLLNOTFOUND;
    public static HResult CO_E_ERRORINDLL;
    public static HResult CO_E_WRONGOSFORAPP;
    public static HResult CO_E_OBJNOTREG;
    public static HResult CO_E_OBJISREG;
    public static HResult CO_E_OBJNOTCONNECTED;
    public static HResult CO_E_APPDIDNTREG;
    public static HResult CO_E_RELEASED;
    public static HResult EVENT_E_FIRST;
    public static HResult EVENT_E_LAST;
    public static HResult EVENT_S_FIRST;
    public static HResult EVENT_S_LAST;
    public static HResult EVENT_S_SOME_SUBSCRIBERS_FAILED;
    public static HResult EVENT_E_ALL_SUBSCRIBERS_FAILED;
    public static HResult EVENT_S_NOSUBSCRIBERS;
    public static HResult EVENT_E_QUERYSYNTAX;
    public static HResult EVENT_E_QUERYFIELD;
    public static HResult EVENT_E_INTERNALEXCEPTION;
    public static HResult EVENT_E_INTERNALERROR;
    public static HResult EVENT_E_INVALID_PER_USER_SID;
    public static HResult EVENT_E_USER_EXCEPTION;
    public static HResult EVENT_E_TOO_MANY_METHODS;
    public static HResult EVENT_E_MISSING_EVENTCLASS;
    public static HResult EVENT_E_NOT_ALL_REMOVED;
    public static HResult EVENT_E_COMPLUS_NOT_INSTALLED;
    public static HResult EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT;
    public static HResult EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT;
    public static HResult EVENT_E_INVALID_EVENT_CLASS_PARTITION;
    public static HResult EVENT_E_PER_USER_SID_NOT_LOGGED_ON;
    public static HResult XACT_E_FIRST;
    public static HResult XACT_E_LAST;
    public static HResult XACT_S_FIRST;
    public static HResult XACT_S_LAST;
    public static HResult XACT_E_ALREADYOTHERSINGLEPHASE;
    public static HResult XACT_E_CANTRETAIN;
    public static HResult XACT_E_COMMITFAILED;
    public static HResult XACT_E_COMMITPREVENTED;
    public static HResult XACT_E_HEURISTICABORT;
    public static HResult XACT_E_HEURISTICCOMMIT;
    public static HResult XACT_E_HEURISTICDAMAGE;
    public static HResult XACT_E_HEURISTICDANGER;
    public static HResult XACT_E_ISOLATIONLEVEL;
    public static HResult XACT_E_NOASYNC;
    public static HResult XACT_E_NOENLIST;
    public static HResult XACT_E_NOISORETAIN;
    public static HResult XACT_E_NORESOURCE;
    public static HResult XACT_E_NOTCURRENT;
    public static HResult XACT_E_NOTRANSACTION;
    public static HResult XACT_E_NOTSUPPORTED;
    public static HResult XACT_E_UNKNOWNRMGRID;
    public static HResult XACT_E_WRONGSTATE;
    public static HResult XACT_E_WRONGUOW;
    public static HResult XACT_E_XTIONEXISTS;
    public static HResult XACT_E_NOIMPORTOBJECT;
    public static HResult XACT_E_INVALIDCOOKIE;
    public static HResult XACT_E_INDOUBT;
    public static HResult XACT_E_NOTIMEOUT;
    public static HResult XACT_E_ALREADYINPROGRESS;
    public static HResult XACT_E_ABORTED;
    public static HResult XACT_E_LOGFULL;
    public static HResult XACT_E_TMNOTAVAILABLE;
    public static HResult XACT_E_CONNECTION_DOWN;
    public static HResult XACT_E_CONNECTION_DENIED;
    public static HResult XACT_E_REENLISTTIMEOUT;
    public static HResult XACT_E_TIP_CONNECT_FAILED;
    public static HResult XACT_E_TIP_PROTOCOL_ERROR;
    public static HResult XACT_E_TIP_PULL_FAILED;
    public static HResult XACT_E_DEST_TMNOTAVAILABLE;
    public static HResult XACT_E_TIP_DISABLED;
    public static HResult XACT_E_NETWORK_TX_DISABLED;
    public static HResult XACT_E_PARTNER_NETWORK_TX_DISABLED;
    public static HResult XACT_E_XA_TX_DISABLED;
    public static HResult XACT_E_UNABLE_TO_READ_DTC_CONFIG;
    public static HResult XACT_E_UNABLE_TO_LOAD_DTC_PROXY;
    public static HResult XACT_E_ABORTING;
    public static HResult XACT_E_CLERKNOTFOUND;
    public static HResult XACT_E_CLERKEXISTS;
    public static HResult XACT_E_RECOVERYINPROGRESS;
    public static HResult XACT_E_TRANSACTIONCLOSED;
    public static HResult XACT_E_INVALIDLSN;
    public static HResult XACT_E_REPLAYREQUEST;
    public static HResult XACT_S_ASYNC;
    public static HResult XACT_S_DEFECT;
    public static HResult XACT_S_READONLY;
    public static HResult XACT_S_SOMENORETAIN;
    public static HResult XACT_S_OKINFORM;
    public static HResult XACT_S_MADECHANGESCONTENT;
    public static HResult XACT_S_MADECHANGESINFORM;
    public static HResult XACT_S_ALLNORETAIN;
    public static HResult XACT_S_ABORTING;
    public static HResult XACT_S_SINGLEPHASE;
    public static HResult XACT_S_LOCALLY_OK;
    public static HResult XACT_S_LASTRESOURCEMANAGER;
    public static HResult CONTEXT_E_FIRST;
    public static HResult CONTEXT_E_LAST;
    public static HResult CONTEXT_S_FIRST;
    public static HResult CONTEXT_S_LAST;
    public static HResult CONTEXT_E_ABORTED;
    public static HResult CONTEXT_E_ABORTING;
    public static HResult CONTEXT_E_NOCONTEXT;
    public static HResult CONTEXT_E_WOULD_DEADLOCK;
    public static HResult CONTEXT_E_SYNCH_TIMEOUT;
    public static HResult CONTEXT_E_OLDREF;
    public static HResult CONTEXT_E_ROLENOTFOUND;
    public static HResult CONTEXT_E_TMNOTAVAILABLE;
    public static HResult CO_E_ACTIVATIONFAILED;
    public static HResult CO_E_ACTIVATIONFAILED_EVENTLOGGED;
    public static HResult CO_E_ACTIVATIONFAILED_CATALOGERROR;
    public static HResult CO_E_ACTIVATIONFAILED_TIMEOUT;
    public static HResult CO_E_INITIALIZATIONFAILED;
    public static HResult CONTEXT_E_NOJIT;
    public static HResult CONTEXT_E_NOTRANSACTION;
    public static HResult CO_E_THREADINGMODEL_CHANGED;
    public static HResult CO_E_NOIISINTRINSICS;
    public static HResult CO_E_NOCOOKIES;
    public static HResult CO_E_DBERROR;
    public static HResult CO_E_NOTPOOLED;
    public static HResult CO_E_NOTCONSTRUCTED;
    public static HResult CO_E_NOSYNCHRONIZATION;
    public static HResult CO_E_ISOLEVELMISMATCH;
    public static HResult OLE_S_USEREG;
    public static HResult OLE_S_STATIC;
    public static HResult OLE_S_MAC_CLIPFORMAT;
    public static HResult DRAGDROP_S_DROP;
    public static HResult DRAGDROP_S_CANCEL;
    public static HResult DRAGDROP_S_USEDEFAULTCURSORS;
    public static HResult DATA_S_SAMEFORMATETC;
    public static HResult VIEW_S_ALREADY_FROZEN;
    public static HResult CACHE_S_FORMATETC_NOTSUPPORTED;
    public static HResult CACHE_S_SAMECACHE;
    public static HResult CACHE_S_SOMECACHES_NOTUPDATED;
    public static HResult OLEOBJ_S_INVALIDVERB;
    public static HResult OLEOBJ_S_CANNOT_DOVERB_NOW;
    public static HResult OLEOBJ_S_INVALIDHWND;
    public static HResult INPLACE_S_TRUNCATED;
    public static HResult CONVERT10_S_NO_PRESENTATION;
    public static HResult MK_S_REDUCED_TO_SELF;
    public static HResult MK_S_ME;
    public static HResult MK_S_HIM;
    public static HResult MK_S_US;
    public static HResult MK_S_MONIKERALREADYREGISTERED;
    public static HResult SCHED_S_TASK_READY;
    public static HResult SCHED_S_TASK_RUNNING;
    public static HResult SCHED_S_TASK_DISABLED;
    public static HResult SCHED_S_TASK_HAS_NOT_RUN;
    public static HResult SCHED_S_TASK_NO_MORE_RUNS;
    public static HResult SCHED_S_TASK_NOT_SCHEDULED;
    public static HResult SCHED_S_TASK_TERMINATED;
    public static HResult SCHED_S_TASK_NO_VALID_TRIGGERS;
    public static HResult SCHED_S_EVENT_TRIGGER;
    public static HResult SCHED_E_TRIGGER_NOT_FOUND;
    public static HResult SCHED_E_TASK_NOT_READY;
    public static HResult SCHED_E_TASK_NOT_RUNNING;
    public static HResult SCHED_E_SERVICE_NOT_INSTALLED;
    public static HResult SCHED_E_CANNOT_OPEN_TASK;
    public static HResult SCHED_E_INVALID_TASK;
    public static HResult SCHED_E_ACCOUNT_INFORMATION_NOT_SET;
    public static HResult SCHED_E_ACCOUNT_NAME_NOT_FOUND;
    public static HResult SCHED_E_ACCOUNT_DBASE_CORRUPT;
    public static HResult SCHED_E_NO_SECURITY_SERVICES;
    public static HResult SCHED_E_UNKNOWN_OBJECT_VERSION;
    public static HResult SCHED_E_UNSUPPORTED_ACCOUNT_OPTION;
    public static HResult SCHED_E_SERVICE_NOT_RUNNING;
    public static HResult CO_E_CLASS_CREATE_FAILED;
    public static HResult CO_E_SCM_ERROR;
    public static HResult CO_E_SCM_RPC_FAILURE;
    public static HResult CO_E_BAD_PATH;
    public static HResult CO_E_SERVER_EXEC_FAILURE;
    public static HResult CO_E_OBJSRV_RPC_FAILURE;
    public static HResult MK_E_NO_NORMALIZED;
    public static HResult CO_E_SERVER_STOPPING;
    public static HResult MEM_E_INVALID_ROOT;
    public static HResult MEM_E_INVALID_LINK;
    public static HResult MEM_E_INVALID_SIZE;
    public static HResult CO_S_NOTALLINTERFACES;
    public static HResult CO_S_MACHINENAMENOTFOUND;
    public static HResult DISP_E_UNKNOWNINTERFACE;
    public static HResult DISP_E_MEMBERNOTFOUND;
    public static HResult DISP_E_PARAMNOTFOUND;
    public static HResult DISP_E_TYPEMISMATCH;
    public static HResult DISP_E_UNKNOWNNAME;
    public static HResult DISP_E_NONAMEDARGS;
    public static HResult DISP_E_BADVARTYPE;
    public static HResult DISP_E_EXCEPTION;
    public static HResult DISP_E_OVERFLOW;
    public static HResult DISP_E_BADINDEX;
    public static HResult DISP_E_UNKNOWNLCID;
    public static HResult DISP_E_ARRAYISLOCKED;
    public static HResult DISP_E_BADPARAMCOUNT;
    public static HResult DISP_E_PARAMNOTOPTIONAL;
    public static HResult DISP_E_BADCALLEE;
    public static HResult DISP_E_NOTACOLLECTION;
    public static HResult DISP_E_DIVBYZERO;
    public static HResult DISP_E_BUFFERTOOSMALL;
    public static HResult TYPE_E_BUFFERTOOSMALL;
    public static HResult TYPE_E_FIELDNOTFOUND;
    public static HResult TYPE_E_INVDATAREAD;
    public static HResult TYPE_E_UNSUPFORMAT;
    public static HResult TYPE_E_REGISTRYACCESS;
    public static HResult TYPE_E_LIBNOTREGISTERED;
    public static HResult TYPE_E_UNDEFINEDTYPE;
    public static HResult TYPE_E_QUALIFIEDNAMEDISALLOWED;
    public static HResult TYPE_E_INVALIDSTATE;
    public static HResult TYPE_E_WRONGTYPEKIND;
    public static HResult TYPE_E_ELEMENTNOTFOUND;
    public static HResult TYPE_E_AMBIGUOUSNAME;
    public static HResult TYPE_E_NAMECONFLICT;
    public static HResult TYPE_E_UNKNOWNLCID;
    public static HResult TYPE_E_DLLFUNCTIONNOTFOUND;
    public static HResult TYPE_E_BADMODULEKIND;
    public static HResult TYPE_E_SIZETOOBIG;
    public static HResult TYPE_E_DUPLICATEID;
    public static HResult TYPE_E_INVALIDID;
    public static HResult TYPE_E_TYPEMISMATCH;
    public static HResult TYPE_E_OUTOFBOUNDS;
    public static HResult TYPE_E_IOERROR;
    public static HResult TYPE_E_CANTCREATETMPFILE;
    public static HResult TYPE_E_CANTLOADLIBRARY;
    public static HResult TYPE_E_INCONSISTENTPROPFUNCS;
    public static HResult TYPE_E_CIRCULARTYPE;
    public static HResult STG_E_INVALIDFUNCTION;
    public static HResult STG_E_FILENOTFOUND;
    public static HResult STG_E_PATHNOTFOUND;
    public static HResult STG_E_TOOMANYOPENFILES;
    public static HResult STG_E_ACCESSDENIED;
    public static HResult STG_E_INVALIDHANDLE;
    public static HResult STG_E_INSUFFICIENTMEMORY;
    public static HResult STG_E_INVALIDPOINTER;
    public static HResult STG_E_NOMOREFILES;
    public static HResult STG_E_DISKISWRITEPROTECTED;
    public static HResult STG_E_SEEKERROR;
    public static HResult STG_E_WRITEFAULT;
    public static HResult STG_E_READFAULT;
    public static HResult STG_E_SHAREVIOLATION;
    public static HResult STG_E_LOCKVIOLATION;
    public static HResult STG_E_FILEALREADYEXISTS;
    public static HResult STG_E_INVALIDPARAMETER;
    public static HResult STG_E_MEDIUMFULL;
    public static HResult STG_E_PROPSETMISMATCHED;
    public static HResult STG_E_ABNORMALAPIEXIT;
    public static HResult STG_E_INVALIDHEADER;
    public static HResult STG_E_INVALIDNAME;
    public static HResult STG_E_UNKNOWN;
    public static HResult STG_E_UNIMPLEMENTEDFUNCTION;
    public static HResult STG_E_INVALIDFLAG;
    public static HResult STG_E_INUSE;
    public static HResult STG_E_NOTCURRENT;
    public static HResult STG_E_REVERTED;
    public static HResult STG_E_CANTSAVE;
    public static HResult STG_E_OLDFORMAT;
    public static HResult STG_E_OLDDLL;
    public static HResult STG_E_SHAREREQUIRED;
    public static HResult STG_E_NOTFILEBASEDSTORAGE;
    public static HResult STG_E_EXTANTMARSHALLINGS;
    public static HResult STG_E_DOCFILECORRUPT;
    public static HResult STG_E_BADBASEADDRESS;
    public static HResult STG_E_DOCFILETOOLARGE;
    public static HResult STG_E_NOTSIMPLEFORMAT;
    public static HResult STG_E_INCOMPLETE;
    public static HResult STG_E_TERMINATED;
    public static HResult STG_S_CONVERTED;
    public static HResult STG_S_BLOCK;
    public static HResult STG_S_RETRYNOW;
    public static HResult STG_S_MONITORING;
    public static HResult STG_S_MULTIPLEOPENS;
    public static HResult STG_S_CONSOLIDATIONFAILED;
    public static HResult STG_S_CANNOTCONSOLIDATE;
    public static HResult STG_E_STATUS_COPY_PROTECTION_FAILURE;
    public static HResult STG_E_CSS_AUTHENTICATION_FAILURE;
    public static HResult STG_E_CSS_KEY_NOT_PRESENT;
    public static HResult STG_E_CSS_KEY_NOT_ESTABLISHED;
    public static HResult STG_E_CSS_SCRAMBLED_SECTOR;
    public static HResult STG_E_CSS_REGION_MISMATCH;
    public static HResult STG_E_RESETS_EXHAUSTED;
    public static HResult RPC_E_CALL_REJECTED;
    public static HResult RPC_E_CALL_CANCELED;
    public static HResult RPC_E_CANTPOST_INSENDCALL;
    public static HResult RPC_E_CANTCALLOUT_INASYNCCALL;
    public static HResult RPC_E_CANTCALLOUT_INEXTERNALCALL;
    public static HResult RPC_E_CONNECTION_TERMINATED;
    public static HResult RPC_E_SERVER_DIED;
    public static HResult RPC_E_CLIENT_DIED;
    public static HResult RPC_E_INVALID_DATAPACKET;
    public static HResult RPC_E_CANTTRANSMIT_CALL;
    public static HResult RPC_E_CLIENT_CANTMARSHAL_DATA;
    public static HResult RPC_E_CLIENT_CANTUNMARSHAL_DATA;
    public static HResult RPC_E_SERVER_CANTMARSHAL_DATA;
    public static HResult RPC_E_SERVER_CANTUNMARSHAL_DATA;
    public static HResult RPC_E_INVALID_DATA;
    public static HResult RPC_E_INVALID_PARAMETER;
    public static HResult RPC_E_CANTCALLOUT_AGAIN;
    public static HResult RPC_E_SERVER_DIED_DNE;
    public static HResult RPC_E_SYS_CALL_FAILED;
    public static HResult RPC_E_OUT_OF_RESOURCES;
    public static HResult RPC_E_ATTEMPTED_MULTITHREAD;
    public static HResult RPC_E_NOT_REGISTERED;
    public static HResult RPC_E_FAULT;
    public static HResult RPC_E_SERVERFAULT;
    public static HResult RPC_E_CHANGED_MODE;
    public static HResult RPC_E_INVALIDMETHOD;
    public static HResult RPC_E_DISCONNECTED;
    public static HResult RPC_E_RETRY;
    public static HResult RPC_E_SERVERCALL_RETRYLATER;
    public static HResult RPC_E_SERVERCALL_REJECTED;
    public static HResult RPC_E_INVALID_CALLDATA;
    public static HResult RPC_E_CANTCALLOUT_ININPUTSYNCCALL;
    public static HResult RPC_E_WRONG_THREAD;
    public static HResult RPC_E_THREAD_NOT_INIT;
    public static HResult RPC_E_VERSION_MISMATCH;
    public static HResult RPC_E_INVALID_HEADER;
    public static HResult RPC_E_INVALID_EXTENSION;
    public static HResult RPC_E_INVALID_IPID;
    public static HResult RPC_E_INVALID_OBJECT;
    public static HResult RPC_S_CALLPENDING;
    public static HResult RPC_S_WAITONTIMER;
    public static HResult RPC_E_CALL_COMPLETE;
    public static HResult RPC_E_UNSECURE_CALL;
    public static HResult RPC_E_TOO_LATE;
    public static HResult RPC_E_NO_GOOD_SECURITY_PACKAGES;
    public static HResult RPC_E_ACCESS_DENIED;
    public static HResult RPC_E_REMOTE_DISABLED;
    public static HResult RPC_E_INVALID_OBJREF;
    public static HResult RPC_E_NO_CONTEXT;
    public static HResult RPC_E_TIMEOUT;
    public static HResult RPC_E_NO_SYNC;
    public static HResult RPC_E_FULLSIC_REQUIRED;
    public static HResult RPC_E_INVALID_STD_NAME;
    public static HResult CO_E_FAILEDTOIMPERSONATE;
    public static HResult CO_E_FAILEDTOGETSECCTX;
    public static HResult CO_E_FAILEDTOOPENTHREADTOKEN;
    public static HResult CO_E_FAILEDTOGETTOKENINFO;
    public static HResult CO_E_TRUSTEEDOESNTMATCHCLIENT;
    public static HResult CO_E_FAILEDTOQUERYCLIENTBLANKET;
    public static HResult CO_E_FAILEDTOSETDACL;
    public static HResult CO_E_ACCESSCHECKFAILED;
    public static HResult CO_E_NETACCESSAPIFAILED;
    public static HResult CO_E_WRONGTRUSTEENAMESYNTAX;
    public static HResult CO_E_INVALIDSID;
    public static HResult CO_E_CONVERSIONFAILED;
    public static HResult CO_E_NOMATCHINGSIDFOUND;
    public static HResult CO_E_LOOKUPACCSIDFAILED;
    public static HResult CO_E_NOMATCHINGNAMEFOUND;
    public static HResult CO_E_LOOKUPACCNAMEFAILED;
    public static HResult CO_E_SETSERLHNDLFAILED;
    public static HResult CO_E_FAILEDTOGETWINDIR;
    public static HResult CO_E_PATHTOOLONG;
    public static HResult CO_E_FAILEDTOGENUUID;
    public static HResult CO_E_FAILEDTOCREATEFILE;
    public static HResult CO_E_FAILEDTOCLOSEHANDLE;
    public static HResult CO_E_EXCEEDSYSACLLIMIT;
    public static HResult CO_E_ACESINWRONGORDER;
    public static HResult CO_E_INCOMPATIBLESTREAMVERSION;
    public static HResult CO_E_FAILEDTOOPENPROCESSTOKEN;
    public static HResult CO_E_DECODEFAILED;
    public static HResult CO_E_ACNOTINITIALIZED;
    public static HResult CO_E_CANCEL_DISABLED;
    public static HResult RPC_E_UNEXPECTED;
    public static HResult ERROR_AUDITING_DISABLED;
    public static HResult ERROR_ALL_SIDS_FILTERED;
    public static HResult NTE_BAD_UID;
    public static HResult NTE_BAD_HASH;
    public static HResult NTE_BAD_KEY;
    public static HResult NTE_BAD_LEN;
    public static HResult NTE_BAD_DATA;
    public static HResult NTE_BAD_SIGNATURE;
    public static HResult NTE_BAD_VER;
    public static HResult NTE_BAD_ALGID;
    public static HResult NTE_BAD_FLAGS;
    public static HResult NTE_BAD_TYPE;
    public static HResult NTE_BAD_KEY_STATE;
    public static HResult NTE_BAD_HASH_STATE;
    public static HResult NTE_NO_KEY;
    public static HResult NTE_NO_MEMORY;
    public static HResult NTE_EXISTS;
    public static HResult NTE_PERM;
    public static HResult NTE_NOT_FOUND;
    public static HResult NTE_DOUBLE_ENCRYPT;
    public static HResult NTE_BAD_PROVIDER;
    public static HResult NTE_BAD_PROV_TYPE;
    public static HResult NTE_BAD_PUBLIC_KEY;
    public static HResult NTE_BAD_KEYSET;
    public static HResult NTE_PROV_TYPE_NOT_DEF;
    public static HResult NTE_PROV_TYPE_ENTRY_BAD;
    public static HResult NTE_KEYSET_NOT_DEF;
    public static HResult NTE_KEYSET_ENTRY_BAD;
    public static HResult NTE_PROV_TYPE_NO_MATCH;
    public static HResult NTE_SIGNATURE_FILE_BAD;
    public static HResult NTE_PROVIDER_DLL_FAIL;
    public static HResult NTE_PROV_DLL_NOT_FOUND;
    public static HResult NTE_BAD_KEYSET_PARAM;
    public static HResult NTE_FAIL;
    public static HResult NTE_SYS_ERR;
    public static HResult NTE_SILENT_CONTEXT;
    public static HResult NTE_TOKEN_KEYSET_STORAGE_FULL;
    public static HResult NTE_TEMPORARY_PROFILE;
    public static HResult NTE_FIXEDPARAMETER;
    public static HResult SEC_E_INSUFFICIENT_MEMORY;
    public static HResult SEC_E_INVALID_HANDLE;
    public static HResult SEC_E_UNSUPPORTED_FUNCTION;
    public static HResult SEC_E_TARGET_UNKNOWN;
    public static HResult SEC_E_INTERNAL_ERROR;
    public static HResult SEC_E_SECPKG_NOT_FOUND;
    public static HResult SEC_E_NOT_OWNER;
    public static HResult SEC_E_CANNOT_INSTALL;
    public static HResult SEC_E_INVALID_TOKEN;
    public static HResult SEC_E_CANNOT_PACK;
    public static HResult SEC_E_QOP_NOT_SUPPORTED;
    public static HResult SEC_E_NO_IMPERSONATION;
    public static HResult SEC_E_LOGON_DENIED;
    public static HResult SEC_E_UNKNOWN_CREDENTIALS;
    public static HResult SEC_E_NO_CREDENTIALS;
    public static HResult SEC_E_MESSAGE_ALTERED;
    public static HResult SEC_E_OUT_OF_SEQUENCE;
    public static HResult SEC_E_NO_AUTHENTICATING_AUTHORITY;
    public static HResult SEC_I_CONTINUE_NEEDED;
    public static HResult SEC_I_COMPLETE_NEEDED;
    public static HResult SEC_I_COMPLETE_AND_CONTINUE;
    public static HResult SEC_I_LOCAL_LOGON;
    public static HResult SEC_E_BAD_PKGID;
    public static HResult SEC_E_CONTEXT_EXPIRED;
    public static HResult SEC_I_CONTEXT_EXPIRED;
    public static HResult SEC_E_INCOMPLETE_MESSAGE;
    public static HResult SEC_E_INCOMPLETE_CREDENTIALS;
    public static HResult SEC_E_BUFFER_TOO_SMALL;
    public static HResult SEC_I_INCOMPLETE_CREDENTIALS;
    public static HResult SEC_I_RENEGOTIATE;
    public static HResult SEC_E_WRONG_PRINCIPAL;
    public static HResult SEC_I_NO_LSA_CONTEXT;
    public static HResult SEC_E_TIME_SKEW;
    public static HResult SEC_E_UNTRUSTED_ROOT;
    public static HResult SEC_E_ILLEGAL_MESSAGE;
    public static HResult SEC_E_CERT_UNKNOWN;
    public static HResult SEC_E_CERT_EXPIRED;
    public static HResult SEC_E_ENCRYPT_FAILURE;
    public static HResult SEC_E_DECRYPT_FAILURE;
    public static HResult SEC_E_ALGORITHM_MISMATCH;
    public static HResult SEC_E_SECURITY_QOS_FAILED;
    public static HResult SEC_E_UNFINISHED_CONTEXT_DELETED;
    public static HResult SEC_E_NO_TGT_REPLY;
    public static HResult SEC_E_NO_IP_ADDRESSES;
    public static HResult SEC_E_WRONG_CREDENTIAL_HANDLE;
    public static HResult SEC_E_CRYPTO_SYSTEM_INVALID;
    public static HResult SEC_E_MAX_REFERRALS_EXCEEDED;
    public static HResult SEC_E_MUST_BE_KDC;
    public static HResult SEC_E_STRONG_CRYPTO_NOT_SUPPORTED;
    public static HResult SEC_E_TOO_MANY_PRINCIPALS;
    public static HResult SEC_E_NO_PA_DATA;
    public static HResult SEC_E_PKINIT_NAME_MISMATCH;
    public static HResult SEC_E_SMARTCARD_LOGON_REQUIRED;
    public static HResult SEC_E_SHUTDOWN_IN_PROGRESS;
    public static HResult SEC_E_KDC_INVALID_REQUEST;
    public static HResult SEC_E_KDC_UNABLE_TO_REFER;
    public static HResult SEC_E_KDC_UNKNOWN_ETYPE;
    public static HResult SEC_E_UNSUPPORTED_PREAUTH;
    public static HResult SEC_E_DELEGATION_REQUIRED;
    public static HResult SEC_E_BAD_BINDINGS;
    public static HResult SEC_E_MULTIPLE_ACCOUNTS;
    public static HResult SEC_E_NO_KERB_KEY;
    public static HResult SEC_E_CERT_WRONG_USAGE;
    public static HResult SEC_E_DOWNGRADE_DETECTED;
    public static HResult SEC_E_SMARTCARD_CERT_REVOKED;
    public static HResult SEC_E_ISSUING_CA_UNTRUSTED;
    public static HResult SEC_E_REVOCATION_OFFLINE_C;
    public static HResult SEC_E_PKINIT_CLIENT_FAILURE;
    public static HResult SEC_E_SMARTCARD_CERT_EXPIRED;
    public static HResult SEC_E_NO_S4U_PROT_SUPPORT;
    public static HResult SEC_E_CROSSREALM_DELEGATION_FAILURE;
    public static HResult SEC_E_REVOCATION_OFFLINE_KDC;
    public static HResult SEC_E_ISSUING_CA_UNTRUSTED_KDC;
    public static HResult SEC_E_KDC_CERT_EXPIRED;
    public static HResult SEC_E_KDC_CERT_REVOKED;
    public static HResult CRYPT_E_MSG_ERROR;
    public static HResult CRYPT_E_UNKNOWN_ALGO;
    public static HResult CRYPT_E_OID_FORMAT;
    public static HResult CRYPT_E_INVALID_MSG_TYPE;
    public static HResult CRYPT_E_UNEXPECTED_ENCODING;
    public static HResult CRYPT_E_AUTH_ATTR_MISSING;
    public static HResult CRYPT_E_HASH_VALUE;
    public static HResult CRYPT_E_INVALID_INDEX;
    public static HResult CRYPT_E_ALREADY_DECRYPTED;
    public static HResult CRYPT_E_NOT_DECRYPTED;
    public static HResult CRYPT_E_RECIPIENT_NOT_FOUND;
    public static HResult CRYPT_E_CONTROL_TYPE;
    public static HResult CRYPT_E_ISSUER_SERIALNUMBER;
    public static HResult CRYPT_E_SIGNER_NOT_FOUND;
    public static HResult CRYPT_E_ATTRIBUTES_MISSING;
    public static HResult CRYPT_E_STREAM_MSG_NOT_READY;
    public static HResult CRYPT_E_STREAM_INSUFFICIENT_DATA;
    public static HResult CRYPT_I_NEW_PROTECTION_REQUIRED;
    public static HResult CRYPT_E_BAD_LEN;
    public static HResult CRYPT_E_BAD_ENCODE;
    public static HResult CRYPT_E_FILE_ERROR;
    public static HResult CRYPT_E_NOT_FOUND;
    public static HResult CRYPT_E_EXISTS;
    public static HResult CRYPT_E_NO_PROVIDER;
    public static HResult CRYPT_E_SELF_SIGNED;
    public static HResult CRYPT_E_DELETED_PREV;
    public static HResult CRYPT_E_NO_MATCH;
    public static HResult CRYPT_E_UNEXPECTED_MSG_TYPE;
    public static HResult CRYPT_E_NO_KEY_PROPERTY;
    public static HResult CRYPT_E_NO_DECRYPT_CERT;
    public static HResult CRYPT_E_BAD_MSG;
    public static HResult CRYPT_E_NO_SIGNER;
    public static HResult CRYPT_E_PENDING_CLOSE;
    public static HResult CRYPT_E_REVOKED;
    public static HResult CRYPT_E_NO_REVOCATION_DLL;
    public static HResult CRYPT_E_NO_REVOCATION_CHECK;
    public static HResult CRYPT_E_REVOCATION_OFFLINE;
    public static HResult CRYPT_E_NOT_IN_REVOCATION_DATABASE;
    public static HResult CRYPT_E_INVALID_NUMERIC_STRING;
    public static HResult CRYPT_E_INVALID_PRINTABLE_STRING;
    public static HResult CRYPT_E_INVALID_IA5_STRING;
    public static HResult CRYPT_E_INVALID_X500_STRING;
    public static HResult CRYPT_E_NOT_CHAR_STRING;
    public static HResult CRYPT_E_FILERESIZED;
    public static HResult CRYPT_E_SECURITY_SETTINGS;
    public static HResult CRYPT_E_NO_VERIFY_USAGE_DLL;
    public static HResult CRYPT_E_NO_VERIFY_USAGE_CHECK;
    public static HResult CRYPT_E_VERIFY_USAGE_OFFLINE;
    public static HResult CRYPT_E_NOT_IN_CTL;
    public static HResult CRYPT_E_NO_TRUSTED_SIGNER;
    public static HResult CRYPT_E_MISSING_PUBKEY_PARA;
    public static HResult CRYPT_E_OSS_ERROR;
    public static HResult OSS_MORE_BUF;
    public static HResult OSS_NEGATIVE_UINTEGER;
    public static HResult OSS_PDU_RANGE;
    public static HResult OSS_MORE_INPUT;
    public static HResult OSS_DATA_ERROR;
    public static HResult OSS_BAD_ARG;
    public static HResult OSS_BAD_VERSION;
    public static HResult OSS_OUT_MEMORY;
    public static HResult OSS_PDU_MISMATCH;
    public static HResult OSS_LIMITED;
    public static HResult OSS_BAD_PTR;
    public static HResult OSS_BAD_TIME;
    public static HResult OSS_INDEFINITE_NOT_SUPPORTED;
    public static HResult OSS_MEM_ERROR;
    public static HResult OSS_BAD_TABLE;
    public static HResult OSS_TOO_LONG;
    public static HResult OSS_CONSTRAINT_VIOLATED;
    public static HResult OSS_FATAL_ERROR;
    public static HResult OSS_ACCESS_SERIALIZATION_ERROR;
    public static HResult OSS_NULL_TBL;
    public static HResult OSS_NULL_FCN;
    public static HResult OSS_BAD_ENCRULES;
    public static HResult OSS_UNAVAIL_ENCRULES;
    public static HResult OSS_CANT_OPEN_TRACE_WINDOW;
    public static HResult OSS_UNIMPLEMENTED;
    public static HResult OSS_OID_DLL_NOT_LINKED;
    public static HResult OSS_CANT_OPEN_TRACE_FILE;
    public static HResult OSS_TRACE_FILE_ALREADY_OPEN;
    public static HResult OSS_TABLE_MISMATCH;
    public static HResult OSS_TYPE_NOT_SUPPORTED;
    public static HResult OSS_REAL_DLL_NOT_LINKED;
    public static HResult OSS_REAL_CODE_NOT_LINKED;
    public static HResult OSS_OUT_OF_RANGE;
    public static HResult OSS_COPIER_DLL_NOT_LINKED;
    public static HResult OSS_CONSTRAINT_DLL_NOT_LINKED;
    public static HResult OSS_COMPARATOR_DLL_NOT_LINKED;
    public static HResult OSS_COMPARATOR_CODE_NOT_LINKED;
    public static HResult OSS_MEM_MGR_DLL_NOT_LINKED;
    public static HResult OSS_PDV_DLL_NOT_LINKED;
    public static HResult OSS_PDV_CODE_NOT_LINKED;
    public static HResult OSS_API_DLL_NOT_LINKED;
    public static HResult OSS_BERDER_DLL_NOT_LINKED;
    public static HResult OSS_PER_DLL_NOT_LINKED;
    public static HResult OSS_OPEN_TYPE_ERROR;
    public static HResult OSS_MUTEX_NOT_CREATED;
    public static HResult OSS_CANT_CLOSE_TRACE_FILE;
    public static HResult CRYPT_E_ASN1_ERROR;
    public static HResult CRYPT_E_ASN1_INTERNAL;
    public static HResult CRYPT_E_ASN1_EOD;
    public static HResult CRYPT_E_ASN1_CORRUPT;
    public static HResult CRYPT_E_ASN1_LARGE;
    public static HResult CRYPT_E_ASN1_CONSTRAINT;
    public static HResult CRYPT_E_ASN1_MEMORY;
    public static HResult CRYPT_E_ASN1_OVERFLOW;
    public static HResult CRYPT_E_ASN1_BADPDU;
    public static HResult CRYPT_E_ASN1_BADARGS;
    public static HResult CRYPT_E_ASN1_BADREAL;
    public static HResult CRYPT_E_ASN1_BADTAG;
    public static HResult CRYPT_E_ASN1_CHOICE;
    public static HResult CRYPT_E_ASN1_RULE;
    public static HResult CRYPT_E_ASN1_UTF8;
    public static HResult CRYPT_E_ASN1_PDU_TYPE;
    public static HResult CRYPT_E_ASN1_NYI;
    public static HResult CRYPT_E_ASN1_EXTENDED;
    public static HResult CRYPT_E_ASN1_NOEOD;
    public static HResult CERTSRV_E_BAD_REQUESTSUBJECT;
    public static HResult CERTSRV_E_NO_REQUEST;
    public static HResult CERTSRV_E_BAD_REQUESTSTATUS;
    public static HResult CERTSRV_E_PROPERTY_EMPTY;
    public static HResult CERTSRV_E_INVALID_CA_CERTIFICATE;
    public static HResult CERTSRV_E_SERVER_SUSPENDED;
    public static HResult CERTSRV_E_ENCODING_LENGTH;
    public static HResult CERTSRV_E_ROLECONFLICT;
    public static HResult CERTSRV_E_RESTRICTEDOFFICER;
    public static HResult CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED;
    public static HResult CERTSRV_E_NO_VALID_KRA;
    public static HResult CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL;
    public static HResult CERTSRV_E_NO_CAADMIN_DEFINED;
    public static HResult CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE;
    public static HResult CERTSRV_E_NO_DB_SESSIONS;
    public static HResult CERTSRV_E_ALIGNMENT_FAULT;
    public static HResult CERTSRV_E_ENROLL_DENIED;
    public static HResult CERTSRV_E_TEMPLATE_DENIED;
    public static HResult CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE;
    public static HResult CERTSRV_E_UNSUPPORTED_CERT_TYPE;
    public static HResult CERTSRV_E_NO_CERT_TYPE;
    public static HResult CERTSRV_E_TEMPLATE_CONFLICT;
    public static HResult CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED;
    public static HResult CERTSRV_E_ARCHIVED_KEY_REQUIRED;
    public static HResult CERTSRV_E_SMIME_REQUIRED;
    public static HResult CERTSRV_E_BAD_RENEWAL_SUBJECT;
    public static HResult CERTSRV_E_BAD_TEMPLATE_VERSION;
    public static HResult CERTSRV_E_TEMPLATE_POLICY_REQUIRED;
    public static HResult CERTSRV_E_SIGNATURE_POLICY_REQUIRED;
    public static HResult CERTSRV_E_SIGNATURE_COUNT;
    public static HResult CERTSRV_E_SIGNATURE_REJECTED;
    public static HResult CERTSRV_E_ISSUANCE_POLICY_REQUIRED;
    public static HResult CERTSRV_E_SUBJECT_UPN_REQUIRED;
    public static HResult CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED;
    public static HResult CERTSRV_E_SUBJECT_DNS_REQUIRED;
    public static HResult CERTSRV_E_ARCHIVED_KEY_UNEXPECTED;
    public static HResult CERTSRV_E_KEY_LENGTH;
    public static HResult CERTSRV_E_SUBJECT_EMAIL_REQUIRED;
    public static HResult CERTSRV_E_UNKNOWN_CERT_TYPE;
    public static HResult CERTSRV_E_CERT_TYPE_OVERLAP;
    public static HResult XENROLL_E_KEY_NOT_EXPORTABLE;
    public static HResult XENROLL_E_CANNOT_ADD_ROOT_CERT;
    public static HResult XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND;
    public static HResult XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH;
    public static HResult XENROLL_E_RESPONSE_KA_HASH_MISMATCH;
    public static HResult XENROLL_E_KEYSPEC_SMIME_MISMATCH;
    public static HResult TRUST_E_SYSTEM_ERROR;
    public static HResult TRUST_E_NO_SIGNER_CERT;
    public static HResult TRUST_E_COUNTER_SIGNER;
    public static HResult TRUST_E_CERT_SIGNATURE;
    public static HResult TRUST_E_TIME_STAMP;
    public static HResult TRUST_E_BAD_DIGEST;
    public static HResult TRUST_E_BASIC_CONSTRAINTS;
    public static HResult TRUST_E_FINANCIAL_CRITERIA;
    public static HResult MSSIPOTF_E_OUTOFMEMRANGE;
    public static HResult MSSIPOTF_E_CANTGETOBJECT;
    public static HResult MSSIPOTF_E_NOHEADTABLE;
    public static HResult MSSIPOTF_E_BAD_MAGICNUMBER;
    public static HResult MSSIPOTF_E_BAD_OFFSET_TABLE;
    public static HResult MSSIPOTF_E_TABLE_TAGORDER;
    public static HResult MSSIPOTF_E_TABLE_LONGWORD;
    public static HResult MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT;
    public static HResult MSSIPOTF_E_TABLES_OVERLAP;
    public static HResult MSSIPOTF_E_TABLE_PADBYTES;
    public static HResult MSSIPOTF_E_FILETOOSMALL;
    public static HResult MSSIPOTF_E_TABLE_CHECKSUM;
    public static HResult MSSIPOTF_E_FILE_CHECKSUM;
    public static HResult MSSIPOTF_E_FAILED_POLICY;
    public static HResult MSSIPOTF_E_FAILED_HINTS_CHECK;
    public static HResult MSSIPOTF_E_NOT_OPENTYPE;
    public static HResult MSSIPOTF_E_FILE;
    public static HResult MSSIPOTF_E_CRYPT;
    public static HResult MSSIPOTF_E_BADVERSION;
    public static HResult MSSIPOTF_E_DSIG_STRUCTURE;
    public static HResult MSSIPOTF_E_PCONST_CHECK;
    public static HResult MSSIPOTF_E_STRUCTURE;
    public static HResult TRUST_E_PROVIDER_UNKNOWN;
    public static HResult TRUST_E_ACTION_UNKNOWN;
    public static HResult TRUST_E_SUBJECT_FORM_UNKNOWN;
    public static HResult TRUST_E_SUBJECT_NOT_TRUSTED;
    public static HResult DIGSIG_E_ENCODE;
    public static HResult DIGSIG_E_DECODE;
    public static HResult DIGSIG_E_EXTENSIBILITY;
    public static HResult DIGSIG_E_CRYPTO;
    public static HResult PERSIST_E_SIZEDEFINITE;
    public static HResult PERSIST_E_SIZEINDEFINITE;
    public static HResult PERSIST_E_NOTSELFSIZING;
    public static HResult TRUST_E_NOSIGNATURE;
    public static HResult CERT_E_EXPIRED;
    public static HResult CERT_E_VALIDITYPERIODNESTING;
    public static HResult CERT_E_ROLE;
    public static HResult CERT_E_PATHLENCONST;
    public static HResult CERT_E_CRITICAL;
    public static HResult CERT_E_PURPOSE;
    public static HResult CERT_E_ISSUERCHAINING;
    public static HResult CERT_E_MALFORMED;
    public static HResult CERT_E_UNTRUSTEDROOT;
    public static HResult CERT_E_CHAINING;
    public static HResult TRUST_E_FAIL;
    public static HResult CERT_E_REVOKED;
    public static HResult CERT_E_UNTRUSTEDTESTROOT;
    public static HResult CERT_E_REVOCATION_FAILURE;
    public static HResult CERT_E_CN_NO_MATCH;
    public static HResult CERT_E_WRONG_USAGE;
    public static HResult TRUST_E_EXPLICIT_DISTRUST;
    public static HResult CERT_E_UNTRUSTEDCA;
    public static HResult CERT_E_INVALID_POLICY;
    public static HResult CERT_E_INVALID_NAME;
    public static HResult SPAPI_E_EXPECTED_SECTION_NAME;
    public static HResult SPAPI_E_BAD_SECTION_NAME_LINE;
    public static HResult SPAPI_E_SECTION_NAME_TOO_LONG;
    public static HResult SPAPI_E_GENERAL_SYNTAX;
    public static HResult SPAPI_E_WRONG_INF_STYLE;
    public static HResult SPAPI_E_SECTION_NOT_FOUND;
    public static HResult SPAPI_E_LINE_NOT_FOUND;
    public static HResult SPAPI_E_NO_BACKUP;
    public static HResult SPAPI_E_NO_ASSOCIATED_CLASS;
    public static HResult SPAPI_E_CLASS_MISMATCH;
    public static HResult SPAPI_E_DUPLICATE_FOUND;
    public static HResult SPAPI_E_NO_DRIVER_SELECTED;
    public static HResult SPAPI_E_KEY_DOES_NOT_EXIST;
    public static HResult SPAPI_E_INVALID_DEVINST_NAME;
    public static HResult SPAPI_E_INVALID_CLASS;
    public static HResult SPAPI_E_DEVINST_ALREADY_EXISTS;
    public static HResult SPAPI_E_DEVINFO_NOT_REGISTERED;
    public static HResult SPAPI_E_INVALID_REG_PROPERTY;
    public static HResult SPAPI_E_NO_INF;
    public static HResult SPAPI_E_NO_SUCH_DEVINST;
    public static HResult SPAPI_E_CANT_LOAD_CLASS_ICON;
    public static HResult SPAPI_E_INVALID_CLASS_INSTALLER;
    public static HResult SPAPI_E_DI_DO_DEFAULT;
    public static HResult SPAPI_E_DI_NOFILECOPY;
    public static HResult SPAPI_E_INVALID_HWPROFILE;
    public static HResult SPAPI_E_NO_DEVICE_SELECTED;
    public static HResult SPAPI_E_DEVINFO_LIST_LOCKED;
    public static HResult SPAPI_E_DEVINFO_DATA_LOCKED;
    public static HResult SPAPI_E_DI_BAD_PATH;
    public static HResult SPAPI_E_NO_CLASSINSTALL_PARAMS;
    public static HResult SPAPI_E_FILEQUEUE_LOCKED;
    public static HResult SPAPI_E_BAD_SERVICE_INSTALLSECT;
    public static HResult SPAPI_E_NO_CLASS_DRIVER_LIST;
    public static HResult SPAPI_E_NO_ASSOCIATED_SERVICE;
    public static HResult SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE;
    public static HResult SPAPI_E_DEVICE_INTERFACE_ACTIVE;
    public static HResult SPAPI_E_DEVICE_INTERFACE_REMOVED;
    public static HResult SPAPI_E_BAD_INTERFACE_INSTALLSECT;
    public static HResult SPAPI_E_NO_SUCH_INTERFACE_CLASS;
    public static HResult SPAPI_E_INVALID_REFERENCE_STRING;
    public static HResult SPAPI_E_INVALID_MACHINENAME;
    public static HResult SPAPI_E_REMOTE_COMM_FAILURE;
    public static HResult SPAPI_E_MACHINE_UNAVAILABLE;
    public static HResult SPAPI_E_NO_CONFIGMGR_SERVICES;
    public static HResult SPAPI_E_INVALID_PROPPAGE_PROVIDER;
    public static HResult SPAPI_E_NO_SUCH_DEVICE_INTERFACE;
    public static HResult SPAPI_E_DI_POSTPROCESSING_REQUIRED;
    public static HResult SPAPI_E_INVALID_COINSTALLER;
    public static HResult SPAPI_E_NO_COMPAT_DRIVERS;
    public static HResult SPAPI_E_NO_DEVICE_ICON;
    public static HResult SPAPI_E_INVALID_INF_LOGCONFIG;
    public static HResult SPAPI_E_DI_DONT_INSTALL;
    public static HResult SPAPI_E_INVALID_FILTER_DRIVER;
    public static HResult SPAPI_E_NON_WINDOWS_NT_DRIVER;
    public static HResult SPAPI_E_NON_WINDOWS_DRIVER;
    public static HResult SPAPI_E_NO_CATALOG_FOR_OEM_INF;
    public static HResult SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE;
    public static HResult SPAPI_E_NOT_DISABLEABLE;
    public static HResult SPAPI_E_CANT_REMOVE_DEVINST;
    public static HResult SPAPI_E_INVALID_TARGET;
    public static HResult SPAPI_E_DRIVER_NONNATIVE;
    public static HResult SPAPI_E_IN_WOW64;
    public static HResult SPAPI_E_SET_SYSTEM_RESTORE_POINT;
    public static HResult SPAPI_E_INCORRECTLY_COPIED_INF;
    public static HResult SPAPI_E_SCE_DISABLED;
    public static HResult SPAPI_E_UNKNOWN_EXCEPTION;
    public static HResult SPAPI_E_PNP_REGISTRY_ERROR;
    public static HResult SPAPI_E_REMOTE_REQUEST_UNSUPPORTED;
    public static HResult SPAPI_E_NOT_AN_INSTALLED_OEM_INF;
    public static HResult SPAPI_E_INF_IN_USE_BY_DEVICES;
    public static HResult SPAPI_E_DI_FUNCTION_OBSOLETE;
    public static HResult SPAPI_E_NO_AUTHENTICODE_CATALOG;
    public static HResult SPAPI_E_AUTHENTICODE_DISALLOWED;
    public static HResult SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER;
    public static HResult SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED;
    public static HResult SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED;
    public static HResult SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH;
    public static HResult SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE;
    public static HResult SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW;
    public static HResult SPAPI_E_ERROR_NOT_INSTALLED;
    public static HResult SCARD_F_INTERNAL_ERROR;
    public static HResult SCARD_E_CANCELLED;
    public static HResult SCARD_E_INVALID_HANDLE;
    public static HResult SCARD_E_INVALID_PARAMETER;
    public static HResult SCARD_E_INVALID_TARGET;
    public static HResult SCARD_E_NO_MEMORY;
    public static HResult SCARD_F_WAITED_TOO_LONG;
    public static HResult SCARD_E_INSUFFICIENT_BUFFER;
    public static HResult SCARD_E_UNKNOWN_READER;
    public static HResult SCARD_E_TIMEOUT;
    public static HResult SCARD_E_SHARING_VIOLATION;
    public static HResult SCARD_E_NO_SMARTCARD;
    public static HResult SCARD_E_UNKNOWN_CARD;
    public static HResult SCARD_E_CANT_DISPOSE;
    public static HResult SCARD_E_PROTO_MISMATCH;
    public static HResult SCARD_E_NOT_READY;
    public static HResult SCARD_E_INVALID_VALUE;
    public static HResult SCARD_E_SYSTEM_CANCELLED;
    public static HResult SCARD_F_COMM_ERROR;
    public static HResult SCARD_F_UNKNOWN_ERROR;
    public static HResult SCARD_E_INVALID_ATR;
    public static HResult SCARD_E_NOT_TRANSACTED;
    public static HResult SCARD_E_READER_UNAVAILABLE;
    public static HResult SCARD_P_SHUTDOWN;
    public static HResult SCARD_E_PCI_TOO_SMALL;
    public static HResult SCARD_E_READER_UNSUPPORTED;
    public static HResult SCARD_E_DUPLICATE_READER;
    public static HResult SCARD_E_CARD_UNSUPPORTED;
    public static HResult SCARD_E_NO_SERVICE;
    public static HResult SCARD_E_SERVICE_STOPPED;
    public static HResult SCARD_E_UNEXPECTED;
    public static HResult SCARD_E_ICC_INSTALLATION;
    public static HResult SCARD_E_ICC_CREATEORDER;
    public static HResult SCARD_E_UNSUPPORTED_FEATURE;
    public static HResult SCARD_E_DIR_NOT_FOUND;
    public static HResult SCARD_E_FILE_NOT_FOUND;
    public static HResult SCARD_E_NO_DIR;
    public static HResult SCARD_E_NO_FILE;
    public static HResult SCARD_E_NO_ACCESS;
    public static HResult SCARD_E_WRITE_TOO_MANY;
    public static HResult SCARD_E_BAD_SEEK;
    public static HResult SCARD_E_INVALID_CHV;
    public static HResult SCARD_E_UNKNOWN_RES_MNG;
    public static HResult SCARD_E_NO_SUCH_CERTIFICATE;
    public static HResult SCARD_E_CERTIFICATE_UNAVAILABLE;
    public static HResult SCARD_E_NO_READERS_AVAILABLE;
    public static HResult SCARD_E_COMM_DATA_LOST;
    public static HResult SCARD_E_NO_KEY_CONTAINER;
    public static HResult SCARD_E_SERVER_TOO_BUSY;
    public static HResult SCARD_W_UNSUPPORTED_CARD;
    public static HResult SCARD_W_UNRESPONSIVE_CARD;
    public static HResult SCARD_W_UNPOWERED_CARD;
    public static HResult SCARD_W_RESET_CARD;
    public static HResult SCARD_W_REMOVED_CARD;
    public static HResult SCARD_W_SECURITY_VIOLATION;
    public static HResult SCARD_W_WRONG_CHV;
    public static HResult SCARD_W_CHV_BLOCKED;
    public static HResult SCARD_W_EOF;
    public static HResult SCARD_W_CANCELLED_BY_USER;
    public static HResult SCARD_W_CARD_NOT_AUTHENTICATED;
    public static HResult COMADMIN_E_OBJECTERRORS;
    public static HResult COMADMIN_E_OBJECTINVALID;
    public static HResult COMADMIN_E_KEYMISSING;
    public static HResult COMADMIN_E_ALREADYINSTALLED;
    public static HResult COMADMIN_E_APP_FILE_WRITEFAIL;
    public static HResult COMADMIN_E_APP_FILE_READFAIL;
    public static HResult COMADMIN_E_APP_FILE_VERSION;
    public static HResult COMADMIN_E_BADPATH;
    public static HResult COMADMIN_E_APPLICATIONEXISTS;
    public static HResult COMADMIN_E_ROLEEXISTS;
    public static HResult COMADMIN_E_CANTCOPYFILE;
    public static HResult COMADMIN_E_NOUSER;
    public static HResult COMADMIN_E_INVALIDUSERIDS;
    public static HResult COMADMIN_E_NOREGISTRYCLSID;
    public static HResult COMADMIN_E_BADREGISTRYPROGID;
    public static HResult COMADMIN_E_AUTHENTICATIONLEVEL;
    public static HResult COMADMIN_E_USERPASSWDNOTVALID;
    public static HResult COMADMIN_E_CLSIDORIIDMISMATCH;
    public static HResult COMADMIN_E_REMOTEINTERFACE;
    public static HResult COMADMIN_E_DLLREGISTERSERVER;
    public static HResult COMADMIN_E_NOSERVERSHARE;
    public static HResult COMADMIN_E_DLLLOADFAILED;
    public static HResult COMADMIN_E_BADREGISTRYLIBID;
    public static HResult COMADMIN_E_APPDIRNOTFOUND;
    public static HResult COMADMIN_E_REGISTRARFAILED;
    public static HResult COMADMIN_E_COMPFILE_DOESNOTEXIST;
    public static HResult COMADMIN_E_COMPFILE_LOADDLLFAIL;
    public static HResult COMADMIN_E_COMPFILE_GETCLASSOBJ;
    public static HResult COMADMIN_E_COMPFILE_CLASSNOTAVAIL;
    public static HResult COMADMIN_E_COMPFILE_BADTLB;
    public static HResult COMADMIN_E_COMPFILE_NOTINSTALLABLE;
    public static HResult COMADMIN_E_NOTCHANGEABLE;
    public static HResult COMADMIN_E_NOTDELETEABLE;
    public static HResult COMADMIN_E_SESSION;
    public static HResult COMADMIN_E_COMP_MOVE_LOCKED;
    public static HResult COMADMIN_E_COMP_MOVE_BAD_DEST;
    public static HResult COMADMIN_E_REGISTERTLB;
    public static HResult COMADMIN_E_SYSTEMAPP;
    public static HResult COMADMIN_E_COMPFILE_NOREGISTRAR;
    public static HResult COMADMIN_E_COREQCOMPINSTALLED;
    public static HResult COMADMIN_E_SERVICENOTINSTALLED;
    public static HResult COMADMIN_E_PROPERTYSAVEFAILED;
    public static HResult COMADMIN_E_OBJECTEXISTS;
    public static HResult COMADMIN_E_COMPONENTEXISTS;
    public static HResult COMADMIN_E_REGFILE_CORRUPT;
    public static HResult COMADMIN_E_PROPERTY_OVERFLOW;
    public static HResult COMADMIN_E_NOTINREGISTRY;
    public static HResult COMADMIN_E_OBJECTNOTPOOLABLE;
    public static HResult COMADMIN_E_APPLID_MATCHES_CLSID;
    public static HResult COMADMIN_E_ROLE_DOES_NOT_EXIST;
    public static HResult COMADMIN_E_START_APP_NEEDS_COMPONENTS;
    public static HResult COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM;
    public static HResult COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY;
    public static HResult COMADMIN_E_CAN_NOT_START_APP;
    public static HResult COMADMIN_E_CAN_NOT_EXPORT_SYS_APP;
    public static HResult COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT;
    public static HResult COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER;
    public static HResult COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE;
    public static HResult COMADMIN_E_BASE_PARTITION_ONLY;
    public static HResult COMADMIN_E_START_APP_DISABLED;
    public static HResult COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME;
    public static HResult COMADMIN_E_CAT_INVALID_PARTITION_NAME;
    public static HResult COMADMIN_E_CAT_PARTITION_IN_USE;
    public static HResult COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES;
    public static HResult COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED;
    public static HResult COMADMIN_E_AMBIGUOUS_APPLICATION_NAME;
    public static HResult COMADMIN_E_AMBIGUOUS_PARTITION_NAME;
    public static HResult COMADMIN_E_REGDB_NOTINITIALIZED;
    public static HResult COMADMIN_E_REGDB_NOTOPEN;
    public static HResult COMADMIN_E_REGDB_SYSTEMERR;
    public static HResult COMADMIN_E_REGDB_ALREADYRUNNING;
    public static HResult COMADMIN_E_MIG_VERSIONNOTSUPPORTED;
    public static HResult COMADMIN_E_MIG_SCHEMANOTFOUND;
    public static HResult COMADMIN_E_CAT_BITNESSMISMATCH;
    public static HResult COMADMIN_E_CAT_UNACCEPTABLEBITNESS;
    public static HResult COMADMIN_E_CAT_WRONGAPPBITNESS;
    public static HResult COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED;
    public static HResult COMADMIN_E_CAT_SERVERFAULT;
    public static HResult COMQC_E_APPLICATION_NOT_QUEUED;
    public static HResult COMQC_E_NO_QUEUEABLE_INTERFACES;
    public static HResult COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE;
    public static HResult COMQC_E_NO_IPERSISTSTREAM;
    public static HResult COMQC_E_BAD_MESSAGE;
    public static HResult COMQC_E_UNAUTHENTICATED;
    public static HResult COMQC_E_UNTRUSTED_ENQUEUER;
    public static HResult MSDTC_E_DUPLICATE_RESOURCE;
    public static HResult COMADMIN_E_OBJECT_PARENT_MISSING;
    public static HResult COMADMIN_E_OBJECT_DOES_NOT_EXIST;
    public static HResult COMADMIN_E_APP_NOT_RUNNING;
    public static HResult COMADMIN_E_INVALID_PARTITION;
    public static HResult COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE;
    public static HResult COMADMIN_E_USER_IN_SET;
    public static HResult COMADMIN_E_CANTRECYCLELIBRARYAPPS;
    public static HResult COMADMIN_E_CANTRECYCLESERVICEAPPS;
    public static HResult COMADMIN_E_PROCESSALREADYRECYCLED;
    public static HResult COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED;
    public static HResult COMADMIN_E_CANTMAKEINPROCSERVICE;
    public static HResult COMADMIN_E_PROGIDINUSEBYCLSID;
    public static HResult COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET;
    public static HResult COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED;
    public static HResult COMADMIN_E_PARTITION_ACCESSDENIED;
    public static HResult COMADMIN_E_PARTITION_MSI_ONLY;
    public static HResult COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT;
    public static HResult COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS;
    public static HResult COMADMIN_E_COMP_MOVE_SOURCE;
    public static HResult COMADMIN_E_COMP_MOVE_DEST;
    public static HResult COMADMIN_E_COMP_MOVE_PRIVATE;
    public static HResult COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET;
    public static HResult COMADMIN_E_CANNOT_ALIAS_EVENTCLASS;
    public static HResult COMADMIN_E_PRIVATE_ACCESSDENIED;
    public static HResult COMADMIN_E_SAFERINVALID;
    public static HResult COMADMIN_E_REGISTRY_ACCESSDENIED;
    public static HResult COMADMIN_E_PARTITIONS_DISABLED;
    public static HResult CEE_E_ENTRYPOINT;
    public static HResult CEE_E_CVTRES_NOT_FOUND;
    public static HResult MSEE_E_LOADLIBFAILED;
    public static HResult MSEE_E_GETPROCFAILED;
    public static HResult MSEE_E_MULTCOPIESLOADED;
    public static HResult COR_E_APPDOMAINUNLOADED;
    public static HResult COR_E_CANNOTUNLOADAPPDOMAIN;
    public static HResult MSEE_E_ASSEMBLYLOADINPROGRESS;
    public static HResult MSEE_E_CANNOTCREATEAPPDOMAIN;
    public static HResult COR_E_FIXUPSINEXE;
    public static HResult COR_E_NO_LOADLIBRARY_ALLOWED;
    public static HResult COR_E_NEWER_RUNTIME;
    public static HResult HOST_E_DEADLOCK;
    public static HResult HOST_E_INTERRUPTED;
    public static HResult HOST_E_INVALIDOPERATION;
    public static HResult HOST_E_CLRNOTAVAILABLE;
    public static HResult HOST_E_TIMEOUT;
    public static HResult HOST_E_NOT_OWNER;
    public static HResult HOST_E_ABANDONED;
    public static HResult HOST_E_EXITPROCESS_THREADABORT;
    public static HResult HOST_E_EXITPROCESS_ADUNLOAD;
    public static HResult HOST_E_EXITPROCESS_TIMEOUT;
    public static HResult HOST_E_EXITPROCESS_OUTOFMEMORY;
    public static HResult HOST_E_EXITPROCESS_STACKOVERFLOW;
    public static HResult COR_E_MODULE_HASH_CHECK_FAILED;
    public static HResult FUSION_E_REF_DEF_MISMATCH;
    public static HResult FUSION_E_INVALID_PRIVATE_ASM_LOCATION;
    public static HResult FUSION_E_ASM_MODULE_MISSING;
    public static HResult FUSION_E_UNEXPECTED_MODULE_FOUND;
    public static HResult FUSION_E_PRIVATE_ASM_DISALLOWED;
    public static HResult FUSION_E_SIGNATURE_CHECK_FAILED;
    public static HResult FUSION_E_DATABASE_ERROR;
    public static HResult FUSION_E_INVALID_NAME;
    public static HResult FUSION_E_CODE_DOWNLOAD_DISABLED;
    public static HResult FUSION_E_UNINSTALL_DISALLOWED;
    public static HResult FUSION_E_HOST_GAC_ASM_MISMATCH;
    public static HResult CLDB_E_FILE_BADREAD;
    public static HResult CLDB_E_FILE_BADWRITE;
    public static HResult CLDB_E_FILE_READONLY;
    public static HResult CLDB_E_NAME_ERROR;
    public static HResult CLDB_S_TRUNCATION;
    public static HResult CLDB_E_TRUNCATION;
    public static HResult CLDB_E_FILE_OLDVER;
    public static HResult CLDB_E_RELOCATED;
    public static HResult CLDB_S_NULL;
    public static HResult CLDB_E_SMDUPLICATE;
    public static HResult CLDB_E_NO_DATA;
    public static HResult CLDB_E_READONLY;
    public static HResult CLDB_E_INCOMPATIBLE;
    public static HResult CLDB_E_FILE_CORRUPT;
    public static HResult CLDB_E_SCHEMA_VERNOTFOUND;
    public static HResult CLDB_E_BADUPDATEMODE;
    public static HResult CLDB_E_INDEX_NONULLKEYS;
    public static HResult CLDB_E_INDEX_DUPLICATE;
    public static HResult CLDB_E_INDEX_BADTYPE;
    public static HResult CLDB_E_INDEX_NOTFOUND;
    public static HResult CLDB_S_INDEX_TABLESCANREQUIRED;
    public static HResult CLDB_E_RECORD_NOTFOUND;
    public static HResult CLDB_E_RECORD_OVERFLOW;
    public static HResult CLDB_E_RECORD_DUPLICATE;
    public static HResult CLDB_E_RECORD_PKREQUIRED;
    public static HResult CLDB_E_RECORD_DELETED;
    public static HResult CLDB_E_RECORD_OUTOFORDER;
    public static HResult CLDB_E_COLUMN_OVERFLOW;
    public static HResult CLDB_E_COLUMN_READONLY;
    public static HResult CLDB_E_COLUMN_SPECIALCOL;
    public static HResult CLDB_E_COLUMN_PKNONULLS;
    public static HResult CLDB_E_TABLE_CANTDROP;
    public static HResult CLDB_E_OBJECT_NOTFOUND;
    public static HResult CLDB_E_OBJECT_COLNOTFOUND;
    public static HResult CLDB_E_VECTOR_BADINDEX;
    public static HResult CLDB_E_TOO_BIG;
    public static HResult META_E_INVALID_TOKEN_TYPE;
    public static HResult TLBX_E_INVALID_TYPEINFO;
    public static HResult TLBX_E_INVALID_TYPEINFO_UNNAMED;
    public static HResult TLBX_E_CTX_NESTED;
    public static HResult TLBX_E_ERROR_MESSAGE;
    public static HResult TLBX_E_CANT_SAVE;
    public static HResult TLBX_W_LIBNOTREGISTERED;
    public static HResult TLBX_E_CANTLOADLIBRARY;
    public static HResult TLBX_E_BAD_VT_TYPE;
    public static HResult TLBX_E_NO_MSCOREE_TLB;
    public static HResult TLBX_E_BAD_MSCOREE_TLB;
    public static HResult TLBX_E_TLB_EXCEPTION;
    public static HResult TLBX_E_MULTIPLE_LCIDS;
    public static HResult TLBX_I_TYPEINFO_IMPORTED;
    public static HResult TLBX_E_AMBIGUOUS_RETURN;
    public static HResult TLBX_E_DUPLICATE_TYPE_NAME;
    public static HResult TLBX_I_USEIUNKNOWN;
    public static HResult TLBX_I_UNCONVERTABLE_ARGS;
    public static HResult TLBX_I_UNCONVERTABLE_FIELD;
    public static HResult TLBX_I_NONSEQUENTIALSTRUCT;
    public static HResult TLBX_W_WARNING_MESSAGE;
    public static HResult TLBX_I_RESOLVEREFFAILED;
    public static HResult TLBX_E_ASANY;
    public static HResult TLBX_E_INVALIDLCIDPARAM;
    public static HResult TLBX_E_LCIDONDISPONLYITF;
    public static HResult TLBX_E_NONPUBLIC_FIELD;
    public static HResult TLBX_I_TYPE_EXPORTED;
    public static HResult TLBX_I_DUPLICATE_DISPID;
    public static HResult TLBX_E_BAD_NAMES;
    public static HResult TLBX_I_REF_TYPE_AS_STRUCT;
    public static HResult TLBX_E_GENERICINST_SIGNATURE;
    public static HResult TLBX_E_GENERICPAR_SIGNATURE;
    public static HResult TLBX_I_GENERIC_TYPE;
    public static HResult META_E_DUPLICATE;
    public static HResult META_E_GUID_REQUIRED;
    public static HResult META_E_TYPEDEF_MISMATCH;
    public static HResult META_E_MERGE_COLLISION;
    public static HResult TLBX_W_NON_INTEGRAL_CA_TYPE;
    public static HResult TLBX_W_IENUM_CA_ON_IUNK;
    public static HResult TLBX_E_NO_SAFEHANDLE_ARRAYS;
    public static HResult META_E_METHD_NOT_FOUND;
    public static HResult META_E_FIELD_NOT_FOUND;
    public static HResult META_S_PARAM_MISMATCH;
    public static HResult META_E_PARAM_MISMATCH;
    public static HResult META_E_BADMETADATA;
    public static HResult META_E_INTFCEIMPL_NOT_FOUND;
    public static HResult TLBX_E_NO_CRITICALHANDLE_ARRAYS;
    public static HResult META_E_CLASS_LAYOUT_INCONSISTENT;
    public static HResult META_E_FIELD_MARSHAL_NOT_FOUND;
    public static HResult META_E_METHODSEM_NOT_FOUND;
    public static HResult META_E_EVENT_NOT_FOUND;
    public static HResult META_E_PROP_NOT_FOUND;
    public static HResult META_E_BAD_SIGNATURE;
    public static HResult META_E_BAD_INPUT_PARAMETER;
    public static HResult META_E_METHDIMPL_INCONSISTENT;
    public static HResult META_E_MD_INCONSISTENCY;
    public static HResult META_E_CANNOTRESOLVETYPEREF;
    public static HResult META_S_DUPLICATE;
    public static HResult META_E_STRINGSPACE_FULL;
    public static HResult META_E_UNEXPECTED_REMAP;
    public static HResult META_E_HAS_UNMARKALL;
    public static HResult META_E_MUST_CALL_UNMARKALL;
    public static HResult META_E_GENERICPARAM_INCONSISTENT;
    public static HResult META_E_EVENT_COUNTS;
    public static HResult META_E_PROPERTY_COUNTS;
    public static HResult META_E_TYPEDEF_MISSING;
    public static HResult TLBX_E_CANT_LOAD_MODULE;
    public static HResult TLBX_E_CANT_LOAD_CLASS;
    public static HResult TLBX_E_NULL_MODULE;
    public static HResult TLBX_E_NO_CLSID_KEY;
    public static HResult TLBX_E_CIRCULAR_EXPORT;
    public static HResult TLBX_E_CIRCULAR_IMPORT;
    public static HResult TLBX_E_BAD_NATIVETYPE;
    public static HResult TLBX_E_BAD_VTABLE;
    public static HResult TLBX_E_CRM_NON_STATIC;
    public static HResult TLBX_E_CRM_INVALID_SIG;
    public static HResult TLBX_E_CLASS_LOAD_EXCEPTION;
    public static HResult TLBX_E_UNKNOWN_SIGNATURE;
    public static HResult TLBX_E_REFERENCED_TYPELIB;
    public static HResult TLBX_S_REFERENCED_TYPELIB;
    public static HResult TLBX_E_INVALID_NAMESPACE;
    public static HResult TLBX_E_LAYOUT_ERROR;
    public static HResult TLBX_E_NOTIUNKNOWN;
    public static HResult TLBX_E_NONVISIBLEVALUECLASS;
    public static HResult TLBX_E_LPTSTR_NOT_ALLOWED;
    public static HResult TLBX_E_AUTO_CS_NOT_ALLOWED;
    public static HResult TLBX_S_NOSTDINTERFACE;
    public static HResult TLBX_S_DUPLICATE_DISPID;
    public static HResult TLBX_E_ENUM_VALUE_INVALID;
    public static HResult TLBX_E_DUPLICATE_IID;
    public static HResult TLBX_E_NO_NESTED_ARRAYS;
    public static HResult TLBX_E_PARAM_ERROR_NAMED;
    public static HResult TLBX_E_PARAM_ERROR_UNNAMED;
    public static HResult TLBX_E_AGNOST_SIGNATURE;
    public static HResult TLBX_E_CONVERT_FAIL;
    public static HResult TLBX_W_DUAL_NOT_DISPATCH;
    public static HResult TLBX_E_BAD_SIGNATURE;
    public static HResult TLBX_E_ARRAY_NEEDS_NT_FIXED;
    public static HResult TLBX_E_CLASS_NEEDS_NT_INTF;
    public static HResult META_E_CA_INVALID_TARGET;
    public static HResult META_E_CA_INVALID_VALUE;
    public static HResult META_E_CA_INVALID_BLOB;
    public static HResult META_E_CA_REPEATED_ARG;
    public static HResult META_E_CA_UNKNOWN_ARGUMENT;
    public static HResult META_E_CA_VARIANT_NYI;
    public static HResult META_E_CA_ARRAY_NYI;
    public static HResult META_E_CA_UNEXPECTED_TYPE;
    public static HResult META_E_CA_INVALID_ARGTYPE;
    public static HResult META_E_CA_INVALID_ARG_FOR_TYPE;
    public static HResult META_E_CA_INVALID_UUID;
    public static HResult META_E_CA_INVALID_MARSHALAS_FIELDS;
    public static HResult META_E_CA_NT_FIELDONLY;
    public static HResult META_E_CA_NEGATIVE_PARAMINDEX;
    public static HResult META_E_CA_NEGATIVE_MULTIPLIER;
    public static HResult META_E_CA_NEGATIVE_CONSTSIZE;
    public static HResult META_E_CA_FIXEDSTR_SIZE_REQUIRED;
    public static HResult META_E_CA_CUSTMARSH_TYPE_REQUIRED;
    public static HResult META_E_CA_FILENAME_REQUIRED;
    public static HResult TLBX_W_NO_PROPS_IN_EVENTS;
    public static HResult META_E_NOT_IN_ENC_MODE;
    public static HResult TLBX_W_ENUM_VALUE_TOOBIG;
    public static HResult META_E_METHOD_COUNTS;
    public static HResult META_E_FIELD_COUNTS;
    public static HResult META_E_PARAM_COUNTS;
    public static HResult TLBX_W_EXPORTING_AUTO_LAYOUT;
    public static HResult TLBX_E_TYPED_REF;
    public static HResult TLBX_W_DEFAULT_INTF_NOT_VISIBLE;
    public static HResult TLBX_W_BAD_SAFEARRAYFIELD_NO_ELEMENTVT;
    public static HResult TLBX_W_LAYOUTCLASS_AS_INTERFACE;
    public static HResult TLBX_I_GENERIC_BASE_TYPE;
    public static HResult TLBX_E_BITNESS_MISMATCH;
    public static HResult VLDTR_S_WRN;
    public static HResult VLDTR_S_ERR;
    public static HResult VLDTR_S_WRNERR;
    public static HResult VLDTR_E_RID_OUTOFRANGE;
    public static HResult VLDTR_E_CDTKN_OUTOFRANGE;
    public static HResult VLDTR_E_CDRID_OUTOFRANGE;
    public static HResult VLDTR_E_STRING_INVALID;
    public static HResult VLDTR_E_GUID_INVALID;
    public static HResult VLDTR_E_BLOB_INVALID;
    public static HResult VLDTR_E_MOD_MULTI;
    public static HResult VLDTR_E_MOD_NULLMVID;
    public static HResult VLDTR_E_TR_NAMENULL;
    public static HResult VLDTR_E_TR_DUP;
    public static HResult VLDTR_E_TD_NAMENULL;
    public static HResult VLDTR_E_TD_DUPNAME;
    public static HResult VLDTR_E_TD_DUPGUID;
    public static HResult VLDTR_E_TD_NOTIFACEOBJEXTNULL;
    public static HResult VLDTR_E_TD_OBJEXTENDSNONNULL;
    public static HResult VLDTR_E_TD_EXTENDSSEALED;
    public static HResult VLDTR_E_TD_DLTNORTSPCL;
    public static HResult VLDTR_E_TD_RTSPCLNOTDLT;
    public static HResult VLDTR_E_MI_DECLPRIV;
    public static HResult VLDTR_E_AS_BADNAME;
    public static HResult VLDTR_E_FILE_SYSNAME;
    public static HResult VLDTR_E_MI_BODYSTATIC;
    public static HResult VLDTR_E_TD_IFACENOTABS;
    public static HResult VLDTR_E_TD_IFACEPARNOTNIL;
    public static HResult VLDTR_E_TD_IFACEGUIDNULL;
    public static HResult VLDTR_E_MI_DECLFINAL;
    public static HResult VLDTR_E_TD_VTNOTSEAL;
    public static HResult VLDTR_E_PD_BADFLAGS;
    public static HResult VLDTR_E_IFACE_DUP;
    public static HResult VLDTR_E_MR_NAMENULL;
    public static HResult VLDTR_E_MR_VTBLNAME;
    public static HResult VLDTR_E_MR_DELNAME;
    public static HResult VLDTR_E_MR_PARNIL;
    public static HResult VLDTR_E_MR_BADCALLINGCONV;
    public static HResult VLDTR_E_MR_NOTVARARG;
    public static HResult VLDTR_E_MR_NAMEDIFF;
    public static HResult VLDTR_E_MR_SIGDIFF;
    public static HResult VLDTR_E_MR_DUP;
    public static HResult VLDTR_E_CL_TDAUTO;
    public static HResult VLDTR_E_CL_BADPCKSZ;
    public static HResult VLDTR_E_CL_DUP;
    public static HResult VLDTR_E_FL_BADOFFSET;
    public static HResult VLDTR_E_FL_TDNIL;
    public static HResult VLDTR_E_FL_NOCL;
    public static HResult VLDTR_E_FL_TDNOTEXPLCT;
    public static HResult VLDTR_E_FL_FLDSTATIC;
    public static HResult VLDTR_E_FL_DUP;
    public static HResult VLDTR_E_MODREF_NAMENULL;
    public static HResult VLDTR_E_MODREF_DUP;
    public static HResult VLDTR_E_TR_BADSCOPE;
    public static HResult VLDTR_E_TD_NESTEDNOENCL;
    public static HResult VLDTR_E_TD_EXTTRRES;
    public static HResult VLDTR_E_SIGNULL;
    public static HResult VLDTR_E_SIGNODATA;
    public static HResult VLDTR_E_MD_BADCALLINGCONV;
    public static HResult VLDTR_E_MD_THISSTATIC;
    public static HResult VLDTR_E_MD_NOTTHISNOTSTATIC;
    public static HResult VLDTR_E_MD_NOARGCNT;
    public static HResult VLDTR_E_SIG_MISSELTYPE;
    public static HResult VLDTR_E_SIG_MISSTKN;
    public static HResult VLDTR_E_SIG_TKNBAD;
    public static HResult VLDTR_E_SIG_MISSFPTR;
    public static HResult VLDTR_E_SIG_MISSFPTRARGCNT;
    public static HResult VLDTR_E_SIG_MISSRANK;
    public static HResult VLDTR_E_SIG_MISSNSIZE;
    public static HResult VLDTR_E_SIG_MISSSIZE;
    public static HResult VLDTR_E_SIG_MISSNLBND;
    public static HResult VLDTR_E_SIG_MISSLBND;
    public static HResult VLDTR_E_SIG_BADELTYPE;
    public static HResult VLDTR_E_SIG_MISSVASIZE;
    public static HResult VLDTR_E_FD_BADCALLINGCONV;
    public static HResult VLDTR_E_MD_NAMENULL;
    public static HResult VLDTR_E_MD_PARNIL;
    public static HResult VLDTR_E_MD_DUP;
    public static HResult VLDTR_E_FD_NAMENULL;
    public static HResult VLDTR_E_FD_PARNIL;
    public static HResult VLDTR_E_FD_DUP;
    public static HResult VLDTR_E_AS_MULTI;
    public static HResult VLDTR_E_AS_NAMENULL;
    public static HResult VLDTR_E_SIG_TOKTYPEMISMATCH;
    public static HResult VLDTR_E_CL_TDINTF;
    public static HResult VLDTR_E_ASOS_OSPLTFRMIDINVAL;
    public static HResult VLDTR_E_AR_NAMENULL;
    public static HResult VLDTR_E_TD_ENCLNOTNESTED;
    public static HResult VLDTR_E_AROS_OSPLTFRMIDINVAL;
    public static HResult VLDTR_E_FILE_NAMENULL;
    public static HResult VLDTR_E_CT_NAMENULL;
    public static HResult VLDTR_E_TD_EXTENDSCHILD;
    public static HResult VLDTR_E_MAR_NAMENULL;
    public static HResult VLDTR_E_FILE_DUP;
    public static HResult VLDTR_E_FILE_NAMEFULLQLFD;
    public static HResult VLDTR_E_CT_DUP;
    public static HResult VLDTR_E_MAR_DUP;
    public static HResult VLDTR_E_MAR_NOTPUBPRIV;
    public static HResult VLDTR_E_TD_ENUMNOVALUE;
    public static HResult VLDTR_E_TD_ENUMVALSTATIC;
    public static HResult VLDTR_E_TD_ENUMVALNOTSN;
    public static HResult VLDTR_E_TD_ENUMFLDNOTST;
    public static HResult VLDTR_E_TD_ENUMFLDNOTLIT;
    public static HResult VLDTR_E_TD_ENUMNOLITFLDS;
    public static HResult VLDTR_E_TD_ENUMFLDSIGMISMATCH;
    public static HResult VLDTR_E_TD_ENUMVALNOT1ST;
    public static HResult VLDTR_E_FD_NOTVALUERTSN;
    public static HResult VLDTR_E_FD_VALUEPARNOTENUM;
    public static HResult VLDTR_E_FD_INSTINIFACE;
    public static HResult VLDTR_E_FD_NOTPUBINIFACE;
    public static HResult VLDTR_E_FMD_GLOBALNOTPUBPRIVSC;
    public static HResult VLDTR_E_FMD_GLOBALNOTSTATIC;
    public static HResult VLDTR_E_FD_GLOBALNORVA;
    public static HResult VLDTR_E_MD_CTORZERORVA;
    public static HResult VLDTR_E_FD_MARKEDNOMARSHAL;
    public static HResult VLDTR_E_FD_MARSHALNOTMARKED;
    public static HResult VLDTR_E_FD_MARKEDNODEFLT;
    public static HResult VLDTR_E_FD_DEFLTNOTMARKED;
    public static HResult VLDTR_E_FMD_MARKEDNOSECUR;
    public static HResult VLDTR_E_FMD_SECURNOTMARKED;
    public static HResult VLDTR_E_FMD_PINVOKENOTSTATIC;
    public static HResult VLDTR_E_FMD_MARKEDNOPINVOKE;
    public static HResult VLDTR_E_FMD_PINVOKENOTMARKED;
    public static HResult VLDTR_E_FMD_BADIMPLMAP;
    public static HResult VLDTR_E_IMAP_BADMODREF;
    public static HResult VLDTR_E_IMAP_BADMEMBER;
    public static HResult VLDTR_E_IMAP_BADIMPORTNAME;
    public static HResult VLDTR_E_IMAP_BADCALLCONV;
    public static HResult VLDTR_E_FMD_BADACCESSFLAG;
    public static HResult VLDTR_E_FD_INITONLYANDLITERAL;
    public static HResult VLDTR_E_FD_LITERALNOTSTATIC;
    public static HResult VLDTR_E_FMD_RTSNNOTSN;
    public static HResult VLDTR_E_MD_ABSTPARNOTABST;
    public static HResult VLDTR_E_MD_NOTSTATABSTININTF;
    public static HResult VLDTR_E_MD_NOTPUBININTF;
    public static HResult VLDTR_E_MD_CTORININTF;
    public static HResult VLDTR_E_MD_GLOBALCTORCCTOR;
    public static HResult VLDTR_E_MD_CTORSTATIC;
    public static HResult VLDTR_E_MD_CTORNOTSNRTSN;
    public static HResult VLDTR_E_MD_CTORVIRT;
    public static HResult VLDTR_E_MD_CTORABST;
    public static HResult VLDTR_E_MD_CCTORNOTSTATIC;
    public static HResult VLDTR_E_MD_ZERORVA;
    public static HResult VLDTR_E_MD_FINNOTVIRT;
    public static HResult VLDTR_E_MD_STATANDFINORVIRT;
    public static HResult VLDTR_E_MD_ABSTANDFINAL;
    public static HResult VLDTR_E_MD_ABSTANDIMPL;
    public static HResult VLDTR_E_MD_ABSTANDPINVOKE;
    public static HResult VLDTR_E_MD_ABSTNOTVIRT;
    public static HResult VLDTR_E_MD_NOTABSTNOTIMPL;
    public static HResult VLDTR_E_MD_NOTABSTBADFLAGSRVA;
    public static HResult VLDTR_E_MD_PRIVSCOPENORVA;
    public static HResult VLDTR_E_MD_GLOBALABSTORVIRT;
    public static HResult VLDTR_E_SIG_LONGFORM;
    public static HResult VLDTR_E_MD_MULTIPLESEMANTICS;
    public static HResult VLDTR_E_MD_INVALIDSEMANTICS;
    public static HResult VLDTR_E_MD_SEMANTICSNOTEXIST;
    public static HResult VLDTR_E_MI_DECLNOTVIRT;
    public static HResult VLDTR_E_FMD_GLOBALITEM;
    public static HResult VLDTR_E_MD_MULTSEMANTICFLAGS;
    public static HResult VLDTR_E_MD_NOSEMANTICFLAGS;
    public static HResult VLDTR_E_FD_FLDINIFACE;
    public static HResult VLDTR_E_AS_HASHALGID;
    public static HResult VLDTR_E_AS_PROCID;
    public static HResult VLDTR_E_AR_PROCID;
    public static HResult VLDTR_E_CN_PARENTRANGE;
    public static HResult VLDTR_E_AS_BADFLAGS;
    public static HResult VLDTR_E_TR_HASTYPEDEF;
    public static HResult VLDTR_E_IFACE_BADIMPL;
    public static HResult VLDTR_E_IFACE_BADIFACE;
    public static HResult VLDTR_E_TD_SECURNOTMARKED;
    public static HResult VLDTR_E_TD_MARKEDNOSECUR;
    public static HResult VLDTR_E_MD_CCTORHASARGS;
    public static HResult VLDTR_E_CT_BADIMPL;
    public static HResult VLDTR_E_MI_ALIENBODY;
    public static HResult VLDTR_E_MD_CCTORCALLCONV;
    public static HResult VLDTR_E_MI_BADCLASS;
    public static HResult VLDTR_E_MI_CLASSISINTF;
    public static HResult VLDTR_E_MI_BADDECL;
    public static HResult VLDTR_E_MI_BADBODY;
    public static HResult VLDTR_E_MI_DUP;
    public static HResult VLDTR_E_FD_BADPARENT;
    public static HResult VLDTR_E_MD_PARAMOUTOFSEQ;
    public static HResult VLDTR_E_MD_PARASEQTOOBIG;
    public static HResult VLDTR_E_MD_PARMMARKEDNOMARSHAL;
    public static HResult VLDTR_E_MD_PARMMARSHALNOTMARKED;
    public static HResult VLDTR_E_MD_PARMMARKEDNODEFLT;
    public static HResult VLDTR_E_MD_PARMDEFLTNOTMARKED;
    public static HResult VLDTR_E_PR_BADSCOPE;
    public static HResult VLDTR_E_PR_NONAME;
    public static HResult VLDTR_E_PR_NOSIG;
    public static HResult VLDTR_E_PR_DUP;
    public static HResult VLDTR_E_PR_BADCALLINGCONV;
    public static HResult VLDTR_E_PR_MARKEDNODEFLT;
    public static HResult VLDTR_E_PR_DEFLTNOTMARKED;
    public static HResult VLDTR_E_PR_BADSEMANTICS;
    public static HResult VLDTR_E_PR_BADMETHOD;
    public static HResult VLDTR_E_PR_ALIENMETHOD;
    public static HResult VLDTR_E_CN_BLOBNOTNULL;
    public static HResult VLDTR_E_CN_BLOBNULL;
    public static HResult VLDTR_E_EV_BADSCOPE;
    public static HResult VLDTR_E_EV_NONAME;
    public static HResult VLDTR_E_EV_DUP;
    public static HResult VLDTR_E_EV_BADEVTYPE;
    public static HResult VLDTR_E_EV_EVTYPENOTCLASS;
    public static HResult VLDTR_E_EV_BADSEMANTICS;
    public static HResult VLDTR_E_EV_BADMETHOD;
    public static HResult VLDTR_E_EV_ALIENMETHOD;
    public static HResult VLDTR_E_EV_NOADDON;
    public static HResult VLDTR_E_EV_NOREMOVEON;
    public static HResult VLDTR_E_CT_DUPTDNAME;
    public static HResult VLDTR_E_MAR_BADOFFSET;
    public static HResult VLDTR_E_DS_BADOWNER;
    public static HResult VLDTR_E_DS_BADFLAGS;
    public static HResult VLDTR_E_DS_NOBLOB;
    public static HResult VLDTR_E_MAR_BADIMPL;
    public static HResult VLDTR_E_MR_VARARGCALLINGCONV;
    public static HResult VLDTR_E_MD_CTORNOTVOID;
    public static HResult VLDTR_E_EV_FIRENOTVOID;
    public static HResult VLDTR_E_AS_BADLOCALE;
    public static HResult VLDTR_E_CN_PARENTTYPE;
    public static HResult VLDTR_E_SIG_SENTINMETHODDEF;
    public static HResult VLDTR_E_SIG_SENTMUSTVARARG;
    public static HResult VLDTR_E_SIG_MULTSENTINELS;
    public static HResult VLDTR_E_SIG_LASTSENTINEL;
    public static HResult VLDTR_E_SIG_MISSARG;
    public static HResult VLDTR_E_SIG_BYREFINFIELD;
    public static HResult VLDTR_E_MD_SYNCMETHODINVTYPE;
    public static HResult VLDTR_E_TD_NAMETOOLONG;
    public static HResult VLDTR_E_AS_PROCDUP;
    public static HResult VLDTR_E_ASOS_DUP;
    public static HResult VLDTR_E_MAR_BADFLAGS;
    public static HResult VLDTR_E_CT_NOTYPEDEFID;
    public static HResult VLDTR_E_FILE_BADFLAGS;
    public static HResult VLDTR_E_FILE_NULLHASH;
    public static HResult VLDTR_E_MOD_NONAME;
    public static HResult VLDTR_E_MOD_NAMEFULLQLFD;
    public static HResult VLDTR_E_TD_RTSPCLNOTSPCL;
    public static HResult VLDTR_E_TD_EXTENDSIFACE;
    public static HResult VLDTR_E_MD_CTORPINVOKE;
    public static HResult VLDTR_E_TD_SYSENUMNOTCLASS;
    public static HResult VLDTR_E_TD_SYSENUMNOTEXTVTYPE;
    public static HResult VLDTR_E_MI_SIGMISMATCH;
    public static HResult VLDTR_E_TD_ENUMHASMETHODS;
    public static HResult VLDTR_E_TD_ENUMIMPLIFACE;
    public static HResult VLDTR_E_TD_ENUMHASPROP;
    public static HResult VLDTR_E_TD_ENUMHASEVENT;
    public static HResult VLDTR_E_TD_BADMETHODLST;
    public static HResult VLDTR_E_TD_BADFIELDLST;
    public static HResult VLDTR_E_CN_BADTYPE;
    public static HResult VLDTR_E_TD_ENUMNOINSTFLD;
    public static HResult VLDTR_E_TD_ENUMMULINSTFLD;
    public static HResult VLDTR_E_INTERRUPTED;
    public static HResult VLDTR_E_NOTINIT;
    public static HResult VLDTR_E_IFACE_NOTIFACE;
    public static HResult VLDTR_E_FD_RVAHASNORVA;
    public static HResult VLDTR_E_FD_RVAHASZERORVA;
    public static HResult VLDTR_E_MD_RVAANDIMPLMAP;
    public static HResult VLDTR_E_TD_EXTRAFLAGS;
    public static HResult VLDTR_E_TD_EXTENDSITSELF;
    public static HResult VLDTR_E_TD_SYSVTNOTEXTOBJ;
    public static HResult VLDTR_E_TD_EXTTYPESPEC;
    public static HResult VLDTR_E_TD_VTNOSIZE;
    public static HResult VLDTR_E_TD_IFACESEALED;
    public static HResult VLDTR_E_NC_BADNESTED;
    public static HResult VLDTR_E_NC_BADENCLOSER;
    public static HResult VLDTR_E_NC_DUP;
    public static HResult VLDTR_E_NC_DUPENCLOSER;
    public static HResult VLDTR_E_FRVA_ZERORVA;
    public static HResult VLDTR_E_FRVA_BADFIELD;
    public static HResult VLDTR_E_FRVA_DUPRVA;
    public static HResult VLDTR_E_FRVA_DUPFIELD;
    public static HResult VLDTR_E_EP_BADTOKEN;
    public static HResult VLDTR_E_EP_INSTANCE;
    public static HResult VLDTR_E_TD_ENUMFLDBADTYPE;
    public static HResult VLDTR_E_MD_BADRVA;
    public static HResult VLDTR_E_FD_LITERALNODEFAULT;
    public static HResult VLDTR_E_IFACE_METHNOTIMPL;
    public static HResult VLDTR_E_CA_BADPARENT;
    public static HResult VLDTR_E_CA_BADTYPE;
    public static HResult VLDTR_E_CA_NOTCTOR;
    public static HResult VLDTR_E_CA_BADSIG;
    public static HResult VLDTR_E_CA_NOSIG;
    public static HResult VLDTR_E_CA_BADPROLOG;
    public static HResult VLDTR_E_MD_BADLOCALSIGTOK;
    public static HResult VLDTR_E_MD_BADHEADER;
    public static HResult VLDTR_E_EP_TOOMANYARGS;
    public static HResult VLDTR_E_EP_BADRET;
    public static HResult VLDTR_E_EP_BADARG;
    public static HResult VLDTR_E_SIG_BADVOID;
    public static HResult VLDTR_E_IFACE_METHMULTIMPL;
    public static HResult VLDTR_E_GP_NAMENULL;
    public static HResult VLDTR_E_GP_OWNERNIL;
    public static HResult VLDTR_E_GP_DUPNAME;
    public static HResult VLDTR_E_GP_DUPNUMBER;
    public static HResult VLDTR_E_GP_NONSEQ_BY_OWNER;
    public static HResult VLDTR_E_GP_NONSEQ_BY_NUMBER;
    public static HResult VLDTR_E_GP_UNEXPECTED_OWNER_FOR_VARIANT_VAR;
    public static HResult VLDTR_E_GP_ILLEGAL_VARIANT_MVAR;
    public static HResult VLDTR_E_GP_ILLEGAL_VARIANCE_FLAGS;
    public static HResult VLDTR_E_GP_REFANDVALUETYPE;
    public static HResult VLDTR_E_GPC_OWNERNIL;
    public static HResult VLDTR_E_GPC_DUP;
    public static HResult VLDTR_E_GPC_NONCONTIGUOUS;
    public static HResult VLDTR_E_MS_METHODNIL;
    public static HResult VLDTR_E_MS_DUP;
    public static HResult VLDTR_E_MS_BADCALLINGCONV;
    public static HResult VLDTR_E_MS_MISSARITY;
    public static HResult VLDTR_E_MS_MISSARG;
    public static HResult VLDTR_E_MS_ARITYMISMATCH;
    public static HResult VLDTR_E_MS_METHODNOTGENERIC;
    public static HResult VLDTR_E_SIG_MISSARITY;
    public static HResult VLDTR_E_SIG_ARITYMISMATCH;
    public static HResult VLDTR_E_MD_GENERIC_CCTOR;
    public static HResult VLDTR_E_MD_GENERIC_CTOR;
    public static HResult VLDTR_E_MD_GENERIC_IMPORT;
    public static HResult VLDTR_E_MD_GENERIC_BADCALLCONV;
    public static HResult VLDTR_E_MD_GENERIC_GLOBAL;
    public static HResult VLDTR_E_EP_GENERIC_METHOD;
    public static HResult VLDTR_E_MD_MISSARITY;
    public static HResult VLDTR_E_MD_ARITYZERO;
    public static HResult VLDTR_E_SIG_ARITYZERO;
    public static HResult VLDTR_E_MS_ARITYZERO;
    public static HResult VLDTR_E_MD_GPMISMATCH;
    public static HResult VLDTR_E_EP_GENERIC_TYPE;
    public static HResult VLDTR_E_MI_DECLNOTGENERIC;
    public static HResult VLDTR_E_MI_IMPLNOTGENERIC;
    public static HResult VLDTR_E_MI_ARITYMISMATCH;
    public static HResult VLDTR_E_TD_EXTBADTYPESPEC;
    public static HResult VLDTR_E_SIG_BYREFINST;
    public static HResult VLDTR_E_MS_BYREFINST;
    public static HResult VLDTR_E_TS_EMPTY;
    public static HResult VLDTR_E_TS_HASSENTINALS;
    public static HResult VLDTR_E_TD_GENERICHASEXPLAYOUT;
    public static HResult VLDTR_E_SIG_BADTOKTYPE;
    public static HResult VLDTR_E_IFACE_METHNOTIMPLTHISMOD;
    public static HResult CORDBG_E_UNRECOVERABLE_ERROR;
    public static HResult CORDBG_E_PROCESS_TERMINATED;
    public static HResult CORDBG_E_PROCESS_NOT_SYNCHRONIZED;
    public static HResult CORDBG_E_CLASS_NOT_LOADED;
    public static HResult CORDBG_E_IL_VAR_NOT_AVAILABLE;
    public static HResult CORDBG_E_BAD_REFERENCE_VALUE;
    public static HResult CORDBG_E_FIELD_NOT_AVAILABLE;
    public static HResult CORDBG_E_NON_NATIVE_FRAME;
    public static HResult CORDBG_E_NONCONTINUABLE_EXCEPTION;
    public static HResult CORDBG_E_CODE_NOT_AVAILABLE;
    public static HResult CORDBG_E_FUNCTION_NOT_IL;
    public static HResult CORDBG_S_BAD_START_SEQUENCE_POINT;
    public static HResult CORDBG_S_BAD_END_SEQUENCE_POINT;
    public static HResult CORDBG_S_INSUFFICIENT_INFO_FOR_SET_IP;
    public static HResult CORDBG_E_CANT_SET_IP_INTO_FINALLY;
    public static HResult CORDBG_E_CANT_SET_IP_OUT_OF_FINALLY;
    public static HResult CORDBG_E_CANT_SET_IP_INTO_CATCH;
    public static HResult CORDBG_E_SET_IP_NOT_ALLOWED_ON_NONLEAF_FRAME;
    public static HResult CORDBG_E_SET_IP_IMPOSSIBLE;
    public static HResult CORDBG_E_FUNC_EVAL_BAD_START_POINT;
    public static HResult CORDBG_E_INVALID_OBJECT;
    public static HResult CORDBG_E_FUNC_EVAL_NOT_COMPLETE;
    public static HResult CORDBG_S_FUNC_EVAL_HAS_NO_RESULT;
    public static HResult CORDBG_S_VALUE_POINTS_TO_VOID;
    public static HResult CORDBG_E_INPROC_NOT_IMPL;
    public static HResult CORDBG_S_FUNC_EVAL_ABORTED;
    public static HResult CORDBG_E_STATIC_VAR_NOT_AVAILABLE;
    public static HResult CORDBG_E_OBJECT_IS_NOT_COPYABLE_VALUE_CLASS;
    public static HResult CORDBG_E_CANT_SETIP_INTO_OR_OUT_OF_FILTER;
    public static HResult CORDBG_E_CANT_CHANGE_JIT_SETTING_FOR_ZAP_MODULE;
    public static HResult CORDBG_E_CANT_SET_IP_OUT_OF_FINALLY_ON_WIN64;
    public static HResult CORDBG_E_CANT_SET_IP_OUT_OF_CATCH_ON_WIN64;
    public static HResult CORDBG_E_REMOTE_CONNECTION_CONN_RESET;
    public static HResult CORDBG_E_REMOTE_CONNECTION_KEEP_ALIVE;
    public static HResult CORDBG_E_REMOTE_CONNECTION_FATAL_ERROR;
    public static HResult CORDBG_E_CANT_SET_TO_JMC;
    public static HResult CORDBG_S_AT_END_OF_STACK;
    public static HResult CORDBG_E_NO_CONTEXT_FOR_INTERNAL_FRAME;
    public static HResult CORDBG_E_NOT_CHILD_FRAME;
    public static HResult CORDBG_E_NON_MATCHING_CONTEXT;
    public static HResult CORDBG_E_PAST_END_OF_STACK;
    public static HResult CORDBG_E_BAD_THREAD_STATE;
    public static HResult CORDBG_E_DEBUGGER_ALREADY_ATTACHED;
    public static HResult CORDBG_E_SUPERFLOUS_CONTINUE;
    public static HResult CORDBG_E_SET_VALUE_NOT_ALLOWED_ON_NONLEAF_FRAME;
    public static HResult CORDBG_E_ENC_EH_MAX_NESTING_LEVEL_CANT_INCREASE;
    public static HResult CORDBG_E_ENC_MODULE_NOT_ENC_ENABLED;
    public static HResult CORDBG_E_SET_IP_NOT_ALLOWED_ON_EXCEPTION;
    public static HResult CORDBG_E_VARIABLE_IS_ACTUALLY_LITERAL;
    public static HResult CORDBG_E_PROCESS_DETACHED;
    public static HResult CORDBG_E_ENC_METHOD_SIG_CHANGED;
    public static HResult CORDBG_E_ENC_METHOD_NO_LOCAL_SIG;
    public static HResult CORDBG_E_ENC_CANT_ADD_FIELD_TO_VALUE_OR_LAYOUT_CLASS;
    public static HResult CORDBG_E_ENC_CANT_CHANGE_FIELD;
    public static HResult CORDBG_E_ENC_CANT_ADD_NON_PRIVATE_MEMBER;
    public static HResult CORDBG_E_FIELD_NOT_STATIC;
    public static HResult CORDBG_E_FIELD_NOT_INSTANCE;
    public static HResult CORDBG_E_ENC_ZAPPED_WITHOUT_ENC;
    public static HResult CORDBG_E_ENC_BAD_METHOD_INFO;
    public static HResult CORDBG_E_ENC_JIT_CANT_UPDATE;
    public static HResult CORDBG_E_ENC_MISSING_CLASS;
    public static HResult CORDBG_E_ENC_INTERNAL_ERROR;
    public static HResult CORDBG_E_ENC_HANGING_FIELD;
    public static HResult CORDBG_E_MODULE_NOT_LOADED;
    public static HResult CORDBG_E_ENC_CANT_CHANGE_SUPERCLASS;
    public static HResult CORDBG_E_UNABLE_TO_SET_BREAKPOINT;
    public static HResult CORDBG_E_DEBUGGING_NOT_POSSIBLE;
    public static HResult CORDBG_E_KERNEL_DEBUGGER_ENABLED;
    public static HResult CORDBG_E_KERNEL_DEBUGGER_PRESENT;
    public static HResult CORDBG_E_HELPER_THREAD_DEAD;
    public static HResult CORDBG_E_INTERFACE_INHERITANCE_CANT_CHANGE;
    public static HResult CORDBG_E_INCOMPATIBLE_PROTOCOL;
    public static HResult CORDBG_E_TOO_MANY_PROCESSES;
    public static HResult CORDBG_E_INTEROP_NOT_SUPPORTED;
    public static HResult CORDBG_E_NO_REMAP_BREAKPIONT;
    public static HResult CORDBG_E_OBJECT_NEUTERED;
    public static HResult CORDBG_E_LIBRARY_PROVIDER_ERROR;
    public static HResult CORDBG_E_NOT_CLR;
    public static HResult CORDBG_E_MISSING_DATA_TARGET_INTERFACE;
    public static HResult CORDBG_E_UNSUPPORTED_DEBUGGING_MODEL;
    public static HResult CORDBG_E_UNSUPPORTED_FORWARD_COMPAT;
    public static HResult CORDBG_E_UNSUPPORTED_VERSION_STRUCT;
    public static HResult CORDBG_E_READVIRTUAL_FAILURE;
    public static HResult CORDBG_E_INVALID_OPCODE;
    public static HResult CORDBG_E_UNSUPPORTED;
    public static HResult CORDBG_E_DATA_TARGET_ERROR;
    public static HResult CORDBG_E_CODE_HAS_NO_METADATA;
    public static HResult CORDBG_E_CODE_UNRECOGNIZED;
    public static HResult CORDBG_E_NO_IMAGE_AVAILABLE;
    public static HResult CORDBG_E_TYPE_NOT_FOUND;
    public static HResult CORDBG_E_VTABLE_HAS_NO_METADATA;
    public static HResult CORPROF_E_FUNCTION_NOT_COMPILED;
    public static HResult CORPROF_E_DATAINCOMPLETE;
    public static HResult CORPROF_E_NOT_REJITABLE_METHODS;
    public static HResult CORPROF_E_CANNOT_UPDATE_METHOD;
    public static HResult CORPROF_E_FUNCTION_NOT_IL;
    public static HResult CORPROF_E_NOT_MANAGED_THREAD;
    public static HResult CORPROF_E_CALL_ONLY_FROM_INIT;
    public static HResult CORPROF_E_INPROC_NOT_ENABLED;
    public static HResult CORPROF_E_JITMAPS_NOT_ENABLED;
    public static HResult CORPROF_E_INPROC_ALREADY_BEGUN;
    public static HResult CORPROF_E_INPROC_NOT_AVAILABLE;
    public static HResult CORPROF_E_NOT_YET_AVAILABLE;
    public static HResult CORPROF_E_TYPE_IS_PARAMETERIZED;
    public static HResult CORPROF_E_FUNCTION_IS_PARAMETERIZED;
    public static HResult SECURITY_E_XML_TO_ASN_ENCODING;
    public static HResult SECURITY_E_INCOMPATIBLE_SHARE;
    public static HResult SECURITY_E_UNVERIFIABLE;
    public static HResult SECURITY_E_INCOMPATIBLE_EVIDENCE;
    public static HResult CLDB_E_INTERNALERROR;
    public static HResult CORSEC_E_DECODE_SET;
    public static HResult CORSEC_E_ENCODE_SET;
    public static HResult CORSEC_E_UNSUPPORTED_FORMAT;
    public static HResult SN_CRYPTOAPI_CALL_FAILED;
    public static HResult CORSEC_E_CRYPTOAPI_CALL_FAILED;
    public static HResult SN_NO_SUITABLE_CSP;
    public static HResult CORSEC_E_NO_SUITABLE_CSP;
    public static HResult CORSEC_E_INVALID_ATTR;
    public static HResult CORSEC_E_POLICY_EXCEPTION;
    public static HResult CORSEC_E_MIN_GRANT_FAIL;
    public static HResult CORSEC_E_NO_EXEC_PERM;
    public static HResult CORSEC_E_XMLSYNTAX;
    public static HResult CORSEC_E_INVALID_STRONGNAME;
    public static HResult CORSEC_E_MISSING_STRONGNAME;
    public static HResult CORSEC_E_CONTAINER_NOT_FOUND;
    public static HResult CORSEC_E_INVALID_IMAGE_FORMAT;
    public static HResult CORSEC_E_INVALID_PUBLICKEY;
    public static HResult CORSEC_E_SIGNATURE_MISMATCH;
    public static HResult CORSEC_E_CRYPTO;
    public static HResult CORSEC_E_CRYPTO_UNEX_OPER;
    public static HResult CORSECATTR_E_BAD_ATTRIBUTE;
    public static HResult CORSECATTR_E_MISSING_CONSTRUCTOR;
    public static HResult CORSECATTR_E_FAILED_TO_CREATE_PERM;
    public static HResult CORSECATTR_E_BAD_ACTION_ASM;
    public static HResult CORSECATTR_E_BAD_ACTION_OTHER;
    public static HResult CORSECATTR_E_BAD_PARENT;
    public static HResult CORSECATTR_E_TRUNCATED;
    public static HResult CORSECATTR_E_BAD_VERSION;
    public static HResult CORSECATTR_E_BAD_ACTION;
    public static HResult CORSECATTR_E_NO_SELF_REF;
    public static HResult CORSECATTR_E_BAD_NONCAS;
    public static HResult CORSECATTR_E_ASSEMBLY_LOAD_FAILED;
    public static HResult CORSECATTR_E_ASSEMBLY_LOAD_FAILED_EX;
    public static HResult CORSECATTR_E_TYPE_LOAD_FAILED;
    public static HResult CORSECATTR_E_TYPE_LOAD_FAILED_EX;
    public static HResult CORSECATTR_E_ABSTRACT;
    public static HResult CORSECATTR_E_UNSUPPORTED_TYPE;
    public static HResult CORSECATTR_E_UNSUPPORTED_ENUM_TYPE;
    public static HResult CORSECATTR_E_NO_FIELD;
    public static HResult CORSECATTR_E_NO_PROPERTY;
    public static HResult CORSECATTR_E_EXCEPTION;
    public static HResult CORSECATTR_E_EXCEPTION_HR;
    public static HResult ISS_E_ISOSTORE;
    public static HResult ISS_E_OPEN_STORE_FILE;
    public static HResult ISS_E_OPEN_FILE_MAPPING;
    public static HResult ISS_E_MAP_VIEW_OF_FILE;
    public static HResult ISS_E_GET_FILE_SIZE;
    public static HResult ISS_E_CREATE_MUTEX;
    public static HResult ISS_E_LOCK_FAILED;
    public static HResult ISS_E_FILE_WRITE;
    public static HResult ISS_E_SET_FILE_POINTER;
    public static HResult ISS_E_CREATE_DIR;
    public static HResult ISS_E_STORE_NOT_OPEN;
    public static HResult ISS_E_CORRUPTED_STORE_FILE;
    public static HResult ISS_E_STORE_VERSION;
    public static HResult ISS_E_FILE_NOT_MAPPED;
    public static HResult ISS_E_BLOCK_SIZE_TOO_SMALL;
    public static HResult ISS_E_ALLOC_TOO_LARGE;
    public static HResult ISS_E_USAGE_WILL_EXCEED_QUOTA;
    public static HResult ISS_E_TABLE_ROW_NOT_FOUND;
    public static HResult ISS_E_DEPRECATE;
    public static HResult ISS_E_CALLER;
    public static HResult ISS_E_PATH_LENGTH;
    public static HResult ISS_E_MACHINE;
    public static HResult ISS_E_MACHINE_DACL;
    public static HResult ISS_E_ISOSTORE_START;
    public static HResult ISS_E_ISOSTORE_END;
    public static HResult COR_E_APPLICATION;
    public static HResult COR_E_ARGUMENT;
    public static HResult COR_E_ARGUMENTOUTOFRANGE;
    public static HResult COR_E_ARITHMETIC;
    public static HResult COR_E_ARRAYTYPEMISMATCH;
    public static HResult COR_E_CONTEXTMARSHAL;
    public static HResult COR_E_TIMEOUT;
    public static HResult COR_E_KEYNOTFOUND;
    public static HResult COR_E_DEVICESNOTSUPPORTED;
    public static HResult COR_E_DIVIDEBYZERO;
    public static HResult COR_E_EXCEPTION;
    public static HResult COR_E_EXECUTIONENGINE;
    public static HResult COR_E_FIELDACCESS;
    public static HResult COR_E_FILE_NOT_FOUND;
    public static HResult COR_E_FORMAT;
    public static HResult COR_E_BADIMAGEFORMAT;
    public static HResult COR_E_ASSEMBLYEXPECTED;
    public static HResult COR_E_TYPEUNLOADED;
    public static HResult COR_E_INDEXOUTOFRANGE;
    public static HResult COR_E_INVALIDCAST;
    public static HResult COR_E_INVALIDOPERATION;
    public static HResult COR_E_INVALIDPROGRAM;
    public static HResult COR_E_MEMBERACCESS;
    public static HResult COR_E_METHODACCESS;
    public static HResult COR_E_MISSINGFIELD;
    public static HResult COR_E_MISSINGMANIFESTRESOURCE;
    public static HResult COR_E_MISSINGMEMBER;
    public static HResult COR_E_MISSINGMETHOD;
    public static HResult COR_E_MISSINGSATELLITEASSEMBLY;
    public static HResult COR_E_MULTICASTNOTSUPPORTED;
    public static HResult COR_E_NOTFINITENUMBER;
    public static HResult COR_E_DUPLICATEWAITOBJECT;
    public static HResult COR_E_PLATFORMNOTSUPPORTED;
    public static HResult COR_E_NOTSUPPORTED;
    public static HResult COR_E_NULLREFERENCE;
    public static HResult COR_E_OUTOFMEMORY;
    public static HResult COR_E_OVERFLOW;
    public static HResult COR_E_RANK;
    public static HResult COR_E_REMOTING;
    public static HResult COR_E_SERVER;
    public static HResult COR_E_SERVICEDCOMPONENT;
    public static HResult COR_E_SECURITY;
    public static HResult COR_E_SERIALIZATION;
    public static HResult COR_E_STACKOVERFLOW;
    public static HResult COR_E_SYNCHRONIZATIONLOCK;
    public static HResult COR_E_SYSTEM;
    public static HResult COR_E_THREADABORTED;
    public static HResult COR_E_OPERATIONCANCELED;
    public static HResult COR_E_NOTCANCELABLE;
    public static HResult COR_E_THREADINTERRUPTED;
    public static HResult COR_E_THREADSTATE;
    public static HResult COR_E_THREADSTOP;
    public static HResult COR_E_TYPEINITIALIZATION;
    public static HResult COR_E_TYPELOAD;
    public static HResult COR_E_ENTRYPOINTNOTFOUND;
    public static HResult COR_E_DLLNOTFOUND;
    public static HResult COR_E_UNAUTHORIZEDACCESS;
    public static HResult COR_E_VERIFICATION;
    public static HResult COR_E_INVALIDCOMOBJECT;
    public static HResult COR_E_COMOBJECTINUSE;
    public static HResult COR_E_SEMAPHOREFULL;
    public static HResult COR_E_WAITHANDLECANNOTBEOPENED;
    public static HResult COR_E_ABANDONEDMUTEX;
    public static HResult COR_E_MARSHALDIRECTIVE;
    public static HResult COR_E_INVALIDOLEVARIANTTYPE;
    public static HResult COR_E_SAFEARRAYTYPEMISMATCH;
    public static HResult COR_E_SAFEARRAYRANKMISMATCH;
    public static HResult COR_E_DATAMISALIGNED;
    public static HResult COR_E_TARGETPARAMCOUNT;
    public static HResult COR_E_AMBIGUOUSMATCH;
    public static HResult COR_E_INVALIDFILTERCRITERIA;
    public static HResult COR_E_REFLECTIONTYPELOAD;
    public static HResult COR_E_TARGET;
    public static HResult COR_E_TARGETINVOCATION;
    public static HResult COR_E_CUSTOMATTRIBUTEFORMAT;
    public static HResult COR_E_FILELOAD;
    public static HResult COR_E_IO;
    public static HResult COR_E_OBJECTDISPOSED;
    public static HResult COR_E_HOSTPROTECTION;
    public static HResult COR_E_FAILFAST;
    public static HResult CLR_E_SHIM_RUNTIMELOAD;
    public static HResult CLR_E_SHIM_RUNTIMEEXPORT;
    public static HResult CLR_E_SHIM_INSTALLROOT;
    public static HResult CLR_E_SHIM_INSTALLCOMP;
    public static HResult VER_E_HRESULT;
    public static HResult VER_E_OFFSET;
    public static HResult VER_E_OPCODE;
    public static HResult VER_E_OPERAND;
    public static HResult VER_E_TOKEN;
    public static HResult VER_E_EXCEPT;
    public static HResult VER_E_STACK_SLOT;
    public static HResult VER_E_LOC;
    public static HResult VER_E_ARG;
    public static HResult VER_E_FOUND;
    public static HResult VER_E_EXPECTED;
    public static HResult VER_E_LOC_BYNAME;
    public static HResult VER_E_UNKNOWN_OPCODE;
    public static HResult VER_E_SIG_CALLCONV;
    public static HResult VER_E_SIG_ELEMTYPE;
    public static HResult VER_E_RET_SIG;
    public static HResult VER_E_FIELD_SIG;
    public static HResult VER_E_INTERNAL;
    public static HResult VER_E_STACK_TOO_LARGE;
    public static HResult VER_E_ARRAY_NAME_LONG;
    public static HResult VER_E_FALLTHRU;
    public static HResult VER_E_TRY_GTEQ_END;
    public static HResult VER_E_TRYEND_GT_CS;
    public static HResult VER_E_HND_GTEQ_END;
    public static HResult VER_E_HNDEND_GT_CS;
    public static HResult VER_E_FLT_GTEQ_CS;
    public static HResult VER_E_TRY_START;
    public static HResult VER_E_HND_START;
    public static HResult VER_E_FLT_START;
    public static HResult VER_E_TRY_OVERLAP;
    public static HResult VER_E_TRY_EQ_HND_FIL;
    public static HResult VER_E_TRY_SHARE_FIN_FAL;
    public static HResult VER_E_HND_OVERLAP;
    public static HResult VER_E_HND_EQ;
    public static HResult VER_E_FIL_OVERLAP;
    public static HResult VER_E_FIL_EQ;
    public static HResult VER_E_FIL_CONT_TRY;
    public static HResult VER_E_FIL_CONT_HND;
    public static HResult VER_E_FIL_CONT_FIL;
    public static HResult VER_E_FIL_GTEQ_CS;
    public static HResult VER_E_FIL_START;
    public static HResult VER_E_FALLTHRU_EXCEP;
    public static HResult VER_E_FALLTHRU_INTO_HND;
    public static HResult VER_E_FALLTHRU_INTO_FIL;
    public static HResult VER_E_LEAVE;
    public static HResult VER_E_RETHROW;
    public static HResult VER_E_ENDFINALLY;
    public static HResult VER_E_ENDFILTER;
    public static HResult VER_E_ENDFILTER_MISSING;
    public static HResult VER_E_BR_INTO_TRY;
    public static HResult VER_E_BR_INTO_HND;
    public static HResult VER_E_BR_INTO_FIL;
    public static HResult VER_E_BR_OUTOF_TRY;
    public static HResult VER_E_BR_OUTOF_HND;
    public static HResult VER_E_BR_OUTOF_FIL;
    public static HResult VER_E_BR_OUTOF_FIN;
    public static HResult VER_E_RET_FROM_TRY;
    public static HResult VER_E_RET_FROM_HND;
    public static HResult VER_E_RET_FROM_FIL;
    public static HResult VER_E_BAD_JMP_TARGET;
    public static HResult VER_E_PATH_LOC;
    public static HResult VER_E_PATH_THIS;
    public static HResult VER_E_PATH_STACK;
    public static HResult VER_E_PATH_STACK_DEPTH;
    public static HResult VER_E_THIS;
    public static HResult VER_E_THIS_UNINIT_EXCEP;
    public static HResult VER_E_THIS_UNINIT_STORE;
    public static HResult VER_E_THIS_UNINIT_RET;
    public static HResult VER_E_THIS_UNINIT_V_RET;
    public static HResult VER_E_THIS_UNINIT_BR;
    public static HResult VER_E_LDFTN_CTOR;
    public static HResult VER_E_STACK_NOT_EQ;
    public static HResult VER_E_STACK_UNEXPECTED;
    public static HResult VER_E_STACK_EXCEPTION;
    public static HResult VER_E_STACK_OVERFLOW;
    public static HResult VER_E_STACK_UNDERFLOW;
    public static HResult VER_E_STACK_EMPTY;
    public static HResult VER_E_STACK_UNINIT;
    public static HResult VER_E_STACK_I_I4_I8;
    public static HResult VER_E_STACK_R_R4_R8;
    public static HResult VER_E_STACK_NO_R_I8;
    public static HResult VER_E_STACK_NUMERIC;
    public static HResult VER_E_STACK_OBJREF;
    public static HResult VER_E_STACK_P_OBJREF;
    public static HResult VER_E_STACK_BYREF;
    public static HResult VER_E_STACK_METHOD;
    public static HResult VER_E_STACK_ARRAY_SD;
    public static HResult VER_E_STACK_VALCLASS;
    public static HResult VER_E_STACK_P_VALCLASS;
    public static HResult VER_E_STACK_NO_VALCLASS;
    public static HResult VER_E_LOC_DEAD;
    public static HResult VER_E_LOC_NUM;
    public static HResult VER_E_ARG_NUM;
    public static HResult VER_E_TOKEN_RESOLVE;
    public static HResult VER_E_TOKEN_TYPE;
    public static HResult VER_E_TOKEN_TYPE_MEMBER;
    public static HResult VER_E_TOKEN_TYPE_FIELD;
    public static HResult VER_E_TOKEN_TYPE_SIG;
    public static HResult VER_E_UNVERIFIABLE;
    public static HResult VER_E_LDSTR_OPERAND;
    public static HResult VER_E_RET_PTR_TO_STACK;
    public static HResult VER_E_RET_VOID;
    public static HResult VER_E_RET_MISSING;
    public static HResult VER_E_RET_EMPTY;
    public static HResult VER_E_RET_UNINIT;
    public static HResult VER_E_ARRAY_ACCESS;
    public static HResult VER_E_ARRAY_V_STORE;
    public static HResult VER_E_ARRAY_SD;
    public static HResult VER_E_ARRAY_SD_PTR;
    public static HResult VER_E_ARRAY_FIELD;
    public static HResult VER_E_ARGLIST;
    public static HResult VER_E_VALCLASS;
    public static HResult VER_E_METHOD_ACCESS;
    public static HResult VER_E_FIELD_ACCESS;
    public static HResult VER_E_DEAD;
    public static HResult VER_E_FIELD_STATIC;
    public static HResult VER_E_FIELD_NO_STATIC;
    public static HResult VER_E_ADDR;
    public static HResult VER_E_ADDR_BYREF;
    public static HResult VER_E_ADDR_LITERAL;
    public static HResult VER_E_INITONLY;
    public static HResult VER_E_THROW;
    public static HResult VER_E_CALLVIRT_VALCLASS;
    public static HResult VER_E_CALL_SIG;
    public static HResult VER_E_CALL_STATIC;
    public static HResult VER_E_CTOR;
    public static HResult VER_E_CTOR_VIRT;
    public static HResult VER_E_CTOR_OR_SUPER;
    public static HResult VER_E_CTOR_MUL_INIT;
    public static HResult VER_E_SIG;
    public static HResult VER_E_SIG_ARRAY;
    public static HResult VER_E_SIG_ARRAY_PTR;
    public static HResult VER_E_SIG_ARRAY_BYREF;
    public static HResult VER_E_SIG_ELEM_PTR;
    public static HResult VER_E_SIG_VARARG;
    public static HResult VER_E_SIG_VOID;
    public static HResult VER_E_SIG_BYREF_BYREF;
    public static HResult VER_E_CODE_SIZE_ZERO;
    public static HResult VER_E_BAD_VARARG;
    public static HResult VER_E_TAIL_CALL;
    public static HResult VER_E_TAIL_BYREF;
    public static HResult VER_E_TAIL_RET;
    public static HResult VER_E_TAIL_RET_VOID;
    public static HResult VER_E_TAIL_RET_TYPE;
    public static HResult VER_E_TAIL_STACK_EMPTY;
    public static HResult VER_E_METHOD_END;
    public static HResult VER_E_BAD_BRANCH;
    public static HResult VER_E_FIN_OVERLAP;
    public static HResult VER_E_LEXICAL_NESTING;
    public static HResult VER_E_VOLATILE;
    public static HResult VER_E_UNALIGNED;
    public static HResult VER_E_INNERMOST_FIRST;
    public static HResult VER_E_CALLI_VIRTUAL;
    public static HResult VER_E_CALL_ABSTRACT;
    public static HResult VER_E_STACK_UNEXP_ARRAY;
    public static HResult VER_E_NOT_IN_GC_HEAP;
    public static HResult VER_E_TRY_N_EMPTY_STACK;
    public static HResult VER_E_DLGT_CTOR;
    public static HResult VER_E_DLGT_BB;
    public static HResult VER_E_DLGT_PATTERN;
    public static HResult VER_E_DLGT_LDFTN;
    public static HResult VER_E_FTN_ABSTRACT;
    public static HResult VER_E_SIG_C_VC;
    public static HResult VER_E_SIG_VC_C;
    public static HResult VER_E_BOX_PTR_TO_STACK;
    public static HResult VER_E_SIG_BYREF_TB_AH;
    public static HResult VER_E_SIG_ARRAY_TB_AH;
    public static HResult VER_E_ENDFILTER_STACK;
    public static HResult VER_E_DLGT_SIG_I;
    public static HResult VER_E_DLGT_SIG_O;
    public static HResult VER_E_RA_PTR_TO_STACK;
    public static HResult VER_E_CATCH_VALUE_TYPE;
    public static HResult VER_E_CATCH_BYREF;
    public static HResult VER_E_FIL_PRECEED_HND;
    public static HResult VER_E_LDVIRTFTN_STATIC;
    public static HResult VER_E_CALLVIRT_STATIC;
    public static HResult VER_E_INITLOCALS;
    public static HResult VER_E_BR_TO_EXCEPTION;
    public static HResult VER_E_CALL_CTOR;
    public static HResult VER_E_VALCLASS_OBJREF_VAR;
    public static HResult VER_E_STACK_P_VALCLASS_OBJREF_VAR;
    public static HResult VER_E_SIG_VAR_PARAM;
    public static HResult VER_E_SIG_MVAR_PARAM;
    public static HResult VER_E_SIG_VAR_ARG;
    public static HResult VER_E_SIG_MVAR_ARG;
    public static HResult VER_E_SIG_GENERICINST;
    public static HResult VER_E_SIG_METHOD_INST;
    public static HResult VER_E_SIG_METHOD_PARENT_INST;
    public static HResult VER_E_SIG_FIELD_PARENT_INST;
    public static HResult VER_E_CALLCONV_NOT_GENERICINST;
    public static HResult VER_E_TOKEN_BAD_METHOD_SPEC;
    public static HResult VER_E_BAD_READONLY_PREFIX;
    public static HResult VER_E_BAD_CONSTRAINED_PREFIX;
    public static HResult VER_E_CIRCULAR_VAR_CONSTRAINTS;
    public static HResult VER_E_CIRCULAR_MVAR_CONSTRAINTS;
    public static HResult VER_E_UNSATISFIED_METHOD_INST;
    public static HResult VER_E_UNSATISFIED_METHOD_PARENT_INST;
    public static HResult VER_E_UNSATISFIED_FIELD_PARENT_INST;
    public static HResult VER_E_UNSATISFIED_BOX_OPERAND;
    public static HResult VER_E_CONSTRAINED_CALL_WITH_NON_BYREF_THIS;
    public static HResult VER_E_CONSTRAINED_OF_NON_VARIABLE_TYPE;
    public static HResult VER_E_READONLY_UNEXPECTED_CALLEE;
    public static HResult VER_E_READONLY_ILLEGAL_WRITE;
    public static HResult VER_E_READONLY_IN_MKREFANY;
    public static HResult VER_E_UNALIGNED_ALIGNMENT;
    public static HResult VER_E_TAILCALL_INSIDE_EH;
    public static HResult VER_E_BACKWARD_BRANCH;
    public static HResult VER_E_CALL_TO_VTYPE_BASE;
    public static HResult VER_E_NEWOBJ_OF_ABSTRACT_CLASS;
    public static HResult VER_E_FIELD_OVERLAP;
    public static HResult VER_E_BAD_PE;
    public static HResult VER_E_BAD_MD;
    public static HResult VER_E_BAD_APPDOMAIN;
    public static HResult VER_E_TYPELOAD;
    public static HResult VER_E_PE_LOAD;
    public static HResult VER_E_WRITE_RVA_STATIC;
    public static HResult CORDBG_E_THREAD_NOT_SCHEDULED;
    public static HResult CORDBG_E_HANDLE_HAS_BEEN_DISPOSED;
    public static HResult CORDBG_E_NONINTERCEPTABLE_EXCEPTION;
    public static HResult CORDBG_E_CANT_UNWIND_ABOVE_CALLBACK;
    public static HResult CORDBG_E_INTERCEPT_FRAME_ALREADY_SET;
    public static HResult CORDBG_E_NO_NATIVE_PATCH_AT_ADDR;
    public static HResult CORDBG_E_MUST_BE_INTEROP_DEBUGGING;
    public static HResult CORDBG_E_NATIVE_PATCH_ALREADY_AT_ADDR;
    public static HResult CORDBG_E_TIMEOUT;
    public static HResult CORDBG_E_CANT_CALL_ON_THIS_THREAD;
    public static HResult CORDBG_E_ENC_INFOLESS_METHOD;
    public static HResult CORDBG_E_ENC_NESTED_HANLDERS;
    public static HResult CORDBG_E_ENC_IN_FUNCLET;
    public static HResult CORDBG_E_ENC_LOCALLOC;
    public static HResult CORDBG_E_ENC_EDIT_NOT_SUPPORTED;
    public static HResult CORDBG_E_FEABORT_DELAYED_UNTIL_THREAD_RESUMED;
    public static HResult CORDBG_E_NOTREADY;
    public static HResult CORDBG_E_CANNOT_RESOLVE_ASSEMBLY;
    public static HResult CORDBG_E_MUST_BE_IN_LOAD_MODULE;
    public static HResult CORDBG_E_CANNOT_BE_ON_ATTACH;
    public static HResult CORDBG_S_NOT_ALL_BITS_SET;
    public static HResult CORDBG_E_NGEN_NOT_SUPPORTED;
    public static HResult CORDBG_E_ILLEGAL_SHUTDOWN_ORDER;
    public static HResult CORDBG_E_CANNOT_DEBUG_FIBER_PROCESS;
    public static HResult CORDBG_E_MUST_BE_IN_CREATE_PROCESS;
    public static HResult CORDBG_E_DETACH_FAILED_OUTSTANDING_EVALS;
    public static HResult CORDBG_E_DETACH_FAILED_OUTSTANDING_STEPPERS;
    public static HResult CORDBG_E_CANT_INTEROP_STEP_OUT;
    public static HResult CORDBG_E_DETACH_FAILED_OUTSTANDING_BREAKPOINTS;
    public static HResult CORDBG_E_ILLEGAL_IN_STACK_OVERFLOW;
    public static HResult CORDBG_E_ILLEGAL_AT_GC_UNSAFE_POINT;
    public static HResult CORDBG_E_ILLEGAL_IN_PROLOG;
    public static HResult CORDBG_E_ILLEGAL_IN_NATIVE_CODE;
    public static HResult CORDBG_E_ILLEGAL_IN_OPTIMIZED_CODE;
    public static HResult CORDBG_E_MISSING_METADATA;
    public static HResult CORDBG_E_MODULE_LOADED_FROM_DISK;
    public static HResult CORDBG_E_SYMBOLS_NOT_AVAILABLE;
    public static HResult CORDBG_E_VALUE_POINTS_TO_FUNCTION;
    public static HResult PEFMT_E_NO_CONTENTS;
    public static HResult PEFMT_E_NO_NTHEADERS;
    public static HResult PEFMT_E_64BIT;
    public static HResult PEFMT_E_NO_CORHEADER;
    public static HResult PEFMT_E_NOT_ILONLY;
    public static HResult PEFMT_E_IMPORT_DLLS;
    public static HResult PEFMT_E_EXE_NOENTRYPOINT;
    public static HResult PEFMT_E_BASE_RELOCS;
    public static HResult PEFMT_E_ENTRYPOINT;
    public static HResult PEFMT_E_ZERO_SIZEOFCODE;
    public static HResult PEFMT_E_BAD_CORHEADER;
    public static HResult HR_FOR_ERROR_PARTIAL_COPY;
}
internal abstract class Microsoft.Samples.Debugging.CorDebug.HRUtils : object {
    public static bool IsFailingHR(int hr);
    public static bool IsSOK(int hr);
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi._CodeChunkInfo : ValueType {
    public ulong startAddr;
    public UInt32 length;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi._COR_VERSION : ValueType {
    public UInt32 dwMajor;
    public UInt32 dwMinor;
    public UInt32 dwBuild;
    public UInt32 dwSubBuild;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi._LARGE_INTEGER : ValueType {
    public long QuadPart;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi._ULARGE_INTEGER : ValueType {
    public ulong QuadPart;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_ACTIVE_FUNCTION : ValueType {
    public ICorDebugAppDomain pAppDomain;
    public ICorDebugModule pModule;
    public ICorDebugFunction2 pFunction;
    public UInt32 ilOffset;
    public UInt32 Flags;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_ARRAY_LAYOUT : ValueType {
    public COR_TYPEID componentID;
    public CorElementType componentType;
    public int firstElementOffset;
    public int elementSize;
    public int countOffset;
    public int rankSize;
    public int numRanks;
    public int rankOffset;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_DEBUG_IL_TO_NATIVE_MAP : ValueType {
    public UInt32 ilOffset;
    public UInt32 nativeStartOffset;
    public UInt32 nativeEndOffset;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_DEBUG_STEP_RANGE : ValueType {
    public UInt32 startOffset;
    public UInt32 endOffset;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_FIELD : ValueType {
    public int token;
    public int offset;
    public COR_TYPEID id;
    public CorElementType fieldType;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_GC_REFERENCE : ValueType {
    public ICorDebugAppDomain Domain;
    public ICorDebugValue Location;
    public CorGCReferenceType Type;
    public ulong ExtraData;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_HEAPINFO : ValueType {
    public UInt32 areGCStructuresValid;
    public UInt32 pointerSize;
    public UInt32 numHeaps;
    public UInt32 concurrent;
    public CorDebugGCType gcType;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_HEAPOBJECT : ValueType {
    public ulong address;
    public ulong size;
    public COR_TYPEID type;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_IL_MAP : ValueType {
    public UInt32 oldOffset;
    public UInt32 newOffset;
    public int fAccurate;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_SEGMENT : ValueType {
    public ulong start;
    public ulong end;
    public CorDebugGenerationTypes type;
    public UInt32 heap;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_TYPE_LAYOUT : ValueType {
    public COR_TYPEID parentID;
    public int objectSize;
    public int numFields;
    public int boxOffset;
    public CorElementType type;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.COR_TYPEID : ValueType {
    public ulong token1;
    public ulong token2;
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(COR_TYPEID other);
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.CORDB_FIELD_INFO : ValueType {
    public UInt32 Ordinal;
    public UInt32 Offset;
    public CorDebugFieldStorage Storage;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugBlockingObject : ValueType {
    public ICorDebugValue BlockingObject;
    public UInt32 Timeout;
    public CorDebugBlockingReason BlockingReason;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugBlockingReason : Enum {
    public int value__;
    public static CorDebugBlockingReason None;
    public static CorDebugBlockingReason MonitorCriticalSection;
    public static CorDebugBlockingReason MonitorEvent;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugChainReason : Enum {
    public int value__;
    public static CorDebugChainReason CHAIN_CLASS_INIT;
    public static CorDebugChainReason CHAIN_CONTEXT_POLICY;
    public static CorDebugChainReason CHAIN_CONTEXT_SWITCH;
    public static CorDebugChainReason CHAIN_DEBUGGER_EVAL;
    public static CorDebugChainReason CHAIN_ENTER_MANAGED;
    public static CorDebugChainReason CHAIN_ENTER_UNMANAGED;
    public static CorDebugChainReason CHAIN_EXCEPTION_FILTER;
    public static CorDebugChainReason CHAIN_FUNC_EVAL;
    public static CorDebugChainReason CHAIN_INTERCEPTION;
    public static CorDebugChainReason CHAIN_NONE;
    public static CorDebugChainReason CHAIN_PROCESS_START;
    public static CorDebugChainReason CHAIN_SECURITY;
    public static CorDebugChainReason CHAIN_THREAD_START;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugCodeInvokeKind : Enum {
    public int value__;
    public static CorDebugCodeInvokeKind None;
    public static CorDebugCodeInvokeKind Return;
    public static CorDebugCodeInvokeKind TailCall;
    public static CorDebugCodeInvokeKind Call;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugCodeInvokePurpose : Enum {
    public int value__;
    public static CorDebugCodeInvokePurpose None;
    public static CorDebugCodeInvokePurpose NativeToManagedTransition;
    public static CorDebugCodeInvokePurpose ClassInit;
    public static CorDebugCodeInvokePurpose InterfaceDispatch;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugCreateProcessFlags : Enum {
    public int value__;
    public static CorDebugCreateProcessFlags DEBUG_NO_SPECIAL_OPTIONS;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugDebugEventKind : Enum {
    public int value__;
    public static CorDebugDebugEventKind ModuleLoaded;
    public static CorDebugDebugEventKind ModuleUnloaded;
    public static CorDebugDebugEventKind ManagedExceptionFirstChance;
    public static CorDebugDebugEventKind ManagedExceptionUserFirstChance;
    public static CorDebugDebugEventKind ManagedExceptionCatchHandlerFound;
    public static CorDebugDebugEventKind ManagedExceptionUnhandled;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugEHClause : ValueType {
    public CorExceptionFlag Flags;
    public UInt32 TryOffset;
    public UInt32 TryLength;
    public UInt32 HandlerOffset;
    public UInt32 HandlerLength;
    public UInt32 ClassToken;
    public UInt32 FilterOffset;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugExceptionCallbackType : Enum {
    public int value__;
    public static CorDebugExceptionCallbackType DEBUG_EXCEPTION_CATCH_HANDLER_FOUND;
    public static CorDebugExceptionCallbackType DEBUG_EXCEPTION_FIRST_CHANCE;
    public static CorDebugExceptionCallbackType DEBUG_EXCEPTION_UNHANDLED;
    public static CorDebugExceptionCallbackType DEBUG_EXCEPTION_USER_FIRST_CHANCE;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugExceptionFlags : Enum {
    public int value__;
    public static CorDebugExceptionFlags None;
    public static CorDebugExceptionFlags CanBeIntercepted;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugExceptionObjectStackFrame : ValueType {
    public ICorDebugModule pModule;
    public ulong ip;
    public int methodDef;
    public bool isLastForeignException;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugExceptionUnwindCallbackType : Enum {
    public int value__;
    public static CorDebugExceptionUnwindCallbackType DEBUG_EXCEPTION_INTERCEPTED;
    public static CorDebugExceptionUnwindCallbackType DEBUG_EXCEPTION_UNWIND_BEGIN;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugFieldStorage : Enum {
    public int value__;
    public static CorDebugFieldStorage Instance;
    public static CorDebugFieldStorage NonGcStatic;
    public static CorDebugFieldStorage GcStatic;
    public static CorDebugFieldStorage TLS;
}
[FlagsAttribute]
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugFilterFlagsWindows : Enum {
    public int value__;
    public static CorDebugFilterFlagsWindows None;
    public static CorDebugFilterFlagsWindows IsFirstChance;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugGCType : Enum {
    public int value__;
    public static CorDebugGCType CorDebugWorkstationGC;
    public static CorDebugGCType CorDebugServerGC;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugGenerationTypes : Enum {
    public int value__;
    public static CorDebugGenerationTypes CorDebug_Gen0;
    public static CorDebugGenerationTypes CorDebug_Gen1;
    public static CorDebugGenerationTypes CorDebug_Gen2;
    public static CorDebugGenerationTypes CorDebug_LOH;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugGuidToTypeMapping : ValueType {
    public Guid iid;
    public ICorDebugType icdType;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugHandleType : Enum {
    public int value__;
    public static CorDebugHandleType HANDLE_STRONG;
    public static CorDebugHandleType HANDLE_WEAK_TRACK_RESURRECTION;
}
[FlagsAttribute]
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugIntercept : Enum {
    public int value__;
    public static CorDebugIntercept INTERCEPT_NONE;
    public static CorDebugIntercept INTERCEPT_ALL;
    public static CorDebugIntercept INTERCEPT_CLASS_INIT;
    public static CorDebugIntercept INTERCEPT_EXCEPTION_FILTER;
    public static CorDebugIntercept INTERCEPT_SECURITY;
    public static CorDebugIntercept INTERCEPT_CONTEXT_POLICY;
    public static CorDebugIntercept INTERCEPT_INTERCEPTION;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugInternalFrameType : Enum {
    public int value__;
    public static CorDebugInternalFrameType STUBFRAME_NONE;
    public static CorDebugInternalFrameType STUBFRAME_M2U;
    public static CorDebugInternalFrameType STUBFRAME_U2M;
    public static CorDebugInternalFrameType STUBFRAME_APPDOMAIN_TRANSITION;
    public static CorDebugInternalFrameType STUBFRAME_LIGHTWEIGHT_FUNCTION;
    public static CorDebugInternalFrameType STUBFRAME_FUNC_EVAL;
    public static CorDebugInternalFrameType STUBFRAME_INTERNALCALL;
    public static CorDebugInternalFrameType STUBFRAME_CLASS_INIT;
    public static CorDebugInternalFrameType STUBFRAME_EXCEPTION;
    public static CorDebugInternalFrameType STUBFRAME_SECURITY;
    public static CorDebugInternalFrameType STUBFRAME_JIT_COMPILATION;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugMappingResult : Enum {
    public int value__;
    public static CorDebugMappingResult MAPPING_APPROXIMATE;
    public static CorDebugMappingResult MAPPING_EPILOG;
    public static CorDebugMappingResult MAPPING_EXACT;
    public static CorDebugMappingResult MAPPING_NO_INFO;
    public static CorDebugMappingResult MAPPING_PROLOG;
    public static CorDebugMappingResult MAPPING_UNMAPPED_ADDRESS;
}
[FlagsAttribute]
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugMDAFlags : Enum {
    public int value__;
    public static CorDebugMDAFlags None;
    public static CorDebugMDAFlags MDA_FLAG_SLIP;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugNGENPolicyFlags : Enum {
    public int value__;
    public static CorDebugNGENPolicyFlags DISABLE_LOCAL_NIC;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugRecordFormat : Enum {
    public int value__;
    public static CorDebugRecordFormat None;
    public static CorDebugRecordFormat WindowsExceptionRecord32;
    public static CorDebugRecordFormat WindowsExceptionRecord64;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugRegister : Enum {
    public int value__;
    public static CorDebugRegister REGISTER_AMD64_R10;
    public static CorDebugRegister REGISTER_AMD64_R11;
    public static CorDebugRegister REGISTER_AMD64_R12;
    public static CorDebugRegister REGISTER_AMD64_R13;
    public static CorDebugRegister REGISTER_AMD64_R14;
    public static CorDebugRegister REGISTER_AMD64_R15;
    public static CorDebugRegister REGISTER_AMD64_R8;
    public static CorDebugRegister REGISTER_AMD64_R9;
    public static CorDebugRegister REGISTER_AMD64_RAX;
    public static CorDebugRegister REGISTER_AMD64_RBP;
    public static CorDebugRegister REGISTER_AMD64_RBX;
    public static CorDebugRegister REGISTER_AMD64_RCX;
    public static CorDebugRegister REGISTER_AMD64_RDI;
    public static CorDebugRegister REGISTER_AMD64_RDX;
    public static CorDebugRegister REGISTER_AMD64_RIP;
    public static CorDebugRegister REGISTER_AMD64_RSI;
    public static CorDebugRegister REGISTER_AMD64_RSP;
    public static CorDebugRegister REGISTER_AMD64_XMM0;
    public static CorDebugRegister REGISTER_AMD64_XMM1;
    public static CorDebugRegister REGISTER_AMD64_XMM10;
    public static CorDebugRegister REGISTER_AMD64_XMM11;
    public static CorDebugRegister REGISTER_AMD64_XMM12;
    public static CorDebugRegister REGISTER_AMD64_XMM13;
    public static CorDebugRegister REGISTER_AMD64_XMM14;
    public static CorDebugRegister REGISTER_AMD64_XMM15;
    public static CorDebugRegister REGISTER_AMD64_XMM2;
    public static CorDebugRegister REGISTER_AMD64_XMM3;
    public static CorDebugRegister REGISTER_AMD64_XMM4;
    public static CorDebugRegister REGISTER_AMD64_XMM5;
    public static CorDebugRegister REGISTER_AMD64_XMM6;
    public static CorDebugRegister REGISTER_AMD64_XMM7;
    public static CorDebugRegister REGISTER_AMD64_XMM8;
    public static CorDebugRegister REGISTER_AMD64_XMM9;
    public static CorDebugRegister REGISTER_FRAME_POINTER;
    public static CorDebugRegister REGISTER_IA64_BSP;
    public static CorDebugRegister REGISTER_IA64_F0;
    public static CorDebugRegister REGISTER_IA64_R0;
    public static CorDebugRegister REGISTER_INSTRUCTION_POINTER;
    public static CorDebugRegister REGISTER_STACK_POINTER;
    public static CorDebugRegister REGISTER_X86_EAX;
    public static CorDebugRegister REGISTER_X86_EBP;
    public static CorDebugRegister REGISTER_X86_EBX;
    public static CorDebugRegister REGISTER_X86_ECX;
    public static CorDebugRegister REGISTER_X86_EDI;
    public static CorDebugRegister REGISTER_X86_EDX;
    public static CorDebugRegister REGISTER_X86_EIP;
    public static CorDebugRegister REGISTER_X86_ESI;
    public static CorDebugRegister REGISTER_X86_ESP;
    public static CorDebugRegister REGISTER_X86_FPSTACK_0;
    public static CorDebugRegister REGISTER_X86_FPSTACK_1;
    public static CorDebugRegister REGISTER_X86_FPSTACK_2;
    public static CorDebugRegister REGISTER_X86_FPSTACK_3;
    public static CorDebugRegister REGISTER_X86_FPSTACK_4;
    public static CorDebugRegister REGISTER_X86_FPSTACK_5;
    public static CorDebugRegister REGISTER_X86_FPSTACK_6;
    public static CorDebugRegister REGISTER_X86_FPSTACK_7;
    public static CorDebugRegister REGISTER_ARM_LR;
    public static CorDebugRegister REGISTER_ARM_PC;
    public static CorDebugRegister REGISTER_ARM_R0;
    public static CorDebugRegister REGISTER_ARM_R1;
    public static CorDebugRegister REGISTER_ARM_R2;
    public static CorDebugRegister REGISTER_ARM_R3;
    public static CorDebugRegister REGISTER_ARM_R4;
    public static CorDebugRegister REGISTER_ARM_R5;
    public static CorDebugRegister REGISTER_ARM_R6;
    public static CorDebugRegister REGISTER_ARM_R7;
    public static CorDebugRegister REGISTER_ARM_R8;
    public static CorDebugRegister REGISTER_ARM_R9;
    public static CorDebugRegister REGISTER_ARM_R10;
    public static CorDebugRegister REGISTER_ARM_R11;
    public static CorDebugRegister REGISTER_ARM_R12;
    public static CorDebugRegister REGISTER_ARM_SP;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugSetContextFlag : Enum {
    public int value__;
    public static CorDebugSetContextFlag SET_CONTEXT_FLAG_ACTIVE_FRAME;
    public static CorDebugSetContextFlag SET_CONTEXT_FLAG_UNWIND_FRAME;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugStateChange : Enum {
    public int value__;
    public static CorDebugStateChange None;
    public static CorDebugStateChange ProcessRunning;
    public static CorDebugStateChange FlushAll;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugStepReason : Enum {
    public int value__;
    public static CorDebugStepReason STEP_NORMAL;
    public static CorDebugStepReason STEP_RETURN;
    public static CorDebugStepReason STEP_CALL;
    public static CorDebugStepReason STEP_EXCEPTION_FILTER;
    public static CorDebugStepReason STEP_EXCEPTION_HANDLER;
    public static CorDebugStepReason STEP_INTERCEPT;
    public static CorDebugStepReason STEP_EXIT;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugThreadState : Enum {
    public int value__;
    public static CorDebugThreadState THREAD_RUN;
    public static CorDebugThreadState THREAD_SUSPEND;
}
[FlagsAttribute]
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugUnmappedStop : Enum {
    public int value__;
    public static CorDebugUnmappedStop STOP_ALL;
    public static CorDebugUnmappedStop STOP_NONE;
    public static CorDebugUnmappedStop STOP_PROLOG;
    public static CorDebugUnmappedStop STOP_EPILOG;
    public static CorDebugUnmappedStop STOP_NO_MAPPING_INFO;
    public static CorDebugUnmappedStop STOP_OTHER_UNMAPPED;
    public static CorDebugUnmappedStop STOP_UNMANAGED;
}
[FlagsAttribute]
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorDebugUserState : Enum {
    public int value__;
    public static CorDebugUserState USER_NONE;
    public static CorDebugUserState USER_STOP_REQUESTED;
    public static CorDebugUserState USER_SUSPEND_REQUESTED;
    public static CorDebugUserState USER_BACKGROUND;
    public static CorDebugUserState USER_UNSTARTED;
    public static CorDebugUserState USER_STOPPED;
    public static CorDebugUserState USER_WAIT_SLEEP_JOIN;
    public static CorDebugUserState USER_SUSPENDED;
    public static CorDebugUserState USER_UNSAFE_POINT;
    public static CorDebugUserState USER_THREADPOOL;
}
[FlagsAttribute]
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorElementType : Enum {
    public int value__;
    public static CorElementType ELEMENT_TYPE_PINNED;
    public static CorElementType ELEMENT_TYPE_SENTINEL;
    public static CorElementType ELEMENT_TYPE_MODIFIER;
    public static CorElementType ELEMENT_TYPE_MAX;
    public static CorElementType ELEMENT_TYPE_INTERNAL;
    public static CorElementType ELEMENT_TYPE_CMOD_OPT;
    public static CorElementType ELEMENT_TYPE_CMOD_REQD;
    public static CorElementType ELEMENT_TYPE_MVAR;
    public static CorElementType ELEMENT_TYPE_SZARRAY;
    public static CorElementType ELEMENT_TYPE_OBJECT;
    public static CorElementType ELEMENT_TYPE_FNPTR;
    public static CorElementType ELEMENT_TYPE_U;
    public static CorElementType ELEMENT_TYPE_I;
    public static CorElementType ELEMENT_TYPE_TYPEDBYREF;
    public static CorElementType ELEMENT_TYPE_GENERICINST;
    public static CorElementType ELEMENT_TYPE_ARRAY;
    public static CorElementType ELEMENT_TYPE_VAR;
    public static CorElementType ELEMENT_TYPE_CLASS;
    public static CorElementType ELEMENT_TYPE_VALUETYPE;
    public static CorElementType ELEMENT_TYPE_BYREF;
    public static CorElementType ELEMENT_TYPE_PTR;
    public static CorElementType ELEMENT_TYPE_STRING;
    public static CorElementType ELEMENT_TYPE_R8;
    public static CorElementType ELEMENT_TYPE_R4;
    public static CorElementType ELEMENT_TYPE_U8;
    public static CorElementType ELEMENT_TYPE_I8;
    public static CorElementType ELEMENT_TYPE_U4;
    public static CorElementType ELEMENT_TYPE_I4;
    public static CorElementType ELEMENT_TYPE_U2;
    public static CorElementType ELEMENT_TYPE_I2;
    public static CorElementType ELEMENT_TYPE_U1;
    public static CorElementType ELEMENT_TYPE_I1;
    public static CorElementType ELEMENT_TYPE_CHAR;
    public static CorElementType ELEMENT_TYPE_BOOLEAN;
    public static CorElementType ELEMENT_TYPE_VOID;
    public static CorElementType ELEMENT_TYPE_END;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorExceptionFlag : Enum {
    public UInt32 value__;
    public static CorExceptionFlag None;
    public static CorExceptionFlag Filter;
    public static CorExceptionFlag Finally;
    public static CorExceptionFlag Fault;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.CorGCReferenceType : Enum {
    public int value__;
    public static CorGCReferenceType CorHandleStrong;
    public static CorGCReferenceType CorHandleStrongPinning;
    public static CorGCReferenceType CorHandleWeakShort;
    public static CorGCReferenceType CorHandleWeakLong;
    public static CorGCReferenceType CorHandleWeakRefCount;
    public static CorGCReferenceType CorHandleStrongRefCount;
    public static CorGCReferenceType CorHandleStrongDependent;
    public static CorGCReferenceType CorHandleStrongAsyncPinned;
    public static CorGCReferenceType CorHandleStrongSizedByref;
    public static CorGCReferenceType CorHandleWeakWinRT;
    public static CorGCReferenceType CorReferenceStack;
    public static CorGCReferenceType CorReferenceFinalizer;
    public static CorGCReferenceType CorHandleStrongOnly;
    public static CorGCReferenceType CorHandleWeakOnly;
    public static CorGCReferenceType CorHandleAll;
}
[GuidAttribute("3D6F5F61-7538-11D3-8D5B-00104B35E7EF")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebug {
    public abstract virtual void Initialize();
    public abstract virtual void Terminate();
    public abstract virtual void SetManagedHandler(ICorDebugManagedCallback pCallback);
    public abstract virtual void SetUnmanagedHandler(ICorDebugUnmanagedCallback pCallback);
    public abstract virtual void CreateProcess(string lpApplicationName, string lpCommandLine, SECURITY_ATTRIBUTES lpProcessAttributes, SECURITY_ATTRIBUTES lpThreadAttributes, int bInheritHandles, UInt32 dwCreationFlags, IntPtr lpEnvironment, string lpCurrentDirectory, STARTUPINFO lpStartupInfo, PROCESS_INFORMATION lpProcessInformation, CorDebugCreateProcessFlags debuggingFlags, ICorDebugProcess& ppProcess);
    public abstract virtual void DebugActiveProcess(UInt32 id, int win32Attach, ICorDebugProcess& ppProcess);
    public abstract virtual void EnumerateProcesses(ICorDebugProcessEnum& ppProcess);
    public abstract virtual void GetProcess(UInt32 dwProcessId, ICorDebugProcess& ppProcess);
    public abstract virtual void CanLaunchOrAttach(UInt32 dwProcessId, int win32DebuggingEnabled);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("3D6F5F63-7538-11D3-8D5B-00104B35E7EF")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugAppDomain {
    public abstract virtual void Stop(UInt32 dwTimeout);
    public abstract virtual void Continue(int fIsOutOfBand);
    public abstract virtual void IsRunning(Int32& pbRunning);
    public abstract virtual void HasQueuedCallbacks(ICorDebugThread pThread, Int32& pbQueued);
    public abstract virtual void EnumerateThreads(ICorDebugThreadEnum& ppThreads);
    public abstract virtual void SetAllThreadsDebugState(CorDebugThreadState state, ICorDebugThread pExceptThisThread);
    public abstract virtual void Detach();
    public abstract virtual void Terminate(UInt32 exitCode);
    public abstract virtual void CanCommitChanges(UInt32 cSnapshots, ICorDebugEditAndContinueSnapshot& pSnapshots, ICorDebugErrorInfoEnum& pError);
    public abstract virtual void CommitChanges(UInt32 cSnapshots, ICorDebugEditAndContinueSnapshot& pSnapshots, ICorDebugErrorInfoEnum& pError);
    public abstract virtual void GetProcess(ICorDebugProcess& ppProcess);
    public abstract virtual void EnumerateAssemblies(ICorDebugAssemblyEnum& ppAssemblies);
    public abstract virtual void GetModuleFromMetaDataInterface(object pIMetaData, ICorDebugModule& ppModule);
    public abstract virtual void EnumerateBreakpoints(ICorDebugBreakpointEnum& ppBreakpoints);
    public abstract virtual void EnumerateSteppers(ICorDebugStepperEnum& ppSteppers);
    public abstract virtual void IsAttached(Int32& pbAttached);
    public abstract virtual void GetName(UInt32 cchName, UInt32& pcchName, StringBuilder szName);
    public abstract virtual void GetObject(ICorDebugValue& ppObject);
    public abstract virtual void Attach();
    public abstract virtual void GetID(UInt32& pId);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("096E81D5-ECDA-4202-83F5-C65980A9EF75")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugAppDomain2 {
    public abstract virtual void GetArrayOrPointerType(CorElementType elementType, UInt32 nRank, ICorDebugType pTypeArg, ICorDebugType& ppType);
    public abstract virtual void GetFunctionPointerType(UInt32 nTypeArgs, ICorDebugType[] ppTypeArgs, ICorDebugType& ppType);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("8CB96A16-B588-42E2-B71C-DD849FC2ECCC")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugAppDomain3 {
    public abstract virtual void GetCachedWinRTTypesForIIDs(UInt32 cReqTypes, Guid[] iidsToResolve, ICorDebugTypeEnum& ppTypesEnum);
    public abstract virtual void GetCachedWinRTTypes(ICorDebugGuidToTypeEnum& ppGuidToTypeEnum);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("FB99CC40-83BE-4724-AB3B-768E796EBAC2")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugAppDomain4 {
    public abstract virtual int GetObjectForCCW(ulong ccwPointer, ICorDebugValue& ppManagedObject);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("63CA1B24-4359-4883-BD57-13F815F58744")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugAppDomainEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugAppDomain[] values, UInt32& pceltFetched);
}
[GuidAttribute("0405B0DF-A660-11D2-BD02-0000F80849BD")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugArrayValue {
    public abstract virtual void GetType(CorElementType& pType);
    public abstract virtual void GetSize(UInt32& pSize);
    public abstract virtual void GetAddress(UInt64& pAddress);
    public abstract virtual void CreateBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void IsValid(Int32& pbValid);
    public abstract virtual void CreateRelocBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void GetElementType(CorElementType& pType);
    public abstract virtual void GetRank(UInt32& pnRank);
    public abstract virtual void GetCount(UInt32& pnCount);
    public abstract virtual void GetDimensions(UInt32 cdim, UInt32[] dims);
    public abstract virtual void HasBaseIndicies(Int32& pbHasBaseIndicies);
    public abstract virtual void GetBaseIndicies(UInt32 cdim, UInt32[] indicies);
    public abstract virtual void GetElement(UInt32 cdim, Int32[] indices, ICorDebugValue& ppValue);
    public abstract virtual void GetElementAtPosition(UInt32 nPosition, ICorDebugValue& ppValue);
}
[GuidAttribute("DF59507C-D47A-459E-BCE2-6427EAC8FD06")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugAssembly {
    public abstract virtual void GetProcess(ICorDebugProcess& ppProcess);
    public abstract virtual void GetAppDomain(ICorDebugAppDomain& ppAppDomain);
    public abstract virtual void EnumerateModules(ICorDebugModuleEnum& ppModules);
    public abstract virtual void GetCodeBase(UInt32 cchName, UInt32& pcchName, Char[] szName);
    public abstract virtual void GetName(UInt32 cchName, UInt32& pcchName, Char[] szName);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("426D1F9E-6DD4-44C8-AEC7-26CDBAF4E398")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugAssembly2 {
    public abstract virtual void IsFullyTrusted(Int32& pbFullyTrusted);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("76361AB2-8C86-4FE9-96F2-F73D8843570A")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugAssembly3 {
    public abstract virtual ICorDebugAssembly GetContainerAssembly();
    public abstract virtual int EnumerateContainedAssemblies(ICorDebugAssemblyEnum& containedAssemblies);
}
[GuidAttribute("4A2A1EC9-85EC-4BFB-9F15-A89FDFE0FE83")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugAssemblyEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugAssembly[] values, UInt32& pceltFetched);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCAFC-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugBoxValue {
    public abstract virtual void GetType(CorElementType& pType);
    public abstract virtual void GetSize(UInt32& pSize);
    public abstract virtual void GetAddress(UInt64& pAddress);
    public abstract virtual void CreateBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void IsValid(Int32& pbValid);
    public abstract virtual void CreateRelocBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void GetObject(ICorDebugObjectValue& ppObject);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCAE8-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugBreakpoint {
    public abstract virtual void Activate(int bActive);
    public abstract virtual void IsActive(Int32& pbActive);
}
[GuidAttribute("CC7BCB03-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugBreakpointEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugBreakpoint[] breakpoints, UInt32& pceltFetched);
}
[GuidAttribute("CC7BCAEE-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugChain {
    public abstract virtual void GetThread(ICorDebugThread& ppThread);
    public abstract virtual void GetStackRange(UInt64& pStart, UInt64& pEnd);
    public abstract virtual void GetContext(ICorDebugContext& ppContext);
    public abstract virtual void GetCaller(ICorDebugChain& ppChain);
    public abstract virtual void GetCallee(ICorDebugChain& ppChain);
    public abstract virtual void GetPrevious(ICorDebugChain& ppChain);
    public abstract virtual void GetNext(ICorDebugChain& ppChain);
    public abstract virtual void IsManaged(Int32& pManaged);
    public abstract virtual void EnumerateFrames(ICorDebugFrameEnum& ppFrames);
    public abstract virtual void GetActiveFrame(ICorDebugFrame& ppFrame);
    public abstract virtual void GetRegisterSet(ICorDebugRegisterSet& ppRegisters);
    public abstract virtual void GetReason(CorDebugChainReason& pReason);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCB08-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugChainEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugChain[] chains, UInt32& pceltFetched);
}
[GuidAttribute("CC7BCAF5-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugClass {
    public abstract virtual void GetModule(ICorDebugModule& pModule);
    public abstract virtual void GetToken(UInt32& pTypeDef);
    public abstract virtual void GetStaticFieldValue(UInt32 fieldDef, ICorDebugFrame pFrame, ICorDebugValue& ppValue);
}
[GuidAttribute("B008EA8D-7AB1-43F7-BB20-FBB5A04038AE")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugClass2 {
    public abstract virtual void GetParameterizedType(CorElementType elementType, UInt32 nTypeArgs, ICorDebugType[] ppTypeArgs, ICorDebugType& ppType);
    public abstract virtual void SetJMCStatus(int bIsJustMyCode);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCAF4-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugCode {
    public abstract virtual void IsIL(Int32& pbIL);
    public abstract virtual void GetFunction(ICorDebugFunction& ppFunction);
    public abstract virtual void GetAddress(UInt64& pStart);
    public abstract virtual void GetSize(UInt32& pcBytes);
    public abstract virtual void CreateBreakpoint(UInt32 offset, ICorDebugFunctionBreakpoint& ppBreakpoint);
    public abstract virtual void GetCode(UInt32 startOffset, UInt32 endOffset, UInt32 cBufferAlloc, Byte[] buffer, UInt32& pcBufferSize);
    public abstract virtual void GetVersionNumber(UInt32& nVersion);
    public abstract virtual void GetILToNativeMapping(UInt32 cMap, UInt32& pcMap, COR_DEBUG_IL_TO_NATIVE_MAP[] map);
    public abstract virtual void GetEnCRemapSequencePoints(UInt32 cMap, UInt32& pcMap, UInt32[] offsets);
}
[GuidAttribute("5F696509-452F-4436-A3FE-4D11FE7E2347")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugCode2 {
    public abstract virtual void GetCodeChunks(UInt32 cbufSize, UInt32& pcnumChunks, _CodeChunkInfo[] chunks);
    public abstract virtual void GetCompilerFlags(UInt32& pdwFlags);
}
[GuidAttribute("D13D3E88-E1F2-4020-AA1D-3D162DCBE966")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugCode3 {
    public abstract virtual void GetReturnValueLiveOffset(UInt32 ILoffset, UInt32 bufferSize, UInt32& fetched, UInt32[] pNativeOffset);
}
[GuidAttribute("55E96461-9645-45E4-A2FF-0367877ABCDE")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugCodeEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugCode[] values, UInt32& pceltFetched);
}
[GuidAttribute("5F69C5E5-3E12-42DF-B371-F9D761D6EE24")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugComObjectValue {
    public abstract virtual void GetCachedInterfaceTypes(bool bIInspectableOnly, ICorDebugTypeEnum& ppInterfacesEnum);
    public abstract virtual void GetCachedInterfacePointers(bool bIInspectableOnly, int celt, Int32& pcEltFetched, UInt64[] ptrs);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCB00-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugContext {
    public abstract virtual void GetType(CorElementType& pType);
    public abstract virtual void GetSize(UInt32& pSize);
    public abstract virtual void GetAddress(UInt64& pAddress);
    public abstract virtual void CreateBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void GetClass(ICorDebugClass& ppClass);
    public abstract virtual void GetFieldValue(ICorDebugClass pClass, UInt32 fieldDef, ICorDebugValue& ppValue);
    public abstract virtual void GetVirtualMethod(UInt32 memberRef, ICorDebugFunction& ppFunction);
    public abstract virtual void GetContext(ICorDebugContext& ppContext);
    public abstract virtual void IsValueClass(Int32& pbIsValueClass);
    public abstract virtual void GetManagedCopy(Object& ppObject);
    public abstract virtual void SetFromManagedCopy(object pObject);
}
[GuidAttribute("3D6F5F62-7538-11D3-8D5B-00104B35E7EF")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugController {
    public abstract virtual void Stop(UInt32 dwTimeout);
    public abstract virtual void Continue(int fIsOutOfBand);
    public abstract virtual void IsRunning(Int32& pbRunning);
    public abstract virtual void HasQueuedCallbacks(ICorDebugThread pThread, Int32& pbQueued);
    public abstract virtual void EnumerateThreads(ICorDebugThreadEnum& ppThreads);
    public abstract virtual void SetAllThreadsDebugState(CorDebugThreadState state, ICorDebugThread pExceptThisThread);
    public abstract virtual void Detach();
    public abstract virtual void Terminate(UInt32 exitCode);
    public abstract virtual void CanCommitChanges(UInt32 cSnapshots, ICorDebugEditAndContinueSnapshot& pSnapshots, ICorDebugErrorInfoEnum& pError);
    public abstract virtual void CommitChanges(UInt32 cSnapshots, ICorDebugEditAndContinueSnapshot& pSnapshots, ICorDebugErrorInfoEnum& pError);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("2eb364da-605b-4e8d-b333-3394c4828d41")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugDataTarget2 {
    public abstract virtual int GetImageFromPointer(ulong address, UInt64& imageBase, UInt32& size);
    public abstract virtual int GetImageLocation(ulong baseAddress, UInt32 count, UInt32& needed, StringBuilder name);
    public abstract virtual int GetSymbolProviderForImage(ulong imageBaseAddress, ICorDebugSymbolProvider& ppSymProvider);
    public abstract virtual void EnumerateThreadIDs(int cThreadIds, Int32& pcThreadIds, Int32[] pThreadIds);
    public abstract virtual int CreateVirtualUnwinder(int nativeThreadID, int contextFlags, int cbContext, IntPtr initialContext, ICorDebugVirtualUnwinder& ppUnwinder);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("D05E60C3-848C-4E7D-894E-623320FF6AFA")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugDataTarget3 {
    public abstract virtual int GetLoadedModules(UInt32 cRequestedModules, UInt32& pcFetchedModules, ICorDebugLoadedModule[] pLoadedModules);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("41BD395D-DE99-48F1-BF7A-CC0F44A6D281")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugDebugEvent {
    public abstract virtual CorDebugDebugEventKind GetEventKind();
    public abstract virtual ICorDebugThread GetThread();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("e836c57d-d489-4709-b3d9-bdc8e24321c3")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugDiagnosticStreamRecord {
    public abstract virtual void GetRecordRange(UInt64& pStartAddress, UInt32& pEntrySize);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("7429123b-600f-4cec-adb0-6af0fd4adef1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugDynamicTypeDebugData {
    public abstract virtual void GetRecordRange(UInt64& pStartAddress, UInt32& pEntrySize);
    public abstract virtual ulong GetVTableAddress();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("bbdb55bd-aa9d-492c-b0f1-f1917855573d")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugDynamicTypeDebugDataEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugDynamicTypeDebugData[] types, UInt32& pceltFetched);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("6DC3FA01-D7CB-11D2-8A95-0080C792E5D8")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugEditAndContinueSnapshot {
    public abstract virtual void CopyMetaData(IStream pIStream, Guid& pMvid);
    public abstract virtual void GetMvid(Guid& pMvid);
    public abstract virtual void GetRoDataRVA(UInt32& pRoDataRVA);
    public abstract virtual void GetRwDataRVA(UInt32& pRwDataRVA);
    public abstract virtual void SetPEBytes(IStream pIStream);
    public abstract virtual void SetILMap(UInt32 mdFunction, UInt32 cMapSize, COR_IL_MAP& map);
    public abstract virtual void SetPESymbolBytes(IStream pIStream);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCB01-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
}
[GuidAttribute("976A6278-134A-4a81-81A3-8F277943F4C3")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugEnumBlockingObject {
    public abstract virtual void Skip(UInt32 countElements);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& enumerator);
    public abstract virtual void GetCount(UInt32& countElements);
    public abstract virtual int Next(UInt32 countElements, CorDebugBlockingObject[] blockingObjects, UInt32& countElementsFetched);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("F0E18809-72B5-11D2-976F-00A0C9B4D50C")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugErrorInfoEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, IntPtr errors, UInt32& pceltFetched);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCAF6-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugEval {
    public abstract virtual void CallFunction(ICorDebugFunction pFunction, UInt32 nArgs, ICorDebugValue[] ppArgs);
    public abstract virtual void NewObject(ICorDebugFunction pConstructor, UInt32 nArgs, ICorDebugValue[] ppArgs);
    public abstract virtual void NewObjectNoConstructor(ICorDebugClass pClass);
    public abstract virtual void NewString(string string);
    public abstract virtual void NewArray(CorElementType elementType, ICorDebugClass pElementClass, UInt32 rank, UInt32& dims, UInt32& lowBounds);
    public abstract virtual void IsActive(Int32& pbActive);
    public abstract virtual void Abort();
    public abstract virtual void GetResult(ICorDebugValue& ppResult);
    public abstract virtual void GetThread(ICorDebugThread& ppThread);
    public abstract virtual void CreateValue(CorElementType elementType, ICorDebugClass pElementClass, ICorDebugValue& ppValue);
}
[GuidAttribute("FB0D9CE7-BE66-4683-9D32-A42A04E2FD91")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugEval2 {
    public abstract virtual void CallParameterizedFunction(ICorDebugFunction pFunction, UInt32 nTypeArgs, ICorDebugType[] ppTypeArgs, UInt32 nArgs, ICorDebugValue[] ppArgs);
    public abstract virtual void CreateValueForType(ICorDebugType pType, ICorDebugValue& ppValue);
    public abstract virtual void NewParameterizedObject(ICorDebugFunction pConstructor, UInt32 nTypeArgs, ICorDebugType[] ppTypeArgs, UInt32 nArgs, ICorDebugValue[] ppArgs);
    public abstract virtual void NewParameterizedObjectNoConstructor(ICorDebugClass pClass, UInt32 nTypeArgs, ICorDebugType[] ppTypeArgs);
    public abstract virtual void NewParameterizedArray(ICorDebugType pElementType, UInt32 rank, UInt32& dims, UInt32& lowBounds);
    public abstract virtual void NewStringWithLength(string string, UInt32 uiLength);
    public abstract virtual void RudeAbort();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("AF79EC94-4752-419C-A626-5FB1CC1A5AB7")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugExceptionDebugEvent {
    public abstract virtual CorDebugDebugEventKind GetEventKind();
    public abstract virtual ICorDebugThread GetThread();
    public abstract virtual long GetStackPointer();
    public abstract virtual long GetNativeIP();
    public abstract virtual CorDebugExceptionFlags GetFlags();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("ED775530-4DC4-41F7-86D0-9E2DEF7DFC66")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugExceptionObjectCallStackEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, CorDebugExceptionObjectStackFrame[] values, UInt32& pceltFetched);
}
[GuidAttribute("AE4CA65D-59DD-42A2-83A5-57E8A08D8719")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugExceptionObjectValue {
    public abstract virtual void EnumerateExceptionCallStack(ICorDebugExceptionObjectCallStackEnum& ppCallStackEnum);
}
[GuidAttribute("CC7BCAEF-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugFrame {
    public abstract virtual void GetChain(ICorDebugChain& ppChain);
    public abstract virtual void GetCode(ICorDebugCode& ppCode);
    public abstract virtual void GetFunction(ICorDebugFunction& ppFunction);
    public abstract virtual void GetFunctionToken(UInt32& pToken);
    public abstract virtual void GetStackRange(UInt64& pStart, UInt64& pEnd);
    public abstract virtual void GetCaller(ICorDebugFrame& ppFrame);
    public abstract virtual void GetCallee(ICorDebugFrame& ppFrame);
    public abstract virtual void CreateStepper(ICorDebugStepper& ppStepper);
}
[GuidAttribute("CC7BCB07-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugFrameEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugFrame[] frames, UInt32& pceltFetched);
}
[GuidAttribute("CC7BCAF3-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugFunction {
    public abstract virtual void GetModule(ICorDebugModule& ppModule);
    public abstract virtual void GetClass(ICorDebugClass& ppClass);
    public abstract virtual void GetToken(UInt32& pMethodDef);
    public abstract virtual void GetILCode(ICorDebugCode& ppCode);
    public abstract virtual void GetNativeCode(ICorDebugCode& ppCode);
    public abstract virtual void CreateBreakpoint(ICorDebugFunctionBreakpoint& ppBreakpoint);
    public abstract virtual void GetLocalVarSigToken(UInt32& pmdSig);
    public abstract virtual void GetCurrentVersionNumber(UInt32& pnCurrentVersion);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("EF0C490B-94C3-4E4D-B629-DDC134C532D8")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugFunction2 {
    public abstract virtual void SetJMCStatus(int bIsJustMyCode);
    public abstract virtual void GetJMCStatus(Int32& pbIsJustMyCode);
    public abstract virtual void EnumerateNativeCode(ICorDebugCodeEnum& ppCodeEnum);
    public abstract virtual void GetVersionNumber(UInt32& pnVersion);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("09B70F28-E465-482D-99E0-81A165EB0532")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugFunction3 {
    public abstract virtual void GetActiveRejitRequestILCode(ICorDebugILCode& ppRejitedILCode);
}
[GuidAttribute("CC7BCAE9-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugFunctionBreakpoint {
    public abstract virtual void Activate(int bActive);
    public abstract virtual void IsActive(Int32& pbActive);
    public abstract virtual void GetFunction(ICorDebugFunction& ppFunction);
    public abstract virtual void GetOffset(UInt32& pnOffset);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("7F3C24D3-7E1D-4245-AC3A-F72F8859C80C")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugGCReferenceEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, COR_GC_REFERENCE[] segs, UInt32& pceltFetched);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCAF8-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugGenericValue {
    public abstract virtual void GetType(CorElementType& pType);
    public abstract virtual void GetSize(UInt32& pSize);
    public abstract virtual void GetAddress(UInt64& pAddress);
    public abstract virtual void CreateBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void GetValue(IntPtr pTo);
    public abstract virtual void SetValue(IntPtr pFrom);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("6164D242-1015-4BD6-8CBE-D0DBD4B8275A")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugGuidToTypeEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, CorDebugGuidToTypeMapping[] values, UInt32& pceltFetched);
}
[GuidAttribute("029596E8-276B-46A1-9821-732E96BBB00B")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugHandleValue {
    public abstract virtual void GetType(CorElementType& pType);
    public abstract virtual void GetSize(UInt32& pSize);
    public abstract virtual void GetAddress(UInt64& pAddress);
    public abstract virtual void CreateBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void IsNull(Int32& pbNull);
    public abstract virtual void GetValue(UInt64& pValue);
    public abstract virtual void SetValue(ulong value);
    public abstract virtual void Dereference(ICorDebugValue& ppValue);
    public abstract virtual void DereferenceStrong(ICorDebugValue& ppValue);
    public abstract virtual void GetHandleType(CorDebugHandleType& pType);
    public abstract virtual void Dispose();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("76D7DAB8-D044-11DF-9A15-7E29DFD72085")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugHeapEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, COR_HEAPOBJECT[] objs, UInt32& pceltFetched);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("A2FA0F8E-D045-11DF-AC8E-CE2ADFD72085")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugHeapSegmentEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, COR_SEGMENT[] segs, UInt32& pceltFetched);
}
[GuidAttribute("CC7BCAFA-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugHeapValue {
    public abstract virtual void GetType(CorElementType& pType);
    public abstract virtual void GetSize(UInt32& pSize);
    public abstract virtual void GetAddress(UInt64& pAddress);
    public abstract virtual void CreateBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void IsValid(Int32& pbValid);
    public abstract virtual void CreateRelocBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("E3AC4D6C-9CB7-43E6-96CC-B21540E5083C")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugHeapValue2 {
    public abstract virtual void CreateHandle(CorDebugHandleType type, ICorDebugHandleValue& ppHandle);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("A69ACAD8-2374-46e9-9FF8-B1F14120D296")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugHeapValue3 {
    public abstract virtual void GetThreadOwningMonitorLock(ICorDebugThread& thread, Int32& acquisitionCount);
    public abstract virtual void GetMonitorEventWaitList(ICorDebugThreadEnum& threadEnum);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("598D46C2-C877-42A7-89D2-3D0C7F1C1264")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugILCode {
    public abstract virtual void GetEHClauses(UInt32 cClauses, UInt32& pcClauses, CorDebugEHClause[] clauses);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("46586093-D3F5-4DB6-ACDB-955BCE228C15")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugILCode2 {
    public abstract virtual void GetLocalVarSigToken(UInt32& pmdSig);
    public abstract virtual void GetInstrumentedILMap(UInt32 cMap, UInt32& pcMap, COR_IL_MAP[] map);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("03E26311-4F76-11D3-88C6-006097945418")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugILFrame {
    public abstract virtual void GetChain(ICorDebugChain& ppChain);
    public abstract virtual void GetCode(ICorDebugCode& ppCode);
    public abstract virtual void GetFunction(ICorDebugFunction& ppFunction);
    public abstract virtual void GetFunctionToken(UInt32& pToken);
    public abstract virtual void GetStackRange(UInt64& pStart, UInt64& pEnd);
    public abstract virtual void GetCaller(ICorDebugFrame& ppFrame);
    public abstract virtual void GetCallee(ICorDebugFrame& ppFrame);
    public abstract virtual void CreateStepper(ICorDebugStepper& ppStepper);
    public abstract virtual void GetIP(UInt32& pnOffset, CorDebugMappingResult& pMappingResult);
    public abstract virtual void SetIP(UInt32 nOffset);
    public abstract virtual void EnumerateLocalVariables(ICorDebugValueEnum& ppValueEnum);
    public abstract virtual void GetLocalVariable(UInt32 dwIndex, ICorDebugValue& ppValue);
    public abstract virtual void EnumerateArguments(ICorDebugValueEnum& ppValueEnum);
    public abstract virtual void GetArgument(UInt32 dwIndex, ICorDebugValue& ppValue);
    public abstract virtual void GetStackDepth(UInt32& pDepth);
    public abstract virtual void GetStackValue(UInt32 dwIndex, ICorDebugValue& ppValue);
    public abstract virtual int CanSetIP(UInt32 nOffset);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("5D88A994-6C30-479B-890F-BCEF88B129A5")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugILFrame2 {
    public abstract virtual void RemapFunction(UInt32 newILOffset);
    public abstract virtual void EnumerateTypeParameters(ICorDebugTypeEnum& ppTyParEnum);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("9A9E2ED6-04DF-4FE0-BB50-CAB64126AD24")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugILFrame3 {
    public abstract virtual void GetReturnValueForILOffset(UInt32 ILoffset, ICorDebugValue& ppReturnValue);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("AD914A30-C6D1-4AC5-9C5E-577F3BAA8A45")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugILFrame4 {
    public abstract virtual void EnumerateLocalVariablesEx(ILCodeKind flags, ICorDebugValueEnum& ppValueEnum);
    public abstract virtual void GetLocalVariableEx(ILCodeKind flags, int dwIndex, ICorDebugValue& ppValue);
    public abstract virtual void GetCodeEx(ILCodeKind flags, ICorDebugCode& ppCode);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("B92CC7F7-9D2D-45C4-BC2B-621FCC9DFBF4")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugInternalFrame {
    public abstract virtual void GetChain(ICorDebugChain& ppChain);
    public abstract virtual void GetCode(ICorDebugCode& ppCode);
    public abstract virtual void GetFunction(ICorDebugFunction& ppFunction);
    public abstract virtual void GetFunctionToken(UInt32& pToken);
    public abstract virtual void GetStackRange(UInt64& pStart, UInt64& pEnd);
    public abstract virtual void GetCaller(ICorDebugFrame& ppFrame);
    public abstract virtual void GetCallee(ICorDebugFrame& ppFrame);
    public abstract virtual void CreateStepper(ICorDebugStepper& ppStepper);
    public abstract virtual void GetFrameType(CorDebugInternalFrameType& pType);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("C0815BDC-CFAB-447e-A779-C116B454EB5B")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugInternalFrame2 {
    public abstract virtual void GetAddress(UInt64& pAddress);
    public abstract virtual void IsCloserToLeaf(ICorDebugFrame pFrameToCompare, Int32& pIsCloser);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("817F343A-6630-4578-96C5-D11BC0EC5EE2")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugLoadedModule {
    public abstract virtual void GetBaseAddress(UInt64& pAddress);
    public abstract virtual void GetName(UInt32 cchName, UInt32& pcchName, StringBuilder szName);
    public abstract virtual void GetSize(UInt32& pcbSize);
}
[GuidAttribute("3D6F5F60-7538-11D3-8D5B-00104B35E7EF")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugManagedCallback {
    public abstract virtual void Breakpoint(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, ICorDebugBreakpoint pBreakpoint);
    public abstract virtual void StepComplete(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, ICorDebugStepper pStepper, CorDebugStepReason reason);
    public abstract virtual void Break(ICorDebugAppDomain pAppDomain, ICorDebugThread thread);
    public abstract virtual void Exception(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, int unhandled);
    public abstract virtual void EvalComplete(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, ICorDebugEval pEval);
    public abstract virtual void EvalException(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, ICorDebugEval pEval);
    public abstract virtual void CreateProcess(ICorDebugProcess pProcess);
    public abstract virtual void ExitProcess(ICorDebugProcess pProcess);
    public abstract virtual void CreateThread(ICorDebugAppDomain pAppDomain, ICorDebugThread thread);
    public abstract virtual void ExitThread(ICorDebugAppDomain pAppDomain, ICorDebugThread thread);
    public abstract virtual void LoadModule(ICorDebugAppDomain pAppDomain, ICorDebugModule pModule);
    public abstract virtual void UnloadModule(ICorDebugAppDomain pAppDomain, ICorDebugModule pModule);
    public abstract virtual void LoadClass(ICorDebugAppDomain pAppDomain, ICorDebugClass c);
    public abstract virtual void UnloadClass(ICorDebugAppDomain pAppDomain, ICorDebugClass c);
    public abstract virtual void DebuggerError(ICorDebugProcess pProcess, int errorHR, UInt32 errorCode);
    public abstract virtual void LogMessage(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, int lLevel, string pLogSwitchName, string pMessage);
    public abstract virtual void LogSwitch(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, int lLevel, UInt32 ulReason, string pLogSwitchName, string pParentName);
    public abstract virtual void CreateAppDomain(ICorDebugProcess pProcess, ICorDebugAppDomain pAppDomain);
    public abstract virtual void ExitAppDomain(ICorDebugProcess pProcess, ICorDebugAppDomain pAppDomain);
    public abstract virtual void LoadAssembly(ICorDebugAppDomain pAppDomain, ICorDebugAssembly pAssembly);
    public abstract virtual void UnloadAssembly(ICorDebugAppDomain pAppDomain, ICorDebugAssembly pAssembly);
    public abstract virtual void ControlCTrap(ICorDebugProcess pProcess);
    public abstract virtual void NameChange(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread);
    public abstract virtual void UpdateModuleSymbols(ICorDebugAppDomain pAppDomain, ICorDebugModule pModule, IStream pSymbolStream);
    public abstract virtual void EditAndContinueRemap(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, ICorDebugFunction pFunction, int fAccurate);
    public abstract virtual void BreakpointSetError(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, ICorDebugBreakpoint pBreakpoint, UInt32 dwError);
}
[GuidAttribute("250E5EEA-DB5C-4C76-B6F3-8C46F12E3203")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugManagedCallback2 {
    public abstract virtual void FunctionRemapOpportunity(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, ICorDebugFunction pOldFunction, ICorDebugFunction pNewFunction, UInt32 oldILOffset);
    public abstract virtual void CreateConnection(ICorDebugProcess pProcess, UInt32 dwConnectionId, UInt16& pConnName);
    public abstract virtual void ChangeConnection(ICorDebugProcess pProcess, UInt32 dwConnectionId);
    public abstract virtual void DestroyConnection(ICorDebugProcess pProcess, UInt32 dwConnectionId);
    public abstract virtual void Exception(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, ICorDebugFrame pFrame, UInt32 nOffset, CorDebugExceptionCallbackType dwEventType, UInt32 dwFlags);
    public abstract virtual void ExceptionUnwind(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, CorDebugExceptionUnwindCallbackType dwEventType, UInt32 dwFlags);
    public abstract virtual void FunctionRemapComplete(ICorDebugAppDomain pAppDomain, ICorDebugThread pThread, ICorDebugFunction pFunction);
    public abstract virtual void MDANotification(ICorDebugController pController, ICorDebugThread pThread, ICorDebugMDA pMDA);
}
[GuidAttribute("264EA0FC-2591-49AA-868E-835E6515323F")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugManagedCallback3 {
    public abstract virtual void CustomNotification(ICorDebugThread pThread, ICorDebugAppDomain pAppDomain);
}
[GuidAttribute("CC726F2F-1DB7-459B-B0EC-05F01D841B42")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugMDA {
    public abstract virtual void GetName(UInt32 cchName, UInt32& pcchName, Char[] szName);
    public abstract virtual void GetDescription(UInt32 cchName, UInt32& pcchName, Char[] szName);
    public abstract virtual void GetXML(UInt32 cchName, UInt32& pcchName, Char[] szName);
    public abstract virtual void GetFlags(CorDebugMDAFlags& pFlags);
    public abstract virtual void GetOSThreadId(UInt32& pOsTid);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("7cef8ba9-2ef7-42bf-973f-4171474f87d9")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugMetaDataLocator {
    public abstract virtual void GetMetaData(string imagePath, UInt32 dwImageTimeStamp, UInt32 dwImageSize, UInt32 cchPathBuffer, UInt32& pcchPathBuffer, Char[] wszPathBuffer);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("DBA2D8C1-E5C5-4069-8C13-10A7C6ABF43D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugModule {
    public abstract virtual void GetProcess(ICorDebugProcess& ppProcess);
    public abstract virtual void GetBaseAddress(UInt64& pAddress);
    public abstract virtual void GetAssembly(ICorDebugAssembly& ppAssembly);
    public abstract virtual void GetName(UInt32 cchName, UInt32& pcchName, Char[] szName);
    public abstract virtual void EnableJITDebugging(int bTrackJITInfo, int bAllowJitOpts);
    public abstract virtual void EnableClassLoadCallbacks(int bClassLoadCallbacks);
    public abstract virtual void GetFunctionFromToken(UInt32 methodDef, ICorDebugFunction& ppFunction);
    public abstract virtual void GetFunctionFromRVA(ulong rva, ICorDebugFunction& ppFunction);
    public abstract virtual void GetClassFromToken(UInt32 typeDef, ICorDebugClass& ppClass);
    public abstract virtual void CreateBreakpoint(ICorDebugModuleBreakpoint& ppBreakpoint);
    public abstract virtual void GetEditAndContinueSnapshot(ICorDebugEditAndContinueSnapshot& ppEditAndContinueSnapshot);
    public abstract virtual int GetMetaDataInterface(Guid& riid, IMetadataImport& ppObj);
    public abstract virtual void GetToken(UInt32& pToken);
    public abstract virtual void IsDynamic(Int32& pDynamic);
    public abstract virtual void GetGlobalVariableValue(UInt32 fieldDef, ICorDebugValue& ppValue);
    public abstract virtual void GetSize(UInt32& pcBytes);
    public abstract virtual void IsInMemory(Int32& pInMemory);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("7FCC5FB5-49C0-41DE-9938-3B88B5B9ADD7")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugModule2 {
    public abstract virtual void SetJMCStatus(int bIsJustMyCode, UInt32 cTokens, UInt32& pTokens);
    public abstract virtual void ApplyChanges(UInt32 cbMetadata, Byte[] pbMetadata, UInt32 cbIL, Byte[] pbIL);
    public abstract virtual int SetJITCompilerFlags(UInt32 dwFlags);
    public abstract virtual void GetJITCompilerFlags(UInt32& pdwFlags);
    public abstract virtual void ResolveAssembly(UInt32 tkAssemblyRef, ICorDebugAssembly& ppAssembly);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("86F012BF-FF15-4372-BD30-B6F11CAAE1DD")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugModule3 {
    public abstract virtual int CreateReaderForInMemorySymbols(Guid& riid, Object& ppObj);
}
[GuidAttribute("CC7BCAEA-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugModuleBreakpoint {
    public abstract virtual void Activate(int bActive);
    public abstract virtual void IsActive(Int32& pbActive);
    public abstract virtual void GetModule(ICorDebugModule& ppModule);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("51A15E8D-9FFF-4864-9B87-F4FBDEA747A2")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugModuleDebugEvent {
    public abstract virtual CorDebugDebugEventKind GetEventKind();
    public abstract virtual ICorDebugThread GetThread();
    public abstract virtual ICorDebugModule GetModule();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCB09-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugModuleEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugModule[] modules, UInt32& pceltFetched);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("A1B8A756-3CB6-4CCB-979F-3DF999673A59")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugMutableDataTarget {
    public abstract virtual CorDebugPlatform GetPlatform();
    public abstract virtual UInt32 ReadVirtual(ulong address, IntPtr buffer, UInt32 bytesRequested);
    public abstract virtual void GetThreadContext(UInt32 threadId, UInt32 contextFlags, UInt32 contextSize, IntPtr context);
    public abstract virtual void WriteVirtual(ulong address, IntPtr buffer, UInt32 bytesRequested);
    public abstract virtual void SetThreadContext(UInt32 threadId, UInt32 contextSize, IntPtr context);
    public abstract virtual void ContinueStatusChanged(UInt32 dwThreadId, UInt32 dwContinueStatus);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("9c6c02bd-ac54-4cac-8dce-7b2fa9827744")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugNativeFormatTypeDebugData {
    public abstract virtual void GetRecordRange(UInt64& pStartAddress, UInt32& pEntrySize);
    public abstract virtual ulong GetVTableAddress();
    public abstract virtual int GetNativeTokenAndModule(UInt32& nativeToken, UInt64& moduleHandle);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("03E26314-4F76-11D3-88C6-006097945418")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugNativeFrame {
    public abstract virtual void GetChain(ICorDebugChain& ppChain);
    public abstract virtual void GetCode(ICorDebugCode& ppCode);
    public abstract virtual void GetFunction(ICorDebugFunction& ppFunction);
    public abstract virtual void GetFunctionToken(UInt32& pToken);
    public abstract virtual void GetStackRange(UInt64& pStart, UInt64& pEnd);
    public abstract virtual void GetCaller(ICorDebugFrame& ppFrame);
    public abstract virtual void GetCallee(ICorDebugFrame& ppFrame);
    public abstract virtual void CreateStepper(ICorDebugStepper& ppStepper);
    public abstract virtual void GetIP(UInt32& pnOffset);
    public abstract virtual void SetIP(UInt32 nOffset);
    public abstract virtual void GetRegisterSet(ICorDebugRegisterSet& ppRegisters);
    public abstract virtual void GetLocalRegisterValue(CorDebugRegister reg, UInt32 cbSigBlob, UInt32 pvSigBlob, ICorDebugValue& ppValue);
    public abstract virtual void GetLocalDoubleRegisterValue(CorDebugRegister highWordReg, CorDebugRegister lowWordReg, UInt32 cbSigBlob, UInt32 pvSigBlob, ICorDebugValue& ppValue);
    public abstract virtual void GetLocalMemoryValue(ulong address, UInt32 cbSigBlob, UInt32 pvSigBlob, ICorDebugValue& ppValue);
    public abstract virtual void GetLocalRegisterMemoryValue(CorDebugRegister highWordReg, ulong lowWordAddress, UInt32 cbSigBlob, UInt32 pvSigBlob, ICorDebugValue& ppValue);
    public abstract virtual void GetLocalMemoryRegisterValue(ulong highWordAddress, CorDebugRegister lowWordRegister, UInt32 cbSigBlob, UInt32 pvSigBlob, ICorDebugValue& ppValue);
    public abstract virtual int CanSetIP(UInt32 nOffset);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("35389FF1-3684-4c55-A2EE-210F26C60E5E")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugNativeFrame2 {
    public abstract virtual void IsChild(Int32& pChild);
    public abstract virtual void IsMatchingParentFrame(ICorDebugNativeFrame2 pFrame, Int32& pParent);
    public abstract virtual void GetCalleeStackParameterSize(UInt32& pSize);
}
[GuidAttribute("CC7BCB02-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugObjectEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, UInt64[] objects, UInt32& pceltFetched);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("18AD3D6E-B7D2-11D2-BD04-0000F80849BD")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugObjectValue {
    public abstract virtual void GetType(CorElementType& pType);
    public abstract virtual void GetSize(UInt32& pSize);
    public abstract virtual void GetAddress(UInt64& pAddress);
    public abstract virtual void CreateBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void GetClass(ICorDebugClass& ppClass);
    public abstract virtual void GetFieldValue(ICorDebugClass pClass, UInt32 fieldDef, ICorDebugValue& ppValue);
    public abstract virtual void GetVirtualMethod(UInt32 memberRef, ICorDebugFunction& ppFunction);
    public abstract virtual void GetContext(ICorDebugContext& ppContext);
    public abstract virtual void IsValueClass(Int32& pbIsValueClass);
    public abstract virtual void GetManagedCopy(Object& ppObject);
    public abstract virtual void SetFromManagedCopy(object pObject);
}
[GuidAttribute("49E4A320-4A9B-4ECA-B105-229FB7D5009F")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugObjectValue2 {
    public abstract virtual void GetVirtualMethodAndType(UInt32 memberRef, ICorDebugFunction& ppFunction, ICorDebugType& ppType);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("3D6F5F64-7538-11D3-8D5B-00104B35E7EF")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugProcess {
    public abstract virtual void Stop(UInt32 dwTimeout);
    public abstract virtual void Continue(int fIsOutOfBand);
    public abstract virtual void IsRunning(Int32& pbRunning);
    public abstract virtual void HasQueuedCallbacks(ICorDebugThread pThread, Int32& pbQueued);
    public abstract virtual void EnumerateThreads(ICorDebugThreadEnum& ppThreads);
    public abstract virtual void SetAllThreadsDebugState(CorDebugThreadState state, ICorDebugThread pExceptThisThread);
    public abstract virtual void Detach();
    public abstract virtual void Terminate(UInt32 exitCode);
    public abstract virtual void CanCommitChanges(UInt32 cSnapshots, ICorDebugEditAndContinueSnapshot& pSnapshots, ICorDebugErrorInfoEnum& pError);
    public abstract virtual void CommitChanges(UInt32 cSnapshots, ICorDebugEditAndContinueSnapshot& pSnapshots, ICorDebugErrorInfoEnum& pError);
    public abstract virtual void GetID(UInt32& pdwProcessId);
    public abstract virtual void GetHandle(IntPtr& phProcessHandle);
    public abstract virtual void GetThread(UInt32 dwThreadId, ICorDebugThread& ppThread);
    public abstract virtual void EnumerateObjects(ICorDebugObjectEnum& ppObjects);
    public abstract virtual void IsTransitionStub(ulong address, Int32& pbTransitionStub);
    public abstract virtual void IsOSSuspended(UInt32 threadID, Int32& pbSuspended);
    public abstract virtual void GetThreadContext(UInt32 threadID, UInt32 contextSize, IntPtr context);
    public abstract virtual void SetThreadContext(UInt32 threadID, UInt32 contextSize, IntPtr context);
    public abstract virtual int ReadMemory(ulong address, UInt32 size, Byte[] buffer, IntPtr& read);
    public abstract virtual int WriteMemory(ulong address, UInt32 size, Byte[] buffer, IntPtr& written);
    public abstract virtual void ClearCurrentException(UInt32 threadID);
    public abstract virtual void EnableLogMessages(int fOnOff);
    public abstract virtual void ModifyLogSwitch(string pLogSwitchName, int lLevel);
    public abstract virtual void EnumerateAppDomains(ICorDebugAppDomainEnum& ppAppDomains);
    public abstract virtual void GetObject(ICorDebugValue& ppObject);
    public abstract virtual void ThreadForFiberCookie(UInt32 fiberCookie, ICorDebugThread& ppThread);
    public abstract virtual void GetHelperThreadID(UInt32& pThreadID);
}
[GuidAttribute("AD1B3588-0EF0-4744-A496-AA09A9F80371")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugProcess2 {
    public abstract virtual void GetThreadForTaskID(ulong taskid, ICorDebugThread2& ppThread);
    public abstract virtual void GetVersion(_COR_VERSION& version);
    public abstract virtual void SetUnmanagedBreakpoint(ulong address, UInt32 bufsize, Byte[] buffer, UInt32& bufLen);
    public abstract virtual void ClearUnmanagedBreakpoint(ulong address);
    public abstract virtual void SetDesiredNGENCompilerFlags(UInt32 pdwFlags);
    public abstract virtual void GetDesiredNGENCompilerFlags(UInt32& pdwFlags);
    public abstract virtual void GetReferenceValueFromGCHandle(IntPtr handle, ICorDebugReferenceValue& pOutValue);
}
[GuidAttribute("2EE06488-C0D4-42B1-B26D-F3795EF606FB")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugProcess3 {
    public abstract virtual void SetEnableCustomNotification(ICorDebugClass pClass, int fOnOff);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("21e9d9c0-fcb8-11df-8cff-0800200c9a66")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugProcess5 {
    public abstract virtual void GetGCHeapInformation(COR_HEAPINFO& pHeapInfo);
    public abstract virtual void EnumerateHeap(ICorDebugHeapEnum& ppObjects);
    public abstract virtual void EnumerateHeapRegions(ICorDebugHeapSegmentEnum& ppRegions);
    public abstract virtual void GetObject(ulong addr, ICorDebugObjectValue& ppObject);
    public abstract virtual void EnumerateGCReferences(int bEnumerateWeakReferences, ICorDebugGCReferenceEnum& ppEnum);
    public abstract virtual void EnumerateHandles(UInt32 types, ICorDebugGCReferenceEnum& ppEnum);
    public abstract virtual void GetTypeID(ulong objAddr, COR_TYPEID& pId);
    public abstract virtual void GetTypeForTypeID(COR_TYPEID id, ICorDebugType& type);
    public abstract virtual void GetArrayLayout(COR_TYPEID id, COR_ARRAY_LAYOUT& layout);
    public abstract virtual void GetTypeLayout(COR_TYPEID id, COR_TYPE_LAYOUT& layout);
    public abstract virtual void GetTypeFields(COR_TYPEID id, int celt, COR_FIELD[] fields, Int32& pceltNeeded);
    public abstract virtual void EnableNGENPolicy(CorDebugNGENPolicyFlags ePolicy);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("11588775-7205-4CEB-A41A-93753C3153E9")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugProcess6 {
    public abstract virtual ICorDebugDebugEvent DecodeEvent(IntPtr pRecord, int countBytes, CorDebugRecordFormat format, CorDebugFilterFlagsWindows dwFlags, int dwThreadId);
    public abstract virtual void ProcessStateChanged(CorDebugStateChange eChange);
    public abstract virtual void GetCode(long codeAddress, ICorDebugCode& ppCode);
    public abstract virtual void EnableVirtualModuleSplitting(bool enableSplitting);
    public abstract virtual int MarkDebuggerAttached(bool isAttached);
    public abstract virtual int GetExportStepInfo(string exportName, CorDebugCodeInvokeKind& invokeKind, CorDebugCodeInvokePurpose& invokePurpose);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("9B2C54E4-119F-4D6F-B402-527603266D69")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugProcess7 {
    public abstract virtual void SetWriteableMetadataUpdateMode(WriteableMetadataUpdateMode flags);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("2E6F28C1-85EB-4141-80AD-0A90944B9639")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugProcess8 {
    public abstract virtual void EnableExceptionCallbacksOutsideOfMyCode(bool enableExceptionsOutsideOfJMC);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("596D8429-140C-4D0F-96C3-B510C22082EE")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugProcess9 {
    public abstract virtual int GetStepInfoForCodeAddress(long codeAddress, UInt32& pcbCodeSize, CorDebugCodeInvokeKind& pInvokeKind, CorDebugCodeInvokePurpose& pInvokePurpose);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCB05-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugProcessEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugProcess[] processes, UInt32& pceltFetched);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("1dc5f55a-7c22-49b7-93d9-75a2a1b59e7c")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugProcessNetNativeInternal {
    public abstract virtual ICorDebugDynamicTypeDebugDataEnum EnumerateDynamicTypeDebugData();
    public abstract virtual ICorDebugSharedMethodDebugDataEnum EnumerateSharedMethodDebugData();
    public abstract virtual ICorDebugType CreateTypeFromVTable(ulong vtable);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCAF9-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugReferenceValue {
    public abstract virtual void GetType(CorElementType& pType);
    public abstract virtual void GetSize(UInt32& pSize);
    public abstract virtual void GetAddress(UInt64& pAddress);
    public abstract virtual void CreateBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void IsNull(Int32& pbNull);
    public abstract virtual void GetValue(UInt64& pValue);
    public abstract virtual void SetValue(ulong value);
    public abstract virtual void Dereference(ICorDebugValue& ppValue);
    public abstract virtual void DereferenceStrong(ICorDebugValue& ppValue);
}
[GuidAttribute("CC7BCB0B-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugRegisterSet {
    public abstract virtual void GetRegistersAvailable(UInt64& pAvailable);
    public abstract virtual void GetRegisters(ulong mask, UInt32 regCount, UInt64[] regBuffer);
    public abstract virtual void SetRegisters(ulong mask, UInt32 regCount, UInt64[] regBuffer);
    public abstract virtual void GetThreadContext(UInt32 contextSize, IntPtr context);
    public abstract virtual void SetThreadContext(UInt32 contextSize, IntPtr context);
}
[GuidAttribute("D5EBB8E2-7BBE-4c1d-98A6-A3C04CBDEF64")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugRemote {
    public abstract virtual void CreateProcessEx(ICorDebugRemoteTarget pRemoteTarget, string lpApplicationName, string lpCommandLine, SECURITY_ATTRIBUTES lpProcessAttributes, SECURITY_ATTRIBUTES lpThreadAttributes, int bInheritHandles, UInt32 dwCreationFlags, IntPtr lpEnvironment, string lpCurrentDirectory, STARTUPINFO lpStartupInfo, PROCESS_INFORMATION lpProcessInformation, CorDebugCreateProcessFlags debuggingFlags, ICorDebugProcess& ppProcess);
    public abstract virtual void DebugActiveProcessEx(ICorDebugRemoteTarget pRemoteTarget, UInt32 id, int win32Attach, ICorDebugProcess& ppProcess);
}
[GuidAttribute("C3ED8383-5A49-4cf5-B4B7-01864D9E582D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugRemoteTarget {
    public abstract virtual void GetHostName(UInt32 cchHostName, UInt32& pcchHostName, Char[] szHostName);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("879CAC0A-4A53-4668-B8E3-CB8473CB187F")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugRuntimeUnwindableFrame {
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("7f87c83c-ceb4-4534-a510-83cc57a7580a")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugSharedMethodDebugData {
    public abstract virtual void GetRecordRange(UInt64& pStartAddress, UInt32& pEntrySize);
    public abstract virtual ulong GetInstParamAddress();
    public abstract virtual int GetGenericArguments(UInt64[] vtableBuffer, int bufferItemCount);
    public abstract virtual ulong GetDeclaringTypeHandle();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("86d92a04-14d6-447d-932c-43b20cd6bc6d")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugSharedMethodDebugDataEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugSharedMethodDebugData[] methods, UInt32& pceltFetched);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("594fa56d-4dd5-46bd-9cb6-bc91182f1d7a")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugSharedTypeDebugData {
    public abstract virtual void GetRecordRange(UInt64& pStartAddress, UInt32& pEntrySize);
    public abstract virtual ulong GetVTableAddress();
    public abstract virtual int GetGenericArguments(UInt64[] vtableBuffer, int bufferItemCount);
    public abstract virtual int GetFields(CORDB_FIELD_INFO[] pFieldInfoBuffer, int bufferItemCount);
    public abstract virtual UInt32 GetTypeSize();
}
[GuidAttribute("A0647DE9-55DE-4816-929C-385271C64CF7")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugStackWalk {
    public abstract virtual void GetContext(UInt32 contextFlags, UInt32 contextBufferSize, UInt32& contextSize, IntPtr contextBuffer);
    public abstract virtual int SetContext(CorDebugSetContextFlag flag, UInt32 contextSize, IntPtr contextBuffer);
    public abstract virtual int Next();
    public abstract virtual int GetFrame(ICorDebugFrame& ppFrame);
}
[GuidAttribute("CC7BCAEC-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugStepper {
    public abstract virtual void IsActive(Int32& pbActive);
    public abstract virtual void Deactivate();
    public abstract virtual void SetInterceptMask(CorDebugIntercept mask);
    public abstract virtual void SetUnmappedStopMask(CorDebugUnmappedStop mask);
    public abstract virtual void Step(int bStepIn);
    public abstract virtual void StepRange(int bStepIn, COR_DEBUG_STEP_RANGE[] ranges, UInt32 cRangeCount);
    public abstract virtual void StepOut();
    public abstract virtual void SetRangeIL(int bIL);
}
[GuidAttribute("C5B6E9C3-E7D1-4A8E-873B-7F047F0706F7")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugStepper2 {
    public abstract virtual void SetJMC(int fIsJMCStepper);
}
[GuidAttribute("CC7BCB04-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugStepperEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugStepper[] steppers, UInt32& pceltFetched);
}
[GuidAttribute("CC7BCAFD-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugStringValue {
    public abstract virtual void GetType(CorElementType& pType);
    public abstract virtual void GetSize(UInt32& pSize);
    public abstract virtual void GetAddress(UInt64& pAddress);
    public abstract virtual void CreateBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void IsValid(Int32& pbValid);
    public abstract virtual void CreateRelocBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
    public abstract virtual void GetLength(UInt32& pcchString);
    public abstract virtual void GetString(UInt32 cchString, UInt32& pcchString, StringBuilder szString);
}
[GuidAttribute("938C6D66-7FB6-4F69-B389-425B8987329B")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugThread {
    public abstract virtual void GetProcess(ICorDebugProcess& ppProcess);
    public abstract virtual void GetID(UInt32& pdwThreadId);
    public abstract virtual void GetHandle(IntPtr& phThreadHandle);
    public abstract virtual void GetAppDomain(ICorDebugAppDomain& ppAppDomain);
    public abstract virtual void SetDebugState(CorDebugThreadState state);
    public abstract virtual void GetDebugState(CorDebugThreadState& pState);
    public abstract virtual void GetUserState(CorDebugUserState& pState);
    public abstract virtual void GetCurrentException(ICorDebugValue& ppExceptionObject);
    public abstract virtual void ClearCurrentException();
    public abstract virtual void CreateStepper(ICorDebugStepper& ppStepper);
    public abstract virtual void EnumerateChains(ICorDebugChainEnum& ppChains);
    public abstract virtual void GetActiveChain(ICorDebugChain& ppChain);
    public abstract virtual void GetActiveFrame(ICorDebugFrame& ppFrame);
    public abstract virtual void GetRegisterSet(ICorDebugRegisterSet& ppRegisters);
    public abstract virtual void CreateEval(ICorDebugEval& ppEval);
    public abstract virtual void GetObject(ICorDebugValue& ppObject);
}
[GuidAttribute("2BD956D9-7B07-4BEF-8A98-12AA862417C5")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugThread2 {
    public abstract virtual void GetActiveFunctions(UInt32 cFunctions, UInt32& pcFunctions, COR_ACTIVE_FUNCTION[] pFunctions);
    public abstract virtual void GetConnectionID(UInt32& pdwConnectionId);
    public abstract virtual void GetTaskID(UInt64& pTaskId);
    public abstract virtual void GetVolatileOSThreadID(UInt32& pdwTid);
    public abstract virtual void InterceptCurrentException(ICorDebugFrame pFrame);
}
[GuidAttribute("F8544EC3-5E4E-46c7-8D3E-A52B8405B1F5")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugThread3 {
    public abstract virtual void CreateStackWalk(ICorDebugStackWalk& ppStackWalk);
    public abstract virtual void GetActiveInternalFrames(UInt32 cInternalFrames, UInt32& pcInternalFrames, ICorDebugInternalFrame2[] ppFunctions);
}
[GuidAttribute("1A1F204B-1C66-4637-823F-3EE6C744A69C")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugThread4 {
    public abstract virtual int HasUnhandledException();
    public abstract virtual void GetBlockingObjects(ICorDebugEnumBlockingObject& blockingObjectEnumerator);
    public abstract virtual void GetCurrentCustomDebuggerNotification(ICorDebugValue& ppNotificationObject);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCB06-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugThreadEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugThread[] threads, UInt32& pceltFetched);
}
[GuidAttribute("D613F0BB-ACE1-4C19-BD72-E4C08D5DA7F5")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugType {
    public abstract virtual void GetType(CorElementType& ty);
    public abstract virtual void GetClass(ICorDebugClass& ppClass);
    public abstract virtual void EnumerateTypeParameters(ICorDebugTypeEnum& ppTyParEnum);
    public abstract virtual void GetFirstTypeParameter(ICorDebugType& value);
    public abstract virtual void GetBase(ICorDebugType& pBase);
    public abstract virtual void GetStaticFieldValue(UInt32 fieldDef, ICorDebugFrame pFrame, ICorDebugValue& ppValue);
    public abstract virtual void GetRank(UInt32& pnRank);
}
[GuidAttribute("10F27499-9DF2-43CE-8333-A321D7C99CB4")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugTypeEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugType[] values, UInt32& pceltFetched);
}
[GuidAttribute("5263E909-8CB5-11D3-BD2F-0000F80849BD")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugUnmanagedCallback {
    public abstract virtual void DebugEvent(IntPtr pDebugEvent, int fOutOfBand);
}
[GuidAttribute("CC7BCAF7-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugValue {
    public abstract virtual void GetType(CorElementType& pType);
    public abstract virtual void GetSize(UInt32& pSize);
    public abstract virtual void GetAddress(UInt64& pAddress);
    public abstract virtual void CreateBreakpoint(ICorDebugValueBreakpoint& ppBreakpoint);
}
[GuidAttribute("5E0B54E7-D88A-4626-9420-A691E0A78B49")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugValue2 {
    public abstract virtual void GetExactType(ICorDebugType& ppType);
}
[GuidAttribute("565005FC-0F8A-4F3E-9EDB-83102B156595")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugValue3 {
    public abstract virtual void GetSize64(UInt64& pSize);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("CC7BCAEB-8A68-11D2-983C-0000F808342D")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugValueBreakpoint {
    public abstract virtual void Activate(int bActive);
    public abstract virtual void IsActive(Int32& pbActive);
    public abstract virtual void GetValue(ICorDebugValue& ppValue);
}
[GuidAttribute("CC7BCB0A-8A68-11D2-983C-0000F808342D")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugValueEnum {
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(ICorDebugEnum& ppEnum);
    public abstract virtual void GetCount(UInt32& pcelt);
    public abstract virtual int Next(UInt32 celt, ICorDebugValue[] values, UInt32& pceltFetched);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("F69126B7-C787-4F6B-AE96-A569786FC670")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.ICorDebugVirtualUnwinder {
    public abstract virtual int GetContext(int contextFlags, int contextBufSize, Int32& contextSize, IntPtr contextBuf);
    public abstract virtual int Next();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("00000100-0000-0000-C000-000000000046")]
public interface Microsoft.Samples.Debugging.CorDebug.NativeApi.IEnumUnknown {
    public abstract virtual int Next(int elementArrayLength, Object[] elementArray, Int32& fetchedElementCount);
    public abstract virtual int Skip(int count);
    public abstract virtual void Reset();
    public abstract virtual void Clone(IEnumUnknown& enumerator);
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.ILCodeKind : Enum {
    public int value__;
    public static ILCodeKind OriginalIL;
    public static ILCodeKind ReJitIL;
}
[ComVisibleAttribute("False")]
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.PROCESS_INFORMATION : ValueType {
    public IntPtr hProcess;
    public IntPtr hThread;
    public int dwProcessId;
    public int dwThreadId;
}
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.SECURITY_ATTRIBUTES : ValueType {
    public UInt32 nLength;
    public IntPtr lpSecurityDescriptor;
    public int bInheritHandle;
}
[ComVisibleAttribute("False")]
public class Microsoft.Samples.Debugging.CorDebug.NativeApi.STARTUPINFO : ValueType {
    public int cb;
    public string lpReserved;
    public string lpDesktop;
    public string lpTitle;
    public int dwX;
    public int dwY;
    public int dwXSize;
    public int dwYSize;
    public int dwXCountChars;
    public int dwYCountChars;
    public int dwFillAttribute;
    public int dwFlags;
    public short wShowWindow;
    public short cbReserved2;
    public IntPtr lpReserved2;
    public IntPtr hStdInput;
    public IntPtr hStdOutput;
    public IntPtr hStdError;
}
public enum Microsoft.Samples.Debugging.CorDebug.NativeApi.WriteableMetadataUpdateMode : Enum {
    public int value__;
    public static WriteableMetadataUpdateMode LegacyCompatPolicy;
    public static WriteableMetadataUpdateMode AlwaysShowUpdates;
}
public abstract class Microsoft.Samples.Debugging.CorDebug.TokenUtils : object {
    public static CorTokenType TypeFromToken(int token);
    public static int RidFromToken(int token);
    public static bool IsNullToken(int token);
}
internal class Microsoft.Samples.Debugging.CorMetadata.AscendingValueComparer`2 : object {
    public sealed virtual int Compare(KeyValuePair`2<K, V> p1, KeyValuePair`2<K, V> p2);
    public bool Equals(KeyValuePair`2<K, V> p1, KeyValuePair`2<K, V> p2);
    public int GetHashCode(KeyValuePair`2<K, V> p);
}
public enum Microsoft.Samples.Debugging.CorMetadata.CorCallingConvention : Enum {
    public int value__;
    public static CorCallingConvention Default;
    public static CorCallingConvention VarArg;
    public static CorCallingConvention Field;
    public static CorCallingConvention LocalSig;
    public static CorCallingConvention Property;
    public static CorCallingConvention Unmanaged;
    public static CorCallingConvention GenericInst;
    public static CorCallingConvention NativeVarArg;
    public static CorCallingConvention Mask;
    public static CorCallingConvention HasThis;
    public static CorCallingConvention ExplicitThis;
    public static CorCallingConvention Generic;
}
public class Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport : object {
    public static int TokenNotFound;
    public static int TokenGlobalNamespace;
    internal IMetadataImport m_importer;
    public IEnumerable DefinedTypes { get; }
    public object RawCOMObject { get; }
    public CorMetadataImport(IMetadataImport metadataImport);
    public void Dispose();
    public MetadataMethodInfo GetMethodInfo(MetadataToken token);
    public MethodInfo GetMethodInfo(int methodToken);
    public Type GetType(int typeToken);
    public string GetFieldName(int fieldToken);
    public Byte[] GetFieldSignature(int fieldToken);
    public void GetPropertyProps(int propToken, Int32& typeDef, String& propertyName, Int32& pdwPropFlags, Byte[]& signature, Int32& pdwCPlusTypeFlag, Byte[]& defaultValue, Int32& mdSetter, Int32& mdGetter, Int32[]& rmdOtherMethod);
    public void GetFieldProps(int fieldToken, Int32& typeDefToken, String& fieldName, FieldAttributes& attributes, Byte[]& signature, Int32& CPlusTypeFlag, Byte[]& constantValue);
    public void GetInterfaceImplProps(int iImplToken, Int32& implementingClassToken, Int32& interfaceToken);
    public void GetCustomAttributeProps(int caToken, Int32& modifiedObjectToken, Int32& constructorToken, Byte[]& value);
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumGenericParams>d__11")]
public IEnumerable`1<int> EnumGenericParams(int typeOrMethodToken);
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumGenericParamConstraints>d__12")]
public IEnumerable`1<int> EnumGenericParamConstraints(int genericParamToken);
    public string GetGenericParamName(int genTypeToken);
    public int GetGenericParamOwner(int genTypeToken);
    public void GetGenericParamProps(int genTypeToken, Int32& genIndex, Int32& genFlags, Int32& tkOwner, Int32& tkKind, String& genArgName);
    public void GetGenericParamConstraintProps(int genParamConstraintToken, Int32& genericParamToken, Int32& constraintTypeToken);
    public int CountGenericParams(int typeToken);
    public void GetParamProps(int token, Int32& methodDefToken, Int32& sequence, String& name, Int32& attr, Int32& cPlusTypeFlag, String& value);
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumParams>d__19")]
public IEnumerable`1<int> EnumParams(int methodDef);
    public string GetScopeFilename();
    public void GetScopeProps(String& filename, Guid& mvid);
    public string GetUserString(int token);
    public int FindField(int td, string name, Byte[] signature);
    public int GetTypeTokenFromName(string name);
    public string GetTypeNameFromRef(int token);
    public void GetTypeDefProps(int classToken, String& typeName, TypeAttributes& typeDefFlags, Int32& extends);
    public void GetTypeRefProps(int token, Int32& resolutionScope, String& typeName);
    public string GetModuleRefProps(int moduleRefToken);
    public int GetModuleFromScope();
    public string GetTypeNameFromDef(int token);
    public int GetExtendsTokenFromDef(int token);
    public int GetEnclosingClassFromTypeDef(int typeDefToken);
    public int GetScopeFromTypeRef(int typeRefToken);
    public string GetAssemblySimpleNameFromAssemblyRef(int assemblyRefToken);
    public AssemblyName GetAssemblyNameFromAssemblyRef(int assemblyRefToken);
    public AssemblyName GetAssemblyName();
    private static AssemblyName GetAssemblyName(Byte[] publicKeyToken, ASSEMBLYMETADATA assemblyMetadata, StringBuilder assemblyName);
    public Byte[] GetSigFromToken(int token);
    public void GetMemberRefProps(int token, Int32& classToken, String& member, Byte[]& sigBytes);
    public void GetMethodProps(int token, Int32& classToken, String& methodName, Int32& attr, Byte[]& sigBytes, Int32& codeRVA, Int32& implFlags);
    public void GetMethodSpecProps(int methodSpecToken, Int32& parent, Byte[]& signature);
    public string GetMemberRefName(int token);
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumTypeDefs>d__45")]
public IEnumerable`1<int> EnumTypeDefs();
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumTypeSpecs>d__46")]
public IEnumerable`1<int> EnumTypeSpecs();
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumProperties>d__47")]
public IEnumerable`1<int> EnumProperties(int typeDefToken);
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumFields>d__48")]
public IEnumerable`1<int> EnumFields(int typeDefToken);
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumMethods>d__49")]
public IEnumerable`1<int> EnumMethods(int typeDefToken);
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumInterfaceImpls>d__50")]
public IEnumerable`1<int> EnumInterfaceImpls(int typeDef);
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumCustomAttributes>d__51")]
public IEnumerable`1<int> EnumCustomAttributes(int typeScopeToken, int constructorToken);
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumMethodSpecs>d__52")]
public IEnumerable`1<int> EnumMethodSpecs(int methodDefOrRefToken);
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumExportedTypes>d__53")]
public IEnumerable`1<int> EnumExportedTypes();
    public Byte[] GetCustomAttributeByName(int ownerToken, string name);
    public Byte[] GetTypeSpecFromToken(int typeSpecToken);
    public IEnumerable get_DefinedTypes();
    private int GetTokenRows(MetadataTokenType tableIndex);
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumerateAllMethodTokens>d__59")]
public IEnumerable`1<MetadataToken> EnumerateAllMethodTokens();
    [IteratorStateMachineAttribute("Microsoft.Samples.Debugging.CorMetadata.CorMetadataImport/<EnumerateAllMethods>d__60")]
public IEnumerable`1<MetadataMethodInfo> EnumerateAllMethods();
    public bool IsTokenValid(int token);
    public object get_RawCOMObject();
}
public class Microsoft.Samples.Debugging.CorMetadata.MetadataFieldInfo : FieldInfo {
    private IMetadataImport m_importer;
    private int m_fieldToken;
    private MetadataType m_declaringType;
    private string m_name;
    private FieldAttributes m_fieldAttributes;
    private object m_value;
    public Type FieldType { get; }
    public RuntimeFieldHandle FieldHandle { get; }
    public FieldAttributes Attributes { get; }
    public MemberTypes MemberType { get; }
    public string Name { get; }
    public Type DeclaringType { get; }
    public Type ReflectedType { get; }
    public int MetadataToken { get; }
    internal MetadataFieldInfo(IMetadataImport importer, int fieldToken, MetadataType declaringType);
    private static object ParseDefaultValue(MetadataType declaringType, IntPtr ppvSigBlob, IntPtr ppvRawValue);
    public virtual object GetValue(object obj);
    public virtual void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual bool IsDefined(Type attributeType, bool inherit);
    public virtual Type get_FieldType();
    public virtual RuntimeFieldHandle get_FieldHandle();
    public virtual FieldAttributes get_Attributes();
    public virtual MemberTypes get_MemberType();
    public virtual string get_Name();
    public virtual Type get_DeclaringType();
    public virtual Type get_ReflectedType();
    public virtual int get_MetadataToken();
}
internal static class Microsoft.Samples.Debugging.CorMetadata.MetadataHelperFunctions : object {
    private static UInt32[] g_tkCorEncodeToken;
    private static MetadataHelperFunctions();
    private static UInt32 TokenFromRid(UInt32 rid, UInt32 tktype);
    internal static UInt32 CorSigUncompressBigData(IntPtr& pData);
    internal static UInt32 CorSigUncompressData(IntPtr& pData);
    internal static UInt32 CorSigUncompressToken(IntPtr& pData);
    internal static CorCallingConvention CorSigUncompressCallingConv(IntPtr& pData);
    internal static CorElementType CorSigUncompressElementType(IntPtr& pData);
    internal static String[] GetGenericArgumentNames(IMetadataImport importer, int typeOrMethodToken);
}
public class Microsoft.Samples.Debugging.CorMetadata.MetadataMethodInfo : MethodInfo {
    private IMetadataImport m_importer;
    private string m_name;
    private int m_classToken;
    private int m_methodToken;
    private MethodAttributes m_methodAttributes;
    public Type ReturnType { get; }
    public ICustomAttributeProvider ReturnTypeCustomAttributes { get; }
    public Type ReflectedType { get; }
    public Type DeclaringType { get; }
    public string Name { get; }
    public MethodAttributes Attributes { get; }
    public RuntimeMethodHandle MethodHandle { get; }
    public int MetadataToken { get; }
    internal MetadataMethodInfo(IMetadataImport importer, int methodToken);
    public virtual Type get_ReturnType();
    public virtual ICustomAttributeProvider get_ReturnTypeCustomAttributes();
    public virtual Type get_ReflectedType();
    public virtual Type get_DeclaringType();
    public virtual string get_Name();
    public virtual MethodAttributes get_Attributes();
    public virtual RuntimeMethodHandle get_MethodHandle();
    public virtual MethodInfo GetBaseDefinition();
    public virtual bool IsDefined(Type attributeType, bool inherit);
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture);
    public virtual MethodImplAttributes GetMethodImplementationFlags();
    public virtual ParameterInfo[] GetParameters();
    public virtual int get_MetadataToken();
    public String[] GetGenericArgumentNames();
    public bool HasCustomAttribute(string fullName);
}
public class Microsoft.Samples.Debugging.CorMetadata.MetadataParameterInfo : ParameterInfo {
    public string Name { get; }
    public int Position { get; }
    internal MetadataParameterInfo(IMetadataImport importer, int paramToken, MemberInfo memberImpl, Type typeImpl);
    private MetadataParameterInfo(SerializationInfo info, StreamingContext context);
    public virtual string get_Name();
    public virtual int get_Position();
}
public class Microsoft.Samples.Debugging.CorMetadata.MetadataPropertyInfo : PropertyInfo {
    private IMetadataImport m_importer;
    private int m_propToken;
    private MetadataType m_declaringType;
    private string m_name;
    private PropertyAttributes m_propAttributes;
    private int m_mdGetter;
    private int m_mdSetter;
    public PropertyAttributes Attributes { get; }
    public bool CanRead { get; }
    public bool CanWrite { get; }
    public Type PropertyType { get; }
    public Type DeclaringType { get; }
    public string Name { get; }
    public Type ReflectedType { get; }
    internal MetadataPropertyInfo(IMetadataImport importer, int propToken, MetadataType declaringType);
    public virtual PropertyAttributes get_Attributes();
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
    public virtual MethodInfo[] GetAccessors(bool nonPublic);
    public virtual MethodInfo GetGetMethod(bool nonPublic);
    public virtual ParameterInfo[] GetIndexParameters();
    public virtual MethodInfo GetSetMethod(bool nonPublic);
    public virtual object GetValue(object obj, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture);
    public virtual Type get_PropertyType();
    public virtual void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture);
    public virtual Type get_DeclaringType();
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual bool IsDefined(Type attributeType, bool inherit);
    public virtual string get_Name();
    public virtual Type get_ReflectedType();
}
public class Microsoft.Samples.Debugging.CorMetadata.MetadataToken : ValueType {
    private int value;
    public int Value { get; }
    public MetadataTokenType Type { get; }
    public int Index { get; }
    public MetadataToken(int value);
    public MetadataToken(MetadataTokenType mdType, int rid);
    public int get_Value();
    public MetadataTokenType get_Type();
    public int get_Index();
    public static int op_Implicit(MetadataToken token);
    public static bool op_Equality(MetadataToken v1, MetadataToken v2);
    public static bool op_Inequality(MetadataToken v1, MetadataToken v2);
    public static bool IsTokenOfType(int token, MetadataTokenType[] types);
    public bool IsOfType(MetadataTokenType[] types);
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public enum Microsoft.Samples.Debugging.CorMetadata.MetadataTokenType : Enum {
    public int value__;
    public static MetadataTokenType Module;
    public static MetadataTokenType TypeRef;
    public static MetadataTokenType TypeDef;
    public static MetadataTokenType FieldDef;
    public static MetadataTokenType MethodDef;
    public static MetadataTokenType ParamDef;
    public static MetadataTokenType InterfaceImpl;
    public static MetadataTokenType MemberRef;
    public static MetadataTokenType CustomAttribute;
    public static MetadataTokenType Permission;
    public static MetadataTokenType Signature;
    public static MetadataTokenType Event;
    public static MetadataTokenType Property;
    public static MetadataTokenType ModuleRef;
    public static MetadataTokenType TypeSpec;
    public static MetadataTokenType Assembly;
    public static MetadataTokenType AssemblyRef;
    public static MetadataTokenType File;
    public static MetadataTokenType ExportedType;
    public static MetadataTokenType ManifestResource;
    public static MetadataTokenType GenericPar;
    public static MetadataTokenType MethodSpec;
    public static MetadataTokenType String;
    public static MetadataTokenType Name;
    public static MetadataTokenType BaseType;
    public static MetadataTokenType Invalid;
}
public class Microsoft.Samples.Debugging.CorMetadata.MetadataType : Type {
    private string m_name;
    private IMetadataImport m_importer;
    private int m_typeToken;
    private bool m_isEnum;
    private bool m_isFlagsEnum;
    private CorElementType m_enumUnderlyingType;
    private List`1<KeyValuePair`2<string, ulong>> m_enumValues;
    public int MetadataToken { get; }
    public string Name { get; }
    public Type UnderlyingSystemType { get; }
    public Type BaseType { get; }
    public string AssemblyQualifiedName { get; }
    public string Namespace { get; }
    public string FullName { get; }
    public RuntimeTypeHandle TypeHandle { get; }
    public Assembly Assembly { get; }
    public Module Module { get; }
    public Guid GUID { get; }
    public bool ReallyIsEnum { get; }
    public bool ReallyIsFlagsEnum { get; }
    public CorElementType EnumUnderlyingType { get; }
    [CLSCompliantAttribute("False")]
public IList`1<KeyValuePair`2<string, ulong>> EnumValues { get; }
    internal MetadataType(IMetadataImport importer, int classToken);
    private static string GetTypeName(IMetadataImport importer, int tk);
    private static CorElementType GetEnumUnderlyingType(IMetadataImport importer, int tk);
    public virtual int get_MetadataToken();
    public virtual string get_Name();
    public virtual Type get_UnderlyingSystemType();
    public virtual Type get_BaseType();
    public virtual string get_AssemblyQualifiedName();
    public virtual string get_Namespace();
    public virtual string get_FullName();
    public virtual RuntimeTypeHandle get_TypeHandle();
    public virtual Assembly get_Assembly();
    public virtual Module get_Module();
    public virtual Guid get_GUID();
    public virtual bool IsDefined(Type attributeType, bool inherit);
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual Object[] GetCustomAttributes(bool inherit);
    protected virtual bool HasElementTypeImpl();
    public virtual Type GetElementType();
    protected virtual bool IsCOMObjectImpl();
    protected virtual bool IsPrimitiveImpl();
    protected virtual bool IsPointerImpl();
    protected virtual bool IsByRefImpl();
    protected virtual bool IsArrayImpl();
    protected virtual TypeAttributes GetAttributeFlagsImpl();
    public virtual MemberInfo[] GetMembers(BindingFlags bindingAttr);
    public virtual Type[] GetNestedTypes(BindingFlags bindingAttr);
    public virtual Type GetNestedType(string name, BindingFlags bindingAttr);
    public virtual PropertyInfo[] GetProperties(BindingFlags bindingAttr);
    public Int32[] GetPropertiesTokens();
    protected virtual PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers);
    public virtual EventInfo[] GetEvents(BindingFlags bindingAttr);
    public virtual EventInfo GetEvent(string name, BindingFlags bindingAttr);
    public virtual Type GetInterface(string name, bool ignoreCase);
    public virtual Type[] GetInterfaces();
    public virtual FieldInfo GetField(string name, BindingFlags bindingAttr);
    public virtual FieldInfo[] GetFields(BindingFlags bindingAttr);
    public virtual MethodInfo[] GetMethods(BindingFlags bindingAttr);
    protected virtual MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers);
    public virtual ConstructorInfo[] GetConstructors(BindingFlags bindingAttr);
    protected virtual ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers);
    public virtual object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters);
    public String[] GetGenericArgumentNames();
    public bool get_ReallyIsEnum();
    public bool get_ReallyIsFlagsEnum();
    public CorElementType get_EnumUnderlyingType();
    public IList`1<KeyValuePair`2<string, ulong>> get_EnumValues();
    private static string GetNestedClassPrefix(IMetadataImport importer, int classToken, TypeAttributes attribs);
}
public class Microsoft.Samples.Debugging.CorMetadata.NativeApi.ASSEMBLYMETADATA : ValueType {
    public ushort usMajorVersion;
    public ushort usMinorVersion;
    public ushort usBuildNumber;
    public ushort usRevisionNumber;
    public string szLocale;
    public int cbLocale;
    public IntPtr rProcessor;
    public int ulProcessor;
    public IntPtr rOS;
    public int ulOS;
}
public enum Microsoft.Samples.Debugging.CorMetadata.NativeApi.CorAssemblyFlags : Enum {
    public int value__;
    public static CorAssemblyFlags PublicKey;
    public static CorAssemblyFlags PA_None;
    public static CorAssemblyFlags PA_MSIL;
    public static CorAssemblyFlags PA_x86;
    public static CorAssemblyFlags PA_IA64;
    public static CorAssemblyFlags PA_AMD64;
    public static CorAssemblyFlags PA_ARM;
    public static CorAssemblyFlags PA_NoPlatform;
    public static CorAssemblyFlags PA_Specified;
    public static CorAssemblyFlags PA_Mask;
    public static CorAssemblyFlags PA_FullMask;
    public static CorAssemblyFlags PA_Shift;
    public static CorAssemblyFlags EnableJITCompileTracking;
    public static CorAssemblyFlags DisableJITCompileOptimizer;
    public static CorAssemblyFlags Retargettable;
    public static CorAssemblyFlags ContentType_Default;
    public static CorAssemblyFlags ContentType_WindowsRuntime;
    public static CorAssemblyFlags ContextType_Mask;
}
public static class Microsoft.Samples.Debugging.CorMetadata.NativeApi.IID_IMetadataImport : object {
    public static Guid Value;
    private static IID_IMetadataImport();
}
[GuidAttribute("EE62470B-E94B-424e-9B7C-2F00C9249F93")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorMetadata.NativeApi.IMetadataAssemblyImport {
    public abstract virtual void GetAssemblyProps(int mdAssembly, IntPtr& ppbPublicKey, Int32& pcbPublicKey, Int32& pulHashAlgId, StringBuilder szName, int cchName, Int32& pchName, ASSEMBLYMETADATA& pMetaData, CorAssemblyFlags& pdwAssemblyFlags);
    public abstract virtual void GetAssemblyRefProps(int mdAssemblyRef, IntPtr& ppbPublicKeyOrToken, Int32& pcbPublicKeyOrToken, StringBuilder szName, int cchName, Int32& pchName, ASSEMBLYMETADATA& pMetaData, IntPtr& ppbHashValue, Int32& pcbHashValue, CorAssemblyFlags& pdwAssemblyRefFlags);
    public abstract virtual void GetFileProps_();
    public abstract virtual void GetExportedTypeProps_();
    public abstract virtual void GetManifestResourceProps_();
    public abstract virtual void EnumAssemblyRefs_();
    public abstract virtual void EnumFiles_();
    public abstract virtual void EnumExportedTypes(IntPtr& hEnum, Int32& rExportedTypes, int cMax, Int32& pcTokens);
    public abstract virtual void EnumManifestResources_();
    public abstract virtual void GetAssemblyFromScope(Int32& mdAssembly);
    public abstract virtual void FindExportedTypeByName_();
    public abstract virtual void FindManifestResourceByName_();
    public abstract virtual void CloseEnum_();
    public abstract virtual void FindAssembliesByName_();
}
[GuidAttribute("809C652E-7396-11D2-9771-00A0C9B4D50C")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorMetadata.NativeApi.IMetaDataDispenser {
    public abstract virtual void DefineScope(Guid& rclsid, int dwCreateFlags, Guid& riid, Object& ppIUnk);
    public abstract virtual void OpenScope(string szScope, int dwOpenFlags, Guid& riid, Object& ppIUnk);
    public abstract virtual void OpenScope(IntPtr pData, UInt32 cbData, int dwOpenFlags, Guid& riid, Object& ppIUnk);
}
[GuidAttribute("7DAC8207-D3AE-4c75-9B67-92801A497D44")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorMetadata.NativeApi.IMetadataImport {
    public abstract virtual void CloseEnum(IntPtr hEnum);
    public abstract virtual void CountEnum(IntPtr hEnum, Int32& pulCount);
    public abstract virtual void ResetEnum(IntPtr hEnum, int ulPos);
    public abstract virtual void EnumTypeDefs(IntPtr& phEnum, Int32& rTypeDefs, UInt32 cMax, UInt32& pcTypeDefs);
    public abstract virtual void EnumInterfaceImpls(IntPtr& phEnum, int td, Int32& rImpls, UInt32 cMax, UInt32& pcImpls);
    public abstract virtual void EnumTypeRefs_();
    public abstract virtual int FindTypeDefByName(string szTypeDef, int tkEnclosingClass, Int32& token);
    public abstract virtual void GetScopeProps(StringBuilder szName, int cchName, Int32& pchName, Guid& mvid);
    public abstract virtual void GetModuleFromScope(Int32& pmd);
    public abstract virtual void GetTypeDefProps(int td, StringBuilder szTypeDef, int cchTypeDef, Int32& pchTypeDef, TypeAttributes& pdwTypeDefFlags, Int32& ptkExtends);
    public abstract virtual void GetInterfaceImplProps(int iiImpl, Int32& pClass, Int32& ptkIface);
    public abstract virtual void GetTypeRefProps(int tr, Int32& ptkResolutionScope, StringBuilder szName, int cchName, Int32& pchName);
    public abstract virtual void ResolveTypeRef(int tr, Guid& riid, Object& scope, Int32& typeDef);
    public abstract virtual void EnumMembers_();
    public abstract virtual void EnumMembersWithName_();
    public abstract virtual void EnumMethods(IntPtr& phEnum, int cl, Int32& mdMethodDef, int cMax, Int32& pcTokens);
    public abstract virtual void EnumMethodsWithName_();
    public abstract virtual void EnumFields(IntPtr& phEnum, int cl, Int32& mdFieldDef, int cMax, UInt32& pcTokens);
    public abstract virtual void EnumFieldsWithName_();
    public abstract virtual void EnumParams(IntPtr& phEnum, int mdMethodDef, Int32& mdParamDef, int cMax, UInt32& pcTokens);
    public abstract virtual void EnumMemberRefs_();
    public abstract virtual void EnumMethodImpls_();
    public abstract virtual void EnumPermissionSets_();
    public abstract virtual void FindMember_();
    public abstract virtual void FindMethod_();
    public abstract virtual int FindField(int td, string name, Byte[] pvSigBlob, int cbSigBlob, Int32& fieldDef);
    public abstract virtual void FindMemberRef_();
    public abstract virtual void GetMethodProps(UInt32 md, Int32& pClass, StringBuilder szMethod, int cchMethod, Int32& pchMethod, UInt32& pdwAttr, IntPtr& ppvSigBlob, UInt32& pcbSigBlob, UInt32& pulCodeRVA, UInt32& pdwImplFlags);
    public abstract virtual void GetMemberRefProps(UInt32 mr, Int32& ptk, StringBuilder szMember, int cchMember, UInt32& pchMember, IntPtr& ppvSigBlob, Int32& pbSig);
    public abstract virtual void EnumProperties(IntPtr& phEnum, int mdTypeDef, Int32& mdPropertyDef, int countMax, UInt32& pcTokens);
    public abstract virtual void EnumEvents_();
    public abstract virtual void GetEventProps_();
    public abstract virtual void EnumMethodSemantics_();
    public abstract virtual void GetMethodSemantics_();
    public abstract virtual void GetClassLayout_();
    public abstract virtual void GetFieldMarshal_();
    public abstract virtual void GetRVA_();
    public abstract virtual void GetPermissionSetProps_();
    public abstract virtual void GetSigFromToken(int mdSig, IntPtr& ppvSig, UInt32& pcbSig);
    public abstract virtual void GetModuleRefProps(int mur, StringBuilder szName, int cchName, Int32& pchName);
    public abstract virtual void EnumModuleRefs_();
    public abstract virtual void GetTypeSpecFromToken(int typeSpecToken, IntPtr& ppvSig, Int32& pcbSig);
    public abstract virtual void GetNameFromToken_();
    public abstract virtual void EnumUnresolvedMethods_();
    public abstract virtual void GetUserString(int stk, StringBuilder szString, int cchString, Int32& pchString);
    public abstract virtual void GetPinvokeMap_();
    public abstract virtual void EnumSignatures_();
    public abstract virtual void EnumTypeSpecs(IntPtr& phEnum, Int32& mdTypeSpecs, UInt32 cMax, UInt32& pcTypeSpecs);
    public abstract virtual void EnumUserStrings_();
    public abstract virtual void GetParamForMethodIndex_();
    public abstract virtual void EnumCustomAttributes(IntPtr& phEnum, int tk, int tkType, Int32& mdCustomAttribute, UInt32 cMax, UInt32& pcTokens);
    public abstract virtual void GetCustomAttributeProps(int cv, Int32& ptkObj, Int32& ptkType, IntPtr& ppBlob, Int32& pcbSize);
    public abstract virtual void FindTypeRef_();
    public abstract virtual void GetMemberProps_();
    public abstract virtual void GetFieldProps(int mb, Int32& mdTypeDef, StringBuilder szField, int cchField, Int32& pchField, Int32& pdwAttr, IntPtr& ppvSigBlob, Int32& pcbSigBlob, Int32& pdwCPlusTypeFlab, IntPtr& ppValue, Int32& pcchValue);
    public abstract virtual void GetPropertyProps(int mb, Int32& mdTypeDef, StringBuilder szProperty, int cchProperty, Int32& pchProperty, Int32& pdwPropFlags, IntPtr& ppvSigBlob, Int32& pcbSigBlob, Int32& pdwCPlusTypeFlag, IntPtr& ppDefaultValue, Int32& pcchDefaultValue, Int32& mdSetter, Int32& mdGetter, Int32& rmdOtherMethod, int cMax, Int32& pcOtherMethod);
    public abstract virtual void GetParamProps(int tk, Int32& pmd, Int32& pulSequence, StringBuilder szName, int cchName, Int32& pchName, Int32& pdwAttr, Int32& pdwCPlusTypeFlag, IntPtr& ppValue, Int32& pcchValue);
    public abstract virtual int GetCustomAttributeByName(int tkObj, string szName, IntPtr& ppData, UInt32& pcbData);
    public abstract virtual bool IsValidToken(UInt32 tk);
    public abstract virtual int GetNestedClassProps(int tdNestedClass, Int32& tdEnclosingClass);
    public abstract virtual void GetNativeCallConvFromSig_();
    public abstract virtual void IsGlobal_();
}
[GuidAttribute("FCE5EFA0-8BBA-4f8e-A036-8F2022B08466")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorMetadata.NativeApi.IMetadataImport2 {
    public abstract virtual void CloseEnum(IntPtr hEnum);
    public abstract virtual void CountEnum(IntPtr hEnum, Int32& pulCount);
    public abstract virtual void ResetEnum(IntPtr hEnum, int ulPos);
    public abstract virtual void EnumTypeDefs(IntPtr& phEnum, Int32& rTypeDefs, UInt32 cMax, UInt32& pcTypeDefs);
    public abstract virtual void EnumInterfaceImpls(IntPtr& phEnum, int td, Int32& rImpls, UInt32 cMax, UInt32& pcImpls);
    public abstract virtual void EnumTypeRefs_();
    public abstract virtual void FindTypeDefByName(string szTypeDef, int tkEnclosingClass, Int32& token);
    public abstract virtual void GetScopeProps(StringBuilder szName, int cchName, Int32& pchName, Guid& mvid);
    public abstract virtual void GetModuleFromScope(Int32& pmd);
    public abstract virtual void GetTypeDefProps(int td, StringBuilder szTypeDef, int cchTypeDef, Int32& pchTypeDef, TypeAttributes& pdwTypeDefFlags, Int32& ptkExtends);
    public abstract virtual void GetInterfaceImplProps(int iiImpl, Int32& pClass, Int32& ptkIface);
    public abstract virtual void GetTypeRefProps(int tr, Int32& ptkResolutionScope, StringBuilder szName, int cchName, Int32& pchName);
    public abstract virtual void ResolveTypeRef(int tr, Guid& riid, Object& scope, Int32& typeDef);
    public abstract virtual void EnumMembers_();
    public abstract virtual void EnumMembersWithName_();
    public abstract virtual void EnumMethods(IntPtr& phEnum, int cl, Int32& mdMethodDef, int cMax, Int32& pcTokens);
    public abstract virtual void EnumMethodsWithName_();
    public abstract virtual void EnumFields(IntPtr& phEnum, int cl, Int32& mdFieldDef, int cMax, UInt32& pcTokens);
    public abstract virtual void EnumFieldsWithName_();
    public abstract virtual void EnumParams(IntPtr& phEnum, int mdMethodDef, Int32& mdParamDef, int cMax, UInt32& pcTokens);
    public abstract virtual void EnumMemberRefs_();
    public abstract virtual void EnumMethodImpls_();
    public abstract virtual void EnumPermissionSets_();
    public abstract virtual void FindMember_();
    public abstract virtual void FindMethod_();
    public abstract virtual int FindField(int td, string name, Byte[] pvSigBlob, int cbSigBlob, Int32& fieldDef);
    public abstract virtual void FindMemberRef_();
    public abstract virtual void GetMethodProps(UInt32 md, Int32& pClass, StringBuilder szMethod, int cchMethod, Int32& pchMethod, UInt32& pdwAttr, IntPtr& ppvSigBlob, UInt32& pcbSigBlob, UInt32& pulCodeRVA, UInt32& pdwImplFlags);
    public abstract virtual void GetMemberRefProps(UInt32 mr, Int32& ptk, StringBuilder szMember, int cchMember, UInt32& pchMember, IntPtr& ppvSigBlob, Int32& pbSig);
    public abstract virtual void EnumProperties(IntPtr& phEnum, int mdTypeDef, Int32& mdPropertyDef, int countMax, UInt32& pcTokens);
    public abstract virtual void EnumEvents_();
    public abstract virtual void GetEventProps_();
    public abstract virtual void EnumMethodSemantics_();
    public abstract virtual void GetMethodSemantics_();
    public abstract virtual void GetClassLayout_();
    public abstract virtual void GetFieldMarshal_();
    public abstract virtual void GetRVA_();
    public abstract virtual void GetPermissionSetProps_();
    public abstract virtual void GetSigFromToken(int mdSig, IntPtr& ppvSig, UInt32& pcbSig);
    public abstract virtual void GetModuleRefProps(int mur, StringBuilder szName, int cchName, Int32& pchName);
    public abstract virtual void EnumModuleRefs_();
    public abstract virtual void GetTypeSpecFromToken(int typeSpecToken, IntPtr& ppvSig, Int32& pcbSig);
    public abstract virtual void GetNameFromToken_();
    public abstract virtual void EnumUnresolvedMethods_();
    public abstract virtual void GetUserString(int stk, StringBuilder szString, int cchString, Int32& pchString);
    public abstract virtual void GetPinvokeMap_();
    public abstract virtual void EnumSignatures_();
    public abstract virtual void EnumTypeSpecs(IntPtr& phEnum, Int32& mdTypeSpecs, UInt32 cMax, UInt32& pcTypeSpecs);
    public abstract virtual void EnumUserStrings_();
    public abstract virtual void GetParamForMethodIndex_();
    public abstract virtual void EnumCustomAttributes(IntPtr& phEnum, int tk, int tkType, Int32& mdCustomAttribute, UInt32 cMax, UInt32& pcTokens);
    public abstract virtual void GetCustomAttributeProps(int cv, Int32& ptkObj, Int32& ptkType, IntPtr& ppBlob, Int32& pcbSize);
    public abstract virtual void FindTypeRef_();
    public abstract virtual void GetMemberProps_();
    public abstract virtual void GetFieldProps(int mb, Int32& mdTypeDef, StringBuilder szField, int cchField, Int32& pchField, Int32& pdwAttr, IntPtr& ppvSigBlob, Int32& pcbSigBlob, Int32& pdwCPlusTypeFlab, IntPtr& ppValue, Int32& pcchValue);
    public abstract virtual void GetPropertyProps(int mb, Int32& mdTypeDef, StringBuilder szProperty, int cchProperty, Int32& pchProperty, Int32& pdwPropFlags, IntPtr& ppvSigBlob, Int32& pcbSigBlob, Int32& pdwCPlusTypeFlag, IntPtr& ppDefaultValue, Int32& pcchDefaultValue, Int32& mdSetter, Int32& mdGetter, Int32& rmdOtherMethod, int cMax, Int32& pcOtherMethod);
    public abstract virtual void GetParamProps(int tk, Int32& pmd, Int32& pulSequence, StringBuilder szName, int cchName, Int32& pchName, Int32& pdwAttr, Int32& pdwCPlusTypeFlag, IntPtr& ppValue, Int32& pcchValue);
    public abstract virtual int GetCustomAttributeByName(int tkObj, string szName, IntPtr& ppData, UInt32& pcbData);
    public abstract virtual bool IsValidToken(UInt32 tk);
    public abstract virtual void GetNestedClassProps(int tdNestedClass, Int32& tdEnclosingClass);
    public abstract virtual void GetNativeCallConvFromSig_();
    public abstract virtual void IsGlobal_();
    public abstract virtual void EnumGenericParams(IntPtr& hEnum, int tk, Int32& rGenericParams, UInt32 cMax, UInt32& pcGenericParams);
    public abstract virtual void GetGenericParamProps(int gp, Int32& pulParamSeq, Int32& pdwParamFlags, Int32& ptOwner, Int32& ptkKind, StringBuilder wzName, ulong cchName, UInt64& pchName);
    public abstract virtual void GetMethodSpecProps(int mi, Int32& tkParent, IntPtr& ppvSigBlob, Int32& pcbSigBlob);
    public abstract virtual void EnumGenericParamConstraints(IntPtr& hEnum, int tkGenericParam, Int32& rGenericParamConstraint, int cMax, Int32& cGenericParamConstraints);
    public abstract virtual void GetGenericParamConstraintProps(int gpc, Int32& tkGenericParam, Int32& tkConstraintType);
    public abstract virtual void GetPEKind_();
    public abstract virtual void GetVersionString_();
    public abstract virtual void EnumMethodSpecs(IntPtr& hEnum, int tk, Int32& rMethodSpecs, int cMax, Int32& pcMethodSpecs);
}
[GuidAttribute("D8F579AB-402D-4b8e-82D9-5D63B1065C68")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Samples.Debugging.CorMetadata.NativeApi.IMetadataTables {
    public abstract virtual void GetStringHeapSize(UInt32& countBytesStrings);
    public abstract virtual void GetBlobHeapSize(UInt32& countBytesBlobs);
    public abstract virtual void GetGuidHeapSize(UInt32& countBytesGuids);
    public abstract virtual void GetUserStringHeapSize(UInt32& countByteBlobs);
    public abstract virtual void GetNumTables(UInt32& countTables);
    public abstract virtual void GetTableIndex(UInt32 token, UInt32& tableIndex);
    public abstract virtual void GetTableInfo(UInt32 tableIndex, UInt32& countByteRows, UInt32& countRows, UInt32& countColumns, UInt32& columnPrimaryKey, IntPtr& name);
}
[GuidAttribute("E5CB7A31-7512-11d2-89CE-0080C792E5D8")]
public class Microsoft.Samples.Debugging.CorMetadata.NativeApi.MetaDataDispenser : object {
}
public class Microsoft.Samples.Debugging.CorMetadata.NativeApi.OSINFO : ValueType {
    public int dwOSPlatformId;
    public int dwOSMajorVersion;
    public int dwOSMinorVersion;
}
internal class Microsoft.Samples.Debugging.CorMetadata.TypeDefEnum : object {
    private CorMetadataImport m_corMeta;
    private IntPtr m_enum;
    private Type m_type;
    public object Current { get; }
    public TypeDefEnum(CorMetadataImport corMeta);
    protected virtual override void Finalize();
    public sealed virtual void Dispose();
    public sealed virtual IEnumerator GetEnumerator();
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
    public sealed virtual object get_Current();
    protected void DestroyEnum();
}
