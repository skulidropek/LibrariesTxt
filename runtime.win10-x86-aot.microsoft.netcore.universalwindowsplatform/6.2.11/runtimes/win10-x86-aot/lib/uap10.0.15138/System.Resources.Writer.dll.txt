internal static class FxResources.System.Resources.Writer.SR : object {
}
internal class System.Resources.FastResourceComparer : object {
    internal static FastResourceComparer Default;
    private static FastResourceComparer();
    public sealed virtual int GetHashCode(string key);
    internal static int HashFunction(string key);
    public sealed virtual int Compare(string a, string b);
    public sealed virtual bool Equals(string a, string b);
}
public interface System.Resources.IResourceWriter {
    public abstract virtual void AddResource(string name, string value);
    public abstract virtual void AddResource(string name, object value);
    public abstract virtual void AddResource(string name, Byte[] value);
    public abstract virtual void Close();
    public abstract virtual void Generate();
}
internal enum System.Resources.ResourceTypeCode : Enum {
    public int value__;
    public static ResourceTypeCode Null;
    public static ResourceTypeCode String;
    public static ResourceTypeCode Boolean;
    public static ResourceTypeCode Char;
    public static ResourceTypeCode Byte;
    public static ResourceTypeCode SByte;
    public static ResourceTypeCode Int16;
    public static ResourceTypeCode UInt16;
    public static ResourceTypeCode Int32;
    public static ResourceTypeCode UInt32;
    public static ResourceTypeCode Int64;
    public static ResourceTypeCode UInt64;
    public static ResourceTypeCode Single;
    public static ResourceTypeCode Double;
    public static ResourceTypeCode Decimal;
    public static ResourceTypeCode DateTime;
    public static ResourceTypeCode TimeSpan;
    public static ResourceTypeCode LastPrimitive;
    public static ResourceTypeCode ByteArray;
    public static ResourceTypeCode Stream;
    public static ResourceTypeCode StartOfUserTypes;
}
public class System.Resources.ResourceWriter : object {
    private static int AverageNameSize;
    private static int AverageValueSize;
    private static string ResourceReaderFullyQualifiedName;
    private static string ResSetTypeName;
    private static int ResSetVersion;
    private SortedDictionary`2<string, object> _resourceList;
    private Stream _output;
    private Dictionary`2<string, object> _caseInsensitiveDups;
    private Dictionary`2<string, PrecannedResource> _preserializedData;
    [CompilerGeneratedAttribute]
private Func`2<Type, string> <TypeNameConverter>k__BackingField;
    public Func`2<Type, string> TypeNameConverter { get; public set; }
    public ResourceWriter(string fileName);
    public ResourceWriter(Stream stream);
    [CompilerGeneratedAttribute]
public Func`2<Type, string> get_TypeNameConverter();
    [CompilerGeneratedAttribute]
public void set_TypeNameConverter(Func`2<Type, string> value);
    public sealed virtual void AddResource(string name, string value);
    public sealed virtual void AddResource(string name, object value);
    public void AddResource(string name, Stream value);
    public void AddResource(string name, Stream value, bool closeAfterWrite);
    private void AddResourceInternal(string name, Stream value, bool closeAfterWrite);
    public sealed virtual void AddResource(string name, Byte[] value);
    public void AddResourceData(string name, string typeName, Byte[] serializedData);
    public sealed virtual void Close();
    private void Dispose(bool disposing);
    public sealed virtual void Dispose();
    public sealed virtual void Generate();
    private static void Write7BitEncodedInt(BinaryWriter store, int value);
    private ResourceTypeCode FindTypeCode(object value, List`1<string> types);
    private void WriteValue(ResourceTypeCode typeCode, object value, BinaryWriter writer);
}
[AttributeUsageAttribute("32767")]
internal class System.Runtime.CompilerServices.__BlockReflectionAttribute : Attribute {
}
internal static class System.Runtime.Versioning.MultitargetingHelpers : object {
    internal static string GetAssemblyQualifiedName(Type type, Func`2<Type, string> converter);
    private static bool IsCriticalException(Exception ex);
    private static bool IsSecurityOrCriticalException(Exception ex);
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static Type <ResourceType>k__BackingField;
    private static ResourceManager ResourceManager { get; }
    internal static Type ResourceType { get; }
    internal static string InvalidOperation_ResourceWriterSaved { get; }
    internal static string Argument_StreamNotWritable { get; }
    internal static string NotSupported_UnseekableStream { get; }
    internal static string NotSupported_BinarySerializedResources { get; }
    internal static string ArgumentOutOfRange_StreamLength { get; }
    private static SR();
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    [CompilerGeneratedAttribute]
internal static Type get_ResourceType();
    internal static string get_InvalidOperation_ResourceWriterSaved();
    internal static string get_Argument_StreamNotWritable();
    internal static string get_NotSupported_UnseekableStream();
    internal static string get_NotSupported_BinarySerializedResources();
    internal static string get_ArgumentOutOfRange_StreamLength();
}
