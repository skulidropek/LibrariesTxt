public abstract class SendGrid.BaseClient : object {
    private static string ContentType;
    private static string DefaultMediaType;
    private static string ClientVersion;
    private BaseClientOptions options;
    private HttpClient client;
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    public string UrlPath { get; public set; }
    public string Version { get; public set; }
    public string MediaType { get; public set; }
    protected BaseClient(BaseClientOptions options);
    protected BaseClient(IWebProxy webProxy, BaseClientOptions options);
    protected BaseClient(HttpClient httpClient, BaseClientOptions options);
    private static BaseClient();
    public sealed virtual string get_UrlPath();
    public sealed virtual void set_UrlPath(string value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MediaType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaType(string value);
    public virtual AuthenticationHeaderValue AddAuthorization(KeyValuePair`2<string, string> header);
    [AsyncStateMachineAttribute("SendGrid.BaseClient/<MakeRequest>d__20")]
public virtual Task`1<Response> MakeRequest(HttpRequestMessage request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("SendGrid.BaseClient/<RequestAsync>d__21")]
public sealed virtual Task`1<Response> RequestAsync(Method method, string requestBody, string queryParams, string urlPath, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("SendGrid.BaseClient/<SendEmailAsync>d__22")]
public sealed virtual Task`1<Response> SendEmailAsync(SendGridMessage msg, CancellationToken cancellationToken);
    private static HttpClient CreateHttpClientWithRetryHandler(BaseClientOptions options);
    private static HttpClient CreateHttpClientWithWebProxy(IWebProxy webProxy, BaseClientOptions options);
    private string BuildUrl(string urlPath, string queryParams);
    private Dictionary`2<string, List`1<object>> ParseJson(string json);
}
public class SendGrid.BaseClientOptions : object {
    private ReliabilitySettings reliabilitySettings;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <RequestHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UrlPath>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationHeaderValue <Auth>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HttpErrorAsException>k__BackingField;
    public ReliabilitySettings ReliabilitySettings { get; public set; }
    public Dictionary`2<string, string> RequestHeaders { get; public set; }
    public string Host { get; public set; }
    public string Version { get; public set; }
    public string UrlPath { get; public set; }
    public AuthenticationHeaderValue Auth { get; public set; }
    public bool HttpErrorAsException { get; public set; }
    public ReliabilitySettings get_ReliabilitySettings();
    public void set_ReliabilitySettings(ReliabilitySettings value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_RequestHeaders();
    [CompilerGeneratedAttribute]
public void set_RequestHeaders(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_UrlPath();
    [CompilerGeneratedAttribute]
public void set_UrlPath(string value);
    [CompilerGeneratedAttribute]
public AuthenticationHeaderValue get_Auth();
    [CompilerGeneratedAttribute]
public void set_Auth(AuthenticationHeaderValue value);
    [CompilerGeneratedAttribute]
public bool get_HttpErrorAsException();
    [CompilerGeneratedAttribute]
public void set_HttpErrorAsException(bool value);
}
public class SendGrid.Helpers.Errors.ErrorHandler : object {
    [AsyncStateMachineAttribute("SendGrid.Helpers.Errors.ErrorHandler/<ThrowException>d__0")]
public static Task ThrowException(HttpResponseMessage message);
    [AsyncStateMachineAttribute("SendGrid.Helpers.Errors.ErrorHandler/<GetErrorMessage>d__1")]
private static Task`1<string> GetErrorMessage(HttpResponseMessage message);
}
public class SendGrid.Helpers.Errors.Model.BadRequestException : RequestErrorException {
    public BadRequestException(string message);
    public BadRequestException(string message, Exception innerException);
}
public class SendGrid.Helpers.Errors.Model.ForbiddenException : RequestErrorException {
    public ForbiddenException(string message);
    public ForbiddenException(string message, Exception innerException);
}
public class SendGrid.Helpers.Errors.Model.MethodNotAllowedException : RequestErrorException {
    public MethodNotAllowedException(string message);
    public MethodNotAllowedException(string message, Exception innerException);
}
public class SendGrid.Helpers.Errors.Model.NotFoundException : RequestErrorException {
    public NotFoundException(string message);
    public NotFoundException(string message, Exception innerException);
}
public class SendGrid.Helpers.Errors.Model.PayloadTooLargeException : RequestErrorException {
    public PayloadTooLargeException(string message);
    public PayloadTooLargeException(string message, Exception innerException);
}
public class SendGrid.Helpers.Errors.Model.RequestErrorException : Exception {
    public RequestErrorException(string message);
    public RequestErrorException(string message, Exception innerException);
}
public class SendGrid.Helpers.Errors.Model.SendGridErrorResponse : object {
    [CompilerGeneratedAttribute]
private int <ErrorHttpStatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorReasonPhrase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SendGridErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldWithError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HelpLink>k__BackingField;
    public int ErrorHttpStatusCode { get; public set; }
    public string ErrorReasonPhrase { get; public set; }
    public string SendGridErrorMessage { get; public set; }
    public string FieldWithError { get; public set; }
    public string HelpLink { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ErrorHttpStatusCode();
    [CompilerGeneratedAttribute]
public void set_ErrorHttpStatusCode(int value);
    [CompilerGeneratedAttribute]
public string get_ErrorReasonPhrase();
    [CompilerGeneratedAttribute]
public void set_ErrorReasonPhrase(string value);
    [CompilerGeneratedAttribute]
public string get_SendGridErrorMessage();
    [CompilerGeneratedAttribute]
public void set_SendGridErrorMessage(string value);
    [CompilerGeneratedAttribute]
public string get_FieldWithError();
    [CompilerGeneratedAttribute]
public void set_FieldWithError(string value);
    [CompilerGeneratedAttribute]
public string get_HelpLink();
    [CompilerGeneratedAttribute]
public void set_HelpLink(string value);
}
public class SendGrid.Helpers.Errors.Model.SendGridInternalException : Exception {
    public SendGridInternalException(string message);
    public SendGridInternalException(string message, Exception innerException);
}
public class SendGrid.Helpers.Errors.Model.ServerUnavailableException : SendGridInternalException {
    public ServerUnavailableException(string message);
    public ServerUnavailableException(string message, Exception innerException);
}
public class SendGrid.Helpers.Errors.Model.ServiceNotAvailableException : SendGridInternalException {
    public ServiceNotAvailableException(string message);
    public ServiceNotAvailableException(string message, Exception innerException);
}
public class SendGrid.Helpers.Errors.Model.TooManyRequestsException : RequestErrorException {
    public TooManyRequestsException(string message);
    public TooManyRequestsException(string message, Exception innerException);
}
public class SendGrid.Helpers.Errors.Model.UnauthorizedException : RequestErrorException {
    public UnauthorizedException(string message);
    public UnauthorizedException(string message, Exception innerException);
}
public class SendGrid.Helpers.Errors.Model.UnsupportedMediaTypeException : RequestErrorException {
    public UnsupportedMediaTypeException(string message);
    public UnsupportedMediaTypeException(string message, Exception innerException);
}
public class SendGrid.Helpers.EventWebhook.RequestValidator : object {
    public static string SIGNATURE_HEADER;
    public static string TIMESTAMP_HEADER;
    public PublicKey ConvertPublicKeyToECDSA(string publicKey);
    public bool VerifySignature(PublicKey publicKey, string payload, string signature, string timestamp);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.ASM : object {
    [CompilerGeneratedAttribute]
private int <GroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <GroupsToDisplay>k__BackingField;
    [JsonPropertyAttribute]
public int GroupId { get; public set; }
    [JsonPropertyAttribute]
public List`1<int> GroupsToDisplay { get; public set; }
    [CompilerGeneratedAttribute]
public int get_GroupId();
    [CompilerGeneratedAttribute]
public void set_GroupId(int value);
    [CompilerGeneratedAttribute]
public List`1<int> get_GroupsToDisplay();
    [CompilerGeneratedAttribute]
public void set_GroupsToDisplay(List`1<int> value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.Attachment : object {
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Filename>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Disposition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentId>k__BackingField;
    [JsonPropertyAttribute]
public string Content { get; public set; }
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string Filename { get; public set; }
    [JsonPropertyAttribute]
public string Disposition { get; public set; }
    [JsonPropertyAttribute]
public string ContentId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Filename();
    [CompilerGeneratedAttribute]
public void set_Filename(string value);
    [CompilerGeneratedAttribute]
public string get_Disposition();
    [CompilerGeneratedAttribute]
public void set_Disposition(string value);
    [CompilerGeneratedAttribute]
public string get_ContentId();
    [CompilerGeneratedAttribute]
public void set_ContentId(string value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.BCCSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<bool> Enable { get; public set; }
    [JsonPropertyAttribute]
public string Email { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.BypassBounceManagement : object {
    [CompilerGeneratedAttribute]
private bool <Enable>k__BackingField;
    [JsonPropertyAttribute]
public bool Enable { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(bool value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.BypassListManagement : object {
    [CompilerGeneratedAttribute]
private bool <Enable>k__BackingField;
    [JsonPropertyAttribute]
public bool Enable { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(bool value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.BypassSpamManagement : object {
    [CompilerGeneratedAttribute]
private bool <Enable>k__BackingField;
    [JsonPropertyAttribute]
public bool Enable { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(bool value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.BypassUnsubscribeManagement : object {
    [CompilerGeneratedAttribute]
private bool <Enable>k__BackingField;
    [JsonPropertyAttribute]
public bool Enable { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(bool value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.ClickTracking : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableText>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<bool> Enable { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> EnableText { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_EnableText();
    [CompilerGeneratedAttribute]
public void set_EnableText(Nullable`1<bool> value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.Content : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    public Content(string type, string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.EmailAddress : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Email { get; public set; }
    public EmailAddress(string email, string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    public static bool op_Equality(EmailAddress left, EmailAddress right);
    public static bool op_Inequality(EmailAddress left, EmailAddress right);
    public sealed virtual bool Equals(EmailAddress other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.FooterSettings : object {
    [CompilerGeneratedAttribute]
private bool <Enable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Html>k__BackingField;
    [JsonPropertyAttribute]
public bool Enable { get; public set; }
    [JsonPropertyAttribute]
public string Text { get; public set; }
    [JsonPropertyAttribute]
public string Html { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(bool value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public string get_Html();
    [CompilerGeneratedAttribute]
public void set_Html(string value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.Ganalytics : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UtmSource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UtmMedium>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UtmTerm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UtmContent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UtmCampaign>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<bool> Enable { get; public set; }
    [JsonPropertyAttribute]
public string UtmSource { get; public set; }
    [JsonPropertyAttribute]
public string UtmMedium { get; public set; }
    [JsonPropertyAttribute]
public string UtmTerm { get; public set; }
    [JsonPropertyAttribute]
public string UtmContent { get; public set; }
    [JsonPropertyAttribute]
public string UtmCampaign { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_UtmSource();
    [CompilerGeneratedAttribute]
public void set_UtmSource(string value);
    [CompilerGeneratedAttribute]
public string get_UtmMedium();
    [CompilerGeneratedAttribute]
public void set_UtmMedium(string value);
    [CompilerGeneratedAttribute]
public string get_UtmTerm();
    [CompilerGeneratedAttribute]
public void set_UtmTerm(string value);
    [CompilerGeneratedAttribute]
public string get_UtmContent();
    [CompilerGeneratedAttribute]
public void set_UtmContent(string value);
    [CompilerGeneratedAttribute]
public string get_UtmCampaign();
    [CompilerGeneratedAttribute]
public void set_UtmCampaign(string value);
}
public class SendGrid.Helpers.Mail.MailHelper : object {
    private static string NameGroup;
    private static string EmailGroup;
    private static Regex Rfc2822Regex;
    private static MailHelper();
    public static SendGridMessage CreateSingleEmail(EmailAddress from, EmailAddress to, string subject, string plainTextContent, string htmlContent);
    public static SendGridMessage CreateSingleTemplateEmail(EmailAddress from, EmailAddress to, string templateId, object dynamicTemplateData);
    public static SendGridMessage CreateSingleEmailToMultipleRecipients(EmailAddress from, List`1<EmailAddress> tos, string subject, string plainTextContent, string htmlContent);
    public static SendGridMessage CreateSingleTemplateEmailToMultipleRecipients(EmailAddress from, List`1<EmailAddress> tos, string templateId, object dynamicTemplateData);
    public static SendGridMessage CreateMultipleEmailsToMultipleRecipients(EmailAddress from, List`1<EmailAddress> tos, List`1<string> subjects, string plainTextContent, string htmlContent, List`1<Dictionary`2<string, string>> substitutions);
    public static SendGridMessage CreateMultipleTemplateEmailsToMultipleRecipients(EmailAddress from, List`1<EmailAddress> tos, string templateId, List`1<object> dynamicTemplateData);
    public static EmailAddress StringToEmailAddress(string rfc2822Email);
    public static SendGridMessage CreateSingleEmailToMultipleRecipients(EmailAddress from, List`1<EmailAddress> tos, string subject, string plainTextContent, string htmlContent, bool showAllRecipients);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.MailSettings : object {
    [CompilerGeneratedAttribute]
private BCCSettings <BccSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private BypassListManagement <BypassListManagement>k__BackingField;
    [CompilerGeneratedAttribute]
private BypassSpamManagement <BypassSpamManagement>k__BackingField;
    [CompilerGeneratedAttribute]
private BypassBounceManagement <BypassBounceManagement>k__BackingField;
    [CompilerGeneratedAttribute]
private BypassUnsubscribeManagement <BypassUnsubscribeManagement>k__BackingField;
    [CompilerGeneratedAttribute]
private FooterSettings <FooterSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private SandboxMode <SandboxMode>k__BackingField;
    [CompilerGeneratedAttribute]
private SpamCheck <SpamCheck>k__BackingField;
    [JsonPropertyAttribute]
public BCCSettings BccSettings { get; public set; }
    [JsonPropertyAttribute]
public BypassListManagement BypassListManagement { get; public set; }
    [JsonPropertyAttribute]
public BypassSpamManagement BypassSpamManagement { get; public set; }
    [JsonPropertyAttribute]
public BypassBounceManagement BypassBounceManagement { get; public set; }
    [JsonPropertyAttribute]
public BypassUnsubscribeManagement BypassUnsubscribeManagement { get; public set; }
    [JsonPropertyAttribute]
public FooterSettings FooterSettings { get; public set; }
    [JsonPropertyAttribute]
public SandboxMode SandboxMode { get; public set; }
    [JsonPropertyAttribute]
public SpamCheck SpamCheck { get; public set; }
    [CompilerGeneratedAttribute]
public BCCSettings get_BccSettings();
    [CompilerGeneratedAttribute]
public void set_BccSettings(BCCSettings value);
    [CompilerGeneratedAttribute]
public BypassListManagement get_BypassListManagement();
    [CompilerGeneratedAttribute]
public void set_BypassListManagement(BypassListManagement value);
    [CompilerGeneratedAttribute]
public BypassSpamManagement get_BypassSpamManagement();
    [CompilerGeneratedAttribute]
public void set_BypassSpamManagement(BypassSpamManagement value);
    [CompilerGeneratedAttribute]
public BypassBounceManagement get_BypassBounceManagement();
    [CompilerGeneratedAttribute]
public void set_BypassBounceManagement(BypassBounceManagement value);
    [CompilerGeneratedAttribute]
public BypassUnsubscribeManagement get_BypassUnsubscribeManagement();
    [CompilerGeneratedAttribute]
public void set_BypassUnsubscribeManagement(BypassUnsubscribeManagement value);
    [CompilerGeneratedAttribute]
public FooterSettings get_FooterSettings();
    [CompilerGeneratedAttribute]
public void set_FooterSettings(FooterSettings value);
    [CompilerGeneratedAttribute]
public SandboxMode get_SandboxMode();
    [CompilerGeneratedAttribute]
public void set_SandboxMode(SandboxMode value);
    [CompilerGeneratedAttribute]
public SpamCheck get_SpamCheck();
    [CompilerGeneratedAttribute]
public void set_SpamCheck(SpamCheck value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.Model.HtmlContent : Content {
    public HtmlContent(string value);
}
public class SendGrid.Helpers.Mail.Model.PlainTextContent : Content {
    public PlainTextContent(string value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.OpenTracking : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubstitutionTag>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<bool> Enable { get; public set; }
    [JsonPropertyAttribute]
public string SubstitutionTag { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_SubstitutionTag();
    [CompilerGeneratedAttribute]
public void set_SubstitutionTag(string value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.Personalization : object {
    [CompilerGeneratedAttribute]
private List`1<EmailAddress> <Tos>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EmailAddress> <Ccs>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EmailAddress> <Bccs>k__BackingField;
    [CompilerGeneratedAttribute]
private EmailAddress <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Substitutions>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <CustomArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SendAt>k__BackingField;
    [CompilerGeneratedAttribute]
private object <TemplateData>k__BackingField;
    [JsonPropertyAttribute]
[JsonConverterAttribute("SendGrid.Helpers.Mail.RemoveDuplicatesConverter`1<SendGrid.Helpers.Mail.EmailAddress>")]
public List`1<EmailAddress> Tos { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("SendGrid.Helpers.Mail.RemoveDuplicatesConverter`1<SendGrid.Helpers.Mail.EmailAddress>")]
public List`1<EmailAddress> Ccs { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("SendGrid.Helpers.Mail.RemoveDuplicatesConverter`1<SendGrid.Helpers.Mail.EmailAddress>")]
public List`1<EmailAddress> Bccs { get; public set; }
    [JsonPropertyAttribute]
public EmailAddress From { get; public set; }
    [JsonPropertyAttribute]
public string Subject { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Headers { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Substitutions { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> CustomArgs { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> SendAt { get; public set; }
    [JsonPropertyAttribute]
public object TemplateData { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<EmailAddress> get_Tos();
    [CompilerGeneratedAttribute]
public void set_Tos(List`1<EmailAddress> value);
    [CompilerGeneratedAttribute]
public List`1<EmailAddress> get_Ccs();
    [CompilerGeneratedAttribute]
public void set_Ccs(List`1<EmailAddress> value);
    [CompilerGeneratedAttribute]
public List`1<EmailAddress> get_Bccs();
    [CompilerGeneratedAttribute]
public void set_Bccs(List`1<EmailAddress> value);
    [CompilerGeneratedAttribute]
public EmailAddress get_From();
    [CompilerGeneratedAttribute]
public void set_From(EmailAddress value);
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Substitutions();
    [CompilerGeneratedAttribute]
public void set_Substitutions(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_CustomArgs();
    [CompilerGeneratedAttribute]
public void set_CustomArgs(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SendAt();
    [CompilerGeneratedAttribute]
public void set_SendAt(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public object get_TemplateData();
    [CompilerGeneratedAttribute]
public void set_TemplateData(object value);
}
public class SendGrid.Helpers.Mail.RemoveDuplicatesConverter`1 : JsonConverter {
    public bool CanRead { get; }
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual bool get_CanRead();
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.SandboxMode : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enable>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<bool> Enable { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(Nullable`1<bool> value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.SendGridMessage : object {
    [CompilerGeneratedAttribute]
private EmailAddress <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Personalization> <Personalizations>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Content> <Contents>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlainTextContent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HtmlContent>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Attachment> <Attachments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Sections>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <CustomArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SendAt>k__BackingField;
    [CompilerGeneratedAttribute]
private ASM <Asm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BatchId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IpPoolName>k__BackingField;
    [CompilerGeneratedAttribute]
private MailSettings <MailSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private TrackingSettings <TrackingSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private EmailAddress <ReplyTo>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EmailAddress> <ReplyTos>k__BackingField;
    [JsonPropertyAttribute]
public EmailAddress From { get; public set; }
    [JsonPropertyAttribute]
public string Subject { get; public set; }
    [JsonPropertyAttribute]
public List`1<Personalization> Personalizations { get; public set; }
    [JsonPropertyAttribute]
public List`1<Content> Contents { get; public set; }
    [JsonIgnoreAttribute]
public string PlainTextContent { get; public set; }
    [JsonIgnoreAttribute]
public string HtmlContent { get; public set; }
    [JsonPropertyAttribute]
public List`1<Attachment> Attachments { get; public set; }
    [JsonPropertyAttribute]
public string TemplateId { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Headers { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Sections { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Categories { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> CustomArgs { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> SendAt { get; public set; }
    [JsonPropertyAttribute]
public ASM Asm { get; public set; }
    [JsonPropertyAttribute]
public string BatchId { get; public set; }
    [JsonPropertyAttribute]
public string IpPoolName { get; public set; }
    [JsonPropertyAttribute]
public MailSettings MailSettings { get; public set; }
    [JsonPropertyAttribute]
public TrackingSettings TrackingSettings { get; public set; }
    [JsonPropertyAttribute]
public EmailAddress ReplyTo { get; public set; }
    [JsonPropertyAttribute]
public List`1<EmailAddress> ReplyTos { get; public set; }
    [CompilerGeneratedAttribute]
public EmailAddress get_From();
    [CompilerGeneratedAttribute]
public void set_From(EmailAddress value);
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(string value);
    [CompilerGeneratedAttribute]
public List`1<Personalization> get_Personalizations();
    [CompilerGeneratedAttribute]
public void set_Personalizations(List`1<Personalization> value);
    [CompilerGeneratedAttribute]
public List`1<Content> get_Contents();
    [CompilerGeneratedAttribute]
public void set_Contents(List`1<Content> value);
    [CompilerGeneratedAttribute]
public string get_PlainTextContent();
    [CompilerGeneratedAttribute]
public void set_PlainTextContent(string value);
    [CompilerGeneratedAttribute]
public string get_HtmlContent();
    [CompilerGeneratedAttribute]
public void set_HtmlContent(string value);
    [CompilerGeneratedAttribute]
public List`1<Attachment> get_Attachments();
    [CompilerGeneratedAttribute]
public void set_Attachments(List`1<Attachment> value);
    [CompilerGeneratedAttribute]
public string get_TemplateId();
    [CompilerGeneratedAttribute]
public void set_TemplateId(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Sections();
    [CompilerGeneratedAttribute]
public void set_Sections(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(List`1<string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_CustomArgs();
    [CompilerGeneratedAttribute]
public void set_CustomArgs(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SendAt();
    [CompilerGeneratedAttribute]
public void set_SendAt(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public ASM get_Asm();
    [CompilerGeneratedAttribute]
public void set_Asm(ASM value);
    [CompilerGeneratedAttribute]
public string get_BatchId();
    [CompilerGeneratedAttribute]
public void set_BatchId(string value);
    [CompilerGeneratedAttribute]
public string get_IpPoolName();
    [CompilerGeneratedAttribute]
public void set_IpPoolName(string value);
    [CompilerGeneratedAttribute]
public MailSettings get_MailSettings();
    [CompilerGeneratedAttribute]
public void set_MailSettings(MailSettings value);
    [CompilerGeneratedAttribute]
public TrackingSettings get_TrackingSettings();
    [CompilerGeneratedAttribute]
public void set_TrackingSettings(TrackingSettings value);
    [CompilerGeneratedAttribute]
public EmailAddress get_ReplyTo();
    [CompilerGeneratedAttribute]
public void set_ReplyTo(EmailAddress value);
    [CompilerGeneratedAttribute]
public List`1<EmailAddress> get_ReplyTos();
    [CompilerGeneratedAttribute]
public void set_ReplyTos(List`1<EmailAddress> value);
    public void AddTo(string email, string name);
    public void AddTo(EmailAddress email, int personalizationIndex, Personalization personalization);
    public void AddTos(List`1<EmailAddress> emails, int personalizationIndex, Personalization personalization);
    public void AddCc(string email, string name);
    public void AddCc(EmailAddress email, int personalizationIndex, Personalization personalization);
    public void AddCcs(List`1<EmailAddress> emails, int personalizationIndex, Personalization personalization);
    public void AddBcc(string email, string name);
    public void AddBcc(EmailAddress email, int personalizationIndex, Personalization personalization);
    public void AddBccs(List`1<EmailAddress> emails, int personalizationIndex, Personalization personalization);
    public void SetSubject(string subject, int personalizationIndex, Personalization personalization);
    public void AddHeader(string headerKey, string headerValue, int personalizationIndex, Personalization personalization);
    public void AddHeaders(Dictionary`2<string, string> headers, int personalizationIndex, Personalization personalization);
    public void AddReplyTo(string email, string name);
    public void AddReplyTo(EmailAddress email);
    public void AddReplyTos(List`1<EmailAddress> emails);
    public void AddSubstitution(string substitutionKey, string substitutionValue, int personalizationIndex, Personalization personalization);
    public void AddSubstitutions(Dictionary`2<string, string> substitutions, int personalizationIndex, Personalization personalization);
    public void SetTemplateData(object dynamicTemplateData, int personalizationIndex, Personalization personalization);
    public void AddCustomArg(string customArgKey, string customArgValue, int personalizationIndex, Personalization personalization);
    public void AddCustomArgs(Dictionary`2<string, string> customArgs, int personalizationIndex, Personalization personalization);
    public void SetSendAt(long sendAt, int personalizationIndex, Personalization personalization);
    private Personalization GetPersonalization(int personalizationIndex, Personalization personalization);
    public void SetFrom(string email, string name);
    public void SetFrom(EmailAddress email);
    public void SetReplyTo(EmailAddress email);
    public void SetGlobalSubject(string subject);
    public void AddContent(string mimeType, string text);
    public void AddContents(List`1<Content> contents);
    [AsyncStateMachineAttribute("SendGrid.Helpers.Mail.SendGridMessage/<AddAttachmentAsync>d__108")]
public Task AddAttachmentAsync(string filename, Stream contentStream, string type, string disposition, string content_id, CancellationToken cancellationToken);
    public void AddAttachment(string filename, string base64Content, string type, string disposition, string content_id);
    public void AddAttachment(Attachment attachment);
    public void AddAttachments(IEnumerable`1<Attachment> attachments);
    public void SetTemplateId(string templateID);
    public void AddSection(string key, string value);
    public void AddSections(Dictionary`2<string, string> sections);
    public void AddGlobalHeader(string key, string value);
    public void AddGlobalHeaders(Dictionary`2<string, string> headers);
    public void AddCategory(string category);
    public void AddCategories(List`1<string> categories);
    public void AddGlobalCustomArg(string key, string value);
    public void AddGlobalCustomArgs(Dictionary`2<string, string> customArgs);
    public void SetGlobalSendAt(int sendAt);
    public void SetBatchId(string batchId);
    public void SetAsm(int groupID, List`1<int> groupsToDisplay);
    public void SetIpPoolName(string ipPoolName);
    public void SetBccSetting(bool enable, string email);
    public void SetBypassListManagement(bool enable);
    public void SetBypassSpamManagement(bool enable);
    public void SetBypassBounceManagement(bool enable);
    public void SetBypassUnsubscribeManagement(bool enable);
    public void SetFooterSetting(bool enable, string html, string text);
    public void SetSandBoxMode(bool enable);
    public void SetSpamCheck(bool enable, int threshold, string postToUrl);
    public void SetClickTracking(bool enable, bool enableText);
    public void SetOpenTracking(bool enable, string substitutionTag);
    public void SetSubscriptionTracking(bool enable, string html, string text, string substitutionTag);
    public void SetGoogleAnalytics(bool enable, string utmCampaign, string utmContent, string utmMedium, string utmSource, string utmTerm);
    public string Serialize(bool useDefaultSerialization);
    public static SendGridMessage Deserialize(string json);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.SpamCheck : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Threshold>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PostToUrl>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<bool> Enable { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> Threshold { get; public set; }
    [JsonPropertyAttribute]
public string PostToUrl { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Threshold();
    [CompilerGeneratedAttribute]
public void set_Threshold(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_PostToUrl();
    [CompilerGeneratedAttribute]
public void set_PostToUrl(string value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.SubscriptionTracking : object {
    [CompilerGeneratedAttribute]
private bool <Enable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Html>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubstitutionTag>k__BackingField;
    [JsonPropertyAttribute]
public bool Enable { get; public set; }
    [JsonPropertyAttribute]
public string Text { get; public set; }
    [JsonPropertyAttribute]
public string Html { get; public set; }
    [JsonPropertyAttribute]
public string SubstitutionTag { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enable();
    [CompilerGeneratedAttribute]
public void set_Enable(bool value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public string get_Html();
    [CompilerGeneratedAttribute]
public void set_Html(string value);
    [CompilerGeneratedAttribute]
public string get_SubstitutionTag();
    [CompilerGeneratedAttribute]
public void set_SubstitutionTag(string value);
}
[JsonObjectAttribute]
public class SendGrid.Helpers.Mail.TrackingSettings : object {
    [CompilerGeneratedAttribute]
private ClickTracking <ClickTracking>k__BackingField;
    [CompilerGeneratedAttribute]
private OpenTracking <OpenTracking>k__BackingField;
    [CompilerGeneratedAttribute]
private SubscriptionTracking <SubscriptionTracking>k__BackingField;
    [CompilerGeneratedAttribute]
private Ganalytics <Ganalytics>k__BackingField;
    [JsonPropertyAttribute]
public ClickTracking ClickTracking { get; public set; }
    [JsonPropertyAttribute]
public OpenTracking OpenTracking { get; public set; }
    [JsonPropertyAttribute]
public SubscriptionTracking SubscriptionTracking { get; public set; }
    [JsonPropertyAttribute]
public Ganalytics Ganalytics { get; public set; }
    [CompilerGeneratedAttribute]
public ClickTracking get_ClickTracking();
    [CompilerGeneratedAttribute]
public void set_ClickTracking(ClickTracking value);
    [CompilerGeneratedAttribute]
public OpenTracking get_OpenTracking();
    [CompilerGeneratedAttribute]
public void set_OpenTracking(OpenTracking value);
    [CompilerGeneratedAttribute]
public SubscriptionTracking get_SubscriptionTracking();
    [CompilerGeneratedAttribute]
public void set_SubscriptionTracking(SubscriptionTracking value);
    [CompilerGeneratedAttribute]
public Ganalytics get_Ganalytics();
    [CompilerGeneratedAttribute]
public void set_Ganalytics(Ganalytics value);
}
[ExtensionAttribute]
internal static class SendGrid.Helpers.Net40.TypeExtensions : object {
    [ExtensionAttribute]
public static Type GetTypeInfo(Type type);
}
public class SendGrid.Helpers.Reliability.ReliabilitySettings : object {
    [CompilerGeneratedAttribute]
private int <MaximumNumberOfRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <MinimumBackOff>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <MaximumBackOff>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DeltaBackOff>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<HttpStatusCode> <RetriableServerErrorStatusCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private static List`1<HttpStatusCode> <DefaultRetriableServerErrorStatusCodes>k__BackingField;
    public int MaximumNumberOfRetries { get; }
    public TimeSpan MinimumBackOff { get; }
    public TimeSpan MaximumBackOff { get; }
    public TimeSpan DeltaBackOff { get; }
    public List`1<HttpStatusCode> RetriableServerErrorStatusCodes { get; }
    public static List`1<HttpStatusCode> DefaultRetriableServerErrorStatusCodes { get; }
    public ReliabilitySettings(int maximumNumberOfRetries, TimeSpan minimumBackoff, TimeSpan maximumBackOff, TimeSpan deltaBackOff);
    private static ReliabilitySettings();
    [CompilerGeneratedAttribute]
public int get_MaximumNumberOfRetries();
    [CompilerGeneratedAttribute]
public TimeSpan get_MinimumBackOff();
    [CompilerGeneratedAttribute]
public TimeSpan get_MaximumBackOff();
    [CompilerGeneratedAttribute]
public TimeSpan get_DeltaBackOff();
    [CompilerGeneratedAttribute]
public List`1<HttpStatusCode> get_RetriableServerErrorStatusCodes();
    [CompilerGeneratedAttribute]
public static List`1<HttpStatusCode> get_DefaultRetriableServerErrorStatusCodes();
}
public class SendGrid.Helpers.Reliability.RetryDelegatingHandler : DelegatingHandler {
    private ReliabilitySettings settings;
    public RetryDelegatingHandler(ReliabilitySettings settings);
    public RetryDelegatingHandler(HttpMessageHandler innerHandler, ReliabilitySettings settings);
    [AsyncStateMachineAttribute("SendGrid.Helpers.Reliability.RetryDelegatingHandler/<SendAsync>d__3")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    private void ThrowHttpRequestExceptionIfResponseCodeCanBeRetried(HttpResponseMessage responseMessage);
    private TimeSpan GetNextWaitInterval(int numberOfAttempts);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
internal static class SendGrid.Helpers.TaskUtilities : object {
    public static Task Delay(TimeSpan delay, CancellationToken cancellationToken);
}
public interface SendGrid.ISendGridClient {
    public string UrlPath { get; public set; }
    public string Version { get; public set; }
    public string MediaType { get; public set; }
    public abstract virtual string get_UrlPath();
    public abstract virtual void set_UrlPath(string value);
    public abstract virtual string get_Version();
    public abstract virtual void set_Version(string value);
    public abstract virtual string get_MediaType();
    public abstract virtual void set_MediaType(string value);
    public abstract virtual AuthenticationHeaderValue AddAuthorization(KeyValuePair`2<string, string> header);
    public abstract virtual Task`1<Response> MakeRequest(HttpRequestMessage request, CancellationToken cancellationToken);
    public abstract virtual Task`1<Response> RequestAsync(Method method, string requestBody, string queryParams, string urlPath, CancellationToken cancellationToken);
    public abstract virtual Task`1<Response> SendEmailAsync(SendGridMessage msg, CancellationToken cancellationToken);
}
public class SendGrid.MimeType : object {
    public static string Html;
    public static string Text;
    private static MimeType();
}
public enum SendGrid.Permissions.ScopeOptions : Enum {
    public int value__;
    public static ScopeOptions All;
    public static ScopeOptions ReadOnly;
}
[ExtensionAttribute]
public static class SendGrid.Permissions.SendGridClientExtensions : object {
    [AsyncStateMachineAttribute("SendGrid.Permissions.SendGridClientExtensions/<CreateMaskedPermissionsBuilderForClient>d__0")]
[ExtensionAttribute]
public static Task`1<SendGridPermissionsBuilder> CreateMaskedPermissionsBuilderForClient(ISendGridClient client);
    [AsyncStateMachineAttribute("SendGrid.Permissions.SendGridClientExtensions/<CreateApiKey>d__1")]
[ExtensionAttribute]
public static Task`1<Response> CreateApiKey(ISendGridClient client, SendGridPermissionsBuilder permissions, string name);
}
public enum SendGrid.Permissions.SendGridPermission : Enum {
    public int value__;
    public static SendGridPermission Admin;
    public static SendGridPermission Alerts;
    public static SendGridPermission ApiKeys;
    public static SendGridPermission ASMGroups;
    public static SendGridPermission Billing;
    public static SendGridPermission Categories;
    public static SendGridPermission Clients;
    public static SendGridPermission Credentials;
    public static SendGridPermission DomainAuthentication;
    public static SendGridPermission IPs;
    public static SendGridPermission Mail;
    public static SendGridPermission MailSettings;
    public static SendGridPermission MarketingCampaigns;
    public static SendGridPermission Newsletter;
    public static SendGridPermission PartnerSettings;
    public static SendGridPermission ReverseDNS;
    public static SendGridPermission ScheduledSends;
    public static SendGridPermission Stats;
    public static SendGridPermission Subusers;
    public static SendGridPermission Suppressions;
    public static SendGridPermission Teammates;
    public static SendGridPermission Templates;
    public static SendGridPermission Tracking;
    public static SendGridPermission UserSettings;
    public static SendGridPermission Webhook;
}
public class SendGrid.Permissions.SendGridPermissionsBuilder : object {
    private List`1<Func`2<string, bool>> excludeFilters;
    private List`1<string> addedScopes;
    private HashSet`1<string> allScopes;
    private Dictionary`2<SendGridPermission, String[]> allPermissions;
    public IEnumerable`1<string> Build();
    public SendGridPermissionsBuilder AddPermissionsFor(SendGridPermission permission, ScopeOptions options);
    public SendGridPermissionsBuilder Exclude(Func`2<string, bool> filter);
    public SendGridPermissionsBuilder Include(IEnumerable`1<string> scopes);
    public SendGridPermissionsBuilder Include(String[] scopes);
    private String[] BuildScopes(SendGridPermission permission, ScopeOptions requestedOptions);
    private void ThrowIfViolatesMutualExclusivity(IEnumerable`1<string> scopes);
    private bool IsValidScope(string scope);
    private bool IsMutualyExclusive(string scope);
    [CompilerGeneratedAttribute]
private bool <ThrowIfViolatesMutualExclusivity>b__10_0(string x);
    [CompilerGeneratedAttribute]
private bool <ThrowIfViolatesMutualExclusivity>b__10_1(string x);
    [CompilerGeneratedAttribute]
private bool <ThrowIfViolatesMutualExclusivity>b__10_2(string x);
    [CompilerGeneratedAttribute]
private bool <ThrowIfViolatesMutualExclusivity>b__10_3(string x);
}
public class SendGrid.Response : object {
    private HttpStatusCode _statusCode;
    private HttpContent _body;
    private HttpResponseHeaders _headers;
    public HttpStatusCode StatusCode { get; public set; }
    public bool IsSuccessStatusCode { get; }
    public HttpContent Body { get; public set; }
    public HttpResponseHeaders Headers { get; public set; }
    public Response(HttpStatusCode statusCode, HttpContent responseBody, HttpResponseHeaders responseHeaders);
    public HttpStatusCode get_StatusCode();
    public void set_StatusCode(HttpStatusCode value);
    public bool get_IsSuccessStatusCode();
    public HttpContent get_Body();
    public void set_Body(HttpContent value);
    public HttpResponseHeaders get_Headers();
    public void set_Headers(HttpResponseHeaders value);
    [AsyncStateMachineAttribute("SendGrid.Response/<DeserializeResponseBodyAsync>d__15")]
public virtual Task`1<Dictionary`2<string, object>> DeserializeResponseBodyAsync(HttpContent content);
    public virtual Dictionary`2<string, string> DeserializeResponseHeaders(HttpResponseHeaders headers);
}
public class SendGrid.SendGridClient : BaseClient {
    private static SendGridClientOptions DefaultOptions;
    public SendGridClient(IWebProxy webProxy, string apiKey, string host, Dictionary`2<string, string> requestHeaders, string version, string urlPath, bool httpErrorAsException);
    public SendGridClient(HttpClient httpClient, string apiKey, string host, Dictionary`2<string, string> requestHeaders, string version, string urlPath, bool httpErrorAsException);
    public SendGridClient(string apiKey, string host, Dictionary`2<string, string> requestHeaders, string version, string urlPath);
    public SendGridClient(SendGridClientOptions options);
    public SendGridClient(HttpClient httpClient, SendGridClientOptions options);
    private static SendGridClient();
    private static SendGridClientOptions buildOptions(string apiKey, string host, Dictionary`2<string, string> requestHeaders, string version, string urlPath, bool httpErrorAsException);
}
public class SendGrid.SendGridClientOptions : BaseClientOptions {
    private Dictionary`2<string, string> REGION_HOST_MAP;
    private string apiKey;
    public string ApiKey { get; public set; }
    public string get_ApiKey();
    public void set_ApiKey(string value);
    public SendGridClientOptions SetDataResidency(string region);
}
public class SendGrid.TwilioEmailClient : BaseClient {
    public TwilioEmailClient(IWebProxy webProxy, string username, string password);
    public TwilioEmailClient(HttpClient httpClient, string username, string password);
    public TwilioEmailClient(string username, string password);
}
public class SendGrid.TwilioEmailClientOptions : BaseClientOptions {
    public TwilioEmailClientOptions(string username, string password);
}
