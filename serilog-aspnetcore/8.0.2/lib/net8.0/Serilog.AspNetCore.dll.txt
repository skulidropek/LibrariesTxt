[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Serilog.AspNetCore.RequestLoggingMiddleware : object {
    private RequestDelegate _next;
    private DiagnosticContext _diagnosticContext;
    private MessageTemplate _messageTemplate;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`2<IDiagnosticContext, HttpContext> _enrichDiagnosticContext;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`4<HttpContext, double, Exception, LogEventLevel> _getLevel;
    private Func`5<HttpContext, string, double, int, IEnumerable`1<LogEventProperty>> _getMessageTemplateProperties;
    [NullableAttribute("2")]
private ILogger _logger;
    private bool _includeQueryInRequestPath;
    private static LogEventProperty[] NoProperties;
    public RequestLoggingMiddleware(RequestDelegate next, DiagnosticContext diagnosticContext, RequestLoggingOptions options);
    private static RequestLoggingMiddleware();
    [AsyncStateMachineAttribute("Serilog.AspNetCore.RequestLoggingMiddleware/<Invoke>d__10")]
public Task Invoke(HttpContext httpContext);
    private bool LogCompletion(HttpContext httpContext, DiagnosticContextCollector collector, int statusCode, double elapsedMs, Exception ex);
    private static double GetElapsedMilliseconds(long start, long stop);
    private static string GetPath(HttpContext httpContext, bool includeQueryInRequestPath);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.AspNetCore.RequestLoggingOptions : object {
    private static string DefaultRequestCompletionMessageTemplate;
    [CompilerGeneratedAttribute]
private string <MessageTemplate>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`4<HttpContext, double, Exception, LogEventLevel> <GetLevel>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`2<IDiagnosticContext, HttpContext> <EnrichDiagnosticContext>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeQueryInRequestPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`5<HttpContext, string, double, int, IEnumerable`1<LogEventProperty>> <GetMessageTemplateProperties>k__BackingField;
    public string MessageTemplate { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`4<HttpContext, double, Exception, LogEventLevel> GetLevel { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`2<IDiagnosticContext, HttpContext> EnrichDiagnosticContext { get; public set; }
    [NullableAttribute("2")]
public ILogger Logger { get; public set; }
    public bool IncludeQueryInRequestPath { get; public set; }
    public Func`5<HttpContext, string, double, int, IEnumerable`1<LogEventProperty>> GetMessageTemplateProperties { get; public set; }
    private static LogEventLevel DefaultGetLevel(HttpContext ctx, double _, Exception ex);
    private static IEnumerable`1<LogEventProperty> DefaultGetMessageTemplateProperties(HttpContext httpContext, string requestPath, double elapsedMs, int statusCode);
    [CompilerGeneratedAttribute]
public string get_MessageTemplate();
    [CompilerGeneratedAttribute]
public void set_MessageTemplate(string value);
    [CompilerGeneratedAttribute]
public Func`4<HttpContext, double, Exception, LogEventLevel> get_GetLevel();
    [CompilerGeneratedAttribute]
public void set_GetLevel(Func`4<HttpContext, double, Exception, LogEventLevel> value);
    [CompilerGeneratedAttribute]
public Action`2<IDiagnosticContext, HttpContext> get_EnrichDiagnosticContext();
    [CompilerGeneratedAttribute]
public void set_EnrichDiagnosticContext(Action`2<IDiagnosticContext, HttpContext> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ILogger get_Logger();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Logger(ILogger value);
    [CompilerGeneratedAttribute]
public bool get_IncludeQueryInRequestPath();
    [CompilerGeneratedAttribute]
public void set_IncludeQueryInRequestPath(bool value);
    [CompilerGeneratedAttribute]
public Func`5<HttpContext, string, double, int, IEnumerable`1<LogEventProperty>> get_GetMessageTemplateProperties();
    [CompilerGeneratedAttribute]
public void set_GetMessageTemplateProperties(Func`5<HttpContext, string, double, int, IEnumerable`1<LogEventProperty>> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Serilog.SerilogApplicationBuilderExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseSerilogRequestLogging(IApplicationBuilder app, string messageTemplate);
    [ExtensionAttribute]
public static IApplicationBuilder UseSerilogRequestLogging(IApplicationBuilder app, Action`1<RequestLoggingOptions> configureOptions);
}
