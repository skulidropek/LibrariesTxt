[ExtensionAttribute]
public static class Serilog.ClientInfoLoggerConfigurationExtensions : object {
    [ExtensionAttribute]
public static LoggerConfiguration WithClientIp(LoggerEnrichmentConfiguration enrichmentConfiguration);
    [ExtensionAttribute]
public static LoggerConfiguration WithCorrelationId(LoggerEnrichmentConfiguration enrichmentConfiguration, string headerName, bool addValueIfHeaderAbsence);
    [ExtensionAttribute]
public static LoggerConfiguration WithRequestHeader(LoggerEnrichmentConfiguration enrichmentConfiguration, string headerName, string propertyName);
}
public class Serilog.Enrichers.ClientHeaderEnricher : object {
    private string _clientHeaderItemKey;
    private string _propertyName;
    private string _headerKey;
    private IHttpContextAccessor _contextAccessor;
    public ClientHeaderEnricher(string headerKey, string propertyName);
    internal ClientHeaderEnricher(string headerKey, string propertyName, IHttpContextAccessor contextAccessor);
    internal ClientHeaderEnricher(IHttpContextAccessor contextAccessor);
    public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
}
public class Serilog.Enrichers.ClientIpEnricher : object {
    private static string IpAddressPropertyName;
    private static string IpAddressItemKey;
    private IHttpContextAccessor _contextAccessor;
    internal ClientIpEnricher(IHttpContextAccessor contextAccessor);
    public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
}
public class Serilog.Enrichers.CorrelationIdEnricher : object {
    private static string CorrelationIdItemKey;
    private static string PropertyName;
    private string _headerKey;
    private bool _addValueIfHeaderAbsence;
    private IHttpContextAccessor _contextAccessor;
    public CorrelationIdEnricher(string headerKey, bool addValueIfHeaderAbsence);
    internal CorrelationIdEnricher(string headerKey, bool addValueIfHeaderAbsence, IHttpContextAccessor contextAccessor);
    public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
}
