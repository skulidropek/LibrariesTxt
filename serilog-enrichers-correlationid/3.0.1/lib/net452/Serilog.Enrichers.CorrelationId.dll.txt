[ExtensionAttribute]
public static class Serilog.CorrelationIdLoggerConfigurationExtensions : object {
    [ExtensionAttribute]
public static LoggerConfiguration WithCorrelationId(LoggerEnrichmentConfiguration enrichmentConfiguration);
    [ExtensionAttribute]
public static LoggerConfiguration WithCorrelationIdHeader(LoggerEnrichmentConfiguration enrichmentConfiguration, string headerKey);
}
internal class Serilog.Enrichers.CorrelationId.Accessors.HttpContextAccessor : object {
    public HttpContext HttpContext { get; }
    public sealed virtual HttpContext get_HttpContext();
}
public interface Serilog.Enrichers.CorrelationId.Accessors.IHttpContextAccessor {
    public HttpContext HttpContext { get; }
    public abstract virtual HttpContext get_HttpContext();
}
[ExtensionAttribute]
internal static class Serilog.Enrichers.CorrelationId.Extensions.NameValueCollectionExtensions : object {
    [ExtensionAttribute]
public static bool TryGetValue(NameValueCollection collection, string key, IEnumerable`1& values);
}
public class Serilog.Enrichers.CorrelationIdEnricher : object {
    private static string CorrelationIdPropertyName;
    private static string CorrelationIdItemName;
    private IHttpContextAccessor _contextAccessor;
    internal CorrelationIdEnricher(IHttpContextAccessor contextAccessor);
    private static CorrelationIdEnricher();
    public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
    private string GetCorrelationId();
}
public class Serilog.Enrichers.CorrelationIdHeaderEnricher : object {
    private static string CorrelationIdPropertyName;
    private string _headerKey;
    private IHttpContextAccessor _contextAccessor;
    public CorrelationIdHeaderEnricher(string headerKey);
    internal CorrelationIdHeaderEnricher(string headerKey, IHttpContextAccessor contextAccessor);
    public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
    private string GetCorrelationId();
}
