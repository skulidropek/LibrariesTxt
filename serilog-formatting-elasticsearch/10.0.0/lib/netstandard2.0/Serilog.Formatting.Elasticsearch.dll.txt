public abstract class Serilog.Formatting.Elasticsearch.DefaultJsonFormatter : object {
    private bool _omitEnclosingObject;
    private string _closingDelimiter;
    private bool _renderMessage;
    private bool _renderMessageTemplate;
    private IFormatProvider _formatProvider;
    private IDictionary`2<Type, Action`3<object, bool, TextWriter>> _literalWriters;
    protected DefaultJsonFormatter(bool omitEnclosingObject, string closingDelimiter, bool renderMessage, IFormatProvider formatProvider, bool renderMessageTemplate);
    public sealed virtual void Format(LogEvent logEvent, TextWriter output);
    protected void AddLiteralWriter(Type type, Action`2<object, TextWriter> writer);
    protected virtual void WriteRenderings(IGrouping`2[] tokensWithFormat, IReadOnlyDictionary`2<string, LogEventPropertyValue> properties, TextWriter output);
    protected virtual void WriteRenderingsValues(IGrouping`2[] tokensWithFormat, IReadOnlyDictionary`2<string, LogEventPropertyValue> properties, TextWriter output);
    protected virtual void WriteProperties(IReadOnlyDictionary`2<string, LogEventPropertyValue> properties, TextWriter output);
    protected virtual void WritePropertiesValues(IReadOnlyDictionary`2<string, LogEventPropertyValue> properties, TextWriter output);
    protected virtual void WriteException(Exception exception, String& delim, TextWriter output);
    protected virtual void WriteRenderedMessage(string message, String& delim, TextWriter output);
    protected virtual void WriteMessageTemplate(string template, String& delim, TextWriter output);
    protected virtual void WriteLevel(LogEventLevel level, String& delim, TextWriter output);
    protected virtual void WriteTimestamp(DateTimeOffset timestamp, String& delim, TextWriter output);
    protected virtual void WriteStructure(string typeTag, IEnumerable`1<LogEventProperty> properties, TextWriter output);
    protected virtual void WriteSequence(IEnumerable elements, TextWriter output);
    protected virtual void WriteDictionary(IReadOnlyDictionary`2<ScalarValue, LogEventPropertyValue> elements, TextWriter output);
    protected virtual void WriteJsonProperty(string name, object value, String& precedingDelimiter, TextWriter output);
    protected virtual void WriteJsonArrayProperty(string name, IEnumerable sequence, String& precedingDelimiter, TextWriter output);
    protected virtual void WriteLiteralValue(object value, TextWriter output);
    private void WriteLiteral(object value, TextWriter output, bool forceQuotation);
    private static void WriteToString(object number, bool quote, TextWriter output);
    private static void WriteBoolean(bool value, TextWriter output);
    private static void WriteSingle(float value, TextWriter output);
    private static void WriteDouble(double value, TextWriter output);
    private static void WriteOffset(DateTimeOffset value, TextWriter output);
    private static void WriteDateTime(DateTime value, TextWriter output);
    private static void WriteString(string value, TextWriter output);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_7(object v, bool q, TextWriter w);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_8(object v, bool q, TextWriter w);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_9(object v, bool q, TextWriter w);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_10(object v, bool q, TextWriter w);
}
public class Serilog.Formatting.Elasticsearch.ElasticsearchJsonFormatter : DefaultJsonFormatter {
    private ISerializer _serializer;
    private bool _inlineFields;
    private bool _formatStackTraceAsArray;
    public static string RenderedMessagePropertyName;
    public static string MessageTemplatePropertyName;
    public static string ExceptionPropertyName;
    public static string LevelPropertyName;
    public static string TimestampPropertyName;
    public ElasticsearchJsonFormatter(bool omitEnclosingObject, string closingDelimiter, bool renderMessage, IFormatProvider formatProvider, ISerializer serializer, bool inlineFields, bool renderMessageTemplate, bool formatStackTraceAsArray);
    protected virtual void WriteRenderings(IGrouping`2[] tokensWithFormat, IReadOnlyDictionary`2<string, LogEventPropertyValue> properties, TextWriter output);
    protected virtual void WriteProperties(IReadOnlyDictionary`2<string, LogEventPropertyValue> properties, TextWriter output);
    protected virtual void WriteException(Exception exception, String& delim, TextWriter output);
    private void WriteExceptionSerializationInfo(Exception exception, String& delim, TextWriter output, int depth);
    protected void WriteSingleException(Exception exception, String& delim, TextWriter output, int depth);
    private void WriteMultilineString(string name, string value, String& delimeter, TextWriter output);
    private void WriteStructuredExceptionMethod(string exceptionMethodString, String& delim, TextWriter output);
    protected virtual void WriteRenderedMessage(string message, String& delim, TextWriter output);
    protected virtual void WriteMessageTemplate(string template, String& delim, TextWriter output);
    protected virtual void WriteLevel(LogEventLevel level, String& delim, TextWriter output);
    protected virtual void WriteTimestamp(DateTimeOffset timestamp, String& delim, TextWriter output);
    protected virtual void WriteLiteralValue(object value, TextWriter output);
}
public class Serilog.Formatting.Elasticsearch.ExceptionAsObjectJsonFormatter : ElasticsearchJsonFormatter {
    public ExceptionAsObjectJsonFormatter(bool omitEnclosingObject, string closingDelimiter, bool renderMessage, IFormatProvider formatProvider, ISerializer serializer, bool inlineFields, bool renderMessageTemplate, bool formatStackTraceAsArray);
    protected virtual void WriteException(Exception exception, String& delim, TextWriter output);
    private void WriteExceptionTree(Exception exception, String& delim, TextWriter output, int depth);
}
public interface Serilog.Formatting.Elasticsearch.ISerializer {
    public abstract virtual string SerializeToString(object value);
}
