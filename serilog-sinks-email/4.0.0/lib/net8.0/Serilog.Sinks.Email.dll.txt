[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Serilog.LoggerConfigurationEmailExtensions : object {
    private static TimeSpan DefaultBufferingTimeLimit;
    private static int DefaultQueueLimit;
    private static LoggerConfigurationEmailExtensions();
    [ExtensionAttribute]
public static LoggerConfiguration Email(LoggerSinkConfiguration loggerConfiguration, string from, string to, string host, int port, SecureSocketOptions connectionSecurity, ICredentialsByHost credentials, string subject, string body, IFormatProvider formatProvider, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static LoggerConfiguration Email(LoggerSinkConfiguration loggerConfiguration, EmailSinkOptions options, BatchingOptions batchingOptions, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
    internal static List`1<string> SplitToAddresses(string toEmail);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Serilog.Sinks.Email.EmailMessage : object {
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBodyHtml>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <To>k__BackingField;
    public string From { get; }
    public string Subject { get; }
    public string Body { get; }
    public bool IsBodyHtml { get; }
    public IEnumerable`1<string> To { get; }
    public EmailMessage(string from, IEnumerable`1<string> to, string subject, string body, bool isBodyHtml);
    [CompilerGeneratedAttribute]
public string get_From();
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public bool get_IsBodyHtml();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_To();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Serilog.Sinks.Email.EmailSink : object {
    private EmailSinkOptions _sinkOptions;
    private IEmailTransport _emailTransport;
    public EmailSink(EmailSinkOptions options, IEmailTransport emailTransport);
    public sealed virtual Task EmitBatchAsync(IReadOnlyCollection`1<LogEvent> events);
    internal static string ComputeMailSubject(ITextFormatter subjectLineFormatter, IEnumerable`1<LogEvent> events);
    public sealed virtual Task OnEmptyBatchAsync();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.Email.EmailSinkOptions : object {
    internal static int DefaultPort;
    private static string DefaultSubject;
    private static string DefaultBody;
    internal static SecureSocketOptions DefaultConnectionSecurity;
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <To>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ICredentialsByHost <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private ITextFormatter <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private ITextFormatter <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBodyHtml>k__BackingField;
    [CompilerGeneratedAttribute]
private SecureSocketOptions <ConnectionSecurity>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RemoteCertificateValidationCallback <ServerCertificateValidationCallback>k__BackingField;
    public string From { get; public set; }
    public List`1<string> To { get; public set; }
    public string Host { get; public set; }
    public int Port { get; public set; }
    [NullableAttribute("2")]
public ICredentialsByHost Credentials { get; public set; }
    public ITextFormatter Subject { get; public set; }
    public ITextFormatter Body { get; public set; }
    public bool IsBodyHtml { get; public set; }
    public SecureSocketOptions ConnectionSecurity { get; public set; }
    [NullableAttribute("2")]
public RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; public set; }
    [CompilerGeneratedAttribute]
public string get_From();
    [CompilerGeneratedAttribute]
public void set_From(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_To();
    [CompilerGeneratedAttribute]
public void set_To(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ICredentialsByHost get_Credentials();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Credentials(ICredentialsByHost value);
    [CompilerGeneratedAttribute]
public ITextFormatter get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ITextFormatter value);
    [CompilerGeneratedAttribute]
public ITextFormatter get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(ITextFormatter value);
    [CompilerGeneratedAttribute]
public bool get_IsBodyHtml();
    [CompilerGeneratedAttribute]
public void set_IsBodyHtml(bool value);
    [CompilerGeneratedAttribute]
public SecureSocketOptions get_ConnectionSecurity();
    [CompilerGeneratedAttribute]
public void set_ConnectionSecurity(SecureSocketOptions value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RemoteCertificateValidationCallback get_ServerCertificateValidationCallback();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ServerCertificateValidationCallback(RemoteCertificateValidationCallback value);
}
public interface Serilog.Sinks.Email.IBatchTextFormatter {
    [NullableContextAttribute("1")]
public abstract virtual void FormatBatch(IEnumerable`1<LogEvent> logEvents, TextWriter output);
}
internal interface Serilog.Sinks.Email.IEmailTransport {
    [NullableContextAttribute("1")]
public abstract virtual Task SendMailAsync(EmailMessage emailMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Serilog.Sinks.Email.MailKitEmailTransport : object {
    [CompilerGeneratedAttribute]
private EmailSinkOptions <options>P;
    public MailKitEmailTransport(EmailSinkOptions options);
    [AsyncStateMachineAttribute("Serilog.Sinks.Email.MailKitEmailTransport/<SendMailAsync>d__2")]
public sealed virtual Task SendMailAsync(EmailMessage emailMessage);
    private SmtpClient OpenConnectedSmtpClient();
    public sealed virtual void Dispose();
}
