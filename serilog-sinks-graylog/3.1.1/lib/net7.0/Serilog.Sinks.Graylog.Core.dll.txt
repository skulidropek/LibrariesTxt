[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[ExtensionAttribute]
public static class Serilog.Sinks.Graylog.Core.Extensions.DateTimeExtensions : object {
    private static DateTime Epoch;
    private static DateTimeExtensions();
    [ExtensionAttribute]
public static double ConvertToNix(DateTimeOffset dateTimeOffset);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Serilog.Sinks.Graylog.Core.Extensions.StringExtensions : object {
    [ExtensionAttribute]
public static Byte[] ToGzip(string source);
    [ExtensionAttribute]
public static Byte[] ToByteArray(string source);
    [ExtensionAttribute]
public static string Truncate(string source, int maxLength);
    [ExtensionAttribute]
public static string Expand(string source);
}
[ExtensionAttribute]
public static class Serilog.Sinks.Graylog.Core.Extensions.TypeExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsNumericType(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.Graylog.Core.GelfConverter : object {
    private IDictionary`2<BuilderType, Lazy`1<IMessageBuilder>> _messageBuilders;
    public GelfConverter(IDictionary`2<BuilderType, Lazy`1<IMessageBuilder>> messageBuilders);
    public sealed virtual JsonObject GetGelfJson(LogEvent logEvent);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Serilog.Sinks.Graylog.Core.GraylogSinkOptionsBase : object {
    [NullableAttribute("1")]
public static string DefaultFacility;
    public static int DefaultShortMessageMaxLength;
    public static LogEventLevel DefaultMinimumLogEventLevel;
    public static int DefaultStackTraceDepth;
    public static MessageIdGeneratorType DefaultMessageGeneratorType;
    public static int DefaultMaxMessageSizeInUdp;
    [NullableAttribute("1")]
public static string DefaultHost;
    public static int DefaultPort;
    [NullableAttribute("1")]
public static string DefaultMessageTemplateFieldName;
    [NullableAttribute("1")]
public static JsonSerializerOptions DefaultSerializerSettings;
    [CompilerGeneratedAttribute]
private bool <ParseArrayValues>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <MessageTemplateFieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeMessageTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExcludeMessageTemplateProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private LogEventLevel <MinimumLogEventLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostnameOrAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Facility>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private TransportType <TransportType>k__BackingField;
    [CompilerGeneratedAttribute]
private IGelfConverter <GelfConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ShortMessageMaxLength>k__BackingField;
    [CompilerGeneratedAttribute]
private MessageIdGeneratorType <MessageGeneratorType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StackTraceDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxMessageSizeInUdp>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <HostnameOverride>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseSsl>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <JsonSerializerOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UsernameInHttp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PasswordInHttp>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`1<ITransport> <TransportFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseGzip>k__BackingField;
    public bool ParseArrayValues { get; public set; }
    [NullableAttribute("1")]
public string MessageTemplateFieldName { get; public set; }
    public bool IncludeMessageTemplate { get; public set; }
    public bool ExcludeMessageTemplateProperties { get; public set; }
    public LogEventLevel MinimumLogEventLevel { get; public set; }
    public string HostnameOrAddress { get; public set; }
    public string Facility { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public TransportType TransportType { get; public set; }
    public IGelfConverter GelfConverter { get; public set; }
    public int ShortMessageMaxLength { get; public set; }
    public MessageIdGeneratorType MessageGeneratorType { get; public set; }
    public int StackTraceDepth { get; public set; }
    public int MaxMessageSizeInUdp { get; public set; }
    [NullableAttribute("1")]
public string HostnameOverride { get; public set; }
    public bool UseSsl { get; public set; }
    [NullableAttribute("1")]
public JsonSerializerOptions JsonSerializerOptions { get; public set; }
    public string UsernameInHttp { get; public set; }
    public string PasswordInHttp { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`1<ITransport> TransportFactory { get; public set; }
    public bool UseGzip { get; public set; }
    private static GraylogSinkOptionsBase();
    [CompilerGeneratedAttribute]
public bool get_ParseArrayValues();
    [CompilerGeneratedAttribute]
public void set_ParseArrayValues(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_MessageTemplateFieldName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_MessageTemplateFieldName(string value);
    [CompilerGeneratedAttribute]
public bool get_IncludeMessageTemplate();
    [CompilerGeneratedAttribute]
public void set_IncludeMessageTemplate(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExcludeMessageTemplateProperties();
    [CompilerGeneratedAttribute]
public void set_ExcludeMessageTemplateProperties(bool value);
    [CompilerGeneratedAttribute]
public LogEventLevel get_MinimumLogEventLevel();
    [CompilerGeneratedAttribute]
public void set_MinimumLogEventLevel(LogEventLevel value);
    [CompilerGeneratedAttribute]
public string get_HostnameOrAddress();
    [CompilerGeneratedAttribute]
public void set_HostnameOrAddress(string value);
    [CompilerGeneratedAttribute]
public string get_Facility();
    [CompilerGeneratedAttribute]
public void set_Facility(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public TransportType get_TransportType();
    [CompilerGeneratedAttribute]
public void set_TransportType(TransportType value);
    [CompilerGeneratedAttribute]
public IGelfConverter get_GelfConverter();
    [CompilerGeneratedAttribute]
public void set_GelfConverter(IGelfConverter value);
    [CompilerGeneratedAttribute]
public int get_ShortMessageMaxLength();
    [CompilerGeneratedAttribute]
public void set_ShortMessageMaxLength(int value);
    [CompilerGeneratedAttribute]
public MessageIdGeneratorType get_MessageGeneratorType();
    [CompilerGeneratedAttribute]
public void set_MessageGeneratorType(MessageIdGeneratorType value);
    [CompilerGeneratedAttribute]
public int get_StackTraceDepth();
    [CompilerGeneratedAttribute]
public void set_StackTraceDepth(int value);
    [CompilerGeneratedAttribute]
public int get_MaxMessageSizeInUdp();
    [CompilerGeneratedAttribute]
public void set_MaxMessageSizeInUdp(int value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_HostnameOverride();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_HostnameOverride(string value);
    [CompilerGeneratedAttribute]
public bool get_UseSsl();
    [CompilerGeneratedAttribute]
public void set_UseSsl(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public JsonSerializerOptions get_JsonSerializerOptions();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_JsonSerializerOptions(JsonSerializerOptions value);
    [CompilerGeneratedAttribute]
public string get_UsernameInHttp();
    [CompilerGeneratedAttribute]
public void set_UsernameInHttp(string value);
    [CompilerGeneratedAttribute]
public string get_PasswordInHttp();
    [CompilerGeneratedAttribute]
public void set_PasswordInHttp(string value);
    [CompilerGeneratedAttribute]
public Func`1<ITransport> get_TransportFactory();
    [CompilerGeneratedAttribute]
public void set_TransportFactory(Func`1<ITransport> value);
    [CompilerGeneratedAttribute]
public bool get_UseGzip();
    [CompilerGeneratedAttribute]
public void set_UseGzip(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Serilog.Sinks.Graylog.Core.Helpers.HttpBasicAuthenticationGenerator : object {
    private string _usernameInHttp;
    private string _passwordInHttp;
    public HttpBasicAuthenticationGenerator(string usernameInHttp, string passwordInHttp);
    public AuthenticationHeaderValue Generate();
    private bool Validate();
}
[NullableContextAttribute("1")]
public interface Serilog.Sinks.Graylog.Core.Helpers.IMessageIdGenerator {
    public abstract virtual Byte[] GenerateMessageId(Byte[] message);
}
[NullableContextAttribute("1")]
public interface Serilog.Sinks.Graylog.Core.Helpers.IMessageIdGeneratorResolver {
    public abstract virtual IMessageIdGenerator Resolve(MessageIdGeneratorType generatorType);
}
public static class Serilog.Sinks.Graylog.Core.Helpers.LogLevelMapper : object {
    [NullableAttribute("1")]
private static Dictionary`2<LogEventLevel, int> LogLevelMap;
    private static LogLevelMapper();
    internal static int GetMappedLevel(LogEventLevel logEventLevel);
}
public class Serilog.Sinks.Graylog.Core.Helpers.Md5MessageIdGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual Byte[] GenerateMessageId(Byte[] message);
}
public class Serilog.Sinks.Graylog.Core.Helpers.MessageIdGeneratorResolver : object {
    [NullableAttribute("1")]
private Dictionary`2<MessageIdGeneratorType, Lazy`1<IMessageIdGenerator>> _messageGenerators;
    [NullableContextAttribute("1")]
public sealed virtual IMessageIdGenerator Resolve(MessageIdGeneratorType generatorType);
}
public enum Serilog.Sinks.Graylog.Core.Helpers.MessageIdGeneratorType : Enum {
    public int value__;
    public static MessageIdGeneratorType Timestamp;
    public static MessageIdGeneratorType Md5;
}
public class Serilog.Sinks.Graylog.Core.Helpers.TimestampMessageIdGenerator : object {
    [NullableContextAttribute("1")]
public sealed virtual Byte[] GenerateMessageId(Byte[] message);
}
[NullableContextAttribute("1")]
public interface Serilog.Sinks.Graylog.Core.IGelfConverter {
    public abstract virtual JsonObject GetGelfJson(LogEvent logEvent);
}
[NullableContextAttribute("1")]
public interface Serilog.Sinks.Graylog.Core.ISinkComponentsBuilder {
    public abstract virtual ITransport MakeTransport();
    public abstract virtual IGelfConverter MakeGelfConverter();
}
public enum Serilog.Sinks.Graylog.Core.MessageBuilders.BuilderType : Enum {
    public int value__;
    public static BuilderType Exception;
    public static BuilderType Message;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.Graylog.Core.MessageBuilders.ExceptionMessageBuilder : GelfMessageBuilder {
    private static string DefaultExceptionDelimiter;
    private static string DefaultStackTraceDelimiter;
    public ExceptionMessageBuilder(string hostName, GraylogSinkOptionsBase options);
    public virtual JsonObject Build(LogEvent logEvent);
    private Tuple`2<string, string> GetExceptionMessages(Exception ex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.Graylog.Core.MessageBuilders.GelfMessageBuilder : object {
    private static string DefaultGelfVersion;
    private string _hostName;
    private GraylogSinkOptionsBase _options;
    protected GraylogSinkOptionsBase Options { get; }
    public GelfMessageBuilder(string hostName, GraylogSinkOptionsBase options);
    protected GraylogSinkOptionsBase get_Options();
    public virtual JsonObject Build(LogEvent logEvent);
    private void AddAdditionalField(JsonObject jObject, KeyValuePair`2<string, LogEventPropertyValue> property, string memberPath);
    private static string RenderPropertyValue(LogEventPropertyValue propertyValue);
}
[NullableContextAttribute("1")]
public interface Serilog.Sinks.Graylog.Core.MessageBuilders.IMessageBuilder {
    public abstract virtual JsonObject Build(LogEvent logEvent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.Graylog.Core.SinkComponentsBuilder : object {
    private GraylogSinkOptionsBase _options;
    private Dictionary`2<BuilderType, Lazy`1<IMessageBuilder>> _builders;
    public SinkComponentsBuilder(GraylogSinkOptionsBase options);
    public sealed virtual ITransport MakeTransport();
    public sealed virtual IGelfConverter MakeGelfConverter();
    [CompilerGeneratedAttribute]
private IMessageBuilder <.ctor>b__2_0();
    [CompilerGeneratedAttribute]
private IMessageBuilder <.ctor>b__2_1();
}
public class Serilog.Sinks.Graylog.Core.Transport.DnsWrapper : object {
    [NullableContextAttribute("1")]
public sealed virtual Task`1<IPAddress[]> GetHostAddresses(string hostNameOrAddress);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Serilog.Sinks.Graylog.Core.Transport.DnsWrapper/<GetIpAddress>d__1")]
public sealed virtual Task`1<IPAddress> GetIpAddress(string hostNameOrAddress);
}
public class Serilog.Sinks.Graylog.Core.Transport.Http.HttpTransport : object {
    [NullableAttribute("1")]
private ITransportClient`1<string> _transportClient;
    [NullableContextAttribute("1")]
public HttpTransport(ITransportClient`1<string> transportClient);
    [NullableContextAttribute("1")]
public sealed virtual Task Send(string message);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.Graylog.Core.Transport.Http.HttpTransportClient : object {
    private static string _defaultHttpUriPath;
    [NullableAttribute("2")]
private HttpClient _httpClient;
    private GraylogSinkOptionsBase options;
    public HttpTransportClient(GraylogSinkOptionsBase options);
    protected virtual HttpClient CreateHttpClient();
    protected virtual void ConfigureHttpClient(HttpClient httpClient);
    private void EnsureHttpClient();
    [AsyncStateMachineAttribute("Serilog.Sinks.Graylog.Core.Transport.Http.HttpTransportClient/<Send>d__7")]
public sealed virtual Task Send(string message);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
public interface Serilog.Sinks.Graylog.Core.Transport.IDnsInfoProvider {
    public abstract virtual Task`1<IPAddress[]> GetHostAddresses(string hostNameOrAddress);
    public abstract virtual Task`1<IPAddress> GetIpAddress(string hostNameOrAddress);
}
public interface Serilog.Sinks.Graylog.Core.Transport.ITransport {
    [NullableContextAttribute("1")]
public abstract virtual Task Send(string message);
}
public interface Serilog.Sinks.Graylog.Core.Transport.ITransportClient`1 {
    [NullableContextAttribute("1")]
public abstract virtual Task Send(T payload);
}
public class Serilog.Sinks.Graylog.Core.Transport.Tcp.TcpTransport : object {
    [NullableAttribute("1")]
private ITransportClient`1<Byte[]> _tcpClient;
    [NullableContextAttribute("1")]
public TcpTransport(ITransportClient`1<Byte[]> tcpClient);
    [NullableContextAttribute("1")]
public sealed virtual Task Send(string message);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.Graylog.Core.Transport.Tcp.TcpTransportClient : object {
    private static int DefaultPort;
    [NullableAttribute("2")]
private Stream _stream;
    private GraylogSinkOptionsBase _options;
    private IDnsInfoProvider _dnsInfoProvider;
    private TcpClient _client;
    public TcpTransportClient(GraylogSinkOptionsBase options, IDnsInfoProvider dnsInfoProvider);
    [AsyncStateMachineAttribute("Serilog.Sinks.Graylog.Core.Transport.Tcp.TcpTransportClient/<Send>d__6")]
public sealed virtual Task Send(Byte[] payload);
    [AsyncStateMachineAttribute("Serilog.Sinks.Graylog.Core.Transport.Tcp.TcpTransportClient/<EnsureConnection>d__7")]
private Task EnsureConnection();
    [AsyncStateMachineAttribute("Serilog.Sinks.Graylog.Core.Transport.Tcp.TcpTransportClient/<Connect>d__8")]
private Task Connect();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
public enum Serilog.Sinks.Graylog.Core.Transport.TransportType : Enum {
    public int value__;
    public static TransportType Udp;
    public static TransportType Http;
    public static TransportType Tcp;
    public static TransportType Custom;
}
public class Serilog.Sinks.Graylog.Core.Transport.Udp.ChunkSettings : object {
    [CompilerGeneratedAttribute]
private MessageIdGeneratorType <MessageIdGeneratorType>k__BackingField;
    public static byte PrefixSize;
    public static byte MaxNumberOfChunksAllowed;
    [CompilerGeneratedAttribute]
private int <MaxMessageSizeInUdp>k__BackingField;
    [NullableAttribute("1")]
public static Byte[] GelfMagicBytes;
    public MessageIdGeneratorType MessageIdGeneratorType { get; }
    public int MaxMessageSizeInUdp { get; }
    public int MaxMessageSizeInChunk { get; }
    public ChunkSettings(MessageIdGeneratorType messageIdGeneratorType, int maxMessageSizeInUdp);
    private static ChunkSettings();
    [CompilerGeneratedAttribute]
public MessageIdGeneratorType get_MessageIdGeneratorType();
    [CompilerGeneratedAttribute]
public int get_MaxMessageSizeInUdp();
    public int get_MaxMessageSizeInChunk();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.Graylog.Core.Transport.Udp.DataToChunkConverter : object {
    private ChunkSettings _settings;
    private IMessageIdGeneratorResolver _generatorResolver;
    public DataToChunkConverter(ChunkSettings settings, IMessageIdGeneratorResolver generatorResolver);
    public sealed virtual IList`1<Byte[]> ConvertToChunks(Byte[] message);
    private static IList`1<byte> ConstructChunkHeader(Byte[] messageId, byte chunkNumber, byte chunksCount);
}
[NullableContextAttribute("1")]
public interface Serilog.Sinks.Graylog.Core.Transport.Udp.IDataToChunkConverter {
    public abstract virtual IList`1<Byte[]> ConvertToChunks(Byte[] message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.Graylog.Core.Transport.Udp.UdpTransport : object {
    private ITransportClient`1<Byte[]> _transportClient;
    private IDataToChunkConverter _chunkConverter;
    private GraylogSinkOptionsBase _options;
    public UdpTransport(ITransportClient`1<Byte[]> transportClient, IDataToChunkConverter chunkConverter, GraylogSinkOptionsBase options);
    public sealed virtual Task Send(string message);
    public sealed virtual void Dispose();
    private void Dispose(bool disposing);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private Task <Send>b__4_0(Byte[] c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.Graylog.Core.Transport.Udp.UdpTransportClient : object {
    [NullableAttribute("2")]
private IPEndPoint _ipEndPoint;
    private GraylogSinkOptionsBase _options;
    private IDnsInfoProvider _dnsInfoProvider;
    private UdpClient _client;
    public UdpTransportClient(GraylogSinkOptionsBase options, IDnsInfoProvider dnsInfoProvider);
    [AsyncStateMachineAttribute("Serilog.Sinks.Graylog.Core.Transport.Udp.UdpTransportClient/<EnsureTarget>d__5")]
private Task EnsureTarget();
    [AsyncStateMachineAttribute("Serilog.Sinks.Graylog.Core.Transport.Udp.UdpTransportClient/<Send>d__6")]
public sealed virtual Task Send(Byte[] payload);
    public sealed virtual void Dispose();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
