[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Serilog.MapLoggerConfigurationExtensions : object {
    [ExtensionAttribute]
public static LoggerConfiguration Map(LoggerSinkConfiguration loggerSinkConfiguration, string keyPropertyName, string defaultKey, Action`2<string, LoggerSinkConfiguration> configure, Nullable`1<int> sinkMapCountLimit, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static LoggerConfiguration Map(LoggerSinkConfiguration loggerSinkConfiguration, string keyPropertyName, TKey defaultKey, Action`2<TKey, LoggerSinkConfiguration> configure, Nullable`1<int> sinkMapCountLimit, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static LoggerConfiguration Map(LoggerSinkConfiguration loggerSinkConfiguration, Func`2<LogEvent, TKey> keySelector, Action`2<TKey, LoggerSinkConfiguration> configure, Nullable`1<int> sinkMapCountLimit, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static LoggerConfiguration Map(LoggerSinkConfiguration loggerSinkConfiguration, string keyPropertyName, Action`2<string, LoggerSinkConfiguration> configure, Nullable`1<int> sinkMapCountLimit, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static LoggerConfiguration Map(LoggerSinkConfiguration loggerSinkConfiguration, string keyPropertyName, Action`2<TKey, LoggerSinkConfiguration> configure, Nullable`1<int> sinkMapCountLimit, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static LoggerConfiguration Map(LoggerSinkConfiguration loggerSinkConfiguration, KeySelector`1<TKey> keySelector, Action`2<TKey, LoggerSinkConfiguration> configure, Nullable`1<int> sinkMapCountLimit, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
}
public class Serilog.Sinks.Map.KeySelector`1 : MulticastDelegate {
    public KeySelector`1(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual bool Invoke(LogEvent logEvent, TKey& key);
    public virtual IAsyncResult BeginInvoke(LogEvent logEvent, TKey& key, AsyncCallback callback, object object);
    public virtual bool EndInvoke(TKey& key, IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Serilog.Sinks.Map.MappedSink`1 : object {
    private KeySelector`1<TKey> _keySelector;
    private Action`2<TKey, LoggerSinkConfiguration> _configure;
    private Nullable`1<int> _sinkMapCountLimit;
    private object _sync;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<KeyValuePair`2<TKey, bool>, ILogEventSink> _sinkMap;
    private bool _disposed;
    public MappedSink`1(KeySelector`1<TKey> keySelector, Action`2<TKey, LoggerSinkConfiguration> configure, Nullable`1<int> sinkMapCountLimit);
    public sealed virtual void Emit(LogEvent logEvent);
    public sealed virtual void Dispose();
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
