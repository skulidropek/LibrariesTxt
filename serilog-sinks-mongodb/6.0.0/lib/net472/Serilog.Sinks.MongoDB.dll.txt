[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Serilog.Helpers.MongoDbDocumentHelpers : object {
    [ExtensionAttribute]
internal static BsonDocument SanitizeDocumentRecursive(BsonDocument document);
    [ExtensionAttribute]
internal static string SanitizedElementName(string name);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static BsonValue ToBsonValue(LogEventPropertyValue value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Serilog.Helpers.MongoDbHelper : object {
    [ExtensionAttribute]
internal static bool CollectionExists(IMongoDatabase database, string collectionName);
    [ExtensionAttribute]
internal static void VerifyCollectionExists(IMongoDatabase database, string collectionName, CreateCollectionOptions collectionCreationOptions);
    [ExtensionAttribute]
internal static void VerifyExpireTTLSetup(IMongoDatabase database, string collectionName, Nullable`1<TimeSpan> expireTtl);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Serilog.Helpers.RollingIntervalHelper : object {
    [ExtensionAttribute]
internal static string GetCollectionName(RollingInterval interval, string collectionName);
    [ExtensionAttribute]
internal static string GetDateTimeFormatForInterval(RollingInterval interval);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Serilog.LoggerConfigurationMongoDBExtensions : object {
    [ExtensionAttribute]
public static LoggerConfiguration MongoDBBson(LoggerSinkConfiguration loggerConfiguration, string databaseUrl, string collectionName, LogEventLevel restrictedToMinimumLevel, int batchPostingLimit, Nullable`1<TimeSpan> period, Nullable`1<long> cappedMaxSizeMb, Nullable`1<long> cappedMaxDocuments, Nullable`1<RollingInterval> rollingInterval);
    [ExtensionAttribute]
public static LoggerConfiguration MongoDBBson(LoggerSinkConfiguration loggerConfiguration, Action`1<MongoDBSinkConfiguration> configureAction, LogEventLevel restrictedToMinimumLevel);
    [ExtensionAttribute]
public static LoggerConfiguration MongoDB(LoggerSinkConfiguration loggerConfiguration, string databaseUrl, string collectionName, LogEventLevel restrictedToMinimumLevel, int batchPostingLimit, Nullable`1<TimeSpan> period, IFormatProvider formatProvider, ITextFormatter mongoDBJsonFormatter);
    [ExtensionAttribute]
public static LoggerConfiguration MongoDB(LoggerSinkConfiguration loggerConfiguration, IMongoDatabase database, LogEventLevel restrictedToMinimumLevel, string collectionName, int batchPostingLimit, Nullable`1<TimeSpan> period, IFormatProvider formatProvider, ITextFormatter mongoDBJsonFormatter);
    [ExtensionAttribute]
public static LoggerConfiguration MongoDBCapped(LoggerSinkConfiguration loggerConfiguration, string databaseUrl, LogEventLevel restrictedToMinimumLevel, long cappedMaxSizeMb, Nullable`1<long> cappedMaxDocuments, string collectionName, int batchPostingLimit, Nullable`1<TimeSpan> period, IFormatProvider formatProvider, ITextFormatter mongoDBJsonFormatter);
    [ExtensionAttribute]
public static LoggerConfiguration MongoDBCapped(LoggerSinkConfiguration loggerConfiguration, IMongoDatabase database, LogEventLevel restrictedToMinimumLevel, long cappedMaxSizeMb, Nullable`1<long> cappedMaxDocuments, string collectionName, int batchPostingLimit, Nullable`1<TimeSpan> period, IFormatProvider formatProvider, ITextFormatter mongoDBJsonFormatter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Serilog.Sinks.MongoDB.DefaultJsonFormatter : object {
    private bool _omitEnclosingObject;
    private string _closingDelimiter;
    private bool _renderMessage;
    private bool _renderMessageTemplate;
    [NullableAttribute("2")]
private IFormatProvider _formatProvider;
    private IDictionary`2<Type, Action`3<object, bool, TextWriter>> _literalWriters;
    [NullableContextAttribute("2")]
protected DefaultJsonFormatter(bool omitEnclosingObject, string closingDelimiter, bool renderMessage, IFormatProvider formatProvider, bool renderMessageTemplate);
    public sealed virtual void Format(LogEvent logEvent, TextWriter output);
    protected void AddLiteralWriter(Type type, Action`2<object, TextWriter> writer);
    protected virtual void WriteRenderings(IGrouping`2[] tokensWithFormat, IReadOnlyDictionary`2<string, LogEventPropertyValue> properties, TextWriter output);
    protected virtual void WriteRenderingsValues(IGrouping`2[] tokensWithFormat, IReadOnlyDictionary`2<string, LogEventPropertyValue> properties, TextWriter output);
    protected virtual void WriteProperties(IReadOnlyDictionary`2<string, LogEventPropertyValue> properties, TextWriter output);
    protected virtual void WritePropertiesValues(IReadOnlyDictionary`2<string, LogEventPropertyValue> properties, TextWriter output);
    protected virtual void WriteException(Exception exception, String& delim, TextWriter output);
    protected virtual void WriteRenderedMessage(string message, String& delim, TextWriter output);
    protected virtual void WriteMessageTemplate(string template, String& delim, TextWriter output);
    protected virtual void WriteLevel(LogEventLevel level, String& delim, TextWriter output);
    protected virtual void WriteTimestamp(DateTimeOffset timestamp, String& delim, TextWriter output);
    protected virtual void WriteStructure(string typeTag, IEnumerable`1<LogEventProperty> properties, TextWriter output);
    protected virtual void WriteSequence(IEnumerable elements, TextWriter output);
    protected virtual void WriteDictionary(IReadOnlyDictionary`2<ScalarValue, LogEventPropertyValue> elements, TextWriter output);
    protected virtual void WriteJsonProperty(string name, object value, String& precedingDelimiter, TextWriter output);
    protected virtual void WriteJsonArrayProperty(string name, IEnumerable sequence, String& precedingDelimiter, TextWriter output);
    protected virtual void WriteLiteralValue(object value, TextWriter output);
    private void WriteLiteral(object value, TextWriter output, bool forceQuotation);
    private static void WriteToString(object number, bool quote, TextWriter output);
    private static void WriteBoolean(bool value, TextWriter output);
    private static void WriteSingle(float value, TextWriter output);
    private static void WriteDouble(double value, TextWriter output);
    private static void WriteOffset(DateTimeOffset value, TextWriter output);
    private static void WriteDateTime(DateTime value, TextWriter output);
    private static void WriteString(string value, TextWriter output);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_7(object v, bool q, TextWriter w);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_8(object v, bool q, TextWriter w);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_9(object v, bool q, TextWriter w);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_10(object v, bool q, TextWriter w);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Serilog.Sinks.MongoDB.LogEntry : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private LogEventLevel <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UtcTimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private MessageTemplate <MessageTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RenderedMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private BsonDocument <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private BsonDocument <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpanId>k__BackingField;
    [BsonRepresentationAttribute]
public string Id { get; public set; }
    [BsonRepresentationAttribute]
public LogEventLevel Level { get; public set; }
    public DateTime UtcTimeStamp { get; public set; }
    [BsonIgnoreIfNullAttribute]
public MessageTemplate MessageTemplate { get; public set; }
    public string RenderedMessage { get; public set; }
    public BsonDocument Properties { get; public set; }
    public BsonDocument Exception { get; public set; }
    [BsonIgnoreIfNullAttribute]
public string TraceId { get; public set; }
    [BsonIgnoreIfNullAttribute]
public string SpanId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public LogEventLevel get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(LogEventLevel value);
    [CompilerGeneratedAttribute]
public DateTime get_UtcTimeStamp();
    [CompilerGeneratedAttribute]
public void set_UtcTimeStamp(DateTime value);
    [CompilerGeneratedAttribute]
public MessageTemplate get_MessageTemplate();
    [CompilerGeneratedAttribute]
public void set_MessageTemplate(MessageTemplate value);
    [CompilerGeneratedAttribute]
public string get_RenderedMessage();
    [CompilerGeneratedAttribute]
public void set_RenderedMessage(string value);
    [CompilerGeneratedAttribute]
public BsonDocument get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(BsonDocument value);
    [CompilerGeneratedAttribute]
public BsonDocument get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(BsonDocument value);
    [CompilerGeneratedAttribute]
public string get_TraceId();
    [CompilerGeneratedAttribute]
public void set_TraceId(string value);
    [CompilerGeneratedAttribute]
public string get_SpanId();
    [CompilerGeneratedAttribute]
public void set_SpanId(string value);
    [NullableContextAttribute("1")]
public static LogEntry MapFrom(LogEvent logEvent, bool includeMessageTemplate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.MongoDB.MongoDBJsonFormatter : DefaultJsonFormatter {
    private IDictionary`2<Type, Action`2<object, TextWriter>> _dateTimeWriters;
    [NullableContextAttribute("2")]
public MongoDBJsonFormatter(bool omitEnclosingObject, string closingDelimiter, bool renderMessage, IFormatProvider formatProvider);
    protected virtual void WriteJsonProperty(string name, object value, String& precedingDelimiter, TextWriter output);
    private static void WriteOffset(DateTimeOffset value, TextWriter output);
    private static void WriteDateTime(DateTime value, TextWriter output);
}
public class Serilog.Sinks.MongoDB.MongoDBSink : MongoDBSinkBase {
    private static MongoDBSink();
    [NullableContextAttribute("1")]
public MongoDBSink(MongoDBSinkConfiguration configuration);
    [NullableContextAttribute("1")]
public virtual Task EmitBatchAsync(IEnumerable`1<LogEvent> events);
    [CompilerGeneratedAttribute]
private LogEntry <EmitBatchAsync>b__2_0(LogEvent event);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Serilog.Sinks.MongoDB.MongoDBSinkBase : object {
    private MongoDBSinkConfiguration _configuration;
    private Lazy`1<IMongoDatabase> _mongoDatabase;
    protected bool IncludeMessageTemplate { get; }
    protected string CollectionName { get; }
    protected RollingInterval RollingInterval { get; }
    protected MongoDBSinkBase(MongoDBSinkConfiguration configuration);
    protected bool get_IncludeMessageTemplate();
    protected string get_CollectionName();
    protected RollingInterval get_RollingInterval();
    public abstract virtual Task EmitBatchAsync(IEnumerable`1<LogEvent> batch);
    public virtual Task OnEmptyBatchAsync();
    protected static IMongoDatabase GetVerifiedMongoDatabaseFromConfiguration(MongoDBSinkConfiguration configuration);
    public IMongoCollection`1<T> GetCollection();
    protected Task InsertMany(IEnumerable`1<T> objects);
    [CompilerGeneratedAttribute]
private IMongoDatabase <.ctor>b__2_0();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Serilog.Sinks.MongoDB.MongoDBSinkConfiguration : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CollectionName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BatchPostingLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private CreateCollectionOptions <CollectionCreationOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <ExpireTTL>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <BatchPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private MongoUrl <MongoUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IMongoDatabase <MongoDatabase>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Legacy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExcludeMessageTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private InsertManyOptions <InsertManyOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private RollingInterval <RollingInterval>k__BackingField;
    [NullableAttribute("1")]
public string CollectionName { get; private set; }
    public int BatchPostingLimit { get; private set; }
    public CreateCollectionOptions CollectionCreationOptions { get; private set; }
    public Nullable`1<TimeSpan> ExpireTTL { get; private set; }
    public TimeSpan BatchPeriod { get; private set; }
    public MongoUrl MongoUrl { get; private set; }
    public IMongoDatabase MongoDatabase { get; private set; }
    public bool Legacy { get; internal set; }
    public bool ExcludeMessageTemplate { get; internal set; }
    public InsertManyOptions InsertManyOptions { get; internal set; }
    public RollingInterval RollingInterval { get; private set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CollectionName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private void set_CollectionName(string value);
    [CompilerGeneratedAttribute]
public int get_BatchPostingLimit();
    [CompilerGeneratedAttribute]
private void set_BatchPostingLimit(int value);
    [CompilerGeneratedAttribute]
public CreateCollectionOptions get_CollectionCreationOptions();
    [CompilerGeneratedAttribute]
private void set_CollectionCreationOptions(CreateCollectionOptions value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_ExpireTTL();
    [CompilerGeneratedAttribute]
private void set_ExpireTTL(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public TimeSpan get_BatchPeriod();
    [CompilerGeneratedAttribute]
private void set_BatchPeriod(TimeSpan value);
    [CompilerGeneratedAttribute]
public MongoUrl get_MongoUrl();
    [CompilerGeneratedAttribute]
private void set_MongoUrl(MongoUrl value);
    [CompilerGeneratedAttribute]
public IMongoDatabase get_MongoDatabase();
    [CompilerGeneratedAttribute]
private void set_MongoDatabase(IMongoDatabase value);
    [CompilerGeneratedAttribute]
public bool get_Legacy();
    [CompilerGeneratedAttribute]
internal void set_Legacy(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExcludeMessageTemplate();
    [CompilerGeneratedAttribute]
internal void set_ExcludeMessageTemplate(bool value);
    [CompilerGeneratedAttribute]
public InsertManyOptions get_InsertManyOptions();
    [CompilerGeneratedAttribute]
internal void set_InsertManyOptions(InsertManyOptions value);
    [CompilerGeneratedAttribute]
public RollingInterval get_RollingInterval();
    [CompilerGeneratedAttribute]
private void set_RollingInterval(RollingInterval value);
    public void Validate();
    public void SetRollingInternal(RollingInterval rollingInterval);
    public void SetBatchPeriod(TimeSpan period);
    public void SetExpireTTL(Nullable`1<TimeSpan> timeToLive);
    public void SetExcludeMessageTemplate(bool excludeMessageTemplate);
    [NullableContextAttribute("1")]
public void ConfigureInsertOptions(Action`1<InsertManyOptions> configureInsertManyOptions);
    public void SetCreateCappedCollection(long cappedMaxSizeMb, Nullable`1<long> cappedMaxDocuments);
    [NullableContextAttribute("1")]
public void SetMongoDatabase(IMongoDatabase database);
    [NullableContextAttribute("1")]
public void SetMongoUrl(string mongoUrl);
    [NullableContextAttribute("1")]
public void SetCollectionName(string collectionName);
    public void SetBatchPostingLimit(int batchPostingLimit);
    [NullableContextAttribute("1")]
public bool TrySetMongoUrlFromConnectionStringNamed(string connectionStringName);
    [NullableContextAttribute("1")]
public void SetConnectionString(string connectionString);
    [NullableContextAttribute("1")]
internal PeriodicBatchingSinkOptions ToPeriodicBatchingSinkOptions();
}
public static class Serilog.Sinks.MongoDB.MongoDBSinkDefaults : object {
    public static int BatchPostingLimit;
    [NullableAttribute("1")]
public static string CollectionName;
    public static int CappedCollectionMaxSizeMb;
    public static TimeSpan BatchPeriod;
    private static MongoDBSinkDefaults();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.MongoDB.MongoDBSinkLegacy : MongoDBSinkBase {
    private ITextFormatter _formatter;
    [NullableContextAttribute("2")]
public MongoDBSinkLegacy(MongoDBSinkConfiguration configuration, IFormatProvider formatProvider, ITextFormatter textFormatter);
    private string GenerateJson(IEnumerable`1<LogEvent> events);
    protected IReadOnlyCollection`1<BsonDocument> GenerateBsonDocuments(IEnumerable`1<LogEvent> events);
    public virtual Task EmitBatchAsync(IEnumerable`1<LogEvent> events);
}
public enum Serilog.Sinks.MongoDB.RollingInterval : Enum {
    public int value__;
    public static RollingInterval Infinite;
    public static RollingInterval Year;
    public static RollingInterval Month;
    public static RollingInterval Day;
    public static RollingInterval Hour;
    public static RollingInterval Minute;
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.ExperimentalAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UrlFormat>k__BackingField;
    public string DiagnosticId { get; }
    [NullableAttribute("2")]
public string UrlFormat { get; public set; }
    public ExperimentalAttribute(string diagnosticId);
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UrlFormat();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UrlFormat(string value);
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("32")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.StringSyntaxAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Syntax>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    public static string CompositeFormat;
    public static string DateOnlyFormat;
    public static string DateTimeFormat;
    public static string EnumFormat;
    public static string GuidFormat;
    public static string Json;
    public static string NumericFormat;
    public static string Regex;
    public static string TimeOnlyFormat;
    public static string TimeSpanFormat;
    public static string Uri;
    public static string Xml;
    public string Syntax { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] Arguments { get; }
    public StringSyntaxAttribute(string syntax);
    public StringSyntaxAttribute(string syntax, Object[] arguments);
    [CompilerGeneratedAttribute]
public string get_Syntax();
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
}
[AttributeUsageAttribute("2240")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.UnscopedRefAttribute : Attribute {
}
[IsReadOnlyAttribute]
[ExcludeFromCodeCoverageAttribute]
internal class System.Index : ValueType {
    private int _value;
    public static Index Start { get; }
    public static Index End { get; }
    public int Value { get; }
    public bool IsFromEnd { get; }
    public Index(int value, bool fromEnd);
    private Index(int value);
    public static Index get_Start();
    public static Index get_End();
    public static Index FromStart(int value);
    public static Index FromEnd(int value);
    public int get_Value();
    public bool get_IsFromEnd();
    public int GetOffset(int length);
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Index other);
    public virtual int GetHashCode();
    public static Index op_Implicit(int value);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
private string ToStringFromEnd();
}
[IsReadOnlyAttribute]
[ExcludeFromCodeCoverageAttribute]
internal class System.Range : ValueType {
    [CompilerGeneratedAttribute]
private Index <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Index <End>k__BackingField;
    public Index Start { get; }
    public Index End { get; }
    public static Range All { get; }
    public Range(Index start, Index end);
    [CompilerGeneratedAttribute]
public Index get_Start();
    [CompilerGeneratedAttribute]
public Index get_End();
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Range other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static Range StartAt(Index start);
    public static Range EndAt(Index end);
    public static Range get_All();
    public ValueTuple`2<int, int> GetOffsetAndLength(int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1036")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CollectionBuilderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BuilderType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    public Type BuilderType { get; }
    public string MethodName { get; }
    public CollectionBuilderAttribute(Type builderType, string methodName);
    [CompilerGeneratedAttribute]
public Type get_BuilderType();
    [CompilerGeneratedAttribute]
public string get_MethodName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FeatureName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    public static string RefStructs;
    public static string RequiredMembers;
    public string FeatureName { get; }
    public bool IsOptional { get; public set; }
    public CompilerFeatureRequiredAttribute(string featureName);
    [CompilerGeneratedAttribute]
public string get_FeatureName();
    [CompilerGeneratedAttribute]
public bool get_IsOptional();
    [CompilerGeneratedAttribute]
public void set_IsOptional(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Arguments>k__BackingField;
    public String[] Arguments { get; }
    public InterpolatedStringHandlerArgumentAttribute(string argument);
    public InterpolatedStringHandlerArgumentAttribute(String[] arguments);
    [CompilerGeneratedAttribute]
public String[] get_Arguments();
}
[AttributeUsageAttribute("12")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute : Attribute {
}
[EditorBrowsableAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.ModuleInitializerAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("396")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.RequiredMemberAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[EditorBrowsableAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.RequiresLocationAttribute : Attribute {
}
[AttributeUsageAttribute("1774")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.SkipLocalsInitAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.Versioning.RequiresPreviewFeaturesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresPreviewFeaturesAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[ExtensionAttribute]
internal static class System.StringHelpers : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static bool Contains(string str, string value, StringComparison comparison);
}
