[ExtensionAttribute]
public static class Serilog.MessageSinkExtensions : object {
    [ExtensionAttribute]
public static Logger CreateTestLogger(IMessageSink messageSink, LogEventLevel restrictedToMinimumLevel, string outputTemplate, IFormatProvider formatProvider, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static Logger CreateTestLogger(IMessageSink messageSink, ITextFormatter formatter, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
}
public class Serilog.Sinks.XUnit.TestOutputSink : object {
    private IMessageSink _messageSink;
    private ITestOutputHelper _testOutputHelper;
    private ITextFormatter _textFormatter;
    public TestOutputSink(IMessageSink messageSink, ITextFormatter textFormatter);
    public TestOutputSink(ITestOutputHelper testOutputHelper, ITextFormatter textFormatter);
    public sealed virtual void Emit(LogEvent logEvent);
}
[ExtensionAttribute]
public static class Serilog.TestOutputHelperExtensions : object {
    [ExtensionAttribute]
public static Logger CreateTestLogger(ITestOutputHelper testOutputHelper, LogEventLevel restrictedToMinimumLevel, string outputTemplate, IFormatProvider formatProvider, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static Logger CreateTestLogger(ITestOutputHelper testOutputHelper, ITextFormatter formatter, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
}
[ExtensionAttribute]
public static class Serilog.TestOutputLoggerConfigurationExtensions : object {
    internal static string DefaultConsoleOutputTemplate;
    [ExtensionAttribute]
public static LoggerConfiguration TestOutput(LoggerSinkConfiguration sinkConfiguration, IMessageSink messageSink, LogEventLevel restrictedToMinimumLevel, string outputTemplate, IFormatProvider formatProvider, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static LoggerConfiguration TestOutput(LoggerSinkConfiguration sinkConfiguration, IMessageSink messageSink, ITextFormatter formatter, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static LoggerConfiguration TestOutput(LoggerSinkConfiguration sinkConfiguration, ITestOutputHelper testOutputHelper, LogEventLevel restrictedToMinimumLevel, string outputTemplate, IFormatProvider formatProvider, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static LoggerConfiguration TestOutput(LoggerSinkConfiguration sinkConfiguration, ITestOutputHelper testOutputHelper, ITextFormatter formatter, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
}
