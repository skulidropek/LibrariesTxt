[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Serilog.Extensions.Logging.CachingMessageTemplateParser : object {
    private MessageTemplateParser _innerParser;
    private object _templatesLock;
    private Hashtable _templates;
    private static int MaxCacheItems;
    private static int MaxCachedTemplateLength;
    public MessageTemplate Parse(string messageTemplate);
}
public static class Serilog.Extensions.Logging.LevelConvert : object {
    public static LogEventLevel ToSerilogLevel(LogLevel logLevel);
    public static LogLevel ToExtensionsLevel(LogEventLevel logEventLevel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Extensions.Logging.LoggerProviderCollection : object {
    private ILoggerProvider[] modreq(System.Runtime.CompilerServices.IsVolatile) _providers;
    public IEnumerable`1<ILoggerProvider> Providers { get; }
    public void AddProvider(ILoggerProvider provider);
    public IEnumerable`1<ILoggerProvider> get_Providers();
    public sealed virtual void Dispose();
}
internal class Serilog.Extensions.Logging.LoggerProviderCollectionSink : object {
    [NullableAttribute("1")]
private LoggerProviderCollection _providers;
    [NullableContextAttribute("1")]
public LoggerProviderCollectionSink(LoggerProviderCollection providers);
    [NullableContextAttribute("1")]
public sealed virtual void Emit(LogEvent logEvent);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Serilog.Extensions.Logging.SerilogLogger : object {
    internal static ConcurrentDictionary`2<string, string> DestructureDictionary;
    internal static ConcurrentDictionary`2<string, string> StringifyDictionary;
    private SerilogLoggerProvider _provider;
    private ILogger _logger;
    private static CachingMessageTemplateParser MessageTemplateParser;
    private static LogEventProperty[] LowEventIdValues;
    [NullableContextAttribute("2")]
public SerilogLogger(SerilogLoggerProvider provider, ILogger logger, string name);
    private static SerilogLogger();
    internal static string GetKeyWithoutFirstSymbol(ConcurrentDictionary`2<string, string> source, string key);
    public sealed virtual bool IsEnabled(LogLevel logLevel);
    public sealed virtual IDisposable BeginScope(TState state);
    [NullableContextAttribute("2")]
public sealed virtual void Log(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3<TState, Exception, string> formatter);
    private LogEvent PrepareWrite(LogEventLevel level, EventId eventId, TState state, Exception exception, Func`3<TState, Exception, string> formatter);
    [NullableContextAttribute("2")]
private static object AsLoggableValue(TState state, Func`3<TState, Exception, string> formatter);
    internal static LogEventProperty CreateEventIdProperty(EventId eventId);
}
public class Serilog.Extensions.Logging.SerilogLoggerFactory : object {
    [NullableAttribute("2")]
private LoggerProviderCollection _providerCollection;
    [NullableAttribute("1")]
private SerilogLoggerProvider _provider;
    [NullableContextAttribute("2")]
public SerilogLoggerFactory(ILogger logger, bool dispose, LoggerProviderCollection providerCollection);
    public sealed virtual void Dispose();
    [NullableContextAttribute("1")]
public sealed virtual ILogger CreateLogger(string categoryName);
    [NullableContextAttribute("1")]
public sealed virtual void AddProvider(ILoggerProvider provider);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ProviderAliasAttribute("Serilog")]
public class Serilog.Extensions.Logging.SerilogLoggerProvider : object {
    [NullableAttribute("1")]
internal static string OriginalFormatPropertyName;
    [NullableAttribute("1")]
internal static string ScopePropertyName;
    private ILogger _logger;
    private Action _dispose;
    private IExternalScopeProvider _externalScopeProvider;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLocal`1<SerilogLoggerScope> _value;
    internal SerilogLoggerScope CurrentScope { get; internal set; }
    public SerilogLoggerProvider(ILogger logger, bool dispose);
    [NullableContextAttribute("1")]
public sealed virtual ILogger CreateLogger(string name);
    [NullableContextAttribute("1")]
public IDisposable BeginScope(T state);
    [NullableContextAttribute("1")]
public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
    [NullableContextAttribute("1")]
public sealed virtual void SetScopeProvider(IExternalScopeProvider scopeProvider);
    internal SerilogLoggerScope get_CurrentScope();
    internal void set_CurrentScope(SerilogLoggerScope value);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Serilog.Extensions.Logging.SerilogLoggerScope : object {
    [NullableAttribute("1")]
private static string NoName;
    [NullableAttribute("1")]
private SerilogLoggerProvider _provider;
    private object _state;
    private IDisposable _chainedDisposable;
    private bool _disposed;
    [CompilerGeneratedAttribute]
private SerilogLoggerScope <Parent>k__BackingField;
    public SerilogLoggerScope Parent { get; }
    public SerilogLoggerScope(SerilogLoggerProvider provider, object state, IDisposable chainedDisposable);
    [CompilerGeneratedAttribute]
public SerilogLoggerScope get_Parent();
    public sealed virtual void Dispose();
    [NullableContextAttribute("1")]
public void EnrichAndCreateScopeItem(LogEvent logEvent, ILogEventPropertyFactory propertyFactory, LogEventPropertyValue& scopeItem);
    [NullableContextAttribute("1")]
public static void EnrichWithStateAndCreateScopeItem(LogEvent logEvent, ILogEventPropertyFactory propertyFactory, object state, LogEventPropertyValue& scopeItem);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static void <EnrichWithStateAndCreateScopeItem>g__AddProperty|11_0(string key, object value, <>c__DisplayClass11_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
internal class Serilog.Extensions.Logging.SerilogLogValues : ValueType {
    private MessageTemplate _messageTemplate;
    private IReadOnlyDictionary`2<string, LogEventPropertyValue> _properties;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private KeyValuePair`2[] _values;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public KeyValuePair`2<string, object> Item { get; }
    public int Count { get; }
    public SerilogLogValues(MessageTemplate messageTemplate, IReadOnlyDictionary`2<string, LogEventPropertyValue> properties);
    public sealed virtual KeyValuePair`2<string, object> get_Item(int index);
    public sealed virtual int get_Count();
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    public virtual string ToString();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[ExtensionAttribute]
internal static class Serilog.Extensions.StringExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool StartsWith(string str, char value);
}
[ExtensionAttribute]
public static class Serilog.LoggerSinkConfigurationExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static LoggerConfiguration Providers(LoggerSinkConfiguration configuration, LoggerProviderCollection providers, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch);
}
[ExtensionAttribute]
public static class Serilog.SerilogLoggerFactoryExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static ILoggerFactory AddSerilog(ILoggerFactory factory, ILogger logger, bool dispose);
}
[ExtensionAttribute]
public static class Serilog.SerilogLoggingBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static ILoggingBuilder AddSerilog(ILoggingBuilder builder, ILogger logger, bool dispose);
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
