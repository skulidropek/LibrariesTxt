[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Serilog.LoggerConfigurationEventLogExtensions : object {
    private static string DefaultOutputTemplate;
    [ExtensionAttribute]
public static LoggerConfiguration EventLog(LoggerSinkConfiguration loggerConfiguration, string source, string logName, string machineName, bool manageEventSource, string outputTemplate, IFormatProvider formatProvider, LogEventLevel restrictedToMinimumLevel, IEventIdProvider eventIdProvider);
    [ExtensionAttribute]
public static LoggerConfiguration EventLog(LoggerSinkConfiguration loggerConfiguration, ITextFormatter formatter, string source, string logName, string machineName, bool manageEventSource, LogEventLevel restrictedToMinimumLevel, IEventIdProvider eventIdProvider);
    private static bool IsWindows();
}
internal class Serilog.Sinks.EventLog.EventIdHashProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual ushort ComputeEventId(LogEvent logEvent);
    [NullableContextAttribute("1")]
private static int Compute(string messageTemplate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.EventLog.EventLogSink : object {
    private static string ApplicationLogName;
    private static int MaximumPayloadLengthChars;
    private static int MaximumSourceNameLengthChars;
    private static int SourceMovedEventId;
    private IEventIdProvider _eventIdProvider;
    private ITextFormatter _textFormatter;
    private EventLog _log;
    public EventLogSink(string source, string logName, ITextFormatter textFormatter, string machineName, bool manageEventSource);
    public EventLogSink(string source, string logName, ITextFormatter textFormatter, string machineName, bool manageEventSource, IEventIdProvider eventIdProvider);
    private static void ConfigureSource(EventLog log, string source);
    public sealed virtual void Emit(LogEvent logEvent);
    private static EventLogEntryType LevelToEventLogEntryType(LogEventLevel logEventLevel);
}
[NullableContextAttribute("1")]
public interface Serilog.Sinks.EventLog.IEventIdProvider {
    public abstract virtual ushort ComputeEventId(LogEvent logEvent);
}
internal class Serilog.Sinks.EventLog.NullSink : object {
    [NullableContextAttribute("1")]
public sealed virtual void Emit(LogEvent logEvent);
}
