[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
public interface Serilog.Sinks.PeriodicBatching.IBatchedLogEventSink {
    public abstract virtual Task EmitBatchAsync(IEnumerable`1<LogEvent> batch);
    public abstract virtual Task OnEmptyBatchAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Serilog.Sinks.PeriodicBatching.LegacyBatchedSinkAdapter : object {
    private IBatchedLogEventSink _inner;
    private bool _dispose;
    public LegacyBatchedSinkAdapter(IBatchedLogEventSink inner, bool dispose);
    public sealed virtual Task EmitBatchAsync(IReadOnlyCollection`1<LogEvent> batch);
    public sealed virtual Task OnEmptyBatchAsync();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink : object {
    private ILogEventSink _targetSink;
    private bool _inheritanceApi;
    [ObsoleteAttribute("Implement `IBatchedLogEventSink` and use the `PeriodicBatchingSinkOptions` constructor.")]
public static int NoQueueLimit;
    public PeriodicBatchingSink(IBatchedLogEventSink batchedSink, PeriodicBatchingSinkOptions options);
    [ObsoleteAttribute("Implement `IBatchedLogEventSink` and use the `PeriodicBatchingSinkOptions` constructor.")]
protected PeriodicBatchingSink(int batchSizeLimit, TimeSpan period);
    [ObsoleteAttribute("Implement `IBatchedLogEventSink` and use the `PeriodicBatchingSinkOptions` constructor.")]
protected PeriodicBatchingSink(int batchSizeLimit, TimeSpan period, int queueLimit);
    private static ILogEventSink CreateSink(IBatchedLogEventSink batchedLogEventSink, bool disposeBatchedSink, PeriodicBatchingSinkOptions options);
    public sealed virtual void Emit(LogEvent logEvent);
    protected virtual void EmitBatch(IEnumerable`1<LogEvent> events);
    [AsyncStateMachineAttribute("Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink/<EmitBatchAsync>d__9")]
protected virtual Task EmitBatchAsync(IEnumerable`1<LogEvent> events);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    protected virtual bool CanInclude(LogEvent logEvent);
    protected virtual void OnEmptyBatch();
    [AsyncStateMachineAttribute("Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink/<OnEmptyBatchAsync>d__14")]
protected virtual Task OnEmptyBatchAsync();
    private sealed virtual override Task Serilog.Sinks.PeriodicBatching.IBatchedLogEventSink.EmitBatchAsync(IEnumerable`1<LogEvent> batch);
    private sealed virtual override Task Serilog.Sinks.PeriodicBatching.IBatchedLogEventSink.OnEmptyBatchAsync();
}
public class Serilog.Sinks.PeriodicBatching.PeriodicBatchingSinkOptions : object {
    [CompilerGeneratedAttribute]
private bool <EagerlyEmitFirstEvent>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BatchSizeLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Period>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <QueueLimit>k__BackingField;
    public bool EagerlyEmitFirstEvent { get; public set; }
    public int BatchSizeLimit { get; public set; }
    public TimeSpan Period { get; public set; }
    public Nullable`1<int> QueueLimit { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_EagerlyEmitFirstEvent();
    [CompilerGeneratedAttribute]
public void set_EagerlyEmitFirstEvent(bool value);
    [CompilerGeneratedAttribute]
public int get_BatchSizeLimit();
    [CompilerGeneratedAttribute]
public void set_BatchSizeLimit(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Period();
    [CompilerGeneratedAttribute]
public void set_Period(TimeSpan value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_QueueLimit();
    [CompilerGeneratedAttribute]
public void set_QueueLimit(Nullable`1<int> value);
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
