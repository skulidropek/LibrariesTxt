[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal static class Serilog.ConfigurationDefaults : object {
    internal static string DefaultSource;
    internal static string DefaultSourceType;
    internal static string DefaultHost;
    internal static string DefaultIndex;
    internal static string DefaultEventCollectorPath;
    internal static string DefaultCollectorPath;
}
public class Serilog.Sinks.Splunk.CompactSplunkJsonFormatter : object {
    private static JsonValueFormatter ValueFormatter;
    private string _suffix;
    private bool _renderTemplate;
    private SubSecondPrecision _subSecondPrecision;
    public CompactSplunkJsonFormatter(bool renderTemplate, string source, string sourceType, string host, string index, SubSecondPrecision subSecondPrecision);
    private static CompactSplunkJsonFormatter();
    public sealed virtual void Format(LogEvent logEvent, TextWriter output);
}
public class Serilog.Sinks.Splunk.CustomField : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ValueList>k__BackingField;
    public string Name { get; public set; }
    public List`1<string> ValueList { get; public set; }
    public CustomField(string name, string value);
    public CustomField(string name, List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ValueList();
    [CompilerGeneratedAttribute]
public void set_ValueList(List`1<string> value);
}
public class Serilog.Sinks.Splunk.CustomFields : object {
    [CompilerGeneratedAttribute]
private List`1<CustomField> <CustomFieldList>k__BackingField;
    public List`1<CustomField> CustomFieldList { get; public set; }
    public CustomFields(CustomField customField);
    public CustomFields(List`1<CustomField> customFields);
    [CompilerGeneratedAttribute]
public List`1<CustomField> get_CustomFieldList();
    [CompilerGeneratedAttribute]
public void set_CustomFieldList(List`1<CustomField> value);
}
[ExtensionAttribute]
public static class Serilog.Sinks.Splunk.EpochExtensions : object {
    private static DateTimeOffset Epoch;
    private static string MillisecondFormat;
    private static string MicrosecondFormat;
    private static string NanosecondFormat;
    private static EpochExtensions();
    [ExtensionAttribute]
public static string ToEpoch(DateTimeOffset value, SubSecondPrecision subSecondPrecision);
    private static decimal ToSeconds(long ticks);
}
internal class Serilog.Sinks.Splunk.EventCollectorClient : HttpClient {
    private static string AUTH_SCHEME;
    private static string SPLUNK_REQUEST_CHANNEL;
    public EventCollectorClient(string eventCollectorToken);
    public EventCollectorClient(string eventCollectorToken, HttpMessageHandler messageHandler);
    private void SetHeaders(string eventCollectorToken);
}
internal class Serilog.Sinks.Splunk.EventCollectorRequest : HttpRequestMessage {
    internal EventCollectorRequest(string splunkHost, string jsonPayLoad, string uri);
}
public class Serilog.Sinks.Splunk.EventCollectorSink : object {
    internal static int DefaultQueueLimit;
    private string _splunkHost;
    private string _uriPath;
    private ITextFormatter _jsonFormatter;
    private EventCollectorClient _httpClient;
    private static HttpStatusCode[] HttpEventCollectorApplicationErrors;
    public EventCollectorSink(string splunkHost, string eventCollectorToken, IFormatProvider formatProvider, bool renderTemplate, bool renderMessage, SubSecondPrecision subSecondPrecision);
    public EventCollectorSink(string splunkHost, string eventCollectorToken, string uriPath, string source, string sourceType, string host, string index, IFormatProvider formatProvider, bool renderTemplate, bool renderMessage, HttpMessageHandler messageHandler, SubSecondPrecision subSecondPrecision);
    public EventCollectorSink(string splunkHost, string eventCollectorToken, string uriPath, string source, string sourceType, string host, string index, CustomFields fields, IFormatProvider formatProvider, bool renderTemplate, bool renderMessage, HttpMessageHandler messageHandler, SubSecondPrecision subSecondPrecision);
    public EventCollectorSink(string splunkHost, string eventCollectorToken, string uriPath, ITextFormatter jsonFormatter, HttpMessageHandler messageHandler);
    private static EventCollectorSink();
    public virtual Task OnEmptyBatchAsync();
    [AsyncStateMachineAttribute("Serilog.Sinks.Splunk.EventCollectorSink/<EmitBatchAsync>d__11")]
public virtual Task EmitBatchAsync(IReadOnlyCollection`1<LogEvent> batch);
}
public class Serilog.Sinks.Splunk.SplunkJsonFormatter : object {
    private static JsonValueFormatter ValueFormatter;
    private bool _renderTemplate;
    private IFormatProvider _formatProvider;
    private SubSecondPrecision _subSecondPrecision;
    private bool _renderMessage;
    private string _suffix;
    public SplunkJsonFormatter(bool renderTemplate, bool renderMessage, IFormatProvider formatProvider);
    public SplunkJsonFormatter(bool renderTemplate, bool renderMessage, IFormatProvider formatProvider, string source, string sourceType, string host, string index, SubSecondPrecision subSecondPrecision);
    public SplunkJsonFormatter(bool renderTemplate, bool renderMessage, IFormatProvider formatProvider, string source, string sourceType, string host, string index, CustomFields customFields, SubSecondPrecision subSecondPrecision);
    private static SplunkJsonFormatter();
    public sealed virtual void Format(LogEvent logEvent, TextWriter output);
    private static void WriteProperties(IReadOnlyDictionary`2<string, LogEventPropertyValue> properties, TextWriter output);
}
public enum Serilog.Sinks.Splunk.SubSecondPrecision : Enum {
    public int value__;
    public static SubSecondPrecision Milliseconds;
    public static SubSecondPrecision Microseconds;
    public static SubSecondPrecision Nanoseconds;
}
[ExtensionAttribute]
public static class Serilog.SplunkLoggingConfigurationExtensions : object {
    [ExtensionAttribute]
public static LoggerConfiguration EventCollector(LoggerSinkConfiguration configuration, string splunkHost, string eventCollectorToken, string uriPath, string source, string sourceType, string host, string index, LogEventLevel restrictedToMinimumLevel, IFormatProvider formatProvider, bool renderTemplate, bool renderMessage, int batchIntervalInSeconds, int batchSizeLimit, Nullable`1<int> queueLimit, HttpMessageHandler messageHandler, LoggingLevelSwitch levelSwitch, SubSecondPrecision subSecondPrecision);
    [ExtensionAttribute]
public static LoggerConfiguration EventCollector(LoggerSinkConfiguration configuration, string splunkHost, string eventCollectorToken, ITextFormatter jsonFormatter, string uriPath, LogEventLevel restrictedToMinimumLevel, int batchIntervalInSeconds, int batchSizeLimit, Nullable`1<int> queueLimit, HttpMessageHandler messageHandler, LoggingLevelSwitch levelSwitch);
    [ExtensionAttribute]
public static LoggerConfiguration EventCollector(LoggerSinkConfiguration configuration, string splunkHost, string eventCollectorToken, CustomFields fields, string uriPath, string source, string sourceType, string host, string index, LogEventLevel restrictedToMinimumLevel, IFormatProvider formatProvider, bool renderTemplate, bool renderMessage, int batchIntervalInSeconds, int batchSizeLimit, Nullable`1<int> queueLimit, HttpMessageHandler messageHandler, LoggingLevelSwitch levelSwitch, SubSecondPrecision subSecondPrecision);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
