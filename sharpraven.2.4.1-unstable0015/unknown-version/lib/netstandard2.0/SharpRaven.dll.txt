public class SharpRaven.Configuration : ConfigurationSection {
    private static string DsnKey;
    private static Configuration settings;
    [ConfigurationPropertyAttribute("dsn")]
public DsnElement Dsn { get; }
    public static Configuration Settings { get; }
    private static Configuration();
    public DsnElement get_Dsn();
    public static Configuration get_Settings();
}
public class SharpRaven.Data.BackgroundRequester : object {
    private IRequester requester;
    private BlockingCollection`1<IRequester> queue;
    internal BackgroundRequester(IRequester requester, BlockingCollection`1<IRequester> queue);
    private string EnqueueRequester();
    public sealed virtual void UseEventId(string eventId);
    public sealed virtual string Request();
    public sealed virtual string SendFeedback();
    public sealed virtual Task`1<string> RequestAsync();
    public sealed virtual Task`1<string> SendFeedbackAsync();
}
public class SharpRaven.Data.BackgroundRequesterFactory : object {
    private IRequesterFactory actualRequesterFactory;
    private BlockingCollection`1<IRequester> queue;
    private CancellationTokenSource cancellationTokenSource;
    [CompilerGeneratedAttribute]
private Task <QueueConsumer>k__BackingField;
    internal Task QueueConsumer { get; }
    public BackgroundRequesterFactory(IRequesterFactory actualRequesterFactory, Nullable`1<TimeSpan> emptyQueueDelay, Nullable`1<TimeSpan> shutudownTimeout, int boundedCapacity);
    internal BackgroundRequesterFactory(IRequesterFactory actualRequesterFactory, IProducerConsumerCollection`1<IRequester> queue, CancellationTokenSource cancellationTokenSource, TimeSpan emptyQueueDelay, TimeSpan shutudownTimeout, int boundedCapacity);
    [CompilerGeneratedAttribute]
internal Task get_QueueConsumer();
    [AsyncStateMachineAttribute("SharpRaven.Data.BackgroundRequesterFactory/<Worker>d__8")]
private static Task Worker(BlockingCollection`1<IRequester> queue, CancellationToken cancellation, TimeSpan emptyQueueDelay, TimeSpan shutdownTimeout);
    public sealed virtual IRequester Create(RequestData data, Dsn dsn, TimeSpan timeout, bool useCompression);
    public sealed virtual IRequester Create(SentryUserFeedback feedback, Dsn dsn);
    public sealed virtual void Dispose();
}
public class SharpRaven.Data.Breadcrumb : object {
    private DateTime timestamp;
    [CompilerGeneratedAttribute]
private Nullable`1<BreadcrumbType> <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BreadcrumbLevel> <Level>k__BackingField;
    [JsonPropertyAttribute]
[JsonConverterAttribute("SharpRaven.Serialization.LowerInvariantStringEnumConverter")]
public Nullable`1<BreadcrumbType> Type { get; public set; }
    [JsonPropertyAttribute]
public string Category { get; public set; }
    [JsonPropertyAttribute]
public DateTime Timestamp { get; }
    [JsonPropertyAttribute]
public string Message { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Data { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("SharpRaven.Serialization.LowerInvariantStringEnumConverter")]
public Nullable`1<BreadcrumbLevel> Level { get; public set; }
    public Breadcrumb(string category);
    public Breadcrumb(string category, BreadcrumbType type);
    [CompilerGeneratedAttribute]
public Nullable`1<BreadcrumbType> get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Nullable`1<BreadcrumbType> value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    public DateTime get_Timestamp();
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<BreadcrumbLevel> get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(Nullable`1<BreadcrumbLevel> value);
}
public enum SharpRaven.Data.BreadcrumbLevel : Enum {
    public int value__;
    public static BreadcrumbLevel Critical;
    public static BreadcrumbLevel Error;
    public static BreadcrumbLevel Warning;
    public static BreadcrumbLevel Info;
    public static BreadcrumbLevel Debug;
}
public enum SharpRaven.Data.BreadcrumbType : Enum {
    public int value__;
    public static BreadcrumbType Navigation;
    public static BreadcrumbType Http;
}
public class SharpRaven.Data.Context.App : object {
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Build>k__BackingField;
    [CompilerGeneratedAttribute]
private static AssemblyName <ApplicationName>k__BackingField;
    [JsonPropertyAttribute]
public string Identifier { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> StartTime { get; public set; }
    [JsonPropertyAttribute]
public string Hash { get; public set; }
    [JsonPropertyAttribute]
public string BuildType { get; public set; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Version { get; public set; }
    [JsonPropertyAttribute]
public string Build { get; public set; }
    [JsonIgnoreAttribute]
public static AssemblyName ApplicationName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_Hash();
    [CompilerGeneratedAttribute]
public void set_Hash(string value);
    [CompilerGeneratedAttribute]
public string get_BuildType();
    [CompilerGeneratedAttribute]
public void set_BuildType(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_Build();
    [CompilerGeneratedAttribute]
public void set_Build(string value);
    [CompilerGeneratedAttribute]
public static AssemblyName get_ApplicationName();
    [CompilerGeneratedAttribute]
public static void set_ApplicationName(AssemblyName value);
    internal App Clone();
    internal static App Create();
}
public class SharpRaven.Data.Context.Browser : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
public class SharpRaven.Data.Context.Contexts : object {
    [JsonPropertyAttribute]
private App app;
    [JsonPropertyAttribute]
private Browser browser;
    [JsonPropertyAttribute]
private Device device;
    [JsonPropertyAttribute]
private OperatingSystem operatingSystem;
    [JsonPropertyAttribute]
private Runtime runtime;
    private static Contexts root;
    [JsonIgnoreAttribute]
public App App { get; }
    [JsonIgnoreAttribute]
public Browser Browser { get; }
    [JsonIgnoreAttribute]
public Device Device { get; }
    [JsonIgnoreAttribute]
public OperatingSystem OperatingSystem { get; }
    [JsonIgnoreAttribute]
public Runtime Runtime { get; }
    public App get_App();
    public Browser get_Browser();
    public Device get_Device();
    public OperatingSystem get_OperatingSystem();
    public Runtime get_Runtime();
    internal Contexts Clone();
    internal static Contexts Create();
    private static Contexts CreateNew();
}
public class SharpRaven.Data.Context.Device : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Family>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModelId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Architecture>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <BatteryLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DeviceOrientation> <Orientation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Simulator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MemorySize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <FreeMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <UsableMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <StorageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <FreeStorage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ExternalStorageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ExternalFreeStorage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <BootTime>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeZoneInfo <Timezone>k__BackingField;
    [JsonPropertyAttribute]
private string TimezoneSerializable { get; }
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Family { get; public set; }
    [JsonPropertyAttribute]
public string Model { get; public set; }
    [JsonPropertyAttribute]
public string ModelId { get; public set; }
    [JsonPropertyAttribute]
public string Architecture { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<short> BatteryLevel { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("SharpRaven.Serialization.LowerInvariantStringEnumConverter")]
public Nullable`1<DeviceOrientation> Orientation { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> Simulator { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> MemorySize { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> FreeMemory { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> UsableMemory { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> StorageSize { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> FreeStorage { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> ExternalStorageSize { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<long> ExternalFreeStorage { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> BootTime { get; public set; }
    [JsonIgnoreAttribute]
public TimeZoneInfo Timezone { get; public set; }
    private string get_TimezoneSerializable();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Family();
    [CompilerGeneratedAttribute]
public void set_Family(string value);
    [CompilerGeneratedAttribute]
public string get_Model();
    [CompilerGeneratedAttribute]
public void set_Model(string value);
    [CompilerGeneratedAttribute]
public string get_ModelId();
    [CompilerGeneratedAttribute]
public void set_ModelId(string value);
    [CompilerGeneratedAttribute]
public string get_Architecture();
    [CompilerGeneratedAttribute]
public void set_Architecture(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_BatteryLevel();
    [CompilerGeneratedAttribute]
public void set_BatteryLevel(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DeviceOrientation> get_Orientation();
    [CompilerGeneratedAttribute]
public void set_Orientation(Nullable`1<DeviceOrientation> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Simulator();
    [CompilerGeneratedAttribute]
public void set_Simulator(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MemorySize();
    [CompilerGeneratedAttribute]
public void set_MemorySize(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_FreeMemory();
    [CompilerGeneratedAttribute]
public void set_FreeMemory(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_UsableMemory();
    [CompilerGeneratedAttribute]
public void set_UsableMemory(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_StorageSize();
    [CompilerGeneratedAttribute]
public void set_StorageSize(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_FreeStorage();
    [CompilerGeneratedAttribute]
public void set_FreeStorage(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ExternalStorageSize();
    [CompilerGeneratedAttribute]
public void set_ExternalStorageSize(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ExternalFreeStorage();
    [CompilerGeneratedAttribute]
public void set_ExternalFreeStorage(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_BootTime();
    [CompilerGeneratedAttribute]
public void set_BootTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public TimeZoneInfo get_Timezone();
    [CompilerGeneratedAttribute]
public void set_Timezone(TimeZoneInfo value);
    internal Device Clone();
    internal static Device Create();
    internal static string GetArchitecture();
}
public enum SharpRaven.Data.Context.DeviceOrientation : Enum {
    public int value__;
    [JsonPropertyAttribute]
public static DeviceOrientation Portrait;
    [JsonPropertyAttribute]
public static DeviceOrientation Landscape;
}
public class SharpRaven.Data.Context.OperatingSystem : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RawDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Build>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KernelVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Rooted>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Version { get; public set; }
    [JsonPropertyAttribute]
public string RawDescription { get; public set; }
    [JsonPropertyAttribute]
public string Build { get; public set; }
    [JsonPropertyAttribute]
public string KernelVersion { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> Rooted { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_RawDescription();
    [CompilerGeneratedAttribute]
public void set_RawDescription(string value);
    [CompilerGeneratedAttribute]
public string get_Build();
    [CompilerGeneratedAttribute]
public void set_Build(string value);
    [CompilerGeneratedAttribute]
public string get_KernelVersion();
    [CompilerGeneratedAttribute]
public void set_KernelVersion(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Rooted();
    [CompilerGeneratedAttribute]
public void set_Rooted(Nullable`1<bool> value);
    internal OperatingSystem Clone();
    internal static OperatingSystem Create();
}
public class SharpRaven.Data.Context.Runtime : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RawDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Build>k__BackingField;
    [JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Version { get; public set; }
    [JsonPropertyAttribute]
public string RawDescription { get; public set; }
    [JsonPropertyAttribute]
public string Build { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_RawDescription();
    [CompilerGeneratedAttribute]
public void set_RawDescription(string value);
    [CompilerGeneratedAttribute]
public string get_Build();
    [CompilerGeneratedAttribute]
public void set_Build(string value);
    internal Runtime Clone();
    public static Runtime Create();
}
[ExtensionAttribute]
internal static class SharpRaven.Data.Context.RuntimeExtensions : object {
    [ExtensionAttribute]
public static bool IsNetFx(Runtime runtime);
    [ExtensionAttribute]
public static bool IsNetCore(Runtime runtime);
    [ExtensionAttribute]
private static bool IsRuntime(Runtime runtime, string runtimeName);
}
public class SharpRaven.Data.DefaultHttpRequestBodyConverter : object {
    public sealed virtual bool Matches(string contentType);
    public sealed virtual bool TryConvert(object httpContext, Object& converted);
}
public enum SharpRaven.Data.ErrorLevel : Enum {
    public int value__;
    public static ErrorLevel Fatal;
    public static ErrorLevel Error;
    public static ErrorLevel Warning;
    public static ErrorLevel Info;
    public static ErrorLevel Debug;
}
public class SharpRaven.Data.ExceptionData : Dictionary`2<string, object> {
    private string exceptionType;
    [JsonPropertyAttribute("type")]
public string ExceptionType { get; }
    public ExceptionData(Exception exception);
    public string get_ExceptionType();
    private void AddTo(IDictionary`2<string, object> dictionary);
    private static string UniqueKey(IDictionary`2<string, object> dictionary, object key);
}
public class SharpRaven.Data.ExceptionFrame : object {
    [CompilerGeneratedAttribute]
private string <AbsolutePath>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ColumnNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Filename>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Function>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InApp>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Module>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <PostContext>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <PreContext>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Vars>k__BackingField;
    [JsonPropertyAttribute]
public string AbsolutePath { get; public set; }
    [JsonPropertyAttribute]
public int ColumnNumber { get; public set; }
    [JsonPropertyAttribute]
public string Filename { get; public set; }
    [JsonPropertyAttribute]
public string Function { get; public set; }
    [JsonPropertyAttribute]
public bool InApp { get; public set; }
    [JsonPropertyAttribute]
public int LineNumber { get; public set; }
    [JsonPropertyAttribute]
public string Module { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> PostContext { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> PreContext { get; public set; }
    [JsonPropertyAttribute]
public string Source { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Vars { get; public set; }
    public ExceptionFrame(StackFrame frame);
    [CompilerGeneratedAttribute]
public string get_AbsolutePath();
    [CompilerGeneratedAttribute]
public void set_AbsolutePath(string value);
    [CompilerGeneratedAttribute]
public int get_ColumnNumber();
    [CompilerGeneratedAttribute]
public void set_ColumnNumber(int value);
    [CompilerGeneratedAttribute]
public string get_Filename();
    [CompilerGeneratedAttribute]
public void set_Filename(string value);
    [CompilerGeneratedAttribute]
public string get_Function();
    [CompilerGeneratedAttribute]
public void set_Function(string value);
    [CompilerGeneratedAttribute]
public bool get_InApp();
    [CompilerGeneratedAttribute]
public void set_InApp(bool value);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public void set_LineNumber(int value);
    [CompilerGeneratedAttribute]
public string get_Module();
    [CompilerGeneratedAttribute]
public void set_Module(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_PostContext();
    [CompilerGeneratedAttribute]
public void set_PostContext(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_PreContext();
    [CompilerGeneratedAttribute]
public void set_PreContext(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Vars();
    [CompilerGeneratedAttribute]
public void set_Vars(Dictionary`2<string, string> value);
    public virtual string ToString();
    private static bool IsSystemModuleName(string moduleName);
    private void DemangleAsyncFunctionName();
    private void DemangleAnonymousFunction();
}
public class SharpRaven.Data.FormHttpRequestBodyConverter : object {
    public virtual bool Matches(string contentType);
    public sealed virtual bool TryConvert(object httpContext, Object& converted);
}
public static class SharpRaven.Data.HttpRequestBodyConverter : object {
    public static object Convert(object httpContext);
}
public class SharpRaven.Data.HttpRequester : object {
    private bool useCompression;
    private TimeSpan timeout;
    private RequestData data;
    private SentryUserFeedback feedback;
    private HttpWebRequest webRequest;
    public RequestData Data { get; }
    public HttpWebRequest WebRequest { get; }
    public HttpRequester(RequestData data, Dsn dsn, TimeSpan timeout, bool useCompression);
    internal HttpRequester(SentryUserFeedback feedback, Dsn dsn);
    internal HttpWebRequest CreateWebRequest(Uri uri, Dsn dsn);
    public RequestData get_Data();
    public HttpWebRequest get_WebRequest();
    public sealed virtual void UseEventId(string eventId);
    public sealed virtual string Request();
    public sealed virtual string SendFeedback();
    [AsyncStateMachineAttribute("SharpRaven.Data.HttpRequester/<RequestAsync>d__15")]
public sealed virtual Task`1<string> RequestAsync();
    [AsyncStateMachineAttribute("SharpRaven.Data.HttpRequester/<SendFeedbackAsync>d__16")]
public sealed virtual Task`1<string> SendFeedbackAsync();
}
public class SharpRaven.Data.HttpRequesterFactory : object {
    public sealed virtual IRequester Create(RequestData data, Dsn dsn, TimeSpan timeout, bool useCompression);
    public sealed virtual IRequester Create(SentryUserFeedback feedback, Dsn dsn);
}
public interface SharpRaven.Data.IHttpRequestBodyConverter {
    public abstract virtual bool Matches(string contentType);
    public abstract virtual bool TryConvert(object httpContext, Object& converted);
}
public interface SharpRaven.Data.IJsonPacketFactory {
    [ObsoleteAttribute("Use Create(string, SentryEvent) instead.")]
public abstract virtual JsonPacket Create(string project, SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    [ObsoleteAttribute("Use Create(string, SentryEvent) instead.")]
public abstract virtual JsonPacket Create(string project, Exception exception, SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    public abstract virtual JsonPacket Create(string project, SentryEvent event);
}
public interface SharpRaven.Data.IRequester {
    public abstract virtual void UseEventId(string eventId);
    public abstract virtual string Request();
    public abstract virtual string SendFeedback();
    public abstract virtual Task`1<string> RequestAsync();
    public abstract virtual Task`1<string> SendFeedbackAsync();
}
public interface SharpRaven.Data.IRequesterFactory {
    public abstract virtual IRequester Create(RequestData data, Dsn dsn, TimeSpan timeout, bool useCompression);
    public abstract virtual IRequester Create(SentryUserFeedback feedback, Dsn dsn);
}
public interface SharpRaven.Data.ISentryRequest {
    public IDictionary`2<string, string> Cookies { get; public set; }
    public object Data { get; public set; }
    public IDictionary`2<string, string> Environment { get; public set; }
    public IDictionary`2<string, string> Headers { get; public set; }
    public string Method { get; public set; }
    public string QueryString { get; public set; }
    public string Url { get; public set; }
    public abstract virtual IDictionary`2<string, string> get_Cookies();
    public abstract virtual void set_Cookies(IDictionary`2<string, string> value);
    public abstract virtual object get_Data();
    public abstract virtual void set_Data(object value);
    public abstract virtual IDictionary`2<string, string> get_Environment();
    public abstract virtual void set_Environment(IDictionary`2<string, string> value);
    public abstract virtual IDictionary`2<string, string> get_Headers();
    public abstract virtual void set_Headers(IDictionary`2<string, string> value);
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string value);
    public abstract virtual string get_QueryString();
    public abstract virtual void set_QueryString(string value);
    public abstract virtual string get_Url();
    public abstract virtual void set_Url(string value);
}
public interface SharpRaven.Data.ISentryRequestFactory {
    public abstract virtual ISentryRequest Create();
}
public interface SharpRaven.Data.ISentryUserFactory {
    public abstract virtual SentryUser Create();
}
public class SharpRaven.Data.JsonHttpRequestBodyConverter : object {
    public sealed virtual bool Matches(string contentType);
    public sealed virtual bool TryConvert(object httpContext, Object& converted);
}
public class SharpRaven.Data.JsonPacket : object {
    [CompilerGeneratedAttribute]
private Contexts <Contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Culprit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EventID>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SentryException> <Exceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Extra>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Fingerprint>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorLevel <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private SentryMessage <MessageObject>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Modules>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Platform>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Release>k__BackingField;
    [CompilerGeneratedAttribute]
private ISentryRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerName>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <TimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Breadcrumb> <Breadcrumbs>k__BackingField;
    [CompilerGeneratedAttribute]
private SentryUser <User>k__BackingField;
    [JsonPropertyAttribute]
public Contexts Contexts { get; public set; }
    [JsonPropertyAttribute]
public string Culprit { get; public set; }
    [JsonPropertyAttribute]
public string Environment { get; public set; }
    [JsonPropertyAttribute]
public string EventID { get; public set; }
    [JsonPropertyAttribute]
public List`1<SentryException> Exceptions { get; public set; }
    [JsonPropertyAttribute]
public object Extra { get; public set; }
    [JsonPropertyAttribute]
public String[] Fingerprint { get; public set; }
    [JsonPropertyAttribute]
[JsonConverterAttribute("SharpRaven.Serialization.LowerInvariantStringEnumConverter")]
public ErrorLevel Level { get; public set; }
    [JsonPropertyAttribute]
public string Logger { get; public set; }
    [JsonPropertyAttribute]
public string Message { get; public set; }
    [JsonPropertyAttribute]
public SentryMessage MessageObject { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Modules { get; public set; }
    [JsonPropertyAttribute]
public string Platform { get; public set; }
    [JsonPropertyAttribute]
public string Project { get; public set; }
    [JsonPropertyAttribute]
public string Release { get; public set; }
    [JsonPropertyAttribute]
public ISentryRequest Request { get; public set; }
    [JsonPropertyAttribute]
public string ServerName { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Tags { get; public set; }
    [JsonPropertyAttribute]
public DateTime TimeStamp { get; public set; }
    [JsonPropertyAttribute]
public List`1<Breadcrumb> Breadcrumbs { get; public set; }
    [JsonPropertyAttribute]
public SentryUser User { get; public set; }
    public JsonPacket(string project, Exception exception);
    public JsonPacket(string project, SentryEvent event);
    public JsonPacket(string project);
    private static object Merge(SentryEvent event);
    [CompilerGeneratedAttribute]
public Contexts get_Contexts();
    [CompilerGeneratedAttribute]
public void set_Contexts(Contexts value);
    [CompilerGeneratedAttribute]
public string get_Culprit();
    [CompilerGeneratedAttribute]
public void set_Culprit(string value);
    [CompilerGeneratedAttribute]
public string get_Environment();
    [CompilerGeneratedAttribute]
public void set_Environment(string value);
    [CompilerGeneratedAttribute]
public string get_EventID();
    [CompilerGeneratedAttribute]
public void set_EventID(string value);
    [CompilerGeneratedAttribute]
public List`1<SentryException> get_Exceptions();
    [CompilerGeneratedAttribute]
public void set_Exceptions(List`1<SentryException> value);
    [CompilerGeneratedAttribute]
public object get_Extra();
    [CompilerGeneratedAttribute]
public void set_Extra(object value);
    [CompilerGeneratedAttribute]
public String[] get_Fingerprint();
    [CompilerGeneratedAttribute]
public void set_Fingerprint(String[] value);
    [CompilerGeneratedAttribute]
public ErrorLevel get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(ErrorLevel value);
    [CompilerGeneratedAttribute]
public string get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public SentryMessage get_MessageObject();
    [CompilerGeneratedAttribute]
public void set_MessageObject(SentryMessage value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Modules();
    [CompilerGeneratedAttribute]
public void set_Modules(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_Platform();
    [CompilerGeneratedAttribute]
public void set_Platform(string value);
    [CompilerGeneratedAttribute]
public string get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(string value);
    [CompilerGeneratedAttribute]
public string get_Release();
    [CompilerGeneratedAttribute]
public void set_Release(string value);
    [CompilerGeneratedAttribute]
public ISentryRequest get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(ISentryRequest value);
    [CompilerGeneratedAttribute]
public string get_ServerName();
    [CompilerGeneratedAttribute]
public void set_ServerName(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public DateTime get_TimeStamp();
    [CompilerGeneratedAttribute]
public void set_TimeStamp(DateTime value);
    [CompilerGeneratedAttribute]
public List`1<Breadcrumb> get_Breadcrumbs();
    [CompilerGeneratedAttribute]
public void set_Breadcrumbs(List`1<Breadcrumb> value);
    [CompilerGeneratedAttribute]
public SentryUser get_User();
    [CompilerGeneratedAttribute]
public void set_User(SentryUser value);
    public virtual string ToString(Formatting formatting);
    public virtual string ToString();
    private void Initialize(Exception exception, bool forceCaptureStackTrace);
}
public class SharpRaven.Data.JsonPacketFactory : object {
    [ObsoleteAttribute("Use Create(string, SentryEvent) instead.")]
public sealed virtual JsonPacket Create(string project, SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    [ObsoleteAttribute("Use Create(string, SentryEvent) instead.")]
public sealed virtual JsonPacket Create(string project, Exception exception, SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    public sealed virtual JsonPacket Create(string project, SentryEvent event);
    protected virtual JsonPacket OnCreate(JsonPacket jsonPacket);
}
public class SharpRaven.Data.MultiPartFormHttpRequestBodyConverter : FormHttpRequestBodyConverter {
    public virtual bool Matches(string contentType);
}
public class SharpRaven.Data.RequestData : object {
    private string formatted;
    private string raw;
    private string scrubbed;
    [CompilerGeneratedAttribute]
private JsonPacket <JsonPacket>k__BackingField;
    [CompilerGeneratedAttribute]
private IScrubber <LogScrubber>k__BackingField;
    public JsonPacket JsonPacket { get; }
    public IScrubber LogScrubber { get; }
    public string Raw { get; }
    public string Scrubbed { get; }
    internal RequestData(JsonPacket packet, IScrubber logScrubber);
    [CompilerGeneratedAttribute]
public JsonPacket get_JsonPacket();
    [CompilerGeneratedAttribute]
public IScrubber get_LogScrubber();
    public string get_Raw();
    public string get_Scrubbed();
    public virtual string ToString();
}
public class SharpRaven.Data.SentryEvent : object {
    private Exception exception;
    private bool forceCaptureStackTrace;
    private IList`1<string> fingerprint;
    private SentryMessage message;
    private IDictionary`2<string, string> tags;
    [CompilerGeneratedAttribute]
private Contexts <Contexts>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Extra>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Breadcrumb> <Breadcrumbs>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorLevel <Level>k__BackingField;
    public Contexts Contexts { get; internal set; }
    public Exception Exception { get; }
    public bool ForceCaptureStackTrace { get; }
    public object Extra { get; public set; }
    public List`1<Breadcrumb> Breadcrumbs { get; public set; }
    public IList`1<string> Fingerprint { get; internal set; }
    public ErrorLevel Level { get; public set; }
    public SentryMessage Message { get; public set; }
    public IDictionary`2<string, string> Tags { get; public set; }
    public SentryEvent(Exception exception, bool forceCaptureStackTrace);
    public SentryEvent(SentryMessage message);
    [CompilerGeneratedAttribute]
public Contexts get_Contexts();
    [CompilerGeneratedAttribute]
internal void set_Contexts(Contexts value);
    public Exception get_Exception();
    public bool get_ForceCaptureStackTrace();
    [CompilerGeneratedAttribute]
public object get_Extra();
    [CompilerGeneratedAttribute]
public void set_Extra(object value);
    [CompilerGeneratedAttribute]
public List`1<Breadcrumb> get_Breadcrumbs();
    [CompilerGeneratedAttribute]
public void set_Breadcrumbs(List`1<Breadcrumb> value);
    public IList`1<string> get_Fingerprint();
    internal void set_Fingerprint(IList`1<string> value);
    [CompilerGeneratedAttribute]
public ErrorLevel get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(ErrorLevel value);
    public SentryMessage get_Message();
    public void set_Message(SentryMessage value);
    public IDictionary`2<string, string> get_Tags();
    public void set_Tags(IDictionary`2<string, string> value);
}
public class SharpRaven.Data.SentryException : object {
    private string message;
    [CompilerGeneratedAttribute]
private string <Module>k__BackingField;
    [CompilerGeneratedAttribute]
private SentryStacktrace <Stacktrace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute]
public string Module { get; public set; }
    [JsonPropertyAttribute]
public SentryStacktrace Stacktrace { get; public set; }
    [JsonPropertyAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
public string Value { get; public set; }
    public SentryException(Exception exception, bool forceCaptureStackTrace);
    [CompilerGeneratedAttribute]
public string get_Module();
    [CompilerGeneratedAttribute]
public void set_Module(string value);
    [CompilerGeneratedAttribute]
public SentryStacktrace get_Stacktrace();
    [CompilerGeneratedAttribute]
public void set_Stacktrace(SentryStacktrace value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public virtual string ToString();
}
public class SharpRaven.Data.SentryMessage : object {
    private string message;
    private Object[] parameters;
    [JsonPropertyAttribute]
public string Message { get; }
    [JsonPropertyAttribute]
public Object[] Parameters { get; }
    public SentryMessage(string format, Object[] parameters);
    public SentryMessage(string message);
    public string get_Message();
    public Object[] get_Parameters();
    public virtual string ToString();
    public static SentryMessage op_Implicit(string message);
    public static string op_Implicit(SentryMessage message);
}
public class SharpRaven.Data.SentryRequest : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Cookies>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Cookies { get; public set; }
    [JsonPropertyAttribute]
public object Data { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Environment { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Headers { get; public set; }
    [JsonPropertyAttribute]
public string Method { get; public set; }
    [JsonPropertyAttribute]
public string QueryString { get; public set; }
    [JsonPropertyAttribute]
public string Url { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_Cookies();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Cookies(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Data();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Data(object value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Headers(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Method();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Method(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_QueryString();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueryString(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(string value);
    public static ISentryRequest GetRequest(ISentryRequestFactory factory);
}
public class SharpRaven.Data.SentryRequestFactory : object {
    private static bool checkedForHttpContextProperty;
    [DynamicAttribute]
[CompilerGeneratedAttribute]
private static object <CurrentHttpContextProperty>k__BackingField;
    [DynamicAttribute]
internal static object CurrentHttpContextProperty { get; internal set; }
    [JsonIgnoreAttribute]
internal static bool HasCurrentHttpContextProperty { get; }
    [JsonIgnoreAttribute]
internal static bool HasHttpContext { get; }
    [DynamicAttribute]
internal static object HttpContext { get; }
    [CompilerGeneratedAttribute]
internal static object get_CurrentHttpContextProperty();
    [CompilerGeneratedAttribute]
internal static void set_CurrentHttpContextProperty(object value);
    internal static bool get_HasCurrentHttpContextProperty();
    internal static bool get_HasHttpContext();
    internal static object get_HttpContext();
    public sealed virtual ISentryRequest Create();
    public virtual SentryRequest OnCreate(SentryRequest request);
    private static object BodyConvert();
    private static IDictionary`2<string, string> Convert(Func`2<object, NameObjectCollectionBase> collectionGetter);
    private static void TryGetHttpContextPropertyFromAppDomain();
}
public class SharpRaven.Data.SentryStacktrace : object {
    [CompilerGeneratedAttribute]
private ExceptionFrame[] <Frames>k__BackingField;
    [JsonPropertyAttribute]
public ExceptionFrame[] Frames { get; public set; }
    public SentryStacktrace(Exception exception, bool forceCaptureStackTrace);
    [CompilerGeneratedAttribute]
public ExceptionFrame[] get_Frames();
    [CompilerGeneratedAttribute]
public void set_Frames(ExceptionFrame[] value);
    public virtual string ToString();
}
public class SharpRaven.Data.SentryUser : object {
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IpAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [JsonPropertyAttribute]
public string Email { get; public set; }
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public string IpAddress { get; public set; }
    [JsonPropertyAttribute]
public string Username { get; public set; }
    public SentryUser(IPrincipal principal);
    public SentryUser(IIdentity identity);
    public SentryUser(string username);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_IpAddress();
    [CompilerGeneratedAttribute]
public void set_IpAddress(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    public static SentryUser GetUser(ISentryUserFactory factory);
}
public class SharpRaven.Data.SentryUserFactory : object {
    public sealed virtual SentryUser Create();
    protected virtual SentryUser OnCreate(SentryUser user);
    private static object GetIpAddress();
    private static IPrincipal GetPrincipal();
}
public class SharpRaven.Data.SentryUserFeedback : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EventID>k__BackingField;
    public string Name { get; public set; }
    public string Email { get; public set; }
    public string Comments { get; public set; }
    public string EventID { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_Comments();
    [CompilerGeneratedAttribute]
public void set_Comments(string value);
    [CompilerGeneratedAttribute]
public string get_EventID();
    [CompilerGeneratedAttribute]
public void set_EventID(string value);
    public virtual string ToString();
}
public class SharpRaven.Dsn : object {
    private string path;
    private int port;
    private string privateKey;
    private string projectID;
    private string publicKey;
    private Uri sentryUri;
    private Uri feedbackUri;
    private Uri uri;
    public string Path { get; }
    public int Port { get; }
    public string PrivateKey { get; }
    public string ProjectID { get; }
    public string PublicKey { get; }
    public Uri SentryUri { get; }
    public Uri FeedbackUri { get; }
    public Uri Uri { get; }
    public Dsn(string dsn);
    public string get_Path();
    public int get_Port();
    public string get_PrivateKey();
    public string get_ProjectID();
    public string get_PublicKey();
    public Uri get_SentryUri();
    public Uri get_FeedbackUri();
    public Uri get_Uri();
    public virtual string ToString();
    private static string GetPath(Uri uri);
    private static string GetPrivateKey(Uri uri);
    private static string GetProjectID(Uri uri);
    private static string GetPublicKey(Uri uri);
}
public interface SharpRaven.IRavenClient {
    public Func`2<IRequester, IRequester> BeforeSend { get; public set; }
    public bool Compression { get; public set; }
    public Dsn CurrentDsn { get; }
    public string Environment { get; public set; }
    public bool IgnoreBreadcrumbs { get; public set; }
    public string Logger { get; public set; }
    public IScrubber LogScrubber { get; public set; }
    public string Release { get; public set; }
    public IDictionary`2<string, string> Tags { get; }
    public TimeSpan Timeout { get; public set; }
    public abstract virtual Func`2<IRequester, IRequester> get_BeforeSend();
    public abstract virtual void set_BeforeSend(Func`2<IRequester, IRequester> value);
    public abstract virtual bool get_Compression();
    public abstract virtual void set_Compression(bool value);
    public abstract virtual Dsn get_CurrentDsn();
    public abstract virtual string get_Environment();
    public abstract virtual void set_Environment(string value);
    public abstract virtual bool get_IgnoreBreadcrumbs();
    public abstract virtual void set_IgnoreBreadcrumbs(bool value);
    public abstract virtual string get_Logger();
    public abstract virtual void set_Logger(string value);
    public abstract virtual IScrubber get_LogScrubber();
    public abstract virtual void set_LogScrubber(IScrubber value);
    public abstract virtual string get_Release();
    public abstract virtual void set_Release(string value);
    public abstract virtual IDictionary`2<string, string> get_Tags();
    public abstract virtual TimeSpan get_Timeout();
    public abstract virtual void set_Timeout(TimeSpan value);
    public abstract virtual void AddTrail(Breadcrumb breadcrumb);
    public abstract virtual string Capture(SentryEvent event);
    [ObsoleteAttribute("Use Capture(SentryEvent) instead.")]
public abstract virtual string CaptureException(Exception exception, SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    [ObsoleteAttribute("Use Capture(SentryEvent) instead")]
public abstract virtual string CaptureMessage(SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    public abstract virtual void RestartTrails();
    public abstract virtual Task`1<string> CaptureAsync(SentryEvent event);
    [ObsoleteAttribute("Use CaptureAsync(SentryEvent) instead.")]
public abstract virtual Task`1<string> CaptureExceptionAsync(Exception exception, SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    [ObsoleteAttribute("Use CaptureAsync(SentryEvent) instead.")]
public abstract virtual Task`1<string> CaptureMessageAsync(SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    [ObsoleteAttribute("Use CaptureException() instead.", "True")]
public abstract virtual string CaptureEvent(Exception e);
    [ObsoleteAttribute("Use CaptureException() instead.", "True")]
public abstract virtual string CaptureEvent(Exception e, Dictionary`2<string, string> tags);
}
public class SharpRaven.Logging.Filters.CreditCardFilter : object {
    public sealed virtual string Filter(string input);
    private bool IsValidCreditCardNumber(string number);
    [CompilerGeneratedAttribute]
private string <Filter>b__0_0(Match m);
}
public class SharpRaven.Logging.Filters.PhoneNumberFilter : object {
    private static Regex phoneRegex;
    private static PhoneNumberFilter();
    public sealed virtual string Filter(string input);
}
[ObsoleteAttribute("This filter is not implemented yet.")]
public class SharpRaven.Logging.Filters.SocialSecurityFilter : object {
    public sealed virtual string Filter(string input);
}
public interface SharpRaven.Logging.IFilter {
    public abstract virtual string Filter(string input);
}
public interface SharpRaven.Logging.IScrubber {
    public abstract virtual string Scrub(string input);
}
public class SharpRaven.Logging.LogScrubber : object {
    private List`1<IFilter> filters;
    public List`1<IFilter> Filters { get; }
    public List`1<IFilter> get_Filters();
    public sealed virtual string Scrub(string input);
}
public class SharpRaven.NoOpRavenClient : object {
    private Dsn currentDsn;
    private IDictionary`2<string, string> defaultTags;
    [CompilerGeneratedAttribute]
private Func`2<IRequester, IRequester> <BeforeSend>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<Exception> <ErrorOnCapture>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Compression>k__BackingField;
    [CompilerGeneratedAttribute]
private IScrubber <LogScrubber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Release>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreBreadcrumbs>k__BackingField;
    public Func`2<IRequester, IRequester> BeforeSend { get; public set; }
    public Action`1<Exception> ErrorOnCapture { get; public set; }
    public bool Compression { get; public set; }
    public Dsn CurrentDsn { get; }
    public IScrubber LogScrubber { get; public set; }
    public string Logger { get; public set; }
    public string Release { get; public set; }
    public string Environment { get; public set; }
    public IDictionary`2<string, string> Tags { get; }
    public TimeSpan Timeout { get; public set; }
    public bool IgnoreBreadcrumbs { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Func`2<IRequester, IRequester> get_BeforeSend();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BeforeSend(Func`2<IRequester, IRequester> value);
    [CompilerGeneratedAttribute]
public Action`1<Exception> get_ErrorOnCapture();
    [CompilerGeneratedAttribute]
public void set_ErrorOnCapture(Action`1<Exception> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Compression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Compression(bool value);
    public sealed virtual Dsn get_CurrentDsn();
    [CompilerGeneratedAttribute]
public sealed virtual IScrubber get_LogScrubber();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LogScrubber(IScrubber value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Logger();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Logger(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Release();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Release(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
    public sealed virtual IDictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IgnoreBreadcrumbs();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreBreadcrumbs(bool value);
    public sealed virtual void AddTrail(Breadcrumb breadcrumb);
    public sealed virtual void RestartTrails();
    public sealed virtual string Capture(SentryEvent event);
    [ObsoleteAttribute("Use CaptureException() instead.", "True")]
public sealed virtual string CaptureEvent(Exception e);
    [ObsoleteAttribute("Use CaptureException() instead.", "True")]
public sealed virtual string CaptureEvent(Exception e, Dictionary`2<string, string> tags);
    [ObsoleteAttribute("Use Capture(SentryEvent) instead")]
public sealed virtual string CaptureException(Exception exception, SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    [ObsoleteAttribute("Use Capture(SentryEvent) instead")]
public sealed virtual string CaptureMessage(SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    public string SendUserFeedback(SentryUserFeedback feedback);
    [AsyncStateMachineAttribute("SharpRaven.NoOpRavenClient/<CaptureAsync>d__51")]
public sealed virtual Task`1<string> CaptureAsync(SentryEvent event);
    [AsyncStateMachineAttribute("SharpRaven.NoOpRavenClient/<CaptureExceptionAsync>d__52")]
[ObsoleteAttribute("Use CaptureAsync(SentryEvent) instead.")]
public sealed virtual Task`1<string> CaptureExceptionAsync(Exception exception, SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    [AsyncStateMachineAttribute("SharpRaven.NoOpRavenClient/<CaptureMessageAsync>d__53")]
[ObsoleteAttribute("Use CaptureAsync(SentryEvent) instead.")]
public sealed virtual Task`1<string> CaptureMessageAsync(SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    [AsyncStateMachineAttribute("SharpRaven.NoOpRavenClient/<SendUserFeedbackAsync>d__54")]
public Task`1<string> SendUserFeedbackAsync(SentryUserFeedback feedback);
}
public class SharpRaven.RavenClient : object {
    private CircularBuffer`1<Breadcrumb> breadcrumbs;
    private Dsn currentDsn;
    private IDictionary`2<string, string> defaultTags;
    private IJsonPacketFactory jsonPacketFactory;
    private ISentryRequestFactory sentryRequestFactory;
    private ISentryUserFactory sentryUserFactory;
    private IRequesterFactory requesterFactory;
    [CompilerGeneratedAttribute]
private Func`2<IRequester, IRequester> <BeforeSend>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<Exception> <ErrorOnCapture>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Compression>k__BackingField;
    [CompilerGeneratedAttribute]
private IScrubber <LogScrubber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Release>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreBreadcrumbs>k__BackingField;
    private bool disposeRequesterFactory;
    public Func`2<IRequester, IRequester> BeforeSend { get; public set; }
    public Action`1<Exception> ErrorOnCapture { get; public set; }
    public bool Compression { get; public set; }
    public Dsn CurrentDsn { get; }
    public IScrubber LogScrubber { get; public set; }
    public string Logger { get; public set; }
    public string Release { get; public set; }
    public string Environment { get; public set; }
    public IDictionary`2<string, string> Tags { get; }
    public TimeSpan Timeout { get; public set; }
    public bool IgnoreBreadcrumbs { get; public set; }
    public RavenClient(IJsonPacketFactory jsonPacketFactory);
    public RavenClient(string dsn, IJsonPacketFactory jsonPacketFactory, ISentryRequestFactory sentryRequestFactory, ISentryUserFactory sentryUserFactory);
    public RavenClient(Dsn dsn, IJsonPacketFactory jsonPacketFactory, ISentryRequestFactory sentryRequestFactory, ISentryUserFactory sentryUserFactory, IRequesterFactory requesterFactory);
    public RavenClient(Dsn dsn, bool backgroundSending, IJsonPacketFactory jsonPacketFactory, ISentryRequestFactory sentryRequestFactory, ISentryUserFactory sentryUserFactory);
    [CompilerGeneratedAttribute]
public sealed virtual Func`2<IRequester, IRequester> get_BeforeSend();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BeforeSend(Func`2<IRequester, IRequester> value);
    [CompilerGeneratedAttribute]
public Action`1<Exception> get_ErrorOnCapture();
    [CompilerGeneratedAttribute]
public void set_ErrorOnCapture(Action`1<Exception> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Compression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Compression(bool value);
    public sealed virtual Dsn get_CurrentDsn();
    [CompilerGeneratedAttribute]
public sealed virtual IScrubber get_LogScrubber();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LogScrubber(IScrubber value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Logger();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Logger(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Release();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Release(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
    public sealed virtual IDictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IgnoreBreadcrumbs();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IgnoreBreadcrumbs(bool value);
    public sealed virtual void AddTrail(Breadcrumb breadcrumb);
    public sealed virtual void RestartTrails();
    public sealed virtual string Capture(SentryEvent event);
    [ObsoleteAttribute("Use CaptureException() instead.", "True")]
public sealed virtual string CaptureEvent(Exception e);
    [ObsoleteAttribute("Use CaptureException() instead.", "True")]
public sealed virtual string CaptureEvent(Exception e, Dictionary`2<string, string> tags);
    [ObsoleteAttribute("Use Capture(SentryEvent) instead")]
public sealed virtual string CaptureException(Exception exception, SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    [ObsoleteAttribute("Use Capture(SentryEvent) instead")]
public sealed virtual string CaptureMessage(SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    protected internal virtual JsonPacket PreparePacket(JsonPacket packet);
    protected virtual string Send(JsonPacket packet);
    public string SendUserFeedback(SentryUserFeedback feedback);
    protected virtual IRequester CreateRequester(JsonPacket packet);
    protected virtual IRequester CreateRequester(SentryUserFeedback feedback);
    private string HandleException(Exception exception, IRequester requester);
    private IDictionary`2<string, string> MergeTags(IDictionary`2<string, string> tags);
    [AsyncStateMachineAttribute("SharpRaven.RavenClient/<CaptureAsync>d__66")]
public sealed virtual Task`1<string> CaptureAsync(SentryEvent event);
    [AsyncStateMachineAttribute("SharpRaven.RavenClient/<CaptureExceptionAsync>d__67")]
[ObsoleteAttribute("Use CaptureAsync(SentryEvent) instead.")]
public sealed virtual Task`1<string> CaptureExceptionAsync(Exception exception, SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    [AsyncStateMachineAttribute("SharpRaven.RavenClient/<CaptureMessageAsync>d__68")]
[ObsoleteAttribute("Use CaptureAsync(SentryEvent) instead.")]
public sealed virtual Task`1<string> CaptureMessageAsync(SentryMessage message, ErrorLevel level, IDictionary`2<string, string> tags, String[] fingerprint, object extra);
    [AsyncStateMachineAttribute("SharpRaven.RavenClient/<SendAsync>d__69")]
protected virtual Task`1<string> SendAsync(JsonPacket packet);
    [AsyncStateMachineAttribute("SharpRaven.RavenClient/<SendUserFeedbackAsync>d__70")]
public Task`1<string> SendUserFeedbackAsync(SentryUserFeedback feedback);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
public class SharpRaven.Serialization.LowerInvariantStringEnumConverter : StringEnumConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public class SharpRaven.Utilities.CircularBuffer`1 : object {
    private int size;
    private ConcurrentQueue`1<T> queue;
    public CircularBuffer`1(int size);
    public List`1<T> ToList();
    public void Clear();
    public void Add(T item);
    public bool IsEmpty();
}
internal static class SharpRaven.Utilities.EntryAssemblyNameLocator : object {
    private static AssemblyName entryAssemblyName;
    private static bool entryAssemblyNameLoaded;
    public static AssemblyName GetAssemblyName();
    internal static AssemblyName GetAssemblyNameFromEntryMethod();
    internal static MethodBase GetApplicationEntryMethod();
}
internal class SharpRaven.Utilities.GzipUtil : object {
    public static void Write(string json, Stream stream);
    [AsyncStateMachineAttribute("SharpRaven.Utilities.GzipUtil/<WriteAsync>d__1")]
public static Task WriteAsync(string json, Stream stream);
}
public static class SharpRaven.Utilities.PacketBuilder : object {
    private static int SentryVersion;
    private static string userAgent;
    public static string UserAgent { get; }
    private static PacketBuilder();
    public static string get_UserAgent();
    public static string CreateAuthenticationHeader(Dsn dsn);
}
internal static class SharpRaven.Utilities.RuntimeInfoHelper : object {
    public static Runtime GetRuntime();
    private static Runtime GetFromMono();
}
[ExtensionAttribute]
public static class SharpRaven.Utilities.SystemUtil : object {
    public static bool IsNullOrWhiteSpace(string arg);
    public static IDictionary`2<string, string> GetModules();
    public static void WriteError(Exception exception);
    public static void WriteError(string error);
    public static void WriteError(string description, string multilineData);
    [ExtensionAttribute]
public static void CopyTo(Stream input, Stream output);
}
