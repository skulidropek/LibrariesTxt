[ObsoleteAttribute("This lifestyle is obsolete. Please use SimpleInjector.Lifestyles.AsyncScopedLifestyle instead.", "False")]
public class SimpleInjector.Extensions.ExecutionContextScoping.ExecutionContextScopeLifestyle : AsyncScopedLifestyle {
    [ObsoleteAttribute("This constructor overload has been deprecated. Please use ExecutionContextScopeLifestyle() instead.", "True")]
[EditorBrowsableAttribute("1")]
public ExecutionContextScopeLifestyle(bool disposeInstanceWhenScopeEnds);
    protected ExecutionContextScopeLifestyle(string name);
    [ObsoleteAttribute("This constructor overload has been deprecated. Please use ExecutionContextScopeLifestyle(string) instead.", "True")]
protected ExecutionContextScopeLifestyle(string name, bool disposeInstanceWhenScopeEnds);
}
[ExtensionAttribute]
public static class SimpleInjector.Extensions.ExecutionContextScoping.SimpleInjectorExecutionContextScopeExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("BeginExecutionContextScope is obsolete. Please use SimpleInjector.Lifestyles.AsyncScopedLifestyle.BeginScope(Container) instead.", "False")]
public static Scope BeginExecutionContextScope(Container container);
    [ExtensionAttribute]
[ObsoleteAttribute("GetCurrentExecutionContextScope has been deprecated. Please use Lifestyle.Scoped.GetCurrentScope(Container) instead.", "True")]
[EditorBrowsableAttribute("1")]
public static Scope GetCurrentExecutionContextScope(Container container);
}
