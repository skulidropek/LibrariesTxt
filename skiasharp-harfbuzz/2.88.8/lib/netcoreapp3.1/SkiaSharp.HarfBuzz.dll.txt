[ExtensionAttribute]
public static class SkiaSharp.HarfBuzz.BlobExtensions : object {
    [ExtensionAttribute]
public static Blob ToHarfBuzzBlob(SKStreamAsset asset);
}
[ExtensionAttribute]
public static class SkiaSharp.HarfBuzz.CanvasExtensions : object {
    [ExtensionAttribute]
public static void DrawShapedText(SKCanvas canvas, string text, SKPoint p, SKPaint paint);
    [ExtensionAttribute]
public static void DrawShapedText(SKCanvas canvas, string text, float x, float y, SKPaint paint);
    [ExtensionAttribute]
public static void DrawShapedText(SKCanvas canvas, SKShaper shaper, string text, SKPoint p, SKPaint paint);
    [ExtensionAttribute]
public static void DrawShapedText(SKCanvas canvas, SKShaper shaper, string text, float x, float y, SKPaint paint);
}
[ExtensionAttribute]
public static class SkiaSharp.HarfBuzz.FontExtensions : object {
    [ExtensionAttribute]
public static SKSizeI GetScale(Font font);
    [ExtensionAttribute]
public static void SetScale(Font font, SKSizeI scale);
}
public class SkiaSharp.HarfBuzz.SKShaper : object {
    internal static int FONT_SIZE_SCALE;
    private Font font;
    private Buffer buffer;
    [CompilerGeneratedAttribute]
private SKTypeface <Typeface>k__BackingField;
    public SKTypeface Typeface { get; private set; }
    public SKShaper(SKTypeface typeface);
    [CompilerGeneratedAttribute]
public SKTypeface get_Typeface();
    [CompilerGeneratedAttribute]
private void set_Typeface(SKTypeface value);
    public sealed virtual void Dispose();
    public Result Shape(Buffer buffer, SKPaint paint);
    public Result Shape(Buffer buffer, float xOffset, float yOffset, SKPaint paint);
    public Result Shape(string text, SKPaint paint);
    public Result Shape(string text, float xOffset, float yOffset, SKPaint paint);
}
internal class VersionConstants : object {
    public static string AssemblyVersion;
    public static string AssemblyFileVersion;
    public static string AssemblyInformationalVersion;
    public static string GitSha;
    public static int Milestone;
    public static int Increment;
}
