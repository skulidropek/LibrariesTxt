[ExtensionAttribute]
public static class SkiaSharp.HarfBuzz.BlobExtensions : object {
    [ExtensionAttribute]
public static Blob ToHarfBuzzBlob(SKStreamAsset asset);
}
[ExtensionAttribute]
public static class SkiaSharp.HarfBuzz.CanvasExtensions : object {
    [ExtensionAttribute]
public static void DrawShapedText(SKCanvas canvas, string text, SKPoint p, SKPaint paint);
    [ExtensionAttribute]
public static void DrawShapedText(SKCanvas canvas, string text, float x, float y, SKPaint paint);
    [ExtensionAttribute]
public static void DrawShapedText(SKCanvas canvas, SKShaper shaper, string text, SKPoint p, SKPaint paint);
    [ExtensionAttribute]
public static void DrawShapedText(SKCanvas canvas, SKShaper shaper, string text, float x, float y, SKPaint paint);
}
[ExtensionAttribute]
public static class SkiaSharp.HarfBuzz.FontExtensions : object {
    [ExtensionAttribute]
public static SKSizeI GetScale(Font font);
    [ExtensionAttribute]
public static void SetScale(Font font, SKSizeI scale);
}
public class SkiaSharp.HarfBuzz.SKShaper : object {
    internal static int FONT_SIZE_SCALE;
    private Font font;
    private Buffer buffer;
    [CompilerGeneratedAttribute]
private SKTypeface <Typeface>k__BackingField;
    public SKTypeface Typeface { get; private set; }
    public SKShaper(SKTypeface typeface);
    [CompilerGeneratedAttribute]
public SKTypeface get_Typeface();
    [CompilerGeneratedAttribute]
private void set_Typeface(SKTypeface value);
    public sealed virtual void Dispose();
    public Result Shape(Buffer buffer, SKPaint paint);
    public Result Shape(Buffer buffer, float xOffset, float yOffset, SKPaint paint);
    public Result Shape(string text, SKPaint paint);
    public Result Shape(string text, float xOffset, float yOffset, SKPaint paint);
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
internal class VersionConstants : object {
    public static string AssemblyVersion;
    public static string AssemblyFileVersion;
    public static string AssemblyInformationalVersion;
    public static string GitSha;
    public static int Milestone;
    public static int Increment;
}
