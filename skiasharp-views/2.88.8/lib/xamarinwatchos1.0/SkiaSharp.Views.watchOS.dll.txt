[ExtensionAttribute]
public static class SkiaSharp.Views.watchOS.AppleExtensions : object {
    [ExtensionAttribute]
public static SKPoint ToSKPoint(CGPoint point);
    [ExtensionAttribute]
public static CGPoint ToPoint(SKPoint point);
    [ExtensionAttribute]
public static SKRect ToSKRect(CGRect rect);
    [ExtensionAttribute]
public static CGRect ToRect(SKRect rect);
    [ExtensionAttribute]
public static SKSize ToSKSize(CGSize size);
    [ExtensionAttribute]
public static CGSize ToSize(SKSize size);
    [ExtensionAttribute]
public static SKColor ToSKColor(CGColor color);
    [ExtensionAttribute]
public static SKColorF ToSKColorF(CGColor color);
    [ExtensionAttribute]
public static CGColor ToCGColor(SKColor color);
    [ExtensionAttribute]
public static CGColor ToCGColor(SKColorF color);
    [ExtensionAttribute]
public static void ToSKPixmap(CGImage cgImage, SKPixmap pixmap);
    [ExtensionAttribute]
public static SKImage ToSKImage(CGImage cgImage);
    [ExtensionAttribute]
public static SKBitmap ToSKBitmap(CGImage cgImage);
    [ExtensionAttribute]
public static CGImage ToCGImage(SKPicture skiaPicture, SKSizeI dimensions);
    [ExtensionAttribute]
public static CGImage ToCGImage(SKImage skiaImage);
    [ExtensionAttribute]
public static CGImage ToCGImage(SKPixmap skiaPixmap);
    [ExtensionAttribute]
public static CGImage ToCGImage(SKBitmap skiaBitmap);
    [ExtensionAttribute]
public static NSData ToNSData(SKData skiaData);
    [ExtensionAttribute]
public static SKData ToSKData(NSData nsData);
}
[ExtensionAttribute]
public static class SkiaSharp.Views.watchOS.Extensions : object {
    private static Lazy`1<bool> isValidEnvironment;
    internal static bool IsValidEnvironment { get; }
    private static Extensions();
    internal static bool get_IsValidEnvironment();
    [ExtensionAttribute]
public static SKPoint ToSKPoint(PointF point);
    [ExtensionAttribute]
public static SKPointI ToSKPoint(Point point);
    [ExtensionAttribute]
public static PointF ToDrawingPoint(SKPoint point);
    [ExtensionAttribute]
public static Point ToDrawingPoint(SKPointI point);
    [ExtensionAttribute]
public static SKRect ToSKRect(RectangleF rect);
    [ExtensionAttribute]
public static SKRectI ToSKRect(Rectangle rect);
    [ExtensionAttribute]
public static RectangleF ToDrawingRect(SKRect rect);
    [ExtensionAttribute]
public static Rectangle ToDrawingRect(SKRectI rect);
    [ExtensionAttribute]
public static SKSize ToSKSize(SizeF size);
    [ExtensionAttribute]
public static SKSizeI ToSKSize(Size size);
    [ExtensionAttribute]
public static SizeF ToDrawingSize(SKSize size);
    [ExtensionAttribute]
public static Size ToDrawingSize(SKSizeI size);
}
[ExtensionAttribute]
public static class SkiaSharp.Views.watchOS.iOSExtensions : object {
    [ExtensionAttribute]
public static SKColor ToSKColor(UIColor color);
    [ExtensionAttribute]
public static SKColorF ToSKColorF(UIColor color);
    [ExtensionAttribute]
public static UIColor ToUIColor(SKColor color);
    [ExtensionAttribute]
public static UIColor ToUIColor(SKColorF color);
    [ExtensionAttribute]
public static SKImage ToSKImage(UIImage uiImage);
    [ExtensionAttribute]
public static SKBitmap ToSKBitmap(UIImage uiImage);
    [ExtensionAttribute]
public static bool ToSKPixmap(UIImage uiImage, SKPixmap pixmap);
    [ExtensionAttribute]
public static UIImage ToUIImage(SKPicture skiaPicture, SKSizeI dimensions, nfloat scale, UIImageOrientation orientation);
    [ExtensionAttribute]
public static UIImage ToUIImage(SKPicture skiaPicture, SKSizeI dimensions);
    [ExtensionAttribute]
public static UIImage ToUIImage(SKImage skiaImage);
    [ExtensionAttribute]
public static UIImage ToUIImage(SKPixmap skiaPixmap, nfloat scale, UIImageOrientation orientation);
    [ExtensionAttribute]
public static UIImage ToUIImage(SKPixmap skiaPixmap);
    [ExtensionAttribute]
public static UIImage ToUIImage(SKBitmap skiaBitmap, nfloat scale, UIImageOrientation orientation);
    [ExtensionAttribute]
public static UIImage ToUIImage(SKBitmap skiaBitmap);
}
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Use SKCanvasLayer.PaintSurface instead.")]
public interface SkiaSharp.Views.watchOS.ISKCanvasLayerDelegate {
    public abstract virtual void DrawInSurface(SKSurface surface, SKImageInfo info);
}
internal class SkiaSharp.Views.watchOS.SKCGSurfaceFactory : object {
    private static int BitsPerByte;
    private static CGBitmapFlags BitmapFlags;
    private NSMutableData bitmapData;
    private CGDataProvider dataProvider;
    [CompilerGeneratedAttribute]
private SKImageInfo <Info>k__BackingField;
    public SKImageInfo Info { get; private set; }
    [CompilerGeneratedAttribute]
public SKImageInfo get_Info();
    [CompilerGeneratedAttribute]
private void set_Info(SKImageInfo value);
    public SKSurface CreateSurface(CGRect contentsBounds, nfloat scale, SKImageInfo& info);
    public void DrawSurface(CGContext ctx, CGRect viewBounds, SKImageInfo info, SKSurface surface);
    public sealed virtual void Dispose();
    private void FreeBitmap();
    private SKImageInfo CreateInfo(int width, int height);
    [CompilerGeneratedAttribute]
internal static void <CreateSurface>g__Dummy|8_0(IntPtr data);
}
public class SkiaSharp.Views.watchOS.SKPaintSurfaceEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private SKSurface <Surface>k__BackingField;
    [CompilerGeneratedAttribute]
private SKImageInfo <Info>k__BackingField;
    [CompilerGeneratedAttribute]
private SKImageInfo <RawInfo>k__BackingField;
    public SKSurface Surface { get; }
    public SKImageInfo Info { get; }
    public SKImageInfo RawInfo { get; }
    public SKPaintSurfaceEventArgs(SKSurface surface, SKImageInfo info);
    public SKPaintSurfaceEventArgs(SKSurface surface, SKImageInfo info, SKImageInfo rawInfo);
    [CompilerGeneratedAttribute]
public SKSurface get_Surface();
    [CompilerGeneratedAttribute]
public SKImageInfo get_Info();
    [CompilerGeneratedAttribute]
public SKImageInfo get_RawInfo();
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
internal class VersionConstants : object {
    public static string AssemblyVersion;
    public static string AssemblyFileVersion;
    public static string AssemblyInformationalVersion;
    public static string GitSha;
    public static int Milestone;
    public static int Increment;
}
