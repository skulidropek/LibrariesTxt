public class Smidge.InMemory.ConfiguredCacheFileSystem : object {
    private SmidgeOptions _options;
    private ICacheFileSystem _wrapped;
    public ConfiguredCacheFileSystem(IOptions`1<SmidgeOptions> options, IServiceProvider services);
    public sealed virtual Task ClearCachedCompositeFileAsync(string cacheBusterValue, CompressionType type, string filesetKey);
    public sealed virtual IFileInfo GetCachedCompositeFile(string cacheBusterValue, CompressionType type, string filesetKey, String& filePath);
    public sealed virtual IFileInfo GetCacheFile(IWebFile file, Func`1<IFileInfo> sourceFile, bool fileWatchEnabled, string extension, string cacheBusterValue, String& filePath);
    public sealed virtual IFileInfo GetRequiredFileInfo(string filePath);
    public sealed virtual Task WriteFileAsync(string filePath, string contents);
    public sealed virtual Task WriteFileAsync(string filePath, Stream contents);
}
public class Smidge.InMemory.MemoryCacheFileSystem : object {
    private IDirectory _directory;
    private IHasher _hasher;
    private IFileProvider _fileProvider;
    public MemoryCacheFileSystem(IHasher hasher);
    public sealed virtual IFileInfo GetRequiredFileInfo(string filePath);
    private string GetCompositeFilePath(string cacheBusterValue, CompressionType type, string filesetKey);
    public sealed virtual Task ClearCachedCompositeFileAsync(string cacheBusterValue, CompressionType type, string filesetKey);
    public sealed virtual IFileInfo GetCachedCompositeFile(string cacheBusterValue, CompressionType type, string filesetKey, String& filePath);
    public sealed virtual IFileInfo GetCacheFile(IWebFile file, Func`1<IFileInfo> sourceFile, bool fileWatchEnabled, string extension, string cacheBusterValue, String& filePath);
    public sealed virtual Task WriteFileAsync(string filePath, string contents);
    [AsyncStateMachineAttribute("Smidge.InMemory.MemoryCacheFileSystem/<WriteFileAsync>d__10")]
public sealed virtual Task WriteFileAsync(string filePath, Stream contents);
    private void ClearStaleFiles(string filePath);
}
[ExtensionAttribute]
public static class Smidge.InMemory.SmidgeInMemoryStartup : object {
    [ExtensionAttribute]
public static IServiceCollection AddSmidgeInMemory(IServiceCollection services, bool enable);
}
