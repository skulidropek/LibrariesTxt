public static class SolrNet.Startup : object {
    public static Container Container;
    private static Startup();
    public static void InitContainer();
    public static void Init(string serverURL);
    public static void Init(ISolrConnection connection);
    private static ISolrDocumentSerializer`1<T> ChooseDocumentSerializer(IServiceLocator c);
    private static ISolrDocumentResponseParser`1<T> ChooseDocumentResponseParser(IServiceLocator c);
}
public class SolrNet.Utils.Container : ServiceLocatorImplBase {
    private Dictionary`2<string, Converter`2<IContainer, object>> componentsByName;
    private Dictionary`2<Type, List`1<Converter`2<IContainer, object>>> componentsByType;
    public Container(Container c);
    protected virtual object DoGetInstance(Type serviceType, string key);
    [IteratorStateMachineAttribute("SolrNet.Utils.Container/<DoGetAllInstances>d__5")]
protected virtual IEnumerable`1<object> DoGetAllInstances(Type serviceType);
    public sealed virtual void Register(Converter`2<IContainer, T> factory);
    public sealed virtual void Register(string key, Converter`2<IContainer, T> factory);
    public sealed virtual void Register(string key, Type serviceType, Converter`2<IContainer, object> factory);
    public sealed virtual void RemoveAll();
    public sealed virtual void Remove();
    public sealed virtual void Remove(string key);
    public sealed virtual void Remove(string key, Type serviceType);
    public void Clear();
    [CompilerGeneratedAttribute]
private void <RemoveAll>b__9_0(string k);
}
public interface SolrNet.Utils.IContainer {
    public abstract virtual void Register(Converter`2<IContainer, T> factory);
    public abstract virtual void Register(string key, Converter`2<IContainer, T> factory);
    public abstract virtual void Register(string key, Type serviceType, Converter`2<IContainer, object> factory);
    public abstract virtual void RemoveAll();
    public abstract virtual void Remove();
    public abstract virtual void Remove(string key);
    public abstract virtual void Remove(string key, Type serviceType);
}
