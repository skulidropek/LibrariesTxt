[GuidAttribute("93B269C4-85D6-4AEA-9398-81754CA2560B")]
public interface Microsoft.VisualStudio.ProjectSystem.Interop.INuGetPackageInstallProgress {
    public int InstalledPackagesCount { get; }
    public int TotalPackagesToInstall { get; }
    public abstract virtual int get_InstalledPackagesCount();
    public abstract virtual int get_TotalPackagesToInstall();
}
[GuidAttribute("FD2DC07E-9054-4115-B86B-26A9F9C1F00B")]
public interface Microsoft.VisualStudio.ProjectSystem.Interop.INuGetPackageManager {
    public abstract virtual Task`1<IReadOnlyCollection`1<object>> GetInstalledPackagesAsync(CancellationToken cancellationToken);
    public abstract virtual Task InstallPackageAsync(INuGetPackageMoniker package, IReadOnlyDictionary`2<string, object> options, TextWriter logger, IProgress`1<INuGetPackageInstallProgress> progress, CancellationToken cancellationToken);
    public abstract virtual Task UninstallPackageAsync(INuGetPackageMoniker package, IReadOnlyDictionary`2<string, object> options, TextWriter logger, IProgress`1<INuGetPackageInstallProgress> progress, CancellationToken cancellationToken);
    public abstract virtual bool CanSupport(string optionName, NuGetOperation operation);
    public abstract virtual Task`1<IReadOnlyCollection`1<FrameworkName>> GetSupportedFrameworksAsync(CancellationToken cancellationToken);
}
[GuidAttribute("BCA2E197-E352-4474-B0A7-D8CE606CD4E9")]
public interface Microsoft.VisualStudio.ProjectSystem.Interop.INuGetPackageMoniker {
    public string Id { get; }
    public string Version { get; }
    public abstract virtual string get_Id();
    public abstract virtual string get_Version();
}
[GuidAttribute("E05097E8-AFE8-4590-9A7C-7E229EBD2D4C")]
public interface Microsoft.VisualStudio.ProjectSystem.Interop.IVsMSBuildTaskFreeThreadedFileManager {
    public abstract virtual void Delete(string fileName);
    public abstract virtual bool Exists(string fileName, bool onlyCheckOnDisk);
    public abstract virtual TextReader GetFileContents(string fileName);
    public abstract virtual DateTime GetFileLastChangeTime(string fileName);
    public abstract virtual void PutGeneratedFileContents(string fileName, string contents);
}
public enum Microsoft.VisualStudio.ProjectSystem.Interop.NuGetOperation : Enum {
    public int value__;
    public static NuGetOperation Install;
    public static NuGetOperation Uninstall;
}
[GuidAttribute("D8DCA653-89E7-4585-8554-D8A1F333723F")]
[ComVisibleAttribute("True")]
public interface Microsoft.VisualStudio.ProjectSystem.Interop.SVsDesignTimeBuildOutputWindowPane {
}
internal class ThisAssembly : object {
    internal static string AssemblyVersion;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyConfiguration;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
}
