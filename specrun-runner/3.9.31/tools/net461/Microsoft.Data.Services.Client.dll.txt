internal static class DataFxAssemblyRef : object {
    internal static string DataFxAssemblyVersion;
    internal static string FXAssemblyVersion;
    internal static string EcmaPublicKey;
    internal static string EcmaPublicKeyToken;
    internal static string EcmaPublicKeyFull;
    internal static string MicrosoftPublicKey;
    internal static string MicrosoftPublicKeyToken;
    internal static string MicrosoftPublicKeyFull;
    internal static string SharedLibPublicKey;
    internal static string SharedLibPublicKeyToken;
    internal static string SharedLibPublicKeyFull;
    internal static string SilverlightPublicKey;
    internal static string SilverlightPublicKeyToken;
    internal static string SilverlightPublicKeyFull;
    internal static string SilverlightPlatformPublicKey;
    internal static string SilverlightPlatformPublicKeyToken;
    internal static string SilverlightPlatformPublicKeyFull;
    private static string DataFxFramework;
    private static string MicrosoftFramework;
    private static string NetFxFramework;
    internal static string Mscorlib;
    internal static string System;
    internal static string SystemCore;
    internal static string SystemData;
    internal static string SystemDataDataSetExtensions;
    internal static string SystemDataEntity;
    internal static string SystemDataServicesDesign;
    internal static string SystemDataLinq;
    internal static string SystemDrawing;
    internal static string SystemNumerics;
    internal static string SystemRuntimeRemoting;
    internal static string SystemRuntimeSerialization;
    internal static string SystemServiceModel;
    internal static string SystemWeb;
    internal static string SystemWebEntity;
    internal static string SystemWebEntityDesign;
    internal static string SystemXml;
    internal static string SystemXmlLinq;
    internal static string DataServices;
    internal static string DataServicesClient;
    internal static string DataServicesDesign;
    internal static string EntityDataModel;
    internal static string OData;
}
internal abstract class System.Data.Services.Client.ALinqExpressionVisitor : object {
    internal virtual Expression Visit(Expression exp);
    internal virtual MemberBinding VisitBinding(MemberBinding binding);
    internal virtual ElementInit VisitElementInitializer(ElementInit initializer);
    internal virtual Expression VisitUnary(UnaryExpression u);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitTypeIs(TypeBinaryExpression b);
    internal virtual Expression VisitConstant(ConstantExpression c);
    internal virtual Expression VisitConditional(ConditionalExpression c);
    internal virtual Expression VisitParameter(ParameterExpression p);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitMethodCall(MethodCallExpression m);
    internal virtual ReadOnlyCollection`1<Expression> VisitExpressionList(ReadOnlyCollection`1<Expression> original);
    internal virtual MemberAssignment VisitMemberAssignment(MemberAssignment assignment);
    internal virtual MemberMemberBinding VisitMemberMemberBinding(MemberMemberBinding binding);
    internal virtual MemberListBinding VisitMemberListBinding(MemberListBinding binding);
    internal virtual IEnumerable`1<MemberBinding> VisitBindingList(ReadOnlyCollection`1<MemberBinding> original);
    internal virtual IEnumerable`1<ElementInit> VisitElementInitializerList(ReadOnlyCollection`1<ElementInit> original);
    internal virtual Expression VisitLambda(LambdaExpression lambda);
    internal virtual NewExpression VisitNew(NewExpression nex);
    internal virtual Expression VisitMemberInit(MemberInitExpression init);
    internal virtual Expression VisitListInit(ListInitExpression init);
    internal virtual Expression VisitNewArray(NewArrayExpression na);
    internal virtual Expression VisitInvocation(InvocationExpression iv);
}
[DebuggerDisplayAttribute("Count = {count}")]
[DefaultMemberAttribute("Item")]
internal class System.Data.Services.Client.ArraySet`1 : ValueType {
    private T[] items;
    private int count;
    private int version;
    public int Count { get; }
    public T Item { get; }
    public ArraySet`1(int capacity);
    public int get_Count();
    public T get_Item(int index);
    public bool Add(T item, Func`3<T, T, bool> equalityComparer);
    public bool Contains(T item, Func`3<T, T, bool> equalityComparer);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public int IndexOf(T item, Func`3<T, T, bool> comparer);
    public int IndexOf(K item, Func`2<T, K> select, Func`3<K, K, bool> comparer);
    public T Remove(T item, Func`3<T, T, bool> equalityComparer);
    public void RemoveAt(int index);
    public void Sort(Func`2<T, K> selector, Func`3<K, K, int> comparer);
    public void TrimToSize();
    private static T IdentitySelect(T arg);
}
[DebuggerDisplayAttribute("AtomContentProperty {TypeName} {Name}")]
internal class System.Data.Services.Client.AtomContentProperty : object {
    [CompilerGeneratedAttribute]
private bool <IsNull>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private PrimitiveParserToken <PrimitiveToken>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AtomContentProperty> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomFeed <Feed>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomEntry <Entry>k__BackingField;
    [CompilerGeneratedAttribute]
private object <MaterializedValue>k__BackingField;
    public bool IsNull { get; public set; }
    public string Name { get; public set; }
    public string TypeName { get; public set; }
    public PrimitiveParserToken PrimitiveToken { get; public set; }
    public List`1<AtomContentProperty> Properties { get; public set; }
    public AtomFeed Feed { get; public set; }
    public AtomEntry Entry { get; public set; }
    public object MaterializedValue { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsNull();
    [CompilerGeneratedAttribute]
public void set_IsNull(bool value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public PrimitiveParserToken get_PrimitiveToken();
    [CompilerGeneratedAttribute]
public void set_PrimitiveToken(PrimitiveParserToken value);
    [CompilerGeneratedAttribute]
public List`1<AtomContentProperty> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(List`1<AtomContentProperty> value);
    [CompilerGeneratedAttribute]
public AtomFeed get_Feed();
    [CompilerGeneratedAttribute]
public void set_Feed(AtomFeed value);
    [CompilerGeneratedAttribute]
public AtomEntry get_Entry();
    [CompilerGeneratedAttribute]
public void set_Entry(AtomEntry value);
    [CompilerGeneratedAttribute]
public object get_MaterializedValue();
    [CompilerGeneratedAttribute]
public void set_MaterializedValue(object value);
    public void EnsureProperties();
}
internal enum System.Data.Services.Client.AtomDataKind : Enum {
    public int value__;
    public static AtomDataKind None;
    public static AtomDataKind Custom;
    public static AtomDataKind Entry;
    public static AtomDataKind Feed;
    public static AtomDataKind FeedCount;
    public static AtomDataKind PagingLinks;
    public static AtomDataKind Finished;
}
[DebuggerDisplayAttribute("AtomEntry {ResolvedObject} @ {Identity}")]
internal class System.Data.Services.Client.AtomEntry : object {
    private EntityDescriptor entityDescriptor;
    private EntryFlags flags;
    [CompilerGeneratedAttribute]
private ClientType <ActualType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AtomContentProperty> <DataValues>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AtomContentProperty> <CollectionNavigationLinkProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomTag <Tag>k__BackingField;
    public Nullable`1<bool> MediaLinkEntry { get; public set; }
    public Uri MediaEditUri { get; public set; }
    public string TypeName { get; public set; }
    public ClientType ActualType { get; public set; }
    public Uri EditLink { get; public set; }
    public Uri QueryLink { get; public set; }
    public string Identity { get; public set; }
    public bool IsNull { get; public set; }
    public List`1<AtomContentProperty> DataValues { get; public set; }
    public List`1<AtomContentProperty> CollectionNavigationLinkProperties { get; private set; }
    public object ResolvedObject { get; public set; }
    public AtomTag Tag { get; public set; }
    public bool ShouldUpdateFromPayload { get; public set; }
    public bool CreatedByMaterializer { get; public set; }
    public bool EntityHasBeenResolved { get; public set; }
    public bool EntityPropertyMappingsApplied { get; public set; }
    public EntityDescriptor EntityDescriptor { get; }
    internal AtomEntry(DataServiceProtocolVersion maxProtocolVersion);
    public Nullable`1<bool> get_MediaLinkEntry();
    public void set_MediaLinkEntry(Nullable`1<bool> value);
    public Uri get_MediaEditUri();
    public void set_MediaEditUri(Uri value);
    public string get_TypeName();
    public void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public ClientType get_ActualType();
    [CompilerGeneratedAttribute]
public void set_ActualType(ClientType value);
    public Uri get_EditLink();
    public void set_EditLink(Uri value);
    public Uri get_QueryLink();
    public void set_QueryLink(Uri value);
    public string get_Identity();
    public void set_Identity(string value);
    public bool get_IsNull();
    public void set_IsNull(bool value);
    [CompilerGeneratedAttribute]
public List`1<AtomContentProperty> get_DataValues();
    [CompilerGeneratedAttribute]
public void set_DataValues(List`1<AtomContentProperty> value);
    [CompilerGeneratedAttribute]
public List`1<AtomContentProperty> get_CollectionNavigationLinkProperties();
    [CompilerGeneratedAttribute]
private void set_CollectionNavigationLinkProperties(List`1<AtomContentProperty> value);
    public object get_ResolvedObject();
    public void set_ResolvedObject(object value);
    [CompilerGeneratedAttribute]
public AtomTag get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(AtomTag value);
    public bool get_ShouldUpdateFromPayload();
    public void set_ShouldUpdateFromPayload(bool value);
    public bool get_CreatedByMaterializer();
    public void set_CreatedByMaterializer(bool value);
    public bool get_EntityHasBeenResolved();
    public void set_EntityHasBeenResolved(bool value);
    public bool get_EntityPropertyMappingsApplied();
    public void set_EntityPropertyMappingsApplied(bool value);
    public EntityDescriptor get_EntityDescriptor();
    internal void AddNavigationLink(string propertyName, Uri navigationLink, bool isFeed);
    internal void AddRelationshipLink(string propertyName, Uri relationshipLink);
    internal AtomContentProperty TryGetProperty(string propertyName);
    private bool GetFlagValue(EntryFlags mask);
    private void SetFlagValue(EntryFlags mask, bool value);
}
internal class System.Data.Services.Client.AtomFeed : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <NextLink>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AtomEntry> <Entries>k__BackingField;
    public Nullable`1<long> Count { get; public set; }
    public Uri NextLink { get; public set; }
    public IEnumerable`1<AtomEntry> Entries { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Uri get_NextLink();
    [CompilerGeneratedAttribute]
public void set_NextLink(Uri value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<AtomEntry> get_Entries();
    [CompilerGeneratedAttribute]
public void set_Entries(IEnumerable`1<AtomEntry> value);
}
[DebuggerDisplayAttribute("AtomMaterializer {parser}")]
internal class System.Data.Services.Client.AtomMaterializer : object {
    private ResponseInfo responseInfo;
    private Type expectedType;
    private bool ignoreMissingProperties;
    private AtomMaterializerLog log;
    private ProjectionPlan materializeEntryPlan;
    private Action`2<AtomTag, object> materializedObjectCallback;
    private MergeOption mergeOption;
    private Dictionary`2<IEnumerable, DataServiceQueryContinuation> nextLinkTable;
    private AtomParser parser;
    private AtomMaterializerEpm epm;
    private object currentValue;
    private object targetInstance;
    [CompilerGeneratedAttribute]
private static Func`2<ClientProperty, bool> CS$<>9__CachedAnonymousMethodDelegate16;
    [CompilerGeneratedAttribute]
private static Func`2<AtomEntry, object> CS$<>9__CachedAnonymousMethodDelegate18;
    [CompilerGeneratedAttribute]
private static Func`2<LinkDescriptor, object> CS$<>9__CachedAnonymousMethodDelegate1c;
    internal ResponseInfo ResponseInfo { get; }
    internal ProjectionPlan MaterializeEntryPlan { get; }
    internal object TargetInstance { get; internal set; }
    internal AtomFeed CurrentFeed { get; }
    internal AtomEntry CurrentEntry { get; }
    internal object CurrentValue { get; }
    internal AtomMaterializerLog Log { get; }
    internal Dictionary`2<IEnumerable, DataServiceQueryContinuation> NextLinkTable { get; }
    internal bool IsEndOfStream { get; }
    internal AtomMaterializer(AtomParser parser, ResponseInfo responseInfo, Type expectedType, AtomMaterializerLog log, Action`2<AtomTag, object> materializedObjectCallback, QueryComponents queryComponents, ProjectionPlan plan);
    internal ResponseInfo get_ResponseInfo();
    internal ProjectionPlan get_MaterializeEntryPlan();
    internal object get_TargetInstance();
    internal void set_TargetInstance(object value);
    internal AtomFeed get_CurrentFeed();
    internal AtomEntry get_CurrentEntry();
    internal object get_CurrentValue();
    internal AtomMaterializerLog get_Log();
    internal Dictionary`2<IEnumerable, DataServiceQueryContinuation> get_NextLinkTable();
    internal bool get_IsEndOfStream();
    internal static IEnumerable`1<T> EnumerateAsElementType(IEnumerable source);
    internal static IEnumerable`1<T> EnumerateAsElementTypeInternal(IEnumerable source);
    internal static bool IsDataServiceCollection(Type type);
    internal static List`1<TTarget> ListAsElementType(AtomMaterializer materializer, IEnumerable`1<T> source);
    internal static bool ProjectionCheckValueForPathIsNull(AtomEntry entry, Type expectedType, ProjectionPath path);
    internal static IEnumerable ProjectionSelect(AtomMaterializer materializer, AtomEntry entry, Type expectedType, Type resultType, ProjectionPath path, Func`4<object, object, Type, object> selector);
    internal static AtomEntry ProjectionGetEntry(AtomEntry entry, string name);
    internal static object ProjectionInitializeEntity(AtomMaterializer materializer, AtomEntry entry, Type expectedType, Type resultType, String[] properties, Func`4[] propertyValues);
    internal static object ProjectionValueForPath(AtomMaterializer materializer, AtomEntry entry, Type expectedType, ProjectionPath path);
    internal static void ProjectionEnsureEntryAvailableOfType(AtomMaterializer materializer, AtomEntry entry, Type requiredType);
    internal static object DirectMaterializePlan(AtomMaterializer materializer, AtomEntry entry, Type expectedEntryType);
    internal static object ShallowMaterializePlan(AtomMaterializer materializer, AtomEntry entry, Type expectedEntryType);
    internal static void ValidatePropertyMatch(ClientProperty property, AtomContentProperty atomProperty);
    internal static void ValidatePropertyMatch(ClientProperty property, AtomContentProperty atomProperty, ResponseInfo responseInfo, bool performEntityCheck);
    internal bool Read();
    internal void PropagateContinuation(IEnumerable`1<T> from, DataServiceCollection`1<T> to);
    private static void CheckEntryToAccessNotNull(AtomEntry entry, string name);
    private static ProjectionPlan CreatePlan(QueryComponents queryComponents, DataServiceProtocolVersion maxProtocolVersion);
    private static ProjectionPlan CreatePlanForDirectMaterialization(Type lastSegmentType);
    private static ProjectionPlan CreatePlanForShallowMaterialization(Type lastSegmentType);
    private static Action`2<object, object> GetAddToCollectionDelegate(Type listType);
    private static object GetOrCreateCollectionProperty(object instance, ClientProperty property, Type collectionType);
    private static void MaterializeToList(AtomMaterializer materializer, IEnumerable list, Type nestedExpectedType, IEnumerable`1<AtomEntry> entries);
    private static bool MaterializePrimitiveDataValue(Type type, AtomContentProperty atomProperty, ResponseInfo responseInfo);
    private static void MaterializeComplexTypeProperty(Type propertyType, AtomContentProperty atomProperty, bool ignoreMissingProperties, ResponseInfo responseInfo);
    private static void MaterializeDataValues(ClientType actualType, List`1<AtomContentProperty> values, bool ignoreMissingProperties, ResponseInfo responseInfo);
    private static void MaterializeMultiValueDataValues(Type multiValueItemType, AtomContentProperty property, bool ignoreMissingProperties, ResponseInfo responseInfo);
    private static void ApplyDataValue(ClientType type, AtomContentProperty property, bool ignoreMissingProperties, ResponseInfo responseInfo, object instance);
    private static void ApplyMultiValueDataValues(AtomContentProperty multiValueAtomProperty, bool ignoreMissingProperties, ResponseInfo responseInfo, object multiValueInstance, Type multiValueItemType, Action`2<object, object> AddValueToBackingICollectionInstance);
    private static void ApplyDataValues(ClientType type, IEnumerable`1<AtomContentProperty> properties, bool ignoreMissingProperties, ResponseInfo responseInfo, object instance);
    private static object CreateMultiValueInstance(AtomContentProperty multiValueAtomProperty, Type userMultiValueType, ResponseInfo responseInfo);
    private static AtomContentProperty GetPropertyOrThrow(List`1<AtomContentProperty> properties, string propertyName, string entryIdentity);
    private static void ApplyLinkProperties(ClientType actualType, AtomEntry entry);
    private void MergeLists(AtomEntry entry, ClientProperty property, IEnumerable list, Uri nextLink, ProjectionPlan plan);
    private bool TryResolveAsTarget(AtomEntry entry);
    private bool TryResolveFromContext(AtomEntry entry, Type expectedEntryType);
    private void ResolveByCreatingWithType(AtomEntry entry, Type type);
    private void ResolveByCreating(AtomEntry entry, Type expectedEntryType);
    private bool TryResolveAsCreated(AtomEntry entry);
    private void ResolveOrCreateInstance(AtomEntry entry, Type expectedEntryType);
    private void ApplyFeedToCollection(AtomEntry entry, ClientProperty property, AtomFeed feed, bool includeLinks);
    private void ApplyItemsToCollection(AtomEntry entry, ClientProperty property, IEnumerable items, Uri nextLink, ProjectionPlan continuationPlan);
    private void FoundNextLinkForCollection(IEnumerable collection, Uri link, ProjectionPlan plan);
    private void FoundNextLinkForUnmodifiedCollection(IEnumerable collection);
    private void Materialize(AtomEntry entry, Type expectedEntryType, bool includeLinks);
    private void MaterializeResolvedEntry(AtomEntry entry, bool includeLinks);
    [CompilerGeneratedAttribute]
private static bool <ApplyLinkProperties>b__15(ClientProperty p);
    [CompilerGeneratedAttribute]
private static object <ApplyFeedToCollection>b__17(AtomEntry e);
    [CompilerGeneratedAttribute]
private bool <ApplyItemsToCollection>b__19(LinkDescriptor x);
    [CompilerGeneratedAttribute]
private static object <ApplyItemsToCollection>b__1a(LinkDescriptor x);
}
internal class System.Data.Services.Client.AtomMaterializerEpm : object {
    private bool enableNullExtensionAttributes;
    [CompilerGeneratedAttribute]
private static Func`2<XNode, bool> CS$<>9__CachedAnonymousMethodDelegate12;
    internal AtomMaterializerEpm(bool enableNullExtensionAttributes);
    internal void ApplyEntityPropertyMappings(AtomEntry entry, ClientType entryType);
    private static IEnumerable`1<XElement> FilterByCriteria(IEnumerable`1<XElement> elements, EpmTargetPathSegment targetSegment, string criteriaAttributeName, EpmTargetTree targetTree);
    private static bool IsMultiValueAlreadySet(List`1<AtomContentProperty> values, EpmTargetPathSegment targetSegment);
    private static string GetMappedMultiValueItemValue(XElement element, EpmTargetPathSegment targetSegment);
    private static void SetMappedPropertyValue(List`1<AtomContentProperty> values, EpmTargetPathSegment targetSegment, string value, bool isNull, string typeName);
    private static AtomContentProperty CreatePropertyForMultiValue(List`1<AtomContentProperty> values, EpmTargetPathSegment targetSegment);
    private static AtomContentProperty GetAtomContentPropertyForTargetSegmentPath(List`1<AtomContentProperty> values, EpmTargetPathSegment targetSegment, Boolean& existing);
    private void DispatchSettingMappedPropertyValue(List`1<AtomContentProperty> values, XElement element, EpmTargetPathSegment targetSegment);
    private void ApplyEntityPropertyMappings(List`1<AtomContentProperty> values, XElement entryElement, EpmTargetPathSegment targetPathSegment, EpmTargetTree targetTree);
    private void ApplyEntityPropertyMappingsToMultiValue(List`1<AtomContentProperty> values, EpmTargetPathSegment targetSegment, IEnumerable`1<XElement> multiValueItemElements, EpmTargetTree targetTree);
    [CompilerGeneratedAttribute]
private static bool <DispatchSettingMappedPropertyValue>b__11(XNode n);
}
internal static class System.Data.Services.Client.AtomMaterializerInvoker : object {
    internal static IEnumerable`1<T> EnumerateAsElementType(IEnumerable source);
    internal static List`1<TTarget> ListAsElementType(object materializer, IEnumerable`1<T> source);
    internal static bool ProjectionCheckValueForPathIsNull(object entry, Type expectedType, object path);
    internal static IEnumerable ProjectionSelect(object materializer, object entry, Type expectedType, Type resultType, object path, Func`4<object, object, Type, object> selector);
    internal static object ProjectionGetEntry(object entry, string name);
    internal static object ProjectionInitializeEntity(object materializer, object entry, Type expectedType, Type resultType, String[] properties, Func`4[] propertyValues);
    internal static object ProjectionValueForPath(object materializer, object entry, Type expectedType, object path);
    internal static object DirectMaterializePlan(object materializer, object entry, Type expectedEntryType);
    internal static object ShallowMaterializePlan(object materializer, object entry, Type expectedEntryType);
}
internal class System.Data.Services.Client.AtomMaterializerLog : object {
    private ResponseInfo responseInfo;
    private Dictionary`2<string, AtomEntry> appendOnlyEntries;
    private Dictionary`2<string, AtomEntry> identityStack;
    private List`1<LinkDescriptor> links;
    private MergeOption mergeOption;
    private object insertRefreshObject;
    internal bool Tracking { get; }
    internal AtomMaterializerLog(ResponseInfo responseInfo);
    internal bool get_Tracking();
    internal static void MergeEntityDescriptorInfo(EntityDescriptor trackedEntityDescriptor, EntityDescriptor entityDescriptorFromMaterializer, bool mergeInfo, MergeOption mergeOption);
    internal void ApplyToContext();
    internal void Clear();
    internal void FoundExistingInstance(AtomEntry entry);
    internal void FoundTargetInstance(AtomEntry entry);
    internal bool TryResolve(AtomEntry entry, AtomEntry& existingEntry);
    internal void AddedLink(AtomEntry source, string propertyName, object target);
    internal void CreatedInstance(AtomEntry entry);
    internal void RemovedLink(AtomEntry source, string propertyName, object target);
    internal void SetLink(AtomEntry source, string propertyName, object target);
    private static bool ShouldTrackWithContext(AtomEntry entry);
    private static bool ShouldTrackWithContext(object entity, DataServiceProtocolVersion maxProtocolVersion);
}
[DebuggerDisplayAttribute("AtomParser {kind} {reader}")]
internal class System.Data.Services.Client.AtomParser : object {
    private static long CountStateInitial;
    private static long CountStateFailure;
    internal DataServiceProtocolVersion MaxProtocolVersion;
    private Func`2<XmlWrappingReader, KeyValuePair`2<XmlWrappingReader, AtomTag>> entryCallback;
    private Stack`1<XmlWrappingReader> readers;
    private string typeScheme;
    private string currentDataNamespace;
    private UriResolver baseUriResolver;
    private long countValue;
    private AtomEntry entry;
    private AtomFeed feed;
    private AtomDataKind kind;
    private XmlWrappingReader reader;
    internal AtomEntry CurrentEntry { get; }
    internal AtomFeed CurrentFeed { get; }
    internal AtomDataKind DataKind { get; }
    internal bool IsDataWebElement { get; }
    internal AtomParser(XmlReader reader, Func`2<XmlWrappingReader, KeyValuePair`2<XmlWrappingReader, AtomTag>> entryCallback, string typeScheme, string currentDataNamespace, UriResolver baseUriResolver, DataServiceProtocolVersion maxProtocolVersion);
    internal AtomEntry get_CurrentEntry();
    internal AtomFeed get_CurrentFeed();
    internal AtomDataKind get_DataKind();
    internal virtual bool get_IsDataWebElement();
    public sealed virtual void Dispose();
    internal static AtomParser CreateWrapper(IEnumerable`1<AtomEntry> entries);
    internal static KeyValuePair`2<XmlWrappingReader, AtomTag> XElementBuilderCallback(XmlWrappingReader reader);
    internal static AtomEntry ParseSingleEntityPayload(XmlReader reader, ResponseInfo responseInfo);
    internal virtual bool Read();
    internal AtomContentProperty ReadCurrentPropertyValue();
    internal string ReadCustomElementString();
    internal long CountValue();
    private static AtomDataKind ParseStateForReader(XmlReader reader);
    private static bool ReadChildElement(XmlReader reader, string localName, string namespaceUri);
    private static string ReadElementStringForText(XmlReader reader);
    private static bool ShouldIgnoreNode(XmlReader reader);
    private static bool IsAllowedContentType(string contentType);
    private static bool IsAllowedRelationshipLinkType(string linkType);
    private static bool IsAllowedNavigationLinkType(string linkType, Boolean& isFeed);
    private void ParseCurrentContent(AtomEntry targetEntry);
    private void ReadCountValue();
    private void ParseCurrentLink(AtomEntry targetEntry);
    private void ReadPropertyValueIntoResult(AtomContentProperty property);
    private AtomContentProperty ReadPropertyValue();
    private void ReadCurrentProperties(List`1<AtomContentProperty> values);
    private void ParseCurrentEntry(AtomEntry& targetEntry);
    private void ParseCurrentFeedCount();
    private void ParseCurrentFeedPagingLinks();
    private Uri ConvertHRefAttributeValueIntoURI(string href);
    private void HandleExpandedNavigationProperties(AtomEntry targetEntry, string propertyName, bool isFeed);
    private void ReadNamedStreamInfoFromLinkElement(AtomEntry targetEntry, string name, bool editLink);
}
internal class System.Data.Services.Client.AtomTag : object {
    [CompilerGeneratedAttribute]
private XElement <Entry>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    public XElement Entry { get; private set; }
    public Uri BaseUri { get; private set; }
    public AtomTag(XElement entry, Uri baseUri);
    [CompilerGeneratedAttribute]
public XElement get_Entry();
    [CompilerGeneratedAttribute]
private void set_Entry(XElement value);
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
private void set_BaseUri(Uri value);
}
internal abstract class System.Data.Services.Client.BaseAsyncResult : object {
    private static int True;
    private static int False;
    internal object Source;
    internal string Method;
    private AsyncCallback userCallback;
    private object userState;
    private ManualResetEvent asyncWait;
    private Exception failure;
    private WebRequest abortable;
    private int completedSynchronously;
    private bool userCompleted;
    private int completed;
    private int userNotified;
    private int done;
    private bool asyncWaitDisposed;
    private object asyncWaitDisposeLock;
    public object AsyncState { get; }
    [DebuggerBrowsableAttribute("0")]
public WaitHandle AsyncWaitHandle { get; }
    public bool CompletedSynchronously { get; }
    public bool IsCompleted { get; }
    internal bool IsCompletedInternally { get; }
    internal bool IsAborted { get; }
    internal WebRequest Abortable { get; internal set; }
    internal Exception Failure { get; }
    internal BaseAsyncResult(object source, string method, AsyncCallback callback, object state);
    public sealed virtual object get_AsyncState();
    public sealed virtual WaitHandle get_AsyncWaitHandle();
    public sealed virtual bool get_CompletedSynchronously();
    public sealed virtual bool get_IsCompleted();
    internal bool get_IsCompletedInternally();
    internal bool get_IsAborted();
    internal WebRequest get_Abortable();
    internal void set_Abortable(WebRequest value);
    internal Exception get_Failure();
    internal static T EndExecute(object source, string method, IAsyncResult asyncResult);
    internal static IAsyncResult InvokeAsync(Func`4<HttpWebRequest, AsyncCallback, object, IAsyncResult> asyncAction, HttpWebRequest request, AsyncCallback callback, object state);
    internal static IAsyncResult InvokeAsync(AsyncAction asyncAction, Byte[] buffer, int offset, int length, AsyncCallback callback, object state);
    internal void SetCompletedSynchronously(bool isCompletedSynchronously);
    internal void HandleCompleted();
    internal bool HandleFailure(Exception e);
    internal void SetAborted();
    internal void SetCompleted();
    protected abstract virtual void CompletedRequest();
    private static IAsyncResult PostInvokeAsync(IAsyncResult asyncResult, AsyncCallback callback);
    private static AsyncCallback GetDataServiceAsyncCallback(AsyncCallback callback);
    private void SetAsyncWaitHandle();
}
internal abstract class System.Data.Services.Client.BaseSaveResult : BaseAsyncResult {
    protected static string NewLine;
    protected RequestInfo RequestInfo;
    protected List`1<Descriptor> ChangedEntries;
    protected SaveChangesOptions Options;
    protected PerRequest request;
    protected HttpWebResponse batchResponse;
    protected int entryIndex;
    protected StreamRequestKind streamRequestKind;
    protected Stream mediaResourceRequestStream;
    protected Byte[] buildBatchBuffer;
    [CompilerGeneratedAttribute]
private static Func`2<EntityDescriptor, IEnumerable`1<StreamDescriptor>> CS$<>9__CachedAnonymousMethodDelegate8;
    [CompilerGeneratedAttribute]
private static Func`2<Descriptor, bool> CS$<>9__CachedAnonymousMethodDelegate9;
    [CompilerGeneratedAttribute]
private static Func`2<Descriptor, UInt32> CS$<>9__CachedAnonymousMethodDelegatea;
    internal bool IsBatch { get; }
    protected Stream ResponseStream { get; }
    protected bool ProcessResponsePayload { get; }
    internal BaseSaveResult(DataServiceContext context, string method, DataServiceRequest[] queries, SaveChangesOptions options, AsyncCallback callback, object state);
    private static BaseSaveResult();
    internal abstract virtual bool get_IsBatch();
    protected abstract virtual Stream get_ResponseStream();
    protected abstract virtual bool get_ProcessResponsePayload();
    internal static BaseSaveResult CreateSaveResult(DataServiceContext context, string method, DataServiceRequest[] queries, SaveChangesOptions options, AsyncCallback callback, object state);
    internal static InvalidOperationException HandleResponse(RequestInfo requestInfo, HttpStatusCode statusCode, string responseVersion, Func`1<Stream> getResponseStream, bool throwOnFailure, Version& parsedResponseVersion);
    internal static DataServiceClientException GetResponseText(Func`1<Stream> getResponseStream, HttpStatusCode statusCode);
    internal DataServiceResponse EndRequest();
    protected static void CompleteCheck(PerRequest value, InternalError errorcode);
    protected static void EqualRefCheck(PerRequest actual, PerRequest expected, InternalError errorcode);
    protected static string GetLinkHttpMethod(LinkDescriptor link);
    protected static XmlReader CreateXmlReader(Stream stream, string contentType);
    protected Version DetermineRequestVersion(ClientType clientType, EntityStates state);
    protected abstract virtual DataServiceResponse HandleResponse();
    protected string GetEntityHttpMethod(EntityStates state, Version& requestVersion);
    protected bool HandleFailure(PerRequest pereq, Exception e);
    protected ContentStream CreateChangeData(int index, bool newline);
    protected Uri CreateRequestUri(EntityDescriptor sourceResource, LinkDescriptor binding);
    protected Uri CreateRequestRelativeUri(LinkDescriptor binding);
    protected virtual void FinishCurrentChange(PerRequest pereq);
    protected void HandleCompleted(PerRequest pereq);
    protected void AsyncEndGetRequestStream(IAsyncResult asyncResult);
    protected void AsyncEndGetResponse(IAsyncResult asyncResult);
    protected abstract virtual void HandleOperationResponse(HttpWebResponse response);
    protected void HandleOperationResponseHeaders(HttpStatusCode statusCode, Dictionary`2<string, string> headers);
    protected void HandleOperationResponse(Descriptor descriptor, Dictionary`2<string, string> contentHeaders, Version responseVersion);
    protected abstract virtual MaterializeAtom GetMaterializer(EntityDescriptor entityDescriptor, ResponseInfo responseInfo);
    protected virtual void CompletedRequest();
    protected ResponseInfo CreateResponseInfo(EntityDescriptor entityDescriptor, Version responseVersion);
    protected IEnumerable`1<LinkDescriptor> RelatedLinks(EntityDescriptor entityDescriptor);
    protected int SaveResultProcessed(Descriptor descriptor);
    private static bool ShouldWriteEmptyEpmPropertyValueInContent(EpmSourcePathSegment sourceSegment, object propertyValue);
    private static void WriteContentProperty(XmlWriter writer, string namespaceName, ClientProperty property, object propertyValue);
    private static bool CanHandleResponseVersion(string responseVersion, Version& parsedResponseVersion);
    private static string SerializeSupportedVersions();
    private static void HandleResponsePost(LinkDescriptor linkDescriptor);
    private MemoryStream CreateRequestData(EntityDescriptor entityDescriptor, bool newline);
    private MemoryStream CreateRequestData(LinkDescriptor binding, bool newline);
    private void HandleResponsePost(Descriptor descriptor, Dictionary`2<string, string> contentHeaders, Version responseVersion);
    private void HandleResponsePost(EntityDescriptor entityDescriptor, Version responseVersion, string etag);
    private void HandleResponsePut(Descriptor descriptor, Dictionary`2<string, string> responseHeaders, Version responseVersion);
    private void HandleResponseDelete(Descriptor descriptor);
    private string GetServerTypeName(EntityDescriptor descriptor);
    private void CreateRequestDataLinks(EntityDescriptor entityDescriptor, XmlWriter writer);
    private void WriteContentProperties(XmlWriter writer, ClientType type, object resource, EpmSourcePathSegment currentSegment, List`1<object> visitedComplexTypeObjects, Boolean& propertiesWritten);
    private void WriteComplexType(XmlWriter writer, ClientProperty property, object propertyValue, EpmSourcePathSegment matchedSegment, List`1<object> visitedComplexTypeObjects, Boolean& propertiesWritten);
    private void WriteMultiValue(XmlWriter writer, ClientProperty property, object propertyValue, List`1<object> visitedComplexTypeObjects);
    private void AsyncRequestContentEndRead(IAsyncResult asyncResult);
    private void AsyncEndWrite(IAsyncResult asyncResult);
    private void AsyncEndRead(IAsyncResult asyncResult);
    private void MaterializeResponse(EntityDescriptor entityDescriptor, ResponseInfo responseInfo, string etag);
    [CompilerGeneratedAttribute]
private static IEnumerable`1<StreamDescriptor> <.ctor>b__5(EntityDescriptor e);
    [CompilerGeneratedAttribute]
private static bool <.ctor>b__6(Descriptor o);
    [CompilerGeneratedAttribute]
private static UInt32 <.ctor>b__7(Descriptor o);
}
internal class System.Data.Services.Client.BatchSaveResult : BaseSaveResult {
    private DataServiceRequest[] Queries;
    private string BatchBoundary;
    private Stream responseStream;
    private BatchStream responseBatchStream;
    [CompilerGeneratedAttribute]
private static Func`2<Descriptor, bool> CS$<>9__CachedAnonymousMethodDelegate9;
    [CompilerGeneratedAttribute]
private static Func`2<Descriptor, bool> CS$<>9__CachedAnonymousMethodDelegatea;
    internal bool IsBatch { get; }
    protected Stream ResponseStream { get; }
    protected bool ProcessResponsePayload { get; }
    private BatchStream ResponseBatchStream { get; }
    internal BatchSaveResult(DataServiceContext context, string method, DataServiceRequest[] queries, SaveChangesOptions options, AsyncCallback callback, object state);
    internal virtual bool get_IsBatch();
    protected virtual Stream get_ResponseStream();
    protected virtual bool get_ProcessResponsePayload();
    private BatchStream get_ResponseBatchStream();
    internal void BatchBeginRequest();
    internal void BatchRequest();
    protected virtual void FinishCurrentChange(PerRequest pereq);
    protected virtual void HandleOperationResponse(HttpWebResponse response);
    protected virtual DataServiceResponse HandleResponse();
    protected virtual MaterializeAtom GetMaterializer(EntityDescriptor entityDescriptor, ResponseInfo responseInfo);
    private static void WriteOperationRequestHeaders(StreamWriter writer, string methodName, string uri, Version requestVersion, Version requestMaxVersion);
    private HttpWebRequest CreateBatchRequest(MemoryStream memory);
    private MemoryStream GenerateBatchRequest();
    private void CreateRequestBatch(LinkDescriptor binding, StreamWriter text);
    private void CreateRequestBatch(EntityDescriptor entityDescriptor, StreamWriter text);
    private DataServiceResponse HandleBatchResponse();
    private DataServiceResponse HandleBatchResponseInternal();
    private IEnumerable`1<OperationResponse> HandleBatchResponse(BatchStream batch);
    private int ValidateContentID(Dictionary`2<string, string> contentHeaders);
    [CompilerGeneratedAttribute]
private Stream <HandleBatchResponse>b__3();
    [CompilerGeneratedAttribute]
private Stream <HandleBatchResponse>b__4();
    [CompilerGeneratedAttribute]
private static bool <HandleBatchResponse>b__7(Descriptor o);
    [CompilerGeneratedAttribute]
private static bool <HandleBatchResponse>b__8(Descriptor o);
}
internal class System.Data.Services.Client.BatchStream : Stream {
    private static int DefaultBufferSize;
    private static int MaxDelimiterLength;
    private bool batchRequest;
    private Byte[] byteBuffer;
    private Stream reader;
    private int byteLength;
    private int bytePosition;
    private Encoding batchEncoding;
    private bool checkPreamble;
    private string batchBoundary;
    private int batchLength;
    private int totalCount;
    private string changesetBoundary;
    private Encoding changesetEncoding;
    private Dictionary`2<string, string> contentHeaders;
    private Stream contentStream;
    private bool disposeWithContentStreamDispose;
    private string statusCode;
    private BatchStreamState batchState;
    private MemoryStream writer;
    public Dictionary`2<string, string> ContentHeaders { get; }
    public Encoding Encoding { get; }
    public BatchStreamState State { get; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal BatchStream(Stream stream, string boundary, Encoding batchEncoding, bool requestStream);
    public Dictionary`2<string, string> get_ContentHeaders();
    public Encoding get_Encoding();
    public BatchStreamState get_State();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    internal static bool GetBoundaryAndEncodingFromMultipartMixedContentType(string contentType, String& boundary, Encoding& encoding);
    internal string GetResponseVersion();
    internal HttpStatusCode GetStatusCode();
    internal bool MoveNext();
    internal Stream GetContentStream();
    internal bool IsContentStreamEmpty();
    protected virtual void Dispose(bool disposing);
    private static BatchStreamState GetStateBasedOnHttpMethodName(string methodName);
    private static string VerifyBoundary(string boundary);
    private void ClearPreviousOperationInformation();
    private void Append(Byte[]& buffer, int count);
    private void AssertOpen();
    private bool ReadBuffer();
    private string ReadLine();
    private Encoding DetectEncoding();
    private int ReadDelimiter(Byte[] buffer, int offset, int count);
    private int SeekDelimiter(Byte[] buffer, int offset, int count, Boolean& endOfStream, Boolean& boundaryMatch);
    private int ReadLength(Byte[] buffer, int offset, int count);
    private void ReadContentHeaders();
    private void ReadHttpHeaders();
    private void ValidateStateChange(BatchStreamState state);
}
internal enum System.Data.Services.Client.BatchStreamState : Enum {
    public int value__;
    public static BatchStreamState EndBatch;
    public static BatchStreamState StartBatch;
    public static BatchStreamState BeginChangeSet;
    public static BatchStreamState EndChangeSet;
    public static BatchStreamState Post;
    public static BatchStreamState Put;
    public static BatchStreamState Delete;
    public static BatchStreamState Get;
    public static BatchStreamState Merge;
    public static BatchStreamState Patch;
    public static BatchStreamState GetResponse;
    public static BatchStreamState ChangeResponse;
}
internal class System.Data.Services.Client.BinaryTypeConverter : PrimitiveTypeConverter {
    [CompilerGeneratedAttribute]
private static Type <BinaryType>k__BackingField;
    internal static Type BinaryType { get; internal set; }
    [CompilerGeneratedAttribute]
internal static Type get_BinaryType();
    [CompilerGeneratedAttribute]
internal static void set_BinaryType(Type value);
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class System.Data.Services.Client.BindingEntityInfo : object {
    private static object FalseObject;
    private static object TrueObject;
    private static ReaderWriterLockSlim metadataCacheLock;
    private static HashSet`1<Type> knownNonEntityTypes;
    private static Dictionary`2<Type, object> knownObservableCollectionTypes;
    private static Dictionary`2<Type, BindingEntityInfoPerType> bindingEntityInfos;
    private static BindingEntityInfo();
    internal static IList`1<BindingPropertyInfo> GetObservableProperties(Type entityType, DataServiceProtocolVersion maxProtocolVersion);
    internal static ClientType GetClientType(Type entityType, DataServiceProtocolVersion maxProtocolVersion);
    internal static string GetEntitySet(object target, string targetEntitySet, DataServiceProtocolVersion maxProtocolVersion);
    internal static bool IsDataServiceCollection(Type collectionType, DataServiceProtocolVersion maxProtocolVersion);
    internal static bool IsEntityType(Type type, DataServiceProtocolVersion maxProtocolVersion);
    internal static object GetPropertyValue(object source, string sourceProperty, DataServiceProtocolVersion maxProtocolVersion, BindingPropertyInfo& bindingPropertyInfo, ClientProperty& clientProperty);
    private static BindingEntityInfoPerType GetBindingEntityInfoFor(Type entityType, DataServiceProtocolVersion maxProtocolVersion);
    private static bool CanBeComplexType(Type type);
    private static string GetEntitySetAttribute(Type entityType, DataServiceProtocolVersion maxProtocolVersion);
}
internal class System.Data.Services.Client.BindingGraph : object {
    private BindingObserver observer;
    private Graph graph;
    public BindingGraph(BindingObserver observer);
    public bool AddCollection(object source, string sourceProperty, object collection, string collectionEntitySet);
    public void AddMultiValue(object source, string sourceProperty, object multiValue, Type multiValueItemType);
    public bool AddEntity(object source, string sourceProperty, object target, string targetEntitySet, object edgeSource);
    public void RemoveCollectionItem(object item, object parent, string parentProperty);
    public void RemoveMultiValueItem(object item, object multiValue);
    public void RemoveCollectionOrMultiValue(object source);
    public void RemoveRelation(object source, string relation);
    public void RemoveNonTrackedEntities();
    public IEnumerable`1<object> GetCollectionItems(object collection);
    public void Reset();
    public void RemoveUnreachableVertices();
    public void GetEntityCollectionInfo(object collection, Object& source, String& sourceProperty, String& sourceEntitySet, String& targetEntitySet);
    public void GetMultiValueInfo(object multiValue, Object& source, String& sourceProperty, Type& multiValueItemType);
    public void GetAncestorEntityForComplexProperty(Object& entity, String& propertyName, Object& propertyValue);
    public void AddComplexObject(object source, string sourceProperty, object target);
    public void AddComplexObjectsFromMultiValue(object multiValue, IEnumerable multiValueItems);
    private void AddFromProperties(object entity);
    private void AttachCollectionNotification(object target);
    private bool AttachMultiValueNotification(object multiValue);
    private bool AttachEntityOrComplexObjectNotification(object target);
    private void DetachNotifications(object target);
    private void DetachCollectionNotifications(object target);
    private void SetObserver(ICollection collection);
    [CompilerGeneratedAttribute]
private bool <RemoveNonTrackedEntities>b__7(object o);
}
internal class System.Data.Services.Client.BindingObserver : object {
    private BindingGraph bindingGraph;
    [CompilerGeneratedAttribute]
private DataServiceContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AttachBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DetachBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<EntityChangedParams, bool> <EntityChanged>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<EntityCollectionChangedParams, bool> <CollectionChanged>k__BackingField;
    internal DataServiceContext Context { get; private set; }
    internal bool AttachBehavior { get; internal set; }
    internal bool DetachBehavior { get; internal set; }
    internal Func`2<EntityChangedParams, bool> EntityChanged { get; private set; }
    internal Func`2<EntityCollectionChangedParams, bool> CollectionChanged { get; private set; }
    internal BindingObserver(DataServiceContext context, Func`2<EntityChangedParams, bool> entityChanged, Func`2<EntityCollectionChangedParams, bool> collectionChanged);
    [CompilerGeneratedAttribute]
internal DataServiceContext get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(DataServiceContext value);
    [CompilerGeneratedAttribute]
internal bool get_AttachBehavior();
    [CompilerGeneratedAttribute]
internal void set_AttachBehavior(bool value);
    [CompilerGeneratedAttribute]
internal bool get_DetachBehavior();
    [CompilerGeneratedAttribute]
internal void set_DetachBehavior(bool value);
    [CompilerGeneratedAttribute]
internal Func`2<EntityChangedParams, bool> get_EntityChanged();
    [CompilerGeneratedAttribute]
private void set_EntityChanged(Func`2<EntityChangedParams, bool> value);
    [CompilerGeneratedAttribute]
internal Func`2<EntityCollectionChangedParams, bool> get_CollectionChanged();
    [CompilerGeneratedAttribute]
private void set_CollectionChanged(Func`2<EntityCollectionChangedParams, bool> value);
    internal void StartTracking(DataServiceCollection`1<T> collection, string collectionEntitySet);
    internal void StopTracking();
    internal void OnPropertyChanged(object source, PropertyChangedEventArgs eventArgs);
    internal void OnCollectionChanged(object collection, NotifyCollectionChangedEventArgs eventArgs);
    internal void OnMultiValueChanged(object sender, NotifyCollectionChangedEventArgs e);
    internal void HandleAddEntity(object source, string sourceProperty, string sourceEntitySet, ICollection collection, object target, string targetEntitySet);
    internal void HandleDeleteEntity(object source, string sourceProperty, string sourceEntitySet, ICollection collection, object target, string targetEntitySet);
    internal void HandleUpdateEntityReference(object source, string sourceProperty, string sourceEntitySet, object target, string targetEntitySet);
    internal bool IsContextTrackingEntity(object entity);
    private void HandleUpdateEntity(object entity, string propertyName, object propertyValue);
    private void OnAddToCollection(NotifyCollectionChangedEventArgs eventArgs, object source, string sourceProperty, string targetEntitySet, object collection);
    private void OnDeleteFromCollection(NotifyCollectionChangedEventArgs eventArgs, object source, string sourceProperty, object collection);
    private void RemoveWithDetachCollection(object collection);
    private void DeepRemoveCollection(IEnumerable collection, object source, string sourceProperty, Action`1<object> itemValidator);
    private void OnAddToMultiValue(object multiValue, IList newItems);
    private void OnRemoveFromMultiValue(object multiValue, IList items);
    private void OnChangesSaved(object sender, SaveChangesEventArgs eventArgs);
    private void CollectUnTrackingInfo(object currentEntity, object parentEntity, string parentProperty, IList`1<UnTrackingInfo> entitiesToUnTrack);
    private bool IsContextTrackingLink(object source, string sourceProperty, object target);
    private bool IsDetachedOrDeletedFromContext(object entity);
    private void ValidateCollectionItem(object target);
}
internal enum System.Data.Services.Client.BindingPropertyKind : Enum {
    public int value__;
    public static BindingPropertyKind BindingPropertyKindComplex;
    public static BindingPropertyKind BindingPropertyKindEntity;
    public static BindingPropertyKind BindingPropertyKindCollection;
    public static BindingPropertyKind BindingPropertyKindMultiValue;
}
internal static class System.Data.Services.Client.BindingUtils : object {
    internal static void ValidateEntitySetName(string entitySetName, object entity);
    internal static Type GetCollectionEntityType(Type collectionType);
    internal static void VerifyObserverNotPresent(object oec, string sourceProperty, Type sourceType);
}
internal class System.Data.Services.Client.BooleanTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class System.Data.Services.Client.ByteArrayTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class System.Data.Services.Client.ByteTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
public class System.Data.Services.Client.ChangeOperationResponse : OperationResponse {
    private Descriptor descriptor;
    public Descriptor Descriptor { get; }
    internal ChangeOperationResponse(Dictionary`2<string, string> headers, Descriptor descriptor);
    public Descriptor get_Descriptor();
}
internal class System.Data.Services.Client.CharArrayTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class System.Data.Services.Client.CharTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal static class System.Data.Services.Client.ClientConvert : object {
    internal static object ChangeType(string propertyValue, Type propertyType);
    internal static bool IsBinaryValue(object value);
    internal static bool TryKeyBinaryToString(object binaryValue, String& result);
    internal static bool TryKeyPrimitiveToString(object value, String& result);
    internal static bool ToNamedType(string typeName, Type& type);
    internal static string ToString(object propertyValue);
    internal static string GetEdmType(Type propertyType);
}
[DebuggerDisplayAttribute("{ElementTypeName}")]
internal class System.Data.Services.Client.ClientType : object {
    internal string ElementTypeName;
    internal Type ElementType;
    internal bool IsEntityType;
    internal int KeyCount;
    internal DataServiceProtocolVersion MaxProtocolVersion;
    private static Dictionary`2<MetadataCacheKey, ClientType> types;
    private static Dictionary`2<TypeName, Type> namedTypes;
    private ArraySet`1<ClientProperty> properties;
    private ClientProperty mediaDataMember;
    private bool mediaLinkEntry;
    private Nullable`1<bool> hasMultiValueProperties;
    private EpmSourceTree epmSourceTree;
    private EpmTargetTree epmTargetTree;
    internal ArraySet`1<ClientProperty> Properties { get; }
    internal ClientProperty MediaDataMember { get; }
    internal bool IsMediaLinkEntry { get; }
    internal EpmSourceTree EpmSourceTree { get; }
    internal EpmTargetTree EpmTargetTree { get; }
    internal bool HasEntityPropertyMappings { get; }
    internal DataServiceProtocolVersion EpmMinimumDataServiceProtocolVersion { get; }
    private ClientType(Type type, string typeName, bool skipSettableCheck, DataServiceProtocolVersion maxProtocolVersion);
    private static ClientType();
    internal ArraySet`1<ClientProperty> get_Properties();
    internal ClientProperty get_MediaDataMember();
    internal bool get_IsMediaLinkEntry();
    internal EpmSourceTree get_EpmSourceTree();
    internal EpmTargetTree get_EpmTargetTree();
    internal bool get_HasEntityPropertyMappings();
    internal DataServiceProtocolVersion get_EpmMinimumDataServiceProtocolVersion();
    internal static bool CanAssignNull(Type type);
    internal static bool CheckElementTypeIsEntity(Type t, DataServiceProtocolVersion maxProtocolVersion);
    internal static ClientType Create(Type type, DataServiceProtocolVersion maxProtocolVersion);
    internal static ClientType Create(Type type, bool expectModelType, DataServiceProtocolVersion maxProtocolVersion);
    internal static Type ResolveFromName(string wireName, Type userType);
    internal static Type GetImplementationType(Type propertyType, Type genericTypeDefinition);
    internal static MethodInfo GetAddToCollectionMethod(Type collectionType, Type& type);
    internal static MethodInfo GetMethodForGenericType(Type propertyType, Type genericTypeDefinition, string methodName, Type& type);
    internal object CreateInstance();
    internal ClientProperty GetProperty(string propertyName, bool ignoreMissingProperties);
    internal bool HasMultiValueProperties();
    private static bool IsConstructedGeneric(Type type, Type genericTypeDefinition);
    private static void ResolveSubclass(string wireClassName, Type userType, Type type, Type& existing);
    private void BuildEpmInfo(Type type);
    private void BuildEpmInfo(EntityPropertyMappingAttribute epmAttr, Type definingType);
    private int IndexOfProperty(string propertyName);
    private void WireUpMimeTypeProperties();
    private void CheckMediaLinkEntry();
    private bool HasMultiValueProperties(List`1<Type> visitedTypes);
    [CompilerGeneratedAttribute]
private bool <.ctor>b__0(string a);
}
internal class System.Data.Services.Client.ClrTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal static class System.Data.Services.Client.CommonUtil : object {
    private static Type OutOfMemoryType;
    private static Type StackOverflowType;
    private static Type ThreadAbortType;
    private static Type[] unsupportedTypes;
    private static CommonUtil();
    internal static bool IsCatchableExceptionType(Exception e);
    internal static bool IsUnsupportedType(Type type);
    internal static string GetMultiValueItemTypeName(string typeName, bool isNested);
    internal static void WriteXmlPreserveSpaceIfNecessary(XmlWriter writer, string value);
    internal static string UriToString(Uri uri);
    internal static bool ReadEmptyElement(XmlReader reader);
    internal static void SkipToEndAtDepth(XmlReader reader, int depth);
}
internal enum System.Data.Services.Client.CountOption : Enum {
    public int value__;
    public static CountOption None;
    public static CountOption ValueOnly;
    public static CountOption InlineAll;
}
internal abstract class System.Data.Services.Client.DataServiceALinqExpressionVisitor : ALinqExpressionVisitor {
    internal virtual Expression Visit(Expression exp);
    internal virtual Expression VisitResourceSetExpression(ResourceSetExpression rse);
    internal virtual Expression VisitNavigationPropertySingletonExpression(NavigationPropertySingletonExpression npse);
    internal virtual Expression VisitInputReferenceExpression(InputReferenceExpression ire);
}
[DebuggerDisplayAttribute("{Message}")]
public class System.Data.Services.Client.DataServiceClientException : InvalidOperationException {
    private int statusCode;
    public int StatusCode { get; }
    public DataServiceClientException(string message);
    public DataServiceClientException(string message, Exception innerException);
    public DataServiceClientException(string message, int statusCode);
    public DataServiceClientException(string message, Exception innerException, int statusCode);
    protected DataServiceClientException(SerializationInfo serializationInfo, StreamingContext context);
    public int get_StatusCode();
    [SecurityCriticalAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class System.Data.Services.Client.DataServiceCollection`1 : ObservableCollection`1<T> {
    private BindingObserver observer;
    private bool rootCollection;
    private DataServiceQueryContinuation`1<T> continuation;
    private bool trackingOnLoad;
    private Func`2<EntityChangedParams, bool> entityChangedCallback;
    private Func`2<EntityCollectionChangedParams, bool> collectionChangedCallback;
    private string entitySetName;
    public DataServiceQueryContinuation`1<T> Continuation { get; public set; }
    internal BindingObserver Observer { get; internal set; }
    internal bool IsTracking { get; }
    public DataServiceCollection`1(IEnumerable`1<T> items);
    public DataServiceCollection`1(IEnumerable`1<T> items, TrackingMode trackingMode);
    public DataServiceCollection`1(DataServiceContext context);
    public DataServiceCollection`1(DataServiceContext context, string entitySetName, Func`2<EntityChangedParams, bool> entityChangedCallback, Func`2<EntityCollectionChangedParams, bool> collectionChangedCallback);
    public DataServiceCollection`1(IEnumerable`1<T> items, TrackingMode trackingMode, string entitySetName, Func`2<EntityChangedParams, bool> entityChangedCallback, Func`2<EntityCollectionChangedParams, bool> collectionChangedCallback);
    public DataServiceCollection`1(DataServiceContext context, IEnumerable`1<T> items, TrackingMode trackingMode, string entitySetName, Func`2<EntityChangedParams, bool> entityChangedCallback, Func`2<EntityCollectionChangedParams, bool> collectionChangedCallback);
    internal DataServiceCollection`1(object atomMaterializer, DataServiceContext context, IEnumerable`1<T> items, TrackingMode trackingMode, string entitySetName, Func`2<EntityChangedParams, bool> entityChangedCallback, Func`2<EntityCollectionChangedParams, bool> collectionChangedCallback);
    public DataServiceQueryContinuation`1<T> get_Continuation();
    public void set_Continuation(DataServiceQueryContinuation`1<T> value);
    internal BindingObserver get_Observer();
    internal void set_Observer(BindingObserver value);
    internal bool get_IsTracking();
    public void Load(IEnumerable`1<T> items);
    public void Load(T item);
    public void Clear(bool stopTracking);
    public void Detach();
    protected virtual void InsertItem(int index, T item);
    private static void ValidateIteratorParameter(IEnumerable`1<T> items);
    private static DataServiceContext GetContextFromItems(IEnumerable`1<T> items);
    private void InternalLoadCollection(IEnumerable`1<T> items);
    private void StartLoading();
    private void FinishLoading();
    private void StartTracking(DataServiceContext context, IEnumerable`1<T> items, string entitySet, Func`2<EntityChangedParams, bool> entityChanged, Func`2<EntityCollectionChangedParams, bool> collectionChanged);
}
public class System.Data.Services.Client.DataServiceContext : object {
    internal Version MaxProtocolVersionAsVersion;
    private DataServiceProtocolVersion maxProtocolVersion;
    private EntityTracker entityTracker;
    private UriResolver baseUriResolver;
    private ICredentials credentials;
    private string dataNamespace;
    private Func`2<Type, string> resolveName;
    private Func`2<string, Type> resolveType;
    private int timeout;
    private bool postTunneling;
    private bool ignoreMissingProperties;
    private MergeOption mergeOption;
    private SaveChangesOptions saveChangesDefaultOptions;
    private Uri typeScheme;
    private bool ignoreResourceNotFoundException;
    private Action`1<object> sendRequest;
    private Func`2<Stream, Stream> getRequestWrappingStream;
    private Action`1<object> sendResponse;
    private Func`2<Stream, Stream> getResponseWrappingStream;
    private bool applyingChanges;
    private EventHandler`1<SendingRequestEventArgs> SendingRequest;
    private EventHandler`1<ReadingWritingEntityEventArgs> ReadingEntity;
    private EventHandler`1<ReadingWritingEntityEventArgs> WritingEntity;
    private EventHandler`1<SaveChangesEventArgs> ChangesSaved;
    [CompilerGeneratedAttribute]
private DataServiceResponsePreference <AddAndUpdateResponsePreference>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<LinkDescriptor, UInt32> CS$<>9__CachedAnonymousMethodDelegate1;
    [CompilerGeneratedAttribute]
private static Func`2<EntityDescriptor, UInt32> CS$<>9__CachedAnonymousMethodDelegate3;
    [CompilerGeneratedAttribute]
private static Func`1<string> CS$<>9__CachedAnonymousMethodDelegate5;
    public Func`2<string, Uri> ResolveEntitySet { get; public set; }
    public Uri BaseUri { get; public set; }
    public DataServiceResponsePreference AddAndUpdateResponsePreference { get; public set; }
    public DataServiceProtocolVersion MaxProtocolVersion { get; }
    public ICredentials Credentials { get; public set; }
    public MergeOption MergeOption { get; public set; }
    public bool ApplyingChanges { get; internal set; }
    public bool IgnoreMissingProperties { get; public set; }
    public string DataNamespace { get; public set; }
    public Func`2<Type, string> ResolveName { get; public set; }
    public Func`2<string, Type> ResolveType { get; public set; }
    public int Timeout { get; public set; }
    public Uri TypeScheme { get; public set; }
    public bool UsePostTunneling { get; public set; }
    public ReadOnlyCollection`1<LinkDescriptor> Links { get; }
    public ReadOnlyCollection`1<EntityDescriptor> Entities { get; }
    public SaveChangesOptions SaveChangesDefaultOptions { get; public set; }
    public bool IgnoreResourceNotFoundException { get; public set; }
    internal bool HasReadingEntityHandlers { get; }
    internal bool HasWritingEntityHandlers { get; }
    internal EntityTracker EntityTracker { get; }
    internal UriResolver BaseUriResolver { get; }
    public DataServiceContext(Uri serviceRoot, DataServiceProtocolVersion maxProtocolVersion);
    public DataServiceContext(Uri serviceRoot);
    public void add_SendingRequest(EventHandler`1<SendingRequestEventArgs> value);
    public void remove_SendingRequest(EventHandler`1<SendingRequestEventArgs> value);
    public void add_ReadingEntity(EventHandler`1<ReadingWritingEntityEventArgs> value);
    public void remove_ReadingEntity(EventHandler`1<ReadingWritingEntityEventArgs> value);
    public void add_WritingEntity(EventHandler`1<ReadingWritingEntityEventArgs> value);
    public void remove_WritingEntity(EventHandler`1<ReadingWritingEntityEventArgs> value);
    internal void add_ChangesSaved(EventHandler`1<SaveChangesEventArgs> value);
    internal void remove_ChangesSaved(EventHandler`1<SaveChangesEventArgs> value);
    public Func`2<string, Uri> get_ResolveEntitySet();
    public void set_ResolveEntitySet(Func`2<string, Uri> value);
    public Uri get_BaseUri();
    public void set_BaseUri(Uri value);
    [CompilerGeneratedAttribute]
public DataServiceResponsePreference get_AddAndUpdateResponsePreference();
    [CompilerGeneratedAttribute]
public void set_AddAndUpdateResponsePreference(DataServiceResponsePreference value);
    public DataServiceProtocolVersion get_MaxProtocolVersion();
    public ICredentials get_Credentials();
    public void set_Credentials(ICredentials value);
    public MergeOption get_MergeOption();
    public void set_MergeOption(MergeOption value);
    public bool get_ApplyingChanges();
    internal void set_ApplyingChanges(bool value);
    public bool get_IgnoreMissingProperties();
    public void set_IgnoreMissingProperties(bool value);
    public string get_DataNamespace();
    public void set_DataNamespace(string value);
    public Func`2<Type, string> get_ResolveName();
    public void set_ResolveName(Func`2<Type, string> value);
    public Func`2<string, Type> get_ResolveType();
    public void set_ResolveType(Func`2<string, Type> value);
    public int get_Timeout();
    public void set_Timeout(int value);
    public Uri get_TypeScheme();
    public void set_TypeScheme(Uri value);
    public bool get_UsePostTunneling();
    public void set_UsePostTunneling(bool value);
    public ReadOnlyCollection`1<LinkDescriptor> get_Links();
    public ReadOnlyCollection`1<EntityDescriptor> get_Entities();
    public SaveChangesOptions get_SaveChangesDefaultOptions();
    public void set_SaveChangesDefaultOptions(SaveChangesOptions value);
    public bool get_IgnoreResourceNotFoundException();
    public void set_IgnoreResourceNotFoundException(bool value);
    [DebuggerStepThroughAttribute]
internal bool get_HasReadingEntityHandlers();
    [DebuggerStepThroughAttribute]
internal bool get_HasWritingEntityHandlers();
    internal EntityTracker get_EntityTracker();
    internal UriResolver get_BaseUriResolver();
    public EntityDescriptor GetEntityDescriptor(object entity);
    public LinkDescriptor GetLinkDescriptor(object source, string sourceProperty, object target);
    public void CancelRequest(IAsyncResult asyncResult);
    public DataServiceQuery`1<T> CreateQuery(string entitySetName);
    public Uri GetMetadataUri();
    public IAsyncResult BeginLoadProperty(object entity, string propertyName, AsyncCallback callback, object state);
    public IAsyncResult BeginLoadProperty(object entity, string propertyName, Uri nextLinkUri, AsyncCallback callback, object state);
    public IAsyncResult BeginLoadProperty(object entity, string propertyName, DataServiceQueryContinuation continuation, AsyncCallback callback, object state);
    public QueryOperationResponse EndLoadProperty(IAsyncResult asyncResult);
    public QueryOperationResponse LoadProperty(object entity, string propertyName);
    public QueryOperationResponse LoadProperty(object entity, string propertyName, Uri nextLinkUri);
    public QueryOperationResponse LoadProperty(object entity, string propertyName, DataServiceQueryContinuation continuation);
    public QueryOperationResponse`1<T> LoadProperty(object entity, string propertyName, DataServiceQueryContinuation`1<T> continuation);
    public Uri GetReadStreamUri(object entity);
    public Uri GetReadStreamUri(object entity, string name);
    public IAsyncResult BeginGetReadStream(object entity, DataServiceRequestArgs args, AsyncCallback callback, object state);
    public IAsyncResult BeginGetReadStream(object entity, string name, DataServiceRequestArgs args, AsyncCallback callback, object state);
    public DataServiceStreamResponse EndGetReadStream(IAsyncResult asyncResult);
    public DataServiceStreamResponse GetReadStream(object entity);
    public DataServiceStreamResponse GetReadStream(object entity, string acceptContentType);
    public DataServiceStreamResponse GetReadStream(object entity, DataServiceRequestArgs args);
    public DataServiceStreamResponse GetReadStream(object entity, string name, DataServiceRequestArgs args);
    public void SetSaveStream(object entity, Stream stream, bool closeStream, string contentType, string slug);
    public void SetSaveStream(object entity, Stream stream, bool closeStream, DataServiceRequestArgs args);
    public void SetSaveStream(object entity, string name, Stream stream, bool closeStream, string contentType);
    public void SetSaveStream(object entity, string name, Stream stream, bool closeStream, DataServiceRequestArgs args);
    public IAsyncResult BeginExecuteBatch(AsyncCallback callback, object state, DataServiceRequest[] queries);
    public DataServiceResponse EndExecuteBatch(IAsyncResult asyncResult);
    public DataServiceResponse ExecuteBatch(DataServiceRequest[] queries);
    public IAsyncResult BeginExecute(Uri requestUri, AsyncCallback callback, object state);
    public IAsyncResult BeginExecute(DataServiceQueryContinuation`1<T> continuation, AsyncCallback callback, object state);
    public IEnumerable`1<TElement> EndExecute(IAsyncResult asyncResult);
    public IEnumerable`1<TElement> Execute(Uri requestUri);
    public QueryOperationResponse`1<T> Execute(DataServiceQueryContinuation`1<T> continuation);
    public IAsyncResult BeginSaveChanges(AsyncCallback callback, object state);
    public IAsyncResult BeginSaveChanges(SaveChangesOptions options, AsyncCallback callback, object state);
    public DataServiceResponse EndSaveChanges(IAsyncResult asyncResult);
    public DataServiceResponse SaveChanges();
    public DataServiceResponse SaveChanges(SaveChangesOptions options);
    public void AddLink(object source, string sourceProperty, object target);
    public void AttachLink(object source, string sourceProperty, object target);
    public bool DetachLink(object source, string sourceProperty, object target);
    public void DeleteLink(object source, string sourceProperty, object target);
    public void SetLink(object source, string sourceProperty, object target);
    public void AddObject(string entitySetName, object entity);
    public void AddRelatedObject(object source, string sourceProperty, object target);
    public void AttachTo(string entitySetName, object entity);
    public void AttachTo(string entitySetName, object entity, string etag);
    public void DeleteObject(object entity);
    public bool Detach(object entity);
    public void UpdateObject(object entity);
    public bool TryGetEntity(Uri identity, TEntity& entity);
    public bool TryGetUri(object entity, Uri& identity);
    internal static Uri AppendKeysToUri(string uri, object entity, UriKind kind, DataServiceProtocolVersion maxProtocolVersion);
    internal static Uri GenerateEditLinkRelativeUri(string entitySetName, object entity, DataServiceProtocolVersion maxProtocolVersion);
    internal Uri GenerateEditLinkUri(string entitySetName, object entity);
    internal void AttachLink(object source, string sourceProperty, object target, MergeOption linkMerge);
    internal HttpWebRequest CreateRequest(Uri requestUri, string method, bool allowAnyType, string contentType, Version requestVersion, bool sendChunked, bool applyPreferences, Action`1<HttpWebRequest> sendingRequestCallback);
    internal Type ResolveTypeFromName(string wireName, Type userType, bool checkAssignable);
    internal string ResolveNameFromType(Type type);
    internal void FireReadingEntityEvent(object entity, XElement data, Uri baseUri);
    internal void FireWritingEntityEvent(object entity, XElement data, Uri baseUri);
    internal void ValidateRequestVersion(Version requestVersion);
    internal void InternalSendRequest(HttpWebRequest request);
    internal Stream InternalGetRequestWrappingStream(Stream requestStream);
    internal void InternalSendResponse(HttpWebResponse response);
    internal Stream InternalGetResponseWrappingStream(Stream responseStream);
    private static void SetHeaderValues(HttpWebRequest request, string method, string contentType, bool usePostTunneling, Action`1<HttpWebRequest> sendingRequestCallback);
    private static void ValidateEntitySetName(String& entitySetName);
    private static void ValidateEntityType(object entity, DataServiceProtocolVersion maxProtocolVersion);
    private static void ValidateEntityTypeHasKeys(object entity, DataServiceProtocolVersion maxProtocolVersion);
    private static void ValidateSaveChangesOptions(SaveChangesOptions options);
    private Uri GetOrCreateAbsoluteUri(Uri requestUri);
    private void ApplyPreferences(HttpWebRequest request, string method, Version& requestVersion);
    private LoadPropertyResult CreateLoadPropertyRequest(object entity, string propertyName, AsyncCallback callback, object state, Uri requestUri, DataServiceQueryContinuation continuation);
    private bool EnsureRelatable(object source, string sourceProperty, object target, EntityStates state);
    private GetReadStreamResult CreateGetReadStreamResult(object entity, DataServiceRequestArgs args, AsyncCallback callback, object state, string name);
    [CompilerGeneratedAttribute]
private static UInt32 <get_Links>b__0(LinkDescriptor l);
    [CompilerGeneratedAttribute]
private static UInt32 <get_Entities>b__2(EntityDescriptor d);
    [CompilerGeneratedAttribute]
private static string <GetOrCreateAbsoluteUri>b__4();
}
public abstract class System.Data.Services.Client.DataServiceQuery : DataServiceRequest {
    public Expression Expression { get; }
    public IQueryProvider Provider { get; }
    public abstract virtual Expression get_Expression();
    public abstract virtual IQueryProvider get_Provider();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public IEnumerable Execute();
    public IAsyncResult BeginExecute(AsyncCallback callback, object state);
    public IEnumerable EndExecute(IAsyncResult asyncResult);
    internal abstract virtual IEnumerable ExecuteInternal();
    internal abstract virtual IAsyncResult BeginExecuteInternal(AsyncCallback callback, object state);
    internal abstract virtual IEnumerable EndExecuteInternal(IAsyncResult asyncResult);
}
public class System.Data.Services.Client.DataServiceQuery`1 : DataServiceQuery {
    private static MethodInfo expandMethodInfo;
    private static MethodInfo expandGenericMethodInfo;
    private Expression queryExpression;
    private DataServiceQueryProvider queryProvider;
    private QueryComponents queryComponents;
    [CompilerGeneratedAttribute]
private static Func`2<MemberInfo, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    public Type ElementType { get; }
    public Expression Expression { get; }
    public IQueryProvider Provider { get; }
    public Uri RequestUri { get; }
    internal ProjectionPlan Plan { get; }
    private DataServiceQuery`1(Expression expression, DataServiceQueryProvider provider);
    private static DataServiceQuery`1();
    public virtual Type get_ElementType();
    public virtual Expression get_Expression();
    public virtual IQueryProvider get_Provider();
    public virtual Uri get_RequestUri();
    internal virtual ProjectionPlan get_Plan();
    public IAsyncResult BeginExecute(AsyncCallback callback, object state);
    public IEnumerable`1<TElement> EndExecute(IAsyncResult asyncResult);
    public IEnumerable`1<TElement> Execute();
    public DataServiceQuery`1<TElement> Expand(string path);
    public DataServiceQuery`1<TElement> Expand(Expression`1<Func`2<TElement, TTarget>> navigationPropertyAccessor);
    public DataServiceQuery`1<TElement> IncludeTotalCount();
    public DataServiceQuery`1<TElement> AddQueryOption(string name, object value);
    public sealed virtual IEnumerator`1<TElement> GetEnumerator();
    public virtual string ToString();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    internal virtual QueryComponents QueryComponents(DataServiceProtocolVersion maxProtocolVersion);
    internal virtual IEnumerable ExecuteInternal();
    internal virtual IAsyncResult BeginExecuteInternal(AsyncCallback callback, object state);
    internal virtual IEnumerable EndExecuteInternal(IAsyncResult asyncResult);
    private QueryComponents Translate();
    [CompilerGeneratedAttribute]
private static bool <.cctor>b__0(MemberInfo m);
}
[DebuggerDisplayAttribute("{NextLinkUri}")]
public abstract class System.Data.Services.Client.DataServiceQueryContinuation : object {
    private Uri nextLinkUri;
    private ProjectionPlan plan;
    public Uri NextLinkUri { get; }
    internal Type ElementType { get; }
    internal ProjectionPlan Plan { get; }
    internal DataServiceQueryContinuation(Uri nextLinkUri, ProjectionPlan plan);
    public Uri get_NextLinkUri();
    internal abstract virtual Type get_ElementType();
    internal ProjectionPlan get_Plan();
    public virtual string ToString();
    internal static DataServiceQueryContinuation Create(Uri nextLinkUri, ProjectionPlan plan);
    internal QueryComponents CreateQueryComponents();
}
public class System.Data.Services.Client.DataServiceQueryContinuation`1 : DataServiceQueryContinuation {
    internal Type ElementType { get; }
    internal DataServiceQueryContinuation`1(Uri nextLinkUri, ProjectionPlan plan);
    internal virtual Type get_ElementType();
}
[DebuggerDisplayAttribute("{Message}")]
public class System.Data.Services.Client.DataServiceQueryException : InvalidOperationException {
    private QueryOperationResponse response;
    public QueryOperationResponse Response { get; }
    public DataServiceQueryException(string message);
    public DataServiceQueryException(string message, Exception innerException);
    public DataServiceQueryException(string message, Exception innerException, QueryOperationResponse response);
    protected DataServiceQueryException(SerializationInfo info, StreamingContext context);
    public QueryOperationResponse get_Response();
}
internal class System.Data.Services.Client.DataServiceQueryProvider : object {
    internal DataServiceContext Context;
    internal DataServiceQueryProvider(DataServiceContext context);
    public sealed virtual IQueryable CreateQuery(Expression expression);
    public sealed virtual IQueryable`1<TElement> CreateQuery(Expression expression);
    public sealed virtual object Execute(Expression expression);
    public sealed virtual TResult Execute(Expression expression);
    internal TElement ReturnSingleton(Expression expression);
    internal QueryComponents Translate(Expression e);
}
public abstract class System.Data.Services.Client.DataServiceRequest : object {
    [CompilerGeneratedAttribute]
private static Action`1<HttpWebRequest> CS$<>9__CachedAnonymousMethodDelegate1;
    public Type ElementType { get; }
    public Uri RequestUri { get; }
    internal ProjectionPlan Plan { get; }
    public abstract virtual Type get_ElementType();
    public abstract virtual Uri get_RequestUri();
    internal abstract virtual ProjectionPlan get_Plan();
    internal static MaterializeAtom Materialize(ResponseInfo responseInfo, QueryComponents queryComponents, ProjectionPlan plan, string contentType, Stream response);
    internal static DataServiceRequest GetInstance(Type elementType, Uri requestUri);
    internal static IEnumerable`1<TElement> EndExecute(object source, DataServiceContext context, IAsyncResult asyncResult);
    internal abstract virtual QueryComponents QueryComponents(DataServiceProtocolVersion maxProtocolVersion);
    internal QueryOperationResponse`1<TElement> Execute(DataServiceContext context, QueryComponents queryComponents);
    internal long GetQuerySetCount(DataServiceContext context);
    internal IAsyncResult BeginExecute(object source, DataServiceContext context, AsyncCallback callback, object state);
    private QueryResult CreateResult(object source, DataServiceContext context, AsyncCallback callback, object state);
    [CompilerGeneratedAttribute]
private static void <GetQuerySetCount>b__0(HttpWebRequest webRequest);
}
public class System.Data.Services.Client.DataServiceRequest`1 : DataServiceRequest {
    private ProjectionPlan plan;
    private Uri requestUri;
    private QueryComponents queryComponents;
    public Type ElementType { get; }
    public Uri RequestUri { get; }
    internal ProjectionPlan Plan { get; }
    public DataServiceRequest`1(Uri requestUri);
    internal DataServiceRequest`1(QueryComponents queryComponents, ProjectionPlan plan);
    public virtual Type get_ElementType();
    public virtual Uri get_RequestUri();
    internal virtual ProjectionPlan get_Plan();
    public virtual string ToString();
    internal virtual QueryComponents QueryComponents(DataServiceProtocolVersion maxProtocolVersion);
}
public class System.Data.Services.Client.DataServiceRequestArgs : object {
    private Dictionary`2<string, string> headers;
    public string AcceptContentType { get; public set; }
    public string ContentType { get; public set; }
    public string Slug { get; public set; }
    public Dictionary`2<string, string> Headers { get; }
    public string get_AcceptContentType();
    public void set_AcceptContentType(string value);
    public string get_ContentType();
    public void set_ContentType(string value);
    public string get_Slug();
    public void set_Slug(string value);
    public Dictionary`2<string, string> get_Headers();
    private string GetHeaderValue(string header);
    private void SetHeaderValue(string header, string value);
}
[DebuggerDisplayAttribute("{Message}")]
public class System.Data.Services.Client.DataServiceRequestException : InvalidOperationException {
    private DataServiceResponse response;
    public DataServiceResponse Response { get; }
    public DataServiceRequestException(string message);
    public DataServiceRequestException(string message, Exception innerException);
    public DataServiceRequestException(string message, Exception innerException, DataServiceResponse response);
    protected DataServiceRequestException(SerializationInfo info, StreamingContext context);
    public DataServiceResponse get_Response();
}
public class System.Data.Services.Client.DataServiceResponse : object {
    private Dictionary`2<string, string> headers;
    private int statusCode;
    private IEnumerable`1<OperationResponse> response;
    private bool batchResponse;
    public IDictionary`2<string, string> BatchHeaders { get; }
    public int BatchStatusCode { get; }
    public bool IsBatchResponse { get; }
    internal DataServiceResponse(Dictionary`2<string, string> headers, int statusCode, IEnumerable`1<OperationResponse> response, bool batchResponse);
    public IDictionary`2<string, string> get_BatchHeaders();
    public int get_BatchStatusCode();
    public bool get_IsBatchResponse();
    public sealed virtual IEnumerator`1<OperationResponse> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public enum System.Data.Services.Client.DataServiceResponsePreference : Enum {
    public int value__;
    public static DataServiceResponsePreference None;
    public static DataServiceResponsePreference IncludeContent;
    public static DataServiceResponsePreference NoContent;
}
internal class System.Data.Services.Client.DataServiceSaveStream : object {
    private Stream stream;
    private bool close;
    private DataServiceRequestArgs args;
    internal Stream Stream { get; }
    internal DataServiceRequestArgs Args { get; }
    internal DataServiceSaveStream(Stream stream, bool close, DataServiceRequestArgs args);
    internal Stream get_Stream();
    internal DataServiceRequestArgs get_Args();
    internal void Close();
}
public class System.Data.Services.Client.DataServiceStreamLink : object {
    private string name;
    private Uri selfLink;
    private Uri editLink;
    private string contentType;
    private string etag;
    private PropertyChangedEventHandler PropertyChanged;
    public string Name { get; }
    public Uri SelfLink { get; internal set; }
    public Uri EditLink { get; internal set; }
    public string ContentType { get; internal set; }
    public string ETag { get; internal set; }
    internal DataServiceStreamLink(string name);
    public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public string get_Name();
    public Uri get_SelfLink();
    internal void set_SelfLink(Uri value);
    public Uri get_EditLink();
    internal void set_EditLink(Uri value);
    public string get_ContentType();
    internal void set_ContentType(string value);
    public string get_ETag();
    internal void set_ETag(string value);
    private void OnPropertyChanged(string propertyName);
}
public class System.Data.Services.Client.DataServiceStreamResponse : object {
    private HttpWebResponse response;
    private Dictionary`2<string, string> headers;
    public string ContentType { get; }
    public string ContentDisposition { get; }
    public Dictionary`2<string, string> Headers { get; }
    public Stream Stream { get; }
    internal DataServiceStreamResponse(HttpWebResponse response);
    public string get_ContentType();
    public string get_ContentDisposition();
    public Dictionary`2<string, string> get_Headers();
    public Stream get_Stream();
    public sealed virtual void Dispose();
    private void CheckDisposed();
}
internal class System.Data.Services.Client.DateTimeOffsetTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class System.Data.Services.Client.DateTimeTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class System.Data.Services.Client.DecimalTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
public abstract class System.Data.Services.Client.Descriptor : object {
    private UInt32 changeOrder;
    private bool saveContentGenerated;
    private EntityStates saveResultProcessed;
    private Exception saveError;
    private EntityStates state;
    public EntityStates State { get; internal set; }
    internal DescriptorKind DescriptorKind { get; }
    internal UInt32 ChangeOrder { get; internal set; }
    internal bool ContentGeneratedForSave { get; internal set; }
    internal EntityStates SaveResultWasProcessed { get; internal set; }
    internal Exception SaveError { get; internal set; }
    internal bool IsModified { get; }
    internal Descriptor(EntityStates state);
    public EntityStates get_State();
    internal void set_State(EntityStates value);
    internal abstract virtual DescriptorKind get_DescriptorKind();
    internal UInt32 get_ChangeOrder();
    internal void set_ChangeOrder(UInt32 value);
    internal bool get_ContentGeneratedForSave();
    internal void set_ContentGeneratedForSave(bool value);
    internal EntityStates get_SaveResultWasProcessed();
    internal void set_SaveResultWasProcessed(EntityStates value);
    internal Exception get_SaveError();
    internal void set_SaveError(Exception value);
    internal virtual bool get_IsModified();
    internal abstract virtual void ClearChanges();
}
internal enum System.Data.Services.Client.DescriptorKind : Enum {
    public int value__;
    public static DescriptorKind Entity;
    public static DescriptorKind Link;
    public static DescriptorKind NamedStream;
}
internal class System.Data.Services.Client.DoubleTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal static class System.Data.Services.Client.DynamicProxyMethodGenerator : object {
    private static Dictionary`2<MethodBase, MethodInfo> dynamicProxyMethods;
    [CompilerGeneratedAttribute]
private static Func`2<ParameterInfo, Type> CS$<>9__CachedAnonymousMethodDelegate1;
    private static DynamicProxyMethodGenerator();
    internal static MethodInfo GetCallWrapper(MethodBase method);
    [SecuritySafeCriticalAttribute]
private static DynamicMethod CreateDynamicMethod(string name, Type returnType, Type[] parameterTypes, Module boundToModule);
    [CompilerGeneratedAttribute]
private static Type <GetCallWrapper>b__0(ParameterInfo p);
}
public class System.Data.Services.Client.EntityChangedParams : object {
    private DataServiceContext context;
    private object entity;
    private string propertyName;
    private object propertyValue;
    private string sourceEntitySet;
    private string targetEntitySet;
    public DataServiceContext Context { get; }
    public object Entity { get; }
    public string PropertyName { get; }
    public object PropertyValue { get; }
    public string SourceEntitySet { get; }
    public string TargetEntitySet { get; }
    internal EntityChangedParams(DataServiceContext context, object entity, string propertyName, object propertyValue, string sourceEntitySet, string targetEntitySet);
    public DataServiceContext get_Context();
    public object get_Entity();
    public string get_PropertyName();
    public object get_PropertyValue();
    public string get_SourceEntitySet();
    public string get_TargetEntitySet();
}
public class System.Data.Services.Client.EntityCollectionChangedParams : object {
    private DataServiceContext context;
    private object sourceEntity;
    private string propertyName;
    private string sourceEntitySet;
    private ICollection collection;
    private object targetEntity;
    private string targetEntitySet;
    private NotifyCollectionChangedAction action;
    public DataServiceContext Context { get; }
    public object SourceEntity { get; }
    public string PropertyName { get; }
    public string SourceEntitySet { get; }
    public object TargetEntity { get; }
    public string TargetEntitySet { get; }
    public ICollection Collection { get; }
    public NotifyCollectionChangedAction Action { get; }
    internal EntityCollectionChangedParams(DataServiceContext context, object sourceEntity, string propertyName, string sourceEntitySet, ICollection collection, object targetEntity, string targetEntitySet, NotifyCollectionChangedAction action);
    public DataServiceContext get_Context();
    public object get_SourceEntity();
    public string get_PropertyName();
    public string get_SourceEntitySet();
    public object get_TargetEntity();
    public string get_TargetEntitySet();
    public ICollection get_Collection();
    public NotifyCollectionChangedAction get_Action();
}
[DebuggerDisplayAttribute("State = {state}, Uri = {editLink}, Element = {entity.GetType().ToString()}")]
public class System.Data.Services.Client.EntityDescriptor : Descriptor {
    internal DataServiceProtocolVersion MaxProtocolVersion;
    private string identity;
    private object entity;
    private string etag;
    private StreamDescriptor defaultStreamDescriptor;
    private EntityDescriptor parentDescriptor;
    private string parentProperty;
    private Uri addToUri;
    private string serverTypeName;
    private Uri selfLink;
    private Uri editLink;
    private Dictionary`2<string, LinkInfo> relatedEntityLinks;
    private EntityDescriptor transientEntityDescriptor;
    private Dictionary`2<string, StreamDescriptor> streamDescriptors;
    public string Identity { get; internal set; }
    public Uri SelfLink { get; internal set; }
    public Uri EditLink { get; internal set; }
    public Uri ReadStreamUri { get; internal set; }
    public Uri EditStreamUri { get; internal set; }
    public object Entity { get; internal set; }
    public string ETag { get; internal set; }
    public string StreamETag { get; internal set; }
    public EntityDescriptor ParentForInsert { get; }
    public string ParentPropertyForInsert { get; }
    public string ServerTypeName { get; internal set; }
    public ReadOnlyCollection`1<LinkInfo> LinkInfos { get; }
    public ReadOnlyCollection`1<StreamDescriptor> StreamDescriptors { get; }
    internal object ParentEntity { get; }
    internal DescriptorKind DescriptorKind { get; }
    internal bool IsDeepInsert { get; }
    internal DataServiceSaveStream SaveStream { get; internal set; }
    internal EntityStates StreamState { get; internal set; }
    internal bool IsMediaLinkEntry { get; }
    internal bool IsModified { get; }
    internal EntityDescriptor TransientEntityDescriptor { get; internal set; }
    internal StreamDescriptor DefaultStreamDescriptor { get; }
    internal EntityDescriptor(DataServiceProtocolVersion maxProtocolVersion);
    internal EntityDescriptor(string identity, Uri selfLink, Uri editLink, Uri addToUri, object entity, EntityDescriptor parentEntity, string parentProperty, string etag, EntityStates state, DataServiceProtocolVersion maxProtocolVersion);
    public string get_Identity();
    internal void set_Identity(string value);
    public Uri get_SelfLink();
    internal void set_SelfLink(Uri value);
    public Uri get_EditLink();
    internal void set_EditLink(Uri value);
    public Uri get_ReadStreamUri();
    internal void set_ReadStreamUri(Uri value);
    public Uri get_EditStreamUri();
    internal void set_EditStreamUri(Uri value);
    public object get_Entity();
    internal void set_Entity(object value);
    public string get_ETag();
    internal void set_ETag(string value);
    public string get_StreamETag();
    internal void set_StreamETag(string value);
    public EntityDescriptor get_ParentForInsert();
    public string get_ParentPropertyForInsert();
    public string get_ServerTypeName();
    internal void set_ServerTypeName(string value);
    public ReadOnlyCollection`1<LinkInfo> get_LinkInfos();
    public ReadOnlyCollection`1<StreamDescriptor> get_StreamDescriptors();
    internal object get_ParentEntity();
    internal virtual DescriptorKind get_DescriptorKind();
    internal bool get_IsDeepInsert();
    internal DataServiceSaveStream get_SaveStream();
    internal void set_SaveStream(DataServiceSaveStream value);
    internal EntityStates get_StreamState();
    internal void set_StreamState(EntityStates value);
    internal bool get_IsMediaLinkEntry();
    internal virtual bool get_IsModified();
    internal EntityDescriptor get_TransientEntityDescriptor();
    internal void set_TransientEntityDescriptor(EntityDescriptor value);
    internal StreamDescriptor get_DefaultStreamDescriptor();
    internal string GetLatestIdentity();
    internal Uri GetLatestEditLink();
    internal Uri GetLatestEditStreamUri();
    internal string GetLatestETag();
    internal string GetLatestStreamETag();
    internal string GetLatestServerTypeName();
    internal Uri GetResourceUri(UriResolver baseUriResolver, bool queryLink);
    internal bool IsRelatedEntity(LinkDescriptor related);
    internal LinkDescriptor GetRelatedEnd(DataServiceProtocolVersion maxProtocolVersion);
    internal virtual void ClearChanges();
    internal void CloseSaveStream();
    internal void AddNavigationLink(string propertyName, Uri navigationUri);
    internal void AddRelationshipLink(string propertyName, Uri relationshipUri);
    internal void MergeLinkInfo(LinkInfo linkInfo);
    internal Uri GetNavigationLink(UriResolver baseUriResolver, ClientProperty property);
    internal bool TryGetLinkInfo(string propertyName, LinkInfo& linkInfo);
    internal StreamDescriptor AddStreamInfoIfNotPresent(string name);
    internal bool TryGetNamedStreamInfo(string name, StreamDescriptor& namedStreamInfo);
    internal void MergeStreamDescriptor(StreamDescriptor materializedStreamDescriptor);
    private LinkInfo GetLinkInfo(string propertyName);
    private Uri GetLink(bool queryLink);
    private StreamDescriptor CreateDefaultStreamDescriptor();
}
[FlagsAttribute]
public enum System.Data.Services.Client.EntityStates : Enum {
    public int value__;
    public static EntityStates Detached;
    public static EntityStates Unchanged;
    public static EntityStates Added;
    public static EntityStates Deleted;
    public static EntityStates Modified;
}
internal class System.Data.Services.Client.EntityTracker : object {
    private DataServiceProtocolVersion maxProtocolVersion;
    private Dictionary`2<object, EntityDescriptor> entityDescriptors;
    private Dictionary`2<string, EntityDescriptor> identityToDescriptor;
    private Dictionary`2<LinkDescriptor, LinkDescriptor> bindings;
    private UInt32 nextChange;
    public IEnumerable`1<LinkDescriptor> Links { get; }
    public IEnumerable`1<EntityDescriptor> Entities { get; }
    public EntityTracker(DataServiceProtocolVersion maxProtocolVersion);
    public IEnumerable`1<LinkDescriptor> get_Links();
    public IEnumerable`1<EntityDescriptor> get_Entities();
    internal EntityDescriptor TryGetEntityDescriptor(object entity);
    internal EntityDescriptor GetEntityDescriptor(object resource);
    internal EntityDescriptor TryGetEntityDescriptor(string identity);
    internal void AddEntityDescriptor(EntityDescriptor descriptor);
    internal bool DetachResource(EntityDescriptor resource);
    internal void DetachResourceIdentity(EntityDescriptor resource);
    internal LinkDescriptor TryGetLinkDescriptor(object source, string sourceProperty, object target);
    internal void AttachLink(object source, string sourceProperty, object target, MergeOption linkMerge);
    internal LinkDescriptor DetachReferenceLink(object source, string sourceProperty, object target, MergeOption linkMerge);
    internal void AddLink(LinkDescriptor linkDescriptor);
    internal bool TryRemoveLinkDescriptor(LinkDescriptor linkDescriptor);
    internal IEnumerable`1<LinkDescriptor> GetLinks(object source, string sourceProperty);
    internal void DetachExistingLink(LinkDescriptor existingLink, bool targetDelete);
    internal void AttachIdentity(EntityDescriptor entityDescriptorFromMaterializer, MergeOption metadataMergeOption);
    internal void AttachLocation(object entity, string identity, Uri editLink);
    internal EntityDescriptor InternalAttachEntityDescriptor(EntityDescriptor entityDescriptorFromMaterializer, bool failIfDuplicated);
    internal object TryGetEntity(string resourceUri, EntityStates& state);
    internal void IncrementChange(Descriptor descriptor);
    private void EnsureIdentityToResource();
    private void ValidateDuplicateIdentity(string identity, EntityDescriptor descriptor);
}
internal class System.Data.Services.Client.EpmSyndicationContentSerializer : EpmContentSerializerBase {
    private bool authorInfoPresent;
    private bool updatedPresent;
    private bool authorNamePresent;
    private bool titlePresent;
    private bool contributorNamePresent;
    private bool inMultiValue;
    private EpmTargetTree targetTree;
    internal EpmSyndicationContentSerializer(EpmTargetTree tree, XmlWriter target, bool enableNullExtensionAttributes);
    public sealed virtual void Dispose();
    protected virtual void Serialize(object resource, object target, EpmTargetPathSegment targetSegment, EpmSerializationKind kind);
    private static string GetTextPropertyValue(object propertyValue);
    private void WriteMultiValue(object resource, EpmTargetPathSegment targetSegment);
    private bool ShouldWriteContributor(object resource, EpmTargetPathSegment targetSegment);
    private void WriteSyndicationElement(SyndicationItemProperty targetSyndicationElement, SyndicationTextContentKind targetElementContentType, object propertyValue);
    private void WriteConditionalElementAttribute(EpmTargetPathSegment targetSegment, object propertyValue);
    private void WritePersonConstructChildElement(string elementLocalName, object propertyValue, bool canHaveEmptyValue, SyndicationItemProperty propertyToSet);
    private void WriteSyndicationDateConstruct(string elementLocalName, object propertyValue, SyndicationItemProperty propertyToSet);
    private void WriteSyndicationTextConstruct(string elementLocalName, object propertyValue, SyndicationTextContentKind elementContentType);
    private void WriteSyndicationElement(string elementLocalName, string textPropertyValue, Nullable`1<SyndicationTextContentKind> elementContentType);
    private void WriteSyndicationElementWithNullAttribute(string elementLocalName);
    private void WriteElementContentType(string contentType);
    private void CreateImplicitAuthor(bool createNull);
    private void FinishAuthor();
    private void FinishContributor();
    private void CreateUpdated();
    private void CreateTitle();
}
internal static class System.Data.Services.Client.Error : object {
    internal static ArgumentException Argument(string message, string parameterName);
    internal static InvalidOperationException InvalidOperation(string message);
    internal static InvalidOperationException InvalidOperation(string message, Exception innerException);
    internal static NotSupportedException NotSupported(string message);
    internal static void ThrowObjectDisposed(Type type);
    internal static InvalidOperationException HttpHeaderFailure(int errorCode, string message);
    internal static InvalidOperationException BatchStreamMissingBoundary();
    internal static InvalidOperationException BatchStreamContentExpected(BatchStreamState state);
    internal static InvalidOperationException BatchStreamContentUnexpected(BatchStreamState state);
    internal static InvalidOperationException BatchStreamGetMethodNotSupportInChangeset();
    internal static InvalidOperationException BatchStreamInvalidBatchFormat();
    internal static InvalidOperationException BatchStreamInvalidDelimiter(string delimiter);
    internal static InvalidOperationException BatchStreamMissingEndChangesetDelimiter();
    internal static InvalidOperationException BatchStreamInvalidHeaderValueSpecified(string headerValue);
    internal static InvalidOperationException BatchStreamInvalidContentLengthSpecified(string contentLength);
    internal static InvalidOperationException BatchStreamOnlyGETOperationsCanBeSpecifiedInBatch();
    internal static InvalidOperationException BatchStreamInvalidOperationHeaderSpecified();
    internal static InvalidOperationException BatchStreamInvalidHttpMethodName(string methodName);
    internal static InvalidOperationException BatchStreamMoreDataAfterEndOfBatch();
    internal static InvalidOperationException BatchStreamInternalBufferRequestTooSmall();
    internal static NotSupportedException MethodNotSupported(MethodCallExpression m);
    internal static void ThrowBatchUnexpectedContent(InternalError value);
    internal static void ThrowBatchExpectedResponse(InternalError value);
    internal static InvalidOperationException BatchStreamInvalidMethodHeaderSpecified(string header);
    internal static InvalidOperationException BatchStreamInvalidHttpVersionSpecified(string actualVersion, string expectedVersion);
    internal static InvalidOperationException BatchStreamInvalidNumberOfHeadersAtOperationStart(string header1, string header2);
    internal static InvalidOperationException BatchStreamMissingOrInvalidContentEncodingHeader(string headerName, string headerValue);
    internal static InvalidOperationException BatchStreamInvalidNumberOfHeadersAtChangeSetStart(string header1, string header2);
    internal static InvalidOperationException BatchStreamMissingContentTypeHeader(string headerName);
    internal static InvalidOperationException BatchStreamInvalidContentTypeSpecified(string headerName, string headerValue, string mime1, string mime2);
    internal static InvalidOperationException InternalError(InternalError value);
    internal static void ThrowInternalError(InternalError value);
    private static T Trace(T exception);
    internal static Exception ArgumentNull(string paramName);
    internal static Exception ArgumentOutOfRange(string paramName);
    internal static Exception NotImplemented();
    internal static Exception NotSupported();
}
internal static class System.Data.Services.Client.Evaluator : object {
    internal static Expression PartialEval(Expression expression, Func`2<Expression, bool> canBeEvaluated);
    internal static Expression PartialEval(Expression expression);
    private static bool CanBeEvaluatedLocally(Expression expression);
}
internal class System.Data.Services.Client.ExpressionNormalizer : DataServiceALinqExpressionVisitor {
    private static bool LiftToNull;
    private Dictionary`2<Expression, Pattern> _patterns;
    private DataServiceProtocolVersion maxProtocolVersion;
    private Dictionary`2<Expression, Expression> normalizerRewrites;
    private static MethodInfo s_relationalOperatorPlaceholderMethod;
    internal Dictionary`2<Expression, Expression> NormalizerRewrites { get; }
    private ExpressionNormalizer(Dictionary`2<Expression, Expression> normalizerRewrites, DataServiceProtocolVersion maxProtocolVersion);
    private static ExpressionNormalizer();
    internal Dictionary`2<Expression, Expression> get_NormalizerRewrites();
    internal static Expression Normalize(Expression expression, Dictionary`2<Expression, Expression> rewrites, DataServiceProtocolVersion maxProtocolVersion);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitUnary(UnaryExpression u);
    private static Expression UnwrapObjectConvert(Expression input);
    private static bool IsConstantZero(Expression expression);
    internal virtual Expression VisitMethodCall(MethodCallExpression call);
    internal Expression VisitMethodCallNoRewrite(MethodCallExpression call);
    private static MethodCallExpression NormalizeEnumerableSource(MethodCallExpression callExpression);
    private static MethodCallExpression NormalizePredicateArgument(MethodCallExpression callExpression);
    private static bool HasPredicateArgument(MethodCallExpression callExpression, Int32& argumentOrdinal);
    private static bool TryMatchCoalescePattern(Expression expression, Expression& normalized);
    private static MethodCallExpression NormalizeSelectWithTypeCast(MethodCallExpression callExpression);
    private static bool TryMatchSelectWithConvert(MethodCallExpression callExpression, Type& convertType);
    private static bool TryMatchConvertSingleArgument(Expression expression, Type& convertType);
    private static bool RelationalOperatorPlaceholder(TLeft left, TRight right);
    private static BinaryExpression CreateRelationalOperator(ExpressionType op, Expression left, Expression right);
    private static bool TryCreateRelationalOperator(ExpressionType op, Expression left, Expression right, BinaryExpression& result);
    private Expression CreateCompareExpression(Expression left, Expression right);
    private void RecordRewrite(Expression source, Expression rewritten);
}
internal class System.Data.Services.Client.ExpressionWriter : DataServiceALinqExpressionVisitor {
    private StringBuilder builder;
    private DataServiceContext context;
    private Stack`1<Expression> expressionStack;
    private bool cantTranslateExpression;
    private Expression parent;
    private Version uriVersion;
    private int scopeCount;
    private bool InSubScope { get; }
    private ExpressionWriter(DataServiceContext context);
    private bool get_InSubScope();
    internal static string ExpressionToString(DataServiceContext context, Expression e, Version& uriVersion);
    internal virtual Expression Visit(Expression exp);
    internal virtual Expression VisitConditional(ConditionalExpression c);
    internal virtual Expression VisitLambda(LambdaExpression lambda);
    internal virtual NewExpression VisitNew(NewExpression nex);
    internal virtual Expression VisitMemberInit(MemberInitExpression init);
    internal virtual Expression VisitListInit(ListInitExpression init);
    internal virtual Expression VisitNewArray(NewArrayExpression na);
    internal virtual Expression VisitInvocation(InvocationExpression iv);
    internal virtual Expression VisitInputReferenceExpression(InputReferenceExpression ire);
    internal virtual Expression VisitMethodCall(MethodCallExpression m);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitConstant(ConstantExpression c);
    internal virtual Expression VisitUnary(UnaryExpression u);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitTypeIs(TypeBinaryExpression b);
    internal virtual Expression VisitParameter(ParameterExpression p);
    private static bool AreExpressionTypesCollapsible(ExpressionType type, ExpressionType parentType, ChildDirection childDirection);
    private static int BinaryPrecedence(ExpressionType type);
    private void VisitOperand(Expression e);
    private void VisitOperand(Expression e, Nullable`1<ExpressionType> parentType, Nullable`1<ChildDirection> childDirection);
    private string Translate(Expression e);
    private bool IsImplicitInputReference(Expression exp);
}
internal class System.Data.Services.Client.FilterQueryOptionExpression : QueryOptionExpression {
    private Expression predicate;
    public ExpressionType NodeType { get; }
    internal Expression Predicate { get; }
    internal FilterQueryOptionExpression(Type type, Expression predicate);
    public virtual ExpressionType get_NodeType();
    internal Expression get_Predicate();
}
internal class System.Data.Services.Client.GeographyTypeConverter : PrimitiveTypeConverter {
    internal virtual PrimitiveParserToken TokenizeFromXml(XmlReader reader);
    internal virtual bool WriteAtomXml(object instance, XmlWriter writer);
}
internal class System.Data.Services.Client.GetReadStreamResult : BaseAsyncResult {
    private HttpWebRequest request;
    private StreamDescriptor streamDescriptor;
    private HttpWebResponse response;
    internal GetReadStreamResult(DataServiceContext context, string method, HttpWebRequest request, AsyncCallback callback, object state, StreamDescriptor streamDescriptor);
    internal void Begin();
    internal DataServiceStreamResponse End();
    internal DataServiceStreamResponse Execute();
    protected virtual void CompletedRequest();
    private static void AsyncEndGetResponse(IAsyncResult asyncResult);
    private void SetHttpWebResponse(HttpWebResponse webResponse);
    [CompilerGeneratedAttribute]
private Stream <CompletedRequest>b__0();
}
internal class System.Data.Services.Client.GuidTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal static class System.Data.Services.Client.HttpProcessUtility : object {
    internal static UTF8Encoding EncodingUtf8NoPreamble;
    internal static Encoding FallbackEncoding { get; }
    private static Encoding MissingEncoding { get; }
    private static HttpProcessUtility();
    internal static Encoding get_FallbackEncoding();
    private static Encoding get_MissingEncoding();
    internal static KeyValuePair`2[] ReadContentType(string contentType, String& mime, Encoding& encoding);
    internal static bool TryReadVersion(string text, KeyValuePair`2& result);
    private static Encoding EncodingFromName(string name);
    private static void ReadMediaTypeAndSubtype(string text, Int32& textIndex, String& type, String& subType);
    private static MediaType ReadMediaType(string text);
    private static bool ReadToken(string text, Int32& textIndex);
    private static bool SkipWhitespace(string text, Int32& textIndex);
    private static void ReadMediaTypeParameter(string text, Int32& textIndex, KeyValuePair`2[]& parameters);
    private static string ReadQuotedParameterValue(string parameterName, string headerText, Int32& textIndex);
    private static bool IsHttpSeparator(char c);
    private static bool IsHttpToken(char c);
}
internal class System.Data.Services.Client.InputBinder : DataServiceALinqExpressionVisitor {
    private HashSet`1<ResourceExpression> referencedInputs;
    private ResourceExpression input;
    private ResourceSetExpression inputSet;
    private ParameterExpression inputParameter;
    private InputBinder(ResourceExpression resource, ParameterExpression setReferenceParam);
    internal static Expression Bind(Expression e, ResourceExpression currentInput, ParameterExpression inputParameter, List`1<ResourceExpression> referencedInputs);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitParameter(ParameterExpression p);
    private Expression CreateReference(ResourceExpression resource);
}
[DebuggerDisplayAttribute("InputReferenceExpression -> {Type}")]
internal class System.Data.Services.Client.InputReferenceExpression : Expression {
    private ResourceExpression target;
    public Type Type { get; }
    public ExpressionType NodeType { get; }
    internal ResourceExpression Target { get; }
    internal InputReferenceExpression(ResourceExpression target);
    public virtual Type get_Type();
    public virtual ExpressionType get_NodeType();
    internal ResourceExpression get_Target();
    internal void OverrideTarget(ResourceSetExpression newTarget);
}
internal class System.Data.Services.Client.InstancePrimitiveParserToken`1 : PrimitiveParserToken {
    [CompilerGeneratedAttribute]
private T <Instance>k__BackingField;
    internal T Instance { get; private set; }
    internal InstancePrimitiveParserToken`1(T instance);
    [CompilerGeneratedAttribute]
internal T get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(T value);
    internal virtual object Materialize(Type clrType);
}
internal class System.Data.Services.Client.Int16TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class System.Data.Services.Client.Int32TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class System.Data.Services.Client.Int64TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal enum System.Data.Services.Client.InternalError : Enum {
    public int value__;
    public static InternalError UnexpectedXmlNodeTypeWhenReading;
    public static InternalError UnexpectedXmlNodeTypeWhenSkipping;
    public static InternalError UnexpectedEndWhenSkipping;
    public static InternalError UnexpectedReadState;
    public static InternalError UnexpectedRequestBufferSizeTooSmall;
    public static InternalError UnvalidatedEntityState;
    public static InternalError NullResponseStream;
    public static InternalError EntityNotDeleted;
    public static InternalError EntityNotAddedState;
    public static InternalError LinkNotAddedState;
    public static InternalError EntryNotModified;
    public static InternalError LinkBadState;
    public static InternalError UnexpectedBeginChangeSet;
    public static InternalError UnexpectedBatchState;
    public static InternalError ChangeResponseMissingContentID;
    public static InternalError ChangeResponseUnknownContentID;
    public static InternalError TooManyBatchResponse;
    public static InternalError InvalidHandleOperationResponse;
    public static InternalError InvalidEndGetRequestStream;
    public static InternalError InvalidEndGetRequestCompleted;
    public static InternalError InvalidEndGetRequestStreamRequest;
    public static InternalError InvalidEndGetRequestStreamStream;
    public static InternalError InvalidEndGetRequestStreamContent;
    public static InternalError InvalidEndGetRequestStreamContentLength;
    public static InternalError InvalidEndWrite;
    public static InternalError InvalidEndWriteCompleted;
    public static InternalError InvalidEndWriteRequest;
    public static InternalError InvalidEndWriteStream;
    public static InternalError InvalidEndGetResponse;
    public static InternalError InvalidEndGetResponseCompleted;
    public static InternalError InvalidEndGetResponseRequest;
    public static InternalError InvalidEndGetResponseResponse;
    public static InternalError InvalidAsyncResponseStreamCopy;
    public static InternalError InvalidAsyncResponseStreamCopyBuffer;
    public static InternalError InvalidEndRead;
    public static InternalError InvalidEndReadCompleted;
    public static InternalError InvalidEndReadStream;
    public static InternalError InvalidEndReadCopy;
    public static InternalError InvalidEndReadBuffer;
    public static InternalError InvalidSaveNextChange;
    public static InternalError InvalidBeginNextChange;
    public static InternalError SaveNextChangeIncomplete;
    public static InternalError MaterializerReturningMoreThanOneEntity;
    public static InternalError InvalidGetRequestStream;
    public static InternalError InvalidGetResponse;
}
[DebuggerDisplayAttribute("State = {state}")]
public class System.Data.Services.Client.LinkDescriptor : Descriptor {
    internal static IEqualityComparer`1<LinkDescriptor> EquivalenceComparer;
    private object source;
    private string sourceProperty;
    private object target;
    [CompilerGeneratedAttribute]
private bool <IsSourcePropertyCollection>k__BackingField;
    public object Target { get; }
    public object Source { get; }
    public string SourceProperty { get; }
    internal DescriptorKind DescriptorKind { get; }
    internal bool IsSourcePropertyCollection { get; private set; }
    internal LinkDescriptor(object source, string sourceProperty, object target, DataServiceProtocolVersion maxProtocolVersion);
    internal LinkDescriptor(object source, string sourceProperty, object target, EntityStates state);
    private static LinkDescriptor();
    public object get_Target();
    public object get_Source();
    public string get_SourceProperty();
    internal virtual DescriptorKind get_DescriptorKind();
    [CompilerGeneratedAttribute]
internal bool get_IsSourcePropertyCollection();
    [CompilerGeneratedAttribute]
private void set_IsSourcePropertyCollection(bool value);
    internal virtual void ClearChanges();
    internal bool IsEquivalent(object src, string srcPropName, object targ);
}
public class System.Data.Services.Client.LinkInfo : object {
    private Uri navigationLink;
    private Uri relationshipLink;
    private string name;
    public string Name { get; }
    public Uri NavigationLink { get; internal set; }
    public Uri RelationshipLink { get; internal set; }
    internal LinkInfo(string propertyName);
    public string get_Name();
    public Uri get_NavigationLink();
    internal void set_NavigationLink(Uri value);
    public Uri get_RelationshipLink();
    internal void set_RelationshipLink(Uri value);
}
internal class System.Data.Services.Client.LoadPropertyResult : QueryResult {
    private object entity;
    private ProjectionPlan plan;
    private string propertyName;
    internal LoadPropertyResult(object entity, string propertyName, DataServiceContext context, HttpWebRequest request, AsyncCallback callback, object state, DataServiceRequest dataServiceRequest, ProjectionPlan plan);
    internal QueryOperationResponse LoadProperty();
    private static Byte[] ReadByteArrayWithContentLength(Stream responseStream, int totalLength);
    private static Byte[] ReadByteArrayChunked(Stream responseStream);
    private MaterializeAtom ReadPropertyFromAtom(EntityDescriptor box, ClientProperty property);
    private object GetCollectionInstance(ClientProperty property, Boolean& instanceCreated);
    private MaterializeAtom ReadPropertyFromRawData(ClientProperty property);
}
internal class System.Data.Services.Client.MaterializeAtom : object {
    internal MergeOption MergeOptionValue;
    private ResponseInfo responseInfo;
    private Type elementType;
    private bool expectingPrimitiveValue;
    private AtomMaterializer materializer;
    private AtomParser parser;
    private object current;
    private bool calledGetEnumerator;
    private bool moved;
    private TextWriter writer;
    public object Current { get; }
    internal static MaterializeAtom EmptyResults { get; }
    internal bool IsCountable { get; }
    internal ResponseInfo ResponseInfo { get; }
    internal MaterializeAtom(ResponseInfo responseInfo, XmlReader reader, QueryComponents queryComponents, ProjectionPlan plan);
    internal MaterializeAtom(ResponseInfo responseInfo, IEnumerable`1<AtomEntry> entries, Type elementType);
    private MaterializeAtom(ResponseInfo responseInfo, XmlReader reader, Type type);
    private void MaterializedObjectCallback(AtomTag tag, object entity);
    public sealed virtual object get_Current();
    internal static MaterializeAtom get_EmptyResults();
    internal bool get_IsCountable();
    internal ResponseInfo get_ResponseInfo();
    public sealed virtual void Dispose();
    public virtual IEnumerator GetEnumerator();
    private static Type GetTypeForMaterializer(bool expectingPrimitiveValue, Type elementType, DataServiceProtocolVersion maxProtocolVersion, Type& implementationType);
    public sealed virtual bool MoveNext();
    private bool MoveNextInternal();
    private sealed virtual override void System.Collections.IEnumerator.Reset();
    internal static MaterializeAtom CreateWrapper(IEnumerable results);
    internal static MaterializeAtom CreateWrapper(IEnumerable results, DataServiceQueryContinuation continuation);
    internal void SetInsertingObject(object addedObject);
    internal long CountValue();
    internal virtual DataServiceQueryContinuation GetContinuation(IEnumerable key);
    private void CheckGetEnumerator();
    internal static ClientType GetEntryClientType(string typeName, ResponseInfo responseInfo, Type expectedType, bool checkAssignable);
    internal static string ReadElementString(XmlReader reader, bool checkNullAttribute);
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.Client.MediaEntryAttribute : Attribute {
    private string mediaMemberName;
    public string MediaMemberName { get; }
    public MediaEntryAttribute(string mediaMemberName);
    public string get_MediaMemberName();
}
internal class System.Data.Services.Client.MemberAssignmentAnalysis : ALinqExpressionVisitor {
    internal static Expression[] EmptyExpressionArray;
    private Expression entity;
    private Exception incompatibleAssignmentsException;
    private bool multiplePathsFound;
    private List`1<Expression> pathFromEntity;
    internal Exception IncompatibleAssignmentsException { get; }
    internal bool MultiplePathsFound { get; }
    private MemberAssignmentAnalysis(Expression entity);
    private static MemberAssignmentAnalysis();
    internal Exception get_IncompatibleAssignmentsException();
    internal bool get_MultiplePathsFound();
    internal static MemberAssignmentAnalysis Analyze(Expression entityInScope, Expression assignmentExpression);
    internal Exception CheckCompatibleAssignments(Type targetType, MemberAssignmentAnalysis& previous);
    internal virtual Expression Visit(Expression expression);
    internal virtual Expression VisitConditional(ConditionalExpression c);
    internal virtual Expression VisitParameter(ParameterExpression p);
    internal virtual Expression VisitMemberInit(MemberInitExpression init);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitMethodCall(MethodCallExpression call);
    internal Expression[] GetExpressionsBeyondTargetEntity();
    internal Expression[] GetExpressionsToTargetEntity();
    internal Expression[] GetExpressionsToTargetEntity(bool ignoreLastExpression);
    private static Exception CheckCompatibleAssignments(Type targetType, Expression[] previous, Expression[] candidate);
    private static Exception CheckCompatibleAssignmentsFail(Type targetType, Expression[] previous, Expression[] candidate);
}
public enum System.Data.Services.Client.MergeOption : Enum {
    public int value__;
    public static MergeOption AppendOnly;
    public static MergeOption OverwriteChanges;
    public static MergeOption PreserveChanges;
    public static MergeOption NoTracking;
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.Client.MimeTypePropertyAttribute : Attribute {
    private string dataPropertyName;
    private string mimeTypePropertyName;
    public string DataPropertyName { get; }
    public string MimeTypePropertyName { get; }
    public MimeTypePropertyAttribute(string dataPropertyName, string mimeTypePropertyName);
    public string get_DataPropertyName();
    public string get_MimeTypePropertyName();
}
internal class System.Data.Services.Client.NavigationPropertySingletonExpression : ResourceExpression {
    private Expression memberExpression;
    private Type resourceType;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<ConstantExpression, ConstantExpression>, ConstantExpression> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<ConstantExpression, ConstantExpression>, ConstantExpression> CS$<>9__CachedAnonymousMethodDelegate3;
    public ExpressionType NodeType { get; }
    internal MemberExpression MemberExpression { get; }
    internal Type ResourceType { get; }
    internal bool IsSingleton { get; }
    internal bool HasQueryOptions { get; }
    internal NavigationPropertySingletonExpression(Type type, Expression source, Expression memberExpression, Type resourceType, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion);
    public virtual ExpressionType get_NodeType();
    internal MemberExpression get_MemberExpression();
    internal virtual Type get_ResourceType();
    internal virtual bool get_IsSingleton();
    internal virtual bool get_HasQueryOptions();
    internal virtual ResourceExpression CreateCloneWithNewType(Type type);
    [CompilerGeneratedAttribute]
private static ConstantExpression <CreateCloneWithNewType>b__0(KeyValuePair`2<ConstantExpression, ConstantExpression> kvp);
    [CompilerGeneratedAttribute]
private static ConstantExpression <CreateCloneWithNewType>b__1(KeyValuePair`2<ConstantExpression, ConstantExpression> kvp);
}
public abstract class System.Data.Services.Client.OperationResponse : object {
    private Dictionary`2<string, string> headers;
    private int statusCode;
    private Exception innerException;
    public IDictionary`2<string, string> Headers { get; }
    public int StatusCode { get; internal set; }
    public Exception Error { get; public set; }
    internal OperationResponse(Dictionary`2<string, string> headers);
    public IDictionary`2<string, string> get_Headers();
    public int get_StatusCode();
    internal void set_StatusCode(int value);
    public Exception get_Error();
    public void set_Error(Exception value);
}
internal class System.Data.Services.Client.OrderByQueryOptionExpression : QueryOptionExpression {
    private List`1<Selector> selectors;
    public ExpressionType NodeType { get; }
    internal List`1<Selector> Selectors { get; }
    internal OrderByQueryOptionExpression(Type type, List`1<Selector> selectors);
    public virtual ExpressionType get_NodeType();
    internal List`1<Selector> get_Selectors();
}
internal static class System.Data.Services.Client.Parsing.WebConvert : object {
    private static string HexValues;
    private static string XmlHexEncodePrefix;
    internal static string ConvertByteArrayToKeyString(Byte[] byteArray);
    internal static bool IsKeyTypeQuoted(Type type);
    internal static bool TryKeyPrimitiveToString(object value, String& result);
    internal static bool TryXmlPrimitiveToString(object value, String& result);
    private static string AppendDecimalMarkerToDouble(string input);
}
internal class System.Data.Services.Client.PathBox : object {
    private static char EntireEntityMarker;
    private List`1<StringBuilder> projectionPaths;
    private List`1<StringBuilder> expandPaths;
    private Stack`1<ParameterExpression> parameterExpressions;
    private Dictionary`2<ParameterExpression, string> basePaths;
    private Version uriVersion;
    [CompilerGeneratedAttribute]
private static Func`2<StringBuilder, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`2<StringBuilder, string> CS$<>9__CachedAnonymousMethodDelegate3;
    [CompilerGeneratedAttribute]
private static Func`2<StringBuilder, bool> CS$<>9__CachedAnonymousMethodDelegate6;
    [CompilerGeneratedAttribute]
private static Func`2<StringBuilder, string> CS$<>9__CachedAnonymousMethodDelegate7;
    internal IEnumerable`1<string> ProjectionPaths { get; }
    internal IEnumerable`1<string> ExpandPaths { get; }
    internal Version UriVersion { get; }
    internal ParameterExpression ParamExpressionInScope { get; }
    internal IEnumerable`1<string> get_ProjectionPaths();
    internal IEnumerable`1<string> get_ExpandPaths();
    internal Version get_UriVersion();
    internal void PushParamExpression(ParameterExpression pe);
    internal void PopParamExpression();
    internal ParameterExpression get_ParamExpressionInScope();
    internal void StartNewPath();
    internal void AppendPropertyToPath(PropertyInfo pi, Type convertedSourceType, DataServiceContext context);
    private StringBuilder AppendToProjectionPath(string name, bool replaceEntityMarkerIfPresent);
    private void AppendToExpandPath(string name);
    private static bool RemoveEntireEntityMarkerIfPresent(StringBuilder sb);
    private static void AddEntireEntityMarker(StringBuilder sb);
    [CompilerGeneratedAttribute]
private static bool <get_ProjectionPaths>b__0(StringBuilder s);
    [CompilerGeneratedAttribute]
private static string <get_ProjectionPaths>b__1(StringBuilder s);
    [CompilerGeneratedAttribute]
private static bool <get_ExpandPaths>b__4(StringBuilder s);
    [CompilerGeneratedAttribute]
private static string <get_ExpandPaths>b__5(StringBuilder s);
}
internal abstract class System.Data.Services.Client.PrimitiveParserToken : object {
    internal abstract virtual object Materialize(Type clrType);
}
internal class System.Data.Services.Client.PrimitiveType : object {
    private static bool binaryTypeLoaded;
    private static bool geographyTypeRegistered;
    private static Dictionary`2<Type, PrimitiveType> clrMapping;
    private static Dictionary`2<string, PrimitiveType> edmMapping;
    [CompilerGeneratedAttribute]
private Type <ClrType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EdmTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private PrimitiveTypeConverter <TypeConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasReverseMapping>k__BackingField;
    internal Type ClrType { get; private set; }
    internal string EdmTypeName { get; private set; }
    internal PrimitiveTypeConverter TypeConverter { get; private set; }
    internal bool HasReverseMapping { get; private set; }
    private static PrimitiveType();
    private PrimitiveType(Type clrType, string edmTypeName, PrimitiveTypeConverter typeConverter, bool hasReverseMapping);
    [CompilerGeneratedAttribute]
internal Type get_ClrType();
    [CompilerGeneratedAttribute]
private void set_ClrType(Type value);
    [CompilerGeneratedAttribute]
internal string get_EdmTypeName();
    [CompilerGeneratedAttribute]
private void set_EdmTypeName(string value);
    [CompilerGeneratedAttribute]
internal PrimitiveTypeConverter get_TypeConverter();
    [CompilerGeneratedAttribute]
private void set_TypeConverter(PrimitiveTypeConverter value);
    [CompilerGeneratedAttribute]
internal bool get_HasReverseMapping();
    [CompilerGeneratedAttribute]
private void set_HasReverseMapping(bool value);
    internal static bool TryGetPrimitiveType(Type clrType, PrimitiveType& ptype);
    internal static bool TryGetPrimitiveType(string edmTypeName, PrimitiveType& ptype);
    internal static bool IsKnownType(Type type);
    internal static bool IsKnownNullableType(Type type);
    internal static void RegisterKnownType(Type clrType, string edmTypeName, PrimitiveTypeConverter converter, bool twoWay);
    internal static void DeleteKnownType(Type clrType, string edmTypeName);
    private static void InitializeTypes();
    private static void EnsureBinaryType(Type type);
    private static void EnsureGeographyTypeRegistered(Type type);
    private static void EnsureGeographyTypeRegistered(string edmTypeName);
    private static void RegisterGeographyType();
}
internal class System.Data.Services.Client.PrimitiveTypeConverter : object {
    internal virtual PrimitiveParserToken TokenizeFromXml(XmlReader reader);
    internal virtual PrimitiveParserToken TokenizeFromText(string text);
    internal virtual object Parse(string text);
    internal virtual bool WriteAtomXml(object instance, XmlWriter writer);
    internal virtual string ToString(object instance);
}
internal static class System.Data.Services.Client.ProjectionAnalyzer : object {
    internal static bool Analyze(LambdaExpression le, ResourceExpression re, bool matchMembers, DataServiceContext context);
    private static void Analyze(LambdaExpression e, PathBox pb, DataServiceContext context);
    internal static bool IsMethodCallAllowedEntitySequence(MethodCallExpression call);
    internal static void CheckChainedSequence(MethodCallExpression call, Type type);
    internal static bool IsCollectionProducingExpression(Expression e);
    internal static bool IsDisallowedExpressionForMethodCall(Expression e, DataServiceProtocolVersion maxProtocolVersion);
    private static void Analyze(MemberInitExpression mie, PathBox pb, DataServiceContext context);
    private static void AnalyzeResourceExpression(LambdaExpression lambda, ResourceExpression resource, DataServiceContext context);
    private static Expression SkipConverts(Expression expression);
}
[DebuggerDisplayAttribute("{ToString()}")]
internal class System.Data.Services.Client.ProjectionPath : List`1<ProjectionPathSegment> {
    [CompilerGeneratedAttribute]
private ParameterExpression <Root>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <RootEntry>k__BackingField;
    [CompilerGeneratedAttribute]
private Expression <ExpectedRootType>k__BackingField;
    internal ParameterExpression Root { get; private set; }
    internal Expression RootEntry { get; private set; }
    internal Expression ExpectedRootType { get; private set; }
    internal ProjectionPath(ParameterExpression root, Expression expectedRootType, Expression rootEntry);
    internal ProjectionPath(ParameterExpression root, Expression expectedRootType, Expression rootEntry, IEnumerable`1<Expression> members);
    [CompilerGeneratedAttribute]
internal ParameterExpression get_Root();
    [CompilerGeneratedAttribute]
private void set_Root(ParameterExpression value);
    [CompilerGeneratedAttribute]
internal Expression get_RootEntry();
    [CompilerGeneratedAttribute]
private void set_RootEntry(Expression value);
    [CompilerGeneratedAttribute]
internal Expression get_ExpectedRootType();
    [CompilerGeneratedAttribute]
private void set_ExpectedRootType(Expression value);
    public virtual string ToString();
}
internal class System.Data.Services.Client.ProjectionPathBuilder : object {
    private Stack`1<bool> entityInScope;
    private List`1<MemberInitRewrite> rewrites;
    private Stack`1<ParameterExpression> parameterExpressions;
    private Stack`1<Expression> parameterExpressionTypes;
    private Stack`1<Expression> parameterEntries;
    private Stack`1<Type> parameterProjectionTypes;
    private DataServiceProtocolVersion maxProtocolVersion;
    internal bool CurrentIsEntity { get; }
    internal Expression ExpectedParamTypeInScope { get; }
    internal bool HasRewrites { get; }
    internal Expression LambdaParameterInScope { get; }
    internal Expression ParameterEntryInScope { get; }
    internal DataServiceProtocolVersion MaxProtocolVersion { get; }
    internal ProjectionPathBuilder(DataServiceProtocolVersion maxProtocolVersion);
    internal bool get_CurrentIsEntity();
    internal Expression get_ExpectedParamTypeInScope();
    internal bool get_HasRewrites();
    internal Expression get_LambdaParameterInScope();
    internal Expression get_ParameterEntryInScope();
    internal DataServiceProtocolVersion get_MaxProtocolVersion();
    public virtual string ToString();
    internal void EnterLambdaScope(LambdaExpression lambda, Expression entry, Expression expectedType);
    internal void EnterMemberInit(MemberInitExpression init);
    internal Expression GetRewrite(Expression expression);
    internal void LeaveLambdaScope();
    internal void LeaveMemberInit();
    internal void RegisterRewrite(Expression root, String[] names, Expression rewriteExpression);
    internal void RevokeRewrite(Expression root, String[] names);
}
[DebuggerDisplayAttribute("Segment {ProjectionType} {Member}")]
internal class System.Data.Services.Client.ProjectionPathSegment : object {
    [CompilerGeneratedAttribute]
private string <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ProjectionType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <SourceTypeAs>k__BackingField;
    [CompilerGeneratedAttribute]
private ProjectionPath <StartPath>k__BackingField;
    internal string Member { get; private set; }
    internal Type ProjectionType { get; internal set; }
    internal Type SourceTypeAs { get; internal set; }
    internal ProjectionPath StartPath { get; private set; }
    internal ProjectionPathSegment(ProjectionPath startPath, string member, Type projectionType);
    internal ProjectionPathSegment(ProjectionPath startPath, MemberExpression memberExpression);
    [CompilerGeneratedAttribute]
internal string get_Member();
    [CompilerGeneratedAttribute]
private void set_Member(string value);
    [CompilerGeneratedAttribute]
internal Type get_ProjectionType();
    [CompilerGeneratedAttribute]
internal void set_ProjectionType(Type value);
    [CompilerGeneratedAttribute]
internal Type get_SourceTypeAs();
    [CompilerGeneratedAttribute]
internal void set_SourceTypeAs(Type value);
    [CompilerGeneratedAttribute]
internal ProjectionPath get_StartPath();
    [CompilerGeneratedAttribute]
private void set_StartPath(ProjectionPath value);
}
internal class System.Data.Services.Client.ProjectionPlan : object {
    [CompilerGeneratedAttribute]
private Type <LastSegmentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`4<object, object, Type, object> <Plan>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ProjectedType>k__BackingField;
    internal Type LastSegmentType { get; internal set; }
    internal Func`4<object, object, Type, object> Plan { get; internal set; }
    internal Type ProjectedType { get; internal set; }
    [CompilerGeneratedAttribute]
internal Type get_LastSegmentType();
    [CompilerGeneratedAttribute]
internal void set_LastSegmentType(Type value);
    [CompilerGeneratedAttribute]
internal Func`4<object, object, Type, object> get_Plan();
    [CompilerGeneratedAttribute]
internal void set_Plan(Func`4<object, object, Type, object> value);
    [CompilerGeneratedAttribute]
internal Type get_ProjectedType();
    [CompilerGeneratedAttribute]
internal void set_ProjectedType(Type value);
    internal object Run(AtomMaterializer materializer, AtomEntry entry, Type expectedType);
}
internal class System.Data.Services.Client.ProjectionPlanCompiler : ALinqExpressionVisitor {
    private Dictionary`2<Expression, ExpressionAnnotation> annotations;
    private ParameterExpression materializerExpression;
    private Dictionary`2<Expression, Expression> normalizerRewrites;
    private int identifierId;
    private ProjectionPathBuilder pathBuilder;
    private bool topLevelProjectionFound;
    [CompilerGeneratedAttribute]
private static Func`2<Expression, string> CS$<>9__CachedAnonymousMethodDelegatea;
    [CompilerGeneratedAttribute]
private static Func`2<ProjectionPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegateb;
    [CompilerGeneratedAttribute]
private static Func`2<ProjectionPathSegment, string> CS$<>9__CachedAnonymousMethodDelegatec;
    [CompilerGeneratedAttribute]
private static Func`2<ConstructorInfo, bool> CS$<>9__CachedAnonymousMethodDelegatef;
    private ProjectionPlanCompiler(Dictionary`2<Expression, Expression> normalizerRewrites, DataServiceProtocolVersion maxProtocolVersion);
    internal static ProjectionPlan CompilePlan(LambdaExpression projection, Dictionary`2<Expression, Expression> normalizerRewrites, DataServiceProtocolVersion maxProtocolVersion);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitConditional(ConditionalExpression conditional);
    internal virtual Expression VisitUnary(UnaryExpression u);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitParameter(ParameterExpression p);
    internal virtual Expression VisitMemberInit(MemberInitExpression init);
    internal virtual Expression VisitMethodCall(MethodCallExpression m);
    internal virtual Expression Visit(Expression exp);
    internal virtual Expression VisitLambda(LambdaExpression lambda);
    private static Expression CallMaterializer(string methodName, Expression[] arguments);
    private static Expression CallMaterializerWithType(string methodName, Type[] typeArguments, Expression[] arguments);
    private static Expression RebindConstructor(ConstructorInfo info, Expression[] arguments);
    private Expression CallCheckValueForPathIsNull(Expression entry, Expression entryType, ProjectionPath path);
    private Expression CallValueForPath(Expression entry, Expression entryType, ProjectionPath path);
    private Expression CallValueForPathWithType(Expression entry, Expression entryType, ProjectionPath path, Type type);
    private Expression RebindConditionalNullCheck(ConditionalExpression conditional, MatchNullCheckResult nullCheck);
    private Expression RebindEntityMemberInit(MemberInitExpression init);
    private Expression GetDeepestEntry(Expression[] path);
    private Expression GetExpressionBeforeNormalization(Expression expression);
    private Expression RebindParameter(Expression expression, ExpressionAnnotation annotation);
    private Expression RebindMemberAccess(MemberExpression m, ExpressionAnnotation baseAnnotation);
    private Expression RebindNewExpressionForDataServiceCollectionOfT(NewExpression nex);
    private Expression RebindMethodCallForMemberSelect(MethodCallExpression call);
    private Expression RebindMethodCallForMemberToList(MethodCallExpression call);
    private Expression RebindMethodCallForNewSequence(MethodCallExpression call);
    private Expression TypedEnumerableToList(Expression source, Type targetType);
    [CompilerGeneratedAttribute]
private static string <RebindEntityMemberInit>b__7(Expression e);
    [CompilerGeneratedAttribute]
private static bool <RebindEntityMemberInit>b__8(ProjectionPathSegment m);
    [CompilerGeneratedAttribute]
private static string <RebindEntityMemberInit>b__9(ProjectionPathSegment m);
    [CompilerGeneratedAttribute]
private static bool <RebindNewExpressionForDataServiceCollectionOfT>b__e(ConstructorInfo c);
}
internal class System.Data.Services.Client.ProjectionQueryOptionExpression : QueryOptionExpression {
    private LambdaExpression lambda;
    private List`1<string> paths;
    public ExpressionType NodeType { get; }
    internal LambdaExpression Selector { get; }
    internal List`1<string> Paths { get; }
    internal ProjectionQueryOptionExpression(Type type, LambdaExpression lambda, List`1<string> paths);
    public virtual ExpressionType get_NodeType();
    internal LambdaExpression get_Selector();
    internal List`1<string> get_Paths();
}
internal class System.Data.Services.Client.ProjectionRewriter : ALinqExpressionVisitor {
    private ParameterExpression newLambdaParameter;
    private ParameterExpression oldLambdaParameter;
    private ResourceExpression projectionSource;
    private bool successfulRebind;
    private ProjectionRewriter(Type proposedParameterType);
    internal static LambdaExpression TryToRewrite(LambdaExpression le, ResourceExpression source, DataServiceProtocolVersion maxProtocolVersion);
    internal LambdaExpression Rebind(LambdaExpression lambda, ResourceExpression source);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
}
internal class System.Data.Services.Client.QueryComponents : object {
    private Uri uri;
    private Type lastSegmentType;
    private Dictionary`2<Expression, Expression> normalizerRewrites;
    private LambdaExpression projection;
    private Version version;
    internal Uri Uri { get; }
    internal Dictionary`2<Expression, Expression> NormalizerRewrites { get; }
    internal LambdaExpression Projection { get; }
    internal Type LastSegmentType { get; }
    internal Version Version { get; internal set; }
    internal QueryComponents(Uri uri, Version version, Type lastSegmentType, LambdaExpression projection, Dictionary`2<Expression, Expression> normalizerRewrites);
    internal Uri get_Uri();
    internal Dictionary`2<Expression, Expression> get_NormalizerRewrites();
    internal LambdaExpression get_Projection();
    internal Type get_LastSegmentType();
    internal Version get_Version();
    internal void set_Version(Version value);
}
public class System.Data.Services.Client.QueryOperationResponse : OperationResponse {
    private DataServiceRequest query;
    private MaterializeAtom results;
    public DataServiceRequest Query { get; }
    public long TotalCount { get; }
    internal MaterializeAtom Results { get; }
    internal QueryOperationResponse(Dictionary`2<string, string> headers, DataServiceRequest query, MaterializeAtom results);
    public DataServiceRequest get_Query();
    public virtual long get_TotalCount();
    internal MaterializeAtom get_Results();
    public sealed virtual IEnumerator GetEnumerator();
    public DataServiceQueryContinuation GetContinuation();
    public DataServiceQueryContinuation GetContinuation(IEnumerable collection);
    public DataServiceQueryContinuation`1<T> GetContinuation(IEnumerable`1<T> collection);
    internal static QueryOperationResponse GetInstance(Type elementType, Dictionary`2<string, string> headers, DataServiceRequest query, MaterializeAtom results);
}
public class System.Data.Services.Client.QueryOperationResponse`1 : QueryOperationResponse {
    public long TotalCount { get; }
    internal QueryOperationResponse`1(Dictionary`2<string, string> headers, DataServiceRequest query, MaterializeAtom results);
    public virtual long get_TotalCount();
    public DataServiceQueryContinuation`1<T> GetContinuation();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
}
internal abstract class System.Data.Services.Client.QueryOptionExpression : Expression {
    private Type type;
    public Type Type { get; }
    internal QueryOptionExpression(Type type);
    public virtual Type get_Type();
    internal virtual QueryOptionExpression ComposeMultipleSpecification(QueryOptionExpression previous);
}
internal class System.Data.Services.Client.QueryResult : BaseAsyncResult {
    internal DataServiceRequest ServiceRequest;
    internal RequestInfo RequestInfo;
    internal HttpWebRequest Request;
    private static Byte[] reusableAsyncCopyBuffer;
    private MemoryStream requestStreamContent;
    private Stream requestStream;
    private HttpWebResponse httpWebResponse;
    private ResponseInfo responseInfo;
    private Stream asyncResponseStream;
    private Byte[] asyncStreamCopyBuffer;
    private Stream responseStream;
    private string contentType;
    private long contentLength;
    private HttpStatusCode statusCode;
    private bool responseStreamOwner;
    private bool usingBuffer;
    internal long ContentLength { get; }
    internal string ContentType { get; }
    internal HttpStatusCode StatusCode { get; }
    internal QueryResult(object source, string method, DataServiceRequest serviceRequest, HttpWebRequest request, RequestInfo requestInfo, AsyncCallback callback, object state);
    internal long get_ContentLength();
    internal string get_ContentType();
    internal HttpStatusCode get_StatusCode();
    internal static QueryResult EndExecute(object source, IAsyncResult asyncResult);
    internal Stream GetResponseStream();
    internal void BeginExecute(DataServiceContext context);
    internal void Execute(DataServiceContext context);
    internal QueryOperationResponse`1<TElement> GetResponse(MaterializeAtom results);
    internal QueryOperationResponse GetResponseWithType(MaterializeAtom results, Type elementType);
    internal MaterializeAtom GetMaterializer(ProjectionPlan plan);
    internal QueryOperationResponse`1<TElement> ProcessResult(ProjectionPlan plan);
    protected virtual void CompletedRequest();
    protected virtual Stream GetAsyncResponseStreamCopy();
    protected virtual Byte[] GetAsyncResponseStreamCopyBuffer();
    protected virtual void PutAsyncResponseStreamCopyBuffer(Byte[] buffer);
    protected virtual void SetHttpWebResponse(HttpWebResponse response);
    private static void AsyncEndGetResponse(IAsyncResult asyncResult);
    private static void ReadResponseStream(QueryResult queryResult);
    private static void AsyncEndRead(IAsyncResult asyncResult);
    private static void CompleteCheck(QueryResult pereq, InternalError errorcode);
}
public class System.Data.Services.Client.ReadingWritingEntityEventArgs : EventArgs {
    private object entity;
    private XElement data;
    private Uri baseUri;
    public object Entity { get; }
    public XElement Data { get; }
    public Uri BaseUri { get; }
    internal ReadingWritingEntityEventArgs(object entity, XElement data, Uri baseUri);
    public object get_Entity();
    [DebuggerStepThroughAttribute]
public XElement get_Data();
    [DebuggerStepThroughAttribute]
public Uri get_BaseUri();
}
internal class System.Data.Services.Client.ReferenceEqualityComparer : object {
    private sealed virtual override bool System.Collections.IEqualityComparer.Equals(object x, object y);
    private sealed virtual override int System.Collections.IEqualityComparer.GetHashCode(object obj);
}
internal class System.Data.Services.Client.ReferenceEqualityComparer`1 : ReferenceEqualityComparer {
    private static ReferenceEqualityComparer`1<T> instance;
    internal static ReferenceEqualityComparer`1<T> Instance { get; }
    internal static ReferenceEqualityComparer`1<T> get_Instance();
    public sealed virtual bool Equals(T x, T y);
    public sealed virtual int GetHashCode(T obj);
}
internal static class System.Data.Services.Client.ReflectionUtil : object {
    private static Dictionary`2<MethodInfo, SequenceMethod> s_methodMap;
    private static Dictionary`2<SequenceMethod, MethodInfo> s_inverseMap;
    [CompilerGeneratedAttribute]
private static Func`2<Type, bool> CS$<>9__CachedAnonymousMethodDelegate4;
    [CompilerGeneratedAttribute]
private static Func`3<Type, int, KeyValuePair`2<Type, int>> CS$<>9__CachedAnonymousMethodDelegate5;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<Type, int>, Type> CS$<>9__CachedAnonymousMethodDelegate6;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<Type, int>, int> CS$<>9__CachedAnonymousMethodDelegate7;
    private static ReflectionUtil();
    internal static bool TryIdentifySequenceMethod(MethodInfo method, SequenceMethod& sequenceMethod);
    internal static bool IsSequenceMethod(MethodInfo method, SequenceMethod sequenceMethod);
    internal static bool IsSequenceSelectMethod(MethodInfo method);
    internal static bool IsAnyAllMethod(SequenceMethod sequenceMethod);
    internal static string GetCanonicalMethodDescription(MethodInfo method);
    private static void AppendCanonicalTypeDescription(Type type, Dictionary`2<Type, int> genericArgumentOrdinals, StringBuilder description);
    internal static IEnumerable`1<MethodInfo> GetAllLinqOperators();
    [CompilerGeneratedAttribute]
private static bool <GetCanonicalMethodDescription>b__0(Type t);
    [CompilerGeneratedAttribute]
private static KeyValuePair`2<Type, int> <GetCanonicalMethodDescription>b__1(Type t, int i);
    [CompilerGeneratedAttribute]
private static Type <GetCanonicalMethodDescription>b__2(KeyValuePair`2<Type, int> r);
    [CompilerGeneratedAttribute]
private static int <GetCanonicalMethodDescription>b__3(KeyValuePair`2<Type, int> r);
}
internal class System.Data.Services.Client.RequestInfo : object {
    private DataServiceContext context;
    internal Uri TypeScheme { get; }
    internal string DataNamespace { get; }
    internal bool EnableEpmNullExtensionAttributes { get; }
    internal EntityTracker EntityTracker { get; }
    internal bool HasWritingEventHandlers { get; }
    internal bool IgnoreResourceNotFoundException { get; }
    internal Func`2<Type, string> ResolveName { get; }
    internal UriResolver BaseUriResolver { get; }
    internal DataServiceResponsePreference AddAndUpdateResponsePreference { get; }
    internal Version MaxProtocolVersionAsVersion { get; }
    internal DataServiceProtocolVersion MaxProtocolVersion { get; }
    internal RequestInfo(DataServiceContext context);
    internal Uri get_TypeScheme();
    internal string get_DataNamespace();
    internal bool get_EnableEpmNullExtensionAttributes();
    internal EntityTracker get_EntityTracker();
    internal bool get_HasWritingEventHandlers();
    internal bool get_IgnoreResourceNotFoundException();
    internal Func`2<Type, string> get_ResolveName();
    internal UriResolver get_BaseUriResolver();
    internal DataServiceResponsePreference get_AddAndUpdateResponsePreference();
    internal Version get_MaxProtocolVersionAsVersion();
    internal DataServiceProtocolVersion get_MaxProtocolVersion();
    internal void FireWritingEntityEvent(object element, XElement data, Uri baseUri);
    internal HttpWebRequest CreateRequest(Uri requestUri, string method, bool allowAnyType, string contentType, Version requestVersion, bool sendChunked, bool applyPreferences, Action`1<HttpWebRequest> sendingRequestCallback);
    internal string ResolveNameFromType(Type type);
    internal ResponseInfo GetDeserializationInfo(Nullable`1<MergeOption> mergeOption, Version responseVersion);
    internal void ValidateRequestVersion(Version requestVersion);
    internal InvalidOperationException ValidateResponseVersion(Version responseVersion);
}
internal class System.Data.Services.Client.ResourceBinder : DataServiceALinqExpressionVisitor {
    private DataServiceContext context;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<ConstantExpression, ConstantExpression>, ConstantExpression> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<ConstantExpression, ConstantExpression>, ConstantExpression> CS$<>9__CachedAnonymousMethodDelegate3;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<ConstantExpression, ConstantExpression>, ConstantExpression> CS$<>9__CachedAnonymousMethodDelegate6;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<ConstantExpression, ConstantExpression>, ConstantExpression> CS$<>9__CachedAnonymousMethodDelegate7;
    [CompilerGeneratedAttribute]
private static Func`4<MethodCallExpression, ResourceExpression, ConstantExpression, Expression> CS$<>9__CachedAnonymousMethodDelegatea;
    [CompilerGeneratedAttribute]
private static Func`4<MethodCallExpression, ResourceExpression, ConstantExpression, Expression> CS$<>9__CachedAnonymousMethodDelegateb;
    private DataServiceProtocolVersion MaxProtocolVersion { get; }
    private ResourceBinder(DataServiceContext context);
    private DataServiceProtocolVersion get_MaxProtocolVersion();
    internal static Expression Bind(Expression e, DataServiceContext context);
    internal static bool IsMissingKeyPredicates(Expression expression);
    internal static void VerifyKeyPredicates(Expression e);
    internal static void VerifyNotSelectManyProjection(Expression expression);
    private static Expression AnalyzePredicate(MethodCallExpression mce, DataServiceProtocolVersion maxProtocolVersion);
    private static void ValidateFilter(Expression exp, string method);
    private static void SetKeyPredicate(ResourceSetExpression rse, Dictionary`2<PropertyInfo, ConstantExpression> keyValues);
    private static bool CollectionContentsEqual(ICollection`1<T> left, ICollection`1<T> right, IEqualityComparer`1<T> comparer);
    private static bool ExtractKeyPredicate(ResourceSetExpression target, List`1<Expression> predicates, DataServiceProtocolVersion maxProtocolVersion, Dictionary`2& keyValues);
    private static Expression BuildKeyPredicateFilter(InputReferenceExpression input, Dictionary`2<PropertyInfo, ConstantExpression> keyValuesDictionary);
    private static void AddConjuncts(Expression e, List`1<Expression> conjuncts);
    internal bool AnalyzeProjection(MethodCallExpression mce, SequenceMethod sequenceMethod, Expression& e);
    internal static Expression AnalyzeNavigation(MethodCallExpression mce, DataServiceContext context);
    private static bool IsValidNavigationSource(Expression input, ResourceExpression& sourceExpression);
    internal static Expression AnalyzeSelectMany(MethodCallExpression mce, DataServiceContext context);
    private static Expression AnalyzeSelectManySelector(MethodCallExpression selectManyCall, ResourceSetExpression sourceResourceSet, DataServiceContext context);
    internal static Expression ApplyOrdering(MethodCallExpression mce, bool descending, bool thenBy, DataServiceProtocolVersion maxProtocolVersion);
    private static Expression LimitCardinality(MethodCallExpression mce, int maxCardinality);
    private static Expression AnalyzeCast(MethodCallExpression mce);
    private static Expression AnalyzeOfType(MethodCallExpression mce, DataServiceProtocolVersion maxProtocolVersion);
    private static Expression AnalyzeAnyAll(MethodCallExpression mce, DataServiceProtocolVersion maxProtocolVersion);
    private static Expression StripConvert(Expression e);
    private static Expression AnalyzeExpand(MethodCallExpression mce, DataServiceContext context);
    private static Expression AnalyzeAddCustomQueryOption(MethodCallExpression mce);
    private static Expression AnalyzeAddCountOption(MethodCallExpression mce, CountOption countOption);
    private static ResourceSetExpression CreateResourceSetExpression(Type type, ResourceExpression source, Expression memberExpression, Type resourceType);
    private static NavigationPropertySingletonExpression CreateNavigationPropertySingletonExpression(Type type, ResourceExpression source, Expression memberExpression);
    private static ResourceSetExpression RemoveTransparentScope(Type expectedResultType, ResourceSetExpression input);
    internal static Expression StripConvertToAssignable(Expression e);
    internal static T StripTo(Expression expression);
    internal static T StripTo(Expression expression, Type& convertedType);
    internal virtual Expression VisitResourceSetExpression(ResourceSetExpression rse);
    private static bool TryGetResourceSetMethodArguments(MethodCallExpression mce, ResourceSetExpression& input, LambdaExpression& lambda);
    private static bool TryBindToInput(ResourceExpression input, LambdaExpression le, Expression& bound);
    private static Expression AnalyzeResourceSetConstantMethod(MethodCallExpression mce, Func`4<MethodCallExpression, ResourceExpression, ConstantExpression, Expression> constantMethodAnalyzer);
    private static Expression AnalyzeCountMethod(MethodCallExpression mce);
    private static void AddSequenceQueryOption(ResourceExpression target, QueryOptionExpression qoe);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitMethodCall(MethodCallExpression mce);
    private static Expression StripCastMethodCalls(Expression expression);
    [CompilerGeneratedAttribute]
private static ConstantExpression <CreateResourceSetExpression>b__0(KeyValuePair`2<ConstantExpression, ConstantExpression> kvp);
    [CompilerGeneratedAttribute]
private static ConstantExpression <CreateResourceSetExpression>b__1(KeyValuePair`2<ConstantExpression, ConstantExpression> kvp);
    [CompilerGeneratedAttribute]
private static ConstantExpression <CreateNavigationPropertySingletonExpression>b__4(KeyValuePair`2<ConstantExpression, ConstantExpression> kvp);
    [CompilerGeneratedAttribute]
private static ConstantExpression <CreateNavigationPropertySingletonExpression>b__5(KeyValuePair`2<ConstantExpression, ConstantExpression> kvp);
    [CompilerGeneratedAttribute]
private static Expression <VisitMethodCall>b__8(MethodCallExpression callExp, ResourceExpression resource, ConstantExpression takeCount);
    [CompilerGeneratedAttribute]
private static Expression <VisitMethodCall>b__9(MethodCallExpression callExp, ResourceExpression resource, ConstantExpression skipCount);
}
internal abstract class System.Data.Services.Client.ResourceExpression : Expression {
    protected Expression source;
    protected InputReferenceExpression inputRef;
    private Type type;
    private List`1<string> expandPaths;
    private CountOption countOption;
    private Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions;
    private ProjectionQueryOptionExpression projection;
    private Version uriVersion;
    [CompilerGeneratedAttribute]
private Type <ResourceTypeAs>k__BackingField;
    public Type Type { get; }
    internal bool HasQueryOptions { get; }
    internal Type ResourceType { get; }
    internal Type ResourceTypeAs { get; internal set; }
    internal Version UriVersion { get; }
    internal bool IsSingleton { get; }
    internal List`1<string> ExpandPaths { get; internal set; }
    internal CountOption CountOption { get; internal set; }
    internal Dictionary`2<ConstantExpression, ConstantExpression> CustomQueryOptions { get; internal set; }
    internal ProjectionQueryOptionExpression Projection { get; internal set; }
    internal Expression Source { get; }
    internal ResourceExpression(Expression source, Type type, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion);
    public virtual Type get_Type();
    internal abstract virtual ResourceExpression CreateCloneWithNewType(Type type);
    internal abstract virtual bool get_HasQueryOptions();
    internal abstract virtual Type get_ResourceType();
    [CompilerGeneratedAttribute]
internal Type get_ResourceTypeAs();
    [CompilerGeneratedAttribute]
internal void set_ResourceTypeAs(Type value);
    internal Version get_UriVersion();
    internal abstract virtual bool get_IsSingleton();
    internal virtual List`1<string> get_ExpandPaths();
    internal virtual void set_ExpandPaths(List`1<string> value);
    internal virtual CountOption get_CountOption();
    internal virtual void set_CountOption(CountOption value);
    internal virtual Dictionary`2<ConstantExpression, ConstantExpression> get_CustomQueryOptions();
    internal virtual void set_CustomQueryOptions(Dictionary`2<ConstantExpression, ConstantExpression> value);
    internal ProjectionQueryOptionExpression get_Projection();
    internal void set_Projection(ProjectionQueryOptionExpression value);
    internal Expression get_Source();
    internal InputReferenceExpression CreateReference();
    internal void RaiseUriVersion(Version newVersion);
}
internal enum System.Data.Services.Client.ResourceExpressionType : Enum {
    public int value__;
    public static ResourceExpressionType RootResourceSet;
    public static ResourceExpressionType ResourceNavigationProperty;
    public static ResourceExpressionType ResourceNavigationPropertySingleton;
    public static ResourceExpressionType TakeQueryOption;
    public static ResourceExpressionType SkipQueryOption;
    public static ResourceExpressionType OrderByQueryOption;
    public static ResourceExpressionType FilterQueryOption;
    public static ResourceExpressionType InputReference;
    public static ResourceExpressionType ProjectionQueryOption;
    public static ResourceExpressionType ExpandQueryOption;
}
[DebuggerDisplayAttribute("ResourceSetExpression {Source}.{MemberExpression}")]
internal class System.Data.Services.Client.ResourceSetExpression : ResourceExpression {
    private Type resourceType;
    private Expression member;
    private Dictionary`2<PropertyInfo, ConstantExpression> keyFilter;
    private List`1<QueryOptionExpression> sequenceQueryOptions;
    private TransparentAccessors transparentScope;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<ConstantExpression, ConstantExpression>, ConstantExpression> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<ConstantExpression, ConstantExpression>, ConstantExpression> CS$<>9__CachedAnonymousMethodDelegate3;
    public ExpressionType NodeType { get; }
    internal Expression MemberExpression { get; }
    internal Type ResourceType { get; }
    internal bool HasTransparentScope { get; }
    internal TransparentAccessors TransparentScope { get; internal set; }
    internal bool HasKeyPredicate { get; }
    internal Dictionary`2<PropertyInfo, ConstantExpression> KeyPredicate { get; internal set; }
    internal bool IsSingleton { get; }
    internal bool HasQueryOptions { get; }
    internal FilterQueryOptionExpression Filter { get; }
    internal OrderByQueryOptionExpression OrderBy { get; }
    internal SkipQueryOptionExpression Skip { get; }
    internal TakeQueryOptionExpression Take { get; }
    internal IEnumerable`1<QueryOptionExpression> SequenceQueryOptions { get; }
    internal bool HasSequenceQueryOptions { get; }
    internal ResourceSetExpression(Type type, Expression source, Expression memberExpression, Type resourceType, List`1<string> expandPaths, CountOption countOption, Dictionary`2<ConstantExpression, ConstantExpression> customQueryOptions, ProjectionQueryOptionExpression projection, Type resourceTypeAs, Version uriVersion);
    public virtual ExpressionType get_NodeType();
    internal Expression get_MemberExpression();
    internal virtual Type get_ResourceType();
    internal bool get_HasTransparentScope();
    internal TransparentAccessors get_TransparentScope();
    internal void set_TransparentScope(TransparentAccessors value);
    internal bool get_HasKeyPredicate();
    internal Dictionary`2<PropertyInfo, ConstantExpression> get_KeyPredicate();
    internal void set_KeyPredicate(Dictionary`2<PropertyInfo, ConstantExpression> value);
    internal virtual bool get_IsSingleton();
    internal virtual bool get_HasQueryOptions();
    internal FilterQueryOptionExpression get_Filter();
    internal OrderByQueryOptionExpression get_OrderBy();
    internal SkipQueryOptionExpression get_Skip();
    internal TakeQueryOptionExpression get_Take();
    internal IEnumerable`1<QueryOptionExpression> get_SequenceQueryOptions();
    internal bool get_HasSequenceQueryOptions();
    internal virtual ResourceExpression CreateCloneWithNewType(Type type);
    internal void AddSequenceQueryOption(QueryOptionExpression qoe);
    internal void OverrideInputReference(ResourceSetExpression newInput);
    [CompilerGeneratedAttribute]
private static ConstantExpression <CreateCloneWithNewType>b__0(KeyValuePair`2<ConstantExpression, ConstantExpression> kvp);
    [CompilerGeneratedAttribute]
private static ConstantExpression <CreateCloneWithNewType>b__1(KeyValuePair`2<ConstantExpression, ConstantExpression> kvp);
}
internal class System.Data.Services.Client.ResponseInfo : object {
    private DataServiceContext context;
    private MergeOption mergeOption;
    private bool ignoreMissingProperties;
    private Version responseVersion;
    internal Uri TypeScheme { get; }
    internal MergeOption MergeOption { get; }
    internal bool IgnoreMissingProperties { get; }
    internal string DataNamespace { get; }
    internal bool HasReadingEntityHandlers { get; }
    internal EntityTracker EntityTracker { get; }
    internal bool ApplyingChanges { get; internal set; }
    internal UriResolver BaseUriResolver { get; }
    internal bool EnableNullExtensionAttributes { get; }
    internal DataServiceProtocolVersion MaxProtocolVersion { get; }
    internal ResponseInfo(DataServiceContext context, MergeOption mergeOption, bool ignoreMissingProperties, Version responseVersion);
    internal Uri get_TypeScheme();
    internal MergeOption get_MergeOption();
    internal bool get_IgnoreMissingProperties();
    internal string get_DataNamespace();
    internal bool get_HasReadingEntityHandlers();
    internal EntityTracker get_EntityTracker();
    internal bool get_ApplyingChanges();
    internal void set_ApplyingChanges(bool value);
    internal UriResolver get_BaseUriResolver();
    internal bool get_EnableNullExtensionAttributes();
    internal DataServiceProtocolVersion get_MaxProtocolVersion();
    internal void FireReadingEntityEvent(object element, XElement data, Uri baseUri);
    internal Type ResolveTypeFromName(string wireName, Type userType, bool checkAssignable);
    internal DataServiceContext GetContext();
}
internal class System.Data.Services.Client.SaveChangesEventArgs : EventArgs {
    private DataServiceResponse response;
    public SaveChangesEventArgs(DataServiceResponse response);
}
[FlagsAttribute]
public enum System.Data.Services.Client.SaveChangesOptions : Enum {
    public int value__;
    public static SaveChangesOptions None;
    public static SaveChangesOptions Batch;
    public static SaveChangesOptions ContinueOnError;
    public static SaveChangesOptions ReplaceOnUpdate;
    public static SaveChangesOptions PatchOnUpdate;
}
internal class System.Data.Services.Client.SaveResult : BaseSaveResult {
    private List`1<CachedResponse> cachedResponses;
    private MemoryStream inMemoryResponseStream;
    private HttpWebResponse httpWebResponse;
    private CachedResponse cachedResponse;
    internal bool IsBatch { get; }
    protected bool ProcessResponsePayload { get; }
    protected Stream ResponseStream { get; }
    internal SaveResult(DataServiceContext context, string method, SaveChangesOptions options, AsyncCallback callback, object state);
    internal virtual bool get_IsBatch();
    protected virtual bool get_ProcessResponsePayload();
    protected virtual Stream get_ResponseStream();
    internal void BeginCreateNextChange();
    internal void CreateNextChange();
    protected virtual void FinishCurrentChange(PerRequest pereq);
    protected virtual void HandleOperationResponse(HttpWebResponse response);
    protected virtual DataServiceResponse HandleResponse();
    protected virtual MaterializeAtom GetMaterializer(EntityDescriptor entityDescriptor, ResponseInfo responseInfo);
    private HttpWebRequest CreateNextRequest();
    private HttpWebRequest CheckAndProcessMediaEntryPost(EntityDescriptor entityDescriptor);
    private HttpWebRequest CheckAndProcessMediaEntryPut(EntityDescriptor entityDescriptor);
    private HttpWebRequest CreateMediaResourceRequest(Uri requestUri, string method, Version version, bool sendChunked, bool applyResponsePreference, Action`1<HttpWebRequest> sendingRequestCallback);
    private void SetupMediaResourceRequest(HttpWebRequest mediaResourceRequest, DataServiceSaveStream saveStream);
    private void HandleOperationException(InvalidOperationException e, HttpWebResponse response);
    private void CheckContinueOnError();
    private void HandleOperationResponseData(HttpWebResponse response);
    private void HandleOperationResponseData(HttpWebResponse response, Stream responseStream);
    private HttpWebRequest CreateRequest(LinkDescriptor binding);
    private HttpWebRequest CreateRequest(EntityDescriptor entityDescriptor, EntityStates state);
    private HttpWebRequest CreateNamedStreamRequest(StreamDescriptor namedStreamInfo);
}
internal class System.Data.Services.Client.SByteTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
public class System.Data.Services.Client.SendingRequestEventArgs : EventArgs {
    private WebRequest request;
    private WebHeaderCollection requestHeaders;
    public WebRequest Request { get; public set; }
    public WebHeaderCollection RequestHeaders { get; }
    internal SendingRequestEventArgs(WebRequest request, WebHeaderCollection requestHeaders);
    public WebRequest get_Request();
    public void set_Request(WebRequest value);
    public WebHeaderCollection get_RequestHeaders();
}
internal enum System.Data.Services.Client.SequenceMethod : Enum {
    public int value__;
    public static SequenceMethod Where;
    public static SequenceMethod WhereOrdinal;
    public static SequenceMethod OfType;
    public static SequenceMethod Cast;
    public static SequenceMethod Select;
    public static SequenceMethod SelectOrdinal;
    public static SequenceMethod SelectMany;
    public static SequenceMethod SelectManyOrdinal;
    public static SequenceMethod SelectManyResultSelector;
    public static SequenceMethod SelectManyOrdinalResultSelector;
    public static SequenceMethod Join;
    public static SequenceMethod JoinComparer;
    public static SequenceMethod GroupJoin;
    public static SequenceMethod GroupJoinComparer;
    public static SequenceMethod OrderBy;
    public static SequenceMethod OrderByComparer;
    public static SequenceMethod OrderByDescending;
    public static SequenceMethod OrderByDescendingComparer;
    public static SequenceMethod ThenBy;
    public static SequenceMethod ThenByComparer;
    public static SequenceMethod ThenByDescending;
    public static SequenceMethod ThenByDescendingComparer;
    public static SequenceMethod Take;
    public static SequenceMethod TakeWhile;
    public static SequenceMethod TakeWhileOrdinal;
    public static SequenceMethod Skip;
    public static SequenceMethod SkipWhile;
    public static SequenceMethod SkipWhileOrdinal;
    public static SequenceMethod GroupBy;
    public static SequenceMethod GroupByComparer;
    public static SequenceMethod GroupByElementSelector;
    public static SequenceMethod GroupByElementSelectorComparer;
    public static SequenceMethod GroupByResultSelector;
    public static SequenceMethod GroupByResultSelectorComparer;
    public static SequenceMethod GroupByElementSelectorResultSelector;
    public static SequenceMethod GroupByElementSelectorResultSelectorComparer;
    public static SequenceMethod Distinct;
    public static SequenceMethod DistinctComparer;
    public static SequenceMethod Concat;
    public static SequenceMethod Union;
    public static SequenceMethod UnionComparer;
    public static SequenceMethod Intersect;
    public static SequenceMethod IntersectComparer;
    public static SequenceMethod Except;
    public static SequenceMethod ExceptComparer;
    public static SequenceMethod First;
    public static SequenceMethod FirstPredicate;
    public static SequenceMethod FirstOrDefault;
    public static SequenceMethod FirstOrDefaultPredicate;
    public static SequenceMethod Last;
    public static SequenceMethod LastPredicate;
    public static SequenceMethod LastOrDefault;
    public static SequenceMethod LastOrDefaultPredicate;
    public static SequenceMethod Single;
    public static SequenceMethod SinglePredicate;
    public static SequenceMethod SingleOrDefault;
    public static SequenceMethod SingleOrDefaultPredicate;
    public static SequenceMethod ElementAt;
    public static SequenceMethod ElementAtOrDefault;
    public static SequenceMethod DefaultIfEmpty;
    public static SequenceMethod DefaultIfEmptyValue;
    public static SequenceMethod Contains;
    public static SequenceMethod ContainsComparer;
    public static SequenceMethod Reverse;
    public static SequenceMethod Empty;
    public static SequenceMethod SequenceEqual;
    public static SequenceMethod SequenceEqualComparer;
    public static SequenceMethod Any;
    public static SequenceMethod AnyPredicate;
    public static SequenceMethod All;
    public static SequenceMethod Count;
    public static SequenceMethod CountPredicate;
    public static SequenceMethod LongCount;
    public static SequenceMethod LongCountPredicate;
    public static SequenceMethod Min;
    public static SequenceMethod MinSelector;
    public static SequenceMethod Max;
    public static SequenceMethod MaxSelector;
    public static SequenceMethod MinInt;
    public static SequenceMethod MinNullableInt;
    public static SequenceMethod MinLong;
    public static SequenceMethod MinNullableLong;
    public static SequenceMethod MinDouble;
    public static SequenceMethod MinNullableDouble;
    public static SequenceMethod MinDecimal;
    public static SequenceMethod MinNullableDecimal;
    public static SequenceMethod MinSingle;
    public static SequenceMethod MinNullableSingle;
    public static SequenceMethod MinIntSelector;
    public static SequenceMethod MinNullableIntSelector;
    public static SequenceMethod MinLongSelector;
    public static SequenceMethod MinNullableLongSelector;
    public static SequenceMethod MinDoubleSelector;
    public static SequenceMethod MinNullableDoubleSelector;
    public static SequenceMethod MinDecimalSelector;
    public static SequenceMethod MinNullableDecimalSelector;
    public static SequenceMethod MinSingleSelector;
    public static SequenceMethod MinNullableSingleSelector;
    public static SequenceMethod MaxInt;
    public static SequenceMethod MaxNullableInt;
    public static SequenceMethod MaxLong;
    public static SequenceMethod MaxNullableLong;
    public static SequenceMethod MaxDouble;
    public static SequenceMethod MaxNullableDouble;
    public static SequenceMethod MaxDecimal;
    public static SequenceMethod MaxNullableDecimal;
    public static SequenceMethod MaxSingle;
    public static SequenceMethod MaxNullableSingle;
    public static SequenceMethod MaxIntSelector;
    public static SequenceMethod MaxNullableIntSelector;
    public static SequenceMethod MaxLongSelector;
    public static SequenceMethod MaxNullableLongSelector;
    public static SequenceMethod MaxDoubleSelector;
    public static SequenceMethod MaxNullableDoubleSelector;
    public static SequenceMethod MaxDecimalSelector;
    public static SequenceMethod MaxNullableDecimalSelector;
    public static SequenceMethod MaxSingleSelector;
    public static SequenceMethod MaxNullableSingleSelector;
    public static SequenceMethod SumInt;
    public static SequenceMethod SumNullableInt;
    public static SequenceMethod SumLong;
    public static SequenceMethod SumNullableLong;
    public static SequenceMethod SumDouble;
    public static SequenceMethod SumNullableDouble;
    public static SequenceMethod SumDecimal;
    public static SequenceMethod SumNullableDecimal;
    public static SequenceMethod SumSingle;
    public static SequenceMethod SumNullableSingle;
    public static SequenceMethod SumIntSelector;
    public static SequenceMethod SumNullableIntSelector;
    public static SequenceMethod SumLongSelector;
    public static SequenceMethod SumNullableLongSelector;
    public static SequenceMethod SumDoubleSelector;
    public static SequenceMethod SumNullableDoubleSelector;
    public static SequenceMethod SumDecimalSelector;
    public static SequenceMethod SumNullableDecimalSelector;
    public static SequenceMethod SumSingleSelector;
    public static SequenceMethod SumNullableSingleSelector;
    public static SequenceMethod AverageInt;
    public static SequenceMethod AverageNullableInt;
    public static SequenceMethod AverageLong;
    public static SequenceMethod AverageNullableLong;
    public static SequenceMethod AverageDouble;
    public static SequenceMethod AverageNullableDouble;
    public static SequenceMethod AverageDecimal;
    public static SequenceMethod AverageNullableDecimal;
    public static SequenceMethod AverageSingle;
    public static SequenceMethod AverageNullableSingle;
    public static SequenceMethod AverageIntSelector;
    public static SequenceMethod AverageNullableIntSelector;
    public static SequenceMethod AverageLongSelector;
    public static SequenceMethod AverageNullableLongSelector;
    public static SequenceMethod AverageDoubleSelector;
    public static SequenceMethod AverageNullableDoubleSelector;
    public static SequenceMethod AverageDecimalSelector;
    public static SequenceMethod AverageNullableDecimalSelector;
    public static SequenceMethod AverageSingleSelector;
    public static SequenceMethod AverageNullableSingleSelector;
    public static SequenceMethod Aggregate;
    public static SequenceMethod AggregateSeed;
    public static SequenceMethod AggregateSeedSelector;
    public static SequenceMethod AsQueryable;
    public static SequenceMethod AsQueryableGeneric;
    public static SequenceMethod AsEnumerable;
    public static SequenceMethod ToList;
    public static SequenceMethod NotSupported;
}
[DebuggerDisplayAttribute("EntityPropertyMappingInfo {DefiningType}")]
internal class System.Data.Services.Client.Serializers.EntityPropertyMappingInfo : object {
    private static String[] IllegalLinkRelCriteriaValues;
    private EntityPropertyMappingAttribute attribute;
    private Type definingType;
    private ClientType actualPropertyType;
    private String[] propertyValuePath;
    private EntityPropertyMappingMultiValueStatus multiValueStatus;
    private ClientType multiValueItemType;
    private bool isSyndicationMapping;
    [CompilerGeneratedAttribute]
private SyndicationParent <SyndicationParent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CriteriaValue>k__BackingField;
    [CompilerGeneratedAttribute]
private SyndicationCriteria <Criteria>k__BackingField;
    public EntityPropertyMappingAttribute Attribute { get; }
    public Type DefiningType { get; }
    public ClientType ActualPropertyType { get; }
    public String[] PropertyValuePath { get; }
    public EntityPropertyMappingMultiValueStatus MultiValueStatus { get; public set; }
    public SyndicationParent SyndicationParent { get; public set; }
    public ClientType MultiValueItemType { get; public set; }
    public bool IsSyndicationMapping { get; }
    public bool IsAtomLinkMapping { get; }
    public bool IsAtomCategoryMapping { get; }
    public string CriteriaValue { get; public set; }
    public SyndicationCriteria Criteria { get; public set; }
    public EntityPropertyMappingInfo(EntityPropertyMappingAttribute attribute, Type definingType, ClientType actualPropertyType);
    private static EntityPropertyMappingInfo();
    public EntityPropertyMappingAttribute get_Attribute();
    public Type get_DefiningType();
    public ClientType get_ActualPropertyType();
    public String[] get_PropertyValuePath();
    public EntityPropertyMappingMultiValueStatus get_MultiValueStatus();
    public void set_MultiValueStatus(EntityPropertyMappingMultiValueStatus value);
    [CompilerGeneratedAttribute]
public SyndicationParent get_SyndicationParent();
    [CompilerGeneratedAttribute]
public void set_SyndicationParent(SyndicationParent value);
    public ClientType get_MultiValueItemType();
    public void set_MultiValueItemType(ClientType value);
    public bool get_IsSyndicationMapping();
    public bool get_IsAtomLinkMapping();
    public bool get_IsAtomCategoryMapping();
    [CompilerGeneratedAttribute]
public string get_CriteriaValue();
    [CompilerGeneratedAttribute]
public void set_CriteriaValue(string value);
    [CompilerGeneratedAttribute]
public SyndicationCriteria get_Criteria();
    [CompilerGeneratedAttribute]
public void set_Criteria(SyndicationCriteria value);
    internal static bool IsValidLinkRelCriteriaValue(string criteriaValue);
    internal static bool IsValidCategorySchemeCriteriaValue(string criteriaValue);
    internal void TrimPropertyValuePath(String[] propertyValuePathPrefix);
    internal void SetMultiValuePropertySyndicationMapping();
    internal bool DefiningTypesAreEqual(EntityPropertyMappingInfo other);
    internal object ReadPropertyValue(object element, Boolean& nullFromParentProperty);
    private static object ReadPropertyValue(object element, ClientType resourceType, String[] srcPathSegments, int currentSegment, Boolean& nullFromParentProperty);
}
internal enum System.Data.Services.Client.Serializers.EntityPropertyMappingMultiValueStatus : Enum {
    public int value__;
    public static EntityPropertyMappingMultiValueStatus None;
    public static EntityPropertyMappingMultiValueStatus MultiValueProperty;
    public static EntityPropertyMappingMultiValueStatus MultiValueItemProperty;
}
internal abstract class System.Data.Services.Client.Serializers.EpmContentSerializerBase : object {
    [CompilerGeneratedAttribute]
private EpmTargetPathSegment <Root>k__BackingField;
    [CompilerGeneratedAttribute]
private XmlWriter <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableNullExtensionAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegate3;
    protected EpmTargetPathSegment Root { get; private set; }
    protected XmlWriter Target { get; private set; }
    protected bool EnableNullExtensionAttributes { get; private set; }
    protected bool Success { get; private set; }
    protected EpmContentSerializerBase(EpmTargetTree tree, bool isSyndication, XmlWriter target, bool enableNullExtensionAttributes);
    [CompilerGeneratedAttribute]
protected EpmTargetPathSegment get_Root();
    [CompilerGeneratedAttribute]
private void set_Root(EpmTargetPathSegment value);
    [CompilerGeneratedAttribute]
protected XmlWriter get_Target();
    [CompilerGeneratedAttribute]
private void set_Target(XmlWriter value);
    [CompilerGeneratedAttribute]
protected bool get_EnableNullExtensionAttributes();
    [CompilerGeneratedAttribute]
private void set_EnableNullExtensionAttributes(bool value);
    [CompilerGeneratedAttribute]
protected bool get_Success();
    [CompilerGeneratedAttribute]
private void set_Success(bool value);
    internal void Serialize(object resource);
    protected static string GetPropertyValueAsText(object propertyValue);
    protected virtual void Serialize(object resource, object target, EpmTargetPathSegment targetSegment, EpmSerializationKind kind);
    protected object ReadPropertyValue(object resource, EpmTargetPathSegment segment, Boolean& nullFromParentProperty);
    protected object ReadPropertyValue(object resource, EpmTargetPathSegment segment);
    [CompilerGeneratedAttribute]
private static bool <Serialize>b__0(EpmTargetPathSegment s);
    [CompilerGeneratedAttribute]
private static bool <Serialize>b__1(EpmTargetPathSegment s);
}
internal class System.Data.Services.Client.Serializers.EpmCustomContentSerializer : EpmContentSerializerBase {
    private bool disposed;
    private List`1<XElement> extensions;
    internal EpmCustomContentSerializer(EpmTargetTree targetTree, XmlWriter target, bool enableNullExtensionAttributes);
    public sealed virtual void Dispose();
    protected virtual void Serialize(object resource, object target, EpmTargetPathSegment targetSegment, EpmSerializationKind kind);
    private static XElement CreateElementForSegment(EpmTargetPathSegment targetSegment);
    private void WriteAttribute(object resource, XElement targetElement, EpmTargetPathSegment targetSegment);
    private void WriteElement(object resource, XElement targetElement, EpmTargetPathSegment targetSegment);
    private void WriteElementToParent(XElement targetElement, XElement child);
    private string ReadPropertyValueAsText(object resource, EpmTargetPathSegment targetPathSegment);
}
internal enum System.Data.Services.Client.Serializers.EpmSerializationKind : Enum {
    public int value__;
    public static EpmSerializationKind Attributes;
    public static EpmSerializationKind Elements;
    public static EpmSerializationKind All;
}
internal class System.Data.Services.Client.Serializers.EpmSourcePathSegment : object {
    private string propertyName;
    private List`1<EpmSourcePathSegment> subProperties;
    [CompilerGeneratedAttribute]
private EntityPropertyMappingInfo <EpmInfo>k__BackingField;
    internal string PropertyName { get; }
    internal List`1<EpmSourcePathSegment> SubProperties { get; }
    internal EntityPropertyMappingInfo EpmInfo { get; internal set; }
    internal bool IsMultiValueItemValue { get; }
    internal EpmSourcePathSegment(string propertyName);
    internal string get_PropertyName();
    internal List`1<EpmSourcePathSegment> get_SubProperties();
    [CompilerGeneratedAttribute]
internal EntityPropertyMappingInfo get_EpmInfo();
    [CompilerGeneratedAttribute]
internal void set_EpmInfo(EntityPropertyMappingInfo value);
    internal bool get_IsMultiValueItemValue();
    internal static EpmSourcePathSegment CreateMultiValueItemValueSegment();
}
internal class System.Data.Services.Client.Serializers.EpmSourceTree : object {
    private EpmSourcePathSegment root;
    private EpmTargetTree epmTargetTree;
    [CompilerGeneratedAttribute]
private static Func`2<EpmSourcePathSegment, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    internal EpmSourcePathSegment Root { get; }
    internal EpmSourceTree(EpmTargetTree epmTargetTree);
    internal EpmSourcePathSegment get_Root();
    internal void Add(EntityPropertyMappingInfo epmInfo);
    internal void Validate(ClientType resourceType);
    private static void Validate(EpmSourcePathSegment pathSegment, ClientType resourceType);
    private static void ValidateMultiValueSegment(EntityPropertyMappingInfo multiValuePropertyInfo, EpmSourcePathSegment multiValueSegment, ClientType resourceType);
    private static void ValidateConditionalMapping(EntityPropertyMappingInfo epmInfo);
    private static ClientType GetPropertyType(ClientType clientType, string propertyName, Boolean& isMultiValueProperty);
    [CompilerGeneratedAttribute]
private static bool <Add>b__1(EpmSourcePathSegment e);
}
[DebuggerDisplayAttribute("EpmTargetPathSegment {SegmentName} HasContent={HasContent}")]
internal class System.Data.Services.Client.Serializers.EpmTargetPathSegment : object {
    private string segmentName;
    private string segmentNamespaceUri;
    private string segmentNamespacePrefix;
    private List`1<EpmTargetPathSegment> subSegments;
    private EpmTargetPathSegment parentSegment;
    [CompilerGeneratedAttribute]
private EntityPropertyMappingInfo <EpmInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CriteriaValue>k__BackingField;
    [CompilerGeneratedAttribute]
private SyndicationCriteria <Criteria>k__BackingField;
    internal string SegmentName { get; }
    internal string AttributeName { get; }
    internal string SegmentNamespaceUri { get; }
    internal string SegmentNamespacePrefix { get; }
    internal EntityPropertyMappingInfo EpmInfo { get; internal set; }
    internal bool HasContent { get; }
    internal bool IsMultiValueProperty { get; }
    internal bool IsAttribute { get; }
    internal EpmTargetPathSegment ParentSegment { get; }
    internal bool IsAtomLinkAttributeSegment { get; }
    internal bool IsAtomCategoryAttributeSegment { get; }
    internal List`1<EpmTargetPathSegment> SubSegments { get; }
    internal string CriteriaValue { get; internal set; }
    internal SyndicationCriteria Criteria { get; internal set; }
    internal EpmTargetPathSegment(string segmentName, string segmentNamespaceUri, string segmentNamespacePrefix, EpmTargetPathSegment parentSegment);
    internal string get_SegmentName();
    internal string get_AttributeName();
    internal string get_SegmentNamespaceUri();
    internal string get_SegmentNamespacePrefix();
    [CompilerGeneratedAttribute]
internal EntityPropertyMappingInfo get_EpmInfo();
    [CompilerGeneratedAttribute]
internal void set_EpmInfo(EntityPropertyMappingInfo value);
    internal bool get_HasContent();
    internal bool get_IsMultiValueProperty();
    internal bool get_IsAttribute();
    internal EpmTargetPathSegment get_ParentSegment();
    internal bool get_IsAtomLinkAttributeSegment();
    internal bool get_IsAtomCategoryAttributeSegment();
    internal List`1<EpmTargetPathSegment> get_SubSegments();
    [CompilerGeneratedAttribute]
internal string get_CriteriaValue();
    [CompilerGeneratedAttribute]
internal void set_CriteriaValue(string value);
    [CompilerGeneratedAttribute]
internal SyndicationCriteria get_Criteria();
    [CompilerGeneratedAttribute]
internal void set_Criteria(SyndicationCriteria value);
    internal bool MatchCriteria(string criteriaValue, SyndicationCriteria criteria);
}
internal class System.Data.Services.Client.Serializers.EpmTargetTree : object {
    private int countOfNonContentV2mappings;
    private int countOfNonContentV3mappings;
    private List`1<string> linkRelCriteriaValues;
    private List`1<string> categorySchemeCriteriaValues;
    [CompilerGeneratedAttribute]
private EpmTargetPathSegment <SyndicationRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private EpmTargetPathSegment <NonSyndicationRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegated;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegatee;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegatef;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegate13;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, string> CS$<>9__CachedAnonymousMethodDelegate14;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegate1a;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, string> CS$<>9__CachedAnonymousMethodDelegate1b;
    [CompilerGeneratedAttribute]
private static Func`2<EpmTargetPathSegment, bool> CS$<>9__CachedAnonymousMethodDelegate1f;
    internal EpmTargetPathSegment SyndicationRoot { get; private set; }
    internal EpmTargetPathSegment NonSyndicationRoot { get; private set; }
    internal DataServiceProtocolVersion MinimumDataServiceProtocolVersion { get; }
    [CompilerGeneratedAttribute]
internal EpmTargetPathSegment get_SyndicationRoot();
    [CompilerGeneratedAttribute]
private void set_SyndicationRoot(EpmTargetPathSegment value);
    [CompilerGeneratedAttribute]
internal EpmTargetPathSegment get_NonSyndicationRoot();
    [CompilerGeneratedAttribute]
private void set_NonSyndicationRoot(EpmTargetPathSegment value);
    internal DataServiceProtocolVersion get_MinimumDataServiceProtocolVersion();
    internal void Add(EntityPropertyMappingInfo epmInfo);
    internal void Remove(EntityPropertyMappingInfo epmInfo);
    internal void Validate();
    internal void ValidateConditionalMappings();
    internal bool HasLinkRelCriteriaValue(string criteriaValue);
    internal bool HasCategorySchemeCriteriaValue(string criteriaValue);
    private static bool HasMixedContent(EpmTargetPathSegment currentSegment, bool ancestorHasContent);
    private static string GetPropertyNameFromEpmInfo(EntityPropertyMappingInfo epmInfo);
    [CompilerGeneratedAttribute]
private static bool <ValidateConditionalMappings>b__a(EpmTargetPathSegment s);
    [CompilerGeneratedAttribute]
private static bool <ValidateConditionalMappings>b__b(EpmTargetPathSegment s);
    [CompilerGeneratedAttribute]
private static bool <ValidateConditionalMappings>b__c(EpmTargetPathSegment s);
    [CompilerGeneratedAttribute]
private static bool <HasLinkRelCriteriaValue>b__10(EpmTargetPathSegment s);
    [CompilerGeneratedAttribute]
private static string <HasLinkRelCriteriaValue>b__11(EpmTargetPathSegment s);
    [CompilerGeneratedAttribute]
private static bool <HasCategorySchemeCriteriaValue>b__17(EpmTargetPathSegment s);
    [CompilerGeneratedAttribute]
private static string <HasCategorySchemeCriteriaValue>b__18(EpmTargetPathSegment s);
    [CompilerGeneratedAttribute]
private static bool <HasMixedContent>b__1e(EpmTargetPathSegment s);
}
internal enum System.Data.Services.Client.Serializers.SyndicationCriteria : Enum {
    public int value__;
    public static SyndicationCriteria None;
    public static SyndicationCriteria CategoryScheme;
    public static SyndicationCriteria LinkRel;
}
internal enum System.Data.Services.Client.Serializers.SyndicationParent : Enum {
    public int value__;
    public static SyndicationParent Entry;
    public static SyndicationParent Author;
    public static SyndicationParent Category;
    public static SyndicationParent Contributor;
    public static SyndicationParent Link;
}
internal class System.Data.Services.Client.SingleTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
[DebuggerDisplayAttribute("SkipQueryOptionExpression {SkipAmount}")]
internal class System.Data.Services.Client.SkipQueryOptionExpression : QueryOptionExpression {
    private ConstantExpression skipAmount;
    public ExpressionType NodeType { get; }
    internal ConstantExpression SkipAmount { get; }
    internal SkipQueryOptionExpression(Type type, ConstantExpression skipAmount);
    public virtual ExpressionType get_NodeType();
    internal ConstantExpression get_SkipAmount();
    internal virtual QueryOptionExpression ComposeMultipleSpecification(QueryOptionExpression previous);
}
public class System.Data.Services.Client.StreamDescriptor : Descriptor {
    private DataServiceStreamLink streamLink;
    private EntityDescriptor entityDescriptor;
    private StreamDescriptor transientNamedStreamInfo;
    [CompilerGeneratedAttribute]
private DataServiceSaveStream <SaveStream>k__BackingField;
    public DataServiceStreamLink StreamLink { get; }
    public EntityDescriptor EntityDescriptor { get; public set; }
    internal string Name { get; }
    internal Uri SelfLink { get; internal set; }
    internal Uri EditLink { get; internal set; }
    internal string ContentType { get; internal set; }
    internal string ETag { get; internal set; }
    internal DataServiceSaveStream SaveStream { get; internal set; }
    internal DescriptorKind DescriptorKind { get; }
    unknown StreamDescriptor TransientNamedStreamInfo {internal set; }
    internal StreamDescriptor(string name, EntityDescriptor entityDescriptor);
    internal StreamDescriptor(EntityDescriptor entityDescriptor);
    public DataServiceStreamLink get_StreamLink();
    public EntityDescriptor get_EntityDescriptor();
    public void set_EntityDescriptor(EntityDescriptor value);
    internal string get_Name();
    internal Uri get_SelfLink();
    internal void set_SelfLink(Uri value);
    internal Uri get_EditLink();
    internal void set_EditLink(Uri value);
    internal string get_ContentType();
    internal void set_ContentType(string value);
    internal string get_ETag();
    internal void set_ETag(string value);
    [CompilerGeneratedAttribute]
internal DataServiceSaveStream get_SaveStream();
    [CompilerGeneratedAttribute]
internal void set_SaveStream(DataServiceSaveStream value);
    internal virtual DescriptorKind get_DescriptorKind();
    internal void set_TransientNamedStreamInfo(StreamDescriptor value);
    internal static void MergeStreamDescriptor(StreamDescriptor existingStreamDescriptor, StreamDescriptor newStreamDescriptor);
    internal virtual void ClearChanges();
    internal Uri GetLatestEditLink();
    internal string GetLatestETag();
    internal void CloseSaveStream();
}
internal static class System.Data.Services.Client.Strings : object {
    internal static string BatchStream_MissingBoundary { get; }
    internal static string BatchStream_GetMethodNotSupportedInChangeset { get; }
    internal static string BatchStream_InvalidBatchFormat { get; }
    internal static string BatchStream_MissingEndChangesetDelimiter { get; }
    internal static string BatchStream_OnlyGETOperationsCanBeSpecifiedInBatch { get; }
    internal static string BatchStream_InvalidOperationHeaderSpecified { get; }
    internal static string BatchStream_MoreDataAfterEndOfBatch { get; }
    internal static string BatchStream_InternalBufferRequestTooSmall { get; }
    internal static string Batch_IncompleteResponseCount { get; }
    internal static string Context_BaseUri { get; }
    internal static string Context_BaseUriRequired { get; }
    internal static string Context_ResolveReturnedInvalidUri { get; }
    internal static string Context_RequestUriIsRelativeBaseUriRequired { get; }
    internal static string Context_TrackingExpectsAbsoluteUri { get; }
    internal static string Context_LocationHeaderExpectsAbsoluteUri { get; }
    internal static string Context_LinkResourceInsertFailure { get; }
    internal static string Context_BatchExecuteError { get; }
    internal static string Context_EntitySetName { get; }
    internal static string Context_MissingEditLinkInResponseBody { get; }
    internal static string Context_MissingSelfLinkInResponseBody { get; }
    internal static string Context_MissingEditMediaLinkInResponseBody { get; }
    internal static string Context_BatchNotSupportedForNamedStreams { get; }
    internal static string Content_EntityWithoutKey { get; }
    internal static string Content_EntityIsNotEntityType { get; }
    internal static string Context_EntityNotContained { get; }
    internal static string Context_EntityAlreadyContained { get; }
    internal static string Context_DifferentEntityAlreadyContained { get; }
    internal static string Context_DidNotOriginateAsync { get; }
    internal static string Context_AsyncAlreadyDone { get; }
    internal static string Context_OperationCanceled { get; }
    internal static string Context_NoLoadWithInsertEnd { get; }
    internal static string Context_NoRelationWithInsertEnd { get; }
    internal static string Context_NoRelationWithDeleteEnd { get; }
    internal static string Context_RelationAlreadyContained { get; }
    internal static string Context_RelationNotRefOrCollection { get; }
    internal static string Context_AddLinkCollectionOnly { get; }
    internal static string Context_AddRelatedObjectCollectionOnly { get; }
    internal static string Context_AddRelatedObjectSourceDeleted { get; }
    internal static string Context_SetLinkReferenceOnly { get; }
    internal static string Context_BatchNotSupportedForMediaLink { get; }
    internal static string Context_UnexpectedZeroRawRead { get; }
    internal static string Context_ChildResourceExists { get; }
    internal static string Context_EntityNotMediaLinkEntry { get; }
    internal static string Context_SetSaveStreamWithoutEditMediaLink { get; }
    internal static string Context_BothLocationAndIdMustBeSpecified { get; }
    internal static string ClientType_MultipleImplementationNotSupported { get; }
    internal static string ClientType_MultiValueOfMultiValueNotSupported { get; }
    internal static string DataServiceException_GeneralError { get; }
    internal static string Deserialize_GetEnumerator { get; }
    internal static string Deserialize_MixedTextWithComment { get; }
    internal static string Deserialize_ExpectingSimpleValue { get; }
    internal static string Deserialize_NotApplicationXml { get; }
    internal static string Deserialize_MismatchAtomLinkLocalSimple { get; }
    internal static string Deserialize_ExpectedEmptyMediaLinkEntryContent { get; }
    internal static string Deserialize_ContentPlusPropertiesNotAllowed { get; }
    internal static string Deserialize_NoLocationHeader { get; }
    internal static string Deserialize_MissingIdElement { get; }
    internal static string MultiValue_NullMultiValueItemsNotSupported { get; }
    internal static string MultiValue_ComplexTypesInMultiValueOfPrimitiveTypesNotAllowed { get; }
    internal static string MultiValue_PrimitiveTypesInMultiValueOfComplexTypesNotAllowed { get; }
    internal static string EpmMultiValue_NullsOnSyndicationElements { get; }
    internal static string HttpProcessUtility_ContentTypeMissing { get; }
    internal static string HttpProcessUtility_MediaTypeMissingValue { get; }
    internal static string HttpProcessUtility_MediaTypeRequiresSemicolonBeforeParameter { get; }
    internal static string HttpProcessUtility_MediaTypeRequiresSlash { get; }
    internal static string HttpProcessUtility_MediaTypeRequiresSubType { get; }
    internal static string HttpProcessUtility_MediaTypeUnspecified { get; }
    internal static string MaterializeFromAtom_CountNotPresent { get; }
    internal static string MaterializeFromAtom_CountFormatError { get; }
    internal static string MaterializeFromAtom_TopLevelLinkNotAvailable { get; }
    internal static string MaterializeFromAtom_CollectionKeyNotPresentInLinkTable { get; }
    internal static string MaterializeFromAtom_GetNestLinkForFlatCollection { get; }
    internal static string Util_EmptyString { get; }
    internal static string Util_EmptyArray { get; }
    internal static string Util_NullArrayElement { get; }
    internal static string ALinq_TypeBinaryNotSupported { get; }
    internal static string ALinq_ConditionalNotSupported { get; }
    internal static string ALinq_ParameterNotSupported { get; }
    internal static string ALinq_LambdaNotSupported { get; }
    internal static string ALinq_NewNotSupported { get; }
    internal static string ALinq_MemberInitNotSupported { get; }
    internal static string ALinq_ListInitNotSupported { get; }
    internal static string ALinq_NewArrayNotSupported { get; }
    internal static string ALinq_InvocationNotSupported { get; }
    internal static string ALinq_QueryOptionsOnlyAllowedOnLeafNodes { get; }
    internal static string ALinq_CantExpand { get; }
    internal static string ALinq_CantNavigateWithoutKeyPredicate { get; }
    internal static string ALinq_CanOnlyApplyOneKeyPredicate { get; }
    internal static string ALinq_CantAddQueryOption { get; }
    internal static string ALinq_QueryOptionsOnlyAllowedOnSingletons { get; }
    internal static string ALinq_CannotAddCountOption { get; }
    internal static string ALinq_CannotAddCountOptionConflict { get; }
    internal static string ALinq_ProjectionOnlyAllowedOnLeafNodes { get; }
    internal static string ALinq_ProjectionCanOnlyHaveOneProjection { get; }
    internal static string ALinq_CannotConstructKnownEntityTypes { get; }
    internal static string ALinq_CannotCreateConstantEntity { get; }
    internal static string ALinq_CanOnlyProjectTheLeaf { get; }
    internal static string ALinq_CannotProjectWithExplicitExpansion { get; }
    internal static string ALinq_OfTypeArgumentNotAvailable { get; }
    internal static string ALinq_CannotUseTypeFiltersMultipleTimes { get; }
    internal static string ALinq_TypeAsNotSupportedForMaxDataServiceVersionLessThan3 { get; }
    internal static string DSKAttribute_MustSpecifyAtleastOnePropertyName { get; }
    internal static string DataServiceCollection_LoadRequiresTargetCollectionObserved { get; }
    internal static string DataServiceCollection_CannotStopTrackingChildCollection { get; }
    internal static string DataServiceCollection_OperationForTrackedOnly { get; }
    internal static string DataServiceCollection_CannotDetermineContextFromItems { get; }
    internal static string DataServiceCollection_InsertIntoTrackedButNotLoadedCollection { get; }
    internal static string DataBinding_BindingOperation_DetachedSource { get; }
    internal static string XmlWrappingReader_TopLevelXmlBaseMustBeAbsolute { get; }
    internal static string AtomParser_FeedUnexpected { get; }
    internal static string AtomParser_PagingLinkOutsideOfFeed { get; }
    internal static string AtomParser_ManyFeedCounts { get; }
    internal static string AtomParser_FeedCountNotUnderFeed { get; }
    internal static string AtomParser_UnexpectedContentUnderExpandedLink { get; }
    internal static string AtomMaterializer_DuplicatedNextLink { get; }
    internal static string AtomMaterializer_LinksMissingHref { get; }
    internal static string AtomMaterializer_DataServiceCollectionNotSupportedForNonEntities { get; }
    internal static string Context_SendingRequestEventArgsNotHttp { get; }
    internal static string DataServiceRequest_FailGetCount { get; }
    internal static string get_BatchStream_MissingBoundary();
    internal static string BatchStream_ContentExpected(object p0);
    internal static string BatchStream_ContentUnexpected(object p0);
    internal static string get_BatchStream_GetMethodNotSupportedInChangeset();
    internal static string get_BatchStream_InvalidBatchFormat();
    internal static string BatchStream_InvalidDelimiter(object p0);
    internal static string get_BatchStream_MissingEndChangesetDelimiter();
    internal static string BatchStream_InvalidHeaderValueSpecified(object p0);
    internal static string BatchStream_InvalidContentLengthSpecified(object p0);
    internal static string get_BatchStream_OnlyGETOperationsCanBeSpecifiedInBatch();
    internal static string get_BatchStream_InvalidOperationHeaderSpecified();
    internal static string BatchStream_InvalidHttpMethodName(object p0);
    internal static string get_BatchStream_MoreDataAfterEndOfBatch();
    internal static string get_BatchStream_InternalBufferRequestTooSmall();
    internal static string BatchStream_InvalidMethodHeaderSpecified(object p0);
    internal static string BatchStream_InvalidHttpVersionSpecified(object p0, object p1);
    internal static string BatchStream_InvalidNumberOfHeadersAtOperationStart(object p0, object p1);
    internal static string BatchStream_MissingOrInvalidContentEncodingHeader(object p0, object p1);
    internal static string BatchStream_InvalidNumberOfHeadersAtChangeSetStart(object p0, object p1);
    internal static string BatchStream_MissingContentTypeHeader(object p0);
    internal static string BatchStream_InvalidContentTypeSpecified(object p0, object p1, object p2, object p3);
    internal static string Batch_ExpectedContentType(object p0);
    internal static string Batch_ExpectedResponse(object p0);
    internal static string get_Batch_IncompleteResponseCount();
    internal static string Batch_UnexpectedContent(object p0);
    internal static string get_Context_BaseUri();
    internal static string get_Context_BaseUriRequired();
    internal static string get_Context_ResolveReturnedInvalidUri();
    internal static string get_Context_RequestUriIsRelativeBaseUriRequired();
    internal static string Context_ResolveEntitySetOrBaseUriRequired(object p0);
    internal static string Context_CannotConvertKey(object p0);
    internal static string get_Context_TrackingExpectsAbsoluteUri();
    internal static string get_Context_LocationHeaderExpectsAbsoluteUri();
    internal static string get_Context_LinkResourceInsertFailure();
    internal static string Context_InternalError(object p0);
    internal static string get_Context_BatchExecuteError();
    internal static string get_Context_EntitySetName();
    internal static string get_Context_MissingEditLinkInResponseBody();
    internal static string get_Context_MissingSelfLinkInResponseBody();
    internal static string get_Context_MissingEditMediaLinkInResponseBody();
    internal static string Context_MissingRelationshipLinkInResponseBody(object p0);
    internal static string Context_MissingHRefInNamedStreamSelfLinkElement(object p0);
    internal static string Context_MissingHRefInNamedStreamEditLinkElement(object p0);
    internal static string Context_ICollectionOfTNotImplByMultiValueStorageType(object p0, object p1);
    internal static string get_Context_BatchNotSupportedForNamedStreams();
    internal static string Context_SetSaveStreamWithoutNamedStreamEditLink(object p0);
    internal static string get_Content_EntityWithoutKey();
    internal static string get_Content_EntityIsNotEntityType();
    internal static string get_Context_EntityNotContained();
    internal static string get_Context_EntityAlreadyContained();
    internal static string get_Context_DifferentEntityAlreadyContained();
    internal static string get_Context_DidNotOriginateAsync();
    internal static string get_Context_AsyncAlreadyDone();
    internal static string get_Context_OperationCanceled();
    internal static string get_Context_NoLoadWithInsertEnd();
    internal static string get_Context_NoRelationWithInsertEnd();
    internal static string get_Context_NoRelationWithDeleteEnd();
    internal static string get_Context_RelationAlreadyContained();
    internal static string get_Context_RelationNotRefOrCollection();
    internal static string get_Context_AddLinkCollectionOnly();
    internal static string get_Context_AddRelatedObjectCollectionOnly();
    internal static string get_Context_AddRelatedObjectSourceDeleted();
    internal static string get_Context_SetLinkReferenceOnly();
    internal static string Context_NoContentTypeForMediaLink(object p0, object p1);
    internal static string get_Context_BatchNotSupportedForMediaLink();
    internal static string get_Context_UnexpectedZeroRawRead();
    internal static string Context_VersionNotSupported(object p0, object p1);
    internal static string Context_ResponseVersionIsBiggerThanProtocolVersion(object p0, object p1);
    internal static string Context_RequestVersionIsBiggerThanProtocolVersion(object p0, object p1);
    internal static string get_Context_ChildResourceExists();
    internal static string get_Context_EntityNotMediaLinkEntry();
    internal static string Context_MLEWithoutSaveStream(object p0);
    internal static string Context_SetSaveStreamOnMediaEntryProperty(object p0);
    internal static string get_Context_SetSaveStreamWithoutEditMediaLink();
    internal static string Context_SetSaveStreamOnInvalidEntityState(object p0);
    internal static string Context_EntityDoesNotContainNamedStream(object p0);
    internal static string Context_MissingSelfAndEditLinkForNamedStream(object p0);
    internal static string get_Context_BothLocationAndIdMustBeSpecified();
    internal static string Collection_NullCollectionReference(object p0, object p1);
    internal static string ClientType_MissingOpenProperty(object p0, object p1);
    internal static string Clienttype_MultipleOpenProperty(object p0);
    internal static string ClientType_MissingProperty(object p0, object p1);
    internal static string ClientType_KeysMustBeSimpleTypes(object p0);
    internal static string ClientType_KeysOnDifferentDeclaredType(object p0);
    internal static string ClientType_MissingMimeTypeProperty(object p0, object p1);
    internal static string ClientType_MissingMimeTypeDataProperty(object p0, object p1);
    internal static string ClientType_MissingMediaEntryProperty(object p0, object p1);
    internal static string ClientType_NoSettableFields(object p0);
    internal static string get_ClientType_MultipleImplementationNotSupported();
    internal static string ClientType_NullOpenProperties(object p0);
    internal static string ClientType_Ambiguous(object p0, object p1);
    internal static string ClientType_UnsupportedType(object p0);
    internal static string get_ClientType_MultiValueOfMultiValueNotSupported();
    internal static string ClientType_MultiValuePropertyNotSupportedInV2AndBelow(object p0, object p1);
    internal static string WebUtil_MultiValueTypeNotSupportedInV2OrBelow(object p0);
    internal static string get_DataServiceException_GeneralError();
    internal static string get_Deserialize_GetEnumerator();
    internal static string Deserialize_Current(object p0, object p1);
    internal static string get_Deserialize_MixedTextWithComment();
    internal static string get_Deserialize_ExpectingSimpleValue();
    internal static string get_Deserialize_NotApplicationXml();
    internal static string get_Deserialize_MismatchAtomLinkLocalSimple();
    internal static string Deserialize_MismatchAtomLinkFeedPropertyNotCollection(object p0);
    internal static string Deserialize_MismatchAtomLinkEntryPropertyIsCollection(object p0);
    internal static string Deserialize_UnknownMimeTypeSpecified(object p0);
    internal static string get_Deserialize_ExpectedEmptyMediaLinkEntryContent();
    internal static string get_Deserialize_ContentPlusPropertiesNotAllowed();
    internal static string get_Deserialize_NoLocationHeader();
    internal static string Deserialize_ServerException(object p0);
    internal static string get_Deserialize_MissingIdElement();
    internal static string Deserialize_MismatchAtomMultiValueTypeLocalCollection(object p0);
    internal static string Deserialize_MultipleValuesForNonMultiValueProperty(object p0, object p1, object p2);
    internal static string MultiValue_NullMultiValueNotSupported(object p0);
    internal static string get_MultiValue_NullMultiValueItemsNotSupported();
    internal static string get_MultiValue_ComplexTypesInMultiValueOfPrimitiveTypesNotAllowed();
    internal static string get_MultiValue_PrimitiveTypesInMultiValueOfComplexTypesNotAllowed();
    internal static string EntityDescriptor_MissingSelfEditLink(object p0);
    internal static string EpmClientType_PropertyIsComplex(object p0);
    internal static string EpmClientType_PropertyIsPrimitive(object p0);
    internal static string EpmSourceTree_InvalidSourcePath(object p0, object p1);
    internal static string EpmSourceTree_DuplicateEpmAttrsWithSameSourceName(object p0, object p1);
    internal static string EpmSourceTree_EndsWithNonPrimitiveType(object p0);
    internal static string EpmSourceTree_InaccessiblePropertyOnType(object p0, object p1);
    internal static string EpmSourceTree_PropertiesFromSameMultiValueMappedToDifferentTopLevelElements(object p0, object p1);
    internal static string EpmSourceTree_PropertiesFromSameMultiValueMappedWithDifferetKeepInContent(object p0, object p1);
    internal static string EpmSourceTree_NotAllMultiValueItemPropertiesMapped(object p0, object p1, object p2, object p3);
    internal static string EpmSourceTree_NestedMultiValue(object p0, object p1, object p2);
    internal static string EpmSourceTree_MultiValueNotAllowedInCustomMapping(object p0, object p1);
    internal static string EpmSourceTree_MultiValueOfPrimitiveMappedToLinkWithoutCriteria(object p0, object p1, object p2);
    internal static string EpmSourceTree_MultiValueOfComplexTypesDifferentConditionalMapping(object p0, object p1, object p2);
    internal static string EpmSourceTree_ConditionalMappingInvalidLinkRelCriteriaValue(object p0, object p1, object p2);
    internal static string EpmSourceTree_ConditionalMappingInvalidCategorySchemeCriteriaValue(object p0, object p1, object p2);
    internal static string EpmSourceTree_NonStringPropertyMappedToConditionAttribute(object p0, object p1, object p2);
    internal static string EpmSourceTree_NamedStreamCannotBeMapped(object p0, object p1);
    internal static string EpmTargetTree_InvalidTargetPath(object p0);
    internal static string EpmTargetTree_AttributeInMiddle(object p0);
    internal static string EpmTargetTree_DuplicateEpmAttrsWithSameTargetName(object p0, object p1, object p2, object p3);
    internal static string EpmTargetTree_TwoMultiValuePropertiesMappedToTheSameTopLevelElement(object p0, object p1, object p2);
    internal static string EpmTargetTree_TwoMultiValuePropertiesMappedToTheSameConditionalTopLevelElement(object p0, object p1, object p2, object p3);
    internal static string EpmTargetTree_MultiValueAndNormalPropertyMappedToTheSameConditionalTopLevelElement(object p0, object p1, object p2, object p3);
    internal static string EpmTargetTree_MultiValueAndNormalPropertyMappedToTheSameTopLevelElement(object p0, object p1, object p2);
    internal static string EpmTargetTree_MultiValueMappedToNonRepeatableAtomElement(object p0, object p1, object p2);
    internal static string EpmTargetTree_ConditionalMappingToCriteriaAttribute(object p0, object p1, object p2);
    internal static string EpmTargetTree_ConditionalMappingToNonConditionalSyndicationItem(object p0, object p1, object p2);
    internal static string EpmTargetTree_ConditionalMappingCategoryTermIsRequired(object p0, object p1, object p2);
    internal static string EpmTargetTree_ConditionalMappingLinkHrefIsRequired(object p0, object p1, object p2);
    internal static string EpmTargetTree_ConditionalMappingRelIsRequiredForNonConditional(object p0, object p1, object p2);
    internal static string EntityPropertyMapping_EpmAttribute(object p0);
    internal static string EntityPropertyMapping_TargetNamespaceUriNotValid(object p0);
    internal static string EntityPropertyMapping_LeadingAndTrialingWhitespacesNotAllowedOnCriteriaValue(object p0);
    internal static string get_EpmMultiValue_NullsOnSyndicationElements();
    internal static string EpmMultiValue_EmptyValueForAtomPersonEmailOrUri(object p0);
    internal static string Epm_NullValueForAttributeTarget(object p0, object p1, object p2);
    internal static string Epm_InvalidValueForLinkRelCriteriaAttribute(object p0, object p1, object p2);
    internal static string Epm_InvalidValueForCategorySchemeCriteriaAttribute(object p0, object p1, object p2);
    internal static string EpmSerializer_NullPropertyMappedToElementWhichDoesntAllowIt(object p0);
    internal static string EpmSerializer_DateTimePropertyHasNullValue(object p0);
    internal static string get_HttpProcessUtility_ContentTypeMissing();
    internal static string get_HttpProcessUtility_MediaTypeMissingValue();
    internal static string get_HttpProcessUtility_MediaTypeRequiresSemicolonBeforeParameter();
    internal static string get_HttpProcessUtility_MediaTypeRequiresSlash();
    internal static string get_HttpProcessUtility_MediaTypeRequiresSubType();
    internal static string get_HttpProcessUtility_MediaTypeUnspecified();
    internal static string HttpProcessUtility_EncodingNotSupported(object p0);
    internal static string HttpProcessUtility_EscapeCharWithoutQuotes(object p0);
    internal static string HttpProcessUtility_EscapeCharAtEnd(object p0);
    internal static string HttpProcessUtility_ClosingQuoteNotFound(object p0);
    internal static string get_MaterializeFromAtom_CountNotPresent();
    internal static string get_MaterializeFromAtom_CountFormatError();
    internal static string get_MaterializeFromAtom_TopLevelLinkNotAvailable();
    internal static string get_MaterializeFromAtom_CollectionKeyNotPresentInLinkTable();
    internal static string get_MaterializeFromAtom_GetNestLinkForFlatCollection();
    internal static string Serializer_NullKeysAreNotSupported(object p0);
    internal static string Serializer_TypeMismatchInMultiValue(object p0);
    internal static string Serializer_LoopsNotAllowedInComplexTypes(object p0);
    internal static string Serializer_EmptyMultiValueMappedToAuthor(object p0);
    internal static string Serializer_UpdateNonConditionalCriteriaAttributeValueSameAsCondition(object p0, object p1, object p2, object p3);
    internal static string get_Util_EmptyString();
    internal static string get_Util_EmptyArray();
    internal static string get_Util_NullArrayElement();
    internal static string ALinq_UnsupportedExpression(object p0);
    internal static string ALinq_CouldNotConvert(object p0);
    internal static string ALinq_MethodNotSupported(object p0);
    internal static string ALinq_UnaryNotSupported(object p0);
    internal static string ALinq_BinaryNotSupported(object p0);
    internal static string ALinq_ConstantNotSupported(object p0);
    internal static string get_ALinq_TypeBinaryNotSupported();
    internal static string get_ALinq_ConditionalNotSupported();
    internal static string get_ALinq_ParameterNotSupported();
    internal static string ALinq_MemberAccessNotSupported(object p0);
    internal static string get_ALinq_LambdaNotSupported();
    internal static string get_ALinq_NewNotSupported();
    internal static string get_ALinq_MemberInitNotSupported();
    internal static string get_ALinq_ListInitNotSupported();
    internal static string get_ALinq_NewArrayNotSupported();
    internal static string get_ALinq_InvocationNotSupported();
    internal static string get_ALinq_QueryOptionsOnlyAllowedOnLeafNodes();
    internal static string get_ALinq_CantExpand();
    internal static string ALinq_CantCastToUnsupportedPrimitive(object p0);
    internal static string get_ALinq_CantNavigateWithoutKeyPredicate();
    internal static string get_ALinq_CanOnlyApplyOneKeyPredicate();
    internal static string ALinq_CantTranslateExpression(object p0);
    internal static string ALinq_TranslationError(object p0);
    internal static string get_ALinq_CantAddQueryOption();
    internal static string ALinq_CantAddDuplicateQueryOption(object p0);
    internal static string ALinq_CantAddAstoriaQueryOption(object p0);
    internal static string ALinq_CantAddQueryOptionStartingWithDollarSign(object p0);
    internal static string ALinq_CantReferToPublicField(object p0);
    internal static string get_ALinq_QueryOptionsOnlyAllowedOnSingletons();
    internal static string ALinq_QueryOptionOutOfOrder(object p0, object p1);
    internal static string get_ALinq_CannotAddCountOption();
    internal static string get_ALinq_CannotAddCountOptionConflict();
    internal static string get_ALinq_ProjectionOnlyAllowedOnLeafNodes();
    internal static string get_ALinq_ProjectionCanOnlyHaveOneProjection();
    internal static string ALinq_ProjectionMemberAssignmentMismatch(object p0, object p1, object p2);
    internal static string ALinq_InvalidExpressionInNavigationPath(object p0);
    internal static string ALinq_ExpressionNotSupportedInProjectionToEntity(object p0, object p1);
    internal static string ALinq_ExpressionNotSupportedInProjection(object p0, object p1);
    internal static string get_ALinq_CannotConstructKnownEntityTypes();
    internal static string get_ALinq_CannotCreateConstantEntity();
    internal static string ALinq_PropertyNamesMustMatchInProjections(object p0, object p1);
    internal static string get_ALinq_CanOnlyProjectTheLeaf();
    internal static string get_ALinq_CannotProjectWithExplicitExpansion();
    internal static string ALinq_MultiValuePropertyNotSupportedInOrderBy(object p0);
    internal static string ALinq_MultiValuePropertyNotSupportedInWhere(object p0);
    internal static string ALinq_MultiValueMemberAccessNotSupportedInNavigation(object p0);
    internal static string ALinq_LinkPropertyNotSupportedInExpression(object p0);
    internal static string get_ALinq_OfTypeArgumentNotAvailable();
    internal static string get_ALinq_CannotUseTypeFiltersMultipleTimes();
    internal static string ALinq_ExpressionCannotEndWithTypeAs(object p0, object p1);
    internal static string get_ALinq_TypeAsNotSupportedForMaxDataServiceVersionLessThan3();
    internal static string ALinq_MethodNotSupportedForMaxDataServiceVersionLessThanX(object p0, object p1);
    internal static string ALinq_TypeAsArgumentNotEntityType(object p0);
    internal static string ALinq_InvalidSourceForAnyAll(object p0);
    internal static string ALinq_AnyAllNotSupportedInOrderBy(object p0);
    internal static string get_DSKAttribute_MustSpecifyAtleastOnePropertyName();
    internal static string get_DataServiceCollection_LoadRequiresTargetCollectionObserved();
    internal static string get_DataServiceCollection_CannotStopTrackingChildCollection();
    internal static string get_DataServiceCollection_OperationForTrackedOnly();
    internal static string get_DataServiceCollection_CannotDetermineContextFromItems();
    internal static string get_DataServiceCollection_InsertIntoTrackedButNotLoadedCollection();
    internal static string DataBinding_DataServiceCollectionArgumentMustHaveEntityType(object p0);
    internal static string DataBinding_CollectionPropertySetterValueHasObserver(object p0, object p1);
    internal static string DataBinding_CollectionChangedUnknownActionCollection(object p0);
    internal static string DataBinding_CollectionChangedUnknownActionMultiValue(object p0, object p1);
    internal static string get_DataBinding_BindingOperation_DetachedSource();
    internal static string DataBinding_BindingOperation_ArrayItemNull(object p0);
    internal static string DataBinding_BindingOperation_ArrayItemNotEntity(object p0);
    internal static string DataBinding_Util_UnknownEntitySetName(object p0);
    internal static string DataBinding_EntityAlreadyInCollection(object p0);
    internal static string DataBinding_NotifyPropertyChangedNotImpl(object p0);
    internal static string DataBinding_NotifyCollectionChangedNotImpl(object p0);
    internal static string DataBinding_ComplexObjectAssociatedWithMultipleEntities(object p0);
    internal static string DataBinding_MultiValueAssociatedWithMultipleEntities(object p0);
    internal static string get_XmlWrappingReader_TopLevelXmlBaseMustBeAbsolute();
    internal static string get_AtomParser_FeedUnexpected();
    internal static string get_AtomParser_PagingLinkOutsideOfFeed();
    internal static string get_AtomParser_ManyFeedCounts();
    internal static string get_AtomParser_FeedCountNotUnderFeed();
    internal static string get_AtomParser_UnexpectedContentUnderExpandedLink();
    internal static string AtomMaterializer_CannotAssignNull(object p0, object p1);
    internal static string get_AtomMaterializer_DuplicatedNextLink();
    internal static string AtomMaterializer_EntryIntoCollectionMismatch(object p0, object p1);
    internal static string AtomMaterializer_EntryToAccessIsNull(object p0);
    internal static string AtomMaterializer_EntryToInitializeIsNull(object p0);
    internal static string AtomMaterializer_ProjectEntityTypeMismatch(object p0, object p1, object p2);
    internal static string get_AtomMaterializer_LinksMissingHref();
    internal static string AtomMaterializer_PropertyMissing(object p0, object p1);
    internal static string AtomMaterializer_PropertyNotExpectedEntry(object p0, object p1);
    internal static string get_AtomMaterializer_DataServiceCollectionNotSupportedForNonEntities();
    internal static string AtomMaterializer_NoParameterlessCtorForMultiValueProperty(object p0, object p1);
    internal static string AtomMaterializer_InvalidMultiValueItem(object p0);
    internal static string AtomMaterializer_InvalidMultiValueProperty(object p0);
    internal static string AtomMaterializer_InvalidEntityType(object p0);
    internal static string AtomMaterializer_InvalidNonEntityType(object p0);
    internal static string get_Context_SendingRequestEventArgsNotHttp();
    internal static string get_DataServiceRequest_FailGetCount();
}
internal class System.Data.Services.Client.StringTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
[DebuggerDisplayAttribute("TakeQueryOptionExpression {TakeAmount}")]
internal class System.Data.Services.Client.TakeQueryOptionExpression : QueryOptionExpression {
    private ConstantExpression takeAmount;
    public ExpressionType NodeType { get; }
    internal ConstantExpression TakeAmount { get; }
    internal TakeQueryOptionExpression(Type type, ConstantExpression takeAmount);
    public virtual ExpressionType get_NodeType();
    internal ConstantExpression get_TakeAmount();
    internal virtual QueryOptionExpression ComposeMultipleSpecification(QueryOptionExpression previous);
}
internal class System.Data.Services.Client.TextPrimitiveParserToken : PrimitiveParserToken {
    internal static PrimitiveParserToken Empty;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    internal string Text { get; private set; }
    internal TextPrimitiveParserToken(string text);
    private static TextPrimitiveParserToken();
    [CompilerGeneratedAttribute]
internal string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    internal static bool IsNullOrEmpty(PrimitiveParserToken token);
    internal virtual object Materialize(Type clrType);
}
internal class System.Data.Services.Client.TextRes : object {
    internal static string BatchStream_MissingBoundary;
    internal static string BatchStream_ContentExpected;
    internal static string BatchStream_ContentUnexpected;
    internal static string BatchStream_GetMethodNotSupportedInChangeset;
    internal static string BatchStream_InvalidBatchFormat;
    internal static string BatchStream_InvalidDelimiter;
    internal static string BatchStream_MissingEndChangesetDelimiter;
    internal static string BatchStream_InvalidHeaderValueSpecified;
    internal static string BatchStream_InvalidContentLengthSpecified;
    internal static string BatchStream_OnlyGETOperationsCanBeSpecifiedInBatch;
    internal static string BatchStream_InvalidOperationHeaderSpecified;
    internal static string BatchStream_InvalidHttpMethodName;
    internal static string BatchStream_MoreDataAfterEndOfBatch;
    internal static string BatchStream_InternalBufferRequestTooSmall;
    internal static string BatchStream_InvalidMethodHeaderSpecified;
    internal static string BatchStream_InvalidHttpVersionSpecified;
    internal static string BatchStream_InvalidNumberOfHeadersAtOperationStart;
    internal static string BatchStream_MissingOrInvalidContentEncodingHeader;
    internal static string BatchStream_InvalidNumberOfHeadersAtChangeSetStart;
    internal static string BatchStream_MissingContentTypeHeader;
    internal static string BatchStream_InvalidContentTypeSpecified;
    internal static string Batch_ExpectedContentType;
    internal static string Batch_ExpectedResponse;
    internal static string Batch_IncompleteResponseCount;
    internal static string Batch_UnexpectedContent;
    internal static string Context_BaseUri;
    internal static string Context_BaseUriRequired;
    internal static string Context_ResolveReturnedInvalidUri;
    internal static string Context_RequestUriIsRelativeBaseUriRequired;
    internal static string Context_ResolveEntitySetOrBaseUriRequired;
    internal static string Context_CannotConvertKey;
    internal static string Context_TrackingExpectsAbsoluteUri;
    internal static string Context_LocationHeaderExpectsAbsoluteUri;
    internal static string Context_LinkResourceInsertFailure;
    internal static string Context_InternalError;
    internal static string Context_BatchExecuteError;
    internal static string Context_EntitySetName;
    internal static string Context_MissingEditLinkInResponseBody;
    internal static string Context_MissingSelfLinkInResponseBody;
    internal static string Context_MissingEditMediaLinkInResponseBody;
    internal static string Context_MissingRelationshipLinkInResponseBody;
    internal static string Context_MissingHRefInNamedStreamSelfLinkElement;
    internal static string Context_MissingHRefInNamedStreamEditLinkElement;
    internal static string Context_ICollectionOfTNotImplByMultiValueStorageType;
    internal static string Context_BatchNotSupportedForNamedStreams;
    internal static string Context_SetSaveStreamWithoutNamedStreamEditLink;
    internal static string Content_EntityWithoutKey;
    internal static string Content_EntityIsNotEntityType;
    internal static string Context_EntityNotContained;
    internal static string Context_EntityAlreadyContained;
    internal static string Context_DifferentEntityAlreadyContained;
    internal static string Context_DidNotOriginateAsync;
    internal static string Context_AsyncAlreadyDone;
    internal static string Context_OperationCanceled;
    internal static string Context_NoLoadWithInsertEnd;
    internal static string Context_NoRelationWithInsertEnd;
    internal static string Context_NoRelationWithDeleteEnd;
    internal static string Context_RelationAlreadyContained;
    internal static string Context_RelationNotRefOrCollection;
    internal static string Context_AddLinkCollectionOnly;
    internal static string Context_AddRelatedObjectCollectionOnly;
    internal static string Context_AddRelatedObjectSourceDeleted;
    internal static string Context_SetLinkReferenceOnly;
    internal static string Context_NoContentTypeForMediaLink;
    internal static string Context_BatchNotSupportedForMediaLink;
    internal static string Context_UnexpectedZeroRawRead;
    internal static string Context_VersionNotSupported;
    internal static string Context_ResponseVersionIsBiggerThanProtocolVersion;
    internal static string Context_RequestVersionIsBiggerThanProtocolVersion;
    internal static string Context_ChildResourceExists;
    internal static string Context_EntityNotMediaLinkEntry;
    internal static string Context_MLEWithoutSaveStream;
    internal static string Context_SetSaveStreamOnMediaEntryProperty;
    internal static string Context_SetSaveStreamWithoutEditMediaLink;
    internal static string Context_SetSaveStreamOnInvalidEntityState;
    internal static string Context_EntityDoesNotContainNamedStream;
    internal static string Context_MissingSelfAndEditLinkForNamedStream;
    internal static string Context_BothLocationAndIdMustBeSpecified;
    internal static string Collection_NullCollectionReference;
    internal static string ClientType_MissingOpenProperty;
    internal static string Clienttype_MultipleOpenProperty;
    internal static string ClientType_MissingProperty;
    internal static string ClientType_KeysMustBeSimpleTypes;
    internal static string ClientType_KeysOnDifferentDeclaredType;
    internal static string ClientType_MissingMimeTypeProperty;
    internal static string ClientType_MissingMimeTypeDataProperty;
    internal static string ClientType_MissingMediaEntryProperty;
    internal static string ClientType_NoSettableFields;
    internal static string ClientType_MultipleImplementationNotSupported;
    internal static string ClientType_NullOpenProperties;
    internal static string ClientType_Ambiguous;
    internal static string ClientType_UnsupportedType;
    internal static string ClientType_MultiValueOfMultiValueNotSupported;
    internal static string ClientType_MultiValuePropertyNotSupportedInV2AndBelow;
    internal static string WebUtil_MultiValueTypeNotSupportedInV2OrBelow;
    internal static string DataServiceException_GeneralError;
    internal static string Deserialize_GetEnumerator;
    internal static string Deserialize_Current;
    internal static string Deserialize_MixedTextWithComment;
    internal static string Deserialize_ExpectingSimpleValue;
    internal static string Deserialize_NotApplicationXml;
    internal static string Deserialize_MismatchAtomLinkLocalSimple;
    internal static string Deserialize_MismatchAtomLinkFeedPropertyNotCollection;
    internal static string Deserialize_MismatchAtomLinkEntryPropertyIsCollection;
    internal static string Deserialize_UnknownMimeTypeSpecified;
    internal static string Deserialize_ExpectedEmptyMediaLinkEntryContent;
    internal static string Deserialize_ContentPlusPropertiesNotAllowed;
    internal static string Deserialize_NoLocationHeader;
    internal static string Deserialize_ServerException;
    internal static string Deserialize_MissingIdElement;
    internal static string Deserialize_MismatchAtomMultiValueTypeLocalCollection;
    internal static string Deserialize_MultipleValuesForNonMultiValueProperty;
    internal static string MultiValue_NullMultiValueNotSupported;
    internal static string MultiValue_NullMultiValueItemsNotSupported;
    internal static string MultiValue_ComplexTypesInMultiValueOfPrimitiveTypesNotAllowed;
    internal static string MultiValue_PrimitiveTypesInMultiValueOfComplexTypesNotAllowed;
    internal static string EntityDescriptor_MissingSelfEditLink;
    internal static string EpmClientType_PropertyIsComplex;
    internal static string EpmClientType_PropertyIsPrimitive;
    internal static string EpmSourceTree_InvalidSourcePath;
    internal static string EpmSourceTree_DuplicateEpmAttrsWithSameSourceName;
    internal static string EpmSourceTree_EndsWithNonPrimitiveType;
    internal static string EpmSourceTree_InaccessiblePropertyOnType;
    internal static string EpmSourceTree_PropertiesFromSameMultiValueMappedToDifferentTopLevelElements;
    internal static string EpmSourceTree_PropertiesFromSameMultiValueMappedWithDifferetKeepInContent;
    internal static string EpmSourceTree_NotAllMultiValueItemPropertiesMapped;
    internal static string EpmSourceTree_NestedMultiValue;
    internal static string EpmSourceTree_MultiValueNotAllowedInCustomMapping;
    internal static string EpmSourceTree_MultiValueOfPrimitiveMappedToLinkWithoutCriteria;
    internal static string EpmSourceTree_MultiValueOfComplexTypesDifferentConditionalMapping;
    internal static string EpmSourceTree_ConditionalMappingInvalidLinkRelCriteriaValue;
    internal static string EpmSourceTree_ConditionalMappingInvalidCategorySchemeCriteriaValue;
    internal static string EpmSourceTree_NonStringPropertyMappedToConditionAttribute;
    internal static string EpmSourceTree_NamedStreamCannotBeMapped;
    internal static string EpmTargetTree_InvalidTargetPath;
    internal static string EpmTargetTree_AttributeInMiddle;
    internal static string EpmTargetTree_DuplicateEpmAttrsWithSameTargetName;
    internal static string EpmTargetTree_TwoMultiValuePropertiesMappedToTheSameTopLevelElement;
    internal static string EpmTargetTree_TwoMultiValuePropertiesMappedToTheSameConditionalTopLevelElement;
    internal static string EpmTargetTree_MultiValueAndNormalPropertyMappedToTheSameConditionalTopLevelElement;
    internal static string EpmTargetTree_MultiValueAndNormalPropertyMappedToTheSameTopLevelElement;
    internal static string EpmTargetTree_MultiValueMappedToNonRepeatableAtomElement;
    internal static string EpmTargetTree_ConditionalMappingToCriteriaAttribute;
    internal static string EpmTargetTree_ConditionalMappingToNonConditionalSyndicationItem;
    internal static string EpmTargetTree_ConditionalMappingCategoryTermIsRequired;
    internal static string EpmTargetTree_ConditionalMappingLinkHrefIsRequired;
    internal static string EpmTargetTree_ConditionalMappingRelIsRequiredForNonConditional;
    internal static string EntityPropertyMapping_EpmAttribute;
    internal static string EntityPropertyMapping_TargetNamespaceUriNotValid;
    internal static string EntityPropertyMapping_LeadingAndTrialingWhitespacesNotAllowedOnCriteriaValue;
    internal static string EpmMultiValue_NullsOnSyndicationElements;
    internal static string EpmMultiValue_EmptyValueForAtomPersonEmailOrUri;
    internal static string Epm_NullValueForAttributeTarget;
    internal static string Epm_InvalidValueForLinkRelCriteriaAttribute;
    internal static string Epm_InvalidValueForCategorySchemeCriteriaAttribute;
    internal static string EpmSerializer_NullPropertyMappedToElementWhichDoesntAllowIt;
    internal static string EpmSerializer_DateTimePropertyHasNullValue;
    internal static string HttpProcessUtility_ContentTypeMissing;
    internal static string HttpProcessUtility_MediaTypeMissingValue;
    internal static string HttpProcessUtility_MediaTypeRequiresSemicolonBeforeParameter;
    internal static string HttpProcessUtility_MediaTypeRequiresSlash;
    internal static string HttpProcessUtility_MediaTypeRequiresSubType;
    internal static string HttpProcessUtility_MediaTypeUnspecified;
    internal static string HttpProcessUtility_EncodingNotSupported;
    internal static string HttpProcessUtility_EscapeCharWithoutQuotes;
    internal static string HttpProcessUtility_EscapeCharAtEnd;
    internal static string HttpProcessUtility_ClosingQuoteNotFound;
    internal static string MaterializeFromAtom_CountNotPresent;
    internal static string MaterializeFromAtom_CountFormatError;
    internal static string MaterializeFromAtom_TopLevelLinkNotAvailable;
    internal static string MaterializeFromAtom_CollectionKeyNotPresentInLinkTable;
    internal static string MaterializeFromAtom_GetNestLinkForFlatCollection;
    internal static string Serializer_NullKeysAreNotSupported;
    internal static string Serializer_TypeMismatchInMultiValue;
    internal static string Serializer_LoopsNotAllowedInComplexTypes;
    internal static string Serializer_EmptyMultiValueMappedToAuthor;
    internal static string Serializer_UpdateNonConditionalCriteriaAttributeValueSameAsCondition;
    internal static string Util_EmptyString;
    internal static string Util_EmptyArray;
    internal static string Util_NullArrayElement;
    internal static string ALinq_UnsupportedExpression;
    internal static string ALinq_CouldNotConvert;
    internal static string ALinq_MethodNotSupported;
    internal static string ALinq_UnaryNotSupported;
    internal static string ALinq_BinaryNotSupported;
    internal static string ALinq_ConstantNotSupported;
    internal static string ALinq_TypeBinaryNotSupported;
    internal static string ALinq_ConditionalNotSupported;
    internal static string ALinq_ParameterNotSupported;
    internal static string ALinq_MemberAccessNotSupported;
    internal static string ALinq_LambdaNotSupported;
    internal static string ALinq_NewNotSupported;
    internal static string ALinq_MemberInitNotSupported;
    internal static string ALinq_ListInitNotSupported;
    internal static string ALinq_NewArrayNotSupported;
    internal static string ALinq_InvocationNotSupported;
    internal static string ALinq_QueryOptionsOnlyAllowedOnLeafNodes;
    internal static string ALinq_CantExpand;
    internal static string ALinq_CantCastToUnsupportedPrimitive;
    internal static string ALinq_CantNavigateWithoutKeyPredicate;
    internal static string ALinq_CanOnlyApplyOneKeyPredicate;
    internal static string ALinq_CantTranslateExpression;
    internal static string ALinq_TranslationError;
    internal static string ALinq_CantAddQueryOption;
    internal static string ALinq_CantAddDuplicateQueryOption;
    internal static string ALinq_CantAddAstoriaQueryOption;
    internal static string ALinq_CantAddQueryOptionStartingWithDollarSign;
    internal static string ALinq_CantReferToPublicField;
    internal static string ALinq_QueryOptionsOnlyAllowedOnSingletons;
    internal static string ALinq_QueryOptionOutOfOrder;
    internal static string ALinq_CannotAddCountOption;
    internal static string ALinq_CannotAddCountOptionConflict;
    internal static string ALinq_ProjectionOnlyAllowedOnLeafNodes;
    internal static string ALinq_ProjectionCanOnlyHaveOneProjection;
    internal static string ALinq_ProjectionMemberAssignmentMismatch;
    internal static string ALinq_InvalidExpressionInNavigationPath;
    internal static string ALinq_ExpressionNotSupportedInProjectionToEntity;
    internal static string ALinq_ExpressionNotSupportedInProjection;
    internal static string ALinq_CannotConstructKnownEntityTypes;
    internal static string ALinq_CannotCreateConstantEntity;
    internal static string ALinq_PropertyNamesMustMatchInProjections;
    internal static string ALinq_CanOnlyProjectTheLeaf;
    internal static string ALinq_CannotProjectWithExplicitExpansion;
    internal static string ALinq_MultiValuePropertyNotSupportedInOrderBy;
    internal static string ALinq_MultiValuePropertyNotSupportedInWhere;
    internal static string ALinq_MultiValueMemberAccessNotSupportedInNavigation;
    internal static string ALinq_LinkPropertyNotSupportedInExpression;
    internal static string ALinq_OfTypeArgumentNotAvailable;
    internal static string ALinq_CannotUseTypeFiltersMultipleTimes;
    internal static string ALinq_ExpressionCannotEndWithTypeAs;
    internal static string ALinq_TypeAsNotSupportedForMaxDataServiceVersionLessThan3;
    internal static string ALinq_MethodNotSupportedForMaxDataServiceVersionLessThanX;
    internal static string ALinq_TypeAsArgumentNotEntityType;
    internal static string ALinq_InvalidSourceForAnyAll;
    internal static string ALinq_AnyAllNotSupportedInOrderBy;
    internal static string DSKAttribute_MustSpecifyAtleastOnePropertyName;
    internal static string DataServiceCollection_LoadRequiresTargetCollectionObserved;
    internal static string DataServiceCollection_CannotStopTrackingChildCollection;
    internal static string DataServiceCollection_OperationForTrackedOnly;
    internal static string DataServiceCollection_CannotDetermineContextFromItems;
    internal static string DataServiceCollection_InsertIntoTrackedButNotLoadedCollection;
    internal static string DataBinding_DataServiceCollectionArgumentMustHaveEntityType;
    internal static string DataBinding_CollectionPropertySetterValueHasObserver;
    internal static string DataBinding_CollectionChangedUnknownActionCollection;
    internal static string DataBinding_CollectionChangedUnknownActionMultiValue;
    internal static string DataBinding_BindingOperation_DetachedSource;
    internal static string DataBinding_BindingOperation_ArrayItemNull;
    internal static string DataBinding_BindingOperation_ArrayItemNotEntity;
    internal static string DataBinding_Util_UnknownEntitySetName;
    internal static string DataBinding_EntityAlreadyInCollection;
    internal static string DataBinding_NotifyPropertyChangedNotImpl;
    internal static string DataBinding_NotifyCollectionChangedNotImpl;
    internal static string DataBinding_ComplexObjectAssociatedWithMultipleEntities;
    internal static string DataBinding_MultiValueAssociatedWithMultipleEntities;
    internal static string XmlWrappingReader_TopLevelXmlBaseMustBeAbsolute;
    internal static string AtomParser_FeedUnexpected;
    internal static string AtomParser_PagingLinkOutsideOfFeed;
    internal static string AtomParser_ManyFeedCounts;
    internal static string AtomParser_FeedCountNotUnderFeed;
    internal static string AtomParser_UnexpectedContentUnderExpandedLink;
    internal static string AtomMaterializer_CannotAssignNull;
    internal static string AtomMaterializer_DuplicatedNextLink;
    internal static string AtomMaterializer_EntryIntoCollectionMismatch;
    internal static string AtomMaterializer_EntryToAccessIsNull;
    internal static string AtomMaterializer_EntryToInitializeIsNull;
    internal static string AtomMaterializer_ProjectEntityTypeMismatch;
    internal static string AtomMaterializer_LinksMissingHref;
    internal static string AtomMaterializer_PropertyMissing;
    internal static string AtomMaterializer_PropertyNotExpectedEntry;
    internal static string AtomMaterializer_DataServiceCollectionNotSupportedForNonEntities;
    internal static string AtomMaterializer_NoParameterlessCtorForMultiValueProperty;
    internal static string AtomMaterializer_InvalidMultiValueItem;
    internal static string AtomMaterializer_InvalidMultiValueProperty;
    internal static string AtomMaterializer_InvalidEntityType;
    internal static string AtomMaterializer_InvalidNonEntityType;
    internal static string Context_SendingRequestEventArgsNotHttp;
    internal static string DataServiceRequest_FailGetCount;
    private static TextRes loader;
    private ResourceManager resources;
    private static CultureInfo Culture { get; }
    public static ResourceManager Resources { get; }
    private static TextRes();
    private static TextRes GetLoader();
    private static CultureInfo get_Culture();
    public static ResourceManager get_Resources();
    public static string GetString(string name, Object[] args);
    public static string GetString(string name);
    public static string GetString(string name, Boolean& usedFallback);
    public static object GetObject(string name);
}
[AttributeUsageAttribute("32767")]
internal class System.Data.Services.Client.TextResCategoryAttribute : CategoryAttribute {
    public TextResCategoryAttribute(string category);
    protected virtual string GetLocalizedString(string value);
}
[AttributeUsageAttribute("32767")]
internal class System.Data.Services.Client.TextResDescriptionAttribute : DescriptionAttribute {
    private bool replaced;
    public string Description { get; }
    public TextResDescriptionAttribute(string description);
    public virtual string get_Description();
}
internal class System.Data.Services.Client.TimeSpanTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
public enum System.Data.Services.Client.TrackingMode : Enum {
    public int value__;
    public static TrackingMode None;
    public static TrackingMode AutoChangeTracking;
}
internal static class System.Data.Services.Client.TypeSystem : object {
    private static string VisualBasicAssemblyFullName;
    private static Dictionary`2<MethodInfo, string> expressionMethodMap;
    private static Dictionary`2<string, string> expressionVBMethodMap;
    private static Dictionary`2<PropertyInfo, MethodInfo> propertiesAsMethodsMap;
    private static TypeSystem();
    internal static bool TryGetQueryOptionMethod(MethodInfo mi, String& methodName);
    internal static bool TryGetPropertyAsMethod(PropertyInfo pi, MethodInfo& mi);
    internal static Type GetElementType(Type seqType);
    internal static bool IsPrivate(PropertyInfo pi);
    internal static Type FindIEnumerable(Type seqType);
}
internal class System.Data.Services.Client.UInt16TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class System.Data.Services.Client.UInt32TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class System.Data.Services.Client.UInt64TypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal static class System.Data.Services.Client.UriHelper : object {
    internal static char FORWARDSLASH;
    internal static char LEFTPAREN;
    internal static char RIGHTPAREN;
    internal static char QUESTIONMARK;
    internal static char AMPERSAND;
    internal static char EQUALSSIGN;
    internal static char DOLLARSIGN;
    internal static char SPACE;
    internal static char COMMA;
    internal static char COLON;
    internal static char QUOTE;
    internal static char ASTERISK;
    internal static string OPTIONTOP;
    internal static string OPTIONSKIP;
    internal static string OPTIONORDERBY;
    internal static string OPTIONFILTER;
    internal static string OPTIONDESC;
    internal static string OPTIONEXPAND;
    internal static string OPTIONCOUNT;
    internal static string OPTIONSELECT;
    internal static string COUNTALL;
    internal static string COUNT;
    internal static string AND;
    internal static string OR;
    internal static string EQ;
    internal static string NE;
    internal static string LT;
    internal static string LE;
    internal static string GT;
    internal static string GE;
    internal static string ADD;
    internal static string SUB;
    internal static string MUL;
    internal static string DIV;
    internal static string MOD;
    internal static string NEGATE;
    internal static string NOT;
    internal static string NULL;
    internal static string ISOF;
    internal static string CAST;
    internal static string GetTypeNameForUri(Type type, DataServiceContext context);
    internal static string GetEntityTypeNameForUriAndValidateMaxProtocolVersion(Type type, DataServiceContext context, Version& uriVersion);
}
internal class System.Data.Services.Client.UriResolver : object {
    private Uri baseUri;
    private Func`2<string, Uri> resolveEntitySet;
    private Uri baseUriWithSlash;
    [CompilerGeneratedAttribute]
private static Func`1<string> CS$<>9__CachedAnonymousMethodDelegate1;
    public Func`2<string, Uri> ResolveEntitySet { get; }
    private UriResolver(Uri baseUri, Func`2<string, Uri> resolveEntitySet);
    public Func`2<string, Uri> get_ResolveEntitySet();
    internal static UriResolver CreateFromBaseUri(Uri baseUri, string parameterName);
    internal UriResolver CloneWithOverrideValue(Uri overrideBaseUriValue, string parameterName);
    internal UriResolver CloneWithOverrideValue(Func`2<string, Uri> overrideResolveEntitySetValue);
    internal Uri GetEntitySetUri(string entitySetName);
    internal Uri GetRawBaseUriValue();
    internal Uri GetBaseUriWithSlash();
    internal Uri GetBaseUriWithSlash(Func`1<string> getErrorMessage);
    internal Uri CreateAbsoluteUriIfNeeded(Uri requestUri);
    private static void ConvertToAbsoluteAndValidateBaseUri(Uri& baseUri, string parameterName);
    private static bool IsValidBaseUri(Uri baseUri);
    private static Uri ConvertToAbsoluteUri(Uri baseUri);
    private Uri GetEntitySetUriFromResolver(string entitySetName);
    [CompilerGeneratedAttribute]
private static string <GetBaseUriWithSlash>b__0();
}
internal class System.Data.Services.Client.UriTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal static class System.Data.Services.Client.UriUtil : object {
    internal static string GetNameFromAtomLinkRelationAttribute(string value, string namespacePrefix);
}
internal class System.Data.Services.Client.UriWriter : DataServiceALinqExpressionVisitor {
    private DataServiceContext context;
    private StringBuilder uriBuilder;
    private Version uriVersion;
    private ResourceSetExpression leafResourceSet;
    private UriWriter(DataServiceContext context);
    internal static void Translate(DataServiceContext context, bool addTrailingParens, Expression e, Uri& uri, Version& version);
    internal virtual Expression VisitMethodCall(MethodCallExpression m);
    internal virtual Expression VisitUnary(UnaryExpression u);
    internal virtual Expression VisitBinary(BinaryExpression b);
    internal virtual Expression VisitConstant(ConstantExpression c);
    internal virtual Expression VisitTypeIs(TypeBinaryExpression b);
    internal virtual Expression VisitConditional(ConditionalExpression c);
    internal virtual Expression VisitParameter(ParameterExpression p);
    internal virtual Expression VisitMemberAccess(MemberExpression m);
    internal virtual Expression VisitLambda(LambdaExpression lambda);
    internal virtual NewExpression VisitNew(NewExpression nex);
    internal virtual Expression VisitMemberInit(MemberInitExpression init);
    internal virtual Expression VisitListInit(ListInitExpression init);
    internal virtual Expression VisitNewArray(NewArrayExpression na);
    internal virtual Expression VisitInvocation(InvocationExpression iv);
    internal virtual Expression VisitNavigationPropertySingletonExpression(NavigationPropertySingletonExpression npse);
    internal virtual Expression VisitResourceSetExpression(ResourceSetExpression rse);
    internal void VisitQueryOptions(ResourceExpression re);
    internal void VisitQueryOptionExpression(SkipQueryOptionExpression sqoe);
    internal void VisitQueryOptionExpression(TakeQueryOptionExpression tqoe);
    internal void VisitQueryOptionExpression(FilterQueryOptionExpression fqoe);
    internal void VisitQueryOptionExpression(OrderByQueryOptionExpression oboe);
    internal void VisitExpandOptions(List`1<string> paths);
    internal void VisitProjectionPaths(List`1<string> paths);
    internal void VisitCountOptions();
    internal void VisitCustomQueryOptions(Dictionary`2<ConstantExpression, ConstantExpression> options);
    private string ExpressionToString(Expression expression);
}
internal static class System.Data.Services.Client.Util : object {
    internal static string VersionSuffix;
    internal static string CodeGeneratorToolName;
    internal static Version DataServiceVersionEmpty;
    internal static Version DataServiceVersion1;
    internal static Version DataServiceVersion2;
    internal static Version DataServiceVersion3;
    internal static Version[] SupportedResponseVersions;
    internal static Char[] ForwardSlash;
    private static Char[] whitespaceForTracing;
    private static Util();
    internal static Version GetVersionFromMaxProtocolVersion(DataServiceProtocolVersion maxProtocolVersion);
    [ConditionalAttribute("DEBUG")]
internal static void DebugInjectFault(string state);
    internal static T CheckArgumentNull(T value, string parameterName);
    internal static void CheckArgumentNullAndEmpty(string value, string parameterName);
    internal static void CheckArgumentNotEmpty(T[] value, string parameterName);
    internal static MergeOption CheckEnumerationValue(MergeOption value, string parameterName);
    internal static DataServiceProtocolVersion CheckEnumerationValue(DataServiceProtocolVersion value, string parameterName);
    internal static Char[] GetWhitespaceForTracing(int depth);
    internal static Uri ForceNonSlashTerminatedUri(Uri uri);
    internal static Uri ForceSlashTerminatedUri(Uri uri);
    internal static Uri CreateUri(string value, UriKind kind);
    internal static Uri CreateUri(Uri baseUri, Uri requestUri);
    internal static void Dispose(T& disposable);
    internal static void Dispose(T disposable);
    internal static bool IsKnownClientExcption(Exception ex);
    internal static T NullCheck(T value, InternalError errorcode);
    internal static bool AreSame(string value1, string value2);
    internal static bool AreSame(XmlReader reader, string localName, string namespaceUri);
    internal static bool DoesNullAttributeSayTrue(XmlReader reader);
    internal static void SetNextLinkForCollection(object collection, DataServiceQueryContinuation continuation);
    internal static object ActivatorCreateInstance(Type type, Object[] arguments);
    internal static object ConstructorInvoke(ConstructorInfo constructor, Object[] arguments);
    internal static bool IsFlagSet(SaveChangesOptions options, SaveChangesOptions flag);
    internal static bool IncludeLinkState(EntityStates x);
    [ConditionalAttribute("TRACE")]
internal static void TraceElement(XmlReader reader, TextWriter writer);
    [ConditionalAttribute("TRACE")]
internal static void TraceEndElement(XmlReader reader, TextWriter writer, bool indent);
    [ConditionalAttribute("TRACE")]
internal static void TraceText(TextWriter writer, string value);
    internal static Uri AppendBaseUriAndRelativeUri(Uri baseUri, Uri relativeUri);
}
internal enum System.Data.Services.Client.VertexColor : Enum {
    public int value__;
    public static VertexColor White;
    public static VertexColor Gray;
    public static VertexColor Black;
}
internal static class System.Data.Services.Client.WebUtil : object {
    private static Nullable`1<bool> dataServiceCollectionAvailable;
    private static MethodInfo getDefaultValueMethodInfo;
    [CompilerGeneratedAttribute]
private static Func`2<Type, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    [CompilerGeneratedAttribute]
private static Func`2<MemberInfo, bool> CS$<>9__CachedAnonymousMethodDelegate3;
    private static bool DataServiceCollectionAvailable { get; }
    private static WebUtil();
    private static bool get_DataServiceCollectionAvailable();
    internal static long CopyStream(Stream input, Stream output, Byte[]& refBuffer);
    internal static void GetHttpWebResponse(InvalidOperationException exception, HttpWebResponse& response);
    internal static bool SuccessStatusCode(HttpStatusCode status);
    internal static Dictionary`2<string, string> WrapResponseHeaders(HttpWebResponse response);
    internal static bool IsCLRTypeMultiValue(Type type, DataServiceProtocolVersion maxProtocolVersion);
    internal static bool IsWireTypeMultiValue(string wireTypeName);
    internal static string GetMultiValueItemWireTypeName(string wireTypeName);
    internal static Type GetBackingTypeForMultiValueProperty(Type multiValuePropertyType, Type multiValueItemType);
    internal static void ValidateMultiValuePropertyValue(Type multiValueItemType, object propertyValue, string propertyName);
    internal static void ValidateMultiValueItem(object itemValue);
    internal static void ValidatePrimitiveMultiValueItem(object itemValue, string propertyName, Type multiValueItemType);
    internal static void ValidateComplexMultiValueItem(object itemValue, string propertyName, Type multiValueItemType);
    internal static void ValidateIdentityValue(string identity);
    internal static Uri ValidateLocationHeader(string location);
    internal static string GetPreferHeaderAndRequestVersion(DataServiceResponsePreference responsePreference, Version& requestVersion);
    internal static void RaiseVersion(Version& version, Version minimalVersion);
    internal static void ApplyHeadersToRequest(Dictionary`2<string, string> headers, HttpWebRequest request, bool ignoreAcceptHeader);
    internal static bool IsDataServiceCollectionType(Type t);
    internal static Type GetDataServiceCollectionOfT(Type[] typeArguments);
    internal static HttpWebResponse GetResponse(HttpWebRequest request, DataServiceContext context, bool handleWebException);
    internal static Stream GetRequestStream(HttpWebRequest request, DataServiceContext context);
    internal static Stream GetResponseStream(HttpWebResponse response, DataServiceContext context);
    internal static IAsyncResult BeginGetResponse(HttpWebRequest request, AsyncCallback callback, object state);
    internal static HttpWebResponse EndGetResponse(HttpWebRequest request, IAsyncResult asyncResult, DataServiceContext context);
    internal static IAsyncResult BeginGetRequestStream(HttpWebRequest request, AsyncCallback callback, object state);
    internal static Stream EndGetRequestStream(HttpWebRequest request, IAsyncResult asyncResult, DataServiceContext context);
    internal static object GetDefaultValue(Type type);
    internal static T GetDefaultValue();
    private static HttpWebResponse GetResponseHelper(HttpWebRequest request, DataServiceContext context, IAsyncResult asyncResult, bool handleWebException);
    private static Dictionary`2<string, string> WrapHttpHeaders(WebHeaderCollection headers);
    private static Type GetDataServiceCollectionOfTType();
    [CompilerGeneratedAttribute]
private static bool <ValidateMultiValuePropertyValue>b__0(Type t);
    [CompilerGeneratedAttribute]
private static bool <.cctor>b__2(MemberInfo m);
}
internal class System.Data.Services.Client.XDocumentTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
internal class System.Data.Services.Client.XElementTypeConverter : PrimitiveTypeConverter {
    internal virtual object Parse(string text);
    internal virtual string ToString(object instance);
}
[DebuggerDisplayAttribute("XmlAtomErrorReader {NodeType} {Name} {Value}")]
internal class System.Data.Services.Client.Xml.XmlAtomErrorReader : XmlWrappingReader {
    internal XmlAtomErrorReader(XmlReader baseReader);
    public virtual bool Read();
    internal static string ReadElementString(XmlReader reader, bool checkNullAttribute);
    private static string ReadErrorMessage(XmlReader reader);
}
internal class System.Data.Services.Client.Xml.XmlWrappingReader : XmlReader {
    private XmlReader reader;
    private IXmlLineInfo readerAsIXmlLineInfo;
    private Stack`1<XmlBaseState> xmlBaseStack;
    public int AttributeCount { get; }
    public string BaseURI { get; }
    public bool CanResolveEntity { get; }
    public int Depth { get; }
    public bool EOF { get; }
    public bool HasAttributes { get; }
    public bool HasValue { get; }
    public bool IsDefault { get; }
    public bool IsEmptyElement { get; }
    public int LineNumber { get; }
    public int LinePosition { get; }
    public string LocalName { get; }
    public string Name { get; }
    public string NamespaceURI { get; }
    public XmlNameTable NameTable { get; }
    public XmlNodeType NodeType { get; }
    public string Prefix { get; }
    public char QuoteChar { get; }
    public ReadState ReadState { get; }
    public IXmlSchemaInfo SchemaInfo { get; }
    public XmlReaderSettings Settings { get; }
    public string Value { get; }
    public Type ValueType { get; }
    public string XmlLang { get; }
    public XmlSpace XmlSpace { get; }
    internal Uri ParentBaseURI { get; }
    protected XmlReader Reader { get; protected set; }
    internal XmlWrappingReader(XmlReader baseReader);
    public virtual int get_AttributeCount();
    public virtual string get_BaseURI();
    public virtual bool get_CanResolveEntity();
    public virtual int get_Depth();
    public virtual bool get_EOF();
    public virtual bool get_HasAttributes();
    public virtual bool get_HasValue();
    public virtual bool get_IsDefault();
    public virtual bool get_IsEmptyElement();
    public virtual int get_LineNumber();
    public virtual int get_LinePosition();
    public virtual string get_LocalName();
    public virtual string get_Name();
    public virtual string get_NamespaceURI();
    public virtual XmlNameTable get_NameTable();
    public virtual XmlNodeType get_NodeType();
    public virtual string get_Prefix();
    public virtual char get_QuoteChar();
    public virtual ReadState get_ReadState();
    public virtual IXmlSchemaInfo get_SchemaInfo();
    public virtual XmlReaderSettings get_Settings();
    public virtual string get_Value();
    public virtual Type get_ValueType();
    public virtual string get_XmlLang();
    public virtual XmlSpace get_XmlSpace();
    internal Uri get_ParentBaseURI();
    protected XmlReader get_Reader();
    protected void set_Reader(XmlReader value);
    public virtual void Close();
    public virtual string GetAttribute(int i);
    public virtual string GetAttribute(string name);
    public virtual string GetAttribute(string name, string namespaceURI);
    public virtual bool HasLineInfo();
    public virtual string LookupNamespace(string prefix);
    public virtual void MoveToAttribute(int i);
    public virtual bool MoveToAttribute(string name);
    public virtual bool MoveToAttribute(string name, string ns);
    public virtual bool MoveToElement();
    public virtual bool MoveToFirstAttribute();
    public virtual bool MoveToNextAttribute();
    public virtual bool Read();
    public virtual bool ReadAttributeValue();
    public virtual void ResolveEntity();
    public virtual void Skip();
    internal static XmlWrappingReader CreateReader(Uri parentBaseUri, XmlReader newReader);
    protected virtual void Dispose(bool disposing);
    private static void SetParentBaseUri(Uri parentBaseUri, XmlWrappingReader reader);
    private void PopXmlBase();
}
internal static class System.Data.Services.Client.XmlConstants : object {
    internal static string ClrServiceInitializationMethodName;
    internal static string HttpContentID;
    internal static string HttpContentLength;
    internal static string HttpContentType;
    internal static string HttpContentDisposition;
    internal static string HttpDataServiceVersion;
    internal static string HttpMaxDataServiceVersion;
    internal static string HttpPrefer;
    internal static string HttpPreferReturnNoContent;
    internal static string HttpPreferReturnContent;
    internal static string HttpPreferenceApplied;
    internal static string HttpCacheControlNoCache;
    internal static string HttpCharsetParameter;
    internal static string HttpMethodGet;
    internal static string HttpMethodPost;
    internal static string HttpMethodPut;
    internal static string HttpMethodDelete;
    internal static string HttpMethodMerge;
    internal static string HttpMethodPatch;
    internal static string HttpQueryStringExpand;
    internal static string HttpQueryStringFilter;
    internal static string HttpQueryStringOrderBy;
    internal static string HttpQueryStringSkip;
    internal static string HttpQueryStringTop;
    internal static string HttpQueryStringInlineCount;
    internal static string HttpQueryStringSkipToken;
    internal static string SkipTokenPropertyPrefix;
    internal static string HttpQueryStringValueCount;
    internal static string HttpQueryStringSelect;
    internal static string HttpQValueParameter;
    internal static string HttpXMethod;
    internal static string HttpRequestAccept;
    internal static string HttpRequestAcceptCharset;
    internal static string HttpRequestIfMatch;
    internal static string HttpRequestIfNoneMatch;
    internal static string HttpMultipartBoundary;
    internal static string XContentTypeOptions;
    internal static string XContentTypeOptionNoSniff;
    internal static string HttpMultipartBoundaryBatch;
    internal static string HttpMultipartBoundaryChangeSet;
    internal static string HttpResponseAllow;
    internal static string HttpResponseCacheControl;
    internal static string HttpResponseETag;
    internal static string HttpResponseLocation;
    internal static string HttpDataServiceId;
    internal static string HttpResponseStatusCode;
    internal static string HttpMultipartBoundaryBatchResponse;
    internal static string HttpMultipartBoundaryChangesetResponse;
    internal static string HttpContentTransferEncoding;
    internal static string HttpVersionInBatching;
    internal static string HttpAnyETag;
    internal static string HttpWeakETagPrefix;
    internal static string HttpAcceptCharset;
    internal static string HttpCookie;
    internal static string HttpSlug;
    internal static string MimeAny;
    internal static string MimeApplicationAtom;
    internal static string MimeApplicationAtomService;
    internal static string MimeApplicationJson;
    internal static string MimeApplicationOctetStream;
    internal static string MimeApplicationHttp;
    internal static string MimeApplicationType;
    internal static string MimeApplicationXml;
    internal static string MimeJsonSubType;
    internal static string MimeMetadata;
    internal static string MimeMultiPartMixed;
    internal static string MimeTextPlain;
    internal static string MimeTextType;
    internal static string MimeTextXml;
    internal static string MimeXmlSubType;
    internal static string BatchRequestContentTransferEncoding;
    internal static string LinkMimeTypeFeed;
    internal static string LinkMimeTypeEntry;
    internal static string Utf8Encoding;
    internal static string MimeTypeUtf8Encoding;
    internal static string UriHttpAbsolutePrefix;
    internal static string UriMetadataSegment;
    internal static string UriValueSegment;
    internal static string UriBatchSegment;
    internal static string UriLinkSegment;
    internal static string UriCountSegment;
    internal static string UriRowCountAllOption;
    internal static string UriRowCountOffOption;
    internal static string AnyMethodName;
    internal static string AllMethodName;
    internal static string ImplicitFilterParameter;
    internal static string WcfBinaryElementName;
    internal static string AtomNamespacePrefix;
    internal static string AtomContentElementName;
    internal static string AtomEntryElementName;
    internal static string AtomFeedElementName;
    internal static string AtomAuthorElementName;
    internal static string AtomContributorElementName;
    internal static string AtomCategoryElementName;
    internal static string AtomLinkElementName;
    internal static string AtomCategorySchemeAttributeName;
    internal static string AtomCategoryTermAttributeName;
    internal static string AtomIdElementName;
    internal static string AtomLinkRelationAttributeName;
    internal static string AtomContentSrcAttributeName;
    internal static string AtomLinkNextAttributeString;
    internal static string MetadataAttributeEpmContentKind;
    internal static string MetadataAttributeEpmKeepInContent;
    internal static string MetadataAttributeEpmNsPrefix;
    internal static string MetadataAttributeEpmNsUri;
    internal static string MetadataAttributeEpmTargetPath;
    internal static string MetadataAttributeEpmSourcePath;
    internal static string MetadataAttributeEpmCriteriaValue;
    internal static string SyndAuthorEmail;
    internal static string SyndAuthorName;
    internal static string SyndAuthorUri;
    internal static string SyndPublished;
    internal static string SyndRights;
    internal static string SyndSummary;
    internal static string SyndTitle;
    internal static string AtomUpdatedElementName;
    internal static string SyndContributorEmail;
    internal static string SyndContributorName;
    internal static string SyndContributorUri;
    internal static string SyndUpdated;
    internal static string SyndLinkHref;
    internal static string SyndLinkRel;
    internal static string SyndLinkType;
    internal static string SyndLinkHrefLang;
    internal static string SyndLinkTitle;
    internal static string SyndLinkLength;
    internal static string SyndCategoryTerm;
    internal static string SyndCategoryScheme;
    internal static string SyndCategoryLabel;
    internal static string SyndContentKindPlaintext;
    internal static string SyndContentKindHtml;
    internal static string SyndContentKindXHtml;
    internal static string AtomHRefAttributeName;
    internal static string AtomHRefLangAttributeName;
    internal static string AtomSummaryElementName;
    internal static string AtomNameElementName;
    internal static string AtomEmailElementName;
    internal static string AtomUriElementName;
    internal static string AtomPublishedElementName;
    internal static string AtomRightsElementName;
    internal static string AtomPublishingCollectionElementName;
    internal static string AtomPublishingServiceElementName;
    internal static string AtomPublishingWorkspaceDefaultValue;
    internal static string AtomPublishingWorkspaceElementName;
    internal static string AtomTitleElementName;
    internal static string AtomTypeAttributeName;
    internal static string AtomSelfRelationAttributeValue;
    internal static string AtomEditRelationAttributeValue;
    internal static string AtomEditMediaRelationAttributeValue;
    internal static string AtomAlternateRelationAttributeValue;
    internal static string AtomRelatedRelationAttributeValue;
    internal static string AtomEnclosureRelationAttributeValue;
    internal static string AtomViaRelationAttributeValue;
    internal static string AtomDescribedByRelationAttributeValue;
    internal static string AtomServiceRelationAttributeValue;
    internal static string AtomNullAttributeName;
    internal static string AtomETagAttributeName;
    internal static string AtomInlineElementName;
    internal static string AtomPropertiesElementName;
    internal static string RowCountElement;
    internal static string XmlCollectionItemElementName;
    internal static string XmlMultiValueItemElementName;
    internal static string XmlErrorElementName;
    internal static string XmlErrorCodeElementName;
    internal static string XmlErrorInnerElementName;
    internal static string XmlErrorInternalExceptionElementName;
    internal static string XmlErrorTypeElementName;
    internal static string XmlErrorStackTraceElementName;
    internal static string XmlErrorMessageElementName;
    internal static string XmlFalseLiteral;
    internal static string XmlTrueLiteral;
    internal static string XmlInfinityLiteral;
    internal static string XmlNaNLiteral;
    internal static string XmlBaseAttributeName;
    internal static string XmlLangAttributeName;
    internal static string XmlSpaceAttributeName;
    internal static string XmlSpacePreserveValue;
    internal static string XmlBaseAttributeNameWithPrefix;
    internal static string EdmV1Namespace;
    internal static string EdmV1dot1Namespace;
    internal static string EdmV1dot2Namespace;
    internal static string EdmV2Namespace;
    internal static string EdmV2dot2Namespace;
    internal static string EdmV3Namespace;
    internal static string DataWebNamespace;
    internal static string DataWebMetadataNamespace;
    internal static string DataWebRelatedNamespace;
    internal static string DataWebRelatedLinkNamespace;
    internal static string DataWebMediaResourceNamespace;
    internal static string DataWebMediaResourceEditNamespace;
    internal static string DataWebSchemeNamespace;
    internal static string AppNamespace;
    internal static string AtomNamespace;
    internal static string XmlnsNamespacePrefix;
    internal static string XmlNamespacePrefix;
    internal static string DataWebNamespacePrefix;
    internal static string DataWebMetadataNamespacePrefix;
    internal static string XmlNamespacesNamespace;
    internal static string EdmxNamespace;
    internal static string EdmxNamespacePrefix;
    internal static string IanaLinkRelationsNamespace;
    internal static string Association;
    internal static string AssociationSet;
    internal static string ComplexType;
    internal static string Dependent;
    internal static string EdmMultiValueTypeName;
    internal static string ActualEdmPropertyType;
    internal static string EdmTypeRefElementName;
    internal static string EdmMultiValueTypeFormat;
    internal static string EdmCollectionTypeFormat;
    internal static string EdmEntitySetAttributeName;
    internal static string EdmEntitySetPathAttributeName;
    internal static string EdmBindableAttributeName;
    internal static string EdmComposableAttributeName;
    internal static string EdmIdempotentAttributeName;
    internal static string EdmFunctionImportElementName;
    internal static string EdmModeAttributeName;
    internal static string EdmModeInValue;
    internal static string EdmParameterElementName;
    internal static string EdmReturnTypeAttributeName;
    internal static string End;
    internal static string EntityType;
    internal static string EntityContainer;
    internal static string Key;
    internal static string NavigationProperty;
    internal static string OnDelete;
    internal static string Principal;
    internal static string Property;
    internal static string PropertyRef;
    internal static string ReferentialConstraint;
    internal static string Role;
    internal static string Schema;
    internal static string EdmxElement;
    internal static string EdmxDataServicesElement;
    internal static string EdmxVersion;
    internal static string EdmxVersionValue;
    internal static string Action;
    internal static string BaseType;
    internal static string EntitySet;
    internal static string FromRole;
    internal static string Abstract;
    internal static string Multiplicity;
    internal static string Name;
    internal static string Namespace;
    internal static string ToRole;
    internal static string Type;
    internal static string Relationship;
    internal static string Many;
    internal static string One;
    internal static string ZeroOrOne;
    internal static string Nullable;
    internal static string ConcurrencyAttribute;
    internal static string ConcurrencyFixedValue;
    internal static string DataWebMimeTypeAttributeName;
    internal static string DataWebOpenTypeAttributeName;
    internal static string DataWebAccessHasStreamAttribute;
    internal static string DataWebAccessDefaultStreamPropertyValue;
    internal static string IsDefaultEntityContainerAttribute;
    internal static string ServiceOperationHttpMethodName;
    internal static string UriElementName;
    internal static string NextElementName;
    internal static string LinkCollectionElementName;
    internal static string JsonError;
    internal static string JsonErrorCode;
    internal static string JsonErrorInner;
    internal static string JsonErrorInternalException;
    internal static string JsonErrorMessage;
    internal static string JsonErrorStackTrace;
    internal static string JsonErrorType;
    internal static string JsonErrorValue;
    internal static string JsonMetadataString;
    internal static string JsonMediaResourceMetadataString;
    internal static string JsonUriString;
    internal static string JsonIdString;
    internal static string JsonAssociationUriString;
    internal static string JsonTypeString;
    internal static string JsonEditMediaString;
    internal static string JsonMediaSrcString;
    internal static string JsonContentTypeString;
    internal static string JsonMediaETagString;
    internal static string JsonDeferredString;
    internal static string JsonETagString;
    internal static string JsonRowCountString;
    internal static string JsonNextString;
    internal static string JsonResultsName;
    internal static string JsonPropertyMetadata;
    internal static string EdmNamespace;
    internal static string EdmBinaryTypeName;
    internal static string EdmBooleanTypeName;
    internal static string EdmByteTypeName;
    internal static string EdmDateTimeTypeName;
    internal static string EdmDecimalTypeName;
    internal static string EdmDoubleTypeName;
    internal static string EdmGuidTypeName;
    internal static string EdmSingleTypeName;
    internal static string EdmSByteTypeName;
    internal static string EdmInt16TypeName;
    internal static string EdmInt32TypeName;
    internal static string EdmInt64TypeName;
    internal static string EdmStringTypeName;
    internal static string EdmStreamTypeName;
    internal static string MultiValueTypeQualifier;
    internal static string EdmGeographyTypeName;
    internal static string EdmPointTypeName;
    internal static string EdmLineStringTypeName;
    internal static string DataServiceVersion1Dot0;
    internal static string DataServiceVersion2Dot0;
    internal static string DataServiceVersion3Dot0;
    internal static string DataServiceVersionCurrent;
    internal static int DataServiceVersionCurrentMajor;
    internal static int DataServiceVersionCurrentMinor;
    internal static string LiteralPrefixBinary;
    internal static string LiteralPrefixDateTime;
    internal static string LiteralPrefixGuid;
    internal static string XmlBinaryPrefix;
    internal static string XmlDecimalLiteralSuffix;
    internal static string XmlInt64LiteralSuffix;
    internal static string XmlSingleLiteralSuffix;
    internal static string XmlDoubleLiteralSuffix;
    internal static string NullLiteralInETag;
    internal static string MicrosoftDataServicesRequestUri;
    internal static string MicrosoftDataServicesRootUri;
    internal static string GeoRssNamespace;
    internal static string GeoRssPrefix;
    internal static string GmlNamespace;
    internal static string GmlPrefix;
    internal static string GeoRssWhere;
    internal static string GeoRssPoint;
    internal static string GeoRssLine;
    internal static string GmlPosition;
    internal static string GmlPositionList;
    internal static string GmlLineString;
}
[ExtensionAttribute]
internal static class System.Data.Services.Client.XmlUtil : object {
    private static NameTable CreateAtomNameTable();
    internal static XmlReader CreateXmlReader(Stream stream, Encoding encoding);
    internal static XmlWriterSettings CreateXmlWriterSettings(Encoding encoding);
    internal static XmlWriter CreateXmlWriterAndWriteProcessingInstruction(Stream stream, Encoding encoding);
    [ExtensionAttribute]
internal static string GetAttributeEx(XmlReader reader, string attributeName, string namespaceUri);
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.Common.DataServiceEntityAttribute : Attribute {
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.Common.DataServiceKeyAttribute : Attribute {
    private ReadOnlyCollection`1<string> keyNames;
    [CompilerGeneratedAttribute]
private static Func`2<string, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    public ReadOnlyCollection`1<string> KeyNames { get; }
    public DataServiceKeyAttribute(string keyName);
    public DataServiceKeyAttribute(String[] keyNames);
    public ReadOnlyCollection`1<string> get_KeyNames();
    [CompilerGeneratedAttribute]
private static bool <.ctor>b__0(string f);
}
public enum System.Data.Services.Common.DataServiceProtocolVersion : Enum {
    public int value__;
    public static DataServiceProtocolVersion V1;
    public static DataServiceProtocolVersion V2;
    public static DataServiceProtocolVersion V3;
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.Common.EntityPropertyMappingAttribute : Attribute {
    private string sourcePath;
    private string targetPath;
    private SyndicationItemProperty targetSyndicationItem;
    private SyndicationTextContentKind targetTextContentKind;
    private string targetNamespacePrefix;
    private string targetNamespaceUri;
    private bool keepInContent;
    private string criteriaValue;
    [CompilerGeneratedAttribute]
private bool <PutEmptyStringValuesInContent>k__BackingField;
    public string SourcePath { get; }
    public string TargetPath { get; }
    public SyndicationItemProperty TargetSyndicationItem { get; }
    public string TargetNamespacePrefix { get; }
    public string TargetNamespaceUri { get; }
    public SyndicationTextContentKind TargetTextContentKind { get; }
    public bool KeepInContent { get; }
    public string CriteriaValue { get; }
    internal bool PutEmptyStringValuesInContent { get; private set; }
    public EntityPropertyMappingAttribute(string sourcePath, SyndicationItemProperty targetSyndicationItem, SyndicationTextContentKind targetTextContentKind, bool keepInContent);
    public EntityPropertyMappingAttribute(string sourcePath, string targetPath, string targetNamespacePrefix, string targetNamespaceUri, bool keepInContent);
    public EntityPropertyMappingAttribute(string sourcePath, SyndicationItemProperty targetSyndicationItem, bool keepInContent, string criteriaValue);
    public string get_SourcePath();
    public string get_TargetPath();
    public SyndicationItemProperty get_TargetSyndicationItem();
    public string get_TargetNamespacePrefix();
    public string get_TargetNamespaceUri();
    public SyndicationTextContentKind get_TargetTextContentKind();
    public bool get_KeepInContent();
    public string get_CriteriaValue();
    [CompilerGeneratedAttribute]
internal bool get_PutEmptyStringValuesInContent();
    [CompilerGeneratedAttribute]
private void set_PutEmptyStringValuesInContent(bool value);
    internal static string SyndicationItemPropertyToPath(SyndicationItemProperty targetSyndicationItem);
    private static bool SerializeEmptyStringValuesInContent(SyndicationItemProperty property);
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.Common.EntitySetAttribute : Attribute {
    private string entitySet;
    public string EntitySet { get; }
    public EntitySetAttribute(string entitySet);
    public string get_EntitySet();
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.Common.HasStreamAttribute : Attribute {
}
[AttributeUsageAttribute("4")]
public class System.Data.Services.Common.NamedStreamAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; private set; }
    public NamedStreamAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
}
public enum System.Data.Services.Common.SyndicationItemProperty : Enum {
    public int value__;
    public static SyndicationItemProperty CustomProperty;
    public static SyndicationItemProperty AuthorEmail;
    public static SyndicationItemProperty AuthorName;
    public static SyndicationItemProperty AuthorUri;
    public static SyndicationItemProperty ContributorEmail;
    public static SyndicationItemProperty ContributorName;
    public static SyndicationItemProperty ContributorUri;
    public static SyndicationItemProperty Updated;
    public static SyndicationItemProperty Published;
    public static SyndicationItemProperty Rights;
    public static SyndicationItemProperty Summary;
    public static SyndicationItemProperty Title;
    public static SyndicationItemProperty CategoryLabel;
    public static SyndicationItemProperty CategoryScheme;
    public static SyndicationItemProperty CategoryTerm;
    public static SyndicationItemProperty LinkHref;
    public static SyndicationItemProperty LinkHrefLang;
    public static SyndicationItemProperty LinkLength;
    public static SyndicationItemProperty LinkRel;
    public static SyndicationItemProperty LinkTitle;
    public static SyndicationItemProperty LinkType;
}
public enum System.Data.Services.Common.SyndicationTextContentKind : Enum {
    public int value__;
    public static SyndicationTextContentKind Plaintext;
    public static SyndicationTextContentKind Html;
    public static SyndicationTextContentKind Xhtml;
}
