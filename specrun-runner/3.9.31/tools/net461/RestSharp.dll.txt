[ExtensionAttribute]
internal static class RestSharp.Authenticators.OAuth.Extensions.CollectionExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<T> AsEnumerable(T item);
    [ExtensionAttribute]
public static IEnumerable`1<T> And(T item, T other);
    [ExtensionAttribute]
public static IEnumerable`1<T> And(IEnumerable`1<T> items, T item);
    [ExtensionAttribute]
public static K TryWithKey(IDictionary`2<T, K> dictionary, T key);
    [ExtensionAttribute]
public static IEnumerable`1<T> ToEnumerable(Object[] items);
    [ExtensionAttribute]
public static void ForEach(IEnumerable`1<T> items, Action`1<T> action);
    [ExtensionAttribute]
public static void AddRange(IDictionary`2<string, string> collection, NameValueCollection range);
    [ExtensionAttribute]
public static string ToQueryString(NameValueCollection collection);
    [ExtensionAttribute]
public static string Concatenate(WebParameterCollection collection, string separator, string spacer);
}
[ExtensionAttribute]
internal static class RestSharp.Authenticators.OAuth.Extensions.OAuthExtensions : object {
    [ExtensionAttribute]
public static string ToRequestValue(OAuthSignatureMethod signatureMethod);
    [ExtensionAttribute]
public static OAuthSignatureMethod FromRequestValue(string signatureMethod);
    [ExtensionAttribute]
public static string HashWith(string input, HashAlgorithm algorithm);
}
[ExtensionAttribute]
internal static class RestSharp.Authenticators.OAuth.Extensions.StringExtensions : object {
    private static RegexOptions Options;
    [CompilerGeneratedAttribute]
private static Func`2<string, String[]> CS$<>9__CachedAnonymousMethodDelegate6;
    [CompilerGeneratedAttribute]
private static Func`2<String[], string> CS$<>9__CachedAnonymousMethodDelegate7;
    [CompilerGeneratedAttribute]
private static Func`2<String[], string> CS$<>9__CachedAnonymousMethodDelegate8;
    [ExtensionAttribute]
public static bool IsNullOrBlank(string value);
    [ExtensionAttribute]
public static bool EqualsIgnoreCase(string left, string right);
    [ExtensionAttribute]
public static bool EqualsAny(string input, String[] args);
    [ExtensionAttribute]
public static string FormatWith(string format, Object[] args);
    [ExtensionAttribute]
public static string FormatWithInvariantCulture(string format, Object[] args);
    [ExtensionAttribute]
public static string Then(string input, string value);
    [ExtensionAttribute]
public static string UrlEncode(string value);
    [ExtensionAttribute]
public static string UrlDecode(string value);
    [ExtensionAttribute]
public static Uri AsUri(string value);
    [ExtensionAttribute]
public static string ToBase64String(Byte[] input);
    [ExtensionAttribute]
public static Byte[] GetBytes(string input);
    [ExtensionAttribute]
public static string PercentEncode(string s);
    [ExtensionAttribute]
public static IDictionary`2<string, string> ParseQueryString(string query);
    [CompilerGeneratedAttribute]
private static String[] <ParseQueryString>b__3(string part);
    [CompilerGeneratedAttribute]
private static string <ParseQueryString>b__4(String[] pair);
    [CompilerGeneratedAttribute]
private static string <ParseQueryString>b__5(String[] pair);
}
[ExtensionAttribute]
internal static class RestSharp.Authenticators.OAuth.Extensions.TimeExtensions : object {
    [ExtensionAttribute]
public static DateTime FromNow(TimeSpan value);
    [ExtensionAttribute]
public static DateTime FromUnixTime(long seconds);
    [ExtensionAttribute]
public static long ToUnixTime(DateTime dateTime);
}
internal class RestSharp.Authenticators.OAuth.HttpPostParameter : WebParameter {
    [CompilerGeneratedAttribute]
private HttpPostParameterType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private Stream <FileStream>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    public HttpPostParameterType Type { get; private set; }
    public string FileName { get; private set; }
    public string FilePath { get; private set; }
    public Stream FileStream { get; public set; }
    public string ContentType { get; private set; }
    public HttpPostParameter(string name, string value);
    [CompilerGeneratedAttribute]
public virtual HttpPostParameterType get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(HttpPostParameterType value);
    [CompilerGeneratedAttribute]
public virtual string get_FileName();
    [CompilerGeneratedAttribute]
private void set_FileName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_FilePath();
    [CompilerGeneratedAttribute]
private void set_FilePath(string value);
    [CompilerGeneratedAttribute]
public virtual Stream get_FileStream();
    [CompilerGeneratedAttribute]
public virtual void set_FileStream(Stream value);
    [CompilerGeneratedAttribute]
public virtual string get_ContentType();
    [CompilerGeneratedAttribute]
private void set_ContentType(string value);
    public static HttpPostParameter CreateFile(string name, string fileName, string filePath, string contentType);
    public static HttpPostParameter CreateFile(string name, string fileName, Stream fileStream, string contentType);
}
internal enum RestSharp.Authenticators.OAuth.HttpPostParameterType : Enum {
    public int value__;
    public static HttpPostParameterType Field;
    public static HttpPostParameterType File;
}
public enum RestSharp.Authenticators.OAuth.OAuthParameterHandling : Enum {
    public int value__;
    public static OAuthParameterHandling HttpAuthorizationHeader;
    public static OAuthParameterHandling UrlOrPostParameters;
}
public enum RestSharp.Authenticators.OAuth.OAuthSignatureMethod : Enum {
    public int value__;
    public static OAuthSignatureMethod HmacSha1;
    public static OAuthSignatureMethod PlainText;
    public static OAuthSignatureMethod RsaSha1;
}
public enum RestSharp.Authenticators.OAuth.OAuthSignatureTreatment : Enum {
    public int value__;
    public static OAuthSignatureTreatment Escaped;
    public static OAuthSignatureTreatment Unescaped;
}
internal static class RestSharp.Authenticators.OAuth.OAuthTools : object {
    private static string AlphaNumeric;
    private static string Digit;
    private static string Lower;
    private static string Unreserved;
    private static string Upper;
    private static Random _random;
    private static object _randomLock;
    private static RandomNumberGenerator _rng;
    private static Encoding _encoding;
    [CompilerGeneratedAttribute]
private static Func`2<char, bool> CS$<>9__CachedAnonymousMethodDelegate3;
    [CompilerGeneratedAttribute]
private static Func`3<string, char, string> CS$<>9__CachedAnonymousMethodDelegate4;
    [CompilerGeneratedAttribute]
private static Func`2<WebPair, bool> CS$<>9__CachedAnonymousMethodDelegate8;
    [CompilerGeneratedAttribute]
private static Action`1<WebPair> CS$<>9__CachedAnonymousMethodDelegate9;
    [CompilerGeneratedAttribute]
private static Comparison`1<WebPair> CS$<>9__CachedAnonymousMethodDelegatea;
    private static OAuthTools();
    public static string GetNonce();
    public static string GetTimestamp();
    public static string GetTimestamp(DateTime dateTime);
    public static string UrlEncodeRelaxed(string value);
    public static string UrlEncodeStrict(string value);
    public static string NormalizeRequestParameters(WebParameterCollection parameters);
    public static WebParameterCollection SortParametersExcludingSignature(WebParameterCollection parameters);
    public static string ConstructRequestUrl(Uri url);
    public static string ConcatenateRequestElements(string method, string url, WebParameterCollection parameters);
    public static string GetSignature(OAuthSignatureMethod signatureMethod, string signatureBase, string consumerSecret);
    public static string GetSignature(OAuthSignatureMethod signatureMethod, OAuthSignatureTreatment signatureTreatment, string signatureBase, string consumerSecret);
    public static string GetSignature(OAuthSignatureMethod signatureMethod, string signatureBase, string consumerSecret, string tokenSecret);
    public static string GetSignature(OAuthSignatureMethod signatureMethod, OAuthSignatureTreatment signatureTreatment, string signatureBase, string consumerSecret, string tokenSecret);
    [CompilerGeneratedAttribute]
private static bool <UrlEncodeStrict>b__1(char c);
    [CompilerGeneratedAttribute]
private static string <UrlEncodeStrict>b__2(string current, char c);
    [CompilerGeneratedAttribute]
private static bool <SortParametersExcludingSignature>b__5(WebPair n);
    [CompilerGeneratedAttribute]
private static void <SortParametersExcludingSignature>b__6(WebPair p);
    [CompilerGeneratedAttribute]
private static int <SortParametersExcludingSignature>b__7(WebPair x, WebPair y);
}
public enum RestSharp.Authenticators.OAuth.OAuthType : Enum {
    public int value__;
    public static OAuthType RequestToken;
    public static OAuthType AccessToken;
    public static OAuthType ProtectedResource;
    public static OAuthType ClientAuthentication;
}
public class RestSharp.Authenticators.OAuth.OAuthWebQueryInfo : object {
    [CompilerGeneratedAttribute]
private string <ConsumerKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignatureMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Callback>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Verifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthParameterHandling <ParameterHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthSignatureTreatment <SignatureTreatment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenSecret>k__BackingField;
    public string ConsumerKey { get; public set; }
    public string Token { get; public set; }
    public string Nonce { get; public set; }
    public string Timestamp { get; public set; }
    public string SignatureMethod { get; public set; }
    public string Signature { get; public set; }
    public string Version { get; public set; }
    public string Callback { get; public set; }
    public string Verifier { get; public set; }
    public string ClientMode { get; public set; }
    public string ClientUsername { get; public set; }
    public string ClientPassword { get; public set; }
    public string UserAgent { get; public set; }
    public string WebMethod { get; public set; }
    public OAuthParameterHandling ParameterHandling { get; public set; }
    public OAuthSignatureTreatment SignatureTreatment { get; public set; }
    internal string ConsumerSecret { get; internal set; }
    internal string TokenSecret { get; internal set; }
    [CompilerGeneratedAttribute]
public virtual string get_ConsumerKey();
    [CompilerGeneratedAttribute]
public virtual void set_ConsumerKey(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Token();
    [CompilerGeneratedAttribute]
public virtual void set_Token(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Nonce();
    [CompilerGeneratedAttribute]
public virtual void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Timestamp();
    [CompilerGeneratedAttribute]
public virtual void set_Timestamp(string value);
    [CompilerGeneratedAttribute]
public virtual string get_SignatureMethod();
    [CompilerGeneratedAttribute]
public virtual void set_SignatureMethod(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Signature();
    [CompilerGeneratedAttribute]
public virtual void set_Signature(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Version();
    [CompilerGeneratedAttribute]
public virtual void set_Version(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Callback();
    [CompilerGeneratedAttribute]
public virtual void set_Callback(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Verifier();
    [CompilerGeneratedAttribute]
public virtual void set_Verifier(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ClientMode();
    [CompilerGeneratedAttribute]
public virtual void set_ClientMode(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ClientUsername();
    [CompilerGeneratedAttribute]
public virtual void set_ClientUsername(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ClientPassword();
    [CompilerGeneratedAttribute]
public virtual void set_ClientPassword(string value);
    [CompilerGeneratedAttribute]
public virtual string get_UserAgent();
    [CompilerGeneratedAttribute]
public virtual void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public virtual string get_WebMethod();
    [CompilerGeneratedAttribute]
public virtual void set_WebMethod(string value);
    [CompilerGeneratedAttribute]
public virtual OAuthParameterHandling get_ParameterHandling();
    [CompilerGeneratedAttribute]
public virtual void set_ParameterHandling(OAuthParameterHandling value);
    [CompilerGeneratedAttribute]
public virtual OAuthSignatureTreatment get_SignatureTreatment();
    [CompilerGeneratedAttribute]
public virtual void set_SignatureTreatment(OAuthSignatureTreatment value);
    [CompilerGeneratedAttribute]
internal virtual string get_ConsumerSecret();
    [CompilerGeneratedAttribute]
internal virtual void set_ConsumerSecret(string value);
    [CompilerGeneratedAttribute]
internal virtual string get_TokenSecret();
    [CompilerGeneratedAttribute]
internal virtual void set_TokenSecret(string value);
}
internal class RestSharp.Authenticators.OAuth.OAuthWorkflow : object {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CallbackUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Verifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthSignatureMethod <SignatureMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthSignatureTreatment <SignatureTreatment>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthParameterHandling <ParameterHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestTokenUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessTokenUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizationUrl>k__BackingField;
    public string Version { get; public set; }
    public string ConsumerKey { get; public set; }
    public string ConsumerSecret { get; public set; }
    public string Token { get; public set; }
    public string TokenSecret { get; public set; }
    public string CallbackUrl { get; public set; }
    public string Verifier { get; public set; }
    public string SessionHandle { get; public set; }
    public OAuthSignatureMethod SignatureMethod { get; public set; }
    public OAuthSignatureTreatment SignatureTreatment { get; public set; }
    public OAuthParameterHandling ParameterHandling { get; public set; }
    public string ClientUsername { get; public set; }
    public string ClientPassword { get; public set; }
    public string RequestTokenUrl { get; public set; }
    public string AccessTokenUrl { get; public set; }
    public string AuthorizationUrl { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Version();
    [CompilerGeneratedAttribute]
public virtual void set_Version(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ConsumerKey();
    [CompilerGeneratedAttribute]
public virtual void set_ConsumerKey(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ConsumerSecret();
    [CompilerGeneratedAttribute]
public virtual void set_ConsumerSecret(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Token();
    [CompilerGeneratedAttribute]
public virtual void set_Token(string value);
    [CompilerGeneratedAttribute]
public virtual string get_TokenSecret();
    [CompilerGeneratedAttribute]
public virtual void set_TokenSecret(string value);
    [CompilerGeneratedAttribute]
public virtual string get_CallbackUrl();
    [CompilerGeneratedAttribute]
public virtual void set_CallbackUrl(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Verifier();
    [CompilerGeneratedAttribute]
public virtual void set_Verifier(string value);
    [CompilerGeneratedAttribute]
public virtual string get_SessionHandle();
    [CompilerGeneratedAttribute]
public virtual void set_SessionHandle(string value);
    [CompilerGeneratedAttribute]
public virtual OAuthSignatureMethod get_SignatureMethod();
    [CompilerGeneratedAttribute]
public virtual void set_SignatureMethod(OAuthSignatureMethod value);
    [CompilerGeneratedAttribute]
public virtual OAuthSignatureTreatment get_SignatureTreatment();
    [CompilerGeneratedAttribute]
public virtual void set_SignatureTreatment(OAuthSignatureTreatment value);
    [CompilerGeneratedAttribute]
public virtual OAuthParameterHandling get_ParameterHandling();
    [CompilerGeneratedAttribute]
public virtual void set_ParameterHandling(OAuthParameterHandling value);
    [CompilerGeneratedAttribute]
public virtual string get_ClientUsername();
    [CompilerGeneratedAttribute]
public virtual void set_ClientUsername(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ClientPassword();
    [CompilerGeneratedAttribute]
public virtual void set_ClientPassword(string value);
    [CompilerGeneratedAttribute]
public virtual string get_RequestTokenUrl();
    [CompilerGeneratedAttribute]
public virtual void set_RequestTokenUrl(string value);
    [CompilerGeneratedAttribute]
public virtual string get_AccessTokenUrl();
    [CompilerGeneratedAttribute]
public virtual void set_AccessTokenUrl(string value);
    [CompilerGeneratedAttribute]
public virtual string get_AuthorizationUrl();
    [CompilerGeneratedAttribute]
public virtual void set_AuthorizationUrl(string value);
    public OAuthWebQueryInfo BuildRequestTokenInfo(string method);
    public virtual OAuthWebQueryInfo BuildRequestTokenInfo(string method, WebParameterCollection parameters);
    public virtual OAuthWebQueryInfo BuildAccessTokenInfo(string method);
    public virtual OAuthWebQueryInfo BuildAccessTokenInfo(string method, WebParameterCollection parameters);
    public virtual OAuthWebQueryInfo BuildClientAuthAccessTokenInfo(string method, WebParameterCollection parameters);
    public virtual OAuthWebQueryInfo BuildProtectedResourceInfo(string method, WebParameterCollection parameters, string url);
    private void ValidateTokenRequestState();
    private void ValidateAccessRequestState();
    private void ValidateClientAuthAccessRequestState();
    private void ValidateProtectedResourceState();
    private void AddAuthParameters(ICollection`1<WebPair> parameters, string timestamp, string nonce);
    private void AddXAuthParameters(ICollection`1<WebPair> parameters, string timestamp, string nonce);
}
internal class RestSharp.Authenticators.OAuth.WebPair : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Value { get; public set; }
    public string Name { get; private set; }
    public WebPair(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
}
[DefaultMemberAttribute("Item")]
internal class RestSharp.Authenticators.OAuth.WebPairCollection : object {
    private IList`1<WebPair> _parameters;
    [CompilerGeneratedAttribute]
private static Func`2<WebPair, string> CS$<>9__CachedAnonymousMethodDelegate4;
    [CompilerGeneratedAttribute]
private static Func`2<WebPair, string> CS$<>9__CachedAnonymousMethodDelegate6;
    public WebPair Item { get; }
    public IEnumerable`1<string> Names { get; }
    public IEnumerable`1<string> Values { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public WebPair Item { get; public set; }
    public WebPairCollection(IEnumerable`1<WebPair> parameters);
    public WebPairCollection(NameValueCollection collection);
    public WebPairCollection(IDictionary`2<string, string> collection);
    public WebPairCollection(int capacity);
    public virtual WebPair get_Item(string name);
    public virtual IEnumerable`1<string> get_Names();
    public virtual IEnumerable`1<string> get_Values();
    public virtual void AddRange(NameValueCollection collection);
    private void AddCollection(NameValueCollection collection);
    public void AddCollection(IDictionary`2<string, string> collection);
    private void AddCollection(IEnumerable`1<WebPair> collection);
    public virtual void AddRange(WebPairCollection collection);
    public virtual void AddRange(IEnumerable`1<WebPair> collection);
    public virtual void Sort(Comparison`1<WebPair> comparison);
    public virtual bool RemoveAll(IEnumerable`1<WebPair> parameters);
    public virtual void Add(string name, string value);
    public virtual IEnumerator`1<WebPair> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual void Add(WebPair parameter);
    public virtual void Clear();
    public virtual bool Contains(WebPair parameter);
    public virtual void CopyTo(WebPair[] parameters, int arrayIndex);
    public virtual bool Remove(WebPair parameter);
    public virtual int get_Count();
    public virtual bool get_IsReadOnly();
    public virtual int IndexOf(WebPair parameter);
    public virtual void Insert(int index, WebPair parameter);
    public virtual void RemoveAt(int index);
    public virtual WebPair get_Item(int index);
    public virtual void set_Item(int index, WebPair value);
    [CompilerGeneratedAttribute]
private static string <get_Names>b__3(WebPair p);
    [CompilerGeneratedAttribute]
private static string <get_Values>b__5(WebPair p);
}
[DebuggerDisplayAttribute("{Name}:{Value}")]
internal class RestSharp.Authenticators.OAuth.WebParameter : WebPair {
    public WebParameter(string name, string value);
}
internal class RestSharp.Authenticators.OAuth.WebParameterCollection : WebPairCollection {
    public WebParameterCollection(IEnumerable`1<WebPair> parameters);
    public WebParameterCollection(NameValueCollection collection);
    public WebParameterCollection(int capacity);
    public WebParameterCollection(IDictionary`2<string, string> collection);
    public virtual void Add(string name, string value);
}
public class RestSharp.Authenticators.OAuth1Authenticator : object {
    [CompilerGeneratedAttribute]
private string <Realm>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthParameterHandling <ParameterHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthSignatureMethod <SignatureMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthSignatureTreatment <SignatureTreatment>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuthType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Verifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CallbackUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, bool> CS$<>9__CachedAnonymousMethodDelegate6;
    [CompilerGeneratedAttribute]
private static Comparison`1<WebPair> CS$<>9__CachedAnonymousMethodDelegate9;
    [CompilerGeneratedAttribute]
private static Func`2<WebPair, bool> CS$<>9__CachedAnonymousMethodDelegatea;
    public string Realm { get; public set; }
    public OAuthParameterHandling ParameterHandling { get; public set; }
    public OAuthSignatureMethod SignatureMethod { get; public set; }
    public OAuthSignatureTreatment SignatureTreatment { get; public set; }
    internal OAuthType Type { get; internal set; }
    internal string ConsumerKey { get; internal set; }
    internal string ConsumerSecret { get; internal set; }
    internal string Token { get; internal set; }
    internal string TokenSecret { get; internal set; }
    internal string Verifier { get; internal set; }
    internal string Version { get; internal set; }
    internal string CallbackUrl { get; internal set; }
    internal string SessionHandle { get; internal set; }
    internal string ClientUsername { get; internal set; }
    internal string ClientPassword { get; internal set; }
    [CompilerGeneratedAttribute]
public virtual string get_Realm();
    [CompilerGeneratedAttribute]
public virtual void set_Realm(string value);
    [CompilerGeneratedAttribute]
public virtual OAuthParameterHandling get_ParameterHandling();
    [CompilerGeneratedAttribute]
public virtual void set_ParameterHandling(OAuthParameterHandling value);
    [CompilerGeneratedAttribute]
public virtual OAuthSignatureMethod get_SignatureMethod();
    [CompilerGeneratedAttribute]
public virtual void set_SignatureMethod(OAuthSignatureMethod value);
    [CompilerGeneratedAttribute]
public virtual OAuthSignatureTreatment get_SignatureTreatment();
    [CompilerGeneratedAttribute]
public virtual void set_SignatureTreatment(OAuthSignatureTreatment value);
    [CompilerGeneratedAttribute]
internal virtual OAuthType get_Type();
    [CompilerGeneratedAttribute]
internal virtual void set_Type(OAuthType value);
    [CompilerGeneratedAttribute]
internal virtual string get_ConsumerKey();
    [CompilerGeneratedAttribute]
internal virtual void set_ConsumerKey(string value);
    [CompilerGeneratedAttribute]
internal virtual string get_ConsumerSecret();
    [CompilerGeneratedAttribute]
internal virtual void set_ConsumerSecret(string value);
    [CompilerGeneratedAttribute]
internal virtual string get_Token();
    [CompilerGeneratedAttribute]
internal virtual void set_Token(string value);
    [CompilerGeneratedAttribute]
internal virtual string get_TokenSecret();
    [CompilerGeneratedAttribute]
internal virtual void set_TokenSecret(string value);
    [CompilerGeneratedAttribute]
internal virtual string get_Verifier();
    [CompilerGeneratedAttribute]
internal virtual void set_Verifier(string value);
    [CompilerGeneratedAttribute]
internal virtual string get_Version();
    [CompilerGeneratedAttribute]
internal virtual void set_Version(string value);
    [CompilerGeneratedAttribute]
internal virtual string get_CallbackUrl();
    [CompilerGeneratedAttribute]
internal virtual void set_CallbackUrl(string value);
    [CompilerGeneratedAttribute]
internal virtual string get_SessionHandle();
    [CompilerGeneratedAttribute]
internal virtual void set_SessionHandle(string value);
    [CompilerGeneratedAttribute]
internal virtual string get_ClientUsername();
    [CompilerGeneratedAttribute]
internal virtual void set_ClientUsername(string value);
    [CompilerGeneratedAttribute]
internal virtual string get_ClientPassword();
    [CompilerGeneratedAttribute]
internal virtual void set_ClientPassword(string value);
    public static OAuth1Authenticator ForRequestToken(string consumerKey, string consumerSecret);
    public static OAuth1Authenticator ForRequestToken(string consumerKey, string consumerSecret, string callbackUrl);
    public static OAuth1Authenticator ForAccessToken(string consumerKey, string consumerSecret, string token, string tokenSecret);
    public static OAuth1Authenticator ForAccessToken(string consumerKey, string consumerSecret, string token, string tokenSecret, string verifier);
    public static OAuth1Authenticator ForAccessTokenRefresh(string consumerKey, string consumerSecret, string token, string tokenSecret, string sessionHandle);
    public static OAuth1Authenticator ForAccessTokenRefresh(string consumerKey, string consumerSecret, string token, string tokenSecret, string verifier, string sessionHandle);
    public static OAuth1Authenticator ForClientAuthentication(string consumerKey, string consumerSecret, string username, string password);
    public static OAuth1Authenticator ForProtectedResource(string consumerKey, string consumerSecret, string accessToken, string accessTokenSecret);
    public sealed virtual void Authenticate(RestClient client, RestRequest request);
    private void AddOAuthData(RestClient client, RestRequest request, OAuthWorkflow workflow);
    private string GetAuthorizationHeader(WebPairCollection parameters);
    [CompilerGeneratedAttribute]
private static bool <AddOAuthData>b__5(Parameter p);
    [CompilerGeneratedAttribute]
private static int <GetAuthorizationHeader>b__7(WebPair l, WebPair r);
    [CompilerGeneratedAttribute]
private static bool <GetAuthorizationHeader>b__8(WebPair parameter);
}
internal class RestSharp.Contrib.Helpers : object {
    public static CultureInfo InvariantCulture;
    private static Helpers();
}
internal class RestSharp.Contrib.HttpEncoder : object {
    private static Char[] hexChars;
    private static object entitiesLock;
    private static SortedDictionary`2<string, char> entities;
    private static HttpEncoder defaultEncoder;
    private static HttpEncoder currentEncoder;
    private static IDictionary`2<string, char> Entities { get; }
    public static HttpEncoder Current { get; }
    public static HttpEncoder Default { get; }
    private static HttpEncoder();
    private static IDictionary`2<string, char> get_Entities();
    public static HttpEncoder get_Current();
    public static HttpEncoder get_Default();
    internal static void HeaderNameValueEncode(string headerName, string headerValue, String& encodedHeaderName, String& encodedHeaderValue);
    private static void StringBuilderAppend(string s, StringBuilder& sb);
    private static string EncodeHeaderString(string input);
    internal static string UrlPathEncode(string value);
    internal static Byte[] UrlEncodeToBytes(Byte[] bytes, int offset, int count);
    internal static string HtmlEncode(string s);
    internal static string HtmlAttributeEncode(string s);
    internal static string HtmlDecode(string s);
    internal static bool NotEncoded(char c);
    internal static void UrlEncodeChar(char c, Stream result, bool isUnicode);
    internal static void UrlPathEncodeChar(char c, Stream result);
    private static void InitEntities();
}
public class RestSharp.Contrib.HttpUtility : object {
    public static void HtmlAttributeEncode(string s, TextWriter output);
    public static string HtmlAttributeEncode(string s);
    public static string UrlDecode(string str);
    private static Char[] GetChars(MemoryStream b, Encoding e);
    private static void WriteCharBytes(IList buf, char ch, Encoding e);
    public static string UrlDecode(string s, Encoding e);
    public static string UrlDecode(Byte[] bytes, Encoding e);
    private static int GetInt(byte b);
    private static int GetChar(Byte[] bytes, int offset, int length);
    private static int GetChar(string str, int offset, int length);
    public static string UrlDecode(Byte[] bytes, int offset, int count, Encoding e);
    public static Byte[] UrlDecodeToBytes(Byte[] bytes);
    public static Byte[] UrlDecodeToBytes(string str);
    public static Byte[] UrlDecodeToBytes(string str, Encoding e);
    public static Byte[] UrlDecodeToBytes(Byte[] bytes, int offset, int count);
    public static string UrlEncode(string str);
    public static string UrlEncode(string s, Encoding Enc);
    public static string UrlEncode(Byte[] bytes);
    public static string UrlEncode(Byte[] bytes, int offset, int count);
    public static Byte[] UrlEncodeToBytes(string str);
    public static Byte[] UrlEncodeToBytes(string str, Encoding e);
    public static Byte[] UrlEncodeToBytes(Byte[] bytes);
    public static Byte[] UrlEncodeToBytes(Byte[] bytes, int offset, int count);
    public static string UrlEncodeUnicode(string str);
    public static Byte[] UrlEncodeUnicodeToBytes(string str);
    public static string HtmlDecode(string s);
    public static void HtmlDecode(string s, TextWriter output);
    public static string HtmlEncode(string s);
    public static void HtmlEncode(string s, TextWriter output);
    public static string UrlPathEncode(string s);
    public static NameValueCollection ParseQueryString(string query);
    public static NameValueCollection ParseQueryString(string query, Encoding encoding);
    internal static void ParseQueryString(string query, Encoding encoding, NameValueCollection result);
}
public enum RestSharp.DataFormat : Enum {
    public int value__;
    public static DataFormat Json;
    public static DataFormat Xml;
}
public class RestSharp.DateFormat : ValueType {
    public static string Iso8601;
    public static string RoundTrip;
}
[AttributeUsageAttribute("132")]
public class RestSharp.Deserializers.DeserializeAsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Attribute>k__BackingField;
    public string Name { get; public set; }
    public bool Attribute { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Attribute();
    [CompilerGeneratedAttribute]
public void set_Attribute(bool value);
}
public interface RestSharp.Deserializers.IDeserializer {
    public string RootElement { get; public set; }
    public string Namespace { get; public set; }
    public string DateFormat { get; public set; }
    public abstract virtual T Deserialize(RestResponse response);
    public abstract virtual string get_RootElement();
    public abstract virtual void set_RootElement(string value);
    public abstract virtual string get_Namespace();
    public abstract virtual void set_Namespace(string value);
    public abstract virtual string get_DateFormat();
    public abstract virtual void set_DateFormat(string value);
}
public class RestSharp.Deserializers.JsonDeserializer : object {
    [CompilerGeneratedAttribute]
private string <RootElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<PropertyInfo, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    public string RootElement { get; public set; }
    public string Namespace { get; public set; }
    public string DateFormat { get; public set; }
    public CultureInfo Culture { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_RootElement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RootElement(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Namespace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DateFormat();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateFormat(string value);
    [CompilerGeneratedAttribute]
public CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
public void set_Culture(CultureInfo value);
    public sealed virtual T Deserialize(RestResponse response);
    private JToken FindRoot(string content);
    private void Map(object x, JToken json);
    private object CreateAndMap(Type type, JToken element);
    private IDictionary BuildDictionary(Type type, JEnumerable`1<JToken> elements);
    private IList BuildList(Type type, JEnumerable`1<JToken> elements);
    [CompilerGeneratedAttribute]
private static bool <Map>b__0(PropertyInfo p);
}
public class RestSharp.Deserializers.XmlAttributeDeserializer : object {
    [CompilerGeneratedAttribute]
private string <RootElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<XAttribute, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`2<XAttribute, XAttribute> CS$<>9__CachedAnonymousMethodDelegate3;
    [CompilerGeneratedAttribute]
private static Func`2<XElement, int> CS$<>9__CachedAnonymousMethodDelegate9;
    public string RootElement { get; public set; }
    public string Namespace { get; public set; }
    public string DateFormat { get; public set; }
    public CultureInfo Culture { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_RootElement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RootElement(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Namespace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DateFormat();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateFormat(string value);
    [CompilerGeneratedAttribute]
public CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
public void set_Culture(CultureInfo value);
    public sealed virtual T Deserialize(RestResponse response);
    private void RemoveNamespace(XDocument xdoc);
    private void Map(object x, XElement root);
    private void PopulateListFromElements(Type t, IEnumerable`1<XElement> elements, IList list);
    private object HandleListDerivative(object x, XElement root, string propName, Type type);
    private object CreateAndMap(Type t, XElement element);
    private object GetValueFromXml(XElement root, XName name, bool attribute);
    private XElement GetElementByName(XElement root, XName name);
    private XAttribute GetAttributeByName(XElement root, XName name);
    [CompilerGeneratedAttribute]
private static bool <RemoveNamespace>b__0(XAttribute a);
    [CompilerGeneratedAttribute]
private static XAttribute <RemoveNamespace>b__1(XAttribute a);
    [CompilerGeneratedAttribute]
private static int <GetElementByName>b__7(XElement d);
}
public class RestSharp.Deserializers.XmlDeserializer : object {
    [CompilerGeneratedAttribute]
private string <RootElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<XAttribute, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`2<XAttribute, XAttribute> CS$<>9__CachedAnonymousMethodDelegate3;
    [CompilerGeneratedAttribute]
private static Func`2<XElement, int> CS$<>9__CachedAnonymousMethodDelegatec;
    [CompilerGeneratedAttribute]
private static Func`2<XElement, int> CS$<>9__CachedAnonymousMethodDelegated;
    public string RootElement { get; public set; }
    public string Namespace { get; public set; }
    public string DateFormat { get; public set; }
    public CultureInfo Culture { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_RootElement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RootElement(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Namespace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DateFormat();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateFormat(string value);
    [CompilerGeneratedAttribute]
public CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
public void set_Culture(CultureInfo value);
    public sealed virtual T Deserialize(RestResponse response);
    private void RemoveNamespace(XDocument xdoc);
    private void Map(object x, XElement root);
    private void PopulateListFromElements(Type t, IEnumerable`1<XElement> elements, IList list);
    private object HandleListDerivative(object x, XElement root, string propName, Type type);
    private object CreateAndMap(Type t, XElement element);
    private object GetValueFromXml(XElement root, XName name);
    private XElement GetElementByName(XElement root, XName name);
    private XAttribute GetAttributeByName(XElement root, XName name);
    [CompilerGeneratedAttribute]
private static bool <RemoveNamespace>b__0(XAttribute a);
    [CompilerGeneratedAttribute]
private static XAttribute <RemoveNamespace>b__1(XAttribute a);
    [CompilerGeneratedAttribute]
private static int <GetElementByName>b__8(XElement d);
    [CompilerGeneratedAttribute]
private static int <GetElementByName>b__a(XElement d);
}
[ExtensionAttribute]
public static class RestSharp.Extensions.MiscExtensions : object {
    [ExtensionAttribute]
public static void SaveAs(Byte[] input, string path);
    [ExtensionAttribute]
public static Byte[] ReadAsBytes(Stream input);
    [ExtensionAttribute]
public static void CopyTo(Stream input, Stream output);
    [ExtensionAttribute]
public static string AsString(JToken token);
}
[ExtensionAttribute]
public static class RestSharp.Extensions.ReflectionExtensions : object {
    [ExtensionAttribute]
public static T GetAttribute(MemberInfo prop);
    [ExtensionAttribute]
public static T GetAttribute(Type type);
    [ExtensionAttribute]
public static bool IsSubclassOfRawGeneric(Type toCheck, Type generic);
    [ExtensionAttribute]
public static object ChangeType(object source, Type newType);
}
[ExtensionAttribute]
public static class RestSharp.Extensions.StringExtensions : object {
    [ExtensionAttribute]
public static string UrlDecode(string input);
    [ExtensionAttribute]
public static string UrlEncode(string input);
    [ExtensionAttribute]
public static string HtmlDecode(string input);
    [ExtensionAttribute]
public static string HtmlEncode(string input);
    [ExtensionAttribute]
public static string HtmlAttributeEncode(string input);
    [ExtensionAttribute]
public static bool HasValue(string input);
    [ExtensionAttribute]
public static string RemoveUnderscoresAndDashes(string input);
    [ExtensionAttribute]
public static DateTime ParseJsonDate(string input, CultureInfo culture);
    [ExtensionAttribute]
public static string RemoveSurroundingQuotes(string input);
    private static DateTime ParseFormattedDate(string input, CultureInfo culture);
    private static DateTime ExtractDate(string input, string pattern, CultureInfo culture);
    [ExtensionAttribute]
public static bool Matches(string input, string pattern);
    [ExtensionAttribute]
public static string ToPascalCase(string lowercaseAndUnderscoredWord, CultureInfo culture);
    [ExtensionAttribute]
public static string ToPascalCase(string text, bool removeUnderscores, CultureInfo culture);
    [ExtensionAttribute]
public static string ToCamelCase(string lowercaseAndUnderscoredWord, CultureInfo culture);
    [ExtensionAttribute]
public static string MakeInitialLowerCase(string word);
    [ExtensionAttribute]
public static bool IsUpperCase(string inputString);
    [ExtensionAttribute]
public static string AddUnderscores(string pascalCasedWord);
    [ExtensionAttribute]
public static string AddDashes(string pascalCasedWord);
}
[ExtensionAttribute]
public static class RestSharp.Extensions.XmlExtensions : object {
    [ExtensionAttribute]
public static XName AsNamespaced(string name, string namespace);
}
public class RestSharp.FileParameter : object {
    [CompilerGeneratedAttribute]
private long <ContentLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<Stream> <Writer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public long ContentLength { get; public set; }
    public Action`1<Stream> Writer { get; public set; }
    public string FileName { get; public set; }
    public string ContentType { get; public set; }
    public string Name { get; public set; }
    public static FileParameter Create(string name, Byte[] data, string filename, string contentType);
    public static FileParameter Create(string name, Byte[] data, string filename);
    [CompilerGeneratedAttribute]
public long get_ContentLength();
    [CompilerGeneratedAttribute]
public void set_ContentLength(long value);
    [CompilerGeneratedAttribute]
public Action`1<Stream> get_Writer();
    [CompilerGeneratedAttribute]
public void set_Writer(Action`1<Stream> value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class RestSharp.Http : object {
    private static string FormBoundary;
    private TimeOutState timeoutState;
    private IDictionary`2<string, Action`2<HttpWebRequest, string>> _restrictedHeaderActions;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private ICredentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<HttpFile> <Files>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FollowRedirects>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxRedirects>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<HttpHeader> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<HttpParameter> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<HttpCookie> <Cookies>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestBody>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebProxy <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate19;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate1a;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate1b;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate1c;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate1d;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate28;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate29;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate2a;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate2b;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate2c;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate2d;
    [CompilerGeneratedAttribute]
private static Action`2<HttpWebRequest, string> CS$<>9__CachedAnonymousMethodDelegate2e;
    protected bool HasParameters { get; }
    protected bool HasCookies { get; }
    protected bool HasBody { get; }
    protected bool HasFiles { get; }
    public string UserAgent { get; public set; }
    public int Timeout { get; public set; }
    public ICredentials Credentials { get; public set; }
    public IList`1<HttpFile> Files { get; private set; }
    public bool FollowRedirects { get; public set; }
    public Nullable`1<int> MaxRedirects { get; public set; }
    public IList`1<HttpHeader> Headers { get; private set; }
    public IList`1<HttpParameter> Parameters { get; private set; }
    public IList`1<HttpCookie> Cookies { get; private set; }
    public string RequestBody { get; public set; }
    public string RequestContentType { get; public set; }
    public Uri Url { get; public set; }
    public IWebProxy Proxy { get; public set; }
    public sealed virtual void DeleteAsync(Action`1<HttpResponse> action);
    public sealed virtual void GetAsync(Action`1<HttpResponse> action);
    public sealed virtual void HeadAsync(Action`1<HttpResponse> action);
    public sealed virtual void OptionsAsync(Action`1<HttpResponse> action);
    public sealed virtual void PostAsync(Action`1<HttpResponse> action);
    public sealed virtual void PutAsync(Action`1<HttpResponse> action);
    private void GetStyleMethodInternalAsync(string method, Action`1<HttpResponse> callback);
    private void PutPostInternalAsync(string method, Action`1<HttpResponse> callback);
    private void WriteRequestBodyAsync(HttpWebRequest webRequest, Action`1<HttpResponse> callback);
    private long CalculateContentLength();
    private void WriteMultipartFormDataAsync(Stream requestStream);
    private void RequestStreamCallback(IAsyncResult result, Action`1<HttpResponse> callback);
    private void SetTimeout(IAsyncResult asyncResult, HttpWebRequest request, TimeOutState timeOutState);
    private void TimeoutCallback(object state, bool timedOut);
    private void GetRawResponseAsync(IAsyncResult result, Action`1<HttpWebResponse> callback);
    private void ResponseCallback(IAsyncResult result, Action`1<HttpResponse> callback);
    private void ExecuteCallback(HttpResponse response, Action`1<HttpResponse> callback);
    private void AddAsyncHeaderActions();
    private HttpWebRequest ConfigureAsyncWebRequest(string method, Uri url);
    public sealed virtual IHttp Create();
    protected bool get_HasParameters();
    protected bool get_HasCookies();
    protected bool get_HasBody();
    protected bool get_HasFiles();
    [CompilerGeneratedAttribute]
public sealed virtual string get_UserAgent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(int value);
    [CompilerGeneratedAttribute]
public sealed virtual ICredentials get_Credentials();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Credentials(ICredentials value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<HttpFile> get_Files();
    [CompilerGeneratedAttribute]
private void set_Files(IList`1<HttpFile> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_FollowRedirects();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FollowRedirects(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxRedirects();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxRedirects(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<HttpHeader> get_Headers();
    [CompilerGeneratedAttribute]
private void set_Headers(IList`1<HttpHeader> value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<HttpParameter> get_Parameters();
    [CompilerGeneratedAttribute]
private void set_Parameters(IList`1<HttpParameter> value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<HttpCookie> get_Cookies();
    [CompilerGeneratedAttribute]
private void set_Cookies(IList`1<HttpCookie> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RequestBody();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequestBody(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RequestContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequestContentType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual IWebProxy get_Proxy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Proxy(IWebProxy value);
    private void AddSharedHeaderActions();
    private string GetMultipartFormContentType();
    private string GetMultipartFileHeader(HttpFile file);
    private string GetMultipartFormData(HttpParameter param);
    private string GetMultipartFooter();
    private void AppendHeaders(HttpWebRequest webRequest);
    private void AppendCookies(HttpWebRequest webRequest);
    private string EncodeParameters();
    private void PreparePostBody(HttpWebRequest webRequest);
    private void ExtractResponseData(HttpResponse response, HttpWebResponse webResponse);
    public string GetString(Byte[] buffer);
    public sealed virtual HttpResponse Post();
    public sealed virtual HttpResponse Put();
    public sealed virtual HttpResponse Get();
    public sealed virtual HttpResponse Head();
    public sealed virtual HttpResponse Options();
    public sealed virtual HttpResponse Delete();
    private HttpResponse GetStyleMethodInternal(string method);
    private HttpResponse PostPutInternal(string method);
    private void AddSyncHeaderActions();
    private HttpResponse GetResponse(HttpWebRequest request);
    private HttpWebResponse GetRawResponse(HttpWebRequest request);
    private void PreparePostData(HttpWebRequest webRequest);
    private void WriteMultipartFormData(HttpWebRequest webRequest);
    private void WriteRequestBody(HttpWebRequest webRequest);
    private HttpWebRequest ConfigureWebRequest(string method, Uri url);
    [CompilerGeneratedAttribute]
private static void <AddSharedHeaderActions>b__14(HttpWebRequest r, string v);
    [CompilerGeneratedAttribute]
private static void <AddSharedHeaderActions>b__15(HttpWebRequest r, string v);
    [CompilerGeneratedAttribute]
private static void <AddSharedHeaderActions>b__16(HttpWebRequest r, string v);
    [CompilerGeneratedAttribute]
private static void <AddSharedHeaderActions>b__17(HttpWebRequest r, string v);
    [CompilerGeneratedAttribute]
private static void <AddSharedHeaderActions>b__18(HttpWebRequest r, string v);
    [CompilerGeneratedAttribute]
private static void <AddSyncHeaderActions>b__21(HttpWebRequest r, string v);
    [CompilerGeneratedAttribute]
private static void <AddSyncHeaderActions>b__22(HttpWebRequest r, string v);
    [CompilerGeneratedAttribute]
private static void <AddSyncHeaderActions>b__23(HttpWebRequest r, string v);
    [CompilerGeneratedAttribute]
private static void <AddSyncHeaderActions>b__24(HttpWebRequest r, string v);
    [CompilerGeneratedAttribute]
private static void <AddSyncHeaderActions>b__25(HttpWebRequest r, string v);
    [CompilerGeneratedAttribute]
private static void <AddSyncHeaderActions>b__26(HttpWebRequest r, string v);
    [CompilerGeneratedAttribute]
private static void <AddSyncHeaderActions>b__27(HttpWebRequest r, string v);
}
public class RestSharp.HttpBasicAuthenticator : object {
    private string _username;
    private string _password;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    public HttpBasicAuthenticator(string username, string password);
    public sealed virtual void Authenticate(RestClient client, RestRequest request);
    [CompilerGeneratedAttribute]
private static bool <Authenticate>b__0(Parameter p);
}
public class RestSharp.HttpCookie : object {
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <CommentUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Discard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Expired>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Expires>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HttpOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Secure>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <TimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    public string Comment { get; public set; }
    public Uri CommentUri { get; public set; }
    public bool Discard { get; public set; }
    public string Domain { get; public set; }
    public bool Expired { get; public set; }
    public DateTime Expires { get; public set; }
    public bool HttpOnly { get; public set; }
    public string Name { get; public set; }
    public string Path { get; public set; }
    public string Port { get; public set; }
    public bool Secure { get; public set; }
    public DateTime TimeStamp { get; public set; }
    public string Value { get; public set; }
    public int Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
    [CompilerGeneratedAttribute]
public Uri get_CommentUri();
    [CompilerGeneratedAttribute]
public void set_CommentUri(Uri value);
    [CompilerGeneratedAttribute]
public bool get_Discard();
    [CompilerGeneratedAttribute]
public void set_Discard(bool value);
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
public void set_Domain(string value);
    [CompilerGeneratedAttribute]
public bool get_Expired();
    [CompilerGeneratedAttribute]
public void set_Expired(bool value);
    [CompilerGeneratedAttribute]
public DateTime get_Expires();
    [CompilerGeneratedAttribute]
public void set_Expires(DateTime value);
    [CompilerGeneratedAttribute]
public bool get_HttpOnly();
    [CompilerGeneratedAttribute]
public void set_HttpOnly(bool value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(string value);
    [CompilerGeneratedAttribute]
public bool get_Secure();
    [CompilerGeneratedAttribute]
public void set_Secure(bool value);
    [CompilerGeneratedAttribute]
public DateTime get_TimeStamp();
    [CompilerGeneratedAttribute]
public void set_TimeStamp(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
}
public class RestSharp.HttpFile : object {
    [CompilerGeneratedAttribute]
private long <ContentLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<Stream> <Writer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public long ContentLength { get; public set; }
    public Action`1<Stream> Writer { get; public set; }
    public string FileName { get; public set; }
    public string ContentType { get; public set; }
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ContentLength();
    [CompilerGeneratedAttribute]
public void set_ContentLength(long value);
    [CompilerGeneratedAttribute]
public Action`1<Stream> get_Writer();
    [CompilerGeneratedAttribute]
public void set_Writer(Action`1<Stream> value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class RestSharp.HttpHeader : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Name { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class RestSharp.HttpParameter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Name { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class RestSharp.HttpResponse : object {
    private ResponseStatus _responseStatus;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ContentLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentEncoding>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <RawBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ResponseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Server>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<HttpHeader> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<HttpCookie> <Cookies>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <ErrorException>k__BackingField;
    public string ContentType { get; public set; }
    public long ContentLength { get; public set; }
    public string ContentEncoding { get; public set; }
    public string Content { get; public set; }
    public HttpStatusCode StatusCode { get; public set; }
    public string StatusDescription { get; public set; }
    public Byte[] RawBytes { get; public set; }
    public Uri ResponseUri { get; public set; }
    public string Server { get; public set; }
    public IList`1<HttpHeader> Headers { get; private set; }
    public IList`1<HttpCookie> Cookies { get; private set; }
    public ResponseStatus ResponseStatus { get; public set; }
    public string ErrorMessage { get; public set; }
    public Exception ErrorException { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_ContentLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentLength(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentEncoding();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentEncoding(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Content();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Content(string value);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_StatusCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StatusCode(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_StatusDescription();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StatusDescription(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Byte[] get_RawBytes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RawBytes(Byte[] value);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_ResponseUri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ResponseUri(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Server();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Server(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<HttpHeader> get_Headers();
    [CompilerGeneratedAttribute]
private void set_Headers(IList`1<HttpHeader> value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<HttpCookie> get_Cookies();
    [CompilerGeneratedAttribute]
private void set_Cookies(IList`1<HttpCookie> value);
    public sealed virtual ResponseStatus get_ResponseStatus();
    public sealed virtual void set_ResponseStatus(ResponseStatus value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Exception get_ErrorException();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ErrorException(Exception value);
}
public interface RestSharp.IAuthenticator {
    public abstract virtual void Authenticate(RestClient client, RestRequest request);
}
public interface RestSharp.IHttp {
    public ICredentials Credentials { get; public set; }
    public string UserAgent { get; public set; }
    public int Timeout { get; public set; }
    public bool FollowRedirects { get; public set; }
    public Nullable`1<int> MaxRedirects { get; public set; }
    public IList`1<HttpHeader> Headers { get; }
    public IList`1<HttpParameter> Parameters { get; }
    public IList`1<HttpFile> Files { get; }
    public IList`1<HttpCookie> Cookies { get; }
    public string RequestBody { get; public set; }
    public string RequestContentType { get; public set; }
    public Uri Url { get; public set; }
    public IWebProxy Proxy { get; public set; }
    public abstract virtual ICredentials get_Credentials();
    public abstract virtual void set_Credentials(ICredentials value);
    public abstract virtual string get_UserAgent();
    public abstract virtual void set_UserAgent(string value);
    public abstract virtual int get_Timeout();
    public abstract virtual void set_Timeout(int value);
    public abstract virtual bool get_FollowRedirects();
    public abstract virtual void set_FollowRedirects(bool value);
    public abstract virtual Nullable`1<int> get_MaxRedirects();
    public abstract virtual void set_MaxRedirects(Nullable`1<int> value);
    public abstract virtual IList`1<HttpHeader> get_Headers();
    public abstract virtual IList`1<HttpParameter> get_Parameters();
    public abstract virtual IList`1<HttpFile> get_Files();
    public abstract virtual IList`1<HttpCookie> get_Cookies();
    public abstract virtual string get_RequestBody();
    public abstract virtual void set_RequestBody(string value);
    public abstract virtual string get_RequestContentType();
    public abstract virtual void set_RequestContentType(string value);
    public abstract virtual Uri get_Url();
    public abstract virtual void set_Url(Uri value);
    public abstract virtual void DeleteAsync(Action`1<HttpResponse> action);
    public abstract virtual void GetAsync(Action`1<HttpResponse> action);
    public abstract virtual void HeadAsync(Action`1<HttpResponse> action);
    public abstract virtual void OptionsAsync(Action`1<HttpResponse> action);
    public abstract virtual void PostAsync(Action`1<HttpResponse> action);
    public abstract virtual void PutAsync(Action`1<HttpResponse> action);
    public abstract virtual HttpResponse Delete();
    public abstract virtual HttpResponse Get();
    public abstract virtual HttpResponse Head();
    public abstract virtual HttpResponse Options();
    public abstract virtual HttpResponse Post();
    public abstract virtual HttpResponse Put();
    public abstract virtual IWebProxy get_Proxy();
    public abstract virtual void set_Proxy(IWebProxy value);
}
public interface RestSharp.IHttpFactory {
    public abstract virtual IHttp Create();
}
public interface RestSharp.IHttpResponse {
    public string ContentType { get; public set; }
    public long ContentLength { get; public set; }
    public string ContentEncoding { get; public set; }
    public string Content { get; public set; }
    public HttpStatusCode StatusCode { get; public set; }
    public string StatusDescription { get; public set; }
    public Byte[] RawBytes { get; public set; }
    public Uri ResponseUri { get; public set; }
    public string Server { get; public set; }
    public IList`1<HttpHeader> Headers { get; }
    public IList`1<HttpCookie> Cookies { get; }
    public ResponseStatus ResponseStatus { get; public set; }
    public string ErrorMessage { get; public set; }
    public Exception ErrorException { get; public set; }
    public abstract virtual string get_ContentType();
    public abstract virtual void set_ContentType(string value);
    public abstract virtual long get_ContentLength();
    public abstract virtual void set_ContentLength(long value);
    public abstract virtual string get_ContentEncoding();
    public abstract virtual void set_ContentEncoding(string value);
    public abstract virtual string get_Content();
    public abstract virtual void set_Content(string value);
    public abstract virtual HttpStatusCode get_StatusCode();
    public abstract virtual void set_StatusCode(HttpStatusCode value);
    public abstract virtual string get_StatusDescription();
    public abstract virtual void set_StatusDescription(string value);
    public abstract virtual Byte[] get_RawBytes();
    public abstract virtual void set_RawBytes(Byte[] value);
    public abstract virtual Uri get_ResponseUri();
    public abstract virtual void set_ResponseUri(Uri value);
    public abstract virtual string get_Server();
    public abstract virtual void set_Server(string value);
    public abstract virtual IList`1<HttpHeader> get_Headers();
    public abstract virtual IList`1<HttpCookie> get_Cookies();
    public abstract virtual ResponseStatus get_ResponseStatus();
    public abstract virtual void set_ResponseStatus(ResponseStatus value);
    public abstract virtual string get_ErrorMessage();
    public abstract virtual void set_ErrorMessage(string value);
    public abstract virtual Exception get_ErrorException();
    public abstract virtual void set_ErrorException(Exception value);
}
public interface RestSharp.IRestClient {
    public string UserAgent { get; public set; }
    public int Timeout { get; public set; }
    public IAuthenticator Authenticator { get; public set; }
    public string BaseUrl { get; public set; }
    public IList`1<Parameter> DefaultParameters { get; }
    public IWebProxy Proxy { get; public set; }
    public abstract virtual string get_UserAgent();
    public abstract virtual void set_UserAgent(string value);
    public abstract virtual int get_Timeout();
    public abstract virtual void set_Timeout(int value);
    public abstract virtual IAuthenticator get_Authenticator();
    public abstract virtual void set_Authenticator(IAuthenticator value);
    public abstract virtual string get_BaseUrl();
    public abstract virtual void set_BaseUrl(string value);
    public abstract virtual IList`1<Parameter> get_DefaultParameters();
    public abstract virtual void ExecuteAsync(RestRequest request, Action`1<RestResponse> callback);
    public abstract virtual void ExecuteAsync(RestRequest request, Action`1<RestResponse`1<T>> callback);
    public abstract virtual RestResponse Execute(RestRequest request);
    public abstract virtual RestResponse`1<T> Execute(RestRequest request);
    public abstract virtual IWebProxy get_Proxy();
    public abstract virtual void set_Proxy(IWebProxy value);
}
public interface RestSharp.IRestRequest {
    public ISerializer JsonSerializer { get; public set; }
    public ISerializer XmlSerializer { get; public set; }
    public List`1<Parameter> Parameters { get; }
    public List`1<FileParameter> Files { get; }
    public Method Method { get; public set; }
    public string Resource { get; public set; }
    public DataFormat RequestFormat { get; public set; }
    public string RootElement { get; public set; }
    public string DateFormat { get; public set; }
    public string XmlNamespace { get; public set; }
    public ICredentials Credentials { get; public set; }
    public int Timeout { get; public set; }
    public int Attempts { get; }
    public abstract virtual ISerializer get_JsonSerializer();
    public abstract virtual void set_JsonSerializer(ISerializer value);
    public abstract virtual ISerializer get_XmlSerializer();
    public abstract virtual void set_XmlSerializer(ISerializer value);
    public abstract virtual List`1<Parameter> get_Parameters();
    public abstract virtual List`1<FileParameter> get_Files();
    public abstract virtual Method get_Method();
    public abstract virtual void set_Method(Method value);
    public abstract virtual string get_Resource();
    public abstract virtual void set_Resource(string value);
    public abstract virtual DataFormat get_RequestFormat();
    public abstract virtual void set_RequestFormat(DataFormat value);
    public abstract virtual string get_RootElement();
    public abstract virtual void set_RootElement(string value);
    public abstract virtual string get_DateFormat();
    public abstract virtual void set_DateFormat(string value);
    public abstract virtual string get_XmlNamespace();
    public abstract virtual void set_XmlNamespace(string value);
    public abstract virtual ICredentials get_Credentials();
    public abstract virtual void set_Credentials(ICredentials value);
    public abstract virtual int get_Timeout();
    public abstract virtual void set_Timeout(int value);
    public abstract virtual int get_Attempts();
    public abstract virtual RestRequest AddFile(string name, string path);
    public abstract virtual RestRequest AddFile(string name, Byte[] bytes, string fileName);
    public abstract virtual RestRequest AddFile(string name, Byte[] bytes, string fileName, string contentType);
    public abstract virtual RestRequest AddBody(object obj, string xmlNamespace);
    public abstract virtual RestRequest AddBody(object obj);
    public abstract virtual RestRequest AddObject(object obj, String[] whitelist);
    public abstract virtual RestRequest AddObject(object obj);
    public abstract virtual RestRequest AddParameter(Parameter p);
    public abstract virtual RestRequest AddParameter(string name, object value);
    public abstract virtual RestRequest AddParameter(string name, object value, ParameterType type);
    public abstract virtual RestRequest AddHeader(string name, string value);
    public abstract virtual RestRequest AddUrlSegment(string name, string value);
}
public interface RestSharp.IRestResponse {
    public RestRequest Request { get; public set; }
    public string ContentType { get; public set; }
    public long ContentLength { get; public set; }
    public string ContentEncoding { get; public set; }
    public string Content { get; public set; }
    public HttpStatusCode StatusCode { get; public set; }
    public string StatusDescription { get; public set; }
    public Byte[] RawBytes { get; public set; }
    public Uri ResponseUri { get; public set; }
    public string Server { get; public set; }
    public IList`1<RestResponseCookie> Cookies { get; }
    public IList`1<Parameter> Headers { get; }
    public ResponseStatus ResponseStatus { get; public set; }
    public string ErrorMessage { get; public set; }
    public Exception ErrorException { get; public set; }
    public abstract virtual RestRequest get_Request();
    public abstract virtual void set_Request(RestRequest value);
    public abstract virtual string get_ContentType();
    public abstract virtual void set_ContentType(string value);
    public abstract virtual long get_ContentLength();
    public abstract virtual void set_ContentLength(long value);
    public abstract virtual string get_ContentEncoding();
    public abstract virtual void set_ContentEncoding(string value);
    public abstract virtual string get_Content();
    public abstract virtual void set_Content(string value);
    public abstract virtual HttpStatusCode get_StatusCode();
    public abstract virtual void set_StatusCode(HttpStatusCode value);
    public abstract virtual string get_StatusDescription();
    public abstract virtual void set_StatusDescription(string value);
    public abstract virtual Byte[] get_RawBytes();
    public abstract virtual void set_RawBytes(Byte[] value);
    public abstract virtual Uri get_ResponseUri();
    public abstract virtual void set_ResponseUri(Uri value);
    public abstract virtual string get_Server();
    public abstract virtual void set_Server(string value);
    public abstract virtual IList`1<RestResponseCookie> get_Cookies();
    public abstract virtual IList`1<Parameter> get_Headers();
    public abstract virtual ResponseStatus get_ResponseStatus();
    public abstract virtual void set_ResponseStatus(ResponseStatus value);
    public abstract virtual string get_ErrorMessage();
    public abstract virtual void set_ErrorMessage(string value);
    public abstract virtual Exception get_ErrorException();
    public abstract virtual void set_ErrorException(Exception value);
}
public interface RestSharp.IRestResponse`1 {
    public T Data { get; public set; }
    public abstract virtual T get_Data();
    public abstract virtual void set_Data(T value);
}
public enum RestSharp.Method : Enum {
    public int value__;
    public static Method GET;
    public static Method POST;
    public static Method PUT;
    public static Method DELETE;
    public static Method HEAD;
    public static Method OPTIONS;
}
public class RestSharp.NtlmAuthenticator : object {
    public sealed virtual void Authenticate(RestClient client, RestRequest request);
}
public abstract class RestSharp.OAuth2Authenticator : object {
    private string _accessToken;
    public string AccessToken { get; }
    public OAuth2Authenticator(string accessToken);
    public string get_AccessToken();
    public abstract virtual void Authenticate(RestClient client, RestRequest request);
}
public class RestSharp.OAuth2AuthorizationRequestHeaderAuthenticator : OAuth2Authenticator {
    private string _authorizationValue;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    public OAuth2AuthorizationRequestHeaderAuthenticator(string accessToken);
    public virtual void Authenticate(RestClient client, RestRequest request);
    [CompilerGeneratedAttribute]
private static bool <Authenticate>b__0(Parameter p);
}
public class RestSharp.OAuth2UriQueryParameterAuthenticator : OAuth2Authenticator {
    public OAuth2UriQueryParameterAuthenticator(string accessToken);
    public virtual void Authenticate(RestClient client, RestRequest request);
}
public class RestSharp.Parameter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterType <Type>k__BackingField;
    public string Name { get; public set; }
    public object Value { get; public set; }
    public ParameterType Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
    [CompilerGeneratedAttribute]
public ParameterType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(ParameterType value);
    public virtual string ToString();
}
public enum RestSharp.ParameterType : Enum {
    public int value__;
    public static ParameterType Cookie;
    public static ParameterType GetOrPost;
    public static ParameterType UrlSegment;
    public static ParameterType HttpHeader;
    public static ParameterType RequestBody;
}
public enum RestSharp.ResponseStatus : Enum {
    public int value__;
    public static ResponseStatus None;
    public static ResponseStatus Completed;
    public static ResponseStatus Error;
    public static ResponseStatus TimedOut;
}
public class RestSharp.RestClient : object {
    public IHttpFactory HttpFactory;
    private string _baseUrl;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IDeserializer> <ContentHandlers>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <AcceptTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Parameter> <DefaultParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FollowRedirects>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxRedirects>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private IAuthenticator <Authenticator>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebProxy <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, bool> CS$<>9__CachedAnonymousMethodDelegate15;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, bool> CS$<>9__CachedAnonymousMethodDelegate16;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, bool> CS$<>9__CachedAnonymousMethodDelegate18;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, bool> CS$<>9__CachedAnonymousMethodDelegate25;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, HttpHeader> CS$<>9__CachedAnonymousMethodDelegate26;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, bool> CS$<>9__CachedAnonymousMethodDelegate27;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, HttpCookie> CS$<>9__CachedAnonymousMethodDelegate28;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, bool> CS$<>9__CachedAnonymousMethodDelegate29;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, HttpParameter> CS$<>9__CachedAnonymousMethodDelegate2a;
    [CompilerGeneratedAttribute]
private static Func`2<Parameter, bool> CS$<>9__CachedAnonymousMethodDelegate2b;
    private IDictionary`2<string, IDeserializer> ContentHandlers { get; private set; }
    private IList`1<string> AcceptTypes { get; private set; }
    public IList`1<Parameter> DefaultParameters { get; private set; }
    public bool FollowRedirects { get; public set; }
    public Nullable`1<int> MaxRedirects { get; public set; }
    public string UserAgent { get; public set; }
    public int Timeout { get; public set; }
    public IAuthenticator Authenticator { get; public set; }
    public string BaseUrl { get; public set; }
    public IWebProxy Proxy { get; public set; }
    public RestClient(string baseUrl);
    public virtual void ExecuteAsync(RestRequest request, Action`1<RestResponse> callback);
    private void ProcessResponse(HttpResponse httpResponse, Action`1<RestResponse> callback);
    public virtual void ExecuteAsync(RestRequest request, Action`1<RestResponse`1<T>> callback);
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IDeserializer> get_ContentHandlers();
    [CompilerGeneratedAttribute]
private void set_ContentHandlers(IDictionary`2<string, IDeserializer> value);
    [CompilerGeneratedAttribute]
private IList`1<string> get_AcceptTypes();
    [CompilerGeneratedAttribute]
private void set_AcceptTypes(IList`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<Parameter> get_DefaultParameters();
    [CompilerGeneratedAttribute]
private void set_DefaultParameters(IList`1<Parameter> value);
    public void AddDefaultParameter(Parameter p);
    public void AddDefaultParameter(string name, object value);
    public void AddDefaultParameter(string name, object value, ParameterType type);
    public void AddDefaultHeader(string name, string value);
    public void AddDefaultUrlSegment(string name, string value);
    public void AddHandler(string contentType, IDeserializer deserializer);
    public void RemoveHandler(string contentType);
    public void ClearHandlers();
    private IDeserializer GetHandler(string contentType);
    [CompilerGeneratedAttribute]
public bool get_FollowRedirects();
    [CompilerGeneratedAttribute]
public void set_FollowRedirects(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxRedirects();
    [CompilerGeneratedAttribute]
public void set_MaxRedirects(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_UserAgent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(int value);
    [CompilerGeneratedAttribute]
public sealed virtual IAuthenticator get_Authenticator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Authenticator(IAuthenticator value);
    public sealed virtual string get_BaseUrl();
    public sealed virtual void set_BaseUrl(string value);
    private void AuthenticateIfNeeded(RestClient client, RestRequest request);
    public Uri BuildUri(RestRequest request);
    private string EncodeParameters(RestRequest request);
    private void ConfigureHttp(RestRequest request, IHttp http);
    private RestResponse ConvertToRestResponse(HttpResponse httpResponse);
    private RestResponse`1<T> Deserialize(RestRequest request, RestResponse raw);
    [CompilerGeneratedAttribute]
public sealed virtual IWebProxy get_Proxy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Proxy(IWebProxy value);
    public Byte[] DownloadData(RestRequest request);
    public virtual RestResponse Execute(RestRequest request);
    public virtual RestResponse`1<T> Execute(RestRequest request);
    private RestResponse GetResponse(RestRequest request);
    private void ConfigureProxy(IHttp http);
    [CompilerGeneratedAttribute]
private static bool <BuildUri>b__13(Parameter p);
    [CompilerGeneratedAttribute]
private static bool <BuildUri>b__14(Parameter p);
    [CompilerGeneratedAttribute]
private static bool <EncodeParameters>b__17(Parameter p);
    [CompilerGeneratedAttribute]
private static bool <ConfigureHttp>b__1e(Parameter p);
    [CompilerGeneratedAttribute]
private static HttpHeader <ConfigureHttp>b__1f(Parameter p);
    [CompilerGeneratedAttribute]
private static bool <ConfigureHttp>b__20(Parameter p);
    [CompilerGeneratedAttribute]
private static HttpCookie <ConfigureHttp>b__21(Parameter p);
    [CompilerGeneratedAttribute]
private static bool <ConfigureHttp>b__22(Parameter p);
    [CompilerGeneratedAttribute]
private static HttpParameter <ConfigureHttp>b__23(Parameter p);
    [CompilerGeneratedAttribute]
private static bool <ConfigureHttp>b__24(Parameter p);
}
public class RestSharp.RestRequest : object {
    private Method _method;
    private DataFormat _requestFormat;
    private int _attempts;
    [CompilerGeneratedAttribute]
private ISerializer <JsonSerializer>k__BackingField;
    [CompilerGeneratedAttribute]
private ISerializer <XmlSerializer>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Parameter> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<FileParameter> <Files>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RootElement>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<RestResponse> <OnBeforeDeserialization>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <XmlNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private ICredentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private object <UserState>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private static Action`1<RestResponse> CS$<>9__CachedAnonymousMethodDelegate1;
    public ISerializer JsonSerializer { get; public set; }
    public ISerializer XmlSerializer { get; public set; }
    public List`1<Parameter> Parameters { get; private set; }
    public List`1<FileParameter> Files { get; private set; }
    public Method Method { get; public set; }
    public string Resource { get; public set; }
    public DataFormat RequestFormat { get; public set; }
    public string RootElement { get; public set; }
    public Action`1<RestResponse> OnBeforeDeserialization { get; public set; }
    public string DateFormat { get; public set; }
    public string XmlNamespace { get; public set; }
    public ICredentials Credentials { get; public set; }
    public object UserState { get; public set; }
    public int Timeout { get; public set; }
    public int Attempts { get; }
    public RestRequest(Method method);
    public RestRequest(string resource);
    public RestRequest(string resource, Method method);
    public RestRequest(Uri resource);
    public RestRequest(Uri resource, Method method);
    [CompilerGeneratedAttribute]
public sealed virtual ISerializer get_JsonSerializer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_JsonSerializer(ISerializer value);
    [CompilerGeneratedAttribute]
public sealed virtual ISerializer get_XmlSerializer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_XmlSerializer(ISerializer value);
    public sealed virtual RestRequest AddFile(string name, string path);
    public sealed virtual RestRequest AddFile(string name, Byte[] bytes, string fileName);
    public sealed virtual RestRequest AddFile(string name, Byte[] bytes, string fileName, string contentType);
    public RestRequest AddFile(string name, Action`1<Stream> writer, string fileName);
    public RestRequest AddFile(string name, Action`1<Stream> writer, string fileName, string contentType);
    private RestRequest AddFile(FileParameter file);
    public sealed virtual RestRequest AddBody(object obj, string xmlNamespace);
    public sealed virtual RestRequest AddBody(object obj);
    public sealed virtual RestRequest AddObject(object obj, String[] whitelist);
    public sealed virtual RestRequest AddObject(object obj);
    public sealed virtual RestRequest AddParameter(Parameter p);
    public sealed virtual RestRequest AddParameter(string name, object value);
    public sealed virtual RestRequest AddParameter(string name, object value, ParameterType type);
    public sealed virtual RestRequest AddHeader(string name, string value);
    public sealed virtual RestRequest AddUrlSegment(string name, string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<Parameter> get_Parameters();
    [CompilerGeneratedAttribute]
private void set_Parameters(List`1<Parameter> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<FileParameter> get_Files();
    [CompilerGeneratedAttribute]
private void set_Files(List`1<FileParameter> value);
    public sealed virtual Method get_Method();
    public sealed virtual void set_Method(Method value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Resource();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Resource(string value);
    public sealed virtual DataFormat get_RequestFormat();
    public sealed virtual void set_RequestFormat(DataFormat value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RootElement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RootElement(string value);
    [CompilerGeneratedAttribute]
public Action`1<RestResponse> get_OnBeforeDeserialization();
    [CompilerGeneratedAttribute]
public void set_OnBeforeDeserialization(Action`1<RestResponse> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DateFormat();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateFormat(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_XmlNamespace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_XmlNamespace(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ICredentials get_Credentials();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Credentials(ICredentials value);
    [CompilerGeneratedAttribute]
public object get_UserState();
    [CompilerGeneratedAttribute]
public void set_UserState(object value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(int value);
    internal void IncreaseNumAttempts();
    public sealed virtual int get_Attempts();
    [CompilerGeneratedAttribute]
private static void <.ctor>b__0(RestResponse r);
}
public class RestSharp.RestResponse : RestResponseBase {
}
public class RestSharp.RestResponse`1 : RestResponseBase {
    [CompilerGeneratedAttribute]
private T <Data>k__BackingField;
    public T Data { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual T get_Data();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Data(T value);
    public static RestResponse`1<T> op_Explicit(RestResponse response);
}
public abstract class RestSharp.RestResponseBase : object {
    private ResponseStatus _responseStatus;
    [CompilerGeneratedAttribute]
private RestRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ContentLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentEncoding>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <RawBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ResponseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Server>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<RestResponseCookie> <Cookies>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Parameter> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <ErrorException>k__BackingField;
    public RestRequest Request { get; public set; }
    public string ContentType { get; public set; }
    public long ContentLength { get; public set; }
    public string ContentEncoding { get; public set; }
    public string Content { get; public set; }
    public HttpStatusCode StatusCode { get; public set; }
    public string StatusDescription { get; public set; }
    public Byte[] RawBytes { get; public set; }
    public Uri ResponseUri { get; public set; }
    public string Server { get; public set; }
    public IList`1<RestResponseCookie> Cookies { get; protected set; }
    public IList`1<Parameter> Headers { get; protected set; }
    public ResponseStatus ResponseStatus { get; public set; }
    public string ErrorMessage { get; public set; }
    public Exception ErrorException { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual RestRequest get_Request();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Request(RestRequest value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_ContentLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentLength(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentEncoding();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentEncoding(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Content();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Content(string value);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_StatusCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StatusCode(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_StatusDescription();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StatusDescription(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Byte[] get_RawBytes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RawBytes(Byte[] value);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_ResponseUri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ResponseUri(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Server();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Server(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<RestResponseCookie> get_Cookies();
    [CompilerGeneratedAttribute]
protected void set_Cookies(IList`1<RestResponseCookie> value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<Parameter> get_Headers();
    [CompilerGeneratedAttribute]
protected void set_Headers(IList`1<Parameter> value);
    public sealed virtual ResponseStatus get_ResponseStatus();
    public sealed virtual void set_ResponseStatus(ResponseStatus value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Exception get_ErrorException();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ErrorException(Exception value);
}
public class RestSharp.RestResponseCookie : object {
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <CommentUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Discard>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Expired>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Expires>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HttpOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Secure>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <TimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    public string Comment { get; public set; }
    public Uri CommentUri { get; public set; }
    public bool Discard { get; public set; }
    public string Domain { get; public set; }
    public bool Expired { get; public set; }
    public DateTime Expires { get; public set; }
    public bool HttpOnly { get; public set; }
    public string Name { get; public set; }
    public string Path { get; public set; }
    public string Port { get; public set; }
    public bool Secure { get; public set; }
    public DateTime TimeStamp { get; public set; }
    public string Value { get; public set; }
    public int Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
    [CompilerGeneratedAttribute]
public Uri get_CommentUri();
    [CompilerGeneratedAttribute]
public void set_CommentUri(Uri value);
    [CompilerGeneratedAttribute]
public bool get_Discard();
    [CompilerGeneratedAttribute]
public void set_Discard(bool value);
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
public void set_Domain(string value);
    [CompilerGeneratedAttribute]
public bool get_Expired();
    [CompilerGeneratedAttribute]
public void set_Expired(bool value);
    [CompilerGeneratedAttribute]
public DateTime get_Expires();
    [CompilerGeneratedAttribute]
public void set_Expires(DateTime value);
    [CompilerGeneratedAttribute]
public bool get_HttpOnly();
    [CompilerGeneratedAttribute]
public void set_HttpOnly(bool value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(string value);
    [CompilerGeneratedAttribute]
public bool get_Secure();
    [CompilerGeneratedAttribute]
public void set_Secure(bool value);
    [CompilerGeneratedAttribute]
public DateTime get_TimeStamp();
    [CompilerGeneratedAttribute]
public void set_TimeStamp(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
}
public interface RestSharp.Serializers.ISerializer {
    public string RootElement { get; public set; }
    public string Namespace { get; public set; }
    public string DateFormat { get; public set; }
    public string ContentType { get; public set; }
    public abstract virtual string Serialize(object obj);
    public abstract virtual string get_RootElement();
    public abstract virtual void set_RootElement(string value);
    public abstract virtual string get_Namespace();
    public abstract virtual void set_Namespace(string value);
    public abstract virtual string get_DateFormat();
    public abstract virtual void set_DateFormat(string value);
    public abstract virtual string get_ContentType();
    public abstract virtual void set_ContentType(string value);
}
public class RestSharp.Serializers.JsonSerializer : object {
    [CompilerGeneratedAttribute]
private string <DateFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RootElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    public string DateFormat { get; public set; }
    public string RootElement { get; public set; }
    public string Namespace { get; public set; }
    public string ContentType { get; public set; }
    public sealed virtual string Serialize(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DateFormat();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateFormat(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RootElement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RootElement(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Namespace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentType(string value);
}
public enum RestSharp.Serializers.NameStyle : Enum {
    public int value__;
    public static NameStyle AsIs;
    public static NameStyle CamelCase;
    public static NameStyle LowerCase;
    public static NameStyle PascalCase;
}
[AttributeUsageAttribute("132")]
public class RestSharp.Serializers.SerializeAsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Attribute>k__BackingField;
    [CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private NameStyle <NameStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    public string Name { get; public set; }
    public bool Attribute { get; public set; }
    public CultureInfo Culture { get; public set; }
    public NameStyle NameStyle { get; public set; }
    public int Index { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Attribute();
    [CompilerGeneratedAttribute]
public void set_Attribute(bool value);
    [CompilerGeneratedAttribute]
public CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
public void set_Culture(CultureInfo value);
    [CompilerGeneratedAttribute]
public NameStyle get_NameStyle();
    [CompilerGeneratedAttribute]
public void set_NameStyle(NameStyle value);
    [CompilerGeneratedAttribute]
public int get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(int value);
    public string TransformName(string input);
}
public class RestSharp.Serializers.XmlSerializer : object {
    [CompilerGeneratedAttribute]
private string <RootElement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<PropertyInfo, <>f__AnonymousType0`2<PropertyInfo, SerializeAsAttribute>> CS$<>9__CachedAnonymousMethodDelegate5;
    [CompilerGeneratedAttribute]
private static Func`2<<>f__AnonymousType0`2<PropertyInfo, SerializeAsAttribute>, bool> CS$<>9__CachedAnonymousMethodDelegate6;
    [CompilerGeneratedAttribute]
private static Func`2<<>f__AnonymousType0`2<PropertyInfo, SerializeAsAttribute>, int> CS$<>9__CachedAnonymousMethodDelegate7;
    [CompilerGeneratedAttribute]
private static Func`2<<>f__AnonymousType0`2<PropertyInfo, SerializeAsAttribute>, PropertyInfo> CS$<>9__CachedAnonymousMethodDelegate8;
    public string RootElement { get; public set; }
    public string Namespace { get; public set; }
    public string DateFormat { get; public set; }
    public string ContentType { get; public set; }
    public XmlSerializer(string namespace);
    public sealed virtual string Serialize(object obj);
    private void Map(XElement root, object obj);
    private string GetSerializedValue(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RootElement();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RootElement(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Namespace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DateFormat();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateFormat(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentType(string value);
    [CompilerGeneratedAttribute]
private static <>f__AnonymousType0`2<PropertyInfo, SerializeAsAttribute> <Map>b__1(PropertyInfo p);
    [CompilerGeneratedAttribute]
private static bool <Map>b__2(<>f__AnonymousType0`2<PropertyInfo, SerializeAsAttribute> <>h__TransparentIdentifier0);
    [CompilerGeneratedAttribute]
private static int <Map>b__3(<>f__AnonymousType0`2<PropertyInfo, SerializeAsAttribute> <>h__TransparentIdentifier0);
    [CompilerGeneratedAttribute]
private static PropertyInfo <Map>b__4(<>f__AnonymousType0`2<PropertyInfo, SerializeAsAttribute> <>h__TransparentIdentifier0);
}
public class RestSharp.SimpleAuthenticator : object {
    private string _usernameKey;
    private string _username;
    private string _passwordKey;
    private string _password;
    public SimpleAuthenticator(string usernameKey, string username, string passwordKey, string password);
    public sealed virtual void Authenticate(RestClient client, RestRequest request);
}
public class RestSharp.SimpleFactory`1 : object {
    public sealed virtual IHttp Create();
}
public class RestSharp.Validation.Require : object {
    public static void Argument(string argumentName, object argumentValue);
}
public class RestSharp.Validation.Validate : object {
    public static void IsBetween(int value, int min, int max);
    public static void IsValidLength(string value, int maxSize);
}
