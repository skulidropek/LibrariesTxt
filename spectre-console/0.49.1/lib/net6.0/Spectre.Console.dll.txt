[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.Advanced.AnsiConsoleExtensions : object {
    [ExtensionAttribute]
public static void WriteAnsi(IAnsiConsole console, string sequence);
    [ExtensionAttribute]
public static string ToAnsi(IAnsiConsole console, IRenderable renderable);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Align : Renderable {
    private IRenderable _renderable;
    [CompilerGeneratedAttribute]
private HorizontalAlignment <Horizontal>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<VerticalAlignment> <Vertical>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Height>k__BackingField;
    public HorizontalAlignment Horizontal { get; public set; }
    public Nullable`1<VerticalAlignment> Vertical { get; public set; }
    public Nullable`1<int> Width { get; public set; }
    public Nullable`1<int> Height { get; public set; }
    public Align(IRenderable renderable, HorizontalAlignment horizontal, Nullable`1<VerticalAlignment> vertical);
    [CompilerGeneratedAttribute]
public HorizontalAlignment get_Horizontal();
    [CompilerGeneratedAttribute]
public void set_Horizontal(HorizontalAlignment value);
    [CompilerGeneratedAttribute]
public Nullable`1<VerticalAlignment> get_Vertical();
    [CompilerGeneratedAttribute]
public void set_Vertical(Nullable`1<VerticalAlignment> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(Nullable`1<int> value);
    public static Align Left(IRenderable renderable, Nullable`1<VerticalAlignment> vertical);
    public static Align Center(IRenderable renderable, Nullable`1<VerticalAlignment> vertical);
    public static Align Right(IRenderable renderable, Nullable`1<VerticalAlignment> vertical);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.AlignableExtensions : object {
    [ExtensionAttribute]
public static T Alignment(T obj, Nullable`1<Justify> alignment);
    [ExtensionAttribute]
public static T LeftAligned(T obj);
    [ExtensionAttribute]
public static T Centered(T obj);
    [ExtensionAttribute]
public static T RightAligned(T obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.Aligner : object {
    public static string Align(string text, Nullable`1<Justify> alignment, int maxWidth);
    public static void Align(T segments, Nullable`1<Justify> alignment, int maxWidth);
    public static void AlignHorizontally(T segments, HorizontalAlignment alignment, int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.AnsiBuilder : object {
    private static AnsiLinkHasher _linkHasher;
    private static AnsiBuilder();
    public static string Build(IAnsiConsole console, IRenderable renderable);
    private static string Build(Profile profile, string text, Style style);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.AnsiColorBuilder : object {
    public static IEnumerable`1<byte> GetAnsiCodes(ColorSystem system, Color color, bool foreground);
    private static IEnumerable`1<byte> GetThreeBit(Color color, bool foreground);
    private static IEnumerable`1<byte> GetFourBit(Color color, bool foreground);
    private static IEnumerable`1<byte> GetEightBit(Color color, bool foreground);
    private static IEnumerable`1<byte> GetTrueColor(Color color, bool foreground);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Spectre.Console.AnsiConsole : object {
    private static AnsiConsoleFactory _factory;
    [NullableAttribute("2")]
private static Recorder _recorder;
    private static Lazy`1<IAnsiConsole> _console;
    [CompilerGeneratedAttribute]
private static Style <CurrentStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <Created>k__BackingField;
    public static IAnsiConsole Console { get; public set; }
    public static IAnsiConsoleCursor Cursor { get; }
    public static Profile Profile { get; }
    internal static Style CurrentStyle { get; private set; }
    internal static bool Created { get; private set; }
    public static Color Foreground { get; public set; }
    public static Color Background { get; public set; }
    public static Decoration Decoration { get; public set; }
    private static AnsiConsole();
    public static IAnsiConsole get_Console();
    public static void set_Console(IAnsiConsole value);
    public static IAnsiConsoleCursor get_Cursor();
    public static Profile get_Profile();
    public static IAnsiConsole Create(AnsiConsoleSettings settings);
    public static void Clear();
    public static void WriteException(Exception exception, ExceptionFormats format);
    public static void WriteException(Exception exception, ExceptionSettings settings);
    public static LiveDisplay Live(IRenderable target);
    public static void Markup(string value);
    public static void Markup(string format, Object[] args);
    public static void MarkupInterpolated(FormattableString value);
    public static void Markup(IFormatProvider provider, string format, Object[] args);
    public static void MarkupInterpolated(IFormatProvider provider, FormattableString value);
    public static void MarkupLine(string value);
    public static void MarkupLine(string format, Object[] args);
    public static void MarkupLineInterpolated(FormattableString value);
    public static void MarkupLine(IFormatProvider provider, string format, Object[] args);
    public static void MarkupLineInterpolated(IFormatProvider provider, FormattableString value);
    public static Progress Progress();
    public static Status Status();
    public static T Prompt(IPrompt`1<T> prompt);
    public static T Ask(string prompt);
    public static T Ask(string prompt, T defaultValue);
    public static bool Confirm(string prompt, bool defaultValue);
    public static void Record();
    public static string ExportText();
    public static string ExportHtml();
    public static string ExportCustom(IAnsiConsoleEncoder encoder);
    [ObsoleteAttribute("Consider using AnsiConsole.Write instead.")]
public static void Render(IRenderable renderable);
    public static void Write(IRenderable renderable);
    public static void AlternateScreen(Action action);
    [CompilerGeneratedAttribute]
internal static Style get_CurrentStyle();
    [CompilerGeneratedAttribute]
private static void set_CurrentStyle(Style value);
    [CompilerGeneratedAttribute]
internal static bool get_Created();
    [CompilerGeneratedAttribute]
private static void set_Created(bool value);
    public static Color get_Foreground();
    public static void set_Foreground(Color value);
    public static Color get_Background();
    public static void set_Background(Color value);
    public static Decoration get_Decoration();
    public static void set_Decoration(Decoration value);
    public static void Reset();
    public static void ResetDecoration();
    public static void ResetColors();
    public static void Write(string value);
    public static void Write(int value);
    public static void Write(IFormatProvider provider, int value);
    public static void Write(UInt32 value);
    public static void Write(IFormatProvider provider, UInt32 value);
    public static void Write(long value);
    public static void Write(IFormatProvider provider, long value);
    public static void Write(ulong value);
    public static void Write(IFormatProvider provider, ulong value);
    public static void Write(float value);
    public static void Write(IFormatProvider provider, float value);
    public static void Write(double value);
    public static void Write(IFormatProvider provider, double value);
    public static void Write(decimal value);
    public static void Write(IFormatProvider provider, decimal value);
    public static void Write(bool value);
    public static void Write(IFormatProvider provider, bool value);
    public static void Write(char value);
    public static void Write(IFormatProvider provider, char value);
    public static void Write(Char[] value);
    public static void Write(IFormatProvider provider, Char[] value);
    public static void Write(string format, Object[] args);
    public static void Write(IFormatProvider provider, string format, Object[] args);
    public static void WriteLine();
    public static void WriteLine(string value);
    public static void WriteLine(int value);
    public static void WriteLine(IFormatProvider provider, int value);
    public static void WriteLine(UInt32 value);
    public static void WriteLine(IFormatProvider provider, UInt32 value);
    public static void WriteLine(long value);
    public static void WriteLine(IFormatProvider provider, long value);
    public static void WriteLine(ulong value);
    public static void WriteLine(IFormatProvider provider, ulong value);
    public static void WriteLine(float value);
    public static void WriteLine(IFormatProvider provider, float value);
    public static void WriteLine(double value);
    public static void WriteLine(IFormatProvider provider, double value);
    public static void WriteLine(decimal value);
    public static void WriteLine(IFormatProvider provider, decimal value);
    public static void WriteLine(bool value);
    public static void WriteLine(IFormatProvider provider, bool value);
    public static void WriteLine(char value);
    public static void WriteLine(IFormatProvider provider, char value);
    public static void WriteLine(Char[] value);
    public static void WriteLine(IFormatProvider provider, Char[] value);
    public static void WriteLine(string format, Object[] args);
    public static void WriteLine(IFormatProvider provider, string format, Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.AnsiConsoleBackend : object {
    private IAnsiConsole _console;
    [CompilerGeneratedAttribute]
private IAnsiConsoleCursor <Cursor>k__BackingField;
    public IAnsiConsoleCursor Cursor { get; }
    public AnsiConsoleBackend(IAnsiConsole console);
    [CompilerGeneratedAttribute]
public sealed virtual IAnsiConsoleCursor get_Cursor();
    public sealed virtual void Clear(bool home);
    public sealed virtual void Write(IRenderable renderable);
}
internal class Spectre.Console.AnsiConsoleCursor : object {
    [NullableAttribute("1")]
private AnsiConsoleBackend _backend;
    [NullableContextAttribute("1")]
public AnsiConsoleCursor(AnsiConsoleBackend backend);
    public sealed virtual void Show(bool show);
    public sealed virtual void Move(CursorDirection direction, int steps);
    public sealed virtual void SetPosition(int column, int line);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.AnsiConsoleExtensions : object {
    [ExtensionAttribute]
public static Recorder CreateRecorder(IAnsiConsole console);
    [ExtensionAttribute]
public static void Clear(IAnsiConsole console);
    [ExtensionAttribute]
public static void Write(IAnsiConsole console, string text);
    [ExtensionAttribute]
public static void Write(IAnsiConsole console, string text, Style style);
    [ExtensionAttribute]
public static void WriteLine(IAnsiConsole console);
    [ExtensionAttribute]
public static void WriteLine(IAnsiConsole console, string text);
    [ExtensionAttribute]
public static void WriteLine(IAnsiConsole console, string text, Style style);
    [ExtensionAttribute]
public static void WriteException(IAnsiConsole console, Exception exception, ExceptionFormats format);
    [ExtensionAttribute]
public static void WriteException(IAnsiConsole console, Exception exception, ExceptionSettings settings);
    [ExtensionAttribute]
public static T RunExclusive(IAnsiConsole console, Func`1<T> func);
    [ExtensionAttribute]
public static Task`1<T> RunExclusive(IAnsiConsole console, Func`1<Task`1<T>> func);
    [AsyncStateMachineAttribute("Spectre.Console.AnsiConsoleExtensions/<ReadLine>d__11")]
[ExtensionAttribute]
internal static Task`1<string> ReadLine(IAnsiConsole console, Style style, bool secret, Nullable`1<char> mask, IEnumerable`1<string> items, CancellationToken cancellationToken);
    private static string AutoComplete(List`1<string> autocomplete, string text, AutoCompleteDirection autoCompleteDirection);
    private static string GetAutocompleteValue(AutoCompleteDirection autoCompleteDirection, IList`1<string> autocomplete, string found);
    [ExtensionAttribute]
public static LiveDisplay Live(IAnsiConsole console, IRenderable target);
    [ExtensionAttribute]
public static void Markup(IAnsiConsole console, string format, Object[] args);
    [ExtensionAttribute]
public static void MarkupInterpolated(IAnsiConsole console, FormattableString value);
    [ExtensionAttribute]
public static void Markup(IAnsiConsole console, IFormatProvider provider, string format, Object[] args);
    [ExtensionAttribute]
public static void MarkupInterpolated(IAnsiConsole console, IFormatProvider provider, FormattableString value);
    [ExtensionAttribute]
public static void Markup(IAnsiConsole console, string value);
    [ExtensionAttribute]
public static void MarkupLine(IAnsiConsole console, string format, Object[] args);
    [ExtensionAttribute]
public static void MarkupLineInterpolated(IAnsiConsole console, FormattableString value);
    [ExtensionAttribute]
public static void MarkupLine(IAnsiConsole console, string value);
    [ExtensionAttribute]
public static void MarkupLine(IAnsiConsole console, IFormatProvider provider, string format, Object[] args);
    [ExtensionAttribute]
public static void MarkupLineInterpolated(IAnsiConsole console, IFormatProvider provider, FormattableString value);
    [ExtensionAttribute]
public static Progress Progress(IAnsiConsole console);
    [ExtensionAttribute]
public static Status Status(IAnsiConsole console);
    [ExtensionAttribute]
public static T Prompt(IAnsiConsole console, IPrompt`1<T> prompt);
    [ExtensionAttribute]
public static T Ask(IAnsiConsole console, string prompt);
    [ExtensionAttribute]
public static T Ask(IAnsiConsole console, string prompt, CultureInfo culture);
    [ExtensionAttribute]
public static bool Confirm(IAnsiConsole console, string prompt, bool defaultValue);
    [ExtensionAttribute]
[ObsoleteAttribute("Consider using IAnsiConsole.Write instead.")]
public static void Render(IAnsiConsole console, IRenderable renderable);
    [ExtensionAttribute]
public static void AlternateScreen(IAnsiConsole console, Action action);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.AnsiConsoleFacade : object {
    private object _renderLock;
    private AnsiConsoleBackend _ansiBackend;
    private LegacyConsoleBackend _legacyBackend;
    [CompilerGeneratedAttribute]
private Profile <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private IAnsiConsoleInput <Input>k__BackingField;
    [CompilerGeneratedAttribute]
private IExclusivityMode <ExclusivityMode>k__BackingField;
    [CompilerGeneratedAttribute]
private RenderPipeline <Pipeline>k__BackingField;
    public Profile Profile { get; }
    public IAnsiConsoleCursor Cursor { get; }
    public IAnsiConsoleInput Input { get; }
    public IExclusivityMode ExclusivityMode { get; }
    public RenderPipeline Pipeline { get; }
    public AnsiConsoleFacade(Profile profile, IExclusivityMode exclusivityMode);
    [CompilerGeneratedAttribute]
public sealed virtual Profile get_Profile();
    public sealed virtual IAnsiConsoleCursor get_Cursor();
    [CompilerGeneratedAttribute]
public sealed virtual IAnsiConsoleInput get_Input();
    [CompilerGeneratedAttribute]
public sealed virtual IExclusivityMode get_ExclusivityMode();
    [CompilerGeneratedAttribute]
public sealed virtual RenderPipeline get_Pipeline();
    public sealed virtual void Clear(bool home);
    public sealed virtual void Write(IRenderable renderable);
    private IAnsiConsoleBackend GetBackend();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("Consider using AnsiConsole.Create instead.")]
public class Spectre.Console.AnsiConsoleFactory : object {
    public IAnsiConsole Create(AnsiConsoleSettings settings);
    private static ValueTuple`2<bool, bool> DetectAnsi(AnsiConsoleSettings settings, TextWriter buffer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.AnsiConsoleOutput : object {
    [CompilerGeneratedAttribute]
private TextWriter <Writer>k__BackingField;
    public TextWriter Writer { get; }
    public bool IsTerminal { get; }
    public int Width { get; }
    public int Height { get; }
    public AnsiConsoleOutput(TextWriter writer);
    [CompilerGeneratedAttribute]
public sealed virtual TextWriter get_Writer();
    public sealed virtual bool get_IsTerminal();
    public sealed virtual int get_Width();
    public sealed virtual int get_Height();
    public sealed virtual void SetEncoding(Encoding encoding);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.AnsiConsoleSettings : object {
    [CompilerGeneratedAttribute]
private AnsiSupport <Ansi>k__BackingField;
    [CompilerGeneratedAttribute]
private ColorSystemSupport <ColorSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private IAnsiConsoleOutput <Out>k__BackingField;
    [CompilerGeneratedAttribute]
private InteractionSupport <Interactive>k__BackingField;
    [CompilerGeneratedAttribute]
private IExclusivityMode <ExclusivityMode>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ProfileEnrichment <Enrichment>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, string> <EnvironmentVariables>k__BackingField;
    public AnsiSupport Ansi { get; public set; }
    public ColorSystemSupport ColorSystem { get; public set; }
    public IAnsiConsoleOutput Out { get; public set; }
    public InteractionSupport Interactive { get; public set; }
    public IExclusivityMode ExclusivityMode { get; public set; }
    [NullableAttribute("1")]
public ProfileEnrichment Enrichment { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, string> EnvironmentVariables { get; public set; }
    [CompilerGeneratedAttribute]
public AnsiSupport get_Ansi();
    [CompilerGeneratedAttribute]
public void set_Ansi(AnsiSupport value);
    [CompilerGeneratedAttribute]
public ColorSystemSupport get_ColorSystem();
    [CompilerGeneratedAttribute]
public void set_ColorSystem(ColorSystemSupport value);
    [CompilerGeneratedAttribute]
public IAnsiConsoleOutput get_Out();
    [CompilerGeneratedAttribute]
public void set_Out(IAnsiConsoleOutput value);
    [CompilerGeneratedAttribute]
public InteractionSupport get_Interactive();
    [CompilerGeneratedAttribute]
public void set_Interactive(InteractionSupport value);
    [CompilerGeneratedAttribute]
public IExclusivityMode get_ExclusivityMode();
    [CompilerGeneratedAttribute]
public void set_ExclusivityMode(IExclusivityMode value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ProfileEnrichment get_Enrichment();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Enrichment(ProfileEnrichment value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_EnvironmentVariables();
    [CompilerGeneratedAttribute]
public void set_EnvironmentVariables(Dictionary`2<string, string> value);
}
internal static class Spectre.Console.AnsiDecorationBuilder : object {
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Spectre.Console.AnsiDecorationBuilder/<GetAnsiCodes>d__0")]
public static IEnumerable`1<byte> GetAnsiCodes(Decoration decoration);
}
internal static class Spectre.Console.AnsiDetector : object {
    [NullableAttribute("1")]
private static Regex[] _regexes;
    private static AnsiDetector();
    public static ValueTuple`2<bool, bool> Detect(bool stdError, bool upgrade);
    private static ValueTuple`2<bool, bool> DetectFromTerm();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.AnsiLinkHasher : object {
    private Random _random;
    public int GenerateId(string link, string text);
    private static int GetLinkHashCode(string link);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.AnsiSequences : object {
    public static string ESC;
    public static string CSI;
    public static int DECTCEM;
    public static string SGR(Byte[] codes);
    public static string ED(int code);
    public static string CUU(int steps);
    public static string CUD(int steps);
    public static string CUF(int steps);
    public static string CUB(int steps);
    public static string CUP(int line, int column);
    public static string RM(int code);
    public static string SM(int code);
    public static string EL(int code);
}
public enum Spectre.Console.AnsiSupport : Enum {
    public int value__;
    public static AnsiSupport Detect;
    public static AnsiSupport Yes;
    public static AnsiSupport No;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.BarChart : Renderable {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<IBarChartItem> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Justify> <LabelAlignment>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowValues>k__BackingField;
    [CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <MaxValue>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`3<double, CultureInfo, string> <ValueFormatter>k__BackingField;
    [NullableAttribute("1")]
public List`1<IBarChartItem> Data { get; }
    public Nullable`1<int> Width { get; public set; }
    public string Label { get; public set; }
    public Nullable`1<Justify> LabelAlignment { get; public set; }
    public bool ShowValues { get; public set; }
    public CultureInfo Culture { get; public set; }
    public Nullable`1<double> MaxValue { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`3<double, CultureInfo, string> ValueFormatter { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public List`1<IBarChartItem> get_Data();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<Justify> get_LabelAlignment();
    [CompilerGeneratedAttribute]
public void set_LabelAlignment(Nullable`1<Justify> value);
    [CompilerGeneratedAttribute]
public bool get_ShowValues();
    [CompilerGeneratedAttribute]
public void set_ShowValues(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Culture(CultureInfo value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_MaxValue();
    [CompilerGeneratedAttribute]
public void set_MaxValue(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Func`3<double, CultureInfo, string> get_ValueFormatter();
    [CompilerGeneratedAttribute]
public void set_ValueFormatter(Func`3<double, CultureInfo, string> value);
    [NullableContextAttribute("1")]
protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    [NullableContextAttribute("1")]
protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.BarChartExtensions : object {
    [ExtensionAttribute]
public static BarChart AddItem(BarChart chart, string label, double value, Nullable`1<Color> color);
    [ExtensionAttribute]
public static BarChart AddItem(BarChart chart, T item);
    [ExtensionAttribute]
public static BarChart AddItems(BarChart chart, IEnumerable`1<T> items);
    [ExtensionAttribute]
public static BarChart AddItems(BarChart chart, IEnumerable`1<T> items, Func`2<T, BarChartItem> converter);
    [ExtensionAttribute]
public static BarChart UseValueFormatter(BarChart chart, Func`3<double, CultureInfo, string> func);
    [ExtensionAttribute]
public static BarChart UseValueFormatter(BarChart chart, Func`2<double, string> func);
    [ExtensionAttribute]
public static BarChart Width(BarChart chart, Nullable`1<int> width);
    [ExtensionAttribute]
public static BarChart Label(BarChart chart, string label);
    [ExtensionAttribute]
public static BarChart ShowValues(BarChart chart);
    [ExtensionAttribute]
public static BarChart HideValues(BarChart chart);
    [ExtensionAttribute]
public static BarChart ShowValues(BarChart chart, bool show);
    [ExtensionAttribute]
public static BarChart LeftAlignLabel(BarChart chart);
    [ExtensionAttribute]
public static BarChart CenterLabel(BarChart chart);
    [ExtensionAttribute]
public static BarChart RightAlignLabel(BarChart chart);
    [ExtensionAttribute]
public static BarChart WithMaxValue(BarChart chart, double maxValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.BarChartItem : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Color> <Color>k__BackingField;
    public string Label { get; }
    public double Value { get; }
    public Nullable`1<Color> Color { get; }
    public BarChartItem(string label, double value, Nullable`1<Color> color);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Label();
    [CompilerGeneratedAttribute]
public sealed virtual double get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Color> get_Color();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Spectre.Console.BoxBorder : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private BoxBorder <SafeBorder>k__BackingField;
    [CompilerGeneratedAttribute]
private static BoxBorder <None>k__BackingField;
    [CompilerGeneratedAttribute]
private static BoxBorder <Ascii>k__BackingField;
    [CompilerGeneratedAttribute]
private static BoxBorder <Double>k__BackingField;
    [CompilerGeneratedAttribute]
private static BoxBorder <Heavy>k__BackingField;
    [CompilerGeneratedAttribute]
private static BoxBorder <Rounded>k__BackingField;
    [CompilerGeneratedAttribute]
private static BoxBorder <Square>k__BackingField;
    [NullableAttribute("2")]
public BoxBorder SafeBorder { get; }
    public static BoxBorder None { get; }
    public static BoxBorder Ascii { get; }
    public static BoxBorder Double { get; }
    public static BoxBorder Heavy { get; }
    public static BoxBorder Rounded { get; }
    public static BoxBorder Square { get; }
    private static BoxBorder();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual BoxBorder get_SafeBorder();
    public abstract virtual string GetPart(BoxBorderPart part);
    [CompilerGeneratedAttribute]
public static BoxBorder get_None();
    [CompilerGeneratedAttribute]
public static BoxBorder get_Ascii();
    [CompilerGeneratedAttribute]
public static BoxBorder get_Double();
    [CompilerGeneratedAttribute]
public static BoxBorder get_Heavy();
    [CompilerGeneratedAttribute]
public static BoxBorder get_Rounded();
    [CompilerGeneratedAttribute]
public static BoxBorder get_Square();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.BreakdownBar : Renderable {
    private List`1<IBreakdownChartItem> _data;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    public Nullable`1<int> Width { get; public set; }
    public BreakdownBar(List`1<IBreakdownChartItem> data);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(Nullable`1<int> value);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    [IteratorStateMachineAttribute("Spectre.Console.BreakdownBar/<Render>d__7")]
protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.BreakdownChart : Renderable {
    [CompilerGeneratedAttribute]
private List`1<IBreakdownChartItem> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowTags>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowTagValues>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`3<double, CultureInfo, string> <ValueFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private Color <ValueColor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Compact>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Expand>k__BackingField;
    public List`1<IBreakdownChartItem> Data { get; }
    public Nullable`1<int> Width { get; public set; }
    public bool ShowTags { get; public set; }
    public bool ShowTagValues { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`3<double, CultureInfo, string> ValueFormatter { get; public set; }
    public Color ValueColor { get; public set; }
    public bool Compact { get; public set; }
    [NullableAttribute("2")]
public CultureInfo Culture { get; public set; }
    public bool Expand { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<IBreakdownChartItem> get_Data();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_ShowTags();
    [CompilerGeneratedAttribute]
public void set_ShowTags(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowTagValues();
    [CompilerGeneratedAttribute]
public void set_ShowTagValues(bool value);
    [CompilerGeneratedAttribute]
public Func`3<double, CultureInfo, string> get_ValueFormatter();
    [CompilerGeneratedAttribute]
public void set_ValueFormatter(Func`3<double, CultureInfo, string> value);
    [CompilerGeneratedAttribute]
public Color get_ValueColor();
    [CompilerGeneratedAttribute]
public void set_ValueColor(Color value);
    [CompilerGeneratedAttribute]
public bool get_Compact();
    [CompilerGeneratedAttribute]
public void set_Compact(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual CultureInfo get_Culture();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_Culture(CultureInfo value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Expand();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expand(bool value);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.BreakdownChartExtensions : object {
    [ExtensionAttribute]
public static BreakdownChart AddItem(BreakdownChart chart, string label, double value, Color color);
    [ExtensionAttribute]
public static BreakdownChart AddItem(BreakdownChart chart, T item);
    [ExtensionAttribute]
public static BreakdownChart AddItems(BreakdownChart chart, IEnumerable`1<T> items);
    [ExtensionAttribute]
public static BreakdownChart AddItems(BreakdownChart chart, IEnumerable`1<T> items, Func`2<T, IBreakdownChartItem> converter);
    [ExtensionAttribute]
public static BreakdownChart Width(BreakdownChart chart, Nullable`1<int> width);
    [ExtensionAttribute]
public static BreakdownChart UseValueFormatter(BreakdownChart chart, Func`3<double, CultureInfo, string> func);
    [ExtensionAttribute]
public static BreakdownChart UseValueFormatter(BreakdownChart chart, Func`2<double, string> func);
    [ExtensionAttribute]
public static BreakdownChart ShowPercentage(BreakdownChart chart);
    [ExtensionAttribute]
public static BreakdownChart ShowTags(BreakdownChart chart);
    [ExtensionAttribute]
public static BreakdownChart HideTags(BreakdownChart chart);
    [ExtensionAttribute]
public static BreakdownChart ShowTags(BreakdownChart chart, bool show);
    [ExtensionAttribute]
public static BreakdownChart ShowTagValues(BreakdownChart chart);
    [ExtensionAttribute]
public static BreakdownChart HideTagValues(BreakdownChart chart);
    [ExtensionAttribute]
public static BreakdownChart ShowTagValues(BreakdownChart chart, bool show);
    [ExtensionAttribute]
public static BreakdownChart Compact(BreakdownChart chart);
    [ExtensionAttribute]
public static BreakdownChart FullSize(BreakdownChart chart);
    [ExtensionAttribute]
public static BreakdownChart Compact(BreakdownChart chart, bool compact);
    [ExtensionAttribute]
public static BreakdownChart WithValueColor(BreakdownChart chart, Color color);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.BreakdownChartItem : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Color <Color>k__BackingField;
    public string Label { get; }
    public double Value { get; }
    public Color Color { get; }
    public BreakdownChartItem(string label, double value, Color color);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Label();
    [CompilerGeneratedAttribute]
public sealed virtual double get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual Color get_Color();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.BreakdownTags : Renderable {
    private List`1<IBreakdownChartItem> _data;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowTagValues>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`3<double, CultureInfo, string> <ValueFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private Color <ValueColor>k__BackingField;
    public Nullable`1<int> Width { get; public set; }
    [NullableAttribute("2")]
public CultureInfo Culture { get; public set; }
    public bool ShowTagValues { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`3<double, CultureInfo, string> ValueFormatter { get; public set; }
    public Color ValueColor { get; public set; }
    public BreakdownTags(List`1<IBreakdownChartItem> data);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(Nullable`1<int> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public CultureInfo get_Culture();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Culture(CultureInfo value);
    [CompilerGeneratedAttribute]
public bool get_ShowTagValues();
    [CompilerGeneratedAttribute]
public void set_ShowTagValues(bool value);
    [CompilerGeneratedAttribute]
public Func`3<double, CultureInfo, string> get_ValueFormatter();
    [CompilerGeneratedAttribute]
public void set_ValueFormatter(Func`3<double, CultureInfo, string> value);
    [CompilerGeneratedAttribute]
public Color get_ValueColor();
    [CompilerGeneratedAttribute]
public void set_ValueColor(Color value);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    [IteratorStateMachineAttribute("Spectre.Console.BreakdownTags/<Render>d__23")]
protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    private string GetTag(IBreakdownChartItem item, CultureInfo culture);
    private string FormatValue(IBreakdownChartItem item, CultureInfo culture);
    private static string DefaultFormatter(double value, CultureInfo culture);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Calendar : JustInTimeRenderable {
    private static int NumberOfWeekDays;
    private static int ExpectedRowCount;
    private ListWithCallback`1<CalendarEvent> _calendarEvents;
    private int _year;
    private int _month;
    private int _day;
    private TableBorder _border;
    private bool _useSafeBorder;
    [NullableAttribute("2")]
private Style _borderStyle;
    [NullableAttribute("2")]
private CultureInfo _culture;
    private Style _highlightStyle;
    private bool _showHeader;
    [NullableAttribute("2")]
private Style _headerStyle;
    private Nullable`1<Justify> _alignment;
    public int Year { get; public set; }
    public int Month { get; public set; }
    public int Day { get; public set; }
    public TableBorder Border { get; public set; }
    public bool UseSafeBorder { get; public set; }
    [NullableAttribute("2")]
public Style BorderStyle { get; public set; }
    [NullableAttribute("2")]
public CultureInfo Culture { get; public set; }
    public Style HighlightStyle { get; public set; }
    public bool ShowHeader { get; public set; }
    [NullableAttribute("2")]
public Style HeaderStyle { get; public set; }
    [ObsoleteAttribute("Use the Align widget instead. This property will be removed in a later release.")]
public Nullable`1<Justify> Alignment { get; public set; }
    public IList`1<CalendarEvent> CalendarEvents { get; }
    public Calendar(DateTime date);
    public Calendar(int year, int month);
    public Calendar(int year, int month, int day);
    public int get_Year();
    public void set_Year(int value);
    public int get_Month();
    public void set_Month(int value);
    public int get_Day();
    public void set_Day(int value);
    public sealed virtual TableBorder get_Border();
    public sealed virtual void set_Border(TableBorder value);
    public sealed virtual bool get_UseSafeBorder();
    public sealed virtual void set_UseSafeBorder(bool value);
    [NullableContextAttribute("2")]
public sealed virtual Style get_BorderStyle();
    [NullableContextAttribute("2")]
public sealed virtual void set_BorderStyle(Style value);
    [NullableContextAttribute("2")]
public sealed virtual CultureInfo get_Culture();
    [NullableContextAttribute("2")]
public sealed virtual void set_Culture(CultureInfo value);
    public Style get_HighlightStyle();
    public void set_HighlightStyle(Style value);
    public bool get_ShowHeader();
    public void set_ShowHeader(bool value);
    [NullableContextAttribute("2")]
public Style get_HeaderStyle();
    [NullableContextAttribute("2")]
public void set_HeaderStyle(Style value);
    public sealed virtual Nullable`1<Justify> get_Alignment();
    public sealed virtual void set_Alignment(Nullable`1<Justify> value);
    public IList`1<CalendarEvent> get_CalendarEvents();
    protected virtual IRenderable Build();
    private DayOfWeek[] GetWeekdays();
    private DayOfWeek[] BuildWeekDayTable();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.CalendarEvent : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Year>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Month>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Day>k__BackingField;
    public string Description { get; }
    public int Year { get; }
    public int Month { get; }
    public int Day { get; }
    public CalendarEvent(int year, int month, int day);
    public CalendarEvent(string description, int year, int month, int day);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public int get_Year();
    [CompilerGeneratedAttribute]
public int get_Month();
    [CompilerGeneratedAttribute]
public int get_Day();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.CalendarExtensions : object {
    [ExtensionAttribute]
public static Calendar AddCalendarEvent(Calendar calendar, DateTime date);
    [ExtensionAttribute]
public static Calendar AddCalendarEvent(Calendar calendar, string description, DateTime date);
    [ExtensionAttribute]
public static Calendar AddCalendarEvent(Calendar calendar, int year, int month, int day);
    [ExtensionAttribute]
public static Calendar AddCalendarEvent(Calendar calendar, string description, int year, int month, int day);
    [ExtensionAttribute]
public static Calendar HighlightStyle(Calendar calendar, Style style);
    [ExtensionAttribute]
public static Calendar HeaderStyle(Calendar calendar, Style style);
    [ExtensionAttribute]
public static Calendar ShowHeader(Calendar calendar);
    [ExtensionAttribute]
public static Calendar HideHeader(Calendar calendar);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Canvas : Renderable {
    private Nullable`1[0...,0...] _pixels;
    [CompilerGeneratedAttribute]
private int <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxWidth>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Scale>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PixelWidth>k__BackingField;
    public int Width { get; }
    public int Height { get; }
    public Nullable`1<int> MaxWidth { get; public set; }
    public bool Scale { get; public set; }
    public int PixelWidth { get; public set; }
    public Canvas(int width, int height);
    [CompilerGeneratedAttribute]
public int get_Width();
    [CompilerGeneratedAttribute]
public int get_Height();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxWidth();
    [CompilerGeneratedAttribute]
public void set_MaxWidth(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_Scale();
    [CompilerGeneratedAttribute]
public void set_Scale(bool value);
    [CompilerGeneratedAttribute]
public int get_PixelWidth();
    [CompilerGeneratedAttribute]
public void set_PixelWidth(int value);
    public Canvas SetPixel(int x, int y, Color color);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    [IteratorStateMachineAttribute("Spectre.Console.Canvas/<Render>d__22")]
protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    private Nullable`1[0...,0...] ScaleDown(int newWidth, int newHeight);
}
public class Spectre.Console.Capabilities : object {
    [NullableAttribute("1")]
private IAnsiConsoleOutput _out;
    [CompilerGeneratedAttribute]
private ColorSystem <ColorSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Ansi>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Legacy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Interactive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Unicode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AlternateBuffer>k__BackingField;
    public ColorSystem ColorSystem { get; public set; }
    public bool Ansi { get; public set; }
    public bool Links { get; public set; }
    public bool Legacy { get; public set; }
    [ObsoleteAttribute("Use Profile.Out.IsTerminal instead")]
public bool IsTerminal { get; }
    public bool Interactive { get; public set; }
    public bool Unicode { get; public set; }
    public bool AlternateBuffer { get; public set; }
    [NullableContextAttribute("1")]
internal Capabilities(IAnsiConsoleOutput out);
    [CompilerGeneratedAttribute]
public sealed virtual ColorSystem get_ColorSystem();
    [CompilerGeneratedAttribute]
public void set_ColorSystem(ColorSystem value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Ansi();
    [CompilerGeneratedAttribute]
public void set_Ansi(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Legacy();
    [CompilerGeneratedAttribute]
public void set_Legacy(bool value);
    public sealed virtual bool get_IsTerminal();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Interactive();
    [CompilerGeneratedAttribute]
public void set_Interactive(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Unicode();
    [CompilerGeneratedAttribute]
public void set_Unicode(bool value);
    [CompilerGeneratedAttribute]
public bool get_AlternateBuffer();
    [CompilerGeneratedAttribute]
public void set_AlternateBuffer(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.Cell : object {
    private static Nullable`1[] _runeWidthCache;
    private static Cell();
    public static int GetCellLength(string text);
    public static int GetCellLength(char rune);
}
[ExtensionAttribute]
public static class Spectre.Console.CharExtensions : object {
    [ExtensionAttribute]
public static int GetCellWidth(char character);
}
public class Spectre.Console.CircularTreeException : Exception {
    [NullableContextAttribute("1")]
internal CircularTreeException(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Color : ValueType {
    [CompilerGeneratedAttribute]
private static Color <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <R>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <G>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <B>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<byte> <Number>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Black>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Maroon>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Green>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Olive>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Navy>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Purple>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Teal>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Silver>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Red>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Lime>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Yellow>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Blue>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Fuchsia>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Aqua>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <White>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey0>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <NavyBlue>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkBlue>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Blue3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Blue3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Blue1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkGreen>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepSkyBlue4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepSkyBlue4_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepSkyBlue4_2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DodgerBlue3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DodgerBlue2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Green4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SpringGreen4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Turquoise4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepSkyBlue3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepSkyBlue3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DodgerBlue1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Green3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SpringGreen3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkCyan>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSeaGreen>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepSkyBlue2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepSkyBlue1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Green3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SpringGreen3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SpringGreen2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Cyan3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkTurquoise>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Turquoise2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Green1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SpringGreen2_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SpringGreen1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumSpringGreen>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Cyan2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Cyan1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkRed>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepPink4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Purple4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Purple4_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Purple3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <BlueViolet>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Orange4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey37>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumPurple4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SlateBlue3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SlateBlue3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <RoyalBlue1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Chartreuse4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSeaGreen4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <PaleTurquoise4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SteelBlue>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SteelBlue3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <CornflowerBlue>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Chartreuse3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSeaGreen4_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <CadetBlue>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <CadetBlue_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SkyBlue3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SteelBlue1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Chartreuse3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <PaleGreen3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SeaGreen3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Aquamarine3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumTurquoise>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SteelBlue1_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Chartreuse2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SeaGreen2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SeaGreen1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SeaGreen1_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Aquamarine1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSlateGray2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkRed_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepPink4_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkMagenta>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkMagenta_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkViolet>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Purple_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Orange4_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightPink4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Plum4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumPurple3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumPurple3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SlateBlue1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Yellow4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Wheat4>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey53>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSlateGrey>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumPurple>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSlateBlue>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Yellow4_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkOliveGreen3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSeaGreen>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSkyBlue3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSkyBlue3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SkyBlue2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Chartreuse2_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkOliveGreen3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <PaleGreen3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSeaGreen3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSlateGray3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SkyBlue1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Chartreuse1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightGreen>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightGreen_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <PaleGreen1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Aquamarine1_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSlateGray1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Red3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepPink4_2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumVioletRed>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Magenta3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkViolet_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Purple_2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkOrange3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <IndianRed>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <HotPink3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumOrchid3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumOrchid>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumPurple2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkGoldenrod>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSalmon3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <RosyBrown>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey63>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumPurple2_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumPurple1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Gold3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkKhaki>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <NavajoWhite3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey69>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSteelBlue3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSteelBlue>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Yellow3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkOliveGreen3_2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSeaGreen3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSeaGreen2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightCyan3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSkyBlue1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <GreenYellow>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkOliveGreen2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <PaleGreen1_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSeaGreen2_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSeaGreen1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <PaleTurquoise1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Red3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepPink3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepPink3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Magenta3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Magenta3_2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Magenta2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkOrange3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <IndianRed_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <HotPink3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <HotPink2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Orchid>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumOrchid1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Orange3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSalmon3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightPink3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Pink3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Plum3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Violet>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Gold3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightGoldenrod3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Tan>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MistyRose3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Thistle3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Plum2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Yellow3_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Khaki3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightGoldenrod2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightYellow3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey84>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSteelBlue1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Yellow2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkOliveGreen1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkOliveGreen1_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkSeaGreen1_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Honeydew2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightCyan1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Red1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepPink2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepPink1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DeepPink1_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Magenta2_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Magenta1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <OrangeRed1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <IndianRed1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <IndianRed1_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <HotPink>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <HotPink_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MediumOrchid1_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <DarkOrange>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Salmon1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightCoral>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <PaleVioletRed1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Orchid2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Orchid1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Orange1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <SandyBrown>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightSalmon1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightPink1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Pink1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Plum1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Gold1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightGoldenrod2_1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightGoldenrod2_2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <NavajoWhite1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <MistyRose1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Thistle1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Yellow1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <LightGoldenrod1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Khaki1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Wheat1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Cornsilk1>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey100>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey3>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey7>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey11>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey15>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey19>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey23>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey27>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey30>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey35>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey39>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey42>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey46>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey50>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey54>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey58>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey62>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey66>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey70>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey74>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey78>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey82>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey85>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey89>k__BackingField;
    [CompilerGeneratedAttribute]
private static Color <Grey93>k__BackingField;
    public static Color Default { get; }
    public byte R { get; }
    public byte G { get; }
    public byte B { get; }
    internal Nullable`1<byte> Number { get; }
    internal bool IsDefault { get; }
    public static Color Black { get; }
    public static Color Maroon { get; }
    public static Color Green { get; }
    public static Color Olive { get; }
    public static Color Navy { get; }
    public static Color Purple { get; }
    public static Color Teal { get; }
    public static Color Silver { get; }
    public static Color Grey { get; }
    public static Color Red { get; }
    public static Color Lime { get; }
    public static Color Yellow { get; }
    public static Color Blue { get; }
    public static Color Fuchsia { get; }
    public static Color Aqua { get; }
    public static Color White { get; }
    public static Color Grey0 { get; }
    public static Color NavyBlue { get; }
    public static Color DarkBlue { get; }
    public static Color Blue3 { get; }
    public static Color Blue3_1 { get; }
    public static Color Blue1 { get; }
    public static Color DarkGreen { get; }
    public static Color DeepSkyBlue4 { get; }
    public static Color DeepSkyBlue4_1 { get; }
    public static Color DeepSkyBlue4_2 { get; }
    public static Color DodgerBlue3 { get; }
    public static Color DodgerBlue2 { get; }
    public static Color Green4 { get; }
    public static Color SpringGreen4 { get; }
    public static Color Turquoise4 { get; }
    public static Color DeepSkyBlue3 { get; }
    public static Color DeepSkyBlue3_1 { get; }
    public static Color DodgerBlue1 { get; }
    public static Color Green3 { get; }
    public static Color SpringGreen3 { get; }
    public static Color DarkCyan { get; }
    public static Color LightSeaGreen { get; }
    public static Color DeepSkyBlue2 { get; }
    public static Color DeepSkyBlue1 { get; }
    public static Color Green3_1 { get; }
    public static Color SpringGreen3_1 { get; }
    public static Color SpringGreen2 { get; }
    public static Color Cyan3 { get; }
    public static Color DarkTurquoise { get; }
    public static Color Turquoise2 { get; }
    public static Color Green1 { get; }
    public static Color SpringGreen2_1 { get; }
    public static Color SpringGreen1 { get; }
    public static Color MediumSpringGreen { get; }
    public static Color Cyan2 { get; }
    public static Color Cyan1 { get; }
    public static Color DarkRed { get; }
    public static Color DeepPink4 { get; }
    public static Color Purple4 { get; }
    public static Color Purple4_1 { get; }
    public static Color Purple3 { get; }
    public static Color BlueViolet { get; }
    public static Color Orange4 { get; }
    public static Color Grey37 { get; }
    public static Color MediumPurple4 { get; }
    public static Color SlateBlue3 { get; }
    public static Color SlateBlue3_1 { get; }
    public static Color RoyalBlue1 { get; }
    public static Color Chartreuse4 { get; }
    public static Color DarkSeaGreen4 { get; }
    public static Color PaleTurquoise4 { get; }
    public static Color SteelBlue { get; }
    public static Color SteelBlue3 { get; }
    public static Color CornflowerBlue { get; }
    public static Color Chartreuse3 { get; }
    public static Color DarkSeaGreen4_1 { get; }
    public static Color CadetBlue { get; }
    public static Color CadetBlue_1 { get; }
    public static Color SkyBlue3 { get; }
    public static Color SteelBlue1 { get; }
    public static Color Chartreuse3_1 { get; }
    public static Color PaleGreen3 { get; }
    public static Color SeaGreen3 { get; }
    public static Color Aquamarine3 { get; }
    public static Color MediumTurquoise { get; }
    public static Color SteelBlue1_1 { get; }
    public static Color Chartreuse2 { get; }
    public static Color SeaGreen2 { get; }
    public static Color SeaGreen1 { get; }
    public static Color SeaGreen1_1 { get; }
    public static Color Aquamarine1 { get; }
    public static Color DarkSlateGray2 { get; }
    public static Color DarkRed_1 { get; }
    public static Color DeepPink4_1 { get; }
    public static Color DarkMagenta { get; }
    public static Color DarkMagenta_1 { get; }
    public static Color DarkViolet { get; }
    public static Color Purple_1 { get; }
    public static Color Orange4_1 { get; }
    public static Color LightPink4 { get; }
    public static Color Plum4 { get; }
    public static Color MediumPurple3 { get; }
    public static Color MediumPurple3_1 { get; }
    public static Color SlateBlue1 { get; }
    public static Color Yellow4 { get; }
    public static Color Wheat4 { get; }
    public static Color Grey53 { get; }
    public static Color LightSlateGrey { get; }
    public static Color MediumPurple { get; }
    public static Color LightSlateBlue { get; }
    public static Color Yellow4_1 { get; }
    public static Color DarkOliveGreen3 { get; }
    public static Color DarkSeaGreen { get; }
    public static Color LightSkyBlue3 { get; }
    public static Color LightSkyBlue3_1 { get; }
    public static Color SkyBlue2 { get; }
    public static Color Chartreuse2_1 { get; }
    public static Color DarkOliveGreen3_1 { get; }
    public static Color PaleGreen3_1 { get; }
    public static Color DarkSeaGreen3 { get; }
    public static Color DarkSlateGray3 { get; }
    public static Color SkyBlue1 { get; }
    public static Color Chartreuse1 { get; }
    public static Color LightGreen { get; }
    public static Color LightGreen_1 { get; }
    public static Color PaleGreen1 { get; }
    public static Color Aquamarine1_1 { get; }
    public static Color DarkSlateGray1 { get; }
    public static Color Red3 { get; }
    public static Color DeepPink4_2 { get; }
    public static Color MediumVioletRed { get; }
    public static Color Magenta3 { get; }
    public static Color DarkViolet_1 { get; }
    public static Color Purple_2 { get; }
    public static Color DarkOrange3 { get; }
    public static Color IndianRed { get; }
    public static Color HotPink3 { get; }
    public static Color MediumOrchid3 { get; }
    public static Color MediumOrchid { get; }
    public static Color MediumPurple2 { get; }
    public static Color DarkGoldenrod { get; }
    public static Color LightSalmon3 { get; }
    public static Color RosyBrown { get; }
    public static Color Grey63 { get; }
    public static Color MediumPurple2_1 { get; }
    public static Color MediumPurple1 { get; }
    public static Color Gold3 { get; }
    public static Color DarkKhaki { get; }
    public static Color NavajoWhite3 { get; }
    public static Color Grey69 { get; }
    public static Color LightSteelBlue3 { get; }
    public static Color LightSteelBlue { get; }
    public static Color Yellow3 { get; }
    public static Color DarkOliveGreen3_2 { get; }
    public static Color DarkSeaGreen3_1 { get; }
    public static Color DarkSeaGreen2 { get; }
    public static Color LightCyan3 { get; }
    public static Color LightSkyBlue1 { get; }
    public static Color GreenYellow { get; }
    public static Color DarkOliveGreen2 { get; }
    public static Color PaleGreen1_1 { get; }
    public static Color DarkSeaGreen2_1 { get; }
    public static Color DarkSeaGreen1 { get; }
    public static Color PaleTurquoise1 { get; }
    public static Color Red3_1 { get; }
    public static Color DeepPink3 { get; }
    public static Color DeepPink3_1 { get; }
    public static Color Magenta3_1 { get; }
    public static Color Magenta3_2 { get; }
    public static Color Magenta2 { get; }
    public static Color DarkOrange3_1 { get; }
    public static Color IndianRed_1 { get; }
    public static Color HotPink3_1 { get; }
    public static Color HotPink2 { get; }
    public static Color Orchid { get; }
    public static Color MediumOrchid1 { get; }
    public static Color Orange3 { get; }
    public static Color LightSalmon3_1 { get; }
    public static Color LightPink3 { get; }
    public static Color Pink3 { get; }
    public static Color Plum3 { get; }
    public static Color Violet { get; }
    public static Color Gold3_1 { get; }
    public static Color LightGoldenrod3 { get; }
    public static Color Tan { get; }
    public static Color MistyRose3 { get; }
    public static Color Thistle3 { get; }
    public static Color Plum2 { get; }
    public static Color Yellow3_1 { get; }
    public static Color Khaki3 { get; }
    public static Color LightGoldenrod2 { get; }
    public static Color LightYellow3 { get; }
    public static Color Grey84 { get; }
    public static Color LightSteelBlue1 { get; }
    public static Color Yellow2 { get; }
    public static Color DarkOliveGreen1 { get; }
    public static Color DarkOliveGreen1_1 { get; }
    public static Color DarkSeaGreen1_1 { get; }
    public static Color Honeydew2 { get; }
    public static Color LightCyan1 { get; }
    public static Color Red1 { get; }
    public static Color DeepPink2 { get; }
    public static Color DeepPink1 { get; }
    public static Color DeepPink1_1 { get; }
    public static Color Magenta2_1 { get; }
    public static Color Magenta1 { get; }
    public static Color OrangeRed1 { get; }
    public static Color IndianRed1 { get; }
    public static Color IndianRed1_1 { get; }
    public static Color HotPink { get; }
    public static Color HotPink_1 { get; }
    public static Color MediumOrchid1_1 { get; }
    public static Color DarkOrange { get; }
    public static Color Salmon1 { get; }
    public static Color LightCoral { get; }
    public static Color PaleVioletRed1 { get; }
    public static Color Orchid2 { get; }
    public static Color Orchid1 { get; }
    public static Color Orange1 { get; }
    public static Color SandyBrown { get; }
    public static Color LightSalmon1 { get; }
    public static Color LightPink1 { get; }
    public static Color Pink1 { get; }
    public static Color Plum1 { get; }
    public static Color Gold1 { get; }
    public static Color LightGoldenrod2_1 { get; }
    public static Color LightGoldenrod2_2 { get; }
    public static Color NavajoWhite1 { get; }
    public static Color MistyRose1 { get; }
    public static Color Thistle1 { get; }
    public static Color Yellow1 { get; }
    public static Color LightGoldenrod1 { get; }
    public static Color Khaki1 { get; }
    public static Color Wheat1 { get; }
    public static Color Cornsilk1 { get; }
    public static Color Grey100 { get; }
    public static Color Grey3 { get; }
    public static Color Grey7 { get; }
    public static Color Grey11 { get; }
    public static Color Grey15 { get; }
    public static Color Grey19 { get; }
    public static Color Grey23 { get; }
    public static Color Grey27 { get; }
    public static Color Grey30 { get; }
    public static Color Grey35 { get; }
    public static Color Grey39 { get; }
    public static Color Grey42 { get; }
    public static Color Grey46 { get; }
    public static Color Grey50 { get; }
    public static Color Grey54 { get; }
    public static Color Grey58 { get; }
    public static Color Grey62 { get; }
    public static Color Grey66 { get; }
    public static Color Grey70 { get; }
    public static Color Grey74 { get; }
    public static Color Grey78 { get; }
    public static Color Grey82 { get; }
    public static Color Grey85 { get; }
    public static Color Grey89 { get; }
    public static Color Grey93 { get; }
    private static Color();
    public Color(byte red, byte green, byte blue);
    internal Color(byte number, byte red, byte green, byte blue, bool isDefault);
    [CompilerGeneratedAttribute]
public static Color get_Default();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public byte get_R();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public byte get_G();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public byte get_B();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal Nullable`1<byte> get_Number();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal bool get_IsDefault();
    public Color Blend(Color other, float factor);
    public string ToHex();
    public virtual int GetHashCode();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(Color other);
    public static bool op_Equality(Color left, Color right);
    public static bool op_Inequality(Color left, Color right);
    public static Color op_Implicit(int number);
    public static Color op_Implicit(ConsoleColor color);
    public static ConsoleColor op_Implicit(Color color);
    public static ConsoleColor ToConsoleColor(Color color);
    public static Color FromInt32(int number);
    public static Color FromConsoleColor(ConsoleColor color);
    public string ToMarkup();
    public virtual string ToString();
    [CompilerGeneratedAttribute]
public static Color get_Black();
    [CompilerGeneratedAttribute]
public static Color get_Maroon();
    [CompilerGeneratedAttribute]
public static Color get_Green();
    [CompilerGeneratedAttribute]
public static Color get_Olive();
    [CompilerGeneratedAttribute]
public static Color get_Navy();
    [CompilerGeneratedAttribute]
public static Color get_Purple();
    [CompilerGeneratedAttribute]
public static Color get_Teal();
    [CompilerGeneratedAttribute]
public static Color get_Silver();
    [CompilerGeneratedAttribute]
public static Color get_Grey();
    [CompilerGeneratedAttribute]
public static Color get_Red();
    [CompilerGeneratedAttribute]
public static Color get_Lime();
    [CompilerGeneratedAttribute]
public static Color get_Yellow();
    [CompilerGeneratedAttribute]
public static Color get_Blue();
    [CompilerGeneratedAttribute]
public static Color get_Fuchsia();
    [CompilerGeneratedAttribute]
public static Color get_Aqua();
    [CompilerGeneratedAttribute]
public static Color get_White();
    [CompilerGeneratedAttribute]
public static Color get_Grey0();
    [CompilerGeneratedAttribute]
public static Color get_NavyBlue();
    [CompilerGeneratedAttribute]
public static Color get_DarkBlue();
    [CompilerGeneratedAttribute]
public static Color get_Blue3();
    [CompilerGeneratedAttribute]
public static Color get_Blue3_1();
    [CompilerGeneratedAttribute]
public static Color get_Blue1();
    [CompilerGeneratedAttribute]
public static Color get_DarkGreen();
    [CompilerGeneratedAttribute]
public static Color get_DeepSkyBlue4();
    [CompilerGeneratedAttribute]
public static Color get_DeepSkyBlue4_1();
    [CompilerGeneratedAttribute]
public static Color get_DeepSkyBlue4_2();
    [CompilerGeneratedAttribute]
public static Color get_DodgerBlue3();
    [CompilerGeneratedAttribute]
public static Color get_DodgerBlue2();
    [CompilerGeneratedAttribute]
public static Color get_Green4();
    [CompilerGeneratedAttribute]
public static Color get_SpringGreen4();
    [CompilerGeneratedAttribute]
public static Color get_Turquoise4();
    [CompilerGeneratedAttribute]
public static Color get_DeepSkyBlue3();
    [CompilerGeneratedAttribute]
public static Color get_DeepSkyBlue3_1();
    [CompilerGeneratedAttribute]
public static Color get_DodgerBlue1();
    [CompilerGeneratedAttribute]
public static Color get_Green3();
    [CompilerGeneratedAttribute]
public static Color get_SpringGreen3();
    [CompilerGeneratedAttribute]
public static Color get_DarkCyan();
    [CompilerGeneratedAttribute]
public static Color get_LightSeaGreen();
    [CompilerGeneratedAttribute]
public static Color get_DeepSkyBlue2();
    [CompilerGeneratedAttribute]
public static Color get_DeepSkyBlue1();
    [CompilerGeneratedAttribute]
public static Color get_Green3_1();
    [CompilerGeneratedAttribute]
public static Color get_SpringGreen3_1();
    [CompilerGeneratedAttribute]
public static Color get_SpringGreen2();
    [CompilerGeneratedAttribute]
public static Color get_Cyan3();
    [CompilerGeneratedAttribute]
public static Color get_DarkTurquoise();
    [CompilerGeneratedAttribute]
public static Color get_Turquoise2();
    [CompilerGeneratedAttribute]
public static Color get_Green1();
    [CompilerGeneratedAttribute]
public static Color get_SpringGreen2_1();
    [CompilerGeneratedAttribute]
public static Color get_SpringGreen1();
    [CompilerGeneratedAttribute]
public static Color get_MediumSpringGreen();
    [CompilerGeneratedAttribute]
public static Color get_Cyan2();
    [CompilerGeneratedAttribute]
public static Color get_Cyan1();
    [CompilerGeneratedAttribute]
public static Color get_DarkRed();
    [CompilerGeneratedAttribute]
public static Color get_DeepPink4();
    [CompilerGeneratedAttribute]
public static Color get_Purple4();
    [CompilerGeneratedAttribute]
public static Color get_Purple4_1();
    [CompilerGeneratedAttribute]
public static Color get_Purple3();
    [CompilerGeneratedAttribute]
public static Color get_BlueViolet();
    [CompilerGeneratedAttribute]
public static Color get_Orange4();
    [CompilerGeneratedAttribute]
public static Color get_Grey37();
    [CompilerGeneratedAttribute]
public static Color get_MediumPurple4();
    [CompilerGeneratedAttribute]
public static Color get_SlateBlue3();
    [CompilerGeneratedAttribute]
public static Color get_SlateBlue3_1();
    [CompilerGeneratedAttribute]
public static Color get_RoyalBlue1();
    [CompilerGeneratedAttribute]
public static Color get_Chartreuse4();
    [CompilerGeneratedAttribute]
public static Color get_DarkSeaGreen4();
    [CompilerGeneratedAttribute]
public static Color get_PaleTurquoise4();
    [CompilerGeneratedAttribute]
public static Color get_SteelBlue();
    [CompilerGeneratedAttribute]
public static Color get_SteelBlue3();
    [CompilerGeneratedAttribute]
public static Color get_CornflowerBlue();
    [CompilerGeneratedAttribute]
public static Color get_Chartreuse3();
    [CompilerGeneratedAttribute]
public static Color get_DarkSeaGreen4_1();
    [CompilerGeneratedAttribute]
public static Color get_CadetBlue();
    [CompilerGeneratedAttribute]
public static Color get_CadetBlue_1();
    [CompilerGeneratedAttribute]
public static Color get_SkyBlue3();
    [CompilerGeneratedAttribute]
public static Color get_SteelBlue1();
    [CompilerGeneratedAttribute]
public static Color get_Chartreuse3_1();
    [CompilerGeneratedAttribute]
public static Color get_PaleGreen3();
    [CompilerGeneratedAttribute]
public static Color get_SeaGreen3();
    [CompilerGeneratedAttribute]
public static Color get_Aquamarine3();
    [CompilerGeneratedAttribute]
public static Color get_MediumTurquoise();
    [CompilerGeneratedAttribute]
public static Color get_SteelBlue1_1();
    [CompilerGeneratedAttribute]
public static Color get_Chartreuse2();
    [CompilerGeneratedAttribute]
public static Color get_SeaGreen2();
    [CompilerGeneratedAttribute]
public static Color get_SeaGreen1();
    [CompilerGeneratedAttribute]
public static Color get_SeaGreen1_1();
    [CompilerGeneratedAttribute]
public static Color get_Aquamarine1();
    [CompilerGeneratedAttribute]
public static Color get_DarkSlateGray2();
    [CompilerGeneratedAttribute]
public static Color get_DarkRed_1();
    [CompilerGeneratedAttribute]
public static Color get_DeepPink4_1();
    [CompilerGeneratedAttribute]
public static Color get_DarkMagenta();
    [CompilerGeneratedAttribute]
public static Color get_DarkMagenta_1();
    [CompilerGeneratedAttribute]
public static Color get_DarkViolet();
    [CompilerGeneratedAttribute]
public static Color get_Purple_1();
    [CompilerGeneratedAttribute]
public static Color get_Orange4_1();
    [CompilerGeneratedAttribute]
public static Color get_LightPink4();
    [CompilerGeneratedAttribute]
public static Color get_Plum4();
    [CompilerGeneratedAttribute]
public static Color get_MediumPurple3();
    [CompilerGeneratedAttribute]
public static Color get_MediumPurple3_1();
    [CompilerGeneratedAttribute]
public static Color get_SlateBlue1();
    [CompilerGeneratedAttribute]
public static Color get_Yellow4();
    [CompilerGeneratedAttribute]
public static Color get_Wheat4();
    [CompilerGeneratedAttribute]
public static Color get_Grey53();
    [CompilerGeneratedAttribute]
public static Color get_LightSlateGrey();
    [CompilerGeneratedAttribute]
public static Color get_MediumPurple();
    [CompilerGeneratedAttribute]
public static Color get_LightSlateBlue();
    [CompilerGeneratedAttribute]
public static Color get_Yellow4_1();
    [CompilerGeneratedAttribute]
public static Color get_DarkOliveGreen3();
    [CompilerGeneratedAttribute]
public static Color get_DarkSeaGreen();
    [CompilerGeneratedAttribute]
public static Color get_LightSkyBlue3();
    [CompilerGeneratedAttribute]
public static Color get_LightSkyBlue3_1();
    [CompilerGeneratedAttribute]
public static Color get_SkyBlue2();
    [CompilerGeneratedAttribute]
public static Color get_Chartreuse2_1();
    [CompilerGeneratedAttribute]
public static Color get_DarkOliveGreen3_1();
    [CompilerGeneratedAttribute]
public static Color get_PaleGreen3_1();
    [CompilerGeneratedAttribute]
public static Color get_DarkSeaGreen3();
    [CompilerGeneratedAttribute]
public static Color get_DarkSlateGray3();
    [CompilerGeneratedAttribute]
public static Color get_SkyBlue1();
    [CompilerGeneratedAttribute]
public static Color get_Chartreuse1();
    [CompilerGeneratedAttribute]
public static Color get_LightGreen();
    [CompilerGeneratedAttribute]
public static Color get_LightGreen_1();
    [CompilerGeneratedAttribute]
public static Color get_PaleGreen1();
    [CompilerGeneratedAttribute]
public static Color get_Aquamarine1_1();
    [CompilerGeneratedAttribute]
public static Color get_DarkSlateGray1();
    [CompilerGeneratedAttribute]
public static Color get_Red3();
    [CompilerGeneratedAttribute]
public static Color get_DeepPink4_2();
    [CompilerGeneratedAttribute]
public static Color get_MediumVioletRed();
    [CompilerGeneratedAttribute]
public static Color get_Magenta3();
    [CompilerGeneratedAttribute]
public static Color get_DarkViolet_1();
    [CompilerGeneratedAttribute]
public static Color get_Purple_2();
    [CompilerGeneratedAttribute]
public static Color get_DarkOrange3();
    [CompilerGeneratedAttribute]
public static Color get_IndianRed();
    [CompilerGeneratedAttribute]
public static Color get_HotPink3();
    [CompilerGeneratedAttribute]
public static Color get_MediumOrchid3();
    [CompilerGeneratedAttribute]
public static Color get_MediumOrchid();
    [CompilerGeneratedAttribute]
public static Color get_MediumPurple2();
    [CompilerGeneratedAttribute]
public static Color get_DarkGoldenrod();
    [CompilerGeneratedAttribute]
public static Color get_LightSalmon3();
    [CompilerGeneratedAttribute]
public static Color get_RosyBrown();
    [CompilerGeneratedAttribute]
public static Color get_Grey63();
    [CompilerGeneratedAttribute]
public static Color get_MediumPurple2_1();
    [CompilerGeneratedAttribute]
public static Color get_MediumPurple1();
    [CompilerGeneratedAttribute]
public static Color get_Gold3();
    [CompilerGeneratedAttribute]
public static Color get_DarkKhaki();
    [CompilerGeneratedAttribute]
public static Color get_NavajoWhite3();
    [CompilerGeneratedAttribute]
public static Color get_Grey69();
    [CompilerGeneratedAttribute]
public static Color get_LightSteelBlue3();
    [CompilerGeneratedAttribute]
public static Color get_LightSteelBlue();
    [CompilerGeneratedAttribute]
public static Color get_Yellow3();
    [CompilerGeneratedAttribute]
public static Color get_DarkOliveGreen3_2();
    [CompilerGeneratedAttribute]
public static Color get_DarkSeaGreen3_1();
    [CompilerGeneratedAttribute]
public static Color get_DarkSeaGreen2();
    [CompilerGeneratedAttribute]
public static Color get_LightCyan3();
    [CompilerGeneratedAttribute]
public static Color get_LightSkyBlue1();
    [CompilerGeneratedAttribute]
public static Color get_GreenYellow();
    [CompilerGeneratedAttribute]
public static Color get_DarkOliveGreen2();
    [CompilerGeneratedAttribute]
public static Color get_PaleGreen1_1();
    [CompilerGeneratedAttribute]
public static Color get_DarkSeaGreen2_1();
    [CompilerGeneratedAttribute]
public static Color get_DarkSeaGreen1();
    [CompilerGeneratedAttribute]
public static Color get_PaleTurquoise1();
    [CompilerGeneratedAttribute]
public static Color get_Red3_1();
    [CompilerGeneratedAttribute]
public static Color get_DeepPink3();
    [CompilerGeneratedAttribute]
public static Color get_DeepPink3_1();
    [CompilerGeneratedAttribute]
public static Color get_Magenta3_1();
    [CompilerGeneratedAttribute]
public static Color get_Magenta3_2();
    [CompilerGeneratedAttribute]
public static Color get_Magenta2();
    [CompilerGeneratedAttribute]
public static Color get_DarkOrange3_1();
    [CompilerGeneratedAttribute]
public static Color get_IndianRed_1();
    [CompilerGeneratedAttribute]
public static Color get_HotPink3_1();
    [CompilerGeneratedAttribute]
public static Color get_HotPink2();
    [CompilerGeneratedAttribute]
public static Color get_Orchid();
    [CompilerGeneratedAttribute]
public static Color get_MediumOrchid1();
    [CompilerGeneratedAttribute]
public static Color get_Orange3();
    [CompilerGeneratedAttribute]
public static Color get_LightSalmon3_1();
    [CompilerGeneratedAttribute]
public static Color get_LightPink3();
    [CompilerGeneratedAttribute]
public static Color get_Pink3();
    [CompilerGeneratedAttribute]
public static Color get_Plum3();
    [CompilerGeneratedAttribute]
public static Color get_Violet();
    [CompilerGeneratedAttribute]
public static Color get_Gold3_1();
    [CompilerGeneratedAttribute]
public static Color get_LightGoldenrod3();
    [CompilerGeneratedAttribute]
public static Color get_Tan();
    [CompilerGeneratedAttribute]
public static Color get_MistyRose3();
    [CompilerGeneratedAttribute]
public static Color get_Thistle3();
    [CompilerGeneratedAttribute]
public static Color get_Plum2();
    [CompilerGeneratedAttribute]
public static Color get_Yellow3_1();
    [CompilerGeneratedAttribute]
public static Color get_Khaki3();
    [CompilerGeneratedAttribute]
public static Color get_LightGoldenrod2();
    [CompilerGeneratedAttribute]
public static Color get_LightYellow3();
    [CompilerGeneratedAttribute]
public static Color get_Grey84();
    [CompilerGeneratedAttribute]
public static Color get_LightSteelBlue1();
    [CompilerGeneratedAttribute]
public static Color get_Yellow2();
    [CompilerGeneratedAttribute]
public static Color get_DarkOliveGreen1();
    [CompilerGeneratedAttribute]
public static Color get_DarkOliveGreen1_1();
    [CompilerGeneratedAttribute]
public static Color get_DarkSeaGreen1_1();
    [CompilerGeneratedAttribute]
public static Color get_Honeydew2();
    [CompilerGeneratedAttribute]
public static Color get_LightCyan1();
    [CompilerGeneratedAttribute]
public static Color get_Red1();
    [CompilerGeneratedAttribute]
public static Color get_DeepPink2();
    [CompilerGeneratedAttribute]
public static Color get_DeepPink1();
    [CompilerGeneratedAttribute]
public static Color get_DeepPink1_1();
    [CompilerGeneratedAttribute]
public static Color get_Magenta2_1();
    [CompilerGeneratedAttribute]
public static Color get_Magenta1();
    [CompilerGeneratedAttribute]
public static Color get_OrangeRed1();
    [CompilerGeneratedAttribute]
public static Color get_IndianRed1();
    [CompilerGeneratedAttribute]
public static Color get_IndianRed1_1();
    [CompilerGeneratedAttribute]
public static Color get_HotPink();
    [CompilerGeneratedAttribute]
public static Color get_HotPink_1();
    [CompilerGeneratedAttribute]
public static Color get_MediumOrchid1_1();
    [CompilerGeneratedAttribute]
public static Color get_DarkOrange();
    [CompilerGeneratedAttribute]
public static Color get_Salmon1();
    [CompilerGeneratedAttribute]
public static Color get_LightCoral();
    [CompilerGeneratedAttribute]
public static Color get_PaleVioletRed1();
    [CompilerGeneratedAttribute]
public static Color get_Orchid2();
    [CompilerGeneratedAttribute]
public static Color get_Orchid1();
    [CompilerGeneratedAttribute]
public static Color get_Orange1();
    [CompilerGeneratedAttribute]
public static Color get_SandyBrown();
    [CompilerGeneratedAttribute]
public static Color get_LightSalmon1();
    [CompilerGeneratedAttribute]
public static Color get_LightPink1();
    [CompilerGeneratedAttribute]
public static Color get_Pink1();
    [CompilerGeneratedAttribute]
public static Color get_Plum1();
    [CompilerGeneratedAttribute]
public static Color get_Gold1();
    [CompilerGeneratedAttribute]
public static Color get_LightGoldenrod2_1();
    [CompilerGeneratedAttribute]
public static Color get_LightGoldenrod2_2();
    [CompilerGeneratedAttribute]
public static Color get_NavajoWhite1();
    [CompilerGeneratedAttribute]
public static Color get_MistyRose1();
    [CompilerGeneratedAttribute]
public static Color get_Thistle1();
    [CompilerGeneratedAttribute]
public static Color get_Yellow1();
    [CompilerGeneratedAttribute]
public static Color get_LightGoldenrod1();
    [CompilerGeneratedAttribute]
public static Color get_Khaki1();
    [CompilerGeneratedAttribute]
public static Color get_Wheat1();
    [CompilerGeneratedAttribute]
public static Color get_Cornsilk1();
    [CompilerGeneratedAttribute]
public static Color get_Grey100();
    [CompilerGeneratedAttribute]
public static Color get_Grey3();
    [CompilerGeneratedAttribute]
public static Color get_Grey7();
    [CompilerGeneratedAttribute]
public static Color get_Grey11();
    [CompilerGeneratedAttribute]
public static Color get_Grey15();
    [CompilerGeneratedAttribute]
public static Color get_Grey19();
    [CompilerGeneratedAttribute]
public static Color get_Grey23();
    [CompilerGeneratedAttribute]
public static Color get_Grey27();
    [CompilerGeneratedAttribute]
public static Color get_Grey30();
    [CompilerGeneratedAttribute]
public static Color get_Grey35();
    [CompilerGeneratedAttribute]
public static Color get_Grey39();
    [CompilerGeneratedAttribute]
public static Color get_Grey42();
    [CompilerGeneratedAttribute]
public static Color get_Grey46();
    [CompilerGeneratedAttribute]
public static Color get_Grey50();
    [CompilerGeneratedAttribute]
public static Color get_Grey54();
    [CompilerGeneratedAttribute]
public static Color get_Grey58();
    [CompilerGeneratedAttribute]
public static Color get_Grey62();
    [CompilerGeneratedAttribute]
public static Color get_Grey66();
    [CompilerGeneratedAttribute]
public static Color get_Grey70();
    [CompilerGeneratedAttribute]
public static Color get_Grey74();
    [CompilerGeneratedAttribute]
public static Color get_Grey78();
    [CompilerGeneratedAttribute]
public static Color get_Grey82();
    [CompilerGeneratedAttribute]
public static Color get_Grey85();
    [CompilerGeneratedAttribute]
public static Color get_Grey89();
    [CompilerGeneratedAttribute]
public static Color get_Grey93();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.ColorPalette : object {
    [CompilerGeneratedAttribute]
private static IReadOnlyList`1<Color> <Legacy>k__BackingField;
    [CompilerGeneratedAttribute]
private static IReadOnlyList`1<Color> <Standard>k__BackingField;
    [CompilerGeneratedAttribute]
private static IReadOnlyList`1<Color> <EightBit>k__BackingField;
    public static IReadOnlyList`1<Color> Legacy { get; }
    public static IReadOnlyList`1<Color> Standard { get; }
    public static IReadOnlyList`1<Color> EightBit { get; }
    private static ColorPalette();
    [CompilerGeneratedAttribute]
public static IReadOnlyList`1<Color> get_Legacy();
    [CompilerGeneratedAttribute]
public static IReadOnlyList`1<Color> get_Standard();
    [CompilerGeneratedAttribute]
public static IReadOnlyList`1<Color> get_EightBit();
    internal static Color ExactOrClosest(ColorSystem system, Color color);
    private static Nullable`1<Color> Exact(ColorSystem system, Color color);
    private static Color Closest(ColorSystem system, Color color);
    [NullableContextAttribute("0")]
private static List`1<Color> GenerateLegacyPalette();
    [NullableContextAttribute("0")]
private static List`1<Color> GenerateStandardPalette(IReadOnlyList`1<Color> legacy);
    [NullableContextAttribute("0")]
private static List`1<Color> GenerateEightBitPalette(IReadOnlyList`1<Color> standard);
    [CompilerGeneratedAttribute]
internal static double <Closest>g__Distance|12_0(Color first, Color second);
}
public enum Spectre.Console.ColorSystem : Enum {
    public int value__;
    public static ColorSystem NoColors;
    public static ColorSystem Legacy;
    public static ColorSystem Standard;
    public static ColorSystem EightBit;
    public static ColorSystem TrueColor;
}
internal static class Spectre.Console.ColorSystemDetector : object {
    public static ColorSystem Detect(bool supportsAnsi);
    private static bool GetWindowsVersionInformation(Int32& major, Int32& build);
}
public enum Spectre.Console.ColorSystemSupport : Enum {
    public int value__;
    public static ColorSystemSupport Detect;
    public static ColorSystemSupport NoColors;
    public static ColorSystemSupport Legacy;
    public static ColorSystemSupport Standard;
    public static ColorSystemSupport EightBit;
    public static ColorSystemSupport TrueColor;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.ColorTable : object {
    private static Dictionary`2<int, string> _nameLookup;
    private static Dictionary`2<string, int> _numberLookup;
    private static ColorTable();
    public static Color GetColor(int number);
    public static Nullable`1<Color> GetColor(string name);
    [NullableContextAttribute("2")]
public static string GetName(int number);
    [NullableContextAttribute("0")]
private static Dictionary`2<string, int> GenerateTable();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.ColumnExtensions : object {
    [ExtensionAttribute]
public static T NoWrap(T obj);
    [ExtensionAttribute]
public static T Width(T obj, Nullable`1<int> width);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Columns : Renderable {
    private List`1<IRenderable> _items;
    [CompilerGeneratedAttribute]
private Nullable`1<Padding> <Padding>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Expand>k__BackingField;
    public Nullable`1<Padding> Padding { get; public set; }
    public bool Expand { get; public set; }
    public Columns(IRenderable[] items);
    public Columns(IEnumerable`1<IRenderable> items);
    public Columns(IEnumerable`1<string> items);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Padding> get_Padding();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Padding(Nullable`1<Padding> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Expand();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expand(bool value);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    private int CalculateColumnCount(int maxWidth, Int32[] itemWidths, int columnCount, int padding);
    [IteratorStateMachineAttribute("Spectre.Console.Columns/<IterateWidths>d__15")]
private IEnumerable`1<int> IterateWidths(Int32[] itemWidths, int columnCount);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.ConfirmationPrompt : object {
    private string _prompt;
    [CompilerGeneratedAttribute]
private char <Yes>k__BackingField;
    [CompilerGeneratedAttribute]
private char <No>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InvalidChoiceMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowChoices>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowDefaultValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Style <DefaultValueStyle>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Style <ChoicesStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private StringComparer <Comparer>k__BackingField;
    public char Yes { get; public set; }
    public char No { get; public set; }
    public bool DefaultValue { get; public set; }
    public string InvalidChoiceMessage { get; public set; }
    public bool ShowChoices { get; public set; }
    public bool ShowDefaultValue { get; public set; }
    [NullableAttribute("2")]
public Style DefaultValueStyle { get; public set; }
    [NullableAttribute("2")]
public Style ChoicesStyle { get; public set; }
    public StringComparer Comparer { get; public set; }
    public ConfirmationPrompt(string prompt);
    [CompilerGeneratedAttribute]
public char get_Yes();
    [CompilerGeneratedAttribute]
public void set_Yes(char value);
    [CompilerGeneratedAttribute]
public char get_No();
    [CompilerGeneratedAttribute]
public void set_No(char value);
    [CompilerGeneratedAttribute]
public bool get_DefaultValue();
    [CompilerGeneratedAttribute]
public void set_DefaultValue(bool value);
    [CompilerGeneratedAttribute]
public string get_InvalidChoiceMessage();
    [CompilerGeneratedAttribute]
public void set_InvalidChoiceMessage(string value);
    [CompilerGeneratedAttribute]
public bool get_ShowChoices();
    [CompilerGeneratedAttribute]
public void set_ShowChoices(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowDefaultValue();
    [CompilerGeneratedAttribute]
public void set_ShowDefaultValue(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Style get_DefaultValueStyle();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DefaultValueStyle(Style value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Style get_ChoicesStyle();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ChoicesStyle(Style value);
    [CompilerGeneratedAttribute]
public StringComparer get_Comparer();
    [CompilerGeneratedAttribute]
public void set_Comparer(StringComparer value);
    public sealed virtual bool Show(IAnsiConsole console);
    [AsyncStateMachineAttribute("Spectre.Console.ConfirmationPrompt/<ShowAsync>d__39")]
public sealed virtual Task`1<bool> ShowAsync(IAnsiConsole console, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.ConfirmationPromptExtensions : object {
    [ExtensionAttribute]
public static ConfirmationPrompt ShowChoices(ConfirmationPrompt obj, bool show);
    [ExtensionAttribute]
public static ConfirmationPrompt ShowChoices(ConfirmationPrompt obj);
    [ExtensionAttribute]
public static ConfirmationPrompt HideChoices(ConfirmationPrompt obj);
    [ExtensionAttribute]
public static ConfirmationPrompt ChoicesStyle(ConfirmationPrompt obj, Style style);
    [ExtensionAttribute]
public static ConfirmationPrompt ShowDefaultValue(ConfirmationPrompt obj, bool show);
    [ExtensionAttribute]
public static ConfirmationPrompt ShowDefaultValue(ConfirmationPrompt obj);
    [ExtensionAttribute]
public static ConfirmationPrompt HideDefaultValue(ConfirmationPrompt obj);
    [ExtensionAttribute]
public static ConfirmationPrompt DefaultValueStyle(ConfirmationPrompt obj, Style style);
    [ExtensionAttribute]
public static ConfirmationPrompt InvalidChoiceMessage(ConfirmationPrompt obj, string message);
    [ExtensionAttribute]
public static ConfirmationPrompt Yes(ConfirmationPrompt obj, char character);
    [ExtensionAttribute]
public static ConfirmationPrompt No(ConfirmationPrompt obj, char character);
}
internal static class Spectre.Console.ConsoleHelper : object {
    public static int GetSafeWidth(int defaultValue);
    public static int GetSafeHeight(int defaultValue);
}
internal static class Spectre.Console.Constants : object {
    public static int DefaultTerminalWidth;
    public static int DefaultTerminalHeight;
    [NullableAttribute("1")]
public static string EmptyLink;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.ControlCode : Renderable {
    private Segment _segment;
    public ControlCode(string control);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    [IteratorStateMachineAttribute("Spectre.Console.ControlCode/<Render>d__3")]
protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
public enum Spectre.Console.CursorDirection : Enum {
    public int value__;
    public static CursorDirection Up;
    public static CursorDirection Down;
    public static CursorDirection Left;
    public static CursorDirection Right;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.CursorExtensions : object {
    [ExtensionAttribute]
public static void Show(IAnsiConsoleCursor cursor);
    [ExtensionAttribute]
public static void Hide(IAnsiConsoleCursor cursor);
    [ExtensionAttribute]
public static void MoveUp(IAnsiConsoleCursor cursor);
    [ExtensionAttribute]
public static void MoveUp(IAnsiConsoleCursor cursor, int steps);
    [ExtensionAttribute]
public static void MoveDown(IAnsiConsoleCursor cursor);
    [ExtensionAttribute]
public static void MoveDown(IAnsiConsoleCursor cursor, int steps);
    [ExtensionAttribute]
public static void MoveLeft(IAnsiConsoleCursor cursor);
    [ExtensionAttribute]
public static void MoveLeft(IAnsiConsoleCursor cursor, int steps);
    [ExtensionAttribute]
public static void MoveRight(IAnsiConsoleCursor cursor);
    [ExtensionAttribute]
public static void MoveRight(IAnsiConsoleCursor cursor, int steps);
}
[ExtensionAttribute]
internal static class Spectre.Console.DayOfWeekExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string GetAbbreviatedDayName(DayOfWeek day, CultureInfo culture);
    [ExtensionAttribute]
public static DayOfWeek GetNextWeekDay(DayOfWeek day);
}
[FlagsAttribute]
public enum Spectre.Console.Decoration : Enum {
    public int value__;
    public static Decoration None;
    public static Decoration Bold;
    public static Decoration Dim;
    public static Decoration Italic;
    public static Decoration Underline;
    public static Decoration Invert;
    public static Decoration Conceal;
    public static Decoration SlowBlink;
    public static Decoration RapidBlink;
    public static Decoration Strikethrough;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.DecorationTable : object {
    private static Dictionary`2<string, Nullable`1<Decoration>> _lookup;
    private static Dictionary`2<Decoration, string> _reverseLookup;
    private static DecorationTable();
    public static Nullable`1<Decoration> GetDecoration(string name);
    public static List`1<string> GetMarkupNames(Decoration decoration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.DefaultInput : object {
    private Profile _profile;
    public DefaultInput(Profile profile);
    public sealed virtual bool IsKeyAvailable();
    public sealed virtual Nullable`1<ConsoleKeyInfo> ReadKey(bool intercept);
    [AsyncStateMachineAttribute("Spectre.Console.DefaultInput/<ReadKeyAsync>d__4")]
public sealed virtual Task`1<Nullable`1<ConsoleKeyInfo>> ReadKeyAsync(bool intercept, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.DefaultProgressRenderer : ProgressRenderer {
    private IAnsiConsole _console;
    private List`1<ProgressColumn> _columns;
    private LiveRenderable _live;
    private object _lock;
    private Stopwatch _stopwatch;
    private bool _hideCompleted;
    private Func`3<IRenderable, IReadOnlyList`1<ProgressTask>, IRenderable> _renderHook;
    private TimeSpan _lastUpdate;
    [CompilerGeneratedAttribute]
private TimeSpan <RefreshRate>k__BackingField;
    public TimeSpan RefreshRate { get; }
    public DefaultProgressRenderer(IAnsiConsole console, List`1<ProgressColumn> columns, TimeSpan refreshRate, bool hideCompleted, Func`3<IRenderable, IReadOnlyList`1<ProgressTask>, IRenderable> renderHook);
    [CompilerGeneratedAttribute]
public virtual TimeSpan get_RefreshRate();
    public virtual void Started();
    public virtual void Completed(bool clear);
    public virtual void Update(ProgressContext context);
    [IteratorStateMachineAttribute("Spectre.Console.DefaultProgressRenderer/<Process>d__15")]
public virtual IEnumerable`1<IRenderable> Process(RenderOptions options, IEnumerable`1<IRenderable> renderables);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <Update>b__14_0(ProgressTask tsk);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.DefaultPromptValue`1 : object {
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public T Value { get; }
    public DefaultPromptValue`1(T value);
    [CompilerGeneratedAttribute]
public T get_Value();
}
[ExtensionAttribute]
internal static class Spectre.Console.DictionaryExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void Deconstruct(KeyValuePair`2<T1, T2> tuple, T1& key, T2& value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.DownloadedColumn : ProgressColumn {
    [CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    public CultureInfo Culture { get; public set; }
    [CompilerGeneratedAttribute]
public CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
public void set_Culture(CultureInfo value);
    [NullableContextAttribute("1")]
public virtual IRenderable Render(RenderOptions options, ProgressTask task, TimeSpan deltaTime);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.ElapsedTimeColumn : ProgressColumn {
    [CompilerGeneratedAttribute]
private Style <Style>k__BackingField;
    protected internal bool NoWrap { get; }
    public Style Style { get; public set; }
    protected internal virtual bool get_NoWrap();
    [CompilerGeneratedAttribute]
public Style get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(Style value);
    public virtual IRenderable Render(RenderOptions options, ProgressTask task, TimeSpan deltaTime);
    public virtual Nullable`1<int> GetColumnWidth(RenderOptions options);
}
[ExtensionAttribute]
public static class Spectre.Console.Emoji : object {
    [NullableAttribute("1")]
private static Dictionary`2<string, string> _remappings;
    private static Dictionary`2<string, string> _emojis;
    private static Emoji();
    [NullableContextAttribute("1")]
public static void Remap(string tag, string emoji);
    public static string Replace(ReadOnlySpan`1<char> value);
    [NullableContextAttribute("1")]
private static bool TryGetEmoji(string emoji, String& value);
    [ExtensionAttribute]
private static int IndexOf(ReadOnlySpan`1<char> span, char value, int startIndex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.AppVeyorEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.BambooEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.BitbucketEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.BitriseEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.ContinuaEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.GitHubEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.GitLabEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.GoCDEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.JenkinsEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.MyGetEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.Enrichment.ProfileEnricher : object {
    private static List`1<IProfileEnricher> _defaultEnrichers;
    private static ProfileEnricher();
    public static void Enrich(Profile profile, ProfileEnrichment settings, IDictionary`2<string, string> environmentVariables);
    private static List`1<IProfileEnricher> GetEnrichers(ProfileEnrichment settings);
    private static IDictionary`2<string, string> GetEnvironmentVariables(IDictionary`2<string, string> variables);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.TeamCityEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.TfsEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Enrichment.TravisEnricher : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public sealed virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Spectre.Console.EnumerableExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<T> ReverseEnumerable(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static bool None(IEnumerable`1<T> source, Func`2<T, bool> predicate);
    [IteratorStateMachineAttribute("Spectre.Console.EnumerableExtensions/<Repeat>d__2`1")]
[ExtensionAttribute]
public static IEnumerable`1<T> Repeat(IEnumerable`1<T> source, int count);
    [ExtensionAttribute]
public static int IndexOf(IEnumerable`1<T> source, T item);
    [ExtensionAttribute]
public static int GetCount(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static void ForEach(IEnumerable`1<T> source, Action`1<T> action);
    [ExtensionAttribute]
public static bool AnyTrue(IEnumerable`1<bool> source);
    [ExtensionAttribute]
public static IEnumerable`1<ValueTuple`4<int, bool, bool, T>> Enumerate(IEnumerable`1<T> source);
    [IteratorStateMachineAttribute("Spectre.Console.EnumerableExtensions/<Enumerate>d__8`1")]
[ExtensionAttribute]
public static IEnumerable`1<ValueTuple`4<int, bool, bool, T>> Enumerate(IEnumerator`1<T> source);
    [ExtensionAttribute]
public static IEnumerable`1<TResult> SelectIndex(IEnumerable`1<T> source, Func`3<T, int, TResult> func);
    [ExtensionAttribute]
public static IEnumerable`1<ValueTuple`3<TFirst, TSecond, TThird>> ZipThree(IEnumerable`1<TFirst> first, IEnumerable`1<TSecond> second, IEnumerable`1<TThird> third);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.ExceptionExtensions : object {
    [ExtensionAttribute]
public static IRenderable GetRenderable(Exception exception, ExceptionFormats format);
    [ExtensionAttribute]
public static IRenderable GetRenderable(Exception exception, ExceptionSettings settings);
}
[FlagsAttribute]
public enum Spectre.Console.ExceptionFormats : Enum {
    public int value__;
    public static ExceptionFormats Default;
    public static ExceptionFormats ShortenPaths;
    public static ExceptionFormats ShortenTypes;
    public static ExceptionFormats ShortenMethods;
    public static ExceptionFormats ShowLinks;
    public static ExceptionFormats ShortenEverything;
    public static ExceptionFormats NoStackTrace;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Spectre.Console.ExceptionFormatter : object {
    public static IRenderable Format(Exception exception, ExceptionSettings settings);
    private static IRenderable GetException(Exception exception, ExceptionSettings settings);
    private static Markup GetMessage(Exception ex, ExceptionSettings settings);
    private static Grid GetStackFrames(Exception ex, ExceptionSettings settings);
    private static void AppendParameters(StringBuilder builder, MethodBase method, ExceptionSettings settings);
    private static void AppendPath(StringBuilder builder, string path, ExceptionSettings settings);
    private static string Emphasize(string input, Char[] separators, Style color, bool compact, ExceptionSettings settings);
    private static bool ShowInStackTrace(StackFrame frame);
    [IteratorStateMachineAttribute("Spectre.Console.ExceptionFormatter/<FilterStackFrames>d__8")]
[ExtensionAttribute]
private static IEnumerable`1<StackFrame> FilterStackFrames(IEnumerable`1<StackFrame> frames);
    private static string GetPrefix(ParameterInfo parameter);
    private static string GetParameterName(ParameterInfo parameter);
    private static bool TryGetTupleName(ParameterInfo parameter, Type parameterType, String& tupleName);
    private static string GetMethodName(MethodBase& method, Boolean& isAsync);
    private static bool TryResolveStateMachineMethod(MethodBase& method, Type& declaringType);
    [CompilerGeneratedAttribute]
internal static void <AppendPath>g__AppendPath|5_0(<>c__DisplayClass5_0& );
    [CompilerGeneratedAttribute]
internal static IEnumerable`1<MethodInfo> <TryResolveStateMachineMethod>g__GetDeclaredMethods|13_0(IReflect type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.ExceptionSettings : object {
    [CompilerGeneratedAttribute]
private ExceptionFormats <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private ExceptionStyle <Style>k__BackingField;
    public ExceptionFormats Format { get; public set; }
    public ExceptionStyle Style { get; public set; }
    [CompilerGeneratedAttribute]
public ExceptionFormats get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(ExceptionFormats value);
    [CompilerGeneratedAttribute]
public ExceptionStyle get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(ExceptionStyle value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.ExceptionStyle : object {
    [CompilerGeneratedAttribute]
private Style <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <ParameterType>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <ParameterName>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <Parenthesis>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <Dimmed>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <NonEmphasized>k__BackingField;
    public Style Message { get; public set; }
    public Style Exception { get; public set; }
    public Style Method { get; public set; }
    public Style ParameterType { get; public set; }
    public Style ParameterName { get; public set; }
    public Style Parenthesis { get; public set; }
    public Style Path { get; public set; }
    public Style LineNumber { get; public set; }
    public Style Dimmed { get; public set; }
    public Style NonEmphasized { get; public set; }
    [CompilerGeneratedAttribute]
public Style get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(Style value);
    [CompilerGeneratedAttribute]
public Style get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Style value);
    [CompilerGeneratedAttribute]
public Style get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(Style value);
    [CompilerGeneratedAttribute]
public Style get_ParameterType();
    [CompilerGeneratedAttribute]
public void set_ParameterType(Style value);
    [CompilerGeneratedAttribute]
public Style get_ParameterName();
    [CompilerGeneratedAttribute]
public void set_ParameterName(Style value);
    [CompilerGeneratedAttribute]
public Style get_Parenthesis();
    [CompilerGeneratedAttribute]
public void set_Parenthesis(Style value);
    [CompilerGeneratedAttribute]
public Style get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(Style value);
    [CompilerGeneratedAttribute]
public Style get_LineNumber();
    [CompilerGeneratedAttribute]
public void set_LineNumber(Style value);
    [CompilerGeneratedAttribute]
public Style get_Dimmed();
    [CompilerGeneratedAttribute]
public void set_Dimmed(Style value);
    [CompilerGeneratedAttribute]
public Style get_NonEmphasized();
    [CompilerGeneratedAttribute]
public void set_NonEmphasized(Style value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.ExpandableExtensions : object {
    [ExtensionAttribute]
public static T Collapse(T obj);
    [ExtensionAttribute]
public static T Expand(T obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.Extensions.AlignExtensions : object {
    [ExtensionAttribute]
public static Align Width(Align align, Nullable`1<int> width);
    [ExtensionAttribute]
public static Align Height(Align align, Nullable`1<int> height);
    [ExtensionAttribute]
public static Align VerticalAlignment(Align align, Nullable`1<VerticalAlignment> vertical);
    [ExtensionAttribute]
public static Align TopAligned(Align align);
    [ExtensionAttribute]
public static Align MiddleAligned(Align align);
    [ExtensionAttribute]
public static Align BottomAligned(Align align);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.FallbackProgressRenderer : ProgressRenderer {
    private static double FirstMilestone;
    private static Nullable`1[] _milestones;
    private Dictionary`2<int, double> _taskMilestones;
    private object _lock;
    [NullableAttribute("2")]
private IRenderable _renderable;
    private DateTime _lastUpdate;
    public TimeSpan RefreshRate { get; }
    private static FallbackProgressRenderer();
    public virtual TimeSpan get_RefreshRate();
    public virtual void Update(ProgressContext context);
    public virtual IEnumerable`1<IRenderable> Process(RenderOptions options, IEnumerable`1<IRenderable> renderables);
    private bool TryAdvance(int task, double percentage);
    private static Nullable`1<double> GetNextMilestone(double percentage);
    [NullableContextAttribute("2")]
private static IRenderable BuildTaskGrid(List`1<ValueTuple`2<string, double>> updates);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.FallbackStatusRenderer : ProgressRenderer {
    private object _lock;
    [NullableAttribute("2")]
private IRenderable _renderable;
    [NullableAttribute("2")]
private string _lastStatus;
    public TimeSpan RefreshRate { get; }
    public virtual TimeSpan get_RefreshRate();
    public virtual void Update(ProgressContext context);
    public virtual IEnumerable`1<IRenderable> Process(RenderOptions options, IEnumerable`1<IRenderable> renderables);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.FigletCharacter : object {
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <Lines>k__BackingField;
    public int Code { get; }
    public int Width { get; }
    public int Height { get; }
    public IReadOnlyList`1<string> Lines { get; }
    public FigletCharacter(int code, IEnumerable`1<string> lines);
    [CompilerGeneratedAttribute]
public int get_Code();
    [CompilerGeneratedAttribute]
public int get_Width();
    [CompilerGeneratedAttribute]
public int get_Height();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_Lines();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.FigletFont : object {
    private static string StandardFont;
    private Dictionary`2<int, FigletCharacter> _characters;
    private static Lazy`1<FigletFont> _standard;
    [CompilerGeneratedAttribute]
private int <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Baseline>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxWidth>k__BackingField;
    public int Count { get; }
    public int Height { get; }
    public int Baseline { get; }
    public int MaxWidth { get; }
    public static FigletFont Default { get; }
    private static FigletFont();
    internal FigletFont(IEnumerable`1<FigletCharacter> characters, FigletHeader header);
    public int get_Count();
    [CompilerGeneratedAttribute]
public int get_Height();
    [CompilerGeneratedAttribute]
public int get_Baseline();
    [CompilerGeneratedAttribute]
public int get_MaxWidth();
    public static FigletFont get_Default();
    public static FigletFont Load(Stream stream);
    public static FigletFont Load(string path);
    public static FigletFont Parse(string source);
    internal int GetWidth(string text);
    [NullableContextAttribute("2")]
internal FigletCharacter GetCharacter(char character);
    internal IEnumerable`1<FigletCharacter> GetCharacters(string text);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.FigletFontParser : object {
    public static FigletFont Parse(string source);
    private static bool TryParseIndex(string index, Int32& result);
    private static FigletHeader ParseHeader(string text);
    private static bool IsValidSignature(string signature);
}
internal class Spectre.Console.FigletHeader : object {
    [CompilerGeneratedAttribute]
private char <Hardblank>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Baseline>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <OldLayout>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CommentLines>k__BackingField;
    public char Hardblank { get; public set; }
    public int Height { get; public set; }
    public int Baseline { get; public set; }
    public int MaxLength { get; public set; }
    public int OldLayout { get; public set; }
    public int CommentLines { get; public set; }
    [CompilerGeneratedAttribute]
public char get_Hardblank();
    [CompilerGeneratedAttribute]
public void set_Hardblank(char value);
    [CompilerGeneratedAttribute]
public int get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(int value);
    [CompilerGeneratedAttribute]
public int get_Baseline();
    [CompilerGeneratedAttribute]
public void set_Baseline(int value);
    [CompilerGeneratedAttribute]
public int get_MaxLength();
    [CompilerGeneratedAttribute]
public void set_MaxLength(int value);
    [CompilerGeneratedAttribute]
public int get_OldLayout();
    [CompilerGeneratedAttribute]
public void set_OldLayout(int value);
    [CompilerGeneratedAttribute]
public int get_CommentLines();
    [CompilerGeneratedAttribute]
public void set_CommentLines(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.FigletText : Renderable {
    private FigletFont _font;
    private string _text;
    [CompilerGeneratedAttribute]
private Nullable`1<Color> <Color>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Justify> <Justification>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Pad>k__BackingField;
    public Nullable`1<Color> Color { get; public set; }
    public Nullable`1<Justify> Justification { get; public set; }
    public bool Pad { get; public set; }
    public FigletText(string text);
    public FigletText(FigletFont font, string text);
    [CompilerGeneratedAttribute]
public Nullable`1<Color> get_Color();
    [CompilerGeneratedAttribute]
public void set_Color(Nullable`1<Color> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Justify> get_Justification();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Justification(Nullable`1<Justify> value);
    [CompilerGeneratedAttribute]
public bool get_Pad();
    [CompilerGeneratedAttribute]
public void set_Pad(bool value);
    [IteratorStateMachineAttribute("Spectre.Console.FigletText/<Render>d__16")]
protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    private List`1<List`1<FigletCharacter>> GetRows(int maxWidth);
}
[ExtensionAttribute]
public static class Spectre.Console.FigletTextExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static FigletText Color(FigletText text, Nullable`1<Color> color);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.FileSize : ValueType {
    [CompilerGeneratedAttribute]
private double <Bytes>k__BackingField;
    [CompilerGeneratedAttribute]
private FileSizeUnit <Unit>k__BackingField;
    public double Bytes { get; }
    public FileSizeUnit Unit { get; }
    public string Suffix { get; }
    public FileSize(double bytes);
    public FileSize(double bytes, FileSizeUnit unit);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public double get_Bytes();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public FileSizeUnit get_Unit();
    public string get_Suffix();
    public string Format(CultureInfo culture);
    public virtual string ToString();
    public string ToString(bool suffix, CultureInfo culture);
    private string GetSuffix();
    private static FileSizeUnit Detect(double bytes);
    private static double GetBase(FileSizeUnit unit);
}
internal enum Spectre.Console.FileSizeUnit : Enum {
    public int value__;
    public static FileSizeUnit Byte;
    public static FileSizeUnit KiloByte;
    public static FileSizeUnit MegaByte;
    public static FileSizeUnit GigaByte;
    public static FileSizeUnit TeraByte;
    public static FileSizeUnit PetaByte;
    public static FileSizeUnit ExaByte;
    public static FileSizeUnit ZettaByte;
    public static FileSizeUnit YottaByte;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Grid : JustInTimeRenderable {
    private ListWithCallback`1<GridColumn> _columns;
    private ListWithCallback`1<GridRow> _rows;
    private bool _expand;
    private Nullable`1<Justify> _alignment;
    private bool _padRightCell;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    public IReadOnlyList`1<GridColumn> Columns { get; }
    public IReadOnlyList`1<GridRow> Rows { get; }
    public bool Expand { get; public set; }
    [ObsoleteAttribute("Use the Align widget instead. This property will be removed in a later release.")]
public Nullable`1<Justify> Alignment { get; public set; }
    public Nullable`1<int> Width { get; public set; }
    public IReadOnlyList`1<GridColumn> get_Columns();
    public IReadOnlyList`1<GridRow> get_Rows();
    public sealed virtual bool get_Expand();
    public sealed virtual void set_Expand(bool value);
    public sealed virtual Nullable`1<Justify> get_Alignment();
    public sealed virtual void set_Alignment(Nullable`1<Justify> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(Nullable`1<int> value);
    public Grid AddColumn();
    public Grid AddColumn(GridColumn column);
    public Grid AddRow(IRenderable[] columns);
    protected virtual bool HasDirtyChildren();
    protected virtual IRenderable Build();
}
public class Spectre.Console.GridColumn : object {
    private bool _isDirty;
    private Nullable`1<int> _width;
    private bool _noWrap;
    private Nullable`1<Padding> _padding;
    private Nullable`1<Justify> _alignment;
    private bool Spectre.Console.Rendering.IHasDirtyState.IsDirty { get; }
    public Nullable`1<int> Width { get; public set; }
    public bool NoWrap { get; public set; }
    public Nullable`1<Padding> Padding { get; public set; }
    public Nullable`1<Justify> Alignment { get; public set; }
    internal bool HasExplicitPadding { get; }
    private sealed virtual override bool Spectre.Console.Rendering.IHasDirtyState.get_IsDirty();
    public sealed virtual Nullable`1<int> get_Width();
    public sealed virtual void set_Width(Nullable`1<int> value);
    public sealed virtual bool get_NoWrap();
    public sealed virtual void set_NoWrap(bool value);
    public sealed virtual Nullable`1<Padding> get_Padding();
    public sealed virtual void set_Padding(Nullable`1<Padding> value);
    public sealed virtual Nullable`1<Justify> get_Alignment();
    public sealed virtual void set_Alignment(Nullable`1<Justify> value);
    internal bool get_HasExplicitPadding();
    [NullableContextAttribute("1")]
private void MarkAsDirty(Action action);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.GridExtensions : object {
    [ExtensionAttribute]
public static Grid AddColumns(Grid grid, int count);
    [ExtensionAttribute]
public static Grid AddColumns(Grid grid, GridColumn[] columns);
    [ExtensionAttribute]
public static Grid AddEmptyRow(Grid grid);
    [ExtensionAttribute]
public static Grid AddRow(Grid grid, String[] columns);
    [ExtensionAttribute]
public static Grid Width(Grid grid, Nullable`1<int> width);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Spectre.Console.GridRow : object {
    private List`1<IRenderable> _items;
    public IRenderable Item { get; }
    public GridRow(IEnumerable`1<IRenderable> items);
    public IRenderable get_Item(int index);
    internal void Add(IRenderable item);
    public sealed virtual IEnumerator`1<IRenderable> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.HasBorderExtensions : object {
    [ExtensionAttribute]
public static T SafeBorder(T obj);
    [ExtensionAttribute]
public static T NoSafeBorder(T obj);
    [ExtensionAttribute]
public static T BorderStyle(T obj, Style style);
    [ExtensionAttribute]
public static T BorderColor(T obj, Color color);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.HasBoxBorderExtensions : object {
    [ExtensionAttribute]
public static T Border(T obj, BoxBorder border);
    [ExtensionAttribute]
public static T NoBorder(T obj);
    [ExtensionAttribute]
public static T SquareBorder(T obj);
    [ExtensionAttribute]
public static T AsciiBorder(T obj);
    [ExtensionAttribute]
public static T RoundedBorder(T obj);
    [ExtensionAttribute]
public static T HeavyBorder(T obj);
    [ExtensionAttribute]
public static T DoubleBorder(T obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.HasCultureExtensions : object {
    [ExtensionAttribute]
public static T Culture(T obj, CultureInfo culture);
    [ExtensionAttribute]
public static T Culture(T obj, string name);
    [ExtensionAttribute]
public static T Culture(T obj, int culture);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.HasJustificationExtensions : object {
    [ExtensionAttribute]
public static T Justify(T obj, Nullable`1<Justify> alignment);
    [ExtensionAttribute]
public static T LeftJustified(T obj);
    [ExtensionAttribute]
public static T Centered(T obj);
    [ExtensionAttribute]
public static T RightJustified(T obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.HasTableBorderExtensions : object {
    [ExtensionAttribute]
public static T NoBorder(T obj);
    [ExtensionAttribute]
public static T SquareBorder(T obj);
    [ExtensionAttribute]
public static T AsciiBorder(T obj);
    [ExtensionAttribute]
public static T Ascii2Border(T obj);
    [ExtensionAttribute]
public static T AsciiDoubleHeadBorder(T obj);
    [ExtensionAttribute]
public static T RoundedBorder(T obj);
    [ExtensionAttribute]
public static T MinimalBorder(T obj);
    [ExtensionAttribute]
public static T MinimalHeavyHeadBorder(T obj);
    [ExtensionAttribute]
public static T MinimalDoubleHeadBorder(T obj);
    [ExtensionAttribute]
public static T SimpleBorder(T obj);
    [ExtensionAttribute]
public static T SimpleHeavyBorder(T obj);
    [ExtensionAttribute]
public static T HorizontalBorder(T obj);
    [ExtensionAttribute]
public static T HeavyBorder(T obj);
    [ExtensionAttribute]
public static T HeavyEdgeBorder(T obj);
    [ExtensionAttribute]
public static T HeavyHeadBorder(T obj);
    [ExtensionAttribute]
public static T DoubleBorder(T obj);
    [ExtensionAttribute]
public static T DoubleEdgeBorder(T obj);
    [ExtensionAttribute]
public static T MarkdownBorder(T obj);
    [ExtensionAttribute]
public static T Border(T obj, TableBorder border);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.HasTreeNodeExtensions : object {
    [ExtensionAttribute]
public static TreeNode AddNode(T obj, string markup);
    [ExtensionAttribute]
public static TreeNode AddNode(T obj, IRenderable renderable);
    [ExtensionAttribute]
public static TreeNode AddNode(T obj, TreeNode node);
    [ExtensionAttribute]
public static void AddNodes(T obj, String[] nodes);
    [ExtensionAttribute]
public static void AddNodes(T obj, IEnumerable`1<string> nodes);
    [ExtensionAttribute]
public static void AddNodes(T obj, IRenderable[] nodes);
    [ExtensionAttribute]
public static void AddNodes(T obj, IEnumerable`1<IRenderable> nodes);
    [ExtensionAttribute]
public static void AddNodes(T obj, TreeNode[] nodes);
    [ExtensionAttribute]
public static void AddNodes(T obj, IEnumerable`1<TreeNode> nodes);
}
public enum Spectre.Console.HorizontalAlignment : Enum {
    public int value__;
    public static HorizontalAlignment Left;
    public static HorizontalAlignment Center;
    public static HorizontalAlignment Right;
}
public interface Spectre.Console.IAlignable {
    public Nullable`1<Justify> Alignment { get; public set; }
    public abstract virtual Nullable`1<Justify> get_Alignment();
    public abstract virtual void set_Alignment(Nullable`1<Justify> value);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IAnsiConsole {
    public Profile Profile { get; }
    public IAnsiConsoleCursor Cursor { get; }
    public IAnsiConsoleInput Input { get; }
    public IExclusivityMode ExclusivityMode { get; }
    public RenderPipeline Pipeline { get; }
    public abstract virtual Profile get_Profile();
    public abstract virtual IAnsiConsoleCursor get_Cursor();
    public abstract virtual IAnsiConsoleInput get_Input();
    public abstract virtual IExclusivityMode get_ExclusivityMode();
    public abstract virtual RenderPipeline get_Pipeline();
    public abstract virtual void Clear(bool home);
    public abstract virtual void Write(IRenderable renderable);
}
[NullableContextAttribute("1")]
internal interface Spectre.Console.IAnsiConsoleBackend {
    public IAnsiConsoleCursor Cursor { get; }
    public abstract virtual IAnsiConsoleCursor get_Cursor();
    public abstract virtual void Clear(bool home);
    public abstract virtual void Write(IRenderable renderable);
}
public interface Spectre.Console.IAnsiConsoleCursor {
    public abstract virtual void Show(bool show);
    public abstract virtual void SetPosition(int column, int line);
    public abstract virtual void Move(CursorDirection direction, int steps);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IAnsiConsoleInput {
    public abstract virtual bool IsKeyAvailable();
    public abstract virtual Nullable`1<ConsoleKeyInfo> ReadKey(bool intercept);
    public abstract virtual Task`1<Nullable`1<ConsoleKeyInfo>> ReadKeyAsync(bool intercept, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IAnsiConsoleOutput {
    public TextWriter Writer { get; }
    public bool IsTerminal { get; }
    public int Width { get; }
    public int Height { get; }
    public abstract virtual TextWriter get_Writer();
    public abstract virtual bool get_IsTerminal();
    public abstract virtual int get_Width();
    public abstract virtual int get_Height();
    public abstract virtual void SetEncoding(Encoding encoding);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IBarChartItem {
    public string Label { get; }
    public double Value { get; }
    public Nullable`1<Color> Color { get; }
    public abstract virtual string get_Label();
    public abstract virtual double get_Value();
    public abstract virtual Nullable`1<Color> get_Color();
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IBreakdownChartItem {
    public string Label { get; }
    public double Value { get; }
    public Color Color { get; }
    public abstract virtual string get_Label();
    public abstract virtual double get_Value();
    public abstract virtual Color get_Color();
}
public interface Spectre.Console.IColumn {
    public bool NoWrap { get; public set; }
    public Nullable`1<int> Width { get; public set; }
    public abstract virtual bool get_NoWrap();
    public abstract virtual void set_NoWrap(bool value);
    public abstract virtual Nullable`1<int> get_Width();
    public abstract virtual void set_Width(Nullable`1<int> value);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IExclusivityMode {
    public abstract virtual T Run(Func`1<T> func);
    public abstract virtual Task`1<T> RunAsync(Func`1<Task`1<T>> func);
}
public interface Spectre.Console.IExpandable {
    public bool Expand { get; public set; }
    public abstract virtual bool get_Expand();
    public abstract virtual void set_Expand(bool value);
}
[NullableContextAttribute("2")]
public interface Spectre.Console.IHasBorder {
    public bool UseSafeBorder { get; public set; }
    public Style BorderStyle { get; public set; }
    public abstract virtual bool get_UseSafeBorder();
    public abstract virtual void set_UseSafeBorder(bool value);
    public abstract virtual Style get_BorderStyle();
    public abstract virtual void set_BorderStyle(Style value);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IHasBoxBorder {
    public BoxBorder Border { get; public set; }
    public abstract virtual BoxBorder get_Border();
    public abstract virtual void set_Border(BoxBorder value);
}
[NullableContextAttribute("2")]
public interface Spectre.Console.IHasCulture {
    public CultureInfo Culture { get; public set; }
    public abstract virtual CultureInfo get_Culture();
    public abstract virtual void set_Culture(CultureInfo value);
}
public interface Spectre.Console.IHasJustification {
    public Nullable`1<Justify> Justification { get; public set; }
    public abstract virtual Nullable`1<Justify> get_Justification();
    public abstract virtual void set_Justification(Nullable`1<Justify> value);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IHasTableBorder {
    public TableBorder Border { get; public set; }
    public abstract virtual TableBorder get_Border();
    public abstract virtual void set_Border(TableBorder value);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IHasTreeNodes {
    public List`1<TreeNode> Nodes { get; }
    public abstract virtual List`1<TreeNode> get_Nodes();
}
public interface Spectre.Console.IHasVisibility {
    public bool IsVisible { get; public set; }
    public abstract virtual bool get_IsVisible();
    public abstract virtual void set_IsVisible(bool value);
}
[NullableContextAttribute("1")]
internal interface Spectre.Console.IListPromptStrategy`1 {
    public abstract virtual ListPromptInputResult HandleInput(ConsoleKeyInfo key, ListPromptState`1<T> state);
    public abstract virtual int CalculatePageSize(IAnsiConsole console, int totalItemCount, int requestedPageSize);
    public abstract virtual IRenderable Render(IAnsiConsole console, bool scrollable, int cursorIndex, IEnumerable`1<ValueTuple`2<int, ListPromptItem`1<T>>> items, bool skipUnselectableItems, string searchText);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IMultiSelectionItem`1 {
    public bool IsSelected { get; }
    public abstract virtual bool get_IsSelected();
    public abstract virtual IMultiSelectionItem`1<T> Select();
}
[ExtensionAttribute]
internal static class Spectre.Console.Int32Extensions : object {
    [ExtensionAttribute]
public static int Clamp(int value, int min, int max);
}
public enum Spectre.Console.InteractionSupport : Enum {
    public int value__;
    public static InteractionSupport Detect;
    public static InteractionSupport Yes;
    public static InteractionSupport No;
}
[ExtensionAttribute]
internal static class Spectre.Console.Internal.CharExtensions : object {
    [ExtensionAttribute]
public static bool IsDigit(char character, int min);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Internal.DefaultExclusivityMode : object {
    private SemaphoreSlim _semaphore;
    public sealed virtual T Run(Func`1<T> func);
    [AsyncStateMachineAttribute("Spectre.Console.Internal.DefaultExclusivityMode/<RunAsync>d__3`1")]
public sealed virtual Task`1<T> RunAsync(Func`1<Task`1<T>> func);
    private static Exception CreateExclusivityException();
}
internal class Spectre.Console.Internal.EncoderCapabilities : object {
    [CompilerGeneratedAttribute]
private ColorSystem <ColorSystem>k__BackingField;
    public ColorSystem ColorSystem { get; }
    public bool Ansi { get; }
    public bool Links { get; }
    public bool Legacy { get; }
    public bool IsTerminal { get; }
    public bool Interactive { get; }
    public bool Unicode { get; }
    public EncoderCapabilities(ColorSystem colors);
    [CompilerGeneratedAttribute]
public sealed virtual ColorSystem get_ColorSystem();
    public sealed virtual bool get_Ansi();
    public sealed virtual bool get_Links();
    public sealed virtual bool get_Legacy();
    public sealed virtual bool get_IsTerminal();
    public sealed virtual bool get_Interactive();
    public sealed virtual bool get_Unicode();
}
internal class Spectre.Console.Internal.HtmlEncoder : object {
    [NullableContextAttribute("1")]
public sealed virtual string Encode(IAnsiConsole console, IEnumerable`1<IRenderable> renderables);
    [NullableContextAttribute("1")]
private static string BuildCss(Style style);
}
internal class Spectre.Console.Internal.TextEncoder : object {
    [NullableContextAttribute("1")]
public sealed virtual string Encode(IAnsiConsole console, IEnumerable`1<IRenderable> renderables);
}
public interface Spectre.Console.IOverflowable {
    public Nullable`1<Overflow> Overflow { get; public set; }
    public abstract virtual Nullable`1<Overflow> get_Overflow();
    public abstract virtual void set_Overflow(Nullable`1<Overflow> value);
}
public interface Spectre.Console.IPaddable {
    public Nullable`1<Padding> Padding { get; public set; }
    public abstract virtual Nullable`1<Padding> get_Padding();
    public abstract virtual void set_Padding(Nullable`1<Padding> value);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IProfileEnricher {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual bool Enabled(IDictionary`2<string, string> environmentVariables);
    public abstract virtual void Enrich(Profile profile);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.IPrompt`1 {
    public abstract virtual T Show(IAnsiConsole console);
    public abstract virtual Task`1<T> ShowAsync(IAnsiConsole console, CancellationToken cancellationToken);
}
internal interface Spectre.Console.IRatioResolvable {
    public int Ratio { get; }
    public Nullable`1<int> Size { get; }
    public int MinimumSize { get; }
    public abstract virtual int get_Ratio();
    public abstract virtual Nullable`1<int> get_Size();
    public abstract virtual int get_MinimumSize();
}
public interface Spectre.Console.IReadOnlyCapabilities {
    public ColorSystem ColorSystem { get; }
    public bool Ansi { get; }
    public bool Links { get; }
    public bool Legacy { get; }
    [ObsoleteAttribute("Use Profile.Out.IsTerminal instead")]
public bool IsTerminal { get; }
    public bool Interactive { get; }
    public bool Unicode { get; }
    public abstract virtual ColorSystem get_ColorSystem();
    public abstract virtual bool get_Ansi();
    public abstract virtual bool get_Links();
    public abstract virtual bool get_Legacy();
    public abstract virtual bool get_IsTerminal();
    public abstract virtual bool get_Interactive();
    public abstract virtual bool get_Unicode();
}
[NullableContextAttribute("1")]
public interface Spectre.Console.ISelectionItem`1 {
    public abstract virtual ISelectionItem`1<T> AddChild(T child);
}
public enum Spectre.Console.Justify : Enum {
    public int value__;
    public static Justify Left;
    public static Justify Right;
    public static Justify Center;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Spectre.Console.Layout : Renderable {
    private LayoutSplitter _splitter;
    private Layout[] _children;
    private IRenderable _renderable;
    private int _ratio;
    private int _minimumSize;
    private Nullable`1<int> _size;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVisible>k__BackingField;
    [NullableAttribute("2")]
public string Name { get; public set; }
    public int Ratio { get; public set; }
    public int MinimumSize { get; public set; }
    public Nullable`1<int> Size { get; public set; }
    public bool IsVisible { get; public set; }
    internal LayoutSplitter Splitter { get; }
    internal IRenderable Renderable { get; }
    public Layout Item { get; }
    public Layout(string name);
    public Layout(IRenderable renderable);
    [NullableContextAttribute("2")]
public Layout(string name, IRenderable renderable);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Name(string value);
    public sealed virtual int get_Ratio();
    public void set_Ratio(int value);
    public sealed virtual int get_MinimumSize();
    public void set_MinimumSize(int value);
    public sealed virtual Nullable`1<int> get_Size();
    public void set_Size(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsVisible();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsVisible(bool value);
    internal LayoutSplitter get_Splitter();
    internal IRenderable get_Renderable();
    public Layout get_Item(string name);
    public Layout GetLayout(string name);
    public Layout SplitRows(Layout[] children);
    public Layout SplitColumns(Layout[] children);
    public Layout Update(IRenderable renderable);
    [IteratorStateMachineAttribute("Spectre.Console.Layout/<Render>d__36")]
protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    private IEnumerable`1<Layout> GetChildren(bool visibleOnly);
    private bool HasChildren(bool visibleOnly);
    private void Split(LayoutSplitter splitter, Layout[] layouts);
    private Dictionary`2<Layout, LayoutRender> MakeRenderMap(RenderOptions options, int maxWidth);
    private IEnumerable`1<ValueTuple`2<Layout, Region>> MakeRegionMap(int width, int height);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.LayoutExtensions : object {
    [ExtensionAttribute]
public static Layout Ratio(Layout layout, int ratio);
    [ExtensionAttribute]
public static Layout Size(Layout layout, int size);
    [ExtensionAttribute]
public static Layout MinimumSize(Layout layout, int size);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.LayoutPlaceholder : Renderable {
    [CompilerGeneratedAttribute]
private Layout <Layout>k__BackingField;
    public Layout Layout { get; }
    public LayoutPlaceholder(Layout layout);
    [CompilerGeneratedAttribute]
public Layout get_Layout();
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{Region,nq}")]
internal class Spectre.Console.LayoutRender : object {
    [CompilerGeneratedAttribute]
private Region <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SegmentLine> <Render>k__BackingField;
    public Region Region { get; }
    public List`1<SegmentLine> Render { get; }
    public LayoutRender(Region region, List`1<SegmentLine> render);
    [CompilerGeneratedAttribute]
public Region get_Region();
    [CompilerGeneratedAttribute]
public List`1<SegmentLine> get_Render();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Spectre.Console.LayoutSplitter : object {
    [CompilerGeneratedAttribute]
private static LayoutSplitter <Column>k__BackingField;
    [CompilerGeneratedAttribute]
private static LayoutSplitter <Row>k__BackingField;
    [CompilerGeneratedAttribute]
private static LayoutSplitter <Null>k__BackingField;
    public static LayoutSplitter Column { get; }
    public static LayoutSplitter Row { get; }
    public static LayoutSplitter Null { get; }
    private static LayoutSplitter();
    [CompilerGeneratedAttribute]
public static LayoutSplitter get_Column();
    [CompilerGeneratedAttribute]
public static LayoutSplitter get_Row();
    [CompilerGeneratedAttribute]
public static LayoutSplitter get_Null();
    public abstract virtual IEnumerable`1<ValueTuple`2<Layout, Region>> Divide(Region region, IEnumerable`1<Layout> layouts);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.LegacyConsoleBackend : object {
    private IAnsiConsole _console;
    private Style _lastStyle;
    [CompilerGeneratedAttribute]
private IAnsiConsoleCursor <Cursor>k__BackingField;
    public IAnsiConsoleCursor Cursor { get; }
    public LegacyConsoleBackend(IAnsiConsole console);
    [CompilerGeneratedAttribute]
public sealed virtual IAnsiConsoleCursor get_Cursor();
    public sealed virtual void Clear(bool home);
    public sealed virtual void Write(IRenderable renderable);
    private void SetStyle(Style style);
}
internal class Spectre.Console.LegacyConsoleCursor : object {
    public sealed virtual void Show(bool show);
    public sealed virtual void Move(CursorDirection direction, int steps);
    public sealed virtual void SetPosition(int x, int y);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Spectre.Console.ListExtensions : object {
    [ExtensionAttribute]
public static void RemoveLast(List`1<T> list);
    [ExtensionAttribute]
public static void AddOrReplaceLast(List`1<T> list, T item);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.ListPrompt`1 : object {
    private IAnsiConsole _console;
    private IListPromptStrategy`1<T> _strategy;
    public ListPrompt`1(IAnsiConsole console, IListPromptStrategy`1<T> strategy);
    [AsyncStateMachineAttribute("Spectre.Console.ListPrompt`1/<Show>d__3")]
public Task`1<ListPromptState`1<T>> Show(ListPromptTree`1<T> tree, SelectionMode selectionMode, bool skipUnselectableItems, bool searchEnabled, int requestedPageSize, bool wrapAround, CancellationToken cancellationToken);
    private IRenderable BuildRenderable(ListPromptState`1<T> state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.ListPromptConstants : object {
    public static string Arrow;
    public static string Checkbox;
    public static string SelectedCheckbox;
    public static string GroupSelectedCheckbox;
    public static string InstructionsMarkup;
    public static string MoreChoicesMarkup;
    public static string SearchPlaceholderMarkup;
}
internal enum Spectre.Console.ListPromptInputResult : Enum {
    public int value__;
    public static ListPromptInputResult None;
    public static ListPromptInputResult Refresh;
    public static ListPromptInputResult Submit;
    public static ListPromptInputResult Abort;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.ListPromptItem`1 : object {
    [CompilerGeneratedAttribute]
private T <Data>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ListPromptItem`1<T> <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ListPromptItem`1<T>> <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Depth>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSelected>k__BackingField;
    public T Data { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ListPromptItem`1<T> Parent { get; }
    public List`1<ListPromptItem`1<T>> Children { get; }
    public int Depth { get; }
    public bool IsSelected { get; public set; }
    public bool IsGroup { get; }
    public ListPromptItem`1(T data, ListPromptItem`1<T> parent);
    [CompilerGeneratedAttribute]
public T get_Data();
    [CompilerGeneratedAttribute]
public ListPromptItem`1<T> get_Parent();
    [CompilerGeneratedAttribute]
public List`1<ListPromptItem`1<T>> get_Children();
    [CompilerGeneratedAttribute]
public int get_Depth();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsSelected();
    [CompilerGeneratedAttribute]
public void set_IsSelected(bool value);
    public bool get_IsGroup();
    public sealed virtual IMultiSelectionItem`1<T> Select();
    public sealed virtual ISelectionItem`1<T> AddChild(T item);
    [IteratorStateMachineAttribute("Spectre.Console.ListPromptItem`1/<Traverse>d__21")]
public IEnumerable`1<ListPromptItem`1<T>> Traverse(bool includeSelf);
    private static int CalculateDepth(ListPromptItem`1<T> parent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.ListPromptRenderHook`1 : object {
    private IAnsiConsole _console;
    private Func`1<IRenderable> _builder;
    private LiveRenderable _live;
    private object _lock;
    private bool _dirty;
    public ListPromptRenderHook`1(IAnsiConsole console, Func`1<IRenderable> builder);
    public void Clear();
    public void Refresh();
    [IteratorStateMachineAttribute("Spectre.Console.ListPromptRenderHook`1/<Process>d__8")]
public sealed virtual IEnumerable`1<IRenderable> Process(RenderOptions options, IEnumerable`1<IRenderable> renderables);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.ListPromptState`1 : object {
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WrapAround>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectionMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SkipUnselectableItems>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SearchEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ListPromptItem`1<T>> <Items>k__BackingField;
    [NullableAttribute("2")]
private IReadOnlyList`1<int> _leafIndexes;
    [CompilerGeneratedAttribute]
private string <SearchText>k__BackingField;
    public int Index { get; private set; }
    public int ItemCount { get; }
    public int PageSize { get; }
    public bool WrapAround { get; }
    public SelectionMode Mode { get; }
    public bool SkipUnselectableItems { get; private set; }
    public bool SearchEnabled { get; }
    public IReadOnlyList`1<ListPromptItem`1<T>> Items { get; }
    public ListPromptItem`1<T> Current { get; }
    public string SearchText { get; private set; }
    public ListPromptState`1(IReadOnlyList`1<ListPromptItem`1<T>> items, int pageSize, bool wrapAround, SelectionMode mode, bool skipUnselectableItems, bool searchEnabled);
    [CompilerGeneratedAttribute]
public int get_Index();
    [CompilerGeneratedAttribute]
private void set_Index(int value);
    public int get_ItemCount();
    [CompilerGeneratedAttribute]
public int get_PageSize();
    [CompilerGeneratedAttribute]
public bool get_WrapAround();
    [CompilerGeneratedAttribute]
public SelectionMode get_Mode();
    [CompilerGeneratedAttribute]
public bool get_SkipUnselectableItems();
    [CompilerGeneratedAttribute]
private void set_SkipUnselectableItems(bool value);
    [CompilerGeneratedAttribute]
public bool get_SearchEnabled();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ListPromptItem`1<T>> get_Items();
    public ListPromptItem`1<T> get_Current();
    [CompilerGeneratedAttribute]
public string get_SearchText();
    [CompilerGeneratedAttribute]
private void set_SearchText(string value);
    public bool Update(ConsoleKeyInfo keyInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.ListPromptTree`1 : object {
    private List`1<ListPromptItem`1<T>> _roots;
    private IEqualityComparer`1<T> _comparer;
    public ListPromptTree`1(IEqualityComparer`1<T> comparer);
    public ListPromptItem`1<T> Find(T item);
    public void Add(ListPromptItem`1<T> node);
    [IteratorStateMachineAttribute("Spectre.Console.ListPromptTree`1/<Traverse>d__5")]
public IEnumerable`1<ListPromptItem`1<T>> Traverse();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Spectre.Console.ListWithCallback`1 : object {
    private List`1<T> _list;
    private Action _callback;
    public T Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ListWithCallback`1(Action callback);
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual bool Remove(T item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.LiveDisplay : object {
    private IAnsiConsole _console;
    private IRenderable _target;
    [CompilerGeneratedAttribute]
private bool <AutoClear>k__BackingField;
    [CompilerGeneratedAttribute]
private VerticalOverflow <Overflow>k__BackingField;
    [CompilerGeneratedAttribute]
private VerticalOverflowCropping <Cropping>k__BackingField;
    public bool AutoClear { get; public set; }
    public VerticalOverflow Overflow { get; public set; }
    public VerticalOverflowCropping Cropping { get; public set; }
    public LiveDisplay(IAnsiConsole console, IRenderable target);
    [CompilerGeneratedAttribute]
public bool get_AutoClear();
    [CompilerGeneratedAttribute]
public void set_AutoClear(bool value);
    [CompilerGeneratedAttribute]
public VerticalOverflow get_Overflow();
    [CompilerGeneratedAttribute]
public void set_Overflow(VerticalOverflow value);
    [CompilerGeneratedAttribute]
public VerticalOverflowCropping get_Cropping();
    [CompilerGeneratedAttribute]
public void set_Cropping(VerticalOverflowCropping value);
    public void Start(Action`1<LiveDisplayContext> action);
    public T Start(Func`2<LiveDisplayContext, T> func);
    [AsyncStateMachineAttribute("Spectre.Console.LiveDisplay/<StartAsync>d__17")]
public Task StartAsync(Func`2<LiveDisplayContext, Task> func);
    [AsyncStateMachineAttribute("Spectre.Console.LiveDisplay/<StartAsync>d__18`1")]
public Task`1<T> StartAsync(Func`2<LiveDisplayContext, Task`1<T>> func);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.LiveDisplayContext : object {
    private IAnsiConsole _console;
    [CompilerGeneratedAttribute]
private object <Lock>k__BackingField;
    [CompilerGeneratedAttribute]
private LiveRenderable <Live>k__BackingField;
    internal object Lock { get; }
    internal LiveRenderable Live { get; }
    internal LiveDisplayContext(IAnsiConsole console, IRenderable target);
    [CompilerGeneratedAttribute]
internal object get_Lock();
    [CompilerGeneratedAttribute]
internal LiveRenderable get_Live();
    [NullableContextAttribute("2")]
public void UpdateTarget(IRenderable target);
    public void Refresh();
    internal void SetOverflow(VerticalOverflow overflow, VerticalOverflowCropping cropping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.LiveDisplayExtensions : object {
    [ExtensionAttribute]
public static LiveDisplay AutoClear(LiveDisplay live, bool enabled);
    [ExtensionAttribute]
public static LiveDisplay Overflow(LiveDisplay live, VerticalOverflow overflow);
    [ExtensionAttribute]
public static LiveDisplay Cropping(LiveDisplay live, VerticalOverflowCropping cropping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.LiveDisplayRenderer : object {
    private IAnsiConsole _console;
    private LiveDisplayContext _context;
    public LiveDisplayRenderer(IAnsiConsole console, LiveDisplayContext context);
    public void Started();
    public void Completed(bool autoclear);
    [IteratorStateMachineAttribute("Spectre.Console.LiveDisplayRenderer/<Process>d__5")]
public sealed virtual IEnumerable`1<IRenderable> Process(RenderOptions options, IEnumerable`1<IRenderable> renderables);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Markup : Renderable {
    private Paragraph _paragraph;
    public Nullable`1<Justify> Justification { get; public set; }
    public Nullable`1<Overflow> Overflow { get; public set; }
    public int Length { get; }
    public int Lines { get; }
    public Markup(string text, Style style);
    public sealed virtual Nullable`1<Justify> get_Justification();
    public sealed virtual void set_Justification(Nullable`1<Justify> value);
    public sealed virtual Nullable`1<Overflow> get_Overflow();
    public sealed virtual void set_Overflow(Nullable`1<Overflow> value);
    public int get_Length();
    public int get_Lines();
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    public static Markup FromInterpolated(FormattableString value, Style style);
    public static Markup FromInterpolated(IFormatProvider provider, FormattableString value, Style style);
    public static string Escape(string text);
    public static string Remove(string text);
    internal static string EscapeInterpolated(IFormatProvider provider, FormattableString value);
}
internal static class Spectre.Console.MarkupParser : object {
    [NullableContextAttribute("1")]
public static Paragraph Parse(string text, Style style);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.MarkupToken : object {
    [CompilerGeneratedAttribute]
private MarkupTokenKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    public MarkupTokenKind Kind { get; }
    public string Value { get; }
    public int Position { get; public set; }
    public MarkupToken(MarkupTokenKind kind, string value, int position);
    [CompilerGeneratedAttribute]
public MarkupTokenKind get_Kind();
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public int get_Position();
    [CompilerGeneratedAttribute]
public void set_Position(int value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Spectre.Console.MarkupTokenizer : object {
    [NullableAttribute("1")]
private StringBuffer _reader;
    [CompilerGeneratedAttribute]
private MarkupToken <Current>k__BackingField;
    public MarkupToken Current { get; private set; }
    [NullableContextAttribute("1")]
public MarkupTokenizer(string text);
    [CompilerGeneratedAttribute]
public MarkupToken get_Current();
    [CompilerGeneratedAttribute]
private void set_Current(MarkupToken value);
    public sealed virtual void Dispose();
    public bool MoveNext();
    private bool ReadText();
    private bool ReadMarkup();
}
internal enum Spectre.Console.MarkupTokenKind : Enum {
    public int value__;
    public static MarkupTokenKind Text;
    public static MarkupTokenKind Open;
    public static MarkupTokenKind Close;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.MultiSelectionPrompt`1 : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WrapAround>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <HighlightStyle>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<T, string> <Converter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MoreChoicesText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstructionsText>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectionMode <Mode>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ListPromptTree`1<T> <Tree>k__BackingField;
    public string Title { get; public set; }
    public int PageSize { get; public set; }
    public bool WrapAround { get; public set; }
    public Style HighlightStyle { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<T, string> Converter { get; public set; }
    public bool Required { get; public set; }
    public string MoreChoicesText { get; public set; }
    public string InstructionsText { get; public set; }
    public SelectionMode Mode { get; public set; }
    [NullableAttribute("1")]
internal ListPromptTree`1<T> Tree { get; }
    public MultiSelectionPrompt`1(IEqualityComparer`1<T> comparer);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public int get_PageSize();
    [CompilerGeneratedAttribute]
public void set_PageSize(int value);
    [CompilerGeneratedAttribute]
public bool get_WrapAround();
    [CompilerGeneratedAttribute]
public void set_WrapAround(bool value);
    [CompilerGeneratedAttribute]
public Style get_HighlightStyle();
    [CompilerGeneratedAttribute]
public void set_HighlightStyle(Style value);
    [CompilerGeneratedAttribute]
public Func`2<T, string> get_Converter();
    [CompilerGeneratedAttribute]
public void set_Converter(Func`2<T, string> value);
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public string get_MoreChoicesText();
    [CompilerGeneratedAttribute]
public void set_MoreChoicesText(string value);
    [CompilerGeneratedAttribute]
public string get_InstructionsText();
    [CompilerGeneratedAttribute]
public void set_InstructionsText(string value);
    [CompilerGeneratedAttribute]
public SelectionMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(SelectionMode value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal ListPromptTree`1<T> get_Tree();
    [NullableContextAttribute("1")]
public IMultiSelectionItem`1<T> AddChoice(T item);
    [NullableContextAttribute("1")]
public sealed virtual List`1<T> Show(IAnsiConsole console);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Spectre.Console.MultiSelectionPrompt`1/<ShowAsync>d__42")]
public sealed virtual Task`1<List`1<T>> ShowAsync(IAnsiConsole console, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public IEnumerable`1<T> GetParents(T item);
    [NullableContextAttribute("1")]
public T GetParent(T item);
    [NullableContextAttribute("1")]
private sealed virtual override ListPromptInputResult Spectre.Console.IListPromptStrategy<T>.HandleInput(ConsoleKeyInfo key, ListPromptState`1<T> state);
    [NullableContextAttribute("1")]
private sealed virtual override int Spectre.Console.IListPromptStrategy<T>.CalculatePageSize(IAnsiConsole console, int totalItemCount, int requestedPageSize);
    [NullableContextAttribute("1")]
private sealed virtual override IRenderable Spectre.Console.IListPromptStrategy<T>.Render(IAnsiConsole console, bool scrollable, int cursorIndex, IEnumerable`1<ValueTuple`2<int, ListPromptItem`1<T>>> items, bool skipUnselectableItems, string searchText);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.MultiSelectionPromptExtensions : object {
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> Mode(MultiSelectionPrompt`1<T> obj, SelectionMode mode);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> AddChoices(MultiSelectionPrompt`1<T> obj, T choice, Action`1<IMultiSelectionItem`1<T>> configurator);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> AddChoices(MultiSelectionPrompt`1<T> obj, T[] choices);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> AddChoices(MultiSelectionPrompt`1<T> obj, IEnumerable`1<T> choices);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> AddChoiceGroup(MultiSelectionPrompt`1<T> obj, T group, IEnumerable`1<T> choices);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> AddChoiceGroup(MultiSelectionPrompt`1<T> obj, T group, T[] choices);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> Select(MultiSelectionPrompt`1<T> obj, T item);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> Title(MultiSelectionPrompt`1<T> obj, string title);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> PageSize(MultiSelectionPrompt`1<T> obj, int pageSize);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> WrapAround(MultiSelectionPrompt`1<T> obj, bool shouldWrap);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> HighlightStyle(MultiSelectionPrompt`1<T> obj, Style highlightStyle);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> MoreChoicesText(MultiSelectionPrompt`1<T> obj, string text);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> InstructionsText(MultiSelectionPrompt`1<T> obj, string text);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> NotRequired(MultiSelectionPrompt`1<T> obj);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> Required(MultiSelectionPrompt`1<T> obj);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> Required(MultiSelectionPrompt`1<T> obj, bool required);
    [ExtensionAttribute]
public static MultiSelectionPrompt`1<T> UseConverter(MultiSelectionPrompt`1<T> obj, Func`2<T, string> displaySelector);
}
public enum Spectre.Console.Overflow : Enum {
    public int value__;
    public static Overflow Fold;
    public static Overflow Crop;
    public static Overflow Ellipsis;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.OverflowableExtensions : object {
    [ExtensionAttribute]
public static T Fold(T obj);
    [ExtensionAttribute]
public static T Crop(T obj);
    [ExtensionAttribute]
public static T Ellipsis(T obj);
    [ExtensionAttribute]
public static T Overflow(T obj, Overflow overflow);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.PaddableExtensions : object {
    [ExtensionAttribute]
public static T PadLeft(T obj, int left);
    [ExtensionAttribute]
public static T PadTop(T obj, int top);
    [ExtensionAttribute]
public static T PadRight(T obj, int right);
    [ExtensionAttribute]
public static T PadBottom(T obj, int bottom);
    [ExtensionAttribute]
public static T Padding(T obj, int left, int top, int right, int bottom);
    [ExtensionAttribute]
public static T Padding(T obj, int horizontal, int vertical);
    [ExtensionAttribute]
public static T Padding(T obj, Padding padding);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Padder : Renderable {
    private IRenderable _child;
    [CompilerGeneratedAttribute]
private Nullable`1<Padding> <Padding>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Expand>k__BackingField;
    public Nullable`1<Padding> Padding { get; public set; }
    public bool Expand { get; public set; }
    public Padder(IRenderable child, Nullable`1<Padding> padding);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Padding> get_Padding();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Padding(Nullable`1<Padding> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Expand();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expand(bool value);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
public class Spectre.Console.Padding : ValueType {
    [CompilerGeneratedAttribute]
private int <Left>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Top>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Right>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Bottom>k__BackingField;
    public int Left { get; }
    public int Top { get; }
    public int Right { get; }
    public int Bottom { get; }
    public Padding(int size);
    public Padding(int horizontal, int vertical);
    public Padding(int left, int top, int right, int bottom);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Left();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Top();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Right();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Bottom();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual bool Equals(Padding other);
    public static bool op_Equality(Padding left, Padding right);
    public static bool op_Inequality(Padding left, Padding right);
    public int GetWidth();
    public int GetHeight();
}
[ExtensionAttribute]
public static class Spectre.Console.PaddingExtensions : object {
    [ExtensionAttribute]
public static int GetLeftSafe(Nullable`1<Padding> padding);
    [ExtensionAttribute]
public static int GetRightSafe(Nullable`1<Padding> padding);
    [ExtensionAttribute]
public static int GetTopSafe(Nullable`1<Padding> padding);
    [ExtensionAttribute]
public static int GetBottomSafe(Nullable`1<Padding> padding);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Panel : Renderable {
    private static int EdgeWidth;
    private IRenderable _child;
    [CompilerGeneratedAttribute]
private BoxBorder <Border>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseSafeBorder>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Style <BorderStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Expand>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Padding> <Padding>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private PanelHeader <Header>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Inline>k__BackingField;
    public BoxBorder Border { get; public set; }
    public bool UseSafeBorder { get; public set; }
    [NullableAttribute("2")]
public Style BorderStyle { get; public set; }
    public bool Expand { get; public set; }
    public Nullable`1<Padding> Padding { get; public set; }
    [NullableAttribute("2")]
public PanelHeader Header { get; public set; }
    public Nullable`1<int> Width { get; public set; }
    public Nullable`1<int> Height { get; public set; }
    internal bool Inline { get; internal set; }
    public Panel(string text);
    public Panel(IRenderable content);
    [CompilerGeneratedAttribute]
public sealed virtual BoxBorder get_Border();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Border(BoxBorder value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseSafeBorder();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseSafeBorder(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual Style get_BorderStyle();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_BorderStyle(Style value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Expand();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expand(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Padding> get_Padding();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Padding(Nullable`1<Padding> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public PanelHeader get_Header();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Header(PanelHeader value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal bool get_Inline();
    [CompilerGeneratedAttribute]
internal void set_Inline(bool value);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    private Measurement Measure(RenderOptions options, int maxWidth, IRenderable child);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    private void AddTopBorder(List`1<Segment> result, RenderOptions options, BoxBorder border, Style borderStyle, int panelWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.PanelExtensions : object {
    [ExtensionAttribute]
public static Panel Header(Panel panel, string text, Nullable`1<Justify> alignment);
    [ExtensionAttribute]
public static Panel HeaderAlignment(Panel panel, Justify alignment);
    [ExtensionAttribute]
public static Panel Header(Panel panel, PanelHeader header);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.PanelHeader : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Justify> <Justification>k__BackingField;
    public string Text { get; }
    public Nullable`1<Justify> Justification { get; public set; }
    public PanelHeader(string text, Nullable`1<Justify> alignment);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Justify> get_Justification();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Justification(Nullable`1<Justify> value);
    [ObsoleteAttribute("Use markup instead.")]
[EditorBrowsableAttribute("1")]
public PanelHeader SetStyle(Style style);
    [ObsoleteAttribute("Use markup instead.")]
[EditorBrowsableAttribute("1")]
public PanelHeader SetStyle(string style);
    public PanelHeader SetAlignment(Justify alignment);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Paragraph : Renderable {
    private List`1<SegmentLine> _lines;
    [CompilerGeneratedAttribute]
private Nullable`1<Justify> <Justification>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Overflow> <Overflow>k__BackingField;
    public Nullable`1<Justify> Justification { get; public set; }
    public Nullable`1<Overflow> Overflow { get; public set; }
    public int Length { get; }
    public int Lines { get; }
    public Paragraph(string text, Style style);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Justify> get_Justification();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Justification(Nullable`1<Justify> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Overflow> get_Overflow();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Overflow(Nullable`1<Overflow> value);
    public int get_Length();
    public int get_Lines();
    public Paragraph Append(string text, Style style);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    private List`1<SegmentLine> Clone();
    private List`1<SegmentLine> SplitLines(int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.PercentageColumn : ProgressColumn {
    [CompilerGeneratedAttribute]
private Style <Style>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <CompletedStyle>k__BackingField;
    public Style Style { get; public set; }
    public Style CompletedStyle { get; public set; }
    [CompilerGeneratedAttribute]
public Style get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(Style value);
    [CompilerGeneratedAttribute]
public Style get_CompletedStyle();
    [CompilerGeneratedAttribute]
public void set_CompletedStyle(Style value);
    public virtual IRenderable Render(RenderOptions options, ProgressTask task, TimeSpan deltaTime);
    public virtual Nullable`1<int> GetColumnWidth(RenderOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.PercentageColumnExtensions : object {
    [ExtensionAttribute]
public static PercentageColumn Style(PercentageColumn column, Style style);
    [ExtensionAttribute]
public static PercentageColumn CompletedStyle(PercentageColumn column, Style style);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Profile : object {
    private HashSet`1<string> _enrichers;
    private static String[] _defaultEnricher;
    private IAnsiConsoleOutput _out;
    private Encoding _encoding;
    private Capabilities _capabilities;
    private Nullable`1<int> _width;
    private Nullable`1<int> _height;
    public IReadOnlyCollection`1<string> Enrichers { get; }
    public IAnsiConsoleOutput Out { get; public set; }
    public Encoding Encoding { get; public set; }
    public int Width { get; public set; }
    public int Height { get; public set; }
    public Capabilities Capabilities { get; public set; }
    public Profile(IAnsiConsoleOutput out, Encoding encoding);
    private static Profile();
    public IReadOnlyCollection`1<string> get_Enrichers();
    public IAnsiConsoleOutput get_Out();
    public void set_Out(IAnsiConsoleOutput value);
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    public int get_Width();
    public void set_Width(int value);
    public int get_Height();
    public void set_Height(int value);
    public Capabilities get_Capabilities();
    public void set_Capabilities(Capabilities value);
    public bool Supports(ColorSystem colorSystem);
    internal void AddEnricher(string name);
}
public class Spectre.Console.ProfileEnrichment : object {
    [CompilerGeneratedAttribute]
private bool <UseDefaultEnrichers>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<IProfileEnricher> <Enrichers>k__BackingField;
    public bool UseDefaultEnrichers { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<IProfileEnricher> Enrichers { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UseDefaultEnrichers();
    [CompilerGeneratedAttribute]
public void set_UseDefaultEnrichers(bool value);
    [CompilerGeneratedAttribute]
public List`1<IProfileEnricher> get_Enrichers();
    [CompilerGeneratedAttribute]
public void set_Enrichers(List`1<IProfileEnricher> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Progress : object {
    private IAnsiConsole _console;
    [CompilerGeneratedAttribute]
private Func`3<IRenderable, IReadOnlyList`1<ProgressTask>, IRenderable> <RenderHook>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoRefresh>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoClear>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HideCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RefreshRate>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ProgressColumn> <Columns>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ProgressRenderer <FallbackRenderer>k__BackingField;
    public Func`3<IRenderable, IReadOnlyList`1<ProgressTask>, IRenderable> RenderHook { get; public set; }
    public bool AutoRefresh { get; public set; }
    public bool AutoClear { get; public set; }
    public bool HideCompleted { get; public set; }
    public TimeSpan RefreshRate { get; public set; }
    internal List`1<ProgressColumn> Columns { get; }
    [NullableAttribute("2")]
internal ProgressRenderer FallbackRenderer { get; internal set; }
    public Progress(IAnsiConsole console);
    [CompilerGeneratedAttribute]
public Func`3<IRenderable, IReadOnlyList`1<ProgressTask>, IRenderable> get_RenderHook();
    [CompilerGeneratedAttribute]
public void set_RenderHook(Func`3<IRenderable, IReadOnlyList`1<ProgressTask>, IRenderable> value);
    [CompilerGeneratedAttribute]
public bool get_AutoRefresh();
    [CompilerGeneratedAttribute]
public void set_AutoRefresh(bool value);
    [CompilerGeneratedAttribute]
public bool get_AutoClear();
    [CompilerGeneratedAttribute]
public void set_AutoClear(bool value);
    [CompilerGeneratedAttribute]
public bool get_HideCompleted();
    [CompilerGeneratedAttribute]
public void set_HideCompleted(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RefreshRate();
    [CompilerGeneratedAttribute]
public void set_RefreshRate(TimeSpan value);
    [CompilerGeneratedAttribute]
internal List`1<ProgressColumn> get_Columns();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal ProgressRenderer get_FallbackRenderer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_FallbackRenderer(ProgressRenderer value);
    public void Start(Action`1<ProgressContext> action);
    public T Start(Func`2<ProgressContext, T> func);
    [AsyncStateMachineAttribute("Spectre.Console.Progress/<StartAsync>d__31")]
public Task StartAsync(Func`2<ProgressContext, Task> action);
    [AsyncStateMachineAttribute("Spectre.Console.Progress/<StartAsync>d__32`1")]
public Task`1<T> StartAsync(Func`2<ProgressContext, Task`1<T>> action);
    private ProgressRenderer CreateRenderer();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.ProgressBar : Renderable {
    private static int PULSESIZE;
    private static int PULSESPEED;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private double <MaxValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowRemaining>k__BackingField;
    [CompilerGeneratedAttribute]
private char <UnicodeBar>k__BackingField;
    [CompilerGeneratedAttribute]
private char <AsciiBar>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIndeterminate>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`3<double, CultureInfo, string> <ValueFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <CompletedStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <FinishedStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <RemainingStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <IndeterminateStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private static Style <DefaultPulseStyle>k__BackingField;
    public double Value { get; public set; }
    public double MaxValue { get; public set; }
    public Nullable`1<int> Width { get; public set; }
    public bool ShowRemaining { get; public set; }
    public char UnicodeBar { get; public set; }
    public char AsciiBar { get; public set; }
    public bool ShowValue { get; public set; }
    public bool IsIndeterminate { get; public set; }
    [NullableAttribute("2")]
public CultureInfo Culture { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`3<double, CultureInfo, string> ValueFormatter { get; public set; }
    public Style CompletedStyle { get; public set; }
    public Style FinishedStyle { get; public set; }
    public Style RemainingStyle { get; public set; }
    public Style IndeterminateStyle { get; public set; }
    internal static Style DefaultPulseStyle { get; }
    private static ProgressBar();
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(double value);
    [CompilerGeneratedAttribute]
public double get_MaxValue();
    [CompilerGeneratedAttribute]
public void set_MaxValue(double value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_ShowRemaining();
    [CompilerGeneratedAttribute]
public void set_ShowRemaining(bool value);
    [CompilerGeneratedAttribute]
public char get_UnicodeBar();
    [CompilerGeneratedAttribute]
public void set_UnicodeBar(char value);
    [CompilerGeneratedAttribute]
public char get_AsciiBar();
    [CompilerGeneratedAttribute]
public void set_AsciiBar(char value);
    [CompilerGeneratedAttribute]
public bool get_ShowValue();
    [CompilerGeneratedAttribute]
public void set_ShowValue(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsIndeterminate();
    [CompilerGeneratedAttribute]
public void set_IsIndeterminate(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual CultureInfo get_Culture();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_Culture(CultureInfo value);
    [CompilerGeneratedAttribute]
public Func`3<double, CultureInfo, string> get_ValueFormatter();
    [CompilerGeneratedAttribute]
public void set_ValueFormatter(Func`3<double, CultureInfo, string> value);
    [CompilerGeneratedAttribute]
public Style get_CompletedStyle();
    [CompilerGeneratedAttribute]
public void set_CompletedStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_FinishedStyle();
    [CompilerGeneratedAttribute]
public void set_FinishedStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_RemainingStyle();
    [CompilerGeneratedAttribute]
public void set_RemainingStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_IndeterminateStyle();
    [CompilerGeneratedAttribute]
public void set_IndeterminateStyle(Style value);
    [CompilerGeneratedAttribute]
internal static Style get_DefaultPulseStyle();
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    [IteratorStateMachineAttribute("Spectre.Console.ProgressBar/<Render>d__62")]
protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    private IEnumerable`1<Segment> RenderIndeterminate(RenderOptions options, int width);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.ProgressBarColumn : ProgressColumn {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <CompletedStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <FinishedStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <RemainingStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <IndeterminateStyle>k__BackingField;
    public Nullable`1<int> Width { get; public set; }
    public Style CompletedStyle { get; public set; }
    public Style FinishedStyle { get; public set; }
    public Style RemainingStyle { get; public set; }
    public Style IndeterminateStyle { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Style get_CompletedStyle();
    [CompilerGeneratedAttribute]
public void set_CompletedStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_FinishedStyle();
    [CompilerGeneratedAttribute]
public void set_FinishedStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_RemainingStyle();
    [CompilerGeneratedAttribute]
public void set_RemainingStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_IndeterminateStyle();
    [CompilerGeneratedAttribute]
public void set_IndeterminateStyle(Style value);
    public virtual IRenderable Render(RenderOptions options, ProgressTask task, TimeSpan deltaTime);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.ProgressBarColumnExtensions : object {
    [ExtensionAttribute]
public static ProgressBarColumn CompletedStyle(ProgressBarColumn column, Style style);
    [ExtensionAttribute]
public static ProgressBarColumn FinishedStyle(ProgressBarColumn column, Style style);
    [ExtensionAttribute]
public static ProgressBarColumn RemainingStyle(ProgressBarColumn column, Style style);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Spectre.Console.ProgressColumn : object {
    [CompilerGeneratedAttribute]
private bool <NoWrap>k__BackingField;
    protected internal bool NoWrap { get; }
    [CompilerGeneratedAttribute]
protected internal virtual bool get_NoWrap();
    public abstract virtual IRenderable Render(RenderOptions options, ProgressTask task, TimeSpan deltaTime);
    public virtual Nullable`1<int> GetColumnWidth(RenderOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.ProgressContext : object {
    private List`1<ProgressTask> _tasks;
    private object _taskLock;
    private IAnsiConsole _console;
    private ProgressRenderer _renderer;
    private int _taskId;
    public bool IsFinished { get; }
    internal ProgressContext(IAnsiConsole console, ProgressRenderer renderer);
    public bool get_IsFinished();
    public ProgressTask AddTask(string description, bool autoStart, double maxValue);
    public ProgressTask AddTaskAt(string description, int index, bool autoStart, double maxValue);
    public ProgressTask AddTaskBefore(string description, ProgressTask referenceProgressTask, bool autoStart, double maxValue);
    public ProgressTask AddTaskAfter(string description, ProgressTask referenceProgressTask, bool autoStart, double maxValue);
    public ProgressTask AddTask(string description, ProgressTaskSettings settings);
    public ProgressTask AddTaskAt(string description, ProgressTaskSettings settings, int index);
    public ProgressTask AddTaskBefore(string description, ProgressTaskSettings settings, ProgressTask referenceProgressTask);
    public ProgressTask AddTaskAfter(string description, ProgressTaskSettings settings, ProgressTask referenceProgressTask);
    public void Refresh();
    private ProgressTask AddTaskAtInternal(string description, ProgressTaskSettings settings, int position);
    internal IReadOnlyList`1<ProgressTask> GetTasks();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.ProgressExtensions : object {
    [ExtensionAttribute]
public static Progress Columns(Progress progress, ProgressColumn[] columns);
    [ExtensionAttribute]
public static Progress UseRenderHook(Progress progress, Func`3<IRenderable, IReadOnlyList`1<ProgressTask>, IRenderable> renderHook);
    [ExtensionAttribute]
public static Progress AutoRefresh(Progress progress, bool enabled);
    [ExtensionAttribute]
public static Progress AutoClear(Progress progress, bool enabled);
    [ExtensionAttribute]
public static Progress HideCompleted(Progress progress, bool enabled);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.ProgressRefreshThread : object {
    private ProgressContext _context;
    private TimeSpan _refreshRate;
    private ManualResetEvent _running;
    private ManualResetEvent _stopped;
    [NullableAttribute("2")]
private Thread _thread;
    public ProgressRefreshThread(ProgressContext context, TimeSpan refreshRate);
    public sealed virtual void Dispose();
    private void Run();
}
internal abstract class Spectre.Console.ProgressRenderer : object {
    public TimeSpan RefreshRate { get; }
    public abstract virtual TimeSpan get_RefreshRate();
    public virtual void Started();
    public virtual void Completed(bool clear);
    [NullableContextAttribute("1")]
public abstract virtual void Update(ProgressContext context);
    [NullableContextAttribute("1")]
public abstract virtual IEnumerable`1<IRenderable> Process(RenderOptions options, IEnumerable`1<IRenderable> renderables);
}
[IsReadOnlyAttribute]
internal class Spectre.Console.ProgressSample : ValueType {
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Timestamp>k__BackingField;
    public double Value { get; }
    public DateTime Timestamp { get; }
    public ProgressSample(DateTime timestamp, double value);
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public DateTime get_Timestamp();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.ProgressTask : object {
    private List`1<ProgressSample> _samples;
    private object _lock;
    private double _maxValue;
    private string _description;
    private double _value;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StopTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ProgressTaskState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIndeterminate>k__BackingField;
    public int Id { get; }
    public string Description { get; public set; }
    public double MaxValue { get; public set; }
    public double Value { get; public set; }
    public Nullable`1<DateTime> StartTime { get; private set; }
    public Nullable`1<DateTime> StopTime { get; private set; }
    public ProgressTaskState State { get; }
    public bool IsStarted { get; }
    public bool IsFinished { get; }
    public double Percentage { get; }
    public Nullable`1<double> Speed { get; }
    public Nullable`1<TimeSpan> ElapsedTime { get; }
    public Nullable`1<TimeSpan> RemainingTime { get; }
    public bool IsIndeterminate { get; public set; }
    public ProgressTask(int id, string description, double maxValue, bool autoStart);
    [CompilerGeneratedAttribute]
public int get_Id();
    public string get_Description();
    public void set_Description(string value);
    public double get_MaxValue();
    public void set_MaxValue(double value);
    public double get_Value();
    public void set_Value(double value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartTime();
    [CompilerGeneratedAttribute]
private void set_StartTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StopTime();
    [CompilerGeneratedAttribute]
private void set_StopTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ProgressTaskState get_State();
    public bool get_IsStarted();
    public bool get_IsFinished();
    public double get_Percentage();
    public Nullable`1<double> get_Speed();
    public Nullable`1<TimeSpan> get_ElapsedTime();
    public Nullable`1<TimeSpan> get_RemainingTime();
    [CompilerGeneratedAttribute]
public bool get_IsIndeterminate();
    [CompilerGeneratedAttribute]
public void set_IsIndeterminate(bool value);
    public void StartTask();
    public void StopTask();
    public void Increment(double value);
    [NullableContextAttribute("2")]
private void Update(string description, Nullable`1<double> maxValue, Nullable`1<double> increment, Nullable`1<double> value);
    private double GetPercentage();
    private Nullable`1<double> GetSpeed();
    private Nullable`1<TimeSpan> GetElapsedTime();
    private Nullable`1<TimeSpan> GetRemainingTime();
    private sealed virtual override void System.IProgress<System.Double>.Report(double value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.ProgressTaskExtensions : object {
    [ExtensionAttribute]
public static ProgressTask Description(ProgressTask task, string description);
    [ExtensionAttribute]
public static ProgressTask MaxValue(ProgressTask task, double value);
    [ExtensionAttribute]
public static ProgressTask Value(ProgressTask task, double value);
    [ExtensionAttribute]
public static ProgressTask IsIndeterminate(ProgressTask task, bool indeterminate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.ProgressTaskSettings : object {
    [CompilerGeneratedAttribute]
private double <MaxValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoStart>k__BackingField;
    [CompilerGeneratedAttribute]
private static ProgressTaskSettings <Default>k__BackingField;
    public double MaxValue { get; public set; }
    public bool AutoStart { get; public set; }
    internal static ProgressTaskSettings Default { get; }
    private static ProgressTaskSettings();
    [CompilerGeneratedAttribute]
public double get_MaxValue();
    [CompilerGeneratedAttribute]
public void set_MaxValue(double value);
    [CompilerGeneratedAttribute]
public bool get_AutoStart();
    [CompilerGeneratedAttribute]
public void set_AutoStart(bool value);
    [CompilerGeneratedAttribute]
internal static ProgressTaskSettings get_Default();
}
public class Spectre.Console.ProgressTaskState : object {
    [NullableAttribute("1")]
private Dictionary`2<string, object> _state;
    [NullableAttribute("1")]
private object _lock;
    public T Get(string key);
    public T Update(string key, Func`2<T, T> func);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.Ratio : object {
    public static List`1<int> Resolve(int total, IEnumerable`1<IRatioResolvable> edges);
    public static List`1<int> Reduce(int total, List`1<int> ratios, List`1<int> maximums, List`1<int> values);
    public static List`1<int> Distribute(int total, IList`1<int> ratios, IList`1<int> minimums);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static ValueTuple`2<int, float> <Resolve>g__DivMod|0_0(float x, float y);
    [CompilerGeneratedAttribute]
internal static Nullable`1<int> <Resolve>g__GetEdgeWidth|0_1(IRatioResolvable edge);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Recorder : object {
    private IAnsiConsole _console;
    private List`1<IRenderable> _recorded;
    public Profile Profile { get; }
    public IAnsiConsoleCursor Cursor { get; }
    public IAnsiConsoleInput Input { get; }
    public IExclusivityMode ExclusivityMode { get; }
    public RenderPipeline Pipeline { get; }
    public Recorder(IAnsiConsole console);
    public sealed virtual Profile get_Profile();
    public sealed virtual IAnsiConsoleCursor get_Cursor();
    public sealed virtual IAnsiConsoleInput get_Input();
    public sealed virtual IExclusivityMode get_ExclusivityMode();
    public sealed virtual RenderPipeline get_Pipeline();
    public sealed virtual void Dispose();
    public sealed virtual void Clear(bool home);
    public sealed virtual void Write(IRenderable renderable);
    internal Recorder Clone(IAnsiConsole console);
    public string Export(IAnsiConsoleEncoder encoder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.RecorderExtensions : object {
    private static TextEncoder _textEncoder;
    private static HtmlEncoder _htmlEncoder;
    private static RecorderExtensions();
    [ExtensionAttribute]
public static string ExportText(Recorder recorder);
    [ExtensionAttribute]
public static string ExportHtml(Recorder recorder);
}
[DebuggerDisplayAttribute("[X={X,nq}, Y={Y,nq}, W={Width,nq}, H={Height,nq}]")]
public class Spectre.Console.Region : ValueType {
    [CompilerGeneratedAttribute]
private int <X>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Y>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Height>k__BackingField;
    public int X { get; }
    public int Y { get; }
    public int Width { get; }
    public int Height { get; }
    public Region(int x, int y, int width, int height);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_X();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Y();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Width();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Height();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.RemainingTimeColumn : ProgressColumn {
    [CompilerGeneratedAttribute]
private Style <Style>k__BackingField;
    protected internal bool NoWrap { get; }
    public Style Style { get; public set; }
    protected internal virtual bool get_NoWrap();
    [CompilerGeneratedAttribute]
public Style get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(Style value);
    public virtual IRenderable Render(RenderOptions options, ProgressTask task, TimeSpan deltaTime);
    public virtual Nullable`1<int> GetColumnWidth(RenderOptions options);
}
[ExtensionAttribute]
public static class Spectre.Console.RemainingTimeColumnExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static RemainingTimeColumn Style(RemainingTimeColumn column, Style style);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.RenderableExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<Segment> GetSegments(IRenderable renderable, IAnsiConsole console);
    private static IEnumerable`1<Segment> GetSegments(IAnsiConsole console, RenderOptions options, IEnumerable`1<IRenderable> renderables);
}
public class Spectre.Console.Rendering.Ascii2TableBorder : TableBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
public class Spectre.Console.Rendering.AsciiBoxBorder : BoxBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(BoxBorderPart part);
}
public class Spectre.Console.Rendering.AsciiDoubleHeadTableBorder : TableBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
public class Spectre.Console.Rendering.AsciiTableBorder : TableBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
public class Spectre.Console.Rendering.AsciiTreeGuide : TreeGuide {
    [NullableContextAttribute("1")]
public virtual string GetPart(TreeGuidePart part);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.BoldLineTreeGuide : TreeGuide {
    public TreeGuide SafeTreeGuide { get; }
    public virtual TreeGuide get_SafeTreeGuide();
    [NullableContextAttribute("1")]
public virtual string GetPart(TreeGuidePart part);
}
public enum Spectre.Console.Rendering.BoxBorderPart : Enum {
    public int value__;
    public static BoxBorderPart TopLeft;
    public static BoxBorderPart Top;
    public static BoxBorderPart TopRight;
    public static BoxBorderPart Left;
    public static BoxBorderPart Right;
    public static BoxBorderPart BottomLeft;
    public static BoxBorderPart Bottom;
    public static BoxBorderPart BottomRight;
}
[ExtensionAttribute]
public static class Spectre.Console.Rendering.BoxExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static BoxBorder GetSafeBorder(BoxBorder border, bool safe);
}
public class Spectre.Console.Rendering.DoubleBoxBorder : BoxBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(BoxBorderPart part);
}
public class Spectre.Console.Rendering.DoubleEdgeTableBorder : TableBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.DoubleLineTreeGuide : TreeGuide {
    public TreeGuide SafeTreeGuide { get; }
    public virtual TreeGuide get_SafeTreeGuide();
    [NullableContextAttribute("1")]
public virtual string GetPart(TreeGuidePart part);
}
public class Spectre.Console.Rendering.DoubleTableBorder : TableBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.HeavyBoxBorder : BoxBorder {
    public BoxBorder SafeBorder { get; }
    public virtual BoxBorder get_SafeBorder();
    [NullableContextAttribute("1")]
public virtual string GetPart(BoxBorderPart part);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.HeavyEdgeTableBorder : TableBorder {
    public TableBorder SafeBorder { get; }
    public virtual TableBorder get_SafeBorder();
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.HeavyHeadTableBorder : TableBorder {
    public TableBorder SafeBorder { get; }
    public virtual TableBorder get_SafeBorder();
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.HeavyTableBorder : TableBorder {
    public TableBorder SafeBorder { get; }
    public virtual TableBorder get_SafeBorder();
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
public class Spectre.Console.Rendering.HorizontalTableBorder : TableBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.Rendering.IAnsiConsoleEncoder {
    public abstract virtual string Encode(IAnsiConsole console, IEnumerable`1<IRenderable> renderable);
}
public interface Spectre.Console.Rendering.IHasDirtyState {
    public bool IsDirty { get; }
    public abstract virtual bool get_IsDirty();
}
[NullableContextAttribute("1")]
public interface Spectre.Console.Rendering.IRenderable {
    public abstract virtual Measurement Measure(RenderOptions options, int maxWidth);
    public abstract virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
[NullableContextAttribute("1")]
public interface Spectre.Console.Rendering.IRenderHook {
    public abstract virtual IEnumerable`1<IRenderable> Process(RenderOptions options, IEnumerable`1<IRenderable> renderables);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Spectre.Console.Rendering.JustInTimeRenderable : Renderable {
    private bool _dirty;
    [NullableAttribute("2")]
private IRenderable _rendered;
    protected sealed virtual Measurement Measure(RenderOptions context, int maxWidth);
    protected sealed virtual IEnumerable`1<Segment> Render(RenderOptions context, int width);
    protected abstract virtual IRenderable Build();
    protected virtual bool HasDirtyChildren();
    protected void MarkAsDirty();
    protected void MarkAsDirty(Action action);
    private IRenderable GetInner();
}
public class Spectre.Console.Rendering.LineTreeGuide : TreeGuide {
    [NullableContextAttribute("1")]
public virtual string GetPart(TreeGuidePart part);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.Rendering.LiveRenderable : Renderable {
    private object _lock;
    private IAnsiConsole _console;
    [NullableAttribute("2")]
private IRenderable _renderable;
    private Nullable`1<SegmentShape> _shape;
    [CompilerGeneratedAttribute]
private bool <DidOverflow>k__BackingField;
    [CompilerGeneratedAttribute]
private VerticalOverflow <Overflow>k__BackingField;
    [CompilerGeneratedAttribute]
private VerticalOverflowCropping <OverflowCropping>k__BackingField;
    [NullableAttribute("2")]
public IRenderable Target { get; }
    public bool DidOverflow { get; private set; }
    [MemberNotNullWhenAttribute("True", "Target")]
public bool HasRenderable { get; }
    public VerticalOverflow Overflow { get; public set; }
    public VerticalOverflowCropping OverflowCropping { get; public set; }
    public LiveRenderable(IAnsiConsole console);
    public LiveRenderable(IAnsiConsole console, IRenderable renderable);
    [NullableContextAttribute("2")]
public IRenderable get_Target();
    [CompilerGeneratedAttribute]
public bool get_DidOverflow();
    [CompilerGeneratedAttribute]
private void set_DidOverflow(bool value);
    [MemberNotNullWhenAttribute("True", "Target")]
public bool get_HasRenderable();
    [CompilerGeneratedAttribute]
public VerticalOverflow get_Overflow();
    [CompilerGeneratedAttribute]
public void set_Overflow(VerticalOverflow value);
    [CompilerGeneratedAttribute]
public VerticalOverflowCropping get_OverflowCropping();
    [CompilerGeneratedAttribute]
public void set_OverflowCropping(VerticalOverflowCropping value);
    [NullableContextAttribute("2")]
public void SetRenderable(IRenderable renderable);
    public IRenderable PositionCursor();
    public IRenderable RestoreCursor();
    [IteratorStateMachineAttribute("Spectre.Console.Rendering.LiveRenderable/<Render>d__25")]
protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.MarkdownTableBorder : TableBorder {
    public bool SupportsRowSeparator { get; }
    public virtual bool get_SupportsRowSeparator();
    public virtual string GetPart(TableBorderPart part);
    public virtual string GetColumnRow(TablePart part, IReadOnlyList`1<int> widths, IReadOnlyList`1<IColumn> columns);
}
public class Spectre.Console.Rendering.Measurement : ValueType {
    [CompilerGeneratedAttribute]
private int <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Max>k__BackingField;
    public int Min { get; }
    public int Max { get; }
    public Measurement(int min, int max);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Min();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Max();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual bool Equals(Measurement other);
    public static bool op_Equality(Measurement left, Measurement right);
    public static bool op_Inequality(Measurement left, Measurement right);
}
public class Spectre.Console.Rendering.MinimalDoubleHeadTableBorder : TableBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.MinimalHeavyHeadTableBorder : TableBorder {
    public TableBorder SafeBorder { get; }
    public virtual TableBorder get_SafeBorder();
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
public class Spectre.Console.Rendering.MinimalTableBorder : TableBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
public class Spectre.Console.Rendering.NoBoxBorder : BoxBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(BoxBorderPart part);
}
public class Spectre.Console.Rendering.NoTableBorder : TableBorder {
    public bool Visible { get; }
    public bool SupportsRowSeparator { get; }
    public virtual bool get_Visible();
    public virtual bool get_SupportsRowSeparator();
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Spectre.Console.Rendering.Renderable : object {
    [DebuggerStepThroughAttribute]
private sealed virtual override Measurement Spectre.Console.Rendering.IRenderable.Measure(RenderOptions options, int maxWidth);
    [DebuggerStepThroughAttribute]
private sealed virtual override IEnumerable`1<Segment> Spectre.Console.Rendering.IRenderable.Render(RenderOptions options, int maxWidth);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    protected abstract virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.RenderHookScope : object {
    private IAnsiConsole _console;
    private IRenderHook _hook;
    public RenderHookScope(IAnsiConsole console, IRenderHook hook);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.RenderOptions : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCapabilities <Capabilities>k__BackingField;
    [CompilerGeneratedAttribute]
private Size <ConsoleSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Justify> <Justification>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SingleLine>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public IReadOnlyCapabilities Capabilities { get; public set; }
    public Size ConsoleSize { get; public set; }
    public ColorSystem ColorSystem { get; }
    public bool Ansi { get; }
    public bool Unicode { get; }
    public Nullable`1<Justify> Justification { get; public set; }
    public Nullable`1<int> Height { get; public set; }
    internal bool SingleLine { get; internal set; }
    public RenderOptions(IReadOnlyCapabilities Capabilities, Size ConsoleSize);
    [CompilerGeneratedAttribute]
protected RenderOptions(RenderOptions original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public IReadOnlyCapabilities get_Capabilities();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Capabilities(IReadOnlyCapabilities value);
    [CompilerGeneratedAttribute]
public Size get_ConsoleSize();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConsoleSize(Size value);
    public ColorSystem get_ColorSystem();
    public bool get_Ansi();
    public bool get_Unicode();
    [CompilerGeneratedAttribute]
public Nullable`1<Justify> get_Justification();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Justification(Nullable`1<Justify> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Height();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Height(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal bool get_SingleLine();
    [CompilerGeneratedAttribute]
internal Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SingleLine(bool value);
    public static RenderOptions Create(IAnsiConsole console, IReadOnlyCapabilities capabilities);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RenderOptions left, RenderOptions right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RenderOptions left, RenderOptions right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(RenderOptions other);
    [CompilerGeneratedAttribute]
public virtual RenderOptions <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(IReadOnlyCapabilities& Capabilities, Size& ConsoleSize);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.RenderPipeline : object {
    private List`1<IRenderHook> _hooks;
    private object _lock;
    public void Attach(IRenderHook hook);
    public void Detach(IRenderHook hook);
    public IEnumerable`1<IRenderable> Process(RenderOptions options, IEnumerable`1<IRenderable> renderables);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.RoundedBoxBorder : BoxBorder {
    public BoxBorder SafeBorder { get; }
    public virtual BoxBorder get_SafeBorder();
    [NullableContextAttribute("1")]
public virtual string GetPart(BoxBorderPart part);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.RoundedTableBorder : TableBorder {
    public TableBorder SafeBorder { get; }
    public virtual TableBorder get_SafeBorder();
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{Text,nq}")]
public class Spectre.Console.Rendering.Segment : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLineBreak>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsWhiteSpace>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsControlCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <Style>k__BackingField;
    [CompilerGeneratedAttribute]
private static Segment <LineBreak>k__BackingField;
    [CompilerGeneratedAttribute]
private static Segment <Empty>k__BackingField;
    public string Text { get; }
    public bool IsLineBreak { get; }
    public bool IsWhiteSpace { get; }
    public bool IsControlCode { get; }
    public Style Style { get; }
    public static Segment LineBreak { get; }
    public static Segment Empty { get; }
    public Segment(string text);
    public Segment(string text, Style style);
    private Segment(string text, Style style, bool lineBreak, bool control);
    private static Segment();
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public bool get_IsLineBreak();
    [CompilerGeneratedAttribute]
public bool get_IsWhiteSpace();
    [CompilerGeneratedAttribute]
public bool get_IsControlCode();
    [CompilerGeneratedAttribute]
public Style get_Style();
    [CompilerGeneratedAttribute]
public static Segment get_LineBreak();
    [CompilerGeneratedAttribute]
public static Segment get_Empty();
    public static Segment Padding(int size);
    public static Segment Control(string control);
    public int CellCount();
    public static int CellCount(IEnumerable`1<Segment> segments);
    public Segment StripLineEndings();
    public ValueTuple`2<Segment, Segment> Split(int offset);
    public Segment Clone();
    public static List`1<SegmentLine> SplitLines(IEnumerable`1<Segment> segments);
    public static List`1<SegmentLine> SplitLines(IEnumerable`1<Segment> segments, int maxWidth, Nullable`1<int> height);
    public static List`1<Segment> SplitOverflow(Segment segment, Nullable`1<Overflow> overflow, int maxWidth);
    public static List`1<Segment> Truncate(IEnumerable`1<Segment> segments, int maxWidth);
    [NullableContextAttribute("2")]
public static Segment Truncate(Segment segment, int maxWidth);
    internal static IEnumerable`1<Segment> Merge(IEnumerable`1<Segment> segments);
    internal static List`1<Segment> TruncateWithEllipsis(IEnumerable`1<Segment> segments, int maxWidth);
    internal static List`1<Segment> TrimEnd(IEnumerable`1<Segment> segments);
    internal static List`1<List`1<SegmentLine>> MakeSameHeight(int cellHeight, List`1<List`1<SegmentLine>> cells);
    internal static List`1<SegmentLine> MakeWidth(int expectedWidth, List`1<SegmentLine> lines);
    internal static List`1<string> SplitSegment(string text, int maxCellLength);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Spectre.Console.Rendering.SegmentLine : List`1<Segment> {
    public int Length { get; }
    public SegmentLine(IEnumerable`1<Segment> segments);
    public int get_Length();
    public int CellCount();
    public void Prepend(Segment segment);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.SegmentLineEnumerator : object {
    private List`1<SegmentLine> _lines;
    public SegmentLineEnumerator(IEnumerable`1<SegmentLine> lines);
    public sealed virtual IEnumerator`1<Segment> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.SegmentLineIterator : object {
    private List`1<SegmentLine> _lines;
    private int _currentLine;
    private int _currentIndex;
    private bool _lineBreakEmitted;
    [CompilerGeneratedAttribute]
private Segment <Current>k__BackingField;
    public Segment Current { get; private set; }
    [NullableAttribute("2")]
private object System.Collections.IEnumerator.Current { get; }
    public SegmentLineIterator(IEnumerable`1<SegmentLine> lines);
    [CompilerGeneratedAttribute]
public sealed virtual Segment get_Current();
    [CompilerGeneratedAttribute]
private void set_Current(Segment value);
    [NullableContextAttribute("2")]
private sealed virtual override object System.Collections.IEnumerator.get_Current();
    public sealed virtual void Dispose();
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Spectre.Console.Rendering.SegmentShape : ValueType {
    [CompilerGeneratedAttribute]
private int <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Height>k__BackingField;
    public int Width { get; }
    public int Height { get; }
    public SegmentShape(int width, int height);
    [CompilerGeneratedAttribute]
public int get_Width();
    [CompilerGeneratedAttribute]
public int get_Height();
    public static SegmentShape Calculate(RenderOptions options, List`1<SegmentLine> lines);
    public SegmentShape Inflate(SegmentShape other);
    public void Apply(RenderOptions options, List`1& lines);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.Rendering.SimpleHeavyTableBorder : TableBorder {
    public TableBorder SafeBorder { get; }
    public virtual TableBorder get_SafeBorder();
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
public class Spectre.Console.Rendering.SimpleTableBorder : TableBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
public class Spectre.Console.Rendering.SquareBoxBorder : BoxBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(BoxBorderPart part);
}
public class Spectre.Console.Rendering.SquareTableBorder : TableBorder {
    [NullableContextAttribute("1")]
public virtual string GetPart(TableBorderPart part);
}
[ExtensionAttribute]
public static class Spectre.Console.Rendering.TableBorderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static TableBorder GetSafeBorder(TableBorder border, bool safe);
}
public enum Spectre.Console.Rendering.TableBorderPart : Enum {
    public int value__;
    public static TableBorderPart HeaderTopLeft;
    public static TableBorderPart HeaderTop;
    public static TableBorderPart HeaderTopSeparator;
    public static TableBorderPart HeaderTopRight;
    public static TableBorderPart HeaderLeft;
    public static TableBorderPart HeaderSeparator;
    public static TableBorderPart HeaderRight;
    public static TableBorderPart HeaderBottomLeft;
    public static TableBorderPart HeaderBottom;
    public static TableBorderPart HeaderBottomSeparator;
    public static TableBorderPart HeaderBottomRight;
    public static TableBorderPart FooterTopLeft;
    public static TableBorderPart FooterTop;
    public static TableBorderPart FooterTopSeparator;
    public static TableBorderPart FooterTopRight;
    public static TableBorderPart CellLeft;
    public static TableBorderPart CellSeparator;
    public static TableBorderPart CellRight;
    public static TableBorderPart FooterBottomLeft;
    public static TableBorderPart FooterBottom;
    public static TableBorderPart FooterBottomSeparator;
    public static TableBorderPart FooterBottomRight;
    public static TableBorderPart RowLeft;
    public static TableBorderPart RowCenter;
    public static TableBorderPart RowSeparator;
    public static TableBorderPart RowRight;
}
public enum Spectre.Console.Rendering.TablePart : Enum {
    public int value__;
    public static TablePart Top;
    public static TablePart HeaderSeparator;
    public static TablePart RowSeparator;
    public static TablePart FooterSeparator;
    public static TablePart Bottom;
}
[ExtensionAttribute]
public static class Spectre.Console.Rendering.TreeGuideExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static TreeGuide GetSafeTreeGuide(TreeGuide guide, bool safe);
}
public enum Spectre.Console.Rendering.TreeGuidePart : Enum {
    public int value__;
    public static TreeGuidePart Space;
    public static TreeGuidePart Continue;
    public static TreeGuidePart Fork;
    public static TreeGuidePart End;
}
[ExtensionAttribute]
internal static class Spectre.Console.RenderOptionsExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static BoxBorder GetSafeBorder(RenderOptions options, T border);
}
internal static class Spectre.Console.ResourceReader : object {
    [NullableContextAttribute("1")]
public static string ReadManifestData(string resourceName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Rows : Renderable {
    private List`1<IRenderable> _children;
    [CompilerGeneratedAttribute]
private bool <Expand>k__BackingField;
    public bool Expand { get; public set; }
    public Rows(IRenderable[] items);
    public Rows(IEnumerable`1<IRenderable> children);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Expand();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expand(bool value);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Rule : Renderable {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Style <Style>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Justify> <Justification>k__BackingField;
    [CompilerGeneratedAttribute]
private BoxBorder <Border>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TitlePadding>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TitleSpacing>k__BackingField;
    [NullableAttribute("2")]
public string Title { get; public set; }
    [NullableAttribute("2")]
public Style Style { get; public set; }
    public Nullable`1<Justify> Justification { get; public set; }
    public BoxBorder Border { get; public set; }
    internal int TitlePadding { get; internal set; }
    internal int TitleSpacing { get; internal set; }
    public Rule(string title);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Title();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Title(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Style get_Style();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Style(Style value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Justify> get_Justification();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Justification(Nullable`1<Justify> value);
    [CompilerGeneratedAttribute]
public sealed virtual BoxBorder get_Border();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Border(BoxBorder value);
    [CompilerGeneratedAttribute]
internal int get_TitlePadding();
    [CompilerGeneratedAttribute]
internal void set_TitlePadding(int value);
    [CompilerGeneratedAttribute]
internal int get_TitleSpacing();
    [CompilerGeneratedAttribute]
internal void set_TitleSpacing(int value);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    private IEnumerable`1<Segment> GetLineWithoutTitle(RenderOptions options, int maxWidth);
    private IEnumerable`1<Segment> GetTitleSegments(RenderOptions options, string title, int width);
    private ValueTuple`2<Segment, Segment> GetLineSegments(RenderOptions options, int width, IEnumerable`1<Segment> title);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.RuleExtensions : object {
    [ExtensionAttribute]
public static Rule RuleTitle(Rule rule, string title);
    [ExtensionAttribute]
public static Rule RuleStyle(Rule rule, Style style);
}
public enum Spectre.Console.SelectionMode : Enum {
    public int value__;
    public static SelectionMode Leaf;
    public static SelectionMode Independent;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.SelectionPrompt`1 : object {
    [NullableAttribute("1")]
private ListPromptTree`1<T> _tree;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WrapAround>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <HighlightStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <DisabledStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <SearchHighlightStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SearchPlaceholderText>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<T, string> <Converter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MoreChoicesText>k__BackingField;
    [CompilerGeneratedAttribute]
private SelectionMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SearchEnabled>k__BackingField;
    public string Title { get; public set; }
    public int PageSize { get; public set; }
    public bool WrapAround { get; public set; }
    public Style HighlightStyle { get; public set; }
    public Style DisabledStyle { get; public set; }
    public Style SearchHighlightStyle { get; public set; }
    public string SearchPlaceholderText { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<T, string> Converter { get; public set; }
    public string MoreChoicesText { get; public set; }
    public SelectionMode Mode { get; public set; }
    public bool SearchEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public int get_PageSize();
    [CompilerGeneratedAttribute]
public void set_PageSize(int value);
    [CompilerGeneratedAttribute]
public bool get_WrapAround();
    [CompilerGeneratedAttribute]
public void set_WrapAround(bool value);
    [CompilerGeneratedAttribute]
public Style get_HighlightStyle();
    [CompilerGeneratedAttribute]
public void set_HighlightStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_DisabledStyle();
    [CompilerGeneratedAttribute]
public void set_DisabledStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_SearchHighlightStyle();
    [CompilerGeneratedAttribute]
public void set_SearchHighlightStyle(Style value);
    [CompilerGeneratedAttribute]
public string get_SearchPlaceholderText();
    [CompilerGeneratedAttribute]
public void set_SearchPlaceholderText(string value);
    [CompilerGeneratedAttribute]
public Func`2<T, string> get_Converter();
    [CompilerGeneratedAttribute]
public void set_Converter(Func`2<T, string> value);
    [CompilerGeneratedAttribute]
public string get_MoreChoicesText();
    [CompilerGeneratedAttribute]
public void set_MoreChoicesText(string value);
    [CompilerGeneratedAttribute]
public SelectionMode get_Mode();
    [CompilerGeneratedAttribute]
public void set_Mode(SelectionMode value);
    [CompilerGeneratedAttribute]
public bool get_SearchEnabled();
    [CompilerGeneratedAttribute]
public void set_SearchEnabled(bool value);
    [NullableContextAttribute("1")]
public ISelectionItem`1<T> AddChoice(T item);
    [NullableContextAttribute("1")]
public sealed virtual T Show(IAnsiConsole console);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Spectre.Console.SelectionPrompt`1/<ShowAsync>d__48")]
public sealed virtual Task`1<T> ShowAsync(IAnsiConsole console, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
private sealed virtual override ListPromptInputResult Spectre.Console.IListPromptStrategy<T>.HandleInput(ConsoleKeyInfo key, ListPromptState`1<T> state);
    [NullableContextAttribute("1")]
private sealed virtual override int Spectre.Console.IListPromptStrategy<T>.CalculatePageSize(IAnsiConsole console, int totalItemCount, int requestedPageSize);
    [NullableContextAttribute("1")]
private sealed virtual override IRenderable Spectre.Console.IListPromptStrategy<T>.Render(IAnsiConsole console, bool scrollable, int cursorIndex, IEnumerable`1<ValueTuple`2<int, ListPromptItem`1<T>>> items, bool skipUnselectableItems, string searchText);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.SelectionPromptExtensions : object {
    [ExtensionAttribute]
public static SelectionPrompt`1<T> Mode(SelectionPrompt`1<T> obj, SelectionMode mode);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> AddChoices(SelectionPrompt`1<T> obj, T[] choices);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> AddChoices(SelectionPrompt`1<T> obj, IEnumerable`1<T> choices);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> AddChoiceGroup(SelectionPrompt`1<T> obj, T group, IEnumerable`1<T> choices);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> AddChoiceGroup(SelectionPrompt`1<T> obj, T group, T[] choices);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> Title(SelectionPrompt`1<T> obj, string title);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> PageSize(SelectionPrompt`1<T> obj, int pageSize);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> WrapAround(SelectionPrompt`1<T> obj, bool shouldWrap);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> EnableSearch(SelectionPrompt`1<T> obj);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> DisableSearch(SelectionPrompt`1<T> obj);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> SearchPlaceholderText(SelectionPrompt`1<T> obj, string text);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> HighlightStyle(SelectionPrompt`1<T> obj, Style highlightStyle);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> MoreChoicesText(SelectionPrompt`1<T> obj, string text);
    [ExtensionAttribute]
public static SelectionPrompt`1<T> UseConverter(SelectionPrompt`1<T> obj, Func`2<T, string> displaySelector);
}
[DebuggerDisplayAttribute("{Width,nq}x{Height,nq}")]
public class Spectre.Console.Size : ValueType {
    [CompilerGeneratedAttribute]
private int <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Height>k__BackingField;
    public int Width { get; }
    public int Height { get; }
    public Size(int width, int height);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Width();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Height();
}
public abstract class Spectre.Console.Spinner : object {
    public TimeSpan Interval { get; }
    public bool IsUnicode { get; }
    [NullableAttribute("1")]
public IReadOnlyList`1<string> Frames { get; }
    public abstract virtual TimeSpan get_Interval();
    public abstract virtual bool get_IsUnicode();
    [NullableContextAttribute("1")]
public abstract virtual IReadOnlyList`1<string> get_Frames();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.SpinnerColumn : ProgressColumn {
    [NullableAttribute("1")]
private static string ACCUMULATED;
    [NullableAttribute("1")]
private static string INDEX;
    [NullableAttribute("1")]
private object _lock;
    [NullableAttribute("1")]
private Spinner _spinner;
    private Nullable`1<int> _maxWidth;
    private string _completed;
    private string _pending;
    [CompilerGeneratedAttribute]
private Style <CompletedStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <PendingStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <Style>k__BackingField;
    protected internal bool NoWrap { get; }
    [NullableAttribute("1")]
public Spinner Spinner { get; public set; }
    public string CompletedText { get; public set; }
    public string PendingText { get; public set; }
    public Style CompletedStyle { get; public set; }
    public Style PendingStyle { get; public set; }
    public Style Style { get; public set; }
    [NullableContextAttribute("1")]
public SpinnerColumn(Spinner spinner);
    protected internal virtual bool get_NoWrap();
    [NullableContextAttribute("1")]
public Spinner get_Spinner();
    [NullableContextAttribute("1")]
public void set_Spinner(Spinner value);
    public string get_CompletedText();
    public void set_CompletedText(string value);
    public string get_PendingText();
    public void set_PendingText(string value);
    [CompilerGeneratedAttribute]
public Style get_CompletedStyle();
    [CompilerGeneratedAttribute]
public void set_CompletedStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_PendingStyle();
    [CompilerGeneratedAttribute]
public void set_PendingStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(Style value);
    [NullableContextAttribute("1")]
public virtual IRenderable Render(RenderOptions options, ProgressTask task, TimeSpan deltaTime);
    [NullableContextAttribute("1")]
public virtual Nullable`1<int> GetColumnWidth(RenderOptions options);
    [NullableContextAttribute("1")]
private int GetMaxWidth(RenderOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.SpinnerColumnExtensions : object {
    [ExtensionAttribute]
public static SpinnerColumn Style(SpinnerColumn column, Style style);
    [ExtensionAttribute]
public static SpinnerColumn CompletedText(SpinnerColumn column, string text);
    [ExtensionAttribute]
public static SpinnerColumn CompletedStyle(SpinnerColumn column, Style style);
}
[ExtensionAttribute]
internal static class Spectre.Console.StackExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void PushRange(Stack`1<T> stack, IEnumerable`1<T> source);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.Status : object {
    [NullableAttribute("1")]
private IAnsiConsole _console;
    [CompilerGeneratedAttribute]
private Spinner <Spinner>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <SpinnerStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoRefresh>k__BackingField;
    public Spinner Spinner { get; public set; }
    public Style SpinnerStyle { get; public set; }
    public bool AutoRefresh { get; public set; }
    [NullableContextAttribute("1")]
public Status(IAnsiConsole console);
    [CompilerGeneratedAttribute]
public Spinner get_Spinner();
    [CompilerGeneratedAttribute]
public void set_Spinner(Spinner value);
    [CompilerGeneratedAttribute]
public Style get_SpinnerStyle();
    [CompilerGeneratedAttribute]
public void set_SpinnerStyle(Style value);
    [CompilerGeneratedAttribute]
public bool get_AutoRefresh();
    [CompilerGeneratedAttribute]
public void set_AutoRefresh(bool value);
    [NullableContextAttribute("1")]
public void Start(string status, Action`1<StatusContext> action);
    [NullableContextAttribute("1")]
public T Start(string status, Func`2<StatusContext, T> func);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Spectre.Console.Status/<StartAsync>d__16")]
public Task StartAsync(string status, Func`2<StatusContext, Task> action);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Spectre.Console.Status/<StartAsync>d__17`1")]
public Task`1<T> StartAsync(string status, Func`2<StatusContext, Task`1<T>> func);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.StatusContext : object {
    private ProgressContext _context;
    private ProgressTask _task;
    private SpinnerColumn _spinnerColumn;
    public string Status { get; public set; }
    public Spinner Spinner { get; public set; }
    [NullableAttribute("2")]
public Style SpinnerStyle { get; public set; }
    internal StatusContext(ProgressContext context, ProgressTask task, SpinnerColumn spinnerColumn);
    public string get_Status();
    public void set_Status(string value);
    public Spinner get_Spinner();
    public void set_Spinner(Spinner value);
    [NullableContextAttribute("2")]
public Style get_SpinnerStyle();
    [NullableContextAttribute("2")]
public void set_SpinnerStyle(Style value);
    public void Refresh();
    private void SetStatus(string status);
    private void SetSpinner(Spinner spinner);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.StatusContextExtensions : object {
    [ExtensionAttribute]
public static StatusContext Status(StatusContext context, string status);
    [ExtensionAttribute]
public static StatusContext Spinner(StatusContext context, Spinner spinner);
    [ExtensionAttribute]
public static StatusContext SpinnerStyle(StatusContext context, Style style);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.StatusExtensions : object {
    [ExtensionAttribute]
public static Status AutoRefresh(Status status, bool enabled);
    [ExtensionAttribute]
public static Status Spinner(Status status, Spinner spinner);
    [ExtensionAttribute]
public static Status SpinnerStyle(Status status, Style style);
}
internal class Spectre.Console.StringBuffer : object {
    [NullableAttribute("1")]
private StringReader _reader;
    private int _length;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    public int Position { get; private set; }
    public bool Eof { get; }
    [NullableContextAttribute("1")]
public StringBuffer(string text);
    [CompilerGeneratedAttribute]
public int get_Position();
    [CompilerGeneratedAttribute]
private void set_Position(int value);
    public bool get_Eof();
    public sealed virtual void Dispose();
    public char Expect(char character);
    public char Peek();
    public char Read();
}
[ExtensionAttribute]
internal static class Spectre.Console.StringBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static StringBuilder AppendWithStyle(StringBuilder builder, Style style, Nullable`1<int> value);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static StringBuilder AppendWithStyle(StringBuilder builder, Style style, string value);
    [ExtensionAttribute]
public static void AppendSpan(StringBuilder builder, ReadOnlySpan`1<char> span);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.StringExtensions : object {
    private static bool _alreadyNormalized;
    private static StringExtensions();
    [ExtensionAttribute]
public static string EscapeMarkup(string text);
    [ExtensionAttribute]
public static string RemoveMarkup(string text);
    [ExtensionAttribute]
public static int GetCellWidth(string text);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static string CapitalizeFirstLetter(string text, CultureInfo culture);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static string RemoveNewLines(string text);
    [ExtensionAttribute]
internal static string NormalizeNewLines(string text, bool native);
    [ExtensionAttribute]
internal static String[] SplitLines(string text);
    [ExtensionAttribute]
internal static String[] SplitWords(string word, StringSplitOptions options);
    [ExtensionAttribute]
internal static string Repeat(string text, int count);
    [ExtensionAttribute]
internal static string ReplaceExact(string text, string oldValue, string newValue);
    [ExtensionAttribute]
internal static bool ContainsExact(string text, string value);
    [ExtensionAttribute]
public static string Mask(string value, Nullable`1<char> mask);
    [ExtensionAttribute]
internal static string Highlight(string value, string searchText, Style highlightStyle);
    [CompilerGeneratedAttribute]
internal static string <SplitWords>g__Read|8_0(StringBuffer reader, Func`2<char, bool> criteria);
}
[ExtensionAttribute]
internal static class Spectre.Console.StringUriExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool TryGetUri(string path, Uri& result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Style : object {
    [CompilerGeneratedAttribute]
private Color <Foreground>k__BackingField;
    [CompilerGeneratedAttribute]
private Color <Background>k__BackingField;
    [CompilerGeneratedAttribute]
private Decoration <Decoration>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Link>k__BackingField;
    [CompilerGeneratedAttribute]
private static Style <Plain>k__BackingField;
    public Color Foreground { get; }
    public Color Background { get; }
    public Decoration Decoration { get; }
    [NullableAttribute("2")]
public string Link { get; }
    public static Style Plain { get; }
    [NullableContextAttribute("2")]
public Style(Nullable`1<Color> foreground, Nullable`1<Color> background, Nullable`1<Decoration> decoration, string link);
    private static Style();
    [CompilerGeneratedAttribute]
public Color get_Foreground();
    [CompilerGeneratedAttribute]
public Color get_Background();
    [CompilerGeneratedAttribute]
public Decoration get_Decoration();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Link();
    [CompilerGeneratedAttribute]
public static Style get_Plain();
    [ObsoleteAttribute("Use ctor(..) instead")]
public static Style WithForeground(Color color);
    [ObsoleteAttribute("Use ctor(..) instead")]
public static Style WithBackground(Color color);
    [ObsoleteAttribute("Use ctor(..) instead")]
public static Style WithDecoration(Decoration decoration);
    [ObsoleteAttribute("Use ctor(..) instead")]
public static Style WithLink(string link);
    public Style Combine(Style other);
    public static Style op_Implicit(string style);
    public static Style op_Implicit(Color color);
    public static Style Parse(string text);
    public static bool TryParse(string text, Style& result);
    public virtual int GetHashCode();
    public string ToMarkup();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Style other);
    [CompilerGeneratedAttribute]
private Nullable`1<int> <GetHashCode>g__GetLinkHashCode|25_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.StyleExtensions : object {
    [ExtensionAttribute]
public static Style Foreground(Style style, Color color);
    [ExtensionAttribute]
public static Style Background(Style style, Color color);
    [ExtensionAttribute]
public static Style Decoration(Style style, Decoration decoration);
    [ExtensionAttribute]
public static Style Link(Style style, string link);
    [ExtensionAttribute]
internal static Style Combine(Style style, IEnumerable`1<Style> source);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.StyleParser : object {
    public static Style Parse(string text);
    public static bool TryParse(string text, Style& style);
    [NullableContextAttribute("2")]
private static Style Parse(string text, String& error);
    private static Nullable`1<Color> ParseHexColor(string hex, String& error);
    private static Nullable`1<Color> ParseRgbColor(string rgb, String& error);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Table : Renderable {
    private List`1<TableColumn> _columns;
    [CompilerGeneratedAttribute]
private TableRowCollection <Rows>k__BackingField;
    [CompilerGeneratedAttribute]
private TableBorder <Border>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Style <BorderStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseSafeBorder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowRowSeparators>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowFooters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Expand>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TableTitle <Title>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TableTitle <Caption>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Justify> <Alignment>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGrid>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PadRightCell>k__BackingField;
    public IReadOnlyList`1<TableColumn> Columns { get; }
    public TableRowCollection Rows { get; }
    public TableBorder Border { get; public set; }
    [NullableAttribute("2")]
public Style BorderStyle { get; public set; }
    public bool UseSafeBorder { get; public set; }
    public bool ShowHeaders { get; public set; }
    public bool ShowRowSeparators { get; public set; }
    public bool ShowFooters { get; public set; }
    public bool Expand { get; public set; }
    public Nullable`1<int> Width { get; public set; }
    [NullableAttribute("2")]
public TableTitle Title { get; public set; }
    [NullableAttribute("2")]
public TableTitle Caption { get; public set; }
    [ObsoleteAttribute("Use the Align widget instead. This property will be removed in a later release.")]
public Nullable`1<Justify> Alignment { get; public set; }
    internal bool IsGrid { get; internal set; }
    internal bool PadRightCell { get; internal set; }
    public IReadOnlyList`1<TableColumn> get_Columns();
    [CompilerGeneratedAttribute]
public TableRowCollection get_Rows();
    [CompilerGeneratedAttribute]
public sealed virtual TableBorder get_Border();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Border(TableBorder value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual Style get_BorderStyle();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_BorderStyle(Style value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseSafeBorder();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseSafeBorder(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowHeaders();
    [CompilerGeneratedAttribute]
public void set_ShowHeaders(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowRowSeparators();
    [CompilerGeneratedAttribute]
public void set_ShowRowSeparators(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowFooters();
    [CompilerGeneratedAttribute]
public void set_ShowFooters(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Expand();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expand(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(Nullable`1<int> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public TableTitle get_Title();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Title(TableTitle value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public TableTitle get_Caption();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Caption(TableTitle value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Justify> get_Alignment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Alignment(Nullable`1<Justify> value);
    [CompilerGeneratedAttribute]
internal bool get_IsGrid();
    [CompilerGeneratedAttribute]
internal void set_IsGrid(bool value);
    [CompilerGeneratedAttribute]
internal bool get_PadRightCell();
    [CompilerGeneratedAttribute]
internal void set_PadRightCell(bool value);
    public Table AddColumn(TableColumn column);
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    private List`1<TableRow> GetRenderableRows();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Spectre.Console.TableAccessor : object {
    private Table _table;
    [CompilerGeneratedAttribute]
private RenderOptions <Options>k__BackingField;
    public RenderOptions Options { get; }
    public IReadOnlyList`1<TableColumn> Columns { get; }
    public IReadOnlyList`1<TableRow> Rows { get; }
    public bool Expand { get; }
    protected TableAccessor(Table table, RenderOptions options);
    [CompilerGeneratedAttribute]
public RenderOptions get_Options();
    public IReadOnlyList`1<TableColumn> get_Columns();
    public virtual IReadOnlyList`1<TableRow> get_Rows();
    public bool get_Expand();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Spectre.Console.TableBorder : object {
    [CompilerGeneratedAttribute]
private bool <Visible>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TableBorder <SafeBorder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsRowSeparator>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <None>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <Ascii>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <Ascii2>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <AsciiDoubleHead>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <Square>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <Rounded>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <Minimal>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <MinimalHeavyHead>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <MinimalDoubleHead>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <Simple>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <SimpleHeavy>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <Horizontal>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <Heavy>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <HeavyEdge>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <HeavyHead>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <Double>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <DoubleEdge>k__BackingField;
    [CompilerGeneratedAttribute]
private static TableBorder <Markdown>k__BackingField;
    public bool Visible { get; }
    [NullableAttribute("2")]
public TableBorder SafeBorder { get; }
    public bool SupportsRowSeparator { get; }
    public static TableBorder None { get; }
    public static TableBorder Ascii { get; }
    public static TableBorder Ascii2 { get; }
    public static TableBorder AsciiDoubleHead { get; }
    public static TableBorder Square { get; }
    public static TableBorder Rounded { get; }
    public static TableBorder Minimal { get; }
    public static TableBorder MinimalHeavyHead { get; }
    public static TableBorder MinimalDoubleHead { get; }
    public static TableBorder Simple { get; }
    public static TableBorder SimpleHeavy { get; }
    public static TableBorder Horizontal { get; }
    public static TableBorder Heavy { get; }
    public static TableBorder HeavyEdge { get; }
    public static TableBorder HeavyHead { get; }
    public static TableBorder Double { get; }
    public static TableBorder DoubleEdge { get; }
    public static TableBorder Markdown { get; }
    private static TableBorder();
    [CompilerGeneratedAttribute]
public virtual bool get_Visible();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TableBorder get_SafeBorder();
    [CompilerGeneratedAttribute]
public virtual bool get_SupportsRowSeparator();
    public abstract virtual string GetPart(TableBorderPart part);
    public virtual string GetColumnRow(TablePart part, IReadOnlyList`1<int> widths, IReadOnlyList`1<IColumn> columns);
    protected ValueTuple`4<string, string, string, string> GetTableParts(TablePart part);
    [CompilerGeneratedAttribute]
public static TableBorder get_None();
    [CompilerGeneratedAttribute]
public static TableBorder get_Ascii();
    [CompilerGeneratedAttribute]
public static TableBorder get_Ascii2();
    [CompilerGeneratedAttribute]
public static TableBorder get_AsciiDoubleHead();
    [CompilerGeneratedAttribute]
public static TableBorder get_Square();
    [CompilerGeneratedAttribute]
public static TableBorder get_Rounded();
    [CompilerGeneratedAttribute]
public static TableBorder get_Minimal();
    [CompilerGeneratedAttribute]
public static TableBorder get_MinimalHeavyHead();
    [CompilerGeneratedAttribute]
public static TableBorder get_MinimalDoubleHead();
    [CompilerGeneratedAttribute]
public static TableBorder get_Simple();
    [CompilerGeneratedAttribute]
public static TableBorder get_SimpleHeavy();
    [CompilerGeneratedAttribute]
public static TableBorder get_Horizontal();
    [CompilerGeneratedAttribute]
public static TableBorder get_Heavy();
    [CompilerGeneratedAttribute]
public static TableBorder get_HeavyEdge();
    [CompilerGeneratedAttribute]
public static TableBorder get_HeavyHead();
    [CompilerGeneratedAttribute]
public static TableBorder get_Double();
    [CompilerGeneratedAttribute]
public static TableBorder get_DoubleEdge();
    [CompilerGeneratedAttribute]
public static TableBorder get_Markdown();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.TableColumn : object {
    [CompilerGeneratedAttribute]
private IRenderable <Header>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IRenderable <Footer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Padding> <Padding>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NoWrap>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Justify> <Alignment>k__BackingField;
    public IRenderable Header { get; public set; }
    [NullableAttribute("2")]
public IRenderable Footer { get; public set; }
    public Nullable`1<int> Width { get; public set; }
    public Nullable`1<Padding> Padding { get; public set; }
    public bool NoWrap { get; public set; }
    public Nullable`1<Justify> Alignment { get; public set; }
    public TableColumn(string header);
    public TableColumn(IRenderable header);
    [CompilerGeneratedAttribute]
public IRenderable get_Header();
    [CompilerGeneratedAttribute]
public void set_Header(IRenderable value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IRenderable get_Footer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Footer(IRenderable value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Width(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Padding> get_Padding();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Padding(Nullable`1<Padding> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_NoWrap();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NoWrap(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Justify> get_Alignment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Alignment(Nullable`1<Justify> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.TableColumnExtensions : object {
    [ExtensionAttribute]
public static TableColumn Header(TableColumn column, string header);
    [ExtensionAttribute]
public static TableColumn Header(TableColumn column, IRenderable header);
    [ExtensionAttribute]
public static TableColumn Footer(TableColumn column, string footer);
    [ExtensionAttribute]
public static TableColumn Footer(TableColumn column, IRenderable footer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.TableExtensions : object {
    [ExtensionAttribute]
public static Table AddColumns(Table table, TableColumn[] columns);
    [ExtensionAttribute]
public static Table AddRow(Table table, IEnumerable`1<IRenderable> columns);
    [ExtensionAttribute]
public static Table AddRow(Table table, IRenderable[] columns);
    [ExtensionAttribute]
public static Table AddEmptyRow(Table table);
    [ExtensionAttribute]
public static Table AddColumn(Table table, string column, Action`1<TableColumn> configure);
    [ExtensionAttribute]
public static Table AddColumns(Table table, String[] columns);
    [ExtensionAttribute]
public static Table AddRow(Table table, String[] columns);
    [ExtensionAttribute]
public static Table InsertRow(Table table, int index, IEnumerable`1<IRenderable> columns);
    [ExtensionAttribute]
public static Table UpdateCell(Table table, int rowIndex, int columnIndex, IRenderable cellData);
    [ExtensionAttribute]
public static Table UpdateCell(Table table, int rowIndex, int columnIndex, string cellData);
    [ExtensionAttribute]
public static Table InsertRow(Table table, int index, IRenderable[] columns);
    [ExtensionAttribute]
public static Table InsertRow(Table table, int index, String[] columns);
    [ExtensionAttribute]
public static Table RemoveRow(Table table, int index);
    [ExtensionAttribute]
public static Table Width(Table table, Nullable`1<int> width);
    [ExtensionAttribute]
public static Table ShowHeaders(Table table);
    [ExtensionAttribute]
public static Table HideHeaders(Table table);
    [ExtensionAttribute]
public static Table ShowRowSeparators(Table table);
    [ExtensionAttribute]
public static Table HideRowSeparators(Table table);
    [ExtensionAttribute]
public static Table ShowFooters(Table table);
    [ExtensionAttribute]
public static Table HideFooters(Table table);
    [ExtensionAttribute]
public static Table Title(Table table, string text, Style style);
    [ExtensionAttribute]
public static Table Title(Table table, TableTitle title);
    [ExtensionAttribute]
public static Table Caption(Table table, string text, Style style);
    [ExtensionAttribute]
public static Table Caption(Table table, TableTitle caption);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.TableMeasurer : TableAccessor {
    private static int EdgeCount;
    private Nullable`1<int> _explicitWidth;
    private TableBorder _border;
    private bool _padRightCell;
    public TableMeasurer(Table table, RenderOptions options);
    public int CalculateTotalCellWidth(int maxWidth);
    public int GetNonColumnWidth();
    public List`1<int> CalculateColumnWidths(int maxWidth);
    public Measurement MeasureColumn(TableColumn column, int maxWidth);
    private static List`1<int> CollapseWidths(List`1<int> widths, List`1<bool> wrappable, int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.TableRenderer : object {
    private static Style _defaultHeadingStyle;
    private static Style _defaultCaptionStyle;
    private static TableRenderer();
    public static List`1<Segment> Render(TableRendererContext context, List`1<int> columnWidths);
    private static IEnumerable`1<Segment> RenderAnnotation(TableRendererContext context, TableTitle header, Style defaultStyle);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.TableRendererContext : TableAccessor {
    private Table _table;
    private List`1<TableRow> _rows;
    [CompilerGeneratedAttribute]
private TableBorder <Border>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <BorderStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowBorder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowRowSeparators>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasRows>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasFooters>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxWidth>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TableWidth>k__BackingField;
    public IReadOnlyList`1<TableRow> Rows { get; }
    public TableBorder Border { get; }
    public Style BorderStyle { get; }
    public bool ShowBorder { get; }
    public bool ShowRowSeparators { get; }
    public bool HasRows { get; }
    public bool HasFooters { get; }
    public int MaxWidth { get; }
    public int TableWidth { get; }
    public bool HideBorder { get; }
    public bool ShowHeaders { get; }
    public bool ShowFooters { get; }
    public bool IsGrid { get; }
    public bool PadRightCell { get; }
    [NullableAttribute("2")]
public TableTitle Title { get; }
    [NullableAttribute("2")]
public TableTitle Caption { get; }
    public Nullable`1<Justify> Alignment { get; }
    public TableRendererContext(Table table, RenderOptions options, IEnumerable`1<TableRow> rows, int tableWidth, int maxWidth);
    public virtual IReadOnlyList`1<TableRow> get_Rows();
    [CompilerGeneratedAttribute]
public TableBorder get_Border();
    [CompilerGeneratedAttribute]
public Style get_BorderStyle();
    [CompilerGeneratedAttribute]
public bool get_ShowBorder();
    [CompilerGeneratedAttribute]
public bool get_ShowRowSeparators();
    [CompilerGeneratedAttribute]
public bool get_HasRows();
    [CompilerGeneratedAttribute]
public bool get_HasFooters();
    [CompilerGeneratedAttribute]
public int get_MaxWidth();
    [CompilerGeneratedAttribute]
public int get_TableWidth();
    public bool get_HideBorder();
    public bool get_ShowHeaders();
    public bool get_ShowFooters();
    public bool get_IsGrid();
    public bool get_PadRightCell();
    [NullableContextAttribute("2")]
public TableTitle get_Title();
    [NullableContextAttribute("2")]
public TableTitle get_Caption();
    public Nullable`1<Justify> get_Alignment();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Spectre.Console.TableRow : object {
    private List`1<IRenderable> _items;
    [CompilerGeneratedAttribute]
private bool <IsHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFooter>k__BackingField;
    public int Count { get; }
    internal bool IsHeader { get; }
    internal bool IsFooter { get; }
    public IRenderable Item { get; }
    public TableRow(IEnumerable`1<IRenderable> items);
    private TableRow(IEnumerable`1<IRenderable> items, bool isHeader, bool isFooter);
    public int get_Count();
    [CompilerGeneratedAttribute]
internal bool get_IsHeader();
    [CompilerGeneratedAttribute]
internal bool get_IsFooter();
    public IRenderable get_Item(int index);
    internal static TableRow Header(IEnumerable`1<IRenderable> items);
    internal static TableRow Footer(IEnumerable`1<IRenderable> items);
    internal void Add(IRenderable item);
    public sealed virtual IEnumerator`1<IRenderable> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.TableRowCollection : object {
    private Table _table;
    private IList`1<TableRow> _list;
    private object _lock;
    private TableRow System.Collections.Generic.IReadOnlyList<Spectre.Console.TableRow>.Item { get; }
    public int Count { get; }
    internal TableRowCollection(Table table);
    private sealed virtual override TableRow System.Collections.Generic.IReadOnlyList<Spectre.Console.TableRow>.get_Item(int index);
    public sealed virtual int get_Count();
    public int Add(IEnumerable`1<IRenderable> columns);
    public int Insert(int index, IEnumerable`1<IRenderable> columns);
    public void Update(int row, int column, IRenderable cellData);
    public void RemoveAt(int index);
    public void Clear();
    public sealed virtual IEnumerator`1<TableRow> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private TableRow CreateRow(IEnumerable`1<IRenderable> columns);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Spectre.Console.TableRowEnumerator : object {
    private TableRow[] _items;
    private int _index;
    public TableRow Current { get; }
    [NullableAttribute("2")]
private object System.Collections.IEnumerator.Current { get; }
    public TableRowEnumerator(TableRow[] items);
    public sealed virtual TableRow get_Current();
    [NullableContextAttribute("2")]
private sealed virtual override object System.Collections.IEnumerator.get_Current();
    public sealed virtual void Dispose();
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.TableTitle : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Style <Style>k__BackingField;
    public string Text { get; }
    [NullableAttribute("2")]
public Style Style { get; public set; }
    public TableTitle(string text, Style style);
    [CompilerGeneratedAttribute]
public string get_Text();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Style get_Style();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Style(Style value);
    public TableTitle SetStyle(Style style);
    public TableTitle SetStyle(string style);
}
public class Spectre.Console.TaskDescriptionColumn : ProgressColumn {
    [CompilerGeneratedAttribute]
private Justify <Alignment>k__BackingField;
    protected internal bool NoWrap { get; }
    public Justify Alignment { get; public set; }
    protected internal virtual bool get_NoWrap();
    [CompilerGeneratedAttribute]
public Justify get_Alignment();
    [CompilerGeneratedAttribute]
public void set_Alignment(Justify value);
    [NullableContextAttribute("1")]
public virtual IRenderable Render(RenderOptions options, ProgressTask task, TimeSpan deltaTime);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{_text,nq}")]
public class Spectre.Console.Text : Renderable {
    private Paragraph _paragraph;
    [CompilerGeneratedAttribute]
private static Text <Empty>k__BackingField;
    [CompilerGeneratedAttribute]
private static Text <NewLine>k__BackingField;
    public static Text Empty { get; }
    public static Text NewLine { get; }
    public Nullable`1<Justify> Justification { get; public set; }
    public Nullable`1<Overflow> Overflow { get; public set; }
    public int Length { get; }
    public int Lines { get; }
    public Text(string text, Style style);
    private static Text();
    [CompilerGeneratedAttribute]
public static Text get_Empty();
    [CompilerGeneratedAttribute]
public static Text get_NewLine();
    public sealed virtual Nullable`1<Justify> get_Justification();
    public sealed virtual void set_Justification(Nullable`1<Justify> value);
    public sealed virtual Nullable`1<Overflow> get_Overflow();
    public sealed virtual void set_Overflow(Nullable`1<Overflow> value);
    public int get_Length();
    public int get_Lines();
    protected virtual Measurement Measure(RenderOptions options, int maxWidth);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.TextPath : object {
    [NullableAttribute("1")]
private static string Ellipsis;
    [NullableAttribute("1")]
private static string UnicodeEllipsis;
    [NullableAttribute("1")]
private String[] _parts;
    private bool _rooted;
    private bool _windows;
    [CompilerGeneratedAttribute]
private Style <RootStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <SeparatorStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <StemStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <LeafStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Justify> <Justification>k__BackingField;
    public Style RootStyle { get; public set; }
    public Style SeparatorStyle { get; public set; }
    public Style StemStyle { get; public set; }
    public Style LeafStyle { get; public set; }
    public Nullable`1<Justify> Justification { get; public set; }
    [NullableContextAttribute("1")]
public TextPath(string path);
    [CompilerGeneratedAttribute]
public Style get_RootStyle();
    [CompilerGeneratedAttribute]
public void set_RootStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_SeparatorStyle();
    [CompilerGeneratedAttribute]
public void set_SeparatorStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_StemStyle();
    [CompilerGeneratedAttribute]
public void set_StemStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_LeafStyle();
    [CompilerGeneratedAttribute]
public void set_LeafStyle(Style value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Justify> get_Justification();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Justification(Nullable`1<Justify> value);
    [NullableContextAttribute("1")]
public sealed virtual Measurement Measure(RenderOptions options, int maxWidth);
    [NullableContextAttribute("1")]
public sealed virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    [NullableContextAttribute("1")]
private String[] Fit(RenderOptions options, int maxWidth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.TextPathExtensions : object {
    [ExtensionAttribute]
public static TextPath SeparatorStyle(TextPath obj, Style style);
    [ExtensionAttribute]
public static TextPath SeparatorColor(TextPath obj, Color color);
    [ExtensionAttribute]
public static TextPath RootStyle(TextPath obj, Style style);
    [ExtensionAttribute]
public static TextPath RootColor(TextPath obj, Color color);
    [ExtensionAttribute]
public static TextPath StemStyle(TextPath obj, Style style);
    [ExtensionAttribute]
public static TextPath StemColor(TextPath obj, Color color);
    [ExtensionAttribute]
public static TextPath LeafStyle(TextPath obj, Style style);
    [ExtensionAttribute]
public static TextPath LeafColor(TextPath obj, Color color);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.TextPrompt`1 : object {
    [NullableAttribute("1")]
private string _prompt;
    private StringComparer _comparer;
    [CompilerGeneratedAttribute]
private Style <PromptStyle>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<T> <Choices>k__BackingField;
    [CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <InvalidChoiceMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<char> <Mask>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <ValidationErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowChoices>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowDefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowEmpty>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<T, string> <Converter>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<T, ValidationResult> <Validator>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <DefaultValueStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Style <ChoicesStyle>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private DefaultPromptValue`1<T> <DefaultValue>k__BackingField;
    public Style PromptStyle { get; public set; }
    [NullableAttribute("1")]
public List`1<T> Choices { get; }
    public CultureInfo Culture { get; public set; }
    [NullableAttribute("1")]
public string InvalidChoiceMessage { get; public set; }
    public bool IsSecret { get; public set; }
    public Nullable`1<char> Mask { get; public set; }
    [NullableAttribute("1")]
public string ValidationErrorMessage { get; public set; }
    public bool ShowChoices { get; public set; }
    public bool ShowDefaultValue { get; public set; }
    public bool AllowEmpty { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<T, string> Converter { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<T, ValidationResult> Validator { get; public set; }
    public Style DefaultValueStyle { get; public set; }
    public Style ChoicesStyle { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal DefaultPromptValue`1<T> DefaultValue { get; internal set; }
    [NullableContextAttribute("1")]
public TextPrompt`1(string prompt, StringComparer comparer);
    [CompilerGeneratedAttribute]
public Style get_PromptStyle();
    [CompilerGeneratedAttribute]
public void set_PromptStyle(Style value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public List`1<T> get_Choices();
    [CompilerGeneratedAttribute]
public sealed virtual CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Culture(CultureInfo value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_InvalidChoiceMessage();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_InvalidChoiceMessage(string value);
    [CompilerGeneratedAttribute]
public bool get_IsSecret();
    [CompilerGeneratedAttribute]
public void set_IsSecret(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<char> get_Mask();
    [CompilerGeneratedAttribute]
public void set_Mask(Nullable`1<char> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_ValidationErrorMessage();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ValidationErrorMessage(string value);
    [CompilerGeneratedAttribute]
public bool get_ShowChoices();
    [CompilerGeneratedAttribute]
public void set_ShowChoices(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowDefaultValue();
    [CompilerGeneratedAttribute]
public void set_ShowDefaultValue(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowEmpty();
    [CompilerGeneratedAttribute]
public void set_AllowEmpty(bool value);
    [CompilerGeneratedAttribute]
public Func`2<T, string> get_Converter();
    [CompilerGeneratedAttribute]
public void set_Converter(Func`2<T, string> value);
    [CompilerGeneratedAttribute]
public Func`2<T, ValidationResult> get_Validator();
    [CompilerGeneratedAttribute]
public void set_Validator(Func`2<T, ValidationResult> value);
    [CompilerGeneratedAttribute]
public Style get_DefaultValueStyle();
    [CompilerGeneratedAttribute]
public void set_DefaultValueStyle(Style value);
    [CompilerGeneratedAttribute]
public Style get_ChoicesStyle();
    [CompilerGeneratedAttribute]
public void set_ChoicesStyle(Style value);
    [CompilerGeneratedAttribute]
internal DefaultPromptValue`1<T> get_DefaultValue();
    [CompilerGeneratedAttribute]
internal void set_DefaultValue(DefaultPromptValue`1<T> value);
    [NullableContextAttribute("1")]
public sealed virtual T Show(IAnsiConsole console);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Spectre.Console.TextPrompt`1/<ShowAsync>d__63")]
public sealed virtual Task`1<T> ShowAsync(IAnsiConsole console, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
private void WritePrompt(IAnsiConsole console);
    [NullableContextAttribute("1")]
private bool ValidateResult(T value, String& message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.TextPromptExtensions : object {
    [ExtensionAttribute]
public static TextPrompt`1<T> AllowEmpty(TextPrompt`1<T> obj);
    [ExtensionAttribute]
public static TextPrompt`1<T> PromptStyle(TextPrompt`1<T> obj, Style style);
    [ExtensionAttribute]
public static TextPrompt`1<T> ShowChoices(TextPrompt`1<T> obj, bool show);
    [ExtensionAttribute]
public static TextPrompt`1<T> ShowChoices(TextPrompt`1<T> obj);
    [ExtensionAttribute]
public static TextPrompt`1<T> HideChoices(TextPrompt`1<T> obj);
    [ExtensionAttribute]
public static TextPrompt`1<T> ShowDefaultValue(TextPrompt`1<T> obj, bool show);
    [ExtensionAttribute]
public static TextPrompt`1<T> ShowDefaultValue(TextPrompt`1<T> obj);
    [ExtensionAttribute]
public static TextPrompt`1<T> HideDefaultValue(TextPrompt`1<T> obj);
    [ExtensionAttribute]
public static TextPrompt`1<T> ValidationErrorMessage(TextPrompt`1<T> obj, string message);
    [ExtensionAttribute]
public static TextPrompt`1<T> InvalidChoiceMessage(TextPrompt`1<T> obj, string message);
    [ExtensionAttribute]
public static TextPrompt`1<T> DefaultValue(TextPrompt`1<T> obj, T value);
    [ExtensionAttribute]
public static TextPrompt`1<T> Validate(TextPrompt`1<T> obj, Func`2<T, bool> validator, string message);
    [ExtensionAttribute]
public static TextPrompt`1<T> Validate(TextPrompt`1<T> obj, Func`2<T, ValidationResult> validator);
    [ExtensionAttribute]
public static TextPrompt`1<T> AddChoice(TextPrompt`1<T> obj, T choice);
    [ExtensionAttribute]
public static TextPrompt`1<T> AddChoices(TextPrompt`1<T> obj, IEnumerable`1<T> choices);
    [ExtensionAttribute]
public static TextPrompt`1<T> Secret(TextPrompt`1<T> obj);
    [ExtensionAttribute]
public static TextPrompt`1<T> Secret(TextPrompt`1<T> obj, Nullable`1<char> mask);
    [ExtensionAttribute]
public static TextPrompt`1<T> WithConverter(TextPrompt`1<T> obj, Func`2<T, string> displaySelector);
    [ExtensionAttribute]
public static TextPrompt`1<T> DefaultValueStyle(TextPrompt`1<T> obj, Style style);
    [ExtensionAttribute]
public static TextPrompt`1<T> ChoicesStyle(TextPrompt`1<T> obj, Style style);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Spectre.Console.TextWriterExtensions : object {
    [ExtensionAttribute]
public static bool IsStandardOut(TextWriter writer);
    [ExtensionAttribute]
public static bool IsStandardError(TextWriter writer);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.TransferSpeedColumn : ProgressColumn {
    [CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    public CultureInfo Culture { get; public set; }
    [CompilerGeneratedAttribute]
public CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
public void set_Culture(CultureInfo value);
    [NullableContextAttribute("1")]
public virtual IRenderable Render(RenderOptions options, ProgressTask task, TimeSpan deltaTime);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.Tree : Renderable {
    private TreeNode _root;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Style <Style>k__BackingField;
    [CompilerGeneratedAttribute]
private TreeGuide <Guide>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Expanded>k__BackingField;
    [NullableAttribute("2")]
public Style Style { get; public set; }
    public TreeGuide Guide { get; public set; }
    public List`1<TreeNode> Nodes { get; }
    public bool Expanded { get; public set; }
    public Tree(IRenderable renderable);
    public Tree(string label);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Style get_Style();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Style(Style value);
    [CompilerGeneratedAttribute]
public TreeGuide get_Guide();
    [CompilerGeneratedAttribute]
public void set_Guide(TreeGuide value);
    public sealed virtual List`1<TreeNode> get_Nodes();
    [CompilerGeneratedAttribute]
public bool get_Expanded();
    [CompilerGeneratedAttribute]
public void set_Expanded(bool value);
    protected virtual IEnumerable`1<Segment> Render(RenderOptions options, int maxWidth);
    private Segment GetGuide(RenderOptions options, TreeGuidePart part);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.TreeExtensions : object {
    [ExtensionAttribute]
public static Tree Style(Tree tree, Style style);
    [ExtensionAttribute]
public static Tree Guide(Tree tree, TreeGuide guide);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Spectre.Console.TreeGuide : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TreeGuide <SafeTreeGuide>k__BackingField;
    [CompilerGeneratedAttribute]
private static TreeGuide <Ascii>k__BackingField;
    [CompilerGeneratedAttribute]
private static TreeGuide <Line>k__BackingField;
    [CompilerGeneratedAttribute]
private static TreeGuide <DoubleLine>k__BackingField;
    [CompilerGeneratedAttribute]
private static TreeGuide <BoldLine>k__BackingField;
    [NullableAttribute("2")]
public TreeGuide SafeTreeGuide { get; }
    public static TreeGuide Ascii { get; }
    public static TreeGuide Line { get; }
    public static TreeGuide DoubleLine { get; }
    public static TreeGuide BoldLine { get; }
    private static TreeGuide();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TreeGuide get_SafeTreeGuide();
    public abstract virtual string GetPart(TreeGuidePart part);
    [CompilerGeneratedAttribute]
public static TreeGuide get_Ascii();
    [CompilerGeneratedAttribute]
public static TreeGuide get_Line();
    [CompilerGeneratedAttribute]
public static TreeGuide get_DoubleLine();
    [CompilerGeneratedAttribute]
public static TreeGuide get_BoldLine();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Spectre.Console.TreeNode : object {
    [CompilerGeneratedAttribute]
private IRenderable <Renderable>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TreeNode> <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Expanded>k__BackingField;
    internal IRenderable Renderable { get; }
    public List`1<TreeNode> Nodes { get; }
    public bool Expanded { get; public set; }
    public TreeNode(IRenderable renderable);
    [CompilerGeneratedAttribute]
internal IRenderable get_Renderable();
    [CompilerGeneratedAttribute]
public sealed virtual List`1<TreeNode> get_Nodes();
    [CompilerGeneratedAttribute]
public bool get_Expanded();
    [CompilerGeneratedAttribute]
public void set_Expanded(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.TreeNodeExtensions : object {
    [ExtensionAttribute]
public static TreeNode Expand(TreeNode node);
    [ExtensionAttribute]
public static TreeNode Collapse(TreeNode node);
    [ExtensionAttribute]
public static TreeNode Expand(TreeNode node, bool expand);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.TypeConverterHelper : object {
    public static string ConvertToString(T input);
    [NullableContextAttribute("2")]
public static bool TryConvertFromString(string input, T& result);
    [NullableContextAttribute("2")]
public static bool TryConvertFromStringWithCulture(string input, CultureInfo info, T& result);
    public static TypeConverter GetTypeConverter();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Spectre.Console.TypeNameHelper : object {
    public static Dictionary`2<Type, string> BuiltInTypeNames;
    public static Dictionary`2<string, string> FSharpTypeNames;
    private static TypeNameHelper();
    public static string GetTypeDisplayName(Type type, bool fullName, bool includeGenericParameterNames);
    private static void ProcessType(StringBuilder builder, Type type, DisplayNameOptions options);
    private static void ProcessArrayType(StringBuilder builder, Type type, DisplayNameOptions options);
    private static void ProcessGenericType(StringBuilder builder, Type type, Type[] genericArguments, int length, DisplayNameOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Spectre.Console.ValidationResult : object {
    [CompilerGeneratedAttribute]
private bool <Successful>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public bool Successful { get; }
    public string Message { get; }
    private ValidationResult(bool successful, string message);
    [CompilerGeneratedAttribute]
public bool get_Successful();
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("1")]
public static ValidationResult Success();
    [NullableContextAttribute("1")]
public static ValidationResult Error(string message);
}
public enum Spectre.Console.VerticalAlignment : Enum {
    public int value__;
    public static VerticalAlignment Top;
    public static VerticalAlignment Middle;
    public static VerticalAlignment Bottom;
}
public enum Spectre.Console.VerticalOverflow : Enum {
    public int value__;
    public static VerticalOverflow Crop;
    public static VerticalOverflow Ellipsis;
    public static VerticalOverflow Visible;
}
public enum Spectre.Console.VerticalOverflowCropping : Enum {
    public int value__;
    public static VerticalOverflowCropping Top;
    public static VerticalOverflowCropping Bottom;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Spectre.Console.VisibilityExtensions : object {
    [ExtensionAttribute]
public static T Invisible(T obj);
    [ExtensionAttribute]
public static T Visible(T obj);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Wcwidth.IntegerExtensions : object {
    [ExtensionAttribute]
public static bool Exist(UInt32[0...,0...] table, UInt32 value);
    [ExtensionAttribute]
public static int Find(UInt32[0...,0...] table, UInt32 value);
}
internal enum Wcwidth.Unicode : Enum {
    public int value__;
    [DescriptionAttribute("4.1.0")]
public static Unicode Version_4_1_0;
    [DescriptionAttribute("5.0.0")]
public static Unicode Version_5_0_0;
    [DescriptionAttribute("5.1.0")]
public static Unicode Version_5_1_0;
    [DescriptionAttribute("5.2.0")]
public static Unicode Version_5_2_0;
    [DescriptionAttribute("6.0.0")]
public static Unicode Version_6_0_0;
    [DescriptionAttribute("6.1.0")]
public static Unicode Version_6_1_0;
    [DescriptionAttribute("6.2.0")]
public static Unicode Version_6_2_0;
    [DescriptionAttribute("6.3.0")]
public static Unicode Version_6_3_0;
    [DescriptionAttribute("7.0.0")]
public static Unicode Version_7_0_0;
    [DescriptionAttribute("8.0.0")]
public static Unicode Version_8_0_0;
    [DescriptionAttribute("9.0.0")]
public static Unicode Version_9_0_0;
    [DescriptionAttribute("10.0.0")]
public static Unicode Version_10_0_0;
    [DescriptionAttribute("11.0.0")]
public static Unicode Version_11_0_0;
    [DescriptionAttribute("12.0.0")]
public static Unicode Version_12_0_0;
    [DescriptionAttribute("12.1.0")]
public static Unicode Version_12_1_0;
    [DescriptionAttribute("13.0.0")]
public static Unicode Version_13_0_0;
    [DescriptionAttribute("14.0.0")]
public static Unicode Version_14_0_0;
    [DescriptionAttribute("15.0.0")]
public static Unicode Version_15_0_0;
    [DescriptionAttribute("15.1.0")]
public static Unicode Version_15_1_0;
}
internal static class Wcwidth.UnicodeCalculator : object {
    private static Unicode Latest;
    [NullableAttribute("1")]
private static HashSet`1<UInt32> _zeroWidthCf;
    private static UnicodeCalculator();
    public static int GetWidth(int value, Nullable`1<Unicode> version);
    public static int GetWidth(Rune value, Nullable`1<Unicode> version);
    public static int GetWidth(char value, Nullable`1<Unicode> version);
}
internal static class Wcwidth.WideTable : object {
    [NullableAttribute("1")]
private static Dictionary`2<Unicode, UInt32[0...,0...]> _lookup;
    [NullableAttribute("1")]
private static object _lock;
    private static WideTable();
    private static UInt32[0...,0...] GenerateTable(Unicode version);
    private static UInt32[0...,0...] Unicode_4_1_0();
    private static UInt32[0...,0...] Unicode_5_0_0();
    private static UInt32[0...,0...] Unicode_5_1_0();
    private static UInt32[0...,0...] Unicode_5_2_0();
    private static UInt32[0...,0...] Unicode_6_0_0();
    private static UInt32[0...,0...] Unicode_6_1_0();
    private static UInt32[0...,0...] Unicode_6_2_0();
    private static UInt32[0...,0...] Unicode_6_3_0();
    private static UInt32[0...,0...] Unicode_7_0_0();
    private static UInt32[0...,0...] Unicode_8_0_0();
    private static UInt32[0...,0...] Unicode_9_0_0();
    private static UInt32[0...,0...] Unicode_10_0_0();
    private static UInt32[0...,0...] Unicode_11_0_0();
    private static UInt32[0...,0...] Unicode_12_0_0();
    private static UInt32[0...,0...] Unicode_12_1_0();
    private static UInt32[0...,0...] Unicode_13_0_0();
    private static UInt32[0...,0...] Unicode_14_0_0();
    private static UInt32[0...,0...] Unicode_15_0_0();
    private static UInt32[0...,0...] Unicode_15_1_0();
    [NullableContextAttribute("1")]
public static UInt32[0...,0...] GetTable(Unicode version);
}
internal static class Wcwidth.ZeroTable : object {
    [NullableAttribute("1")]
private static Dictionary`2<Unicode, UInt32[0...,0...]> _lookup;
    [NullableAttribute("1")]
private static object _lock;
    private static ZeroTable();
    private static UInt32[0...,0...] GenerateTable(Unicode version);
    private static UInt32[0...,0...] Unicode_4_1_0();
    private static UInt32[0...,0...] Unicode_5_0_0();
    private static UInt32[0...,0...] Unicode_5_1_0();
    private static UInt32[0...,0...] Unicode_5_2_0();
    private static UInt32[0...,0...] Unicode_6_0_0();
    private static UInt32[0...,0...] Unicode_6_1_0();
    private static UInt32[0...,0...] Unicode_6_2_0();
    private static UInt32[0...,0...] Unicode_6_3_0();
    private static UInt32[0...,0...] Unicode_7_0_0();
    private static UInt32[0...,0...] Unicode_8_0_0();
    private static UInt32[0...,0...] Unicode_9_0_0();
    private static UInt32[0...,0...] Unicode_10_0_0();
    private static UInt32[0...,0...] Unicode_11_0_0();
    private static UInt32[0...,0...] Unicode_12_0_0();
    private static UInt32[0...,0...] Unicode_12_1_0();
    private static UInt32[0...,0...] Unicode_13_0_0();
    private static UInt32[0...,0...] Unicode_14_0_0();
    private static UInt32[0...,0...] Unicode_15_0_0();
    private static UInt32[0...,0...] Unicode_15_1_0();
    [NullableContextAttribute("1")]
public static UInt32[0...,0...] GetTable(Unicode version);
}
