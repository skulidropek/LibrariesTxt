public static class SQLitePCL.Batteries : object {
    public static void Init();
}
public static class SQLitePCL.Batteries_V2 : object {
    private static IGetFunctionPointer MakeDynamic(string name, int flags);
    private static void DoDynamic_cdecl(string name, int flags);
    public static void Init();
}
public static class SQLitePCL.NativeLibrary : object {
    public static int WHERE_PLAIN;
    public static int WHERE_RUNTIME_RID;
    public static int WHERE_ARCH;
    public static int WHERE_ADJACENT;
    public static int WHERE_CODEBASE;
    public static IntPtr Load(string libraryName, Assembly assy, int flags);
    private static IntPtr MyGetExport(IntPtr handle, string name);
    public static IntPtr GetExport(IntPtr handle, string name);
    public static void Free(IntPtr handle);
    public static bool TryLoad(string libraryName, Assembly assy, int flags, IntPtr& handle);
    public static bool TryGetExport(IntPtr handle, string name, IntPtr& address);
    private static string basename_to_libname(string basename, LibSuffix suffix);
    private static bool TryLoad(string name, Loader plat, Action`1<string> log, IntPtr& h);
    private static Loader WhichLoader();
    private static LibSuffix WhichLibSuffix();
    private static string get_rid_front();
    private static string get_rid_back();
    private static string get_rid();
    private static bool Search(IList`1<string> a, Loader plat, Action`1<string> log, String& name, IntPtr& h);
    private static List`1<string> MakePossibilitiesFor(string basename, Assembly assy, int flags, LibSuffix suffix);
    private static IntPtr MyLoad(string basename, Assembly assy, int flags, Action`1<string> log);
}
