public class StackifyLib.API : object {
    private static HttpClient client;
    private static API();
    public static Device[] GetDeviceList();
    public static bool SetServerEnvironmentForThisDevice(string environmentName);
    public static bool SetServerEnvironmentByID(int id, string environmentName);
    public static bool RemoveServerByID(int id, bool uninstallAgent);
    public static bool RemoveServerByName(string name, bool uninstallAgent);
    public static bool UninstallAgentByID(int id);
    public static bool UninstallAgentByName(string name);
    public static Nullable`1<bool> ConfigureAlerts(Dictionary`2<int, string> devices);
    public static Monitor[] GetDeviceMonitors(int clientDeviceId);
    public static MonitorMetric GetMetrics(int monitorID, DateTimeOffset startDateUtc, DateTimeOffset endDateUtc, short pointSizeInMinutes);
}
public class StackifyLib.Config : object {
    private static JsonLoadSettings Settings;
    private static IConfiguration _configuration;
    [CompilerGeneratedAttribute]
private static string <ApiKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <AppName>k__BackingField;
    public static List`1<string> ErrorHeaderGoodKeys;
    public static List`1<string> ErrorHeaderBadKeys;
    public static List`1<string> ErrorCookiesGoodKeys;
    public static List`1<string> ErrorCookiesBadKeys;
    public static List`1<string> ErrorSessionGoodKeys;
    [CompilerGeneratedAttribute]
private static bool <EnableCleanName>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <CaptureSessionVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <CaptureServerVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <CaptureErrorPostdata>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <CaptureErrorHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <CaptureErrorCookies>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <CaptureErrorUserName>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <CaptureErrorSessionWhitelist>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <CaptureErrorHeadersWhitelist>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <CaptureErrorHeadersBlacklist>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <CaptureErrorCookiesWhitelist>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <CaptureErrorCookiesBlacklist>k__BackingField;
    [CompilerGeneratedAttribute]
private static int <Ec2InstanceMetadataUpdateThresholdMinutes>k__BackingField;
    [CompilerGeneratedAttribute]
private static Nullable`1<bool> <IsEc2>k__BackingField;
    [CompilerGeneratedAttribute]
private static Nullable`1<bool> <ApiLog>k__BackingField;
    [CompilerGeneratedAttribute]
private static int <LoggingJsonMaxFields>k__BackingField;
    [CompilerGeneratedAttribute]
private static Nullable`1<bool> <IsStackifyJsonLoaded>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <RumScriptUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <RumKey>k__BackingField;
    public static string ApiKey { get; public set; }
    public static string Environment { get; public set; }
    public static string AppName { get; public set; }
    public static bool EnableCleanName { get; public set; }
    public static bool CaptureSessionVariables { get; public set; }
    public static bool CaptureServerVariables { get; public set; }
    public static bool CaptureErrorPostdata { get; public set; }
    public static bool CaptureErrorHeaders { get; public set; }
    public static bool CaptureErrorCookies { get; public set; }
    public static bool CaptureErrorUserName { get; public set; }
    public static string CaptureErrorSessionWhitelist { get; public set; }
    public static string CaptureErrorHeadersWhitelist { get; public set; }
    public static string CaptureErrorHeadersBlacklist { get; public set; }
    public static string CaptureErrorCookiesWhitelist { get; public set; }
    public static string CaptureErrorCookiesBlacklist { get; public set; }
    public static int Ec2InstanceMetadataUpdateThresholdMinutes { get; public set; }
    public static Nullable`1<bool> IsEc2 { get; public set; }
    public static Nullable`1<bool> ApiLog { get; public set; }
    public static int LoggingJsonMaxFields { get; public set; }
    public static Nullable`1<bool> IsStackifyJsonLoaded { get; public set; }
    public static string RumScriptUrl { get; public set; }
    public static string RumKey { get; public set; }
    private static Config();
    public static void SetConfiguration(IConfiguration configuration);
    public static void LoadSettings();
    [CompilerGeneratedAttribute]
public static string get_ApiKey();
    [CompilerGeneratedAttribute]
public static void set_ApiKey(string value);
    [CompilerGeneratedAttribute]
public static string get_Environment();
    [CompilerGeneratedAttribute]
public static void set_Environment(string value);
    [CompilerGeneratedAttribute]
public static string get_AppName();
    [CompilerGeneratedAttribute]
public static void set_AppName(string value);
    [CompilerGeneratedAttribute]
public static bool get_EnableCleanName();
    [CompilerGeneratedAttribute]
public static void set_EnableCleanName(bool value);
    [CompilerGeneratedAttribute]
public static bool get_CaptureSessionVariables();
    [CompilerGeneratedAttribute]
public static void set_CaptureSessionVariables(bool value);
    [CompilerGeneratedAttribute]
public static bool get_CaptureServerVariables();
    [CompilerGeneratedAttribute]
public static void set_CaptureServerVariables(bool value);
    [CompilerGeneratedAttribute]
public static bool get_CaptureErrorPostdata();
    [CompilerGeneratedAttribute]
public static void set_CaptureErrorPostdata(bool value);
    [CompilerGeneratedAttribute]
public static bool get_CaptureErrorHeaders();
    [CompilerGeneratedAttribute]
public static void set_CaptureErrorHeaders(bool value);
    [CompilerGeneratedAttribute]
public static bool get_CaptureErrorCookies();
    [CompilerGeneratedAttribute]
public static void set_CaptureErrorCookies(bool value);
    [CompilerGeneratedAttribute]
public static bool get_CaptureErrorUserName();
    [CompilerGeneratedAttribute]
public static void set_CaptureErrorUserName(bool value);
    [CompilerGeneratedAttribute]
public static string get_CaptureErrorSessionWhitelist();
    [CompilerGeneratedAttribute]
public static void set_CaptureErrorSessionWhitelist(string value);
    [CompilerGeneratedAttribute]
public static string get_CaptureErrorHeadersWhitelist();
    [CompilerGeneratedAttribute]
public static void set_CaptureErrorHeadersWhitelist(string value);
    [CompilerGeneratedAttribute]
public static string get_CaptureErrorHeadersBlacklist();
    [CompilerGeneratedAttribute]
public static void set_CaptureErrorHeadersBlacklist(string value);
    [CompilerGeneratedAttribute]
public static string get_CaptureErrorCookiesWhitelist();
    [CompilerGeneratedAttribute]
public static void set_CaptureErrorCookiesWhitelist(string value);
    [CompilerGeneratedAttribute]
public static string get_CaptureErrorCookiesBlacklist();
    [CompilerGeneratedAttribute]
public static void set_CaptureErrorCookiesBlacklist(string value);
    [CompilerGeneratedAttribute]
public static int get_Ec2InstanceMetadataUpdateThresholdMinutes();
    [CompilerGeneratedAttribute]
public static void set_Ec2InstanceMetadataUpdateThresholdMinutes(int value);
    [CompilerGeneratedAttribute]
public static Nullable`1<bool> get_IsEc2();
    [CompilerGeneratedAttribute]
public static void set_IsEc2(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public static Nullable`1<bool> get_ApiLog();
    [CompilerGeneratedAttribute]
public static void set_ApiLog(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public static int get_LoggingJsonMaxFields();
    [CompilerGeneratedAttribute]
public static void set_LoggingJsonMaxFields(int value);
    [CompilerGeneratedAttribute]
public static Nullable`1<bool> get_IsStackifyJsonLoaded();
    [CompilerGeneratedAttribute]
public static void set_IsStackifyJsonLoaded(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public static string get_RumScriptUrl();
    [CompilerGeneratedAttribute]
public static void set_RumScriptUrl(string value);
    [CompilerGeneratedAttribute]
public static string get_RumKey();
    [CompilerGeneratedAttribute]
public static void set_RumKey(string value);
    internal static string Get(string key, string defaultValue);
    public static void ReadStackifyJSONConfig();
    public static void SetStackifyObj(JObject obj);
    private static string TryGetValue(JToken jToken, string key);
}
[ExtensionAttribute]
public static class StackifyLib.Extensions : object {
    [ExtensionAttribute]
public static void SendToStackify(Exception ex);
    [ExtensionAttribute]
public static StackifyError NewStackifyError(Exception ex);
    [ExtensionAttribute]
public static void ConfigureStackifyLogging(IConfiguration configuration);
    [ExtensionAttribute]
public static void ConfigureStackifyLib(IConfiguration configuration);
}
public interface StackifyLib.Internal.Logs.ILogClient {
    public abstract virtual bool CanQueue();
    public abstract virtual bool CanSend();
    public abstract virtual bool CanUpload();
    public abstract virtual void Close();
    public abstract virtual bool ErrorShouldBeSent(StackifyError error);
    public abstract virtual AppIdentityInfo GetIdentity();
    public abstract virtual bool IsAuthorized();
    public abstract virtual void PauseUpload(bool isPaused);
    public abstract virtual void QueueMessage(LogMsg msg);
}
public class StackifyLib.Internal.Logs.LogClient : object {
    private static bool _ServicePointSet;
    private LogQueue _LogQueue;
    private HttpClient _HttpClient;
    private ErrorGovernor governor;
    private string _LoggerName;
    private string _ApiKey;
    private string _ApiUrl;
    private static long _lastEpochMs;
    private static int _millisecondCount;
    public string LoggerName { get; }
    public string APIKey { get; }
    public LogClient(string loggerName, string apikey, string apiurl);
    private static LogClient();
    private void EnsureHttpClient();
    public string get_LoggerName();
    public string get_APIKey();
    [ObsoleteAttribute("Use CanQueue instead")]
public sealed virtual bool CanSend();
    public sealed virtual bool CanQueue();
    public sealed virtual bool IsAuthorized();
    public sealed virtual bool CanUpload();
    public sealed virtual AppIdentityInfo GetIdentity();
    public sealed virtual void Close();
    public sealed virtual void PauseUpload(bool isPaused);
    public sealed virtual bool ErrorShouldBeSent(StackifyError error);
    public sealed virtual void QueueMessage(LogMsg msg);
    private List`1<LogMsgGroup> SplitLogsToGroups(LogMsg[] messages);
    private LogMsgGroup CreateDefaultMsgGroup();
    internal StackifyWebResponse SendLogsByGroups(LogMsg[] messages);
}
internal class StackifyLib.Internal.Logs.LogQueue : object {
    private static DateTime _Epoch;
    private ConcurrentQueue`1<LogMsg> _MessageBuffer;
    private Timer _timer;
    private TimeSpan _FlushInterval;
    private bool _StopRequested;
    private bool _UploadingNow;
    private bool _QueueTooBig;
    private bool _IsWebApp;
    private LogClient _LogClient;
    private bool _PauseUpload;
    private bool _TimerStarted;
    public LogQueue(LogClient logClient);
    private static LogQueue();
    public bool CanQueue();
    public void EnsureTimer();
    public void QueueLogMessage(LogMsg msg);
    private void OnTimer(object stateInfo);
    private int FlushLoop();
    private int FlushOnce();
    public void Stop();
    public void Pause(bool isPaused);
    private bool EnqueueForRetransmission(List`1<LogMsg> chunk);
}
public static class StackifyLib.Internal.Metrics.MetricClient : object {
    private static HttpClient _httpClient;
    private static ConcurrentQueue`1<Metric> MetricQueue;
    private static ConcurrentDictionary`2<string, GetMetricResponse> MontorIdList;
    private static ConcurrentDictionary`2<string, MetricAggregate> AggregateMetrics;
    private static ConcurrentDictionary`2<string, MetricAggregate> LastAggregates;
    private static ConcurrentDictionary`2<string, MetricSetting> MetricSettings;
    private static Timer Timer;
    private static bool _stopRequested;
    private static bool _metricsEverUsed;
    private static HttpClient HttpClient { get; }
    public static int QueueSize { get; }
    private static MetricClient();
    private static HttpClient get_HttpClient();
    public static int get_QueueSize();
    public static void HandleZeroReports(DateTime currentMinute);
    public static List`1<LatestAggregate> GetLatestMetrics();
    public static LatestAggregate GetLatestMetric(string category, string metricName);
    public static void QueueMetric(Metric metric);
    private static void Aggregate(MetricAggregate aggregate);
    private static void ReadAllQueuedMetrics();
    private static void UploadMetricsCheck(object state);
    public static void StopMetricsQueue(string reason);
    public static bool UploadMetrics(DateTime currentMinute);
    private static void PurgeOldMetrics(DateTime purgeOlderThan);
    private static void SetLatestAggregates(List`1<MetricAggregate> aggregates);
    private static bool UploadAggregates(List`1<KeyValuePair`2<string, MetricAggregate>> metrics);
    private static bool UploadMetrics(List`1<MetricAggregate> metrics);
    private static GetMetricResponse GetMonitorInfo(MetricAggregate metric);
}
public class StackifyLib.Logger : object {
    public static int _MaxLogBufferSize;
    private static LogClient _LogClient;
    [ObsoleteAttribute("Use StackifyLib.Config instead", "True")]
public static string GlobalAppName;
    [ObsoleteAttribute("Use StackifyLib.Config instead", "True")]
public static string GlobalEnvironment;
    [ObsoleteAttribute("Use StackifyLib.Config instead", "True")]
public static string GlobalApiKey;
    [ObsoleteAttribute("Use StackifyLib.Config instead", "True")]
public static string ApiKey { get; public set; }
    public static int MaxLogBufferSize { get; public set; }
    private static Logger();
    public static string get_ApiKey();
    public static void set_ApiKey(string value);
    public static int get_MaxLogBufferSize();
    public static void set_MaxLogBufferSize(int value);
    public static void Shutdown();
    public static AppIdentityInfo Identity();
    public static bool CanSend();
    public static void Queue(string level, string message, object debugData);
    public static void QueueException(Exception exceptionObject, object debugData);
    public static void QueueException(string message, Exception exceptionObject, object debugData);
    public static void QueueException(string level, string message, Exception exceptionObject, object debugData);
    internal static bool ErrorShouldBeSent(StackifyError error);
    public static void PauseUpload(bool isPaused);
    public static void QueueException(StackifyError error);
    public static void QueueLogObject(LogMsg msg);
    public static void QueueLogObject(LogMsg msg, Exception exceptionObject);
    public static List`1<TraceFrame> GetCurrentStackTrace(string declaringClassName, int maxFrames, bool simpleMethodNames);
    public static bool PrefixEnabled();
}
public class StackifyLib.Metrics : object {
    public static LatestAggregate GetLatest(string category, string metricName);
    public static List`1<LatestAggregate> GetLatestAllMetrics();
    public static void SetGauge(string category, string metricName, double value, bool autoResendLastValueIfNothingReported);
    public static void IncrementGauge(string category, string metricName, double incrementBy, MetricSetting advancedSettings);
    public static void IncrementGauge(string category, string metricName, double incrementBy, bool autoResendLastValueIfNothingReported);
    public static void Average(string category, string metricName, double value, MetricSetting advancedSettings);
    public static void Sum(string category, string metricName, double value, MetricSetting advancedSettings);
    public static void Count(string category, string metricName, int incrementBy, bool autoReportZeroIfNothingReported);
    public static void Time(string category, string metricName, DateTimeOffset startTime);
    public static void Time(string category, string metricName, TimeSpan timeTaken);
    public static void CountAndTime(string category, string metricName, DateTimeOffset startTime, bool autoReportZeroIfNothingReported);
    public static void CountAndTime(string category, string metricName, TimeSpan timeTaken, bool autoReportZeroIfNothingReported);
}
public class StackifyLib.Models.AzureConfig : object {
    private static Nullable`1<bool> _inAzure;
    private static AzureRoleType _azureRoleType;
    private static string _azureRoleName;
    private static string _azureInstanceName;
    private static string _entryPoint;
    private static DateTime AppStarted;
    private static object Locker;
    [CompilerGeneratedAttribute]
private static string <AzureAppWebConfigEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <AzureAppWebConfigApiKey>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <AzureDriveLetter>k__BackingField;
    public static string AzureAppWebConfigEnvironment { get; public set; }
    public static string AzureAppWebConfigApiKey { get; public set; }
    public static string AzureDriveLetter { get; public set; }
    public static string AzureInstanceName { get; }
    public static bool InAzure { get; }
    public static bool IsWebsite { get; }
    private static AzureConfig();
    [CompilerGeneratedAttribute]
public static string get_AzureAppWebConfigEnvironment();
    [CompilerGeneratedAttribute]
public static void set_AzureAppWebConfigEnvironment(string value);
    [CompilerGeneratedAttribute]
public static string get_AzureAppWebConfigApiKey();
    [CompilerGeneratedAttribute]
public static void set_AzureAppWebConfigApiKey(string value);
    [CompilerGeneratedAttribute]
public static string get_AzureDriveLetter();
    [CompilerGeneratedAttribute]
public static void set_AzureDriveLetter(string value);
    public static string get_AzureInstanceName();
    public static bool get_InAzure();
    public static bool get_IsWebsite();
    private static void EnsureInAzureRan();
    public static void LoadAzureSettings();
    public static string GetDeploymentSlotId();
}
public enum StackifyLib.Models.AzureRoleType : Enum {
    public short value__;
    public static AzureRoleType Unknown;
    public static AzureRoleType NotAzure;
    public static AzureRoleType Web;
    public static AzureRoleType Worker;
    public static AzureRoleType Cache;
    public static AzureRoleType WebApp;
}
public class StackifyLib.Models.Device : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Env>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <EnvId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Loc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LocId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alerts>k__BackingField;
    public int Id { get; public set; }
    public string Name { get; public set; }
    public string Alias { get; public set; }
    public string Env { get; public set; }
    public Nullable`1<int> EnvId { get; public set; }
    public string Loc { get; public set; }
    public Nullable`1<int> LocId { get; public set; }
    public string Alerts { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public string get_Env();
    [CompilerGeneratedAttribute]
public void set_Env(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_EnvId();
    [CompilerGeneratedAttribute]
public void set_EnvId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Loc();
    [CompilerGeneratedAttribute]
public void set_Loc(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LocId();
    [CompilerGeneratedAttribute]
public void set_LocId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Alerts();
    [CompilerGeneratedAttribute]
public void set_Alerts(string value);
}
public class StackifyLib.Models.EnvironmentDetail : object {
    private static EnvironmentDetail _CachedCopy;
    private bool registryAccessFailure;
    private Nullable`1<bool> _isIMDSv1;
    private static string EC2InstanceIdUrl;
    private static string IMDS_BASE_URL;
    private static string IMDS_TOKEN_PATH;
    private static string IMDS_INSTANCE_ID_PATH;
    private static string IMDSV1_BASE_URL;
    public static object ec2InstanceLock;
    private Nullable`1<DateTimeOffset> ec2InstanceIdLastUpdate;
    private string ec2InstanceId;
    [CompilerGeneratedAttribute]
private string <DeviceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebAppID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfiguredAppName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfiguredEnvironmentName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAzureWorkerRole>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureInstanceName>k__BackingField;
    [JsonPropertyAttribute]
public string DeviceName { get; public set; }
    [JsonPropertyAttribute]
public string AppLocation { get; public set; }
    [JsonPropertyAttribute]
public string AppName { get; public set; }
    [JsonPropertyAttribute]
public string WebAppID { get; public set; }
    [JsonPropertyAttribute]
public string ConfiguredAppName { get; public set; }
    [JsonPropertyAttribute]
public string ConfiguredEnvironmentName { get; public set; }
    [JsonPropertyAttribute]
public bool IsAzureWorkerRole { get; public set; }
    [JsonIgnoreAttribute]
public string AzureInstanceName { get; public set; }
    private static EnvironmentDetail();
    public static EnvironmentDetail Get();
    private void GetAzureInfo();
    public string GetDeviceName();
    public bool IsIMDSv1();
    public string GetAccessToken();
    public string GetEC2InstanceId();
    private bool IsEc2MachineName(string machineName);
    private void IsWindowService();
    [CompilerGeneratedAttribute]
public string get_DeviceName();
    [CompilerGeneratedAttribute]
public void set_DeviceName(string value);
    [CompilerGeneratedAttribute]
public string get_AppLocation();
    [CompilerGeneratedAttribute]
public void set_AppLocation(string value);
    [CompilerGeneratedAttribute]
public string get_AppName();
    [CompilerGeneratedAttribute]
public void set_AppName(string value);
    [CompilerGeneratedAttribute]
public string get_WebAppID();
    [CompilerGeneratedAttribute]
public void set_WebAppID(string value);
    [CompilerGeneratedAttribute]
public string get_ConfiguredAppName();
    [CompilerGeneratedAttribute]
public void set_ConfiguredAppName(string value);
    [CompilerGeneratedAttribute]
public string get_ConfiguredEnvironmentName();
    [CompilerGeneratedAttribute]
public void set_ConfiguredEnvironmentName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsAzureWorkerRole();
    [CompilerGeneratedAttribute]
public void set_IsAzureWorkerRole(bool value);
    [CompilerGeneratedAttribute]
public string get_AzureInstanceName();
    [CompilerGeneratedAttribute]
public void set_AzureInstanceName(string value);
    public string AppNameToUse();
    public void UpdateAppName();
    public void UpdateEnvironmentName();
}
public class StackifyLib.Models.ErrorItem : object {
    [CompilerGeneratedAttribute]
private ErrorItem <InnerError>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TraceFrame> <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorTypeCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceMethod>k__BackingField;
    [JsonPropertyAttribute]
public ErrorItem InnerError { get; public set; }
    [JsonPropertyAttribute]
public List`1<TraceFrame> StackTrace { get; public set; }
    [JsonPropertyAttribute]
public string Message { get; public set; }
    [JsonPropertyAttribute]
public string ErrorType { get; public set; }
    [JsonPropertyAttribute]
public string ErrorTypeCode { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Data { get; public set; }
    [JsonPropertyAttribute]
public string SourceMethod { get; public set; }
    public ErrorItem(Exception ex);
    [CompilerGeneratedAttribute]
public ErrorItem get_InnerError();
    [CompilerGeneratedAttribute]
public void set_InnerError(ErrorItem value);
    [CompilerGeneratedAttribute]
public List`1<TraceFrame> get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(List`1<TraceFrame> value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorType();
    [CompilerGeneratedAttribute]
public void set_ErrorType(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorTypeCode();
    [CompilerGeneratedAttribute]
public void set_ErrorTypeCode(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_SourceMethod();
    [CompilerGeneratedAttribute]
public void set_SourceMethod(string value);
    private void AddTraceFrames(StringException ex);
    private void AddTraceFrames(Exception ex);
    public static string GetMethodFullName(MethodBase method, bool simpleMethodNames);
    public virtual string ToString();
    [IteratorStateMachineAttribute("StackifyLib.Models.ErrorItem/<GetAllFrames>d__34")]
public IEnumerable`1<TraceFrame> GetAllFrames();
    public string FramesToString();
}
internal class StackifyLib.Models.GetMetricRequest : object {
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MetricName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DeviceID>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DeviceAppID>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <AppNameID>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MetricTypeID>k__BackingField;
    public string Category { get; public set; }
    public string MetricName { get; public set; }
    public Nullable`1<int> DeviceID { get; public set; }
    public Nullable`1<int> DeviceAppID { get; public set; }
    public Nullable`1<Guid> AppNameID { get; public set; }
    public int MetricTypeID { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public string get_MetricName();
    [CompilerGeneratedAttribute]
public void set_MetricName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DeviceID();
    [CompilerGeneratedAttribute]
public void set_DeviceID(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DeviceAppID();
    [CompilerGeneratedAttribute]
public void set_DeviceAppID(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_AppNameID();
    [CompilerGeneratedAttribute]
public void set_AppNameID(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public int get_MetricTypeID();
    [CompilerGeneratedAttribute]
public void set_MetricTypeID(int value);
}
internal class StackifyLib.Models.GetMetricResponse : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MonitorID>k__BackingField;
    public Nullable`1<int> MonitorID { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MonitorID();
    [CompilerGeneratedAttribute]
public void set_MonitorID(Nullable`1<int> value);
}
public class StackifyLib.Models.LatestAggregate : object {
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MetricID>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <OccurredUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private MetricType <MetricType>k__BackingField;
    public string Category { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<int> MetricID { get; public set; }
    public DateTime OccurredUtc { get; public set; }
    public double Value { get; public set; }
    public int Count { get; public set; }
    public MetricType MetricType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MetricID();
    [CompilerGeneratedAttribute]
public void set_MetricID(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public DateTime get_OccurredUtc();
    [CompilerGeneratedAttribute]
public void set_OccurredUtc(DateTime value);
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(double value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public MetricType get_MetricType();
    [CompilerGeneratedAttribute]
public void set_MetricType(MetricType value);
}
public class StackifyLib.Models.LogMessage : object {
    [CompilerGeneratedAttribute]
private object <json>k__BackingField;
    [CompilerGeneratedAttribute]
private string <message>k__BackingField;
    public object json { get; public set; }
    public string message { get; public set; }
    [CompilerGeneratedAttribute]
public object get_json();
    [CompilerGeneratedAttribute]
public void set_json(object value);
    [CompilerGeneratedAttribute]
public string get_message();
    [CompilerGeneratedAttribute]
public void set_message(string value);
    public virtual string ToString();
}
public class StackifyLib.Models.LogMsg : object {
    private static DateTime _Epoch;
    [CompilerGeneratedAttribute]
private int <UploadErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Msg>k__BackingField;
    [CompilerGeneratedAttribute]
private string <data>k__BackingField;
    [CompilerGeneratedAttribute]
private StackifyError <Ex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Th>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ThOs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransID>k__BackingField;
    [CompilerGeneratedAttribute]
private long <EpochMs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UrlRoute>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UrlFull>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SrcMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SrcLine>k__BackingField;
    [CompilerGeneratedAttribute]
private string <id>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private LogMsgGroup <AppDetails>k__BackingField;
    [JsonIgnoreAttribute]
public int UploadErrors { get; public set; }
    [JsonPropertyAttribute]
public string Msg { get; public set; }
    [JsonPropertyAttribute]
public string data { get; public set; }
    [JsonPropertyAttribute]
public StackifyError Ex { get; public set; }
    [JsonPropertyAttribute]
public string Th { get; public set; }
    [JsonPropertyAttribute]
public string ThOs { get; public set; }
    [JsonPropertyAttribute]
public string TransID { get; public set; }
    [JsonPropertyAttribute]
public long EpochMs { get; public set; }
    [JsonPropertyAttribute]
public string Level { get; public set; }
    [JsonPropertyAttribute]
public string UrlRoute { get; public set; }
    [JsonPropertyAttribute]
public string UrlFull { get; public set; }
    [JsonPropertyAttribute]
public string SrcMethod { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> SrcLine { get; public set; }
    [JsonPropertyAttribute]
public string id { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Tags { get; public set; }
    [JsonPropertyAttribute]
public int Order { get; public set; }
    [JsonIgnoreAttribute]
public LogMsgGroup AppDetails { get; public set; }
    private static LogMsg();
    [CompilerGeneratedAttribute]
public int get_UploadErrors();
    [CompilerGeneratedAttribute]
public void set_UploadErrors(int value);
    [CompilerGeneratedAttribute]
public string get_Msg();
    [CompilerGeneratedAttribute]
public void set_Msg(string value);
    [CompilerGeneratedAttribute]
public string get_data();
    [CompilerGeneratedAttribute]
public void set_data(string value);
    [CompilerGeneratedAttribute]
public StackifyError get_Ex();
    [CompilerGeneratedAttribute]
public void set_Ex(StackifyError value);
    [CompilerGeneratedAttribute]
public string get_Th();
    [CompilerGeneratedAttribute]
public void set_Th(string value);
    [CompilerGeneratedAttribute]
public string get_ThOs();
    [CompilerGeneratedAttribute]
public void set_ThOs(string value);
    [CompilerGeneratedAttribute]
public string get_TransID();
    [CompilerGeneratedAttribute]
public void set_TransID(string value);
    [CompilerGeneratedAttribute]
public long get_EpochMs();
    [CompilerGeneratedAttribute]
public void set_EpochMs(long value);
    [CompilerGeneratedAttribute]
public string get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(string value);
    [CompilerGeneratedAttribute]
public string get_UrlRoute();
    [CompilerGeneratedAttribute]
public void set_UrlRoute(string value);
    [CompilerGeneratedAttribute]
public string get_UrlFull();
    [CompilerGeneratedAttribute]
public void set_UrlFull(string value);
    [CompilerGeneratedAttribute]
public string get_SrcMethod();
    [CompilerGeneratedAttribute]
public void set_SrcMethod(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SrcLine();
    [CompilerGeneratedAttribute]
public void set_SrcLine(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_id();
    [CompilerGeneratedAttribute]
public void set_id(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(List`1<string> value);
    [CompilerGeneratedAttribute]
public int get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(int value);
    [CompilerGeneratedAttribute]
public LogMsgGroup get_AppDetails();
    [CompilerGeneratedAttribute]
public void set_AppDetails(LogMsgGroup value);
    public void SetLogMsgID(string id, int isError, string logLevel, string logMsg, string logData);
}
public class StackifyLib.Models.LogMsgGroup : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CDID>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CDAppID>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <AppNameID>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <AppEnvID>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <EnvID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Env>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppLoc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Platform>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<LogMsg> <Msgs>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> CDID { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<int> CDAppID { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<Guid> AppNameID { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<Guid> AppEnvID { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<short> EnvID { get; public set; }
    [JsonPropertyAttribute]
public string Env { get; public set; }
    [JsonPropertyAttribute]
public string ServerName { get; public set; }
    [JsonPropertyAttribute]
public string AppName { get; public set; }
    [JsonPropertyAttribute]
public string AppLoc { get; public set; }
    [JsonPropertyAttribute]
public string Logger { get; public set; }
    [JsonPropertyAttribute]
public string Platform { get; public set; }
    [JsonPropertyAttribute]
public List`1<LogMsg> Msgs { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CDID();
    [CompilerGeneratedAttribute]
public void set_CDID(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CDAppID();
    [CompilerGeneratedAttribute]
public void set_CDAppID(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_AppNameID();
    [CompilerGeneratedAttribute]
public void set_AppNameID(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_AppEnvID();
    [CompilerGeneratedAttribute]
public void set_AppEnvID(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_EnvID();
    [CompilerGeneratedAttribute]
public void set_EnvID(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public string get_Env();
    [CompilerGeneratedAttribute]
public void set_Env(string value);
    [CompilerGeneratedAttribute]
public string get_ServerName();
    [CompilerGeneratedAttribute]
public void set_ServerName(string value);
    [CompilerGeneratedAttribute]
public string get_AppName();
    [CompilerGeneratedAttribute]
public void set_AppName(string value);
    [CompilerGeneratedAttribute]
public string get_AppLoc();
    [CompilerGeneratedAttribute]
public void set_AppLoc(string value);
    [CompilerGeneratedAttribute]
public string get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(string value);
    [CompilerGeneratedAttribute]
public string get_Platform();
    [CompilerGeneratedAttribute]
public void set_Platform(string value);
    [CompilerGeneratedAttribute]
public List`1<LogMsg> get_Msgs();
    [CompilerGeneratedAttribute]
public void set_Msgs(List`1<LogMsg> value);
    public string GetUniqueKey();
}
public class StackifyLib.Models.Metric : object {
    [CompilerGeneratedAttribute]
private MetricSetting <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIncrement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private MetricType <MetricType>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Occurred>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AggregateKey>k__BackingField;
    public MetricSetting Settings { get; public set; }
    public bool IsIncrement { get; public set; }
    public string Category { get; public set; }
    public string Name { get; public set; }
    public MetricType MetricType { get; public set; }
    public double Value { get; public set; }
    public DateTime Occurred { get; internal set; }
    public string AggregateKey { get; public set; }
    public Metric(string category, string name, MetricType metricType);
    [CompilerGeneratedAttribute]
public MetricSetting get_Settings();
    [CompilerGeneratedAttribute]
public void set_Settings(MetricSetting value);
    [CompilerGeneratedAttribute]
public bool get_IsIncrement();
    [CompilerGeneratedAttribute]
public void set_IsIncrement(bool value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public MetricType get_MetricType();
    [CompilerGeneratedAttribute]
public void set_MetricType(MetricType value);
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(double value);
    [CompilerGeneratedAttribute]
public DateTime get_Occurred();
    [CompilerGeneratedAttribute]
internal void set_Occurred(DateTime value);
    [CompilerGeneratedAttribute]
public string get_AggregateKey();
    [CompilerGeneratedAttribute]
public void set_AggregateKey(string value);
    public void CalcAndSetAggregateKey();
    public string CalcNameKey();
    public DateTime GetRoundedTime();
}
internal class StackifyLib.Models.MetricAggregate : object {
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <OccurredUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MonitorID>k__BackingField;
    [CompilerGeneratedAttribute]
private MetricType <MetricType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NameKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIncrement>k__BackingField;
    public int Count { get; public set; }
    public string Category { get; private set; }
    public string Name { get; private set; }
    public double Value { get; public set; }
    public DateTime OccurredUtc { get; public set; }
    public Nullable`1<int> MonitorID { get; public set; }
    public MetricType MetricType { get; private set; }
    public string NameKey { get; public set; }
    public bool IsIncrement { get; public set; }
    public MetricAggregate(Metric metric);
    public MetricAggregate(string category, string name, MetricType metricType, bool isIncrement);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
private void set_Category(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(double value);
    [CompilerGeneratedAttribute]
public DateTime get_OccurredUtc();
    [CompilerGeneratedAttribute]
public void set_OccurredUtc(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MonitorID();
    [CompilerGeneratedAttribute]
public void set_MonitorID(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public MetricType get_MetricType();
    [CompilerGeneratedAttribute]
private void set_MetricType(MetricType value);
    [CompilerGeneratedAttribute]
public string get_NameKey();
    [CompilerGeneratedAttribute]
public void set_NameKey(string value);
    [CompilerGeneratedAttribute]
public bool get_IsIncrement();
    [CompilerGeneratedAttribute]
public void set_IsIncrement(bool value);
    public string AggregateKey();
}
public class StackifyLib.Models.MetricSetting : object {
    [CompilerGeneratedAttribute]
private bool <AutoReportZeroIfNothingReported>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoReportLastValueIfNothingReported>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowNegativeGauge>k__BackingField;
    public bool AutoReportZeroIfNothingReported { get; public set; }
    public bool AutoReportLastValueIfNothingReported { get; public set; }
    public bool AllowNegativeGauge { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AutoReportZeroIfNothingReported();
    [CompilerGeneratedAttribute]
public void set_AutoReportZeroIfNothingReported(bool value);
    [CompilerGeneratedAttribute]
public bool get_AutoReportLastValueIfNothingReported();
    [CompilerGeneratedAttribute]
public void set_AutoReportLastValueIfNothingReported(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowNegativeGauge();
    [CompilerGeneratedAttribute]
public void set_AllowNegativeGauge(bool value);
}
public enum StackifyLib.Models.MetricType : Enum {
    public short value__;
    public static MetricType MetricLast;
    public static MetricType Counter;
    public static MetricType MetricAverage;
    public static MetricType CounterTime;
}
public class StackifyLib.Models.Monitor : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <MonitorTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsHeading>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Desc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SparkLine>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <CurrentSevId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <AlertingSevId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MonitorRelationId>k__BackingField;
    public int Id { get; public set; }
    public Nullable`1<short> MonitorTypeId { get; public set; }
    public Nullable`1<bool> IsHeading { get; public set; }
    public string Desc { get; public set; }
    public Nullable`1<int> SortOrder { get; public set; }
    public Nullable`1<DateTime> LastCheck { get; public set; }
    public string Status { get; public set; }
    public string SparkLine { get; public set; }
    public Nullable`1<int> CurrentSevId { get; public set; }
    public Nullable`1<int> AlertingSevId { get; public set; }
    public Nullable`1<int> MonitorRelationId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_MonitorTypeId();
    [CompilerGeneratedAttribute]
public void set_MonitorTypeId(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsHeading();
    [CompilerGeneratedAttribute]
public void set_IsHeading(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Desc();
    [CompilerGeneratedAttribute]
public void set_Desc(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastCheck();
    [CompilerGeneratedAttribute]
public void set_LastCheck(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_SparkLine();
    [CompilerGeneratedAttribute]
public void set_SparkLine(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_CurrentSevId();
    [CompilerGeneratedAttribute]
public void set_CurrentSevId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_AlertingSevId();
    [CompilerGeneratedAttribute]
public void set_AlertingSevId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MonitorRelationId();
    [CompilerGeneratedAttribute]
public void set_MonitorRelationId(Nullable`1<int> value);
}
public class StackifyLib.Models.MonitorMetric : object {
    [CompilerGeneratedAttribute]
private List`1<Metric> <Metrics>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<float> <Avg>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MonitorDesc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Units>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MonitorTypeId>k__BackingField;
    public List`1<Metric> Metrics { get; public set; }
    public Nullable`1<float> Min { get; public set; }
    public Nullable`1<float> Max { get; public set; }
    public Nullable`1<float> Avg { get; public set; }
    public string MonitorDesc { get; public set; }
    public string Units { get; public set; }
    public Nullable`1<int> MonitorTypeId { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<Metric> get_Metrics();
    [CompilerGeneratedAttribute]
public void set_Metrics(List`1<Metric> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public Nullable`1<float> get_Avg();
    [CompilerGeneratedAttribute]
public void set_Avg(Nullable`1<float> value);
    [CompilerGeneratedAttribute]
public string get_MonitorDesc();
    [CompilerGeneratedAttribute]
public void set_MonitorDesc(string value);
    [CompilerGeneratedAttribute]
public string get_Units();
    [CompilerGeneratedAttribute]
public void set_Units(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MonitorTypeId();
    [CompilerGeneratedAttribute]
public void set_MonitorTypeId(Nullable`1<int> value);
}
public class StackifyLib.Models.SubmitMetricByIDModel : object {
    [CompilerGeneratedAttribute]
private int <MonitorID>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <OccurredUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <MonitorTypeID>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ClientDeviceID>k__BackingField;
    public int MonitorID { get; public set; }
    public double Value { get; public set; }
    public int Count { get; public set; }
    public DateTime OccurredUtc { get; public set; }
    public Nullable`1<short> MonitorTypeID { get; public set; }
    public Nullable`1<int> ClientDeviceID { get; public set; }
    [CompilerGeneratedAttribute]
public int get_MonitorID();
    [CompilerGeneratedAttribute]
public void set_MonitorID(int value);
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(double value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public DateTime get_OccurredUtc();
    [CompilerGeneratedAttribute]
public void set_OccurredUtc(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_MonitorTypeID();
    [CompilerGeneratedAttribute]
public void set_MonitorTypeID(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ClientDeviceID();
    [CompilerGeneratedAttribute]
public void set_ClientDeviceID(Nullable`1<int> value);
}
public class StackifyLib.Models.TraceFrame : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LineNum>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeFileName>k__BackingField;
    [JsonPropertyAttribute]
public Nullable`1<int> LineNum { get; public set; }
    [JsonPropertyAttribute]
public string Method { get; public set; }
    [JsonPropertyAttribute]
public string CodeFileName { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LineNum();
    [CompilerGeneratedAttribute]
public void set_LineNum(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(string value);
    [CompilerGeneratedAttribute]
public string get_CodeFileName();
    [CompilerGeneratedAttribute]
public void set_CodeFileName(string value);
}
[JsonObjectAttribute]
public class StackifyLib.Models.WebRequestDetail : object {
    [CompilerGeneratedAttribute]
private static SetWebRequestDetailEventHandler SetWebRequestDetail;
    private StackifyError _Error;
    [CompilerGeneratedAttribute]
private string <UserIPAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestProtocol>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestUrlRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReportingUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReferralUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Cookies>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <QueryString>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <PostData>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <SessionData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PostDataRaw>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MVCAction>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MVCController>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MVCArea>k__BackingField;
    [JsonPropertyAttribute]
public string UserIPAddress { get; public set; }
    [JsonPropertyAttribute]
public string HttpMethod { get; public set; }
    [JsonPropertyAttribute]
public string RequestProtocol { get; public set; }
    [JsonPropertyAttribute]
public string RequestUrl { get; public set; }
    [JsonPropertyAttribute]
public string RequestUrlRoot { get; public set; }
    [JsonPropertyAttribute]
public string ReportingUrl { get; public set; }
    [JsonPropertyAttribute]
public string ReferralUrl { get; public set; }
    [JsonPropertyAttribute]
public string UserAgent { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Headers { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Cookies { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> QueryString { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> PostData { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> SessionData { get; public set; }
    [JsonPropertyAttribute]
public string PostDataRaw { get; public set; }
    [JsonPropertyAttribute]
public string MVCAction { get; public set; }
    [JsonPropertyAttribute]
public string MVCController { get; public set; }
    [JsonPropertyAttribute]
public string MVCArea { get; public set; }
    public WebRequestDetail(StackifyError error);
    [CompilerGeneratedAttribute]
public static void add_SetWebRequestDetail(SetWebRequestDetailEventHandler value);
    [CompilerGeneratedAttribute]
public static void remove_SetWebRequestDetail(SetWebRequestDetailEventHandler value);
    [CompilerGeneratedAttribute]
public string get_UserIPAddress();
    [CompilerGeneratedAttribute]
public void set_UserIPAddress(string value);
    [CompilerGeneratedAttribute]
public string get_HttpMethod();
    [CompilerGeneratedAttribute]
public void set_HttpMethod(string value);
    [CompilerGeneratedAttribute]
public string get_RequestProtocol();
    [CompilerGeneratedAttribute]
public void set_RequestProtocol(string value);
    [CompilerGeneratedAttribute]
public string get_RequestUrl();
    [CompilerGeneratedAttribute]
public void set_RequestUrl(string value);
    [CompilerGeneratedAttribute]
public string get_RequestUrlRoot();
    [CompilerGeneratedAttribute]
public void set_RequestUrlRoot(string value);
    [CompilerGeneratedAttribute]
public string get_ReportingUrl();
    [CompilerGeneratedAttribute]
public void set_ReportingUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ReferralUrl();
    [CompilerGeneratedAttribute]
public void set_ReferralUrl(string value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Cookies();
    [CompilerGeneratedAttribute]
public void set_Cookies(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_QueryString();
    [CompilerGeneratedAttribute]
public void set_QueryString(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_PostData();
    [CompilerGeneratedAttribute]
public void set_PostData(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_SessionData();
    [CompilerGeneratedAttribute]
public void set_SessionData(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_PostDataRaw();
    [CompilerGeneratedAttribute]
public void set_PostDataRaw(string value);
    [CompilerGeneratedAttribute]
public string get_MVCAction();
    [CompilerGeneratedAttribute]
public void set_MVCAction(string value);
    [CompilerGeneratedAttribute]
public string get_MVCController();
    [CompilerGeneratedAttribute]
public void set_MVCController(string value);
    [CompilerGeneratedAttribute]
public string get_MVCArea();
    [CompilerGeneratedAttribute]
public void set_MVCArea(string value);
    public void Load(HttpContextBase context);
    internal static void AddKey(string key, string value, Dictionary`2<string, string> dictionary, List`1<string> goodKeys, List`1<string> badKeys);
    internal static Dictionary`2<string, string> ToKeyValues(HttpSessionStateBase collection, List`1<string> goodKeys, List`1<string> badKeys);
    internal static Dictionary`2<string, string> ToKeyValues(HttpCookieCollection collection, List`1<string> goodKeys, List`1<string> badKeys);
    internal static Dictionary`2<string, string> ToKeyValues(NameValueCollection collection, List`1<string> goodKeys, List`1<string> badKeys);
    internal static Dictionary`2<string, string> ToKeyValues(HttpSessionState collection, List`1<string> goodKeys, List`1<string> badKeys);
}
public class StackifyLib.ProfileTracer : object {
    private string _methodDisplayText;
    private bool _ignoreChildFrames;
    private string _requestReportingCategory;
    private string _appReportingCategory;
    private bool _customMetricCount;
    private bool _customMetricTime;
    private bool _autoReportZeroIfNothingReported;
    private string _customMetricCategory;
    private string _customMetricName;
    private string _transactionId;
    private string _requestId;
    private static EtwEventListener _etwEventListener;
    [CompilerGeneratedAttribute]
private bool <IsOperation>k__BackingField;
    internal bool IsOperation { get; internal set; }
    internal ProfileTracer(string methodDisplayText, string requestLevelReportingCategory, string appLevelReportingCategory);
    [CompilerGeneratedAttribute]
internal bool get_IsOperation();
    [CompilerGeneratedAttribute]
internal void set_IsOperation(bool value);
    public static void SetReportingUrl(string reportingUrl);
    public static void SetOperationName(string operationName);
    [ObsoleteAttribute("Just used for testing", "False")]
public static void NoOp();
    public static void TraceString(string logMsg);
    public static void TraceMongoCommand(string logMsg);
    public static ProfileTracer CreateAsCodeBlock(string methodDisplayText);
    public static ProfileTracer CreateAsTrackedFunction(string functionName);
    public static ProfileTracer CreateAsOperation(string operationName, string uniqueOperationID);
    public static ProfileTracer CreateAsDependency(string methodDisplayText, string requestLevelReportingCategory, string appLevelReportingCategory);
    public ProfileTracer SetUniqueOperationID(string uniqueOperationID);
    public ProfileTracer CreateMetric(string categoryName, string metricName, bool trackCount, bool trackTime, bool autoReportZeroIfNothingReported);
    public ProfileTracer IgnoreChildFrames(bool value);
    public void ApplyDistributedHeaders(string traceparent, string tracestate);
    private void ExecInternal2(string values, Action action);
    private void ExecInternalOperation(string values, Action action);
    private Task ExecInternal2(string values, Func`1<Task> action);
    private Task`1<T> ExecInternal2(string values, Func`1<Task`1<T>> action);
    private Task ExecInternalOperation(string values, Func`1<Task> action);
    private Task`1<T> ExecInternalOperation(string values, Func`1<Task`1<T>> action);
    private void ExecInternalTaskStarted2(string values);
    public void Exec(Action action);
    public Task`1<T> ExecAsync(Func`1<Task`1<T>> task);
    public Task ExecAsync(Func`1<Task> task);
    private void ExecInternalComplete2(string values);
    public static void SetEnvironmentName(string environmentName);
    public static void SetApplicationName(string applicationName);
}
[JsonObjectAttribute]
public class StackifyLib.StackifyError : Exception {
    [CompilerGeneratedAttribute]
private long <OccurredEpochMillis>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorItem <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private EnvironmentDetail <EnvironmentDetail>k__BackingField;
    [CompilerGeneratedAttribute]
private WebRequestDetail <WebRequestDetail>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <ServerVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private static CapturDetailHandler OnCaptureDetail;
    [JsonIgnoreAttribute]
private Exception _Exception;
    [CompilerGeneratedAttribute]
private bool <_Sent>k__BackingField;
    [CompilerGeneratedAttribute]
private LogMsg <_InternalLogMsg>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnHandled>k__BackingField;
    [JsonPropertyAttribute]
public long OccurredEpochMillis { get; public set; }
    [JsonPropertyAttribute]
public ErrorItem Error { get; public set; }
    [JsonPropertyAttribute]
public EnvironmentDetail EnvironmentDetail { get; public set; }
    [JsonPropertyAttribute]
public WebRequestDetail WebRequestDetail { get; public set; }
    [JsonPropertyAttribute]
public Dictionary`2<string, string> ServerVariables { get; public set; }
    [JsonPropertyAttribute]
public string CustomerName { get; public set; }
    [JsonPropertyAttribute]
public string UserName { get; public set; }
    [JsonIgnoreAttribute]
internal bool _Sent { get; internal set; }
    [JsonIgnoreAttribute]
private LogMsg _InternalLogMsg { get; private set; }
    [JsonIgnoreAttribute]
public bool IsUnHandled { get; public set; }
    public StackifyError(long errorOccurredEpochMillis, ErrorItem errorItem);
    public StackifyError(DateTime errorOccurredUtc, ErrorItem errorItem);
    public StackifyError(Exception exception);
    public StackifyError(string message, Exception exception);
    [CompilerGeneratedAttribute]
public long get_OccurredEpochMillis();
    [CompilerGeneratedAttribute]
public void set_OccurredEpochMillis(long value);
    [CompilerGeneratedAttribute]
public ErrorItem get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(ErrorItem value);
    [CompilerGeneratedAttribute]
public EnvironmentDetail get_EnvironmentDetail();
    [CompilerGeneratedAttribute]
public void set_EnvironmentDetail(EnvironmentDetail value);
    [CompilerGeneratedAttribute]
public WebRequestDetail get_WebRequestDetail();
    [CompilerGeneratedAttribute]
public void set_WebRequestDetail(WebRequestDetail value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_ServerVariables();
    [CompilerGeneratedAttribute]
public void set_ServerVariables(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_CustomerName();
    [CompilerGeneratedAttribute]
public void set_CustomerName(string value);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public static void add_OnCaptureDetail(CapturDetailHandler value);
    [CompilerGeneratedAttribute]
public static void remove_OnCaptureDetail(CapturDetailHandler value);
    [CompilerGeneratedAttribute]
internal bool get__Sent();
    [CompilerGeneratedAttribute]
internal void set__Sent(bool value);
    [CompilerGeneratedAttribute]
private LogMsg get__InternalLogMsg();
    [CompilerGeneratedAttribute]
private void set__InternalLogMsg(LogMsg value);
    [CompilerGeneratedAttribute]
public bool get_IsUnHandled();
    [CompilerGeneratedAttribute]
public void set_IsUnHandled(bool value);
    private void Init();
    public StackifyError SetAdditionalMessage(string message);
    public static StackifyError New(Exception ex);
    public static bool IgnoreError(StackifyError ex);
    public static bool IgnoreError(Exception ex);
    public void SendToStackify(string apikey);
    public StackifyError SetTags(String[] tags);
    public StackifyError SetCustomProperties(object customProperties);
    public StackifyError SetUser(string userName);
    public StackifyError SetCustomer(string customerName);
    public IEnumerable`1<TraceFrame> GetAllFrames();
    public virtual string ToString();
}
public class StackifyLib.StringException : Exception {
    [CompilerGeneratedAttribute]
private List`1<TraceFrame> <TraceFrames>k__BackingField;
    public List`1<TraceFrame> TraceFrames { get; public set; }
    public StringException(string message);
    [CompilerGeneratedAttribute]
public List`1<TraceFrame> get_TraceFrames();
    [CompilerGeneratedAttribute]
public void set_TraceFrames(List`1<TraceFrame> value);
}
public class StackifyLib.Utils.AppIdentityInfo : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DeviceID>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DeviceAppID>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <AppNameID>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <EnvID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Env>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <AppEnvID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceAlias>k__BackingField;
    public Nullable`1<int> DeviceID { get; public set; }
    public Nullable`1<int> DeviceAppID { get; public set; }
    public Nullable`1<Guid> AppNameID { get; public set; }
    public Nullable`1<short> EnvID { get; public set; }
    public string AppName { get; public set; }
    public string Env { get; public set; }
    public Nullable`1<Guid> AppEnvID { get; public set; }
    public string DeviceAlias { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DeviceID();
    [CompilerGeneratedAttribute]
public void set_DeviceID(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DeviceAppID();
    [CompilerGeneratedAttribute]
public void set_DeviceAppID(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_AppNameID();
    [CompilerGeneratedAttribute]
public void set_AppNameID(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_EnvID();
    [CompilerGeneratedAttribute]
public void set_EnvID(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public string get_AppName();
    [CompilerGeneratedAttribute]
public void set_AppName(string value);
    [CompilerGeneratedAttribute]
public string get_Env();
    [CompilerGeneratedAttribute]
public void set_Env(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_AppEnvID();
    [CompilerGeneratedAttribute]
public void set_AppEnvID(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_DeviceAlias();
    [CompilerGeneratedAttribute]
public void set_DeviceAlias(string value);
}
public class StackifyLib.Utils.AsyncTracer : object {
    private static bool _AsyncTracerEnabled;
    private static DateTime _LastEnabledTest;
    private static AsyncTracer();
    public static bool EnsureAsyncTracer();
}
[ExtensionAttribute]
internal static class StackifyLib.Utils.DateExtensions : object {
    [ExtensionAttribute]
public static DateTime Round(DateTime date, TimeSpan span);
    [ExtensionAttribute]
public static DateTime Floor(DateTime date, TimeSpan span);
    [ExtensionAttribute]
public static DateTime Ceil(DateTime date, TimeSpan span);
    [ExtensionAttribute]
public static long ToUnixEpoch(DateTime date);
    [ExtensionAttribute]
public static long ToUnixEpochMinutes(DateTime date);
}
public class StackifyLib.Utils.ErrorGovernor : object {
    public static int MaxDupErrorPerMinute;
    private static int cleanUpMinutes;
    private Dictionary`2<string, Tuple`2<long, int>> errorToCounter;
    private long nextErrorToCounterCleanUp;
    private static ErrorGovernor();
    public bool ErrorShouldBeSent(StackifyError error);
    private ErrorItem GetBaseError(StackifyError error);
    private string GetUniqueKey(ErrorItem errorItem);
    private long PurgeErrorToCounter(long epochMinute);
}
public class StackifyLib.Utils.EtwEventListener : EventListener {
    private static Guid tplGuid;
    private static EtwEventListener();
    protected virtual void OnEventSourceCreated(EventSource eventSource);
    protected virtual void OnEventWritten(EventWrittenEventArgs eventData);
}
public class StackifyLib.Utils.HelperFunctions : object {
    private static List`1<string> _BadTypes;
    private static JsonSerializerSettings serializerSettings;
    private static JsonSerializer serializer;
    private static Assembly _wrapperAssembly;
    private static Type _stackifyCallContextType;
    private static string _profilerAppName;
    private static string _profilerEnvironment;
    private static Nullable`1<bool> _isBeingProfiled;
    private static Regex ID_REGEX;
    private static Regex GUID_REGEX;
    private static Regex EMAIL_REGEX;
    private static Regex IP_REGEX;
    protected static bool IsBeingProfiled { get; }
    private static HelperFunctions();
    public static string SerializeDebugData(object logObject, bool serializeSimpleTypes, Dictionary`2<string, object> properties);
    private static JObject GetPrunedObject(JObject obj, int maxFields);
    private static int GetFieldCount(JToken obj);
    public static bool IsValueType(object obj);
    public static string CleanPartialUrl(string url);
    public static string GetRequestId();
    public static string GetReportingUrl();
    public static string GetAppName();
    public static string GetAppEnvironment();
    protected static Assembly GetWrapperAssembly();
    private static void GetProfilerAppNameAndEnvironment(Assembly middleware);
    private static object getContextProperty(string propName);
    private static string GetStackifyProperty(string propName);
    protected static bool get_IsBeingProfiled();
    public static string MaskReportingUrl(string url);
    private static string Mask(string field);
}
public static class StackifyLib.Utils.HighPrecisionTime : object {
    [CompilerGeneratedAttribute]
private static bool <IsAvailable>k__BackingField;
    public static bool IsAvailable { get; private set; }
    public static DateTime UtcNow { get; }
    private static HighPrecisionTime();
    [CompilerGeneratedAttribute]
public static bool get_IsAvailable();
    [CompilerGeneratedAttribute]
private static void set_IsAvailable(bool value);
    private static void GetSystemTimePreciseAsFileTime(Int64& filetime);
    public static DateTime get_UtcNow();
}
public class StackifyLib.Utils.HttpClient : object {
    public static IWebProxy CustomWebProxy;
    [CompilerGeneratedAttribute]
private string <BaseAPIUrl>k__BackingField;
    private string _APIKey;
    [CompilerGeneratedAttribute]
private AppIdentityInfo <AppIdentity>k__BackingField;
    private bool IdentityComplete;
    private DateTime _LastIdentityAttempt;
    private Nullable`1<DateTime> _UnauthorizedResponse;
    private Nullable`1<DateTime> _LastError;
    private Nullable`1<DateTime> _NextTry;
    private Nullable`1<DateTime> _LastSuccess;
    public string LastErrorMessage;
    private string _version;
    public string BaseAPIUrl { get; private set; }
    public string APIKey { get; }
    public AppIdentityInfo AppIdentity { get; internal set; }
    private static HttpClient();
    public HttpClient(string apiKey, string apiUrl);
    [CompilerGeneratedAttribute]
public string get_BaseAPIUrl();
    [CompilerGeneratedAttribute]
private void set_BaseAPIUrl(string value);
    public string get_APIKey();
    [CompilerGeneratedAttribute]
public AppIdentityInfo get_AppIdentity();
    [CompilerGeneratedAttribute]
internal void set_AppIdentity(AppIdentityInfo value);
    public static void LoadWebProxyConfig();
    private void CalcNextTryOnError();
    public bool CanUpload();
    public bool IsRecentError();
    public bool IsAuthorized();
    public bool MatchedClientDeviceApp();
    public bool IdentifyApp();
    public Task`1<StackifyWebResponse> SendJsonAndGetResponseAsync(string url, string jsonData, bool compress);
    private Task`1<T> AsyncWrap(Func`1<T> selector);
    public StackifyWebResponse SendJsonAndGetResponse(string url, string jsonData, bool compress);
    public StackifyWebResponse POSTAndGetResponse(string url, string postData);
    public string GetResponseString(HttpWebResponse response, DateTime started);
    private HttpWebRequest BuildJsonRequest(string url, string jsonData, bool compress);
    private HttpWebRequest BuildPOSTRequest(string url, string postdata);
}
internal class StackifyLib.Utils.PrefixOrAPM : object {
    private static DateTime _LastCheck;
    private static ProfilerType _LastProfilerType;
    private static bool _ScanProcessException;
    private static PrefixOrAPM();
    internal static ProfilerType GetProfilerType();
    private static string Left(string sValue, int iMaxLength);
}
public static class StackifyLib.Utils.RegistryHelper : object {
    public static RegistryKey GetRegistryKey(string keyPath, bool writeable);
    public static object GetRegistryValue(string keyPath, string keyName);
}
public static class StackifyLib.Utils.SequentialGuid : object {
    private static int UuidCreateSequential(Guid& guid);
    public static Guid NewGuid();
}
public class StackifyLib.Utils.ServerConfigHelper : object {
    public static string ProductionEnvName;
    public static string GetEnvironment();
}
public class StackifyLib.Utils.StackifyAPILogger : object {
    private static StringWriter _logger;
    private static Nullable`1<bool> _logEnabled;
    [CompilerGeneratedAttribute]
private static LogMessageHandler OnLogMessage;
    public static bool LogEnabled { get; public set; }
    unknown static StringWriter Logger {public set; }
    private static StackifyAPILogger();
    [CompilerGeneratedAttribute]
public static void add_OnLogMessage(LogMessageHandler value);
    [CompilerGeneratedAttribute]
public static void remove_OnLogMessage(LogMessageHandler value);
    public static bool get_LogEnabled();
    public static void set_LogEnabled(bool value);
    public static void set_Logger(StringWriter value);
    public static void Log(string message, bool logAnyways);
    public static void Log(string message, Exception ex, bool logAnyways);
    public static void EvaluateLogEnabled();
}
[ExtensionAttribute]
internal static class StackifyLib.Utils.StringExtensions : object {
    [ExtensionAttribute]
public static string ToMD5Hash(string input);
    [ExtensionAttribute]
public static string Right(string sValue, int iMaxLength);
    [ExtensionAttribute]
public static string Left(string sValue, int iMaxLength);
    [ExtensionAttribute]
public static string GetCleanName(string name, bool isAppName);
    private static string RemoveDiacritics(string name);
}
public class StackifyLib.Utils.ToStringConverter : JsonConverter {
    private string _propName;
    private Type _type;
    public bool CanRead { get; }
    public ToStringConverter(string propName, Type t);
    public virtual bool CanConvert(Type objectType);
    public virtual bool get_CanRead();
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public class StackifyLib.Web.ErrorLoggerHttpModule : object {
    private sealed virtual override void System.Web.IHttpModule.Init(HttpApplication context);
    private void context_Error(object sender, EventArgs e);
    private sealed virtual override void System.Web.IHttpModule.Dispose();
}
public static class StackifyLib.Web.RealUserMonitoring : object {
    private static RandomNumberGenerator Rng;
    private static RealUserMonitoring();
    public static string GetHeaderScript(string nonce);
    private static string GetNonce();
}
public class StackifyLib.Web.RouteResolver : object {
    private HttpContextBase _Context;
    private Route _Route;
    private bool _IISAppended;
    public RouteResolver(HttpContextBase context);
    public Route GetRoute();
    public void AppendToIISLog();
    public static void AppendToIISLog(HttpContext context, string route);
    public void CreateServerVariables();
    private Route EvalRoute();
}
