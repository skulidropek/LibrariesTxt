[DefaultMemberAttribute("Item")]
internal class Steeltoe.Extensions.Configuration.Placeholder.ConfigurationView : object {
    private IList`1<IConfigurationProvider> _providers;
    private ConfigurationReloadToken _changeToken;
    public IEnumerable`1<IConfigurationProvider> Providers { get; }
    public string Item { get; public set; }
    public ConfigurationView(IList`1<IConfigurationProvider> providers);
    public sealed virtual IEnumerable`1<IConfigurationProvider> get_Providers();
    public sealed virtual string get_Item(string key);
    public sealed virtual void set_Item(string key, string value);
    public sealed virtual IEnumerable`1<IConfigurationSection> GetChildren();
    public sealed virtual IChangeToken GetReloadToken();
    public sealed virtual IConfigurationSection GetSection(string key);
    public sealed virtual void Reload();
    private static string GetConfiguration(IList`1<IConfigurationProvider> providers, string key);
    private static void SetConfiguration(IList`1<IConfigurationProvider> providers, string key, string value);
}
[ExtensionAttribute]
public static class Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverConfigurationExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddPlaceholderResolver(IConfigurationBuilder builder, ILoggerFactory loggerFactory);
    [ExtensionAttribute]
public static IConfiguration AddPlaceholderResolver(IConfiguration configuration, ILoggerFactory loggerFactory);
}
public class Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverProvider : object {
    internal IList`1<IConfigurationProvider> _providers;
    internal ILogger`1<PlaceholderResolverProvider> _logger;
    private IConfigurationRoot _configuration;
    private bool _disposedValue;
    [CompilerGeneratedAttribute]
private IList`1<string> <ResolvedKeys>k__BackingField;
    public IConfiguration Configuration { get; }
    public IList`1<IConfigurationProvider> Providers { get; }
    public IList`1<string> ResolvedKeys { get; }
    public PlaceholderResolverProvider(IConfigurationRoot configuration, ILoggerFactory logFactory);
    public PlaceholderResolverProvider(IList`1<IConfigurationProvider> providers, ILoggerFactory logFactory);
    public IConfiguration get_Configuration();
    public sealed virtual IList`1<IConfigurationProvider> get_Providers();
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<string> get_ResolvedKeys();
    public sealed virtual bool TryGet(string key, String& value);
    public sealed virtual void Set(string key, string value);
    public sealed virtual IChangeToken GetReloadToken();
    public sealed virtual void Load();
    public sealed virtual IEnumerable`1<string> GetChildKeys(IEnumerable`1<string> earlierKeys, string parentPath);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    private void EnsureInitialized();
}
public class Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverSource : object {
    internal IConfigurationRoot _configuration;
    internal ConfigurationView _configurationView;
    internal ILoggerFactory _loggerFactory;
    internal IList`1<IConfigurationSource> _sources;
    public PlaceholderResolverSource(IList`1<IConfigurationSource> sources, ILoggerFactory logFactory);
    public PlaceholderResolverSource(IConfigurationRoot configuration, ILoggerFactory loggerFactory);
    public sealed virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
