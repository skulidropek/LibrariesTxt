[ExtensionAttribute]
public static class WebApi.OutputCache.Core.Cache.CacheExtensions : object {
    [ExtensionAttribute]
public static T GetCachedResult(IApiOutputCache cache, string key, DateTimeOffset expiry, Func`1<T> resultGetter, bool bypassCache);
}
public interface WebApi.OutputCache.Core.Cache.IApiOutputCache {
    public IEnumerable`1<string> AllKeys { get; }
    public abstract virtual void RemoveStartsWith(string key);
    public abstract virtual T Get(string key);
    [ObsoleteAttribute("Use Get<T> instead")]
public abstract virtual object Get(string key);
    public abstract virtual void Remove(string key);
    public abstract virtual bool Contains(string key);
    public abstract virtual void Add(string key, object o, DateTimeOffset expiration, string dependsOnKey);
    public abstract virtual IEnumerable`1<string> get_AllKeys();
}
public class WebApi.OutputCache.Core.Cache.MemoryCacheDefault : object {
    private static MemoryCache Cache;
    public IEnumerable`1<string> AllKeys { get; }
    private static MemoryCacheDefault();
    public virtual void RemoveStartsWith(string key);
    public virtual T Get(string key);
    [ObsoleteAttribute("Use Get<T> instead")]
public virtual object Get(string key);
    public virtual void Remove(string key);
    public virtual bool Contains(string key);
    public virtual void Add(string key, object o, DateTimeOffset expiration, string dependsOnKey);
    public virtual IEnumerable`1<string> get_AllKeys();
}
public class WebApi.OutputCache.Core.Constants : object {
    public static string ContentTypeKey;
    public static string EtagKey;
    public static string GenerationTimestampKey;
}
public interface WebApi.OutputCache.Core.IModelQuery`2 {
    public abstract virtual TResult Execute(TModel model);
}
public class WebApi.OutputCache.Core.Time.CacheTime : object {
    [CompilerGeneratedAttribute]
private TimeSpan <ClientTimeSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <SharedTimeSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <AbsoluteExpiration>k__BackingField;
    public TimeSpan ClientTimeSpan { get; public set; }
    public Nullable`1<TimeSpan> SharedTimeSpan { get; public set; }
    public DateTimeOffset AbsoluteExpiration { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_ClientTimeSpan();
    [CompilerGeneratedAttribute]
public void set_ClientTimeSpan(TimeSpan value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_SharedTimeSpan();
    [CompilerGeneratedAttribute]
public void set_SharedTimeSpan(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_AbsoluteExpiration();
    [CompilerGeneratedAttribute]
public void set_AbsoluteExpiration(DateTimeOffset value);
}
public class WebApi.OutputCache.Core.Time.ShortTime : object {
    private int serverTimeInSeconds;
    private int clientTimeInSeconds;
    private Nullable`1<int> sharedTimeInSecounds;
    public ShortTime(int serverTimeInSeconds, int clientTimeInSeconds, Nullable`1<int> sharedTimeInSecounds);
    public sealed virtual CacheTime Execute(DateTime model);
}
public class WebApi.OutputCache.Core.Time.SpecificTime : object {
    private int year;
    private int month;
    private int day;
    private int hour;
    private int minute;
    private int second;
    public SpecificTime(int year, int month, int day, int hour, int minute, int second);
    public sealed virtual CacheTime Execute(DateTime model);
}
public class WebApi.OutputCache.Core.Time.ThisDay : object {
    private int hour;
    private int minute;
    private int second;
    public ThisDay(int hour, int minute, int second);
    public sealed virtual CacheTime Execute(DateTime model);
}
public class WebApi.OutputCache.Core.Time.ThisMonth : object {
    private int day;
    private int hour;
    private int minute;
    private int second;
    public ThisMonth(int day, int hour, int minute, int second);
    public sealed virtual CacheTime Execute(DateTime model);
}
public class WebApi.OutputCache.Core.Time.ThisYear : object {
    private int month;
    private int day;
    private int hour;
    private int minute;
    private int second;
    public ThisYear(int month, int day, int hour, int minute, int second);
    public sealed virtual CacheTime Execute(DateTime model);
}
