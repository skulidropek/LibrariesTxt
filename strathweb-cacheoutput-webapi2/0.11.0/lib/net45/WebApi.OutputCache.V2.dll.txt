[AttributeUsageAttribute("4")]
public class WebApi.OutputCache.V2.AutoInvalidateCacheOutputAttribute : BaseCacheAttribute {
    [CompilerGeneratedAttribute]
private bool <TryMatchType>k__BackingField;
    public bool TryMatchType { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_TryMatchType();
    [CompilerGeneratedAttribute]
public void set_TryMatchType(bool value);
    public virtual void OnActionExecuted(HttpActionExecutedContext actionExecutedContext);
    private static IEnumerable`1<string> FindAllGetMethods(Type controllerType, IEnumerable`1<HttpParameterDescriptor> httpParameterDescriptors);
}
public abstract class WebApi.OutputCache.V2.BaseCacheAttribute : ActionFilterAttribute {
    protected IApiOutputCache WebApiCache;
    protected virtual void EnsureCache(HttpConfiguration config, HttpRequestMessage req);
}
[AttributeUsageAttribute("68")]
public class WebApi.OutputCache.V2.CacheOutputAttribute : ActionFilterAttribute {
    private static string CurrentRequestMediaType;
    protected static MediaTypeHeaderValue DefaultMediaType;
    [CompilerGeneratedAttribute]
private bool <AnonymousOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MustRevalidate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExcludeQueryStringFromCacheKey>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ServerTimeSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ClientTimeSpan>k__BackingField;
    private Nullable`1<int> _sharedTimeSpan;
    [CompilerGeneratedAttribute]
private bool <NoCache>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Private>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <CacheKeyGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    private IApiOutputCache _webApiCache;
    internal IModelQuery`2<DateTime, CacheTime> CacheTimeQuery;
    public bool AnonymousOnly { get; public set; }
    public bool MustRevalidate { get; public set; }
    public bool ExcludeQueryStringFromCacheKey { get; public set; }
    public int ServerTimeSpan { get; public set; }
    public int ClientTimeSpan { get; public set; }
    public int SharedTimeSpan { get; public set; }
    public bool NoCache { get; public set; }
    public bool Private { get; public set; }
    public Type CacheKeyGenerator { get; public set; }
    public string MediaType { get; public set; }
    private static CacheOutputAttribute();
    [CompilerGeneratedAttribute]
public bool get_AnonymousOnly();
    [CompilerGeneratedAttribute]
public void set_AnonymousOnly(bool value);
    [CompilerGeneratedAttribute]
public bool get_MustRevalidate();
    [CompilerGeneratedAttribute]
public void set_MustRevalidate(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExcludeQueryStringFromCacheKey();
    [CompilerGeneratedAttribute]
public void set_ExcludeQueryStringFromCacheKey(bool value);
    [CompilerGeneratedAttribute]
public int get_ServerTimeSpan();
    [CompilerGeneratedAttribute]
public void set_ServerTimeSpan(int value);
    [CompilerGeneratedAttribute]
public int get_ClientTimeSpan();
    [CompilerGeneratedAttribute]
public void set_ClientTimeSpan(int value);
    public int get_SharedTimeSpan();
    public void set_SharedTimeSpan(int value);
    [CompilerGeneratedAttribute]
public bool get_NoCache();
    [CompilerGeneratedAttribute]
public void set_NoCache(bool value);
    [CompilerGeneratedAttribute]
public bool get_Private();
    [CompilerGeneratedAttribute]
public void set_Private(bool value);
    [CompilerGeneratedAttribute]
public Type get_CacheKeyGenerator();
    [CompilerGeneratedAttribute]
public void set_CacheKeyGenerator(Type value);
    [CompilerGeneratedAttribute]
public string get_MediaType();
    [CompilerGeneratedAttribute]
public void set_MediaType(string value);
    protected virtual void EnsureCache(HttpConfiguration config, HttpRequestMessage req);
    protected virtual bool IsCachingAllowed(HttpActionContext actionContext, bool anonymousOnly);
    protected virtual void EnsureCacheTimeQuery();
    protected void ResetCacheTimeQuery();
    protected virtual MediaTypeHeaderValue GetExpectedMediaType(HttpConfiguration config, HttpActionContext actionContext);
    public virtual void OnActionExecuting(HttpActionContext actionContext);
    [AsyncStateMachineAttribute("WebApi.OutputCache.V2.CacheOutputAttribute/<OnActionExecutedAsync>d__50")]
public virtual Task OnActionExecutedAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken);
    protected virtual void ApplyCacheHeaders(HttpResponseMessage response, CacheTime cacheTime, Nullable`1<DateTimeOffset> contentGenerationTimestamp);
    protected virtual string CreateEtag(HttpActionExecutedContext actionExecutedContext, string cachekey, CacheTime cacheTime);
    private static void SetEtag(HttpResponseMessage message, string etag);
}
public class WebApi.OutputCache.V2.CacheOutputConfiguration : object {
    private HttpConfiguration _configuration;
    public CacheOutputConfiguration(HttpConfiguration configuration);
    public void RegisterCacheOutputProvider(Func`1<IApiOutputCache> provider);
    public void RegisterCacheKeyGeneratorProvider(Func`1<T> provider);
    public void RegisterDefaultCacheKeyGeneratorProvider(Func`1<ICacheKeyGenerator> provider);
    public string MakeBaseCachekey(string controller, string action);
    public string MakeBaseCachekey(Expression`1<Func`2<T, U>> expression);
    private static ICacheKeyGenerator TryActivateCacheKeyGenerator(Type generatorType);
    public ICacheKeyGenerator GetCacheKeyGenerator(HttpRequestMessage request, Type generatorType);
    public IApiOutputCache GetCacheOutputProvider(HttpRequestMessage request);
}
public class WebApi.OutputCache.V2.DefaultCacheKeyGenerator : object {
    public virtual string MakeCacheKey(HttpActionContext context, MediaTypeHeaderValue mediaType, bool excludeQueryString);
    protected virtual string MakeBaseKey(HttpActionContext context);
    protected virtual string FormatParameters(HttpActionContext context, bool excludeQueryString);
    private string GetJsonpCallback(HttpRequestMessage request);
    private string GetValue(object val);
    [CompilerGeneratedAttribute]
private string <FormatParameters>b__2_1(KeyValuePair`2<string, object> x);
}
[ExtensionAttribute]
public static class WebApi.OutputCache.V2.HttpConfigurationExtensions : object {
    [ExtensionAttribute]
public static CacheOutputConfiguration CacheOutputConfiguration(HttpConfiguration config);
}
public interface WebApi.OutputCache.V2.ICacheKeyGenerator {
    public abstract virtual string MakeCacheKey(HttpActionContext context, MediaTypeHeaderValue mediaType, bool excludeQueryString);
}
[AttributeUsageAttribute("68")]
public class WebApi.OutputCache.V2.IgnoreCacheOutputAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
public class WebApi.OutputCache.V2.InvalidateCacheOutputAttribute : BaseCacheAttribute {
    private string _controller;
    private string _methodName;
    public InvalidateCacheOutputAttribute(string methodName);
    public InvalidateCacheOutputAttribute(string methodName, Type type);
    public virtual void OnActionExecuted(HttpActionExecutedContext actionExecutedContext);
}
public class WebApi.OutputCache.V2.PerUserCacheKeyGenerator : DefaultCacheKeyGenerator {
    public virtual string MakeCacheKey(HttpActionContext context, MediaTypeHeaderValue mediaType, bool excludeQueryString);
    protected virtual string FormatUserIdentity(HttpActionContext context);
}
public class WebApi.OutputCache.V2.TimeAttributes.CacheOutputUntilAttribute : CacheOutputAttribute {
    public CacheOutputUntilAttribute(int year, int month, int day, int hour, int minute, int second);
}
public class WebApi.OutputCache.V2.TimeAttributes.CacheOutputUntilThisMonthAttribute : CacheOutputAttribute {
    public CacheOutputUntilThisMonthAttribute(int day, int hour, int minute, int second);
}
public class WebApi.OutputCache.V2.TimeAttributes.CacheOutputUntilThisYearAttribute : CacheOutputAttribute {
    public CacheOutputUntilThisYearAttribute(int month, int day, int hour, int minute, int second);
}
public class WebApi.OutputCache.V2.TimeAttributes.CacheOutputUntilToday : CacheOutputAttribute {
    public CacheOutputUntilToday(int hour, int minute, int second);
}
