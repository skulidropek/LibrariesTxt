[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.Saml2AuthExtensions : object {
    [ExtensionAttribute]
public static AuthenticationBuilder AddSaml2(AuthenticationBuilder builder, Action`1<Saml2Options> configureOptions);
    [ExtensionAttribute]
public static AuthenticationBuilder AddSaml2(AuthenticationBuilder builder, string scheme, Action`1<Saml2Options> configureOptions);
    [ExtensionAttribute]
public static AuthenticationBuilder AddSaml2(AuthenticationBuilder builder, string scheme, string displayName, Action`1<Saml2Options> configureOptions);
}
public class Sustainsys.Saml2.AspNetCore2.AspNetCoreLoggerAdapter : object {
    private ILogger logger;
    public AspNetCoreLoggerAdapter(ILogger logger);
    public sealed virtual void WriteError(string message, Exception ex);
    public sealed virtual void WriteInformation(string message);
    public sealed virtual void WriteVerbose(string message);
}
[ExtensionAttribute]
internal static class Sustainsys.Saml2.AspNetCore2.CommandResultExtensions : object {
    [AsyncStateMachineAttribute("Sustainsys.Saml2.AspNetCore2.CommandResultExtensions/<Apply>d__0")]
[ExtensionAttribute]
public static Task Apply(CommandResult commandResult, HttpContext httpContext, IDataProtector dataProtector, ICookieManager cookieManager, string signInScheme, string signOutScheme, bool emitSameSiteNone);
}
[ExtensionAttribute]
internal static class Sustainsys.Saml2.AspNetCore2.HttpRequestExtensions : object {
    [ExtensionAttribute]
public static HttpRequestData ToHttpRequestData(HttpContext httpContext, ICookieManager cookieManager, Func`2<Byte[], Byte[]> cookieDecryptor);
    [ExtensionAttribute]
public static string GetUserAgent(HttpRequest request);
}
public class Sustainsys.Saml2.AspNetCore2.PostConfigureSaml2Options : object {
    private ILoggerFactory loggerFactory;
    private IOptions`1<AuthenticationOptions> authOptions;
    public PostConfigureSaml2Options(ILoggerFactory loggerFactory, IOptions`1<AuthenticationOptions> authOptions);
    public sealed virtual void PostConfigure(string name, Saml2Options options);
}
public static class Sustainsys.Saml2.AspNetCore2.Saml2Defaults : object {
    public static string Scheme;
    public static string DisplayName;
}
public class Sustainsys.Saml2.AspNetCore2.Saml2Handler : object {
    private IOptionsMonitorCache`1<Saml2Options> optionsCache;
    private IDataProtectionProvider dataProtectorProvider;
    internal Saml2Options options;
    private HttpContext context;
    private IDataProtector dataProtector;
    private IOptionsFactory`1<Saml2Options> optionsFactory;
    private bool emitSameSiteNone;
    private string CurrentUri { get; }
    public Saml2Handler(IOptionsMonitorCache`1<Saml2Options> optionsCache, IDataProtectionProvider dataProtectorProvider, IOptionsFactory`1<Saml2Options> optionsFactory);
    public sealed virtual Task InitializeAsync(AuthenticationScheme scheme, HttpContext context);
    [ExcludeFromCodeCoverageAttribute]
public sealed virtual Task`1<AuthenticateResult> AuthenticateAsync();
    private string get_CurrentUri();
    [AsyncStateMachineAttribute("Sustainsys.Saml2.AspNetCore2.Saml2Handler/<ChallengeAsync>d__12")]
public sealed virtual Task ChallengeAsync(AuthenticationProperties properties);
    [ExcludeFromCodeCoverageAttribute]
public sealed virtual Task ForbidAsync(AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Sustainsys.Saml2.AspNetCore2.Saml2Handler/<HandleRequestAsync>d__14")]
public sealed virtual Task`1<bool> HandleRequestAsync();
    [AsyncStateMachineAttribute("Sustainsys.Saml2.AspNetCore2.Saml2Handler/<SignOutAsync>d__15")]
public sealed virtual Task SignOutAsync(AuthenticationProperties properties);
}
public class Sustainsys.Saml2.AspNetCore2.Saml2Options : AuthenticationSchemeOptions {
    [CompilerGeneratedAttribute]
private string <SignInScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignOutScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private SPOptions <SPOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ICookieManager <CookieManager>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityProviderDictionary <IdentityProviders>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2Notifications <Notifications>k__BackingField;
    public string SignInScheme { get; public set; }
    public string SignOutScheme { get; public set; }
    public SPOptions SPOptions { get; public set; }
    public ICookieManager CookieManager { get; public set; }
    public IdentityProviderDictionary IdentityProviders { get; }
    public Saml2Notifications Notifications { get; }
    [CompilerGeneratedAttribute]
public string get_SignInScheme();
    [CompilerGeneratedAttribute]
public void set_SignInScheme(string value);
    [CompilerGeneratedAttribute]
public string get_SignOutScheme();
    [CompilerGeneratedAttribute]
public void set_SignOutScheme(string value);
    [CompilerGeneratedAttribute]
public sealed virtual SPOptions get_SPOptions();
    [CompilerGeneratedAttribute]
public void set_SPOptions(SPOptions value);
    [CompilerGeneratedAttribute]
public ICookieManager get_CookieManager();
    [CompilerGeneratedAttribute]
public void set_CookieManager(ICookieManager value);
    [CompilerGeneratedAttribute]
public sealed virtual IdentityProviderDictionary get_IdentityProviders();
    [CompilerGeneratedAttribute]
public sealed virtual Saml2Notifications get_Notifications();
}
