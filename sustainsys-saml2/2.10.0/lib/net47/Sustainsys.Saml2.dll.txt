public enum Sustainsys.Saml2.CertificateStatus : Enum {
    public int value__;
    public static CertificateStatus Current;
    public static CertificateStatus Future;
}
[FlagsAttribute]
public enum Sustainsys.Saml2.CertificateUse : Enum {
    public int value__;
    public static CertificateUse Both;
    public static CertificateUse Signing;
    public static CertificateUse Encryption;
    public static CertificateUse TlsClient;
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.ClaimsExtensions : object {
    [ExtensionAttribute]
public static Saml2NameIdentifier ToSaml2NameIdentifier(Claim claim);
    private static Saml2NameIdentifier ProcessLogoutNameIdentifier(Claim claim);
    private static Saml2NameIdentifier ProcessNameIdentifier(Claim claim);
    [ExtensionAttribute]
private static void ExtractProperty(Claim claim, string propertyKey, Action`1<string> propertySetter);
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.ClaimsIdentityExtensions : object {
    [ExtensionAttribute]
public static Saml2Assertion ToSaml2Assertion(ClaimsIdentity identity, EntityId issuer);
    [ExtensionAttribute]
public static Saml2Assertion ToSaml2Assertion(ClaimsIdentity identity, EntityId issuer, Uri audience);
    [ExtensionAttribute]
public static Saml2Assertion ToSaml2Assertion(ClaimsIdentity identity, EntityId issuer, Uri audience, Saml2Id inResponseTo, Uri destinationUri);
    [ExtensionAttribute]
public static Saml2NameIdentifier ToSaml2NameIdentifier(ClaimsIdentity identity);
}
public class Sustainsys.Saml2.Configuration.ArtifactResolutionServiceCollection : ConfigurationElementCollection {
    protected virtual ConfigurationElement CreateNewElement();
    protected virtual object GetElementKey(ConfigurationElement element);
    public sealed virtual IEnumerator`1<ArtifactResolutionServiceElement> GetEnumerator();
}
public class Sustainsys.Saml2.Configuration.ArtifactResolutionServiceElement : ConfigurationElement {
    private static string index;
    private static string location;
    [ConfigurationPropertyAttribute("index")]
public int Index { get; }
    [ConfigurationPropertyAttribute("location")]
public Uri Location { get; }
    public int get_Index();
    public Uri get_Location();
}
public class Sustainsys.Saml2.Configuration.CertificateCollection : ConfigurationElementCollection {
    protected virtual ConfigurationElement CreateNewElement();
    protected virtual object GetElementKey(ConfigurationElement element);
    public sealed virtual IEnumerator`1<CertificateElement> GetEnumerator();
}
public class Sustainsys.Saml2.Configuration.CertificateElement : ConfigurationElement {
    private bool isReadOnly;
    [ConfigurationPropertyAttribute("fileName")]
public string FileName { get; internal set; }
    [ConfigurationPropertyAttribute("storeName")]
[ExcludeFromCodeCoverageAttribute]
public StoreName StoreName { get; }
    [ConfigurationPropertyAttribute("storeLocation")]
[ExcludeFromCodeCoverageAttribute]
public StoreLocation StoreLocation { get; }
    [ConfigurationPropertyAttribute("findValue")]
[ExcludeFromCodeCoverageAttribute]
public string FindValue { get; }
    [ConfigurationPropertyAttribute("x509FindType")]
[ExcludeFromCodeCoverageAttribute]
public X509FindType X509FindType { get; }
    internal void AllowConfigEdit(bool allow);
    public virtual bool IsReadOnly();
    public string get_FileName();
    internal void set_FileName(string value);
    public StoreName get_StoreName();
    public StoreLocation get_StoreLocation();
    public string get_FindValue();
    public X509FindType get_X509FindType();
    [ExcludeFromCodeCoverageAttribute]
public X509Certificate2 LoadCertificate();
}
public class Sustainsys.Saml2.Configuration.Compatibility : object {
    [CompilerGeneratedAttribute]
private bool <UnpackEntitiesDescriptorInIdentityProviderMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableLogoutStateCookie>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <StrictOwinAuthenticationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreAuthenticationContextInResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreMissingInResponseTo>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableLogoutOverPost>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AcceptUnsignedLogoutResponses>k__BackingField;
    public bool UnpackEntitiesDescriptorInIdentityProviderMetadata { get; public set; }
    public bool DisableLogoutStateCookie { get; public set; }
    public bool StrictOwinAuthenticationMode { get; public set; }
    public bool IgnoreAuthenticationContextInResponse { get; public set; }
    public bool IgnoreMissingInResponseTo { get; public set; }
    public bool EnableLogoutOverPost { get; public set; }
    public bool AcceptUnsignedLogoutResponses { get; public set; }
    public Compatibility(CompatibilityElement configElement);
    [CompilerGeneratedAttribute]
public bool get_UnpackEntitiesDescriptorInIdentityProviderMetadata();
    [CompilerGeneratedAttribute]
public void set_UnpackEntitiesDescriptorInIdentityProviderMetadata(bool value);
    [CompilerGeneratedAttribute]
public bool get_DisableLogoutStateCookie();
    [CompilerGeneratedAttribute]
public void set_DisableLogoutStateCookie(bool value);
    [CompilerGeneratedAttribute]
public bool get_StrictOwinAuthenticationMode();
    [CompilerGeneratedAttribute]
public void set_StrictOwinAuthenticationMode(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreAuthenticationContextInResponse();
    [CompilerGeneratedAttribute]
public void set_IgnoreAuthenticationContextInResponse(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreMissingInResponseTo();
    [CompilerGeneratedAttribute]
public void set_IgnoreMissingInResponseTo(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableLogoutOverPost();
    [CompilerGeneratedAttribute]
public void set_EnableLogoutOverPost(bool value);
    [CompilerGeneratedAttribute]
public bool get_AcceptUnsignedLogoutResponses();
    [CompilerGeneratedAttribute]
public void set_AcceptUnsignedLogoutResponses(bool value);
}
public class Sustainsys.Saml2.Configuration.CompatibilityElement : ConfigurationElement {
    [CompilerGeneratedAttribute]
private bool <AllowChange>k__BackingField;
    private static string unpackEntitiesDescriptorInIdentityProviderMetadata;
    private static string disableLogoutStateCookie;
    private static string ignoreMissingInResponseTo;
    internal bool AllowChange { get; internal set; }
    [ConfigurationPropertyAttribute("unpackEntitiesDescriptorInIdentityProviderMetadata")]
public bool UnpackEntitiesDescriptorInIdentityProviderMetadata { get; public set; }
    [ConfigurationPropertyAttribute("disableLogoutStateCookie")]
public bool DisableLogoutStateCookie { get; public set; }
    [ConfigurationPropertyAttribute("ignoreMissingInResponseTo")]
public bool IgnoreMissingInResponseTo { get; public set; }
    [CompilerGeneratedAttribute]
internal bool get_AllowChange();
    [CompilerGeneratedAttribute]
internal void set_AllowChange(bool value);
    public virtual bool IsReadOnly();
    public bool get_UnpackEntitiesDescriptorInIdentityProviderMetadata();
    public void set_UnpackEntitiesDescriptorInIdentityProviderMetadata(bool value);
    public bool get_DisableLogoutStateCookie();
    public void set_DisableLogoutStateCookie(bool value);
    public bool get_IgnoreMissingInResponseTo();
    public void set_IgnoreMissingInResponseTo(bool value);
}
public class Sustainsys.Saml2.Configuration.ConfiguredAndLoadedSigningKeysCollection : object {
    private IList`1<SecurityKeyIdentifierClause> configuredItems;
    private IList`1<SecurityKeyIdentifierClause> loadedItems;
    public IEnumerable`1<SecurityKeyIdentifierClause> LoadedItems { get; }
    public void AddConfiguredKey(SecurityKeyIdentifierClause key);
    public void AddConfiguredKey(X509Certificate2 certificate);
    public void SetLoadedItems(IList`1<SecurityKeyIdentifierClause> items);
    public IEnumerable`1<SecurityKeyIdentifierClause> get_LoadedItems();
    public sealed virtual IEnumerator`1<SecurityKeyIdentifierClause> GetEnumerator();
    [ExcludeFromCodeCoverageAttribute]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[DebuggerDisplayAttribute("ContactPersonElement {ContactType} {Email}")]
public class Sustainsys.Saml2.Configuration.ContactPersonElement : ConfigurationElement {
    private static string contactType;
    private static string company;
    private static string givenName;
    private static string surname;
    private static string phoneNumber;
    private static string email;
    [ConfigurationPropertyAttribute("type")]
public ContactType ContactType { get; }
    [ConfigurationPropertyAttribute("company")]
public string Company { get; }
    [ConfigurationPropertyAttribute("givenName")]
public string GivenName { get; }
    [ConfigurationPropertyAttribute("surname")]
public string Surname { get; }
    [ConfigurationPropertyAttribute("phoneNumber")]
public string PhoneNumber { get; }
    [ConfigurationPropertyAttribute("email")]
public string Email { get; }
    public ContactType get_ContactType();
    public string get_Company();
    public string get_GivenName();
    public string get_Surname();
    public string get_PhoneNumber();
    public string get_Email();
}
public class Sustainsys.Saml2.Configuration.ContactPersonsCollection : ConfigurationElementCollection {
    protected virtual ConfigurationElement CreateNewElement();
    protected virtual object GetElementKey(ConfigurationElement element);
    public sealed virtual IEnumerator`1<ContactPersonElement> GetEnumerator();
}
public class Sustainsys.Saml2.Configuration.CustomTypeElement : ConfigurationElement {
    [ConfigurationPropertyAttribute("type")]
[TypeConverterAttribute("System.Configuration.TypeNameConverter")]
public Type Type { get; public set; }
    public Type get_Type();
    public void set_Type(Type value);
}
public class Sustainsys.Saml2.Configuration.EntityIdConverter : ConfigurationConverterBase {
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
}
public class Sustainsys.Saml2.Configuration.FederationCollection : ConfigurationElementCollection {
    protected virtual ConfigurationElement CreateNewElement();
    protected virtual object GetElementKey(ConfigurationElement element);
    public sealed virtual IEnumerator`1<FederationElement> GetEnumerator();
    public void RegisterFederations(IOptions options);
}
public class Sustainsys.Saml2.Configuration.FederationElement : ConfigurationElement {
    private static string metadataLocation;
    private static string allowUnsolicitedAuthnResponse;
    [ConfigurationPropertyAttribute("metadataLocation")]
public string MetadataLocation { get; }
    [ConfigurationPropertyAttribute("allowUnsolicitedAuthnResponse")]
public bool AllowUnsolicitedAuthnResponse { get; }
    [ConfigurationPropertyAttribute("")]
[ConfigurationCollectionAttribute("Sustainsys.Saml2.Configuration.CertificateCollection")]
public CertificateCollection SigningCertificates { get; }
    public string get_MetadataLocation();
    public bool get_AllowUnsolicitedAuthnResponse();
    public CertificateCollection get_SigningCertificates();
}
internal interface Sustainsys.Saml2.Configuration.ICustomIdentityConfiguration {
    public abstract virtual void LoadCustomConfiguration(XmlNodeList nodeList);
}
public class Sustainsys.Saml2.Configuration.IdentityProviderCollection : ConfigurationElementCollection {
    protected virtual ConfigurationElement CreateNewElement();
    protected virtual object GetElementKey(ConfigurationElement element);
    public sealed virtual IEnumerator`1<IdentityProviderElement> GetEnumerator();
    public void RegisterIdentityProviders(IOptions options);
}
[DefaultMemberAttribute("Item")]
public class Sustainsys.Saml2.Configuration.IdentityProviderDictionary : object {
    private Dictionary`2<EntityId, IdentityProvider> dictionary;
    public IdentityProvider Item { get; public set; }
    public IdentityProvider Default { get; }
    public IEnumerable`1<IdentityProvider> KnownIdentityProviders { get; }
    internal IdentityProvider Item { get; }
    public bool IsEmpty { get; }
    public IdentityProvider get_Item(EntityId entityId);
    public void set_Item(EntityId entityId, IdentityProvider value);
    public void Add(IdentityProvider idp);
    public IdentityProvider get_Default();
    public IEnumerable`1<IdentityProvider> get_KnownIdentityProviders();
    internal IdentityProvider get_Item(int i);
    public bool TryGetValue(EntityId idpEntityId, IdentityProvider& idp);
    public bool get_IsEmpty();
    public void Remove(EntityId idp);
}
public class Sustainsys.Saml2.Configuration.IdentityProviderElement : ConfigurationElement {
    private bool isReadOnly;
    private static string signOnUrl;
    private static string logoutUrl;
    private static string outboundSigningAlgorithm;
    private static string metadataLocation;
    private static string artifactResolutionServices;
    private static string wantAuthnRequestsSigned;
    private static string disableOutboundLogoutRequests;
    [ConfigurationPropertyAttribute("entityId")]
public string EntityId { get; internal set; }
    [ConfigurationPropertyAttribute("signOnUrl")]
public Uri SignOnUrl { get; internal set; }
    [ConfigurationPropertyAttribute("logoutUrl")]
public Uri LogoutUrl { get; }
    [ConfigurationPropertyAttribute("binding")]
public Saml2BindingType Binding { get; internal set; }
    [ConfigurationPropertyAttribute("signingCertificate")]
public CertificateElement SigningCertificate { get; internal set; }
    [ConfigurationPropertyAttribute("outboundSigningAlgorithm")]
public string OutboundSigningAlgorithm { get; }
    [ConfigurationPropertyAttribute("allowUnsolicitedAuthnResponse")]
public bool AllowUnsolicitedAuthnResponse { get; }
    [ConfigurationPropertyAttribute("loadMetadata")]
public bool LoadMetadata { get; public set; }
    [ConfigurationPropertyAttribute("metadataLocation")]
public string MetadataLocation { get; internal set; }
    [ConfigurationPropertyAttribute("artifactResolutionServices")]
[ConfigurationCollectionAttribute("Sustainsys.Saml2.Configuration.ArtifactResolutionServiceCollection")]
public ArtifactResolutionServiceCollection ArtifactResolutionServices { get; }
    [ConfigurationPropertyAttribute("wantAuthnRequestsSigned")]
public bool WantAuthnRequestsSigned { get; }
    [ConfigurationPropertyAttribute("disableOutboundLogoutRequests")]
public bool DisableOutboundLogoutRequests { get; public set; }
    [ConfigurationPropertyAttribute("relayStateUsedAsReturnUrl")]
public bool RelayStateUsedAsReturnUrl { get; public set; }
    internal void AllowConfigEdit(bool allow);
    public virtual bool IsReadOnly();
    public string get_EntityId();
    internal void set_EntityId(string value);
    public Uri get_SignOnUrl();
    internal void set_SignOnUrl(Uri value);
    public Uri get_LogoutUrl();
    public Saml2BindingType get_Binding();
    internal void set_Binding(Saml2BindingType value);
    public CertificateElement get_SigningCertificate();
    internal void set_SigningCertificate(CertificateElement value);
    public string get_OutboundSigningAlgorithm();
    public bool get_AllowUnsolicitedAuthnResponse();
    public bool get_LoadMetadata();
    public void set_LoadMetadata(bool value);
    public string get_MetadataLocation();
    internal void set_MetadataLocation(string value);
    public ArtifactResolutionServiceCollection get_ArtifactResolutionServices();
    public bool get_WantAuthnRequestsSigned();
    public bool get_DisableOutboundLogoutRequests();
    public void set_DisableOutboundLogoutRequests(bool value);
    public bool get_RelayStateUsedAsReturnUrl();
    public void set_RelayStateUsedAsReturnUrl(bool value);
}
public interface Sustainsys.Saml2.Configuration.IOptions {
    public SPOptions SPOptions { get; }
    public IdentityProviderDictionary IdentityProviders { get; }
    public Saml2Notifications Notifications { get; }
    public abstract virtual SPOptions get_SPOptions();
    public abstract virtual IdentityProviderDictionary get_IdentityProviders();
    public abstract virtual Saml2Notifications get_Notifications();
}
public class Sustainsys.Saml2.Configuration.MetadataElement : ConfigurationElement {
    [CompilerGeneratedAttribute]
private bool <AllowChange>k__BackingField;
    private static string organization;
    private static string cacheDuration;
    private static string validDuration;
    private static string requestedAttributes;
    private static string wantAssertionsSigned;
    internal bool AllowChange { get; internal set; }
    [ConfigurationPropertyAttribute("organization")]
public OrganizationElement Organization { get; }
    [ConfigurationPropertyAttribute("cacheDuration")]
[TypeConverterAttribute("Sustainsys.Saml2.Configuration.XsdDurationConverter")]
public XsdDuration CacheDuration { get; }
    [ConfigurationPropertyAttribute("validDuration")]
public Nullable`1<TimeSpan> ValidUntil { get; }
    [ConfigurationPropertyAttribute("")]
[ConfigurationCollectionAttribute("Sustainsys.Saml2.Configuration.ContactPersonsCollection")]
public ContactPersonsCollection Contacts { get; }
    [ConfigurationPropertyAttribute("requestedAttributes")]
[ConfigurationCollectionAttribute("Sustainsys.Saml2.Configuration.RequestedAttributesCollection")]
public RequestedAttributesCollection RequestedAttributes { get; }
    [ConfigurationPropertyAttribute("wantAssertionsSigned")]
public bool WantAssertionsSigned { get; internal set; }
    [CompilerGeneratedAttribute]
internal bool get_AllowChange();
    [CompilerGeneratedAttribute]
internal void set_AllowChange(bool value);
    public virtual bool IsReadOnly();
    public OrganizationElement get_Organization();
    public XsdDuration get_CacheDuration();
    public Nullable`1<TimeSpan> get_ValidUntil();
    public ContactPersonsCollection get_Contacts();
    public RequestedAttributesCollection get_RequestedAttributes();
    public bool get_WantAssertionsSigned();
    internal void set_WantAssertionsSigned(bool value);
}
public class Sustainsys.Saml2.Configuration.NameIdPolicyElement : ConfigurationElement {
    [ConfigurationPropertyAttribute("allowCreate")]
public Nullable`1<bool> AllowCreate { get; }
    [ConfigurationPropertyAttribute("format")]
public NameIdFormat Format { get; }
    public Nullable`1<bool> get_AllowCreate();
    public NameIdFormat get_Format();
}
public class Sustainsys.Saml2.Configuration.Options : object {
    [CompilerGeneratedAttribute]
private Saml2Notifications <Notifications>k__BackingField;
    private static Lazy`1<Options> optionsFromConfiguration;
    [CompilerGeneratedAttribute]
private SPOptions <SPOptions>k__BackingField;
    private IdentityProviderDictionary identityProviders;
    public Saml2Notifications Notifications { get; public set; }
    public static Options FromConfiguration { get; }
    public SPOptions SPOptions { get; }
    public IdentityProviderDictionary IdentityProviders { get; }
    public Options(SPOptions spOptions);
    private static Options();
    [CompilerGeneratedAttribute]
public sealed virtual Saml2Notifications get_Notifications();
    [CompilerGeneratedAttribute]
public void set_Notifications(Saml2Notifications value);
    public static Options get_FromConfiguration();
    private static Options LoadOptionsFromConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual SPOptions get_SPOptions();
    public sealed virtual IdentityProviderDictionary get_IdentityProviders();
}
public class Sustainsys.Saml2.Configuration.OrganizationElement : ConfigurationElement {
    private bool allowConfigEdits;
    private static string name;
    private static string displayName;
    private static string url;
    private static string language;
    [ConfigurationPropertyAttribute("name")]
public string Name { get; public set; }
    [ConfigurationPropertyAttribute("displayName")]
public string DisplayName { get; public set; }
    [ConfigurationPropertyAttribute("url")]
public Uri Url { get; public set; }
    [ConfigurationPropertyAttribute("language")]
public string Language { get; }
    internal void AllowConfigEdits(bool allow);
    public virtual bool IsReadOnly();
    public string get_Name();
    public void set_Name(string value);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public Uri get_Url();
    public void set_Url(Uri value);
    public string get_Language();
}
public class Sustainsys.Saml2.Configuration.RequestedAttributeElement : ConfigurationElement {
    private static string name;
    private static string friendlyName;
    private static string nameFormat;
    private static string isRequired;
    [ConfigurationPropertyAttribute("name")]
public string Name { get; }
    [ConfigurationPropertyAttribute("friendlyName")]
public string FriendlyName { get; }
    [ConfigurationPropertyAttribute("nameFormat")]
public Uri NameFormat { get; }
    [ConfigurationPropertyAttribute("isRequired")]
public bool IsRequired { get; }
    public string get_Name();
    public string get_FriendlyName();
    public Uri get_NameFormat();
    public bool get_IsRequired();
}
public class Sustainsys.Saml2.Configuration.RequestedAttributesCollection : ConfigurationElementCollection {
    protected virtual ConfigurationElement CreateNewElement();
    protected virtual object GetElementKey(ConfigurationElement element);
    public sealed virtual IEnumerator`1<RequestedAttributeElement> GetEnumerator();
}
public class Sustainsys.Saml2.Configuration.RequestedAuthnContextElement : ConfigurationElement {
    [CompilerGeneratedAttribute]
private bool <AllowChange>k__BackingField;
    private static string classRef;
    private static string comparison;
    internal bool AllowChange { get; internal set; }
    [ConfigurationPropertyAttribute("classRef")]
public string AuthnContextClassRef { get; internal set; }
    [ConfigurationPropertyAttribute("comparison")]
public AuthnContextComparisonType Comparison { get; }
    [CompilerGeneratedAttribute]
internal bool get_AllowChange();
    [CompilerGeneratedAttribute]
internal void set_AllowChange(bool value);
    public virtual bool IsReadOnly();
    public string get_AuthnContextClassRef();
    internal void set_AuthnContextClassRef(string value);
    public AuthnContextComparisonType get_Comparison();
}
public class Sustainsys.Saml2.Configuration.Saml2Notifications : object {
    [CompilerGeneratedAttribute]
private Action`3<Saml2AuthenticationRequest, IdentityProvider, IDictionary`2<string, string>> <AuthenticationRequestCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`3<Saml2AuthenticationRequest, XDocument, Saml2BindingType> <AuthenticationRequestXmlCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<CommandResult, IDictionary`2<string, string>> <SignInCommandResultCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<EntityId, IDictionary`2<string, string>, IdentityProvider> <SelectIdentityProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, bool> <EmitSameSiteNone>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<HttpRequestData, StoredRequestState> <GetLogoutResponseState>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<HttpRequestData, Uri> <GetPublicOrigin>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<Saml2LogoutResponse, StoredRequestState, bool> <ProcessSingleLogoutResponseStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<HttpRequestData, Saml2Binding> <GetBinding>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<UnbindResult> <MessageUnbound>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<CommandResult, Saml2Response> <AcsCommandResultCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<CommandResult> <LogoutCommandResultCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`3<Saml2LogoutRequest, ClaimsPrincipal, IdentityProvider> <LogoutRequestCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`3<Saml2LogoutRequest, XDocument, Saml2BindingType> <LogoutRequestXmlCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`4<Saml2LogoutResponse, Saml2LogoutRequest, ClaimsPrincipal, IdentityProvider> <LogoutResponseCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`3<Saml2LogoutResponse, XDocument, Saml2BindingType> <LogoutResponseXmlCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<EntityDescriptor, Saml2Urls> <MetadataCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<CommandResult> <MetadataCommandResultCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<string, bool> <ValidateAbsoluteReturnUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`4<EntityId, IDictionary`2<string, string>, IOptions, IdentityProvider> <GetIdentityProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private UnsafeNotifications <Unsafe>k__BackingField;
    public Action`3<Saml2AuthenticationRequest, IdentityProvider, IDictionary`2<string, string>> AuthenticationRequestCreated { get; public set; }
    public Action`3<Saml2AuthenticationRequest, XDocument, Saml2BindingType> AuthenticationRequestXmlCreated { get; public set; }
    public Action`2<CommandResult, IDictionary`2<string, string>> SignInCommandResultCreated { get; public set; }
    public Func`3<EntityId, IDictionary`2<string, string>, IdentityProvider> SelectIdentityProvider { get; public set; }
    public Func`2<string, bool> EmitSameSiteNone { get; public set; }
    public Func`2<HttpRequestData, StoredRequestState> GetLogoutResponseState { get; public set; }
    public Func`2<HttpRequestData, Uri> GetPublicOrigin { get; public set; }
    public Func`3<Saml2LogoutResponse, StoredRequestState, bool> ProcessSingleLogoutResponseStatus { get; public set; }
    public Func`2<HttpRequestData, Saml2Binding> GetBinding { get; public set; }
    public Action`1<UnbindResult> MessageUnbound { get; public set; }
    public Action`2<CommandResult, Saml2Response> AcsCommandResultCreated { get; public set; }
    public Action`1<CommandResult> LogoutCommandResultCreated { get; public set; }
    public Action`3<Saml2LogoutRequest, ClaimsPrincipal, IdentityProvider> LogoutRequestCreated { get; public set; }
    public Action`3<Saml2LogoutRequest, XDocument, Saml2BindingType> LogoutRequestXmlCreated { get; public set; }
    public Action`4<Saml2LogoutResponse, Saml2LogoutRequest, ClaimsPrincipal, IdentityProvider> LogoutResponseCreated { get; public set; }
    public Action`3<Saml2LogoutResponse, XDocument, Saml2BindingType> LogoutResponseXmlCreated { get; public set; }
    public Action`2<EntityDescriptor, Saml2Urls> MetadataCreated { get; public set; }
    public Action`1<CommandResult> MetadataCommandResultCreated { get; public set; }
    public Func`2<string, bool> ValidateAbsoluteReturnUrl { get; public set; }
    public Func`4<EntityId, IDictionary`2<string, string>, IOptions, IdentityProvider> GetIdentityProvider { get; public set; }
    public UnsafeNotifications Unsafe { get; }
    [CompilerGeneratedAttribute]
public Action`3<Saml2AuthenticationRequest, IdentityProvider, IDictionary`2<string, string>> get_AuthenticationRequestCreated();
    [CompilerGeneratedAttribute]
public void set_AuthenticationRequestCreated(Action`3<Saml2AuthenticationRequest, IdentityProvider, IDictionary`2<string, string>> value);
    [CompilerGeneratedAttribute]
public Action`3<Saml2AuthenticationRequest, XDocument, Saml2BindingType> get_AuthenticationRequestXmlCreated();
    [CompilerGeneratedAttribute]
public void set_AuthenticationRequestXmlCreated(Action`3<Saml2AuthenticationRequest, XDocument, Saml2BindingType> value);
    [CompilerGeneratedAttribute]
public Action`2<CommandResult, IDictionary`2<string, string>> get_SignInCommandResultCreated();
    [CompilerGeneratedAttribute]
public void set_SignInCommandResultCreated(Action`2<CommandResult, IDictionary`2<string, string>> value);
    [CompilerGeneratedAttribute]
public Func`3<EntityId, IDictionary`2<string, string>, IdentityProvider> get_SelectIdentityProvider();
    [CompilerGeneratedAttribute]
public void set_SelectIdentityProvider(Func`3<EntityId, IDictionary`2<string, string>, IdentityProvider> value);
    [CompilerGeneratedAttribute]
public Func`2<string, bool> get_EmitSameSiteNone();
    [CompilerGeneratedAttribute]
public void set_EmitSameSiteNone(Func`2<string, bool> value);
    [CompilerGeneratedAttribute]
public Func`2<HttpRequestData, StoredRequestState> get_GetLogoutResponseState();
    [CompilerGeneratedAttribute]
public void set_GetLogoutResponseState(Func`2<HttpRequestData, StoredRequestState> value);
    [CompilerGeneratedAttribute]
public Func`2<HttpRequestData, Uri> get_GetPublicOrigin();
    [CompilerGeneratedAttribute]
public void set_GetPublicOrigin(Func`2<HttpRequestData, Uri> value);
    [CompilerGeneratedAttribute]
public Func`3<Saml2LogoutResponse, StoredRequestState, bool> get_ProcessSingleLogoutResponseStatus();
    [CompilerGeneratedAttribute]
public void set_ProcessSingleLogoutResponseStatus(Func`3<Saml2LogoutResponse, StoredRequestState, bool> value);
    [CompilerGeneratedAttribute]
public Func`2<HttpRequestData, Saml2Binding> get_GetBinding();
    [CompilerGeneratedAttribute]
public void set_GetBinding(Func`2<HttpRequestData, Saml2Binding> value);
    [CompilerGeneratedAttribute]
public Action`1<UnbindResult> get_MessageUnbound();
    [CompilerGeneratedAttribute]
public void set_MessageUnbound(Action`1<UnbindResult> value);
    [CompilerGeneratedAttribute]
public Action`2<CommandResult, Saml2Response> get_AcsCommandResultCreated();
    [CompilerGeneratedAttribute]
public void set_AcsCommandResultCreated(Action`2<CommandResult, Saml2Response> value);
    [CompilerGeneratedAttribute]
public Action`1<CommandResult> get_LogoutCommandResultCreated();
    [CompilerGeneratedAttribute]
public void set_LogoutCommandResultCreated(Action`1<CommandResult> value);
    [CompilerGeneratedAttribute]
public Action`3<Saml2LogoutRequest, ClaimsPrincipal, IdentityProvider> get_LogoutRequestCreated();
    [CompilerGeneratedAttribute]
public void set_LogoutRequestCreated(Action`3<Saml2LogoutRequest, ClaimsPrincipal, IdentityProvider> value);
    [CompilerGeneratedAttribute]
public Action`3<Saml2LogoutRequest, XDocument, Saml2BindingType> get_LogoutRequestXmlCreated();
    [CompilerGeneratedAttribute]
public void set_LogoutRequestXmlCreated(Action`3<Saml2LogoutRequest, XDocument, Saml2BindingType> value);
    [CompilerGeneratedAttribute]
public Action`4<Saml2LogoutResponse, Saml2LogoutRequest, ClaimsPrincipal, IdentityProvider> get_LogoutResponseCreated();
    [CompilerGeneratedAttribute]
public void set_LogoutResponseCreated(Action`4<Saml2LogoutResponse, Saml2LogoutRequest, ClaimsPrincipal, IdentityProvider> value);
    [CompilerGeneratedAttribute]
public Action`3<Saml2LogoutResponse, XDocument, Saml2BindingType> get_LogoutResponseXmlCreated();
    [CompilerGeneratedAttribute]
public void set_LogoutResponseXmlCreated(Action`3<Saml2LogoutResponse, XDocument, Saml2BindingType> value);
    [CompilerGeneratedAttribute]
public Action`2<EntityDescriptor, Saml2Urls> get_MetadataCreated();
    [CompilerGeneratedAttribute]
public void set_MetadataCreated(Action`2<EntityDescriptor, Saml2Urls> value);
    [CompilerGeneratedAttribute]
public Action`1<CommandResult> get_MetadataCommandResultCreated();
    [CompilerGeneratedAttribute]
public void set_MetadataCommandResultCreated(Action`1<CommandResult> value);
    [CompilerGeneratedAttribute]
public Func`2<string, bool> get_ValidateAbsoluteReturnUrl();
    [CompilerGeneratedAttribute]
public void set_ValidateAbsoluteReturnUrl(Func`2<string, bool> value);
    [CompilerGeneratedAttribute]
public Func`4<EntityId, IDictionary`2<string, string>, IOptions, IdentityProvider> get_GetIdentityProvider();
    [CompilerGeneratedAttribute]
public void set_GetIdentityProvider(Func`4<EntityId, IDictionary`2<string, string>, IOptions, IdentityProvider> value);
    [CompilerGeneratedAttribute]
public UnsafeNotifications get_Unsafe();
}
public class Sustainsys.Saml2.Configuration.ServiceCertificateCollection : Collection`1<ServiceCertificate> {
    public void Add(X509Certificate2 certificate);
    protected virtual void InsertItem(int index, ServiceCertificate item);
    private static bool CertificateWorksForDecryption(X509Certificate2 certificate);
}
public class Sustainsys.Saml2.Configuration.ServiceCertificateElement : CertificateElement {
    [ConfigurationPropertyAttribute("status")]
public CertificateStatus Status { get; }
    [ConfigurationPropertyAttribute("use")]
public CertificateUse Use { get; }
    [ConfigurationPropertyAttribute("metadataPublishOverride")]
public MetadataPublishOverrideType MetadataPublishOverride { get; }
    public CertificateStatus get_Status();
    public CertificateUse get_Use();
    public MetadataPublishOverrideType get_MetadataPublishOverride();
}
public class Sustainsys.Saml2.Configuration.ServiceCertificateElementCollection : ConfigurationElementCollection {
    protected virtual ConfigurationElement CreateNewElement();
    protected virtual object GetElementKey(ConfigurationElement element);
    public sealed virtual IEnumerator`1<ServiceCertificateElement> GetEnumerator();
    public void RegisterServiceCertificates(SPOptions options);
}
public enum Sustainsys.Saml2.Configuration.SigningBehavior : Enum {
    public int value__;
    public static SigningBehavior IfIdpWantAuthnRequestsSigned;
    public static SigningBehavior Always;
    public static SigningBehavior Never;
}
public class Sustainsys.Saml2.Configuration.SPOptions : object {
    [CompilerGeneratedAttribute]
private Uri <ReturnUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private XsdDuration <MetadataCacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <MetadataValidDuration>k__BackingField;
    private Saml2PSecurityTokenHandler modreq(System.Runtime.CompilerServices.IsVolatile) saml2PSecurityTokenHandler;
    [CompilerGeneratedAttribute]
private Uri <DiscoveryServiceUrl>k__BackingField;
    private EntityId entityId;
    private string modulePath;
    [CompilerGeneratedAttribute]
private Uri <PublicOrigin>k__BackingField;
    [CompilerGeneratedAttribute]
private Organization <Organization>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2NameIdPolicy <NameIdPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2RequestedAuthnContext <RequestedAuthnContext>k__BackingField;
    private ICollection`1<ContactPerson> contacts;
    private ICollection`1<AttributeConsumingService> attributeConsumingServices;
    private ServiceCertificateCollection serviceCertificates;
    [CompilerGeneratedAttribute]
private SigningBehavior <AuthenticateRequestSigningBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutboundSigningAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WantAssertionsSigned>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateCertificates>k__BackingField;
    [CompilerGeneratedAttribute]
private Compatibility <Compatibility>k__BackingField;
    private string minIncomingSigningAlgorithm;
    [CompilerGeneratedAttribute]
private ILoggerAdapter <Logger>k__BackingField;
    private ITokenReplayCache tokenReplayCache;
    [CompilerGeneratedAttribute]
private TokenValidationParameters <TokenValidationParametersTemplate>k__BackingField;
    public Uri ReturnUrl { get; public set; }
    public XsdDuration MetadataCacheDuration { get; public set; }
    public Nullable`1<TimeSpan> MetadataValidDuration { get; public set; }
    public Saml2PSecurityTokenHandler Saml2PSecurityTokenHandler { get; public set; }
    public Uri DiscoveryServiceUrl { get; public set; }
    public EntityId EntityId { get; public set; }
    public string ModulePath { get; public set; }
    public Uri PublicOrigin { get; public set; }
    public Organization Organization { get; public set; }
    public Saml2NameIdPolicy NameIdPolicy { get; public set; }
    public Saml2RequestedAuthnContext RequestedAuthnContext { get; public set; }
    public ICollection`1<ContactPerson> Contacts { get; }
    public ICollection`1<AttributeConsumingService> AttributeConsumingServices { get; }
    public ServiceCertificateCollection ServiceCertificates { get; }
    public ReadOnlyCollection`1<X509Certificate2> DecryptionServiceCertificates { get; }
    public X509Certificate2 SigningServiceCertificate { get; }
    public ReadOnlyCollection`1<ServiceCertificate> MetadataCertificates { get; }
    private IEnumerable`1<ServiceCertificate> PublishableServiceCertificates { get; }
    public SigningBehavior AuthenticateRequestSigningBehavior { get; public set; }
    public string OutboundSigningAlgorithm { get; public set; }
    public bool WantAssertionsSigned { get; public set; }
    public bool ValidateCertificates { get; public set; }
    public Compatibility Compatibility { get; public set; }
    public string MinIncomingSigningAlgorithm { get; public set; }
    public ILoggerAdapter Logger { get; public set; }
    public ITokenReplayCache TokenReplayCache { get; public set; }
    public TokenValidationParameters TokenValidationParametersTemplate { get; }
    public SPOptions(SustainsysSaml2Section configSection);
    [CompilerGeneratedAttribute]
public Uri get_ReturnUrl();
    [CompilerGeneratedAttribute]
public void set_ReturnUrl(Uri value);
    [CompilerGeneratedAttribute]
public XsdDuration get_MetadataCacheDuration();
    [CompilerGeneratedAttribute]
public void set_MetadataCacheDuration(XsdDuration value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_MetadataValidDuration();
    [CompilerGeneratedAttribute]
public void set_MetadataValidDuration(Nullable`1<TimeSpan> value);
    public Saml2PSecurityTokenHandler get_Saml2PSecurityTokenHandler();
    public void set_Saml2PSecurityTokenHandler(Saml2PSecurityTokenHandler value);
    [CompilerGeneratedAttribute]
public Uri get_DiscoveryServiceUrl();
    [CompilerGeneratedAttribute]
public void set_DiscoveryServiceUrl(Uri value);
    public EntityId get_EntityId();
    public void set_EntityId(EntityId value);
    public string get_ModulePath();
    public void set_ModulePath(string value);
    [CompilerGeneratedAttribute]
public Uri get_PublicOrigin();
    [CompilerGeneratedAttribute]
public void set_PublicOrigin(Uri value);
    [CompilerGeneratedAttribute]
public Organization get_Organization();
    [CompilerGeneratedAttribute]
public void set_Organization(Organization value);
    [CompilerGeneratedAttribute]
public Saml2NameIdPolicy get_NameIdPolicy();
    [CompilerGeneratedAttribute]
public void set_NameIdPolicy(Saml2NameIdPolicy value);
    [CompilerGeneratedAttribute]
public Saml2RequestedAuthnContext get_RequestedAuthnContext();
    [CompilerGeneratedAttribute]
public void set_RequestedAuthnContext(Saml2RequestedAuthnContext value);
    public ICollection`1<ContactPerson> get_Contacts();
    public ICollection`1<AttributeConsumingService> get_AttributeConsumingServices();
    public ServiceCertificateCollection get_ServiceCertificates();
    public ReadOnlyCollection`1<X509Certificate2> get_DecryptionServiceCertificates();
    public X509Certificate2 get_SigningServiceCertificate();
    public ReadOnlyCollection`1<ServiceCertificate> get_MetadataCertificates();
    private static CertificateUse ConvertUse(CertificateUse certificateUse);
    private IEnumerable`1<ServiceCertificate> get_PublishableServiceCertificates();
    [CompilerGeneratedAttribute]
public SigningBehavior get_AuthenticateRequestSigningBehavior();
    [CompilerGeneratedAttribute]
public void set_AuthenticateRequestSigningBehavior(SigningBehavior value);
    [CompilerGeneratedAttribute]
public string get_OutboundSigningAlgorithm();
    [CompilerGeneratedAttribute]
public void set_OutboundSigningAlgorithm(string value);
    [CompilerGeneratedAttribute]
public bool get_WantAssertionsSigned();
    [CompilerGeneratedAttribute]
public void set_WantAssertionsSigned(bool value);
    [CompilerGeneratedAttribute]
public bool get_ValidateCertificates();
    [CompilerGeneratedAttribute]
public void set_ValidateCertificates(bool value);
    [CompilerGeneratedAttribute]
public Compatibility get_Compatibility();
    [CompilerGeneratedAttribute]
public void set_Compatibility(Compatibility value);
    public string get_MinIncomingSigningAlgorithm();
    public void set_MinIncomingSigningAlgorithm(string value);
    [CompilerGeneratedAttribute]
public ILoggerAdapter get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILoggerAdapter value);
    public ITokenReplayCache get_TokenReplayCache();
    public void set_TokenReplayCache(ITokenReplayCache value);
    [CompilerGeneratedAttribute]
public TokenValidationParameters get_TokenValidationParametersTemplate();
}
public class Sustainsys.Saml2.Configuration.SustainsysSaml2Section : ConfigurationSection {
    private static Configuration configuration;
    private static SustainsysSaml2Section current;
    [CompilerGeneratedAttribute]
private bool <AllowChange>k__BackingField;
    private static string discoveryServiceUrl;
    private static string modulePath;
    private static string nameIdPolicy;
    private static string requestedAuthnContext;
    internal Organization organization;
    private static string metadata;
    private IEnumerable`1<ContactPerson> contacts;
    private static string serviceCertificates;
    private static string authenticateRequestSigningBehavior;
    private static string outboundSigningAlgorithm;
    private static string minIncomingSigningAlgorithm;
    private static string validateCertificates;
    private static string compatibility;
    public static Configuration Configuration { get; public set; }
    internal bool AllowChange { get; internal set; }
    public static SustainsysSaml2Section Current { get; }
    [TypeConverterAttribute("Sustainsys.Saml2.Configuration.EntityIdConverter")]
[ConfigurationPropertyAttribute("entityId")]
public EntityId EntityId { get; }
    [ConfigurationPropertyAttribute("returnUrl")]
public Uri ReturnUrl { get; }
    [ConfigurationPropertyAttribute("publicOrigin")]
public Uri PublicOrigin { get; }
    [ConfigurationPropertyAttribute("identityProviders")]
[ConfigurationCollectionAttribute("Sustainsys.Saml2.Configuration.IdentityProviderCollection")]
public IdentityProviderCollection IdentityProviders { get; }
    [ConfigurationPropertyAttribute("federations")]
[ConfigurationCollectionAttribute("Sustainsys.Saml2.Configuration.FederationCollection")]
public FederationCollection Federations { get; }
    [ConfigurationPropertyAttribute("discoveryServiceUrl")]
public Uri DiscoveryServiceUrl { get; }
    [ConfigurationPropertyAttribute("modulePath")]
[RegexStringValidatorAttribute("/.*")]
public string ModulePath { get; }
    [ConfigurationPropertyAttribute("nameIdPolicy")]
public NameIdPolicyElement NameIdPolicyElement { get; }
    [ConfigurationPropertyAttribute("requestedAuthnContext")]
public RequestedAuthnContextElement RequestedAuthnContext { get; }
    public Organization Organization { get; }
    [ConfigurationPropertyAttribute("metadata")]
public MetadataElement Metadata { get; internal set; }
    public IEnumerable`1<ContactPerson> Contacts { get; }
    public IEnumerable`1<AttributeConsumingService> AttributeConsumingServices { get; }
    [ConfigurationPropertyAttribute("serviceCertificates")]
[ConfigurationCollectionAttribute("Sustainsys.Saml2.Configuration.ServiceCertificateElementCollection")]
public ServiceCertificateElementCollection ServiceCertificates { get; }
    [ConfigurationPropertyAttribute("authenticateRequestSigningBehavior")]
public SigningBehavior AuthenticateRequestSigningBehavior { get; internal set; }
    [ConfigurationPropertyAttribute("outboundSigningAlgorithm")]
public string OutboundSigningAlgorithm { get; }
    [ConfigurationPropertyAttribute("minIncomingSigningAlgorithm")]
public string MinIncomingSigningAlgorithm { get; }
    [ConfigurationPropertyAttribute("validateCertificates")]
public bool ValidateCertificates { get; internal set; }
    [ConfigurationPropertyAttribute("compatibility")]
public CompatibilityElement Compatibility { get; }
    private static SustainsysSaml2Section();
    public static Configuration get_Configuration();
    public static void set_Configuration(Configuration value);
    [CompilerGeneratedAttribute]
internal bool get_AllowChange();
    [CompilerGeneratedAttribute]
internal void set_AllowChange(bool value);
    public virtual bool IsReadOnly();
    public static SustainsysSaml2Section get_Current();
    public EntityId get_EntityId();
    public Uri get_ReturnUrl();
    public Uri get_PublicOrigin();
    public IdentityProviderCollection get_IdentityProviders();
    public FederationCollection get_Federations();
    public Uri get_DiscoveryServiceUrl();
    public string get_ModulePath();
    public NameIdPolicyElement get_NameIdPolicyElement();
    public RequestedAuthnContextElement get_RequestedAuthnContext();
    public Organization get_Organization();
    public MetadataElement get_Metadata();
    internal void set_Metadata(MetadataElement value);
    public IEnumerable`1<ContactPerson> get_Contacts();
    [IteratorStateMachineAttribute("Sustainsys.Saml2.Configuration.SustainsysSaml2Section/<get_AttributeConsumingServices>d__45")]
public IEnumerable`1<AttributeConsumingService> get_AttributeConsumingServices();
    public ServiceCertificateElementCollection get_ServiceCertificates();
    public SigningBehavior get_AuthenticateRequestSigningBehavior();
    internal void set_AuthenticateRequestSigningBehavior(SigningBehavior value);
    public string get_OutboundSigningAlgorithm();
    public string get_MinIncomingSigningAlgorithm();
    public bool get_ValidateCertificates();
    internal void set_ValidateCertificates(bool value);
    public CompatibilityElement get_Compatibility();
}
public class Sustainsys.Saml2.Configuration.TokenReplayDetectionElement : ConfigurationElement {
    [ConfigurationPropertyAttribute("enabled")]
public bool Enabled { get; public set; }
    [ConfigurationPropertyAttribute("expirationPeriod")]
public TimeSpan ExpirationPeriod { get; public set; }
    public bool get_Enabled();
    public void set_Enabled(bool value);
    public TimeSpan get_ExpirationPeriod();
    public void set_ExpirationPeriod(TimeSpan value);
}
public class Sustainsys.Saml2.Configuration.XsdDurationConverter : TypeConverter {
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.DateTimeExtensions : object {
    [ExtensionAttribute]
public static string ToSaml2DateTimeString(DateTime dateTime);
}
public class Sustainsys.Saml2.Exceptions.BadFormatSamlResponseException : Saml2Exception {
    public BadFormatSamlResponseException(string message);
    public BadFormatSamlResponseException(string message, Exception innerException);
    protected BadFormatSamlResponseException(SerializationInfo info, StreamingContext context);
}
public class Sustainsys.Saml2.Exceptions.InvalidSignatureException : Saml2Exception {
    public InvalidSignatureException(string message);
    public InvalidSignatureException(string message, Exception innerException);
    protected InvalidSignatureException(SerializationInfo info, StreamingContext context);
}
public class Sustainsys.Saml2.Exceptions.NoSamlResponseFoundException : Saml2Exception {
    public NoSamlResponseFoundException(string message);
    public NoSamlResponseFoundException(string message, Exception innerException);
    protected NoSamlResponseFoundException(SerializationInfo info, StreamingContext context);
}
public abstract class Sustainsys.Saml2.Exceptions.Saml2Exception : Exception {
    protected Saml2Exception(string message);
    protected Saml2Exception(string message, Exception innerException);
    protected Saml2Exception(SerializationInfo info, StreamingContext context);
}
public class Sustainsys.Saml2.Exceptions.Saml2ResponseFailedValidationException : Saml2Exception {
    public Saml2ResponseFailedValidationException(string message);
    public Saml2ResponseFailedValidationException(string message, Exception innerException);
    protected Saml2ResponseFailedValidationException(SerializationInfo info, StreamingContext context);
}
public class Sustainsys.Saml2.Exceptions.UnexpectedInResponseToException : Saml2ResponseFailedValidationException {
    public UnexpectedInResponseToException(string message);
    public UnexpectedInResponseToException(string message, Exception innerException);
    protected UnexpectedInResponseToException(SerializationInfo info, StreamingContext context);
}
public class Sustainsys.Saml2.Exceptions.UnsuccessfulSamlOperationException : Saml2Exception {
    [CompilerGeneratedAttribute]
private Saml2StatusCode <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecondLevelStatus>k__BackingField;
    public Saml2StatusCode Status { get; public set; }
    public string StatusMessage { get; public set; }
    public string SecondLevelStatus { get; public set; }
    public UnsuccessfulSamlOperationException(string message, Saml2StatusCode statusCode, string statusMessage, string secondLevelStatus);
    public UnsuccessfulSamlOperationException(string message);
    public UnsuccessfulSamlOperationException(string message, Exception innerException);
    protected UnsuccessfulSamlOperationException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public Saml2StatusCode get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Saml2StatusCode value);
    [CompilerGeneratedAttribute]
public string get_StatusMessage();
    [CompilerGeneratedAttribute]
public void set_StatusMessage(string value);
    [CompilerGeneratedAttribute]
public string get_SecondLevelStatus();
    [CompilerGeneratedAttribute]
public void set_SecondLevelStatus(string value);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class Sustainsys.Saml2.Federation : object {
    internal bool allowUnsolicitedAuthnResponse;
    internal string metadataLocation;
    private IOptions options;
    private object metadataLoadLock;
    [CompilerGeneratedAttribute]
private Exception <LastMetadataLoadException>k__BackingField;
    private IDictionary`2<string, EntityId> registeredIdentityProviders;
    private DateTime metadataValidUntil;
    [CompilerGeneratedAttribute]
private IList`1<SecurityKeyIdentifierClause> <SigningKeys>k__BackingField;
    internal Exception LastMetadataLoadException { get; private set; }
    public DateTime MetadataValidUntil { get; private set; }
    public IList`1<SecurityKeyIdentifierClause> SigningKeys { get; private set; }
    public Federation(FederationElement config, IOptions options);
    public Federation(string metadataLocation, bool allowUnsolicitedAuthnResponse, IOptions options);
    public Federation(string metadataLocation, bool allowUnsolicitedAuthnResponse, IOptions options, IEnumerable`1<X509Certificate2> signingKeys);
    public Federation(string metadataLocation, bool allowUnsolicitedAuthnResponse, IOptions options, IEnumerable`1<SecurityKeyIdentifierClause> signingKeys);
    private void Init(string metadataLocation, bool allowUnsolicitedAuthnResponse, IOptions options, IEnumerable`1<SecurityKeyIdentifierClause> signingKeys);
    private void LoadMetadata();
    [CompilerGeneratedAttribute]
internal Exception get_LastMetadataLoadException();
    [CompilerGeneratedAttribute]
private void set_LastMetadataLoadException(Exception value);
    private void RegisterIdentityProviders(List`1<IdentityProvider> identityProviders);
    private void RemoveAllRegisteredIdentityProviders();
    public DateTime get_MetadataValidUntil();
    private void set_MetadataValidUntil(DateTime value);
    [CompilerGeneratedAttribute]
public IList`1<SecurityKeyIdentifierClause> get_SigningKeys();
    [CompilerGeneratedAttribute]
private void set_SigningKeys(IList`1<SecurityKeyIdentifierClause> value);
    private void ScheduleMetadataReload();
    [CompilerGeneratedAttribute]
private void <ScheduleMetadataReload>b__25_0(Task _);
}
internal interface Sustainsys.Saml2.ICachedMetadata {
    public Nullable`1<XsdDuration> CacheDuration { get; public set; }
    public Nullable`1<DateTime> ValidUntil { get; public set; }
    public abstract virtual Nullable`1<XsdDuration> get_CacheDuration();
    public abstract virtual void set_CacheDuration(Nullable`1<XsdDuration> value);
    public abstract virtual Nullable`1<DateTime> get_ValidUntil();
    public abstract virtual void set_ValidUntil(Nullable`1<DateTime> value);
}
public class Sustainsys.Saml2.IdentityProvider : object {
    private SPOptions spOptions;
    private bool loadMetadata;
    private Saml2BindingType binding;
    private Uri singleSignOnServiceUrl;
    private IDictionary`2<int, Uri> artifactResolutionServiceUrls;
    private Uri singleLogoutServiceUrl;
    private Uri singleLogoutServiceResponseUrl;
    private Saml2BindingType singleLogoutServiceBinding;
    [CompilerGeneratedAttribute]
private EntityId <EntityId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowUnsolicitedAuthnResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RelayStateUsedAsReturnUrl>k__BackingField;
    private string metadataLocation;
    [CompilerGeneratedAttribute]
private string <OutboundSigningAlgorithm>k__BackingField;
    private ConfiguredAndLoadedSigningKeysCollection signingKeys;
    private object metadataLoadLock;
    private Nullable`1<DateTime> metadataValidUntil;
    [CompilerGeneratedAttribute]
private bool <WantAuthnRequestsSigned>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableOutboundLogoutRequests>k__BackingField;
    public bool LoadMetadata { get; public set; }
    public Saml2BindingType Binding { get; public set; }
    public Uri SingleSignOnServiceUrl { get; public set; }
    public IDictionary`2<int, Uri> ArtifactResolutionServiceUrls { get; }
    public Uri SingleLogoutServiceUrl { get; public set; }
    public Uri SingleLogoutServiceResponseUrl { get; public set; }
    public Saml2BindingType SingleLogoutServiceBinding { get; public set; }
    public EntityId EntityId { get; private set; }
    public bool AllowUnsolicitedAuthnResponse { get; public set; }
    public bool RelayStateUsedAsReturnUrl { get; public set; }
    public string MetadataLocation { get; public set; }
    public string OutboundSigningAlgorithm { get; public set; }
    public ConfiguredAndLoadedSigningKeysCollection SigningKeys { get; }
    public Nullable`1<DateTime> MetadataValidUntil { get; private set; }
    public bool WantAuthnRequestsSigned { get; public set; }
    public bool DisableOutboundLogoutRequests { get; public set; }
    public IdentityProvider(EntityId entityId, SPOptions spOptions);
    internal IdentityProvider(IdentityProviderElement config, SPOptions spOptions);
    private void Validate();
    public bool get_LoadMetadata();
    public void set_LoadMetadata(bool value);
    public Saml2BindingType get_Binding();
    public void set_Binding(Saml2BindingType value);
    public Uri get_SingleSignOnServiceUrl();
    public void set_SingleSignOnServiceUrl(Uri value);
    public IDictionary`2<int, Uri> get_ArtifactResolutionServiceUrls();
    public Uri get_SingleLogoutServiceUrl();
    public void set_SingleLogoutServiceUrl(Uri value);
    public Uri get_SingleLogoutServiceResponseUrl();
    public void set_SingleLogoutServiceResponseUrl(Uri value);
    public Saml2BindingType get_SingleLogoutServiceBinding();
    public void set_SingleLogoutServiceBinding(Saml2BindingType value);
    [CompilerGeneratedAttribute]
public EntityId get_EntityId();
    [CompilerGeneratedAttribute]
private void set_EntityId(EntityId value);
    [CompilerGeneratedAttribute]
public bool get_AllowUnsolicitedAuthnResponse();
    [CompilerGeneratedAttribute]
public void set_AllowUnsolicitedAuthnResponse(bool value);
    [CompilerGeneratedAttribute]
public bool get_RelayStateUsedAsReturnUrl();
    [CompilerGeneratedAttribute]
public void set_RelayStateUsedAsReturnUrl(bool value);
    public string get_MetadataLocation();
    public void set_MetadataLocation(string value);
    public Saml2AuthenticationRequest CreateAuthenticateRequest(Saml2Urls saml2Urls);
    [CompilerGeneratedAttribute]
public string get_OutboundSigningAlgorithm();
    [CompilerGeneratedAttribute]
public void set_OutboundSigningAlgorithm(string value);
    public CommandResult Bind(ISaml2Message request);
    public CommandResult Bind(TMessage message, Action`3<TMessage, XDocument, Saml2BindingType> xmlCreatedNotification);
    public ConfiguredAndLoadedSigningKeysCollection get_SigningKeys();
    private void DoLoadMetadata();
    public void ReadMetadata(EntityDescriptor metadata);
    private void ReadMetadataIdpDescriptor(EntityDescriptor metadata);
    private static T GetPreferredEndpoint(ICollection`1<T> endpoints);
    public Nullable`1<DateTime> get_MetadataValidUntil();
    private void set_MetadataValidUntil(Nullable`1<DateTime> value);
    private void ScheduleMetadataRefresh();
    [ExcludeFromCodeCoverageAttribute]
private static void DoLoadMetadataIfTargetAlive(WeakReference`1<IdentityProvider> target);
    [CompilerGeneratedAttribute]
public bool get_WantAuthnRequestsSigned();
    [CompilerGeneratedAttribute]
public void set_WantAuthnRequestsSigned(bool value);
    private void ReloadMetadataIfRequired();
    public Saml2LogoutRequest CreateLogoutRequest(ClaimsPrincipal user);
    [CompilerGeneratedAttribute]
public bool get_DisableOutboundLogoutRequests();
    [CompilerGeneratedAttribute]
public void set_DisableOutboundLogoutRequests(bool value);
}
public interface Sustainsys.Saml2.ILoggerAdapter {
    public abstract virtual void WriteInformation(string message);
    public abstract virtual void WriteError(string message, Exception ex);
    public abstract virtual void WriteVerbose(string message);
}
internal class Sustainsys.Saml2.Internal.ClientCertificateWebClient : WebClient {
    private IEnumerable`1<X509Certificate2> certificates;
    public ClientCertificateWebClient(IEnumerable`1<X509Certificate2> certificates);
    protected virtual WebRequest GetWebRequest(Uri address);
}
internal static class Sustainsys.Saml2.Internal.CompareHelper : object {
    public static bool ByteArraysEqual(Byte[] a, Byte[] b);
}
[ExtensionAttribute]
internal static class Sustainsys.Saml2.Internal.CryptographyExtensions : object {
    private static Dictionary`2<string, Type> s_extraAlgorithms;
    private static CryptographyExtensions();
    [ExtensionAttribute]
internal static void Encrypt(XmlElement elementToEncrypt, EncryptingCredentials encryptingCredentials);
    [ExtensionAttribute]
internal static void Encrypt(XmlElement elementToEncrypt, bool useOaep, X509Certificate2 certificate);
    [IteratorStateMachineAttribute("Sustainsys.Saml2.Internal.CryptographyExtensions/<Decrypt>d__2")]
[ExtensionAttribute]
internal static IEnumerable`1<XmlElement> Decrypt(IEnumerable`1<XmlElement> elements, AsymmetricAlgorithm key);
    [ExtensionAttribute]
internal static XmlElement Decrypt(XmlElement element, AsymmetricAlgorithm key);
    [ExtensionAttribute]
internal static AsymmetricAlgorithm GetSha256EnabledAsymmetricAlgorithm(X509Certificate2 x509Certificate2);
    [ExtensionAttribute]
internal static RSA GetSha256EnabledRSACryptoServiceProvider(RSA rsa);
    [ExcludeFromCodeCoverageAttribute]
private static void SetMachineKeyFlag(RSACryptoServiceProvider provider, CspParameters cspParams);
    public static object CreateAlgorithmFromName(string name, Object[] args);
}
internal static class Sustainsys.Saml2.Internal.DateTimeHelper : object {
    internal static Nullable`1<DateTime> EarliestTime(Nullable`1<DateTime> value1, Nullable`1<DateTime> value2);
}
internal static class Sustainsys.Saml2.Internal.DelimitedString : object {
    private static string DelimiterString;
    private static char DelimiterChar;
    private static char EscapeChar;
    private static string EscapeString;
    public static string Join(String[] strings);
    public static String[] Split(string source);
    private static string UnEscapeString(string src);
}
[ExtensionAttribute]
internal static class Sustainsys.Saml2.Internal.DictionaryExtensions : object {
    [ExtensionAttribute]
public static string GetValueOrEmpty(IDictionary`2<T, string> dictionary, T key);
}
internal class Sustainsys.Saml2.Internal.EntityIdEqualityComparer : object {
    private static EntityIdEqualityComparer instance;
    public static EntityIdEqualityComparer Instance { get; }
    private static EntityIdEqualityComparer();
    public static EntityIdEqualityComparer get_Instance();
    public sealed virtual bool Equals(EntityId x, EntityId y);
    public sealed virtual int GetHashCode(EntityId obj);
}
[ExtensionAttribute]
internal static class Sustainsys.Saml2.Internal.Enumerator : object {
    [ExtensionAttribute]
public static IEnumerator`1<T> AsGeneric(IEnumerator source);
}
public class Sustainsys.Saml2.Internal.EnvironmentHelpers : object {
    public static bool IsNetCore { get; }
    public static bool get_IsNetCore();
}
internal static class Sustainsys.Saml2.Internal.PathHelper : object {
    public static string BasePath { get; }
    public static string get_BasePath();
    public static string MapPath(string virtualPath);
    public static bool IsWebRootRelative(string virtualPath);
    public static bool IsLocalWebUrl(string url);
}
internal static class Sustainsys.Saml2.Internal.QueryStringHelper : object {
    public static ILookup`2<string, string> ParseQueryString(string queryString);
}
internal class Sustainsys.Saml2.Internal.RSAEncryptedXml : EncryptedXml {
    private RSA privateKey;
    internal static string AesGcm128Identifier;
    internal static int AesGcm128NonceSizeInBits;
    public RSAEncryptedXml(XmlDocument document, RSA rsaKey);
    [ExcludeFromCodeCoverageAttribute]
public virtual Byte[] DecryptEncryptedKey(EncryptedKey encryptedKey);
    public virtual Byte[] GetDecryptionIV(EncryptedData encryptedData, string symmetricAlgorithmUri);
    private static bool IsAes(string uri);
    public virtual SymmetricAlgorithm GetDecryptionKey(EncryptedData encryptedData, string symmetricAlgorithmUri);
}
internal static class Sustainsys.Saml2.Internal.StatusCodeHelper : object {
    private static IDictionary`2<string, Saml2StatusCode> fromString;
    private static IDictionary`2<Saml2StatusCode, string> fromCode;
    private static StatusCodeHelper();
    public static Saml2StatusCode FromString(string statusString);
    public static string FromCode(Saml2StatusCode statusCode);
}
[ExtensionAttribute]
internal static class Sustainsys.Saml2.Internal.StringHelpers : object {
    [ExtensionAttribute]
public static string NullIfEmpty(string source);
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.Internal.TokenValidationParametersExtensions : object {
    private static PropertyInfo requireAudienceProperty;
    private static TokenValidationParametersExtensions();
    [ExtensionAttribute]
public static TokenValidationParameters SetRequireAudience(TokenValidationParameters tokenValidationParameters, bool value);
}
[ExtensionAttribute]
internal static class Sustainsys.Saml2.Internal.UriExtensions : object {
    [ExtensionAttribute]
public static bool IsHttps(Uri uri);
}
[ExtensionAttribute]
internal static class Sustainsys.Saml2.Internal.XDocumentExtensions : object {
    [ExtensionAttribute]
public static string ToStringWithXmlDeclaration(XDocument xDocument);
}
public class Sustainsys.Saml2.ManagedRSASHA256SignatureDescription : ManagedRSASignatureDescription {
    public string HashAlgorithm { get; }
    public virtual string get_HashAlgorithm();
}
public class Sustainsys.Saml2.ManagedRSASHA384SignatureDescription : ManagedRSASignatureDescription {
    public string HashAlgorithm { get; }
    public virtual string get_HashAlgorithm();
}
public class Sustainsys.Saml2.ManagedRSASHA512SignatureDescription : ManagedRSASignatureDescription {
    public string HashAlgorithm { get; }
    public virtual string get_HashAlgorithm();
}
public abstract class Sustainsys.Saml2.ManagedRSASignatureDescription : SignatureDescription {
    public string HashAlgorithm { get; }
    public abstract virtual string get_HashAlgorithm();
    public virtual AsymmetricSignatureDeformatter CreateDeformatter(AsymmetricAlgorithm key);
    public virtual AsymmetricSignatureFormatter CreateFormatter(AsymmetricAlgorithm key);
}
public class Sustainsys.Saml2.Metadata.AdditionalMetadataLocation : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    public Uri Uri { get; public set; }
    public string Namespace { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
}
public class Sustainsys.Saml2.Metadata.AffiliationDescriptor : object {
    [CompilerGeneratedAttribute]
private ICollection`1<EntityId> <AffiliateMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<XmlElement> <Extensions>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<KeyDescriptor> <KeyDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private EntityId <AffiliationOwnerId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ValidUntil>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<XsdDuration> <CacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public ICollection`1<EntityId> AffiliateMembers { get; private set; }
    public ICollection`1<XmlElement> Extensions { get; private set; }
    public ICollection`1<KeyDescriptor> KeyDescriptors { get; private set; }
    public EntityId AffiliationOwnerId { get; public set; }
    public Nullable`1<DateTime> ValidUntil { get; public set; }
    public Nullable`1<XsdDuration> CacheDuration { get; public set; }
    public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<EntityId> get_AffiliateMembers();
    [CompilerGeneratedAttribute]
private void set_AffiliateMembers(ICollection`1<EntityId> value);
    [CompilerGeneratedAttribute]
public ICollection`1<XmlElement> get_Extensions();
    [CompilerGeneratedAttribute]
private void set_Extensions(ICollection`1<XmlElement> value);
    [CompilerGeneratedAttribute]
public ICollection`1<KeyDescriptor> get_KeyDescriptors();
    [CompilerGeneratedAttribute]
private void set_KeyDescriptors(ICollection`1<KeyDescriptor> value);
    [CompilerGeneratedAttribute]
public EntityId get_AffiliationOwnerId();
    [CompilerGeneratedAttribute]
public void set_AffiliationOwnerId(EntityId value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_ValidUntil();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ValidUntil(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<XsdDuration> get_CacheDuration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CacheDuration(Nullable`1<XsdDuration> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public class Sustainsys.Saml2.Metadata.ApplicationServiceDescriptor : WebServiceDescriptor {
    [CompilerGeneratedAttribute]
private ICollection`1<EndpointReference> <Endpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<EndpointReference> <PassiveRequestorEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<EndpointReference> <SingleSignOutEndpoints>k__BackingField;
    public ICollection`1<EndpointReference> Endpoints { get; private set; }
    public ICollection`1<EndpointReference> PassiveRequestorEndpoints { get; private set; }
    public ICollection`1<EndpointReference> SingleSignOutEndpoints { get; private set; }
    public ApplicationServiceDescriptor(IEnumerable`1<EndpointReference> endpoints, IEnumerable`1<EndpointReference> passiveRequestorEndpoints, IEnumerable`1<EndpointReference> singleSignOutEndpoints);
    [CompilerGeneratedAttribute]
public ICollection`1<EndpointReference> get_Endpoints();
    [CompilerGeneratedAttribute]
private void set_Endpoints(ICollection`1<EndpointReference> value);
    [CompilerGeneratedAttribute]
public ICollection`1<EndpointReference> get_PassiveRequestorEndpoints();
    [CompilerGeneratedAttribute]
private void set_PassiveRequestorEndpoints(ICollection`1<EndpointReference> value);
    [CompilerGeneratedAttribute]
public ICollection`1<EndpointReference> get_SingleSignOutEndpoints();
    [CompilerGeneratedAttribute]
private void set_SingleSignOutEndpoints(ICollection`1<EndpointReference> value);
}
public class Sustainsys.Saml2.Metadata.ApplicationServiceEndpoint : Endpoint {
}
public class Sustainsys.Saml2.Metadata.ArtifactResolutionService : IndexedEndpoint {
}
public class Sustainsys.Saml2.Metadata.AssertionConsumerService : IndexedEndpoint {
}
public class Sustainsys.Saml2.Metadata.AssertionIdRequestService : Endpoint {
}
public class Sustainsys.Saml2.Metadata.AttributeAuthorityDescriptor : RoleDescriptor {
    [CompilerGeneratedAttribute]
private ICollection`1<AttributeService> <AttributeServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<AssertionIdRequestService> <AssertionIdRequestServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<NameIDFormat> <NameIDFormats>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<AttributeProfile> <AttributeProfiles>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Saml2Attribute> <Attributes>k__BackingField;
    public ICollection`1<AttributeService> AttributeServices { get; private set; }
    public ICollection`1<AssertionIdRequestService> AssertionIdRequestServices { get; private set; }
    public ICollection`1<NameIDFormat> NameIDFormats { get; private set; }
    public ICollection`1<AttributeProfile> AttributeProfiles { get; private set; }
    public ICollection`1<Saml2Attribute> Attributes { get; private set; }
    [CompilerGeneratedAttribute]
public ICollection`1<AttributeService> get_AttributeServices();
    [CompilerGeneratedAttribute]
private void set_AttributeServices(ICollection`1<AttributeService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<AssertionIdRequestService> get_AssertionIdRequestServices();
    [CompilerGeneratedAttribute]
private void set_AssertionIdRequestServices(ICollection`1<AssertionIdRequestService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<NameIDFormat> get_NameIDFormats();
    [CompilerGeneratedAttribute]
private void set_NameIDFormats(ICollection`1<NameIDFormat> value);
    [CompilerGeneratedAttribute]
public ICollection`1<AttributeProfile> get_AttributeProfiles();
    [CompilerGeneratedAttribute]
private void set_AttributeProfiles(ICollection`1<AttributeProfile> value);
    [CompilerGeneratedAttribute]
public ICollection`1<Saml2Attribute> get_Attributes();
    [CompilerGeneratedAttribute]
private void set_Attributes(ICollection`1<Saml2Attribute> value);
}
public class Sustainsys.Saml2.Metadata.AttributeConsumingService : object {
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<LocalizedName> <ServiceNames>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<LocalizedName> <ServiceDescriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<RequestedAttribute> <RequestedAttributes>k__BackingField;
    public int Index { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    public Nullable`1<bool> IsRequired { get; public set; }
    public ICollection`1<LocalizedName> ServiceNames { get; private set; }
    public ICollection`1<LocalizedName> ServiceDescriptions { get; private set; }
    public ICollection`1<RequestedAttribute> RequestedAttributes { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IsDefault();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsDefault(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsRequired();
    [CompilerGeneratedAttribute]
public void set_IsRequired(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public ICollection`1<LocalizedName> get_ServiceNames();
    [CompilerGeneratedAttribute]
private void set_ServiceNames(ICollection`1<LocalizedName> value);
    [CompilerGeneratedAttribute]
public ICollection`1<LocalizedName> get_ServiceDescriptions();
    [CompilerGeneratedAttribute]
private void set_ServiceDescriptions(ICollection`1<LocalizedName> value);
    [CompilerGeneratedAttribute]
public ICollection`1<RequestedAttribute> get_RequestedAttributes();
    [CompilerGeneratedAttribute]
private void set_RequestedAttributes(ICollection`1<RequestedAttribute> value);
}
public class Sustainsys.Saml2.Metadata.AttributeProfile : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    public Uri Uri { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
}
public class Sustainsys.Saml2.Metadata.AttributeService : Endpoint {
}
public class Sustainsys.Saml2.Metadata.AuthnAuthorityDescriptor : RoleDescriptor {
    [CompilerGeneratedAttribute]
private ICollection`1<AuthnQueryService> <AuthnQueryServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<AssertionIdRequestService> <AssertionIdRequestServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<NameIDFormat> <NameIDFormats>k__BackingField;
    public ICollection`1<AuthnQueryService> AuthnQueryServices { get; private set; }
    public ICollection`1<AssertionIdRequestService> AssertionIdRequestServices { get; private set; }
    public ICollection`1<NameIDFormat> NameIDFormats { get; private set; }
    [CompilerGeneratedAttribute]
public ICollection`1<AuthnQueryService> get_AuthnQueryServices();
    [CompilerGeneratedAttribute]
private void set_AuthnQueryServices(ICollection`1<AuthnQueryService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<AssertionIdRequestService> get_AssertionIdRequestServices();
    [CompilerGeneratedAttribute]
private void set_AssertionIdRequestServices(ICollection`1<AssertionIdRequestService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<NameIDFormat> get_NameIDFormats();
    [CompilerGeneratedAttribute]
private void set_NameIDFormats(ICollection`1<NameIDFormat> value);
}
public class Sustainsys.Saml2.Metadata.AuthnQueryService : Endpoint {
}
public class Sustainsys.Saml2.Metadata.AuthzService : Endpoint {
}
public class Sustainsys.Saml2.Metadata.CipherData : object {
    [CompilerGeneratedAttribute]
private string <CipherValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CipherReference <CipherReference>k__BackingField;
    public string CipherValue { get; public set; }
    public CipherReference CipherReference { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CipherValue();
    [CompilerGeneratedAttribute]
public void set_CipherValue(string value);
    [CompilerGeneratedAttribute]
public CipherReference get_CipherReference();
    [CompilerGeneratedAttribute]
public void set_CipherReference(CipherReference value);
}
public class Sustainsys.Saml2.Metadata.CipherReference : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<XmlElement> <Transforms>k__BackingField;
    public Uri Uri { get; public set; }
    public ICollection`1<XmlElement> Transforms { get; private set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public ICollection`1<XmlElement> get_Transforms();
    [CompilerGeneratedAttribute]
private void set_Transforms(ICollection`1<XmlElement> value);
}
public class Sustainsys.Saml2.Metadata.ClaimValue : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<XmlElement> <StructuredValue>k__BackingField;
    public string Value { get; public set; }
    public ICollection`1<XmlElement> StructuredValue { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<XmlElement> get_StructuredValue();
    [CompilerGeneratedAttribute]
public void set_StructuredValue(ICollection`1<XmlElement> value);
}
public class Sustainsys.Saml2.Metadata.ConstrainedValue : object {
    [CompilerGeneratedAttribute]
private bool <AssertConstraint>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Constraint> <Constraints>k__BackingField;
    public bool AssertConstraint { get; public set; }
    public ICollection`1<Constraint> Constraints { get; private set; }
    [CompilerGeneratedAttribute]
public bool get_AssertConstraint();
    [CompilerGeneratedAttribute]
public void set_AssertConstraint(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<Constraint> get_Constraints();
    [CompilerGeneratedAttribute]
private void set_Constraints(ICollection`1<Constraint> value);
}
public class Sustainsys.Saml2.Metadata.ContactPerson : object {
    [CompilerGeneratedAttribute]
private string <Company>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <EmailAddresses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GivenName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Surname>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <TelephoneNumbers>k__BackingField;
    [CompilerGeneratedAttribute]
private ContactType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<XmlElement> <Extensions>k__BackingField;
    public string Company { get; public set; }
    public ICollection`1<string> EmailAddresses { get; private set; }
    public string GivenName { get; public set; }
    public string Surname { get; public set; }
    public ICollection`1<string> TelephoneNumbers { get; private set; }
    public ContactType Type { get; public set; }
    public ICollection`1<XmlElement> Extensions { get; private set; }
    public ContactPerson(ContactType type);
    [CompilerGeneratedAttribute]
public string get_Company();
    [CompilerGeneratedAttribute]
public void set_Company(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_EmailAddresses();
    [CompilerGeneratedAttribute]
private void set_EmailAddresses(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public string get_GivenName();
    [CompilerGeneratedAttribute]
public void set_GivenName(string value);
    [CompilerGeneratedAttribute]
public string get_Surname();
    [CompilerGeneratedAttribute]
public void set_Surname(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_TelephoneNumbers();
    [CompilerGeneratedAttribute]
private void set_TelephoneNumbers(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public ContactType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(ContactType value);
    [CompilerGeneratedAttribute]
public ICollection`1<XmlElement> get_Extensions();
    [CompilerGeneratedAttribute]
private void set_Extensions(ICollection`1<XmlElement> value);
}
public enum Sustainsys.Saml2.Metadata.ContactType : Enum {
    public int value__;
    public static ContactType Unspecified;
    public static ContactType Technical;
    public static ContactType Support;
    public static ContactType Administrative;
    public static ContactType Billing;
    public static ContactType Other;
}
public static class Sustainsys.Saml2.Metadata.ContactTypeHelpers : object {
    public static ContactType Parse(string contactType);
    public static string ToString(ContactType contactType);
}
public class Sustainsys.Saml2.Metadata.DiscoveryResponse : IndexedEndpoint {
}
public class Sustainsys.Saml2.Metadata.DisplayClaim : object {
    [CompilerGeneratedAttribute]
private string <ClaimType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Optional>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WriteOptionalAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<XmlElement> <StructuredValue>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptedValue <EncryptedValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ConstrainedValue <ConstrainedValue>k__BackingField;
    public string ClaimType { get; private set; }
    public string DisplayName { get; public set; }
    public string Description { get; public set; }
    public string DisplayValue { get; public set; }
    public Nullable`1<bool> Optional { get; public set; }
    public bool WriteOptionalAttribute { get; public set; }
    public string Value { get; public set; }
    public ICollection`1<XmlElement> StructuredValue { get; public set; }
    public EncryptedValue EncryptedValue { get; public set; }
    public ConstrainedValue ConstrainedValue { get; public set; }
    public DisplayClaim(string claimType);
    [CompilerGeneratedAttribute]
public string get_ClaimType();
    [CompilerGeneratedAttribute]
private void set_ClaimType(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayValue();
    [CompilerGeneratedAttribute]
public void set_DisplayValue(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Optional();
    [CompilerGeneratedAttribute]
public void set_Optional(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public bool get_WriteOptionalAttribute();
    [CompilerGeneratedAttribute]
public void set_WriteOptionalAttribute(bool value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<XmlElement> get_StructuredValue();
    [CompilerGeneratedAttribute]
public void set_StructuredValue(ICollection`1<XmlElement> value);
    [CompilerGeneratedAttribute]
public EncryptedValue get_EncryptedValue();
    [CompilerGeneratedAttribute]
public void set_EncryptedValue(EncryptedValue value);
    [CompilerGeneratedAttribute]
public ConstrainedValue get_ConstrainedValue();
    [CompilerGeneratedAttribute]
public void set_ConstrainedValue(ConstrainedValue value);
}
public class Sustainsys.Saml2.Metadata.DsaKeyValue : KeyValue {
    [CompilerGeneratedAttribute]
private DSAParameters <Parameters>k__BackingField;
    public DSAParameters Parameters { get; public set; }
    public DsaKeyValue(DSAParameters parameters);
    [CompilerGeneratedAttribute]
public DSAParameters get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(DSAParameters value);
}
public class Sustainsys.Saml2.Metadata.DSigKeyInfo : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <KeyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<KeyValue> <KeyValues>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<RetrievalMethod> <RetrievalMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<KeyData> <Data>k__BackingField;
    public string Id { get; public set; }
    public ICollection`1<string> KeyNames { get; private set; }
    public ICollection`1<KeyValue> KeyValues { get; private set; }
    public ICollection`1<RetrievalMethod> RetrievalMethods { get; private set; }
    public ICollection`1<KeyData> Data { get; private set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_KeyNames();
    [CompilerGeneratedAttribute]
private void set_KeyNames(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public ICollection`1<KeyValue> get_KeyValues();
    [CompilerGeneratedAttribute]
private void set_KeyValues(ICollection`1<KeyValue> value);
    [CompilerGeneratedAttribute]
public ICollection`1<RetrievalMethod> get_RetrievalMethods();
    [CompilerGeneratedAttribute]
private void set_RetrievalMethods(ICollection`1<RetrievalMethod> value);
    [CompilerGeneratedAttribute]
public ICollection`1<KeyData> get_Data();
    [CompilerGeneratedAttribute]
private void set_Data(ICollection`1<KeyData> value);
    public SecurityKeyIdentifier MakeSecurityKeyIdentifier();
}
public class Sustainsys.Saml2.Metadata.EcKeyValue : KeyValue {
    [CompilerGeneratedAttribute]
private ECParameters <Parameters>k__BackingField;
    public ECParameters Parameters { get; public set; }
    public EcKeyValue(ECParameters parameters);
    [CompilerGeneratedAttribute]
public ECParameters get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(ECParameters value);
}
public class Sustainsys.Saml2.Metadata.EncryptedData : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MimeType>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private XEncEncryptionMethod <EncryptionMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private DSigKeyInfo <KeyInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private CipherData <CipherData>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionProperties <EncryptionProperties>k__BackingField;
    public string Id { get; public set; }
    public Uri Type { get; public set; }
    public string MimeType { get; public set; }
    public Uri Encoding { get; public set; }
    public XEncEncryptionMethod EncryptionMethod { get; public set; }
    public DSigKeyInfo KeyInfo { get; public set; }
    public CipherData CipherData { get; public set; }
    public EncryptionProperties EncryptionProperties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public Uri get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Uri value);
    [CompilerGeneratedAttribute]
public string get_MimeType();
    [CompilerGeneratedAttribute]
public void set_MimeType(string value);
    [CompilerGeneratedAttribute]
public Uri get_Encoding();
    [CompilerGeneratedAttribute]
public void set_Encoding(Uri value);
    [CompilerGeneratedAttribute]
public XEncEncryptionMethod get_EncryptionMethod();
    [CompilerGeneratedAttribute]
public void set_EncryptionMethod(XEncEncryptionMethod value);
    [CompilerGeneratedAttribute]
public DSigKeyInfo get_KeyInfo();
    [CompilerGeneratedAttribute]
public void set_KeyInfo(DSigKeyInfo value);
    [CompilerGeneratedAttribute]
public CipherData get_CipherData();
    [CompilerGeneratedAttribute]
public void set_CipherData(CipherData value);
    [CompilerGeneratedAttribute]
public EncryptionProperties get_EncryptionProperties();
    [CompilerGeneratedAttribute]
public void set_EncryptionProperties(EncryptionProperties value);
}
public class Sustainsys.Saml2.Metadata.EncryptedValue : object {
    [CompilerGeneratedAttribute]
private Uri <DecryptionCondition>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptedData <EncryptedData>k__BackingField;
    public Uri DecryptionCondition { get; public set; }
    public EncryptedData EncryptedData { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_DecryptionCondition();
    [CompilerGeneratedAttribute]
public void set_DecryptionCondition(Uri value);
    [CompilerGeneratedAttribute]
public EncryptedData get_EncryptedData();
    [CompilerGeneratedAttribute]
public void set_EncryptedData(EncryptedData value);
}
public class Sustainsys.Saml2.Metadata.EncryptionMethod : object {
    [CompilerGeneratedAttribute]
private int <KeySize>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <OAEPparams>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Algorithm>k__BackingField;
    public int KeySize { get; public set; }
    public Byte[] OAEPparams { get; public set; }
    public Uri Algorithm { get; public set; }
    [CompilerGeneratedAttribute]
public int get_KeySize();
    [CompilerGeneratedAttribute]
public void set_KeySize(int value);
    [CompilerGeneratedAttribute]
public Byte[] get_OAEPparams();
    [CompilerGeneratedAttribute]
public void set_OAEPparams(Byte[] value);
    [CompilerGeneratedAttribute]
public Uri get_Algorithm();
    [CompilerGeneratedAttribute]
public void set_Algorithm(Uri value);
}
public class Sustainsys.Saml2.Metadata.EncryptionProperties : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<EncryptionProperty> <Properties>k__BackingField;
    public string Id { get; public set; }
    public ICollection`1<EncryptionProperty> Properties { get; private set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<EncryptionProperty> get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(ICollection`1<EncryptionProperty> value);
}
public class Sustainsys.Saml2.Metadata.EncryptionProperty : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Target>k__BackingField;
    public string Id { get; public set; }
    public Uri Target { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public Uri get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(Uri value);
}
public class Sustainsys.Saml2.Metadata.Endpoint : object {
    [CompilerGeneratedAttribute]
private Uri <Binding>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ResponseLocation>k__BackingField;
    public Uri Binding { get; public set; }
    public Uri Location { get; public set; }
    public Uri ResponseLocation { get; public set; }
    public Endpoint(Uri binding, Uri location);
    [CompilerGeneratedAttribute]
public Uri get_Binding();
    [CompilerGeneratedAttribute]
public void set_Binding(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_ResponseLocation();
    [CompilerGeneratedAttribute]
public void set_ResponseLocation(Uri value);
}
public class Sustainsys.Saml2.Metadata.EndpointReference : object {
    [CompilerGeneratedAttribute]
private Collection`1<XmlElement> <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<XmlElement> <ReferenceProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<XmlElement> <ReferenceParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<XmlElement> <Policies>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PortType>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceName <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    public Collection`1<XmlElement> Metadata { get; private set; }
    public Collection`1<XmlElement> ReferenceProperties { get; private set; }
    public Collection`1<XmlElement> ReferenceParameters { get; private set; }
    public Collection`1<XmlElement> Policies { get; private set; }
    public string PortType { get; public set; }
    public ServiceName ServiceName { get; public set; }
    public Uri Uri { get; internal set; }
    public EndpointReference(string uri);
    [CompilerGeneratedAttribute]
public Collection`1<XmlElement> get_Metadata();
    [CompilerGeneratedAttribute]
private void set_Metadata(Collection`1<XmlElement> value);
    [CompilerGeneratedAttribute]
public Collection`1<XmlElement> get_ReferenceProperties();
    [CompilerGeneratedAttribute]
private void set_ReferenceProperties(Collection`1<XmlElement> value);
    [CompilerGeneratedAttribute]
public Collection`1<XmlElement> get_ReferenceParameters();
    [CompilerGeneratedAttribute]
private void set_ReferenceParameters(Collection`1<XmlElement> value);
    [CompilerGeneratedAttribute]
public Collection`1<XmlElement> get_Policies();
    [CompilerGeneratedAttribute]
private void set_Policies(Collection`1<XmlElement> value);
    [CompilerGeneratedAttribute]
public string get_PortType();
    [CompilerGeneratedAttribute]
public void set_PortType(string value);
    [CompilerGeneratedAttribute]
public ServiceName get_ServiceName();
    [CompilerGeneratedAttribute]
public void set_ServiceName(ServiceName value);
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
internal void set_Uri(Uri value);
}
public class Sustainsys.Saml2.Metadata.EntitiesDescriptor : MetadataBase {
    [CompilerGeneratedAttribute]
private ICollection`1<EntityDescriptor> <ChildEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<EntitiesDescriptor> <ChildEntityGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<XmlElement> <Extensions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ValidUntil>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<XsdDuration> <CacheDuration>k__BackingField;
    public ICollection`1<EntityDescriptor> ChildEntities { get; private set; }
    public ICollection`1<EntitiesDescriptor> ChildEntityGroups { get; private set; }
    public Collection`1<XmlElement> Extensions { get; private set; }
    public string Id { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<DateTime> ValidUntil { get; public set; }
    public Nullable`1<XsdDuration> CacheDuration { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<EntityDescriptor> get_ChildEntities();
    [CompilerGeneratedAttribute]
private void set_ChildEntities(ICollection`1<EntityDescriptor> value);
    [CompilerGeneratedAttribute]
public ICollection`1<EntitiesDescriptor> get_ChildEntityGroups();
    [CompilerGeneratedAttribute]
private void set_ChildEntityGroups(ICollection`1<EntitiesDescriptor> value);
    [CompilerGeneratedAttribute]
public Collection`1<XmlElement> get_Extensions();
    [CompilerGeneratedAttribute]
private void set_Extensions(Collection`1<XmlElement> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_ValidUntil();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ValidUntil(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<XsdDuration> get_CacheDuration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CacheDuration(Nullable`1<XsdDuration> value);
}
public class Sustainsys.Saml2.Metadata.EntityDescriptor : MetadataBase {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ContactPerson> <Contacts>k__BackingField;
    [CompilerGeneratedAttribute]
private EntityId <EntityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FederationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Organization <Organization>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<RoleDescriptor> <RoleDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<XsdDuration> <CacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ValidUntil>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<AffiliationDescriptor> <AffiliationDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<AdditionalMetadataLocation> <AdditionalMetadataLocations>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<XmlElement> <Extensions>k__BackingField;
    public string Id { get; public set; }
    public ICollection`1<ContactPerson> Contacts { get; private set; }
    public EntityId EntityId { get; public set; }
    public string FederationId { get; public set; }
    public Organization Organization { get; public set; }
    public ICollection`1<RoleDescriptor> RoleDescriptors { get; private set; }
    public Nullable`1<XsdDuration> CacheDuration { get; public set; }
    public Nullable`1<DateTime> ValidUntil { get; public set; }
    public ICollection`1<AffiliationDescriptor> AffiliationDescriptors { get; private set; }
    public ICollection`1<AdditionalMetadataLocation> AdditionalMetadataLocations { get; private set; }
    public Collection`1<XmlElement> Extensions { get; private set; }
    public EntityDescriptor(EntityId entityId);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<ContactPerson> get_Contacts();
    [CompilerGeneratedAttribute]
private void set_Contacts(ICollection`1<ContactPerson> value);
    [CompilerGeneratedAttribute]
public EntityId get_EntityId();
    [CompilerGeneratedAttribute]
public void set_EntityId(EntityId value);
    [CompilerGeneratedAttribute]
public string get_FederationId();
    [CompilerGeneratedAttribute]
public void set_FederationId(string value);
    [CompilerGeneratedAttribute]
public Organization get_Organization();
    [CompilerGeneratedAttribute]
public void set_Organization(Organization value);
    [CompilerGeneratedAttribute]
public ICollection`1<RoleDescriptor> get_RoleDescriptors();
    [CompilerGeneratedAttribute]
private void set_RoleDescriptors(ICollection`1<RoleDescriptor> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<XsdDuration> get_CacheDuration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CacheDuration(Nullable`1<XsdDuration> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_ValidUntil();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ValidUntil(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ICollection`1<AffiliationDescriptor> get_AffiliationDescriptors();
    [CompilerGeneratedAttribute]
private void set_AffiliationDescriptors(ICollection`1<AffiliationDescriptor> value);
    [CompilerGeneratedAttribute]
public ICollection`1<AdditionalMetadataLocation> get_AdditionalMetadataLocations();
    [CompilerGeneratedAttribute]
private void set_AdditionalMetadataLocations(ICollection`1<AdditionalMetadataLocation> value);
    [CompilerGeneratedAttribute]
public Collection`1<XmlElement> get_Extensions();
    [CompilerGeneratedAttribute]
private void set_Extensions(Collection`1<XmlElement> value);
}
public class Sustainsys.Saml2.Metadata.EntityId : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string Id { get; public set; }
    public EntityId(string id);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
internal class Sustainsys.Saml2.Metadata.ExtendedMetadataSerializer : MetadataSerializer {
    private static ExtendedMetadataSerializer readerInstance;
    private static ExtendedMetadataSerializer writerInstance;
    public static ExtendedMetadataSerializer ReaderInstance { get; }
    public static ExtendedMetadataSerializer WriterInstance { get; }
    private ExtendedMetadataSerializer(SecurityTokenSerializer serializer);
    private static ExtendedMetadataSerializer();
    public static ExtendedMetadataSerializer get_ReaderInstance();
    public static ExtendedMetadataSerializer get_WriterInstance();
    protected virtual void WriteCustomAttributes(XmlWriter writer, T source);
}
internal class Sustainsys.Saml2.Metadata.FilteringXmlDictionaryReader : DelegatingXmlDictionaryReader {
    private string xmlNamespaceUri;
    private string name;
    public FilteringXmlDictionaryReader(string xmlNamespaceUri, string name, XmlDictionaryReader innerReader);
    public virtual bool Read();
    public virtual void Close();
}
public class Sustainsys.Saml2.Metadata.IdpSsoDescriptor : SsoDescriptor {
    [CompilerGeneratedAttribute]
private ICollection`1<SingleSignOnService> <SingleSignOnServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<NameIDMappingService> <NameIDMappingServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<AssertionIdRequestService> <AssertionIDRequestServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<AttributeProfile> <AttributeProfiles>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Saml2Attribute> <SupportedAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <WantAuthnRequestsSigned>k__BackingField;
    public ICollection`1<SingleSignOnService> SingleSignOnServices { get; private set; }
    public ICollection`1<NameIDMappingService> NameIDMappingServices { get; private set; }
    public ICollection`1<AssertionIdRequestService> AssertionIDRequestServices { get; private set; }
    public ICollection`1<AttributeProfile> AttributeProfiles { get; private set; }
    public ICollection`1<Saml2Attribute> SupportedAttributes { get; private set; }
    public Nullable`1<bool> WantAuthnRequestsSigned { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<SingleSignOnService> get_SingleSignOnServices();
    [CompilerGeneratedAttribute]
private void set_SingleSignOnServices(ICollection`1<SingleSignOnService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<NameIDMappingService> get_NameIDMappingServices();
    [CompilerGeneratedAttribute]
private void set_NameIDMappingServices(ICollection`1<NameIDMappingService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<AssertionIdRequestService> get_AssertionIDRequestServices();
    [CompilerGeneratedAttribute]
private void set_AssertionIDRequestServices(ICollection`1<AssertionIdRequestService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<AttributeProfile> get_AttributeProfiles();
    [CompilerGeneratedAttribute]
private void set_AttributeProfiles(ICollection`1<AttributeProfile> value);
    [CompilerGeneratedAttribute]
public ICollection`1<Saml2Attribute> get_SupportedAttributes();
    [CompilerGeneratedAttribute]
private void set_SupportedAttributes(ICollection`1<Saml2Attribute> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_WantAuthnRequestsSigned();
    [CompilerGeneratedAttribute]
public void set_WantAuthnRequestsSigned(Nullable`1<bool> value);
}
public interface Sustainsys.Saml2.Metadata.IIndexedEntryWithDefault {
    public int Index { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    public abstract virtual int get_Index();
    public abstract virtual void set_Index(int value);
    public abstract virtual Nullable`1<bool> get_IsDefault();
    public abstract virtual void set_IsDefault(Nullable`1<bool> value);
}
public class Sustainsys.Saml2.Metadata.IndexedCollectionWithDefault`1 : SortedList`2<int, T> {
    public T Default { get; }
    public T get_Default();
}
public class Sustainsys.Saml2.Metadata.IndexedEndpoint : Endpoint {
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsDefault>k__BackingField;
    public int Index { get; public set; }
    public Nullable`1<bool> IsDefault { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IsDefault();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsDefault(Nullable`1<bool> value);
}
public abstract class Sustainsys.Saml2.Metadata.KeyData : object {
}
public class Sustainsys.Saml2.Metadata.KeyDescriptor : object {
    [CompilerGeneratedAttribute]
private DSigKeyInfo <KeyInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private KeyType <Use>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<EncryptionMethod> <EncryptionMethods>k__BackingField;
    public DSigKeyInfo KeyInfo { get; public set; }
    public KeyType Use { get; public set; }
    public ICollection`1<EncryptionMethod> EncryptionMethods { get; private set; }
    [CompilerGeneratedAttribute]
public DSigKeyInfo get_KeyInfo();
    [CompilerGeneratedAttribute]
public void set_KeyInfo(DSigKeyInfo value);
    [CompilerGeneratedAttribute]
public KeyType get_Use();
    [CompilerGeneratedAttribute]
public void set_Use(KeyType value);
    [CompilerGeneratedAttribute]
public ICollection`1<EncryptionMethod> get_EncryptionMethods();
    [CompilerGeneratedAttribute]
private void set_EncryptionMethods(ICollection`1<EncryptionMethod> value);
}
public enum Sustainsys.Saml2.Metadata.KeyType : Enum {
    public int value__;
    public static KeyType Unspecified;
    public static KeyType Signing;
    public static KeyType Encryption;
}
public abstract class Sustainsys.Saml2.Metadata.KeyValue : object {
}
public abstract class Sustainsys.Saml2.Metadata.LocalizedEntry : object {
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    public string Language { get; public set; }
    protected LocalizedEntry(string language);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
}
public class Sustainsys.Saml2.Metadata.LocalizedEntryCollection`1 : object {
    private List`1<T> items;
    public int Count { get; }
    public void Add(T item);
    public void Clear();
    public int get_Count();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Sustainsys.Saml2.Metadata.LocalizedName : LocalizedEntry {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    public LocalizedName(string name, string language);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Sustainsys.Saml2.Metadata.LocalizedUri : LocalizedEntry {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    public Uri Uri { get; public set; }
    public LocalizedUri(Uri uri, string language);
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
}
public class Sustainsys.Saml2.Metadata.ManageNameIDService : Endpoint {
}
public abstract class Sustainsys.Saml2.Metadata.MetadataBase : object {
    [CompilerGeneratedAttribute]
private SigningCredentials <SigningCredentials>k__BackingField;
    public SigningCredentials SigningCredentials { get; public set; }
    [CompilerGeneratedAttribute]
public SigningCredentials get_SigningCredentials();
    [CompilerGeneratedAttribute]
public void set_SigningCredentials(SigningCredentials value);
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.Metadata.MetadataBaseExtensions : object {
    [ExtensionAttribute]
public static string ToXmlString(MetadataBase metadata, X509Certificate2 signingCertificate, string signingAlgorithm);
}
public static class Sustainsys.Saml2.Metadata.MetadataLoader : object {
    internal static string LoadIdpFoundEntitiesDescriptor;
    internal static string LoadIdpUnpackingFoundMultipleEntityDescriptors;
    internal static string LoadFederationFoundEntityDescriptor;
    public static EntityDescriptor LoadIdp(string metadataLocation);
    public static EntityDescriptor LoadIdp(string metadataLocation, bool unpackEntitiesDescriptor);
    private static MetadataBase Load(string metadataLocation, IEnumerable`1<SecurityKeyIdentifierClause> signingKeys, bool validateCertificate, string minIncomingSigningAlgorithm);
    private static XmlDictionaryReader ValidateSignature(XmlDictionaryReader reader, IEnumerable`1<SecurityKeyIdentifierClause> signingKeys, bool validateCertificate, string minIncomingSigningAlgorithm);
    internal static MetadataBase Load(XmlDictionaryReader reader);
    public static EntitiesDescriptor LoadFederation(string metadataLocation);
    public static EntitiesDescriptor LoadFederation(string metadataLocation, IEnumerable`1<SecurityKeyIdentifierClause> signingKeys, bool validateCertificate, string minIncomingSigningAlgorithm);
}
[ExtensionAttribute]
internal static class Sustainsys.Saml2.Metadata.MetadataRefreshScheduler : object {
    internal static TimeSpan minInterval;
    private static TimeSpan maxInterval;
    public static XsdDuration DefaultMetadataCacheDuration;
    private static MetadataRefreshScheduler();
    internal static TimeSpan GetDelay(DateTime validUntil);
    [ExtensionAttribute]
internal static DateTime CalculateMetadataValidUntil(ICachedMetadata metadata);
}
public class Sustainsys.Saml2.Metadata.MetadataSerializationException : Exception {
    public MetadataSerializationException(string message);
    public MetadataSerializationException(string message, Exception innerException);
}
public class Sustainsys.Saml2.Metadata.MetadataSerializer : object {
    private static string XmlNs;
    private static string FedNs;
    private static string WsaNs;
    private static string WspNs;
    private static string Saml2MetadataNs;
    private static string Saml2AssertionNs;
    private static string XsiNs;
    private static string AuthNs;
    private static string XEncNs;
    private static string DSigNs;
    private static string EcDsaNs;
    private static string DSig11Ns;
    private static string IdpDiscNs;
    [CompilerGeneratedAttribute]
private SecurityTokenSerializer <SecurityTokenSerializer>k__BackingField;
    [CompilerGeneratedAttribute]
private X509RevocationMode <RevocationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <TrustedIssuers>k__BackingField;
    public SecurityTokenSerializer SecurityTokenSerializer { get; private set; }
    public X509RevocationMode RevocationMode { get; public set; }
    public List`1<string> TrustedIssuers { get; }
    public MetadataSerializer(SecurityTokenSerializer serializer);
    [CompilerGeneratedAttribute]
public SecurityTokenSerializer get_SecurityTokenSerializer();
    [CompilerGeneratedAttribute]
private void set_SecurityTokenSerializer(SecurityTokenSerializer value);
    private string GetAttribute(XmlReader reader, string att, string def);
    protected virtual AdditionalMetadataLocation CreateAdditionalMetadataLocationInstance();
    protected virtual AffiliationDescriptor CreateAffiliationDescriptorInstance();
    protected virtual ApplicationServiceEndpoint CreateApplicationServiceEndpointInstance();
    protected virtual ApplicationServiceDescriptor CreateApplicationServiceInstance();
    protected virtual ArtifactResolutionService CreateArtifactResolutionServiceInstance();
    protected virtual AssertionConsumerService CreateAssertionConsumerServiceInstance();
    protected virtual AssertionIdRequestService CreateAssertionIdRequestServiceInstance();
    protected virtual AttributeAuthorityDescriptor CreateAttributeAuthorityDescriptorInstance();
    protected virtual AttributeConsumingService CreateAttributeConsumingServiceInstance();
    protected virtual AttributeService CreateAttributeServiceInstance();
    protected virtual AttributeProfile CreateAttributeProfileInstance();
    protected virtual AuthnAuthorityDescriptor CreateAuthnAuthorityDescriptorInstance();
    protected virtual AuthnQueryService CreateAuthnQueryServiceInstance();
    protected virtual AuthzService CreateAuthzServiceInstance();
    protected virtual CipherData CreateCipherDataInstance();
    protected virtual ClaimValue CreateClaimValueInstance();
    protected virtual CipherReference CreateCipherReferenceInstance();
    protected virtual ConstrainedValue CreateConstrainedValueInstance();
    protected virtual ContactPerson CreateContactPersonInstance();
    protected DiscoveryResponse CreateDiscoveryResponseInstance();
    protected virtual DSigKeyInfo CreateDSigKeyInfoInstance();
    protected virtual EndpointReference CreateEndpointReferenceInstance();
    protected virtual PDPDescriptor CreatePDPDescriptorInstance();
    protected virtual EncryptedData CreateEncryptedDataInstance();
    protected virtual EncryptionProperty CreateEncryptionPropertyInstance();
    protected virtual EncryptionProperties CreateEncryptionPropertiesInstance();
    protected virtual EncryptedValue CreateEncryptedValueInstance();
    protected virtual EncryptionMethod CreateEncryptionMethodInstance();
    protected virtual Endpoint CreateEndpointInstance();
    protected virtual EntitiesDescriptor CreateEntitiesDescriptorInstance();
    protected virtual EntityDescriptor CreateEntityDescriptorInstance();
    protected virtual IdpSsoDescriptor CreateIdpSsoDescriptorInstance();
    protected virtual KeyDescriptor CreateKeyDescriptorInstance();
    protected virtual LocalizedName CreateLocalizedNameInstance();
    protected virtual LocalizedUri CreateLocalizedUriInstance();
    protected virtual ManageNameIDService CreateManageNameIDServiceInstance();
    protected virtual NameIDFormat CreateNameIDFormatInstance();
    protected virtual NameIDMappingService CreateNameIDMappingServiceInstance();
    protected virtual Organization CreateOrganizationInstance();
    protected virtual PassiveRequestorEndpoint CreatePassiveRequestorEndpointInstance();
    protected virtual RequestedAttribute CreateRequestedAttributeInstance(string name);
    protected virtual Saml2Attribute CreateSaml2AttributeInstance(string name);
    protected virtual ServiceName CreateServiceNameInstance();
    protected virtual SingleLogoutService CreateSingleLogoutServiceInstance();
    protected virtual SingleSignOutNotificationEndpoint CreateSingleSignOutNotificationEndpointInstance();
    protected virtual SecurityTokenServiceDescriptor CreateSecurityTokenServiceDescriptorInstance();
    protected virtual SingleSignOnService CreateSingleSignOnServiceInstance();
    protected virtual SpSsoDescriptor CreateSpSsoDescriptorInstance();
    protected virtual XEncEncryptionMethod CreateXEncEncryptionMethodInstance();
    protected virtual ApplicationServiceDescriptor ReadApplicationServiceDescriptor(XmlReader reader);
    protected virtual ContactPerson ReadContactPerson(XmlReader reader);
    protected virtual void ReadCustomAttributes(XmlReader reader, T target);
    protected virtual bool ReadCustomElement(XmlReader reader, T target);
    protected virtual KeyValue ReadCustomKeyValue(XmlReader reader);
    protected virtual void ReadCustomRoleDescriptor(string xsiType, XmlReader reader, EntityDescriptor entityDescriptor);
    protected Byte[] ReadBase64(XmlReader reader);
    protected virtual DsaKeyValue ReadDSAKeyValue(XmlReader reader);
    protected virtual RsaKeyValue ReadRSAKeyValue(XmlReader reader);
    private Byte[] ParseBigIntValue(string value, string parameterName);
    protected virtual EcKeyValue ReadECDSAKeyValue(XmlReader reader);
    protected virtual EcKeyValue ReadECKeyValue(XmlReader reader);
    protected virtual KeyValue ReadKeyValue(XmlReader reader);
    protected virtual RetrievalMethod ReadRetrievalMethod(XmlReader reader);
    protected virtual X509IssuerSerial ReadX509IssuerSerial(XmlReader reader);
    protected virtual X509Digest ReadX509Digest(XmlReader reader);
    protected virtual X509Data ReadX509Data(XmlReader reader);
    protected virtual DSigKeyInfo ReadDSigKeyInfo(XmlReader reader);
    private int ReadXEncKeySize(XmlReader reader);
    protected virtual EncryptionMethod ReadEncryptionMethod(XmlReader reader);
    protected virtual XEncEncryptionMethod ReadXEncEncryptionMethod(XmlReader reader);
    protected virtual CipherReference ReadCipherReference(XmlReader reader);
    protected virtual CipherData ReadCipherData(XmlReader reader);
    protected virtual EncryptionProperty ReadEncryptionProperty(XmlReader reader);
    protected virtual EncryptionProperties ReadEncryptionProperties(XmlReader reader);
    protected virtual EncryptedData ReadEncryptedData(XmlReader reader);
    protected virtual EncryptedValue ReadEncryptedValue(XmlReader reader);
    protected virtual ClaimValue ReadClaimValue(XmlReader reader);
    protected virtual CompareConstraint ReadCompareConstraint(XmlReader reader, CompareOperator op);
    protected virtual RangeConstraint ReadRangeConstraint(XmlReader reader);
    protected virtual ConstrainedValue ReadConstrainedValue(XmlReader reader);
    protected virtual DisplayClaim ReadDisplayClaim(XmlReader reader);
    private void ReadCachedMetadataAttributes(XmlReader reader, ICachedMetadata obj);
    protected virtual EntitiesDescriptor ReadEntitiesDescriptor(XmlReader reader, SecurityTokenResolver tokenResolver);
    [CompilerGeneratedAttribute]
public X509RevocationMode get_RevocationMode();
    [CompilerGeneratedAttribute]
public void set_RevocationMode(X509RevocationMode value);
    [CompilerGeneratedAttribute]
public List`1<string> get_TrustedIssuers();
    protected virtual void ValidateSigningCredential(SigningCredentials signingCredentials);
    protected virtual void ValidateIssuer(X509Certificate2 signingCertificate);
    protected virtual X509Certificate2 GetMetadataSigningCertificate(SecurityKeyIdentifier ski);
    protected T ReadSaml2AttributeAttributes(XmlReader reader, Func`2<string, T> createInstance);
    protected bool ReadSaml2AttributeElement(XmlReader reader, Saml2Attribute attribute);
    protected virtual Saml2Attribute ReadSaml2Attribute(XmlReader reader);
    protected virtual AffiliationDescriptor ReadAffiliationDescriptor(XmlReader reader);
    protected virtual AdditionalMetadataLocation ReadAdditionalMetadataLocation(XmlReader reader);
    protected virtual EntityDescriptor ReadEntityDescriptor(XmlReader reader, SecurityTokenResolver tokenResolver);
    protected virtual IdpSsoDescriptor ReadIdpSsoDescriptor(XmlReader reader);
    protected virtual KeyDescriptor ReadKeyDescriptor(XmlReader reader);
    private T ReadLocalizedEntry(XmlReader reader, Func`1<T> createInstance, Action`2<T, string> setContent);
    protected virtual LocalizedName ReadLocalizedName(XmlReader reader);
    protected virtual LocalizedUri ReadLocalizedUri(XmlReader reader);
    private Uri MakeUri(string uri);
    public MetadataBase ReadMetadata(Stream stream);
    public MetadataBase ReadMetadata(XmlReader reader);
    public MetadataBase ReadMetadata(XmlReader reader, SecurityTokenResolver tokenResolver);
    protected virtual MetadataBase ReadMetadataCore(XmlReader reader, SecurityTokenResolver tokenResolver);
    protected virtual Organization ReadOrganization(XmlReader reader);
    private static bool ParseBooleanValue(string v);
    private static Nullable`1<bool> GetOptionalBooleanAttribute(XmlReader reader, string att);
    private static bool GetBooleanAttribute(XmlReader reader, string att, bool def);
    private static void ReadOptionalDateAttribute(XmlReader reader, string attribute, Action`1<DateTime> dateAction);
    private static void ReadOptionalTimespanAttribute(XmlReader reader, string attribute, Action`1<XsdDuration> durationAction);
    protected virtual void ReadRoleDescriptorAttributes(XmlReader reader, RoleDescriptor roleDescriptor);
    protected virtual bool ReadRoleDescriptorElement(XmlReader reader, RoleDescriptor roleDescriptor);
    protected virtual SecurityTokenServiceDescriptor ReadSecurityTokenServiceDescriptor(XmlReader reader);
    protected virtual RequestedAttribute ReadRequestedAttribute(XmlReader reader);
    protected virtual AttributeConsumingService ReadAttributeConsumingService(XmlReader reader);
    private void AddIndexedEntry(IndexedCollectionWithDefault`1<T> collection, T entry, string elName);
    protected virtual SpSsoDescriptor ReadSpSsoDescriptor(XmlReader reader);
    protected virtual void ReadSsoDescriptorAttributes(XmlReader reader, SsoDescriptor descriptor);
    protected virtual bool ReadSsoDescriptorElement(XmlReader reader, SsoDescriptor descriptor);
    private Uri GetUriAttribute(XmlReader reader, string att, Uri def);
    protected virtual void ReadEndpointAttributes(XmlReader reader, Endpoint endpoint);
    private static void SkipToElementEnd(XmlReader reader);
    private T ReadWrappedEndpoint(XmlReader reader, Func`1<T> createInstance);
    protected virtual Endpoint ReadEndpoint(XmlReader reader);
    protected virtual AttributeService ReadAttributeService(XmlReader reader);
    protected virtual AuthnQueryService ReadAuthnQueryService(XmlReader reader);
    protected virtual AssertionIdRequestService ReadAssertionIdRequestService(XmlReader reader);
    protected virtual AuthzService ReadAuthzService(XmlReader reader);
    protected virtual SingleLogoutService ReadSingleLogoutService(XmlReader reader);
    protected virtual ManageNameIDService ReadManageNameIDService(XmlReader reader);
    protected virtual SingleSignOutNotificationEndpoint ReadSingleSignOutNotificationEndpoint(XmlReader reader);
    protected virtual ApplicationServiceEndpoint ReadApplicationServiceEndpoint(XmlReader reader);
    protected virtual PassiveRequestorEndpoint ReadPassiveRequestorEndpoint(XmlReader reader);
    protected virtual SingleSignOnService ReadSingleSignOnService(XmlReader reader);
    protected virtual NameIDMappingService ReadNameIDMappingService(XmlReader reader);
    private void ReadIndexedEntryWithDefaultAttributes(XmlReader reader, IIndexedEntryWithDefault entry);
    private void ReadIndexedEndpointAttributes(XmlReader reader, IndexedEndpoint endpoint);
    private T ReadWrappedIndexedEndpoint(XmlReader reader, Func`1<T> createInstance);
    protected virtual AssertionConsumerService ReadAssertionConsumerService(XmlReader reader);
    protected virtual ArtifactResolutionService ReadArtifactResolutionService(XmlReader reader);
    protected virtual DiscoveryResponse ReadDiscoveryResponse(XmlReader reader);
    protected virtual PDPDescriptor ReadPDPDescriptor(XmlReader reader);
    protected virtual NameIDFormat ReadNameIDFormat(XmlReader reader);
    protected virtual AuthnAuthorityDescriptor ReadAuthnAuthorityDescriptor(XmlReader reader);
    protected virtual AttributeProfile ReadAttributeProfile(XmlReader reader);
    protected virtual AttributeAuthorityDescriptor ReadAttributeAuthorityDescriptor(XmlReader reader);
    protected virtual void ReadWebServiceDescriptorAttributes(XmlReader reader, WebServiceDescriptor descriptor);
    private void ReadUris(XmlReader reader, string parentElementName, string childElementName, ICollection`1<Uri> uris);
    private static void ReadChildren(XmlReader reader, Func`1<bool> childAction);
    private void ReadDisplayClaims(XmlReader reader, ICollection`1<DisplayClaim> claims);
    private XmlElement ReadCurrentNodeAsXmlElement(XmlReader reader);
    private void ReadChildrenAsXmlElements(XmlReader reader, Action`1<XmlElement> childAction);
    private string ReadTrimmedString(XmlReader reader);
    protected virtual ServiceName ReadServiceName(XmlReader reader);
    protected virtual EndpointReference ReadEndpointReference(XmlReader reader);
    protected virtual EndpointReference ReadWrappedEndpointReference(XmlReader reader);
    protected virtual bool ReadWebServiceDescriptorElement(XmlReader reader, WebServiceDescriptor descriptor);
    private static void WriteWrappedElements(XmlWriter writer, string wrapPrefix, string wrapName, string wrapNs, IEnumerable`1<XmlElement> elts);
    protected virtual void WriteServiceName(XmlWriter writer, ServiceName serviceName);
    protected virtual void WriteEndpointReference(XmlWriter writer, EndpointReference endpointReference);
    private void WriteEndpointReferences(XmlWriter writer, string elName, string elNs, ICollection`1<EndpointReference> endpointReferences);
    protected virtual void WriteApplicationServiceDescriptor(XmlWriter writer, ApplicationServiceDescriptor appService);
    private static void WriteStringElementIfPresent(XmlWriter writer, string elName, string elNs, string value);
    private static void WriteBase64Element(XmlWriter writer, string elName, string elNs, Byte[] value);
    private static void WriteStringAttributeIfPresent(XmlWriter writer, string attName, string attNs, string value);
    private static void WriteUriAttributeIfPresent(XmlWriter writer, string attName, string attNs, Uri value);
    private static void WriteBooleanAttribute(XmlWriter writer, string attName, string attNs, Nullable`1<bool> value);
    private static void WriteStringElements(XmlWriter writer, string elName, string elNs, IEnumerable`1<string> values);
    protected virtual void WriteContactPerson(XmlWriter writer, ContactPerson contactPerson);
    protected virtual void WriteCustomAttributes(XmlWriter writer, T source);
    protected virtual void WriteCustomElements(XmlWriter writer, T source);
    protected virtual void WriteEndpointAttributes(XmlWriter writer, Endpoint endpoint);
    protected virtual void WriteEndpoint(XmlWriter writer, Endpoint endpoint, string name, string ns);
    protected virtual void WriteIndexedEndpoint(XmlWriter writer, IndexedEndpoint endpoint, string name, string ns);
    protected virtual void WriteEndpoints(XmlWriter writer, IEnumerable`1<Endpoint> endpoints, string name, string ns);
    protected virtual void WriteIndexedEndpoints(XmlWriter writer, IEnumerable`1<IndexedEndpoint> endpoints, string name, string ns);
    private static void WriteStringElement(XmlWriter writer, string elName, string elNs, string value);
    private void WriteXEncKeySize(XmlWriter writer, int keySize);
    protected virtual void WriteXEncEncryptionMethod(XmlWriter writer, XEncEncryptionMethod method);
    protected virtual void WriteEncryptionMethod(XmlWriter writer, EncryptionMethod method);
    private void WriteCollection(XmlWriter writer, IEnumerable`1<T> elts, Action`2<XmlWriter, T> writeHandler);
    protected virtual void WriteRSAKeyValue(XmlWriter writer, RsaKeyValue rsa);
    private static Byte[] GetIntAsBigEndian(int value);
    protected virtual void WriteDSAKeyValue(XmlWriter writer, DsaKeyValue dsa);
    protected virtual void WriteECKeyValue(XmlWriter writer, EcKeyValue ec);
    protected virtual void WriteKeyValue(XmlWriter writer, KeyValue keyValue);
    protected virtual void WriteRetrievalMethod(XmlWriter writer, RetrievalMethod method);
    protected virtual void WriteX509IssuerSerial(XmlWriter writer, X509IssuerSerial issuerSerial);
    protected virtual void WriteX509Digest(XmlWriter writer, X509Digest digest);
    protected virtual void WriteX509Data(XmlWriter writer, X509Data data);
    protected virtual void WriteKeyData(XmlWriter writer, KeyData keyData);
    protected virtual void WriteDSigKeyInfo(XmlWriter writer, DSigKeyInfo keyInfo);
    protected virtual void WriteCipherReference(XmlWriter writer, CipherReference reference);
    protected virtual void WriteCipherData(XmlWriter writer, CipherData data);
    protected virtual void WriteEncryptionProperty(XmlWriter writer, EncryptionProperty property);
    protected virtual void WriteEncryptionProperties(XmlWriter writer, EncryptionProperties properties);
    protected virtual void WriteEncryptedData(XmlWriter writer, EncryptedData data);
    protected virtual void WriteEncryptedValue(XmlWriter writer, EncryptedValue value);
    protected virtual void WriteClaimValue(XmlWriter writer, ClaimValue value);
    protected virtual void WriteCompareConstraint(XmlWriter writer, CompareConstraint constraint);
    protected virtual void WriteListContraint(XmlWriter writer, ListConstraint constraint);
    protected virtual void WriteRangeConstraint(XmlWriter writer, RangeConstraint constraint);
    protected virtual void WriteListConstraint(XmlWriter writer, ListConstraint constraint);
    protected virtual void WriteConstrainedValue(XmlWriter writer, ConstrainedValue value);
    protected virtual void WriteDisplayClaim(XmlWriter writer, DisplayClaim claim);
    private static void WriteCachedMetadataAttributes(XmlWriter writer, ICachedMetadata cachedMetadata);
    protected virtual void WriteEntitiesDescriptor(XmlWriter writer, EntitiesDescriptor entitiesDescriptor);
    protected virtual void WriteNameIDFormat(XmlWriter writer, NameIDFormat nameIDFormat);
    protected virtual void WriteAuthnAuthorityDescriptor(XmlWriter writer, AuthnAuthorityDescriptor descriptor);
    protected virtual void WriteAttributeProfile(XmlWriter writer, AttributeProfile profile);
    protected virtual void WriteAttributeAuthorityDescriptor(XmlWriter writer, AttributeAuthorityDescriptor descriptor);
    protected virtual void WritePDPDescriptor(XmlWriter writer, PDPDescriptor descriptor);
    protected virtual void WriteAffiliationDescriptor(XmlWriter writer, AffiliationDescriptor descriptor);
    protected virtual void WriteAdditionalMetadataLocation(XmlWriter writer, AdditionalMetadataLocation location);
    protected virtual void WriteEntityDescriptor(XmlWriter writer, EntityDescriptor entityDescriptor);
    protected virtual void WriteIdpSsoDescriptor(XmlWriter writer, IdpSsoDescriptor descriptor);
    protected virtual void WriteKeyDescriptor(XmlWriter writer, KeyDescriptor keyDescriptor);
    protected virtual void WriteLocalizedName(XmlWriter writer, LocalizedName name, string elName, string ns);
    private void WriteLocalizedNames(XmlWriter writer, IEnumerable`1<LocalizedName> names, string elName, string ns);
    protected virtual void WriteLocalizedUri(XmlWriter writer, LocalizedUri uri, string name, string ns);
    public void WriteMetadata(Stream stream, MetadataBase metadata);
    public void WriteMetadata(XmlWriter writer, MetadataBase metadata);
    protected virtual void WriteMetadataCore(XmlWriter writer, MetadataBase metadata);
    protected virtual void WriteOrganization(XmlWriter writer, Organization organization);
    protected virtual void WriteRoleDescriptorAttributes(XmlWriter writer, RoleDescriptor descriptor);
    private void WriteRoleDescriptorElements(XmlWriter writer, RoleDescriptor descriptor, bool writeExtensions);
    protected virtual void WriteRoleDescriptorElements(XmlWriter writer, RoleDescriptor descriptor);
    protected virtual void WriteSecurityTokenServiceDescriptor(XmlWriter writer, SecurityTokenServiceDescriptor descriptor);
    protected virtual void WriteRequestedAttribute(XmlWriter writer, RequestedAttribute attribute);
    protected virtual void WriteAttributeConsumingService(XmlWriter writer, AttributeConsumingService service);
    protected virtual void WriteSpSsoDescriptor(XmlWriter writer, SpSsoDescriptor descriptor);
    protected virtual void WriteSsoDescriptorAttributes(XmlWriter writer, SsoDescriptor descriptor);
    private void WriteSsoDescriptorElements(XmlWriter writer, SsoDescriptor descriptor, bool writeExtensions);
    protected virtual void WriteSsoDescriptorElements(XmlWriter writer, SsoDescriptor descriptor);
    private void WriteUris(XmlWriter writer, string parentElementName, string childElementName, string ns, IEnumerable`1<Uri> uris);
    protected virtual void WriteWebServiceDescriptorAttributes(XmlWriter writer, WebServiceDescriptor descriptor);
    private void WriteDisplayClaims(XmlWriter writer, string parentName, string parentNs, IEnumerable`1<DisplayClaim> claims);
    protected virtual void WriteWebServiceDescriptorElements(XmlWriter writer, WebServiceDescriptor descriptor);
    protected virtual void WriteAttributeAttributes(XmlWriter writer, Saml2Attribute attribute);
    protected virtual void WriteAttributeElements(XmlWriter writer, Saml2Attribute attribute);
    protected virtual void WriteAttribute(XmlWriter writer, Saml2Attribute attribute);
    [CompilerGeneratedAttribute]
private void <ReadLocalizedUri>b__123_0(LocalizedUri uri, string value);
    [CompilerGeneratedAttribute]
private void <WriteOrganization>b__248_0(XmlWriter writer_, LocalizedUri uri);
}
public class Sustainsys.Saml2.Metadata.NameIDFormat : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    public Uri Uri { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
}
public class Sustainsys.Saml2.Metadata.NameIDMappingService : Endpoint {
}
public class Sustainsys.Saml2.Metadata.Organization : object {
    [CompilerGeneratedAttribute]
private ICollection`1<XmlElement> <Extensions>k__BackingField;
    [CompilerGeneratedAttribute]
private LocalizedEntryCollection`1<LocalizedName> <DisplayNames>k__BackingField;
    [CompilerGeneratedAttribute]
private LocalizedEntryCollection`1<LocalizedName> <Names>k__BackingField;
    [CompilerGeneratedAttribute]
private LocalizedEntryCollection`1<LocalizedUri> <Urls>k__BackingField;
    public ICollection`1<XmlElement> Extensions { get; private set; }
    public LocalizedEntryCollection`1<LocalizedName> DisplayNames { get; private set; }
    public LocalizedEntryCollection`1<LocalizedName> Names { get; private set; }
    public LocalizedEntryCollection`1<LocalizedUri> Urls { get; private set; }
    [CompilerGeneratedAttribute]
public ICollection`1<XmlElement> get_Extensions();
    [CompilerGeneratedAttribute]
private void set_Extensions(ICollection`1<XmlElement> value);
    [CompilerGeneratedAttribute]
public LocalizedEntryCollection`1<LocalizedName> get_DisplayNames();
    [CompilerGeneratedAttribute]
private void set_DisplayNames(LocalizedEntryCollection`1<LocalizedName> value);
    [CompilerGeneratedAttribute]
public LocalizedEntryCollection`1<LocalizedName> get_Names();
    [CompilerGeneratedAttribute]
private void set_Names(LocalizedEntryCollection`1<LocalizedName> value);
    [CompilerGeneratedAttribute]
public LocalizedEntryCollection`1<LocalizedUri> get_Urls();
    [CompilerGeneratedAttribute]
private void set_Urls(LocalizedEntryCollection`1<LocalizedUri> value);
}
public class Sustainsys.Saml2.Metadata.PassiveRequestorEndpoint : Endpoint {
}
public class Sustainsys.Saml2.Metadata.PDPDescriptor : RoleDescriptor {
    [CompilerGeneratedAttribute]
private ICollection`1<AuthzService> <AuthzServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<AssertionIdRequestService> <AssertionIdRequestServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<NameIDFormat> <NameIDFormats>k__BackingField;
    public ICollection`1<AuthzService> AuthzServices { get; private set; }
    public ICollection`1<AssertionIdRequestService> AssertionIdRequestServices { get; private set; }
    public ICollection`1<NameIDFormat> NameIDFormats { get; private set; }
    [CompilerGeneratedAttribute]
public ICollection`1<AuthzService> get_AuthzServices();
    [CompilerGeneratedAttribute]
private void set_AuthzServices(ICollection`1<AuthzService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<AssertionIdRequestService> get_AssertionIdRequestServices();
    [CompilerGeneratedAttribute]
private void set_AssertionIdRequestServices(ICollection`1<AssertionIdRequestService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<NameIDFormat> get_NameIDFormats();
    [CompilerGeneratedAttribute]
private void set_NameIDFormats(ICollection`1<NameIDFormat> value);
}
public class Sustainsys.Saml2.Metadata.RequestedAttribute : Saml2Attribute {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsRequired>k__BackingField;
    public static Uri AttributeNameFormatUri;
    public static Uri AttributeNameFormatUnspecified;
    public static Uri AttributeNameFormatBasic;
    public Nullable`1<bool> IsRequired { get; public set; }
    public RequestedAttribute(string name);
    public RequestedAttribute(string name, string value);
    private static RequestedAttribute();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsRequired();
    [CompilerGeneratedAttribute]
public void set_IsRequired(Nullable`1<bool> value);
}
public class Sustainsys.Saml2.Metadata.RetrievalMethod : object {
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<XmlElement> <Transforms>k__BackingField;
    public Uri Uri { get; public set; }
    public Uri Type { get; public set; }
    public ICollection`1<XmlElement> Transforms { get; private set; }
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Uri value);
    [CompilerGeneratedAttribute]
public ICollection`1<XmlElement> get_Transforms();
    [CompilerGeneratedAttribute]
private void set_Transforms(ICollection`1<XmlElement> value);
}
public abstract class Sustainsys.Saml2.Metadata.RoleDescriptor : object {
    [CompilerGeneratedAttribute]
private ICollection`1<ContactPerson> <Contacts>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Uri> <ProtocolsSupported>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ErrorUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<KeyDescriptor> <Keys>k__BackingField;
    [CompilerGeneratedAttribute]
private Organization <Organization>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<XsdDuration> <CacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ValidUntil>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<XmlElement> <Extensions>k__BackingField;
    public ICollection`1<ContactPerson> Contacts { get; private set; }
    public ICollection`1<Uri> ProtocolsSupported { get; private set; }
    public Uri ErrorUrl { get; public set; }
    public string Id { get; public set; }
    public ICollection`1<KeyDescriptor> Keys { get; private set; }
    public Organization Organization { get; public set; }
    public Nullable`1<XsdDuration> CacheDuration { get; public set; }
    public Nullable`1<DateTime> ValidUntil { get; public set; }
    public ICollection`1<XmlElement> Extensions { get; private set; }
    protected RoleDescriptor(Collection`1<Uri> protocolsSupported);
    [CompilerGeneratedAttribute]
public ICollection`1<ContactPerson> get_Contacts();
    [CompilerGeneratedAttribute]
private void set_Contacts(ICollection`1<ContactPerson> value);
    [CompilerGeneratedAttribute]
public ICollection`1<Uri> get_ProtocolsSupported();
    [CompilerGeneratedAttribute]
private void set_ProtocolsSupported(ICollection`1<Uri> value);
    [CompilerGeneratedAttribute]
public Uri get_ErrorUrl();
    [CompilerGeneratedAttribute]
public void set_ErrorUrl(Uri value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<KeyDescriptor> get_Keys();
    [CompilerGeneratedAttribute]
private void set_Keys(ICollection`1<KeyDescriptor> value);
    [CompilerGeneratedAttribute]
public Organization get_Organization();
    [CompilerGeneratedAttribute]
public void set_Organization(Organization value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<XsdDuration> get_CacheDuration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CacheDuration(Nullable`1<XsdDuration> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_ValidUntil();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ValidUntil(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ICollection`1<XmlElement> get_Extensions();
    [CompilerGeneratedAttribute]
private void set_Extensions(ICollection`1<XmlElement> value);
}
public class Sustainsys.Saml2.Metadata.RsaKeyValue : KeyValue {
    [CompilerGeneratedAttribute]
private RSAParameters <Parameters>k__BackingField;
    public RSAParameters Parameters { get; public set; }
    public RsaKeyValue(RSAParameters parameters);
    [CompilerGeneratedAttribute]
public RSAParameters get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(RSAParameters value);
}
public abstract class Sustainsys.Saml2.Metadata.SecurityTokenSerializer : object {
    protected abstract virtual bool CanReadTokenCore(XmlReader reader);
    protected abstract virtual bool CanWriteTokenCore(SecurityToken token);
    protected abstract virtual bool CanReadKeyIdentifierCore(XmlReader reader);
    protected abstract virtual bool CanWriteKeyIdentifierCore(SecurityKeyIdentifier keyIdentifier);
    protected abstract virtual bool CanReadKeyIdentifierClauseCore(XmlReader reader);
    protected abstract virtual bool CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause keyIdentifierClause);
    protected abstract virtual SecurityToken ReadTokenCore(XmlReader reader, SecurityTokenResolver tokenResolver);
    protected abstract virtual void WriteTokenCore(XmlWriter writer, SecurityToken token);
    protected abstract virtual SecurityKeyIdentifier ReadKeyIdentifierCore(XmlReader reader);
    protected abstract virtual void WriteKeyIdentifierCore(XmlWriter writer, SecurityKeyIdentifier keyIdentifier);
    protected abstract virtual SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore(XmlReader reader);
    protected abstract virtual void WriteKeyIdentifierClauseCore(XmlWriter writer, SecurityKeyIdentifierClause keyIdentifierClause);
    private void CheckReader(XmlReader reader);
    public bool CanReadKeyIdentifier(XmlReader reader);
    public bool CanReadKeyIdentifierClause(XmlReader reader);
    public bool CanReadToken(XmlReader reader);
    public bool CanWriteKeyIdentifier(SecurityKeyIdentifier keyIdentifier);
    public bool CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause);
    public bool CanWriteToken(SecurityToken token);
    public SecurityKeyIdentifier ReadKeyIdentifier(XmlReader reader);
    public SecurityKeyIdentifierClause ReadKeyIdentifierClause(XmlReader reader);
    public SecurityToken ReadToken(XmlReader reader, SecurityTokenResolver resolver);
    private void CheckWriter(XmlWriter writer);
    public void WriteKeyIdentifier(XmlWriter writer, SecurityKeyIdentifier keyIdentifier);
    public void WriteKeyIdentifierClause(XmlWriter writer, SecurityKeyIdentifierClause keyIdentifierClause);
    public void WriteToken(XmlWriter writer, SecurityToken token);
}
public class Sustainsys.Saml2.Metadata.SecurityTokenServiceDescriptor : WebServiceDescriptor {
    [CompilerGeneratedAttribute]
private Collection`1<EndpointReference> <SecurityTokenServiceEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<EndpointReference> <SingleSignOutSubscriptionEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<EndpointReference> <SingleSignOutNotificationEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<EndpointReference> <PassiveRequestorEndpoints>k__BackingField;
    public Collection`1<EndpointReference> SecurityTokenServiceEndpoints { get; private set; }
    public Collection`1<EndpointReference> SingleSignOutSubscriptionEndpoints { get; private set; }
    public Collection`1<EndpointReference> SingleSignOutNotificationEndpoints { get; private set; }
    public Collection`1<EndpointReference> PassiveRequestorEndpoints { get; private set; }
    [CompilerGeneratedAttribute]
public Collection`1<EndpointReference> get_SecurityTokenServiceEndpoints();
    [CompilerGeneratedAttribute]
private void set_SecurityTokenServiceEndpoints(Collection`1<EndpointReference> value);
    [CompilerGeneratedAttribute]
public Collection`1<EndpointReference> get_SingleSignOutSubscriptionEndpoints();
    [CompilerGeneratedAttribute]
private void set_SingleSignOutSubscriptionEndpoints(Collection`1<EndpointReference> value);
    [CompilerGeneratedAttribute]
public Collection`1<EndpointReference> get_SingleSignOutNotificationEndpoints();
    [CompilerGeneratedAttribute]
private void set_SingleSignOutNotificationEndpoints(Collection`1<EndpointReference> value);
    [CompilerGeneratedAttribute]
public Collection`1<EndpointReference> get_PassiveRequestorEndpoints();
    [CompilerGeneratedAttribute]
private void set_PassiveRequestorEndpoints(Collection`1<EndpointReference> value);
}
public class Sustainsys.Saml2.Metadata.ServiceName : object {
    [CompilerGeneratedAttribute]
private string <PortName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string PortName { get; public set; }
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PortName();
    [CompilerGeneratedAttribute]
public void set_PortName(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Sustainsys.Saml2.Metadata.SingleLogoutService : Endpoint {
    public SingleLogoutService(Uri binding, Uri location);
}
public class Sustainsys.Saml2.Metadata.SingleSignOnService : Endpoint {
}
public class Sustainsys.Saml2.Metadata.SingleSignOutNotificationEndpoint : Endpoint {
}
[ExtensionAttribute]
internal static class Sustainsys.Saml2.Metadata.SPOptionsExtensions : object {
    [ExtensionAttribute]
public static EntityDescriptor CreateMetadata(SPOptions spOptions, Saml2Urls urls);
}
public class Sustainsys.Saml2.Metadata.SpSsoDescriptor : SsoDescriptor {
    [CompilerGeneratedAttribute]
private IndexedCollectionWithDefault`1<AssertionConsumerService> <AssertionConsumerServices>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexedCollectionWithDefault`1<AttributeConsumingService> <AttributeConsumingServices>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AuthnRequestsSigned>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <WantAssertionsSigned>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexedCollectionWithDefault`1<DiscoveryResponse> <DiscoveryResponses>k__BackingField;
    public IndexedCollectionWithDefault`1<AssertionConsumerService> AssertionConsumerServices { get; private set; }
    public IndexedCollectionWithDefault`1<AttributeConsumingService> AttributeConsumingServices { get; private set; }
    public Nullable`1<bool> AuthnRequestsSigned { get; public set; }
    public Nullable`1<bool> WantAssertionsSigned { get; public set; }
    public IndexedCollectionWithDefault`1<DiscoveryResponse> DiscoveryResponses { get; private set; }
    [CompilerGeneratedAttribute]
public IndexedCollectionWithDefault`1<AssertionConsumerService> get_AssertionConsumerServices();
    [CompilerGeneratedAttribute]
private void set_AssertionConsumerServices(IndexedCollectionWithDefault`1<AssertionConsumerService> value);
    [CompilerGeneratedAttribute]
public IndexedCollectionWithDefault`1<AttributeConsumingService> get_AttributeConsumingServices();
    [CompilerGeneratedAttribute]
private void set_AttributeConsumingServices(IndexedCollectionWithDefault`1<AttributeConsumingService> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AuthnRequestsSigned();
    [CompilerGeneratedAttribute]
public void set_AuthnRequestsSigned(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_WantAssertionsSigned();
    [CompilerGeneratedAttribute]
public void set_WantAssertionsSigned(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IndexedCollectionWithDefault`1<DiscoveryResponse> get_DiscoveryResponses();
    [CompilerGeneratedAttribute]
private void set_DiscoveryResponses(IndexedCollectionWithDefault`1<DiscoveryResponse> value);
}
public class Sustainsys.Saml2.Metadata.SsoDescriptor : RoleDescriptor {
    [CompilerGeneratedAttribute]
private IndexedCollectionWithDefault`1<ArtifactResolutionService> <ArtifactResolutionServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<SingleLogoutService> <SingleLogoutServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ManageNameIDService> <ManageNameIDServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<NameIDFormat> <NameIdentifierFormats>k__BackingField;
    public IndexedCollectionWithDefault`1<ArtifactResolutionService> ArtifactResolutionServices { get; private set; }
    public ICollection`1<SingleLogoutService> SingleLogoutServices { get; private set; }
    public ICollection`1<ManageNameIDService> ManageNameIDServices { get; private set; }
    public ICollection`1<NameIDFormat> NameIdentifierFormats { get; private set; }
    [CompilerGeneratedAttribute]
public IndexedCollectionWithDefault`1<ArtifactResolutionService> get_ArtifactResolutionServices();
    [CompilerGeneratedAttribute]
private void set_ArtifactResolutionServices(IndexedCollectionWithDefault`1<ArtifactResolutionService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<SingleLogoutService> get_SingleLogoutServices();
    [CompilerGeneratedAttribute]
private void set_SingleLogoutServices(ICollection`1<SingleLogoutService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<ManageNameIDService> get_ManageNameIDServices();
    [CompilerGeneratedAttribute]
private void set_ManageNameIDServices(ICollection`1<ManageNameIDService> value);
    [CompilerGeneratedAttribute]
public ICollection`1<NameIDFormat> get_NameIdentifierFormats();
    [CompilerGeneratedAttribute]
private void set_NameIdentifierFormats(ICollection`1<NameIDFormat> value);
}
public abstract class Sustainsys.Saml2.Metadata.WebServiceDescriptor : RoleDescriptor {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutomaticPseudonyms>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Uri> <ClaimDialectsOffered>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<DisplayClaim> <ClaimTypesOffered>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<DisplayClaim> <ClaimTypesRequested>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Uri> <LogicalServiceNamesOffered>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<EndpointReference> <TargetScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Uri> <TokenTypesOffered>k__BackingField;
    public Nullable`1<bool> AutomaticPseudonyms { get; public set; }
    public ICollection`1<Uri> ClaimDialectsOffered { get; private set; }
    public ICollection`1<DisplayClaim> ClaimTypesOffered { get; private set; }
    public ICollection`1<DisplayClaim> ClaimTypesRequested { get; private set; }
    public ICollection`1<Uri> LogicalServiceNamesOffered { get; private set; }
    public string ServiceDescription { get; public set; }
    public string ServiceDisplayName { get; public set; }
    public ICollection`1<EndpointReference> TargetScopes { get; private set; }
    public ICollection`1<Uri> TokenTypesOffered { get; private set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AutomaticPseudonyms();
    [CompilerGeneratedAttribute]
public void set_AutomaticPseudonyms(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public ICollection`1<Uri> get_ClaimDialectsOffered();
    [CompilerGeneratedAttribute]
private void set_ClaimDialectsOffered(ICollection`1<Uri> value);
    [CompilerGeneratedAttribute]
public ICollection`1<DisplayClaim> get_ClaimTypesOffered();
    [CompilerGeneratedAttribute]
private void set_ClaimTypesOffered(ICollection`1<DisplayClaim> value);
    [CompilerGeneratedAttribute]
public ICollection`1<DisplayClaim> get_ClaimTypesRequested();
    [CompilerGeneratedAttribute]
private void set_ClaimTypesRequested(ICollection`1<DisplayClaim> value);
    [CompilerGeneratedAttribute]
public ICollection`1<Uri> get_LogicalServiceNamesOffered();
    [CompilerGeneratedAttribute]
private void set_LogicalServiceNamesOffered(ICollection`1<Uri> value);
    [CompilerGeneratedAttribute]
public string get_ServiceDescription();
    [CompilerGeneratedAttribute]
public void set_ServiceDescription(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceDisplayName();
    [CompilerGeneratedAttribute]
public void set_ServiceDisplayName(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<EndpointReference> get_TargetScopes();
    [CompilerGeneratedAttribute]
private void set_TargetScopes(ICollection`1<EndpointReference> value);
    [CompilerGeneratedAttribute]
public ICollection`1<Uri> get_TokenTypesOffered();
    [CompilerGeneratedAttribute]
private void set_TokenTypesOffered(ICollection`1<Uri> value);
}
public class Sustainsys.Saml2.Metadata.X509Data : KeyData {
    [CompilerGeneratedAttribute]
private X509IssuerSerial <IssuerSerial>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <SKI>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<X509Certificate2> <Certificates>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <CRL>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Digest <Digest>k__BackingField;
    public X509IssuerSerial IssuerSerial { get; public set; }
    public Byte[] SKI { get; public set; }
    public string SubjectName { get; public set; }
    public ICollection`1<X509Certificate2> Certificates { get; public set; }
    public Byte[] CRL { get; public set; }
    public X509Digest Digest { get; public set; }
    [CompilerGeneratedAttribute]
public X509IssuerSerial get_IssuerSerial();
    [CompilerGeneratedAttribute]
public void set_IssuerSerial(X509IssuerSerial value);
    [CompilerGeneratedAttribute]
public Byte[] get_SKI();
    [CompilerGeneratedAttribute]
public void set_SKI(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_SubjectName();
    [CompilerGeneratedAttribute]
public void set_SubjectName(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<X509Certificate2> get_Certificates();
    [CompilerGeneratedAttribute]
public void set_Certificates(ICollection`1<X509Certificate2> value);
    [CompilerGeneratedAttribute]
public Byte[] get_CRL();
    [CompilerGeneratedAttribute]
public void set_CRL(Byte[] value);
    [CompilerGeneratedAttribute]
public X509Digest get_Digest();
    [CompilerGeneratedAttribute]
public void set_Digest(X509Digest value);
}
public class Sustainsys.Saml2.Metadata.X509Digest : object {
    [CompilerGeneratedAttribute]
private Uri <Algorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Value>k__BackingField;
    public Uri Algorithm { get; public set; }
    public Byte[] Value { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_Algorithm();
    [CompilerGeneratedAttribute]
public void set_Algorithm(Uri value);
    [CompilerGeneratedAttribute]
public Byte[] get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(Byte[] value);
}
public class Sustainsys.Saml2.Metadata.X509IssuerSerial : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Serial>k__BackingField;
    public string Name { get; private set; }
    public string Serial { get; private set; }
    public X509IssuerSerial(string name, string serial);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Serial();
    [CompilerGeneratedAttribute]
private void set_Serial(string value);
}
public class Sustainsys.Saml2.Metadata.XEncEncryptionMethod : object {
    [CompilerGeneratedAttribute]
private int <KeySize>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <OAEPparams>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Algorithm>k__BackingField;
    public int KeySize { get; public set; }
    public Byte[] OAEPparams { get; public set; }
    public Uri Algorithm { get; public set; }
    [CompilerGeneratedAttribute]
public int get_KeySize();
    [CompilerGeneratedAttribute]
public void set_KeySize(int value);
    [CompilerGeneratedAttribute]
public Byte[] get_OAEPparams();
    [CompilerGeneratedAttribute]
public void set_OAEPparams(Byte[] value);
    [CompilerGeneratedAttribute]
public Uri get_Algorithm();
    [CompilerGeneratedAttribute]
public void set_Algorithm(Uri value);
}
public enum Sustainsys.Saml2.MetadataPublishOverrideType : Enum {
    public int value__;
    public static MetadataPublishOverrideType None;
    public static MetadataPublishOverrideType PublishUnspecified;
    public static MetadataPublishOverrideType PublishEncryption;
    public static MetadataPublishOverrideType PublishSigning;
    public static MetadataPublishOverrideType DoNotPublish;
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.NameIdFormatExtension : object {
    private static Dictionary`2<NameIdFormat, Uri> enumToUri;
    private static NameIdFormatExtension();
    [ExtensionAttribute]
public static Uri GetUri(NameIdFormat nameIdFormat);
}
public class Sustainsys.Saml2.NullLoggerAdapter : object {
    public sealed virtual void WriteError(string message, Exception ex);
    public sealed virtual void WriteInformation(string message);
    public sealed virtual void WriteVerbose(string message);
}
public static class Sustainsys.Saml2.SameSiteHelper : object {
    public static bool EmitSameSiteNone(string userAgent);
    private static bool DisallowsSameSiteNone(string userAgent);
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.Saml2AssertionExtensions : object {
    [ExtensionAttribute]
public static XElement ToXElement(Saml2Assertion assertion);
}
public static class Sustainsys.Saml2.Saml2ClaimTypes : object {
    internal static string ClaimTypeNamespace;
    public static string SessionIndex;
    public static string LogoutNameIdentifier;
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.Saml2ConditionsExtensions : object {
    [ExtensionAttribute]
public static XElement ToXElement(Saml2Conditions conditions);
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.Saml2NameIdExtensions : object {
    [ExtensionAttribute]
public static XElement ToXElement(Saml2NameIdentifier nameIdentifier);
}
public static class Sustainsys.Saml2.Saml2Namespaces : object {
    public static string Saml2PName;
    public static XNamespace Saml2P;
    public static Uri Saml2PUri;
    public static string Saml2Name;
    public static XNamespace Saml2;
    public static Uri Saml2Uri;
    public static string Saml2MetadataName;
    public static XNamespace Saml2Metadata;
    public static string Saml2IdpDiscoveryName;
    public static XNamespace Saml2IdpDiscovery;
    public static XNamespace XmlSchemaInstance;
    public static string SoapEnvelopeName;
    public static XNamespace SoapEnvelope;
    private static Saml2Namespaces();
}
public enum Sustainsys.Saml2.Saml2P.AuthnContextComparisonType : Enum {
    public int value__;
    public static AuthnContextComparisonType Exact;
    public static AuthnContextComparisonType Minimum;
    public static AuthnContextComparisonType Maximum;
    public static AuthnContextComparisonType Better;
}
public class Sustainsys.Saml2.Saml2P.BootstrapContext : object {
    [CompilerGeneratedAttribute]
private SecurityTokenHandler <SecurityTokenHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private SecurityToken <SecurityToken>k__BackingField;
    public SecurityTokenHandler SecurityTokenHandler { get; private set; }
    public SecurityToken SecurityToken { get; private set; }
    public BootstrapContext(SecurityToken token, SecurityTokenHandler handler);
    [CompilerGeneratedAttribute]
public SecurityTokenHandler get_SecurityTokenHandler();
    [CompilerGeneratedAttribute]
private void set_SecurityTokenHandler(SecurityTokenHandler value);
    [CompilerGeneratedAttribute]
public SecurityToken get_SecurityToken();
    [CompilerGeneratedAttribute]
private void set_SecurityToken(SecurityToken value);
}
public class Sustainsys.Saml2.Saml2P.EnvelopedSignatureWriterWithReferenceIdFix : DelegatingXmlDictionaryWriter {
    private MemoryStream _canonicalStream;
    private bool _disposed;
    private DSigSerializer _dsigSerializer;
    private int _elementCount;
    private string _inclusiveNamespacesPrefixList;
    private XmlWriter _originalWriter;
    private string _referenceId;
    private long _signaturePosition;
    private SigningCredentials _signingCredentials;
    private MemoryStream _writerStream;
    public DSigSerializer DSigSerializer { get; public set; }
    public EnvelopedSignatureWriterWithReferenceIdFix(XmlWriter writer, SigningCredentials signingCredentials, string referenceId);
    public EnvelopedSignatureWriterWithReferenceIdFix(XmlWriter writer, SigningCredentials signingCredentials, string referenceId, string inclusivePrefixList);
    internal static String[] TokenizeInclusiveNamespacesPrefixList(string inclusiveNamespacesPrefixList);
    public DSigSerializer get_DSigSerializer();
    public void set_DSigSerializer(DSigSerializer value);
    private void OnEndRootElement();
    private Signature CreateSignature();
    public void WriteSignature();
    public virtual void WriteEndElement();
    public virtual void WriteFullEndElement();
    public virtual void WriteStartElement(string prefix, string localName, string namespace);
    protected virtual void Dispose(bool disposing);
}
internal class Sustainsys.Saml2.Saml2P.FilteringXmlNodeReader : XmlNodeReader {
    private string filterNamespace;
    private string filterNode;
    public FilteringXmlNodeReader(string filterNamespace, string filterNode, XmlNode source);
    public virtual bool Read();
}
public interface Sustainsys.Saml2.Saml2P.ISaml2Message {
    public Uri DestinationUrl { get; }
    public string MessageName { get; }
    public string RelayState { get; }
    public X509Certificate2 SigningCertificate { get; }
    public string SigningAlgorithm { get; }
    public EntityId Issuer { get; }
    public abstract virtual Uri get_DestinationUrl();
    public abstract virtual string ToXml();
    public abstract virtual XElement ToXElement();
    public abstract virtual string get_MessageName();
    public abstract virtual string get_RelayState();
    public abstract virtual X509Certificate2 get_SigningCertificate();
    public abstract virtual string get_SigningAlgorithm();
    public abstract virtual EntityId get_Issuer();
}
internal static class Sustainsys.Saml2.Saml2P.LogMessages : object {
    internal static string IDX13102;
    internal static string IDX13106;
    internal static string IDX13108;
    internal static string IDX13109;
    internal static string IDX13137;
    internal static string IDX13141;
    internal static string IDX13302;
    internal static string IDX13303;
    internal static string IDX30213;
}
public enum Sustainsys.Saml2.Saml2P.NameIdFormat : Enum {
    public int value__;
    public static NameIdFormat NotConfigured;
    public static NameIdFormat Unspecified;
    public static NameIdFormat EmailAddress;
    public static NameIdFormat X509SubjectName;
    public static NameIdFormat WindowsDomainQualifiedName;
    public static NameIdFormat KerberosPrincipalName;
    public static NameIdFormat EntityIdentifier;
    public static NameIdFormat Persistent;
    public static NameIdFormat Transient;
}
public class Sustainsys.Saml2.Saml2P.Saml2ArtifactResolve : Saml2RequestBase {
    [CompilerGeneratedAttribute]
private string <Artifact>k__BackingField;
    public string Artifact { get; public set; }
    [ExcludeFromCodeCoverageAttribute]
protected string LocalName { get; }
    [CompilerGeneratedAttribute]
public string get_Artifact();
    [CompilerGeneratedAttribute]
public void set_Artifact(string value);
    protected virtual string get_LocalName();
    public virtual string ToXml();
    public virtual XElement ToXElement();
}
public class Sustainsys.Saml2.Saml2P.Saml2ArtifactResponse : object {
    private XmlElement message;
    [CompilerGeneratedAttribute]
private Saml2StatusCode <Status>k__BackingField;
    public Saml2StatusCode Status { get; }
    public Saml2ArtifactResponse(XmlElement xml);
    public XmlElement GetMessage();
    [CompilerGeneratedAttribute]
public Saml2StatusCode get_Status();
}
public class Sustainsys.Saml2.Saml2P.Saml2AuthenticationRequest : Saml2RequestBase {
    [CompilerGeneratedAttribute]
private Uri <AssertionConsumerServiceUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <AttributeConsumingServiceIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2Scoping <Scoping>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2NameIdPolicy <NameIdPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2RequestedAuthnContext <RequestedAuthnContext>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Saml2BindingType> <Binding>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceAuthentication>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPassive>k__BackingField;
    protected string LocalName { get; }
    public Uri AssertionConsumerServiceUrl { get; public set; }
    public Nullable`1<int> AttributeConsumingServiceIndex { get; public set; }
    public Saml2Scoping Scoping { get; public set; }
    public Saml2NameIdPolicy NameIdPolicy { get; public set; }
    public Saml2RequestedAuthnContext RequestedAuthnContext { get; public set; }
    public Nullable`1<Saml2BindingType> Binding { get; public set; }
    public bool ForceAuthentication { get; public set; }
    public bool IsPassive { get; public set; }
    public Saml2AuthenticationRequest(XmlElement xml, string relayState);
    protected virtual string get_LocalName();
    public virtual XElement ToXElement();
    private void AddNameIdPolicy(XElement xElement);
    private void AddScoping(XElement xElement);
    public virtual string ToXml();
    public static Saml2AuthenticationRequest Read(string xml, string relayState);
    [CompilerGeneratedAttribute]
public Uri get_AssertionConsumerServiceUrl();
    [CompilerGeneratedAttribute]
public void set_AssertionConsumerServiceUrl(Uri value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_AttributeConsumingServiceIndex();
    [CompilerGeneratedAttribute]
public void set_AttributeConsumingServiceIndex(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Saml2Scoping get_Scoping();
    [CompilerGeneratedAttribute]
public void set_Scoping(Saml2Scoping value);
    [CompilerGeneratedAttribute]
public Saml2NameIdPolicy get_NameIdPolicy();
    [CompilerGeneratedAttribute]
public void set_NameIdPolicy(Saml2NameIdPolicy value);
    [CompilerGeneratedAttribute]
public Saml2RequestedAuthnContext get_RequestedAuthnContext();
    [CompilerGeneratedAttribute]
public void set_RequestedAuthnContext(Saml2RequestedAuthnContext value);
    [CompilerGeneratedAttribute]
public Nullable`1<Saml2BindingType> get_Binding();
    [CompilerGeneratedAttribute]
public void set_Binding(Nullable`1<Saml2BindingType> value);
    [CompilerGeneratedAttribute]
public bool get_ForceAuthentication();
    [CompilerGeneratedAttribute]
public void set_ForceAuthentication(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPassive();
    [CompilerGeneratedAttribute]
public void set_IsPassive(bool value);
}
public class Sustainsys.Saml2.Saml2P.Saml2EncryptedAssertion : Saml2Assertion {
    [CompilerGeneratedAttribute]
private EncryptingCredentials <EncryptingCredentials>k__BackingField;
    public EncryptingCredentials EncryptingCredentials { get; public set; }
    public Saml2EncryptedAssertion(Saml2NameIdentifier issuer);
    [CompilerGeneratedAttribute]
public EncryptingCredentials get_EncryptingCredentials();
    [CompilerGeneratedAttribute]
public void set_EncryptingCredentials(EncryptingCredentials value);
}
public class Sustainsys.Saml2.Saml2P.Saml2IdpEntry : object {
    [CompilerGeneratedAttribute]
private Uri <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    private EntityId providerId;
    public Uri Location { get; public set; }
    public string Name { get; public set; }
    public EntityId ProviderId { get; public set; }
    public Saml2IdpEntry(EntityId providerId);
    [CompilerGeneratedAttribute]
public Uri get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(Uri value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public EntityId get_ProviderId();
    public void set_ProviderId(EntityId value);
    public XElement ToXElement();
}
public class Sustainsys.Saml2.Saml2P.Saml2LogoutRequest : Saml2RequestBase {
    [CompilerGeneratedAttribute]
private Saml2NameIdentifier <NameId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionIndex>k__BackingField;
    protected string LocalName { get; }
    public Saml2NameIdentifier NameId { get; public set; }
    public string SessionIndex { get; public set; }
    public Saml2LogoutRequest(Saml2Id id);
    public static Saml2LogoutRequest FromXml(XmlElement xml);
    protected virtual string get_LocalName();
    [CompilerGeneratedAttribute]
public Saml2NameIdentifier get_NameId();
    [CompilerGeneratedAttribute]
public void set_NameId(Saml2NameIdentifier value);
    [CompilerGeneratedAttribute]
public string get_SessionIndex();
    [CompilerGeneratedAttribute]
public void set_SessionIndex(string value);
    public virtual string ToXml();
    public virtual XElement ToXElement();
}
public class Sustainsys.Saml2.Saml2P.Saml2LogoutResponse : Saml2StatusResponseType {
    public Saml2LogoutResponse(Saml2StatusCode status);
    public virtual string ToXml();
    public virtual XElement ToXElement();
    public void AppendTo(XmlNode parentNode);
    public static Saml2LogoutResponse FromXml(XmlElement xml);
    [CompilerGeneratedAttribute]
private void <AppendTo>b__3_0(XmlElement x);
}
[ExtensionAttribute]
internal static class Sustainsys.Saml2.Saml2P.Saml2MessageExtensions : object {
    [ExtensionAttribute]
public static string ToXml(TMessage message, Action`1<XDocument> xmlCreatedNotification);
}
public class Sustainsys.Saml2.Saml2P.Saml2NameIdPolicy : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowCreate>k__BackingField;
    [CompilerGeneratedAttribute]
private NameIdFormat <Format>k__BackingField;
    public Nullable`1<bool> AllowCreate { get; }
    public NameIdFormat Format { get; }
    public Saml2NameIdPolicy(Nullable`1<bool> allowCreate, NameIdFormat format);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowCreate();
    [CompilerGeneratedAttribute]
public NameIdFormat get_Format();
}
public class Sustainsys.Saml2.Saml2P.Saml2PSecurityTokenHandler : Saml2SecurityTokenHandler {
    private static Uri bearerUri;
    public Saml2PSecurityTokenHandler(SPOptions spOptions);
    private static Saml2PSecurityTokenHandler();
    protected virtual void ProcessAuthenticationStatement(Saml2AuthenticationStatement statement, ClaimsIdentity subject, string issuer);
    public virtual ClaimsPrincipal ValidateToken(string token, TokenValidationParameters validationParameters, SecurityToken& validatedToken);
    protected virtual void ValidateSubject(Saml2SecurityToken samlToken, TokenValidationParameters validationParameters);
}
internal class Sustainsys.Saml2.Saml2P.Saml2PSerializer : Saml2Serializer {
    private SPOptions spOptions;
    [CompilerGeneratedAttribute]
private ICollection`1<X509Certificate2> <DecryptionCertificates>k__BackingField;
    public ICollection`1<X509Certificate2> DecryptionCertificates { get; public set; }
    public Saml2PSerializer(SPOptions spOptions);
    [CompilerGeneratedAttribute]
public ICollection`1<X509Certificate2> get_DecryptionCertificates();
    [CompilerGeneratedAttribute]
public void set_DecryptionCertificates(ICollection`1<X509Certificate2> value);
    public virtual Saml2Assertion ReadAssertion(XmlReader reader);
    public virtual void WriteEncryptedAssertion(XmlWriter writer, Saml2EncryptedAssertion assertion);
    public virtual void WriteAssertion(XmlWriter writer, Saml2Assertion assertion);
    protected virtual Saml2AuthenticationContext ReadAuthenticationContext(XmlDictionaryReader reader);
    internal static Exception LogReadException(string message);
    internal static Exception LogReadException(string message, Exception ex);
    internal static Exception LogReadException(string format, Object[] args);
    internal static Exception LogReadException(string format, Exception inner, Object[] args);
}
public abstract class Sustainsys.Saml2.Saml2P.Saml2RequestBase : object {
    [CompilerGeneratedAttribute]
private Saml2Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssueInstant>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <DestinationUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private EntityId <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<XElement> <ExtensionContents>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelayState>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Certificate2 <SigningCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SigningAlgorithm>k__BackingField;
    public Saml2Id Id { get; protected set; }
    public string Version { get; }
    public string IssueInstant { get; }
    public string MessageName { get; }
    public Uri DestinationUrl { get; public set; }
    public EntityId Issuer { get; public set; }
    public List`1<XElement> ExtensionContents { get; }
    protected string LocalName { get; }
    public string RelayState { get; protected set; }
    public X509Certificate2 SigningCertificate { get; public set; }
    public string SigningAlgorithm { get; public set; }
    [CompilerGeneratedAttribute]
public Saml2Id get_Id();
    [CompilerGeneratedAttribute]
protected void set_Id(Saml2Id value);
    public string get_Version();
    [CompilerGeneratedAttribute]
public string get_IssueInstant();
    public sealed virtual string get_MessageName();
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_DestinationUrl();
    [CompilerGeneratedAttribute]
public void set_DestinationUrl(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual EntityId get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(EntityId value);
    [CompilerGeneratedAttribute]
public List`1<XElement> get_ExtensionContents();
    protected abstract virtual string get_LocalName();
    public abstract virtual XElement ToXElement();
    [IteratorStateMachineAttribute("Sustainsys.Saml2.Saml2P.Saml2RequestBase/<ToXNodes>d__25")]
protected IEnumerable`1<XObject> ToXNodes();
    protected void ReadBaseProperties(XmlElement xml);
    private void ValidateCorrectDocument(XmlElement xml);
    public abstract virtual string ToXml();
    [CompilerGeneratedAttribute]
public sealed virtual string get_RelayState();
    [CompilerGeneratedAttribute]
protected void set_RelayState(string value);
    [CompilerGeneratedAttribute]
public sealed virtual X509Certificate2 get_SigningCertificate();
    [CompilerGeneratedAttribute]
public void set_SigningCertificate(X509Certificate2 value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SigningAlgorithm();
    [CompilerGeneratedAttribute]
public void set_SigningAlgorithm(string value);
}
public class Sustainsys.Saml2.Saml2P.Saml2RequestedAuthnContext : object {
    [CompilerGeneratedAttribute]
private Uri <ClassRef>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthnContextComparisonType <Comparison>k__BackingField;
    public Uri ClassRef { get; }
    public AuthnContextComparisonType Comparison { get; }
    public Saml2RequestedAuthnContext(RequestedAuthnContextElement requestedAuthnContextElement);
    public Saml2RequestedAuthnContext(Uri classRef, AuthnContextComparisonType comparison);
    [CompilerGeneratedAttribute]
public Uri get_ClassRef();
    [CompilerGeneratedAttribute]
public AuthnContextComparisonType get_Comparison();
}
public class Sustainsys.Saml2.Saml2P.Saml2Response : object {
    private IEnumerable`1<XmlElement> allAssertionElementNodes;
    [CompilerGeneratedAttribute]
private X509Certificate2 <SigningCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SigningAlgorithm>k__BackingField;
    private XmlElement xmlElement;
    [CompilerGeneratedAttribute]
private Saml2Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2Id <ExpectedInResponseTo>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2Id <InResponseTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <IssueInstant>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2StatusCode <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecondLevelStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private EntityId <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <DestinationUrl>k__BackingField;
    private Uri audience;
    private IEnumerable`1<ClaimsIdentity> claimsIdentities;
    private Exception createClaimsException;
    [CompilerGeneratedAttribute]
private string <RelayState>k__BackingField;
    private Nullable`1<DateTime> sessionNotOnOrAfter;
    [ExcludeFromCodeCoverageAttribute]
public X509Certificate2 SigningCertificate { get; }
    [ExcludeFromCodeCoverageAttribute]
public string SigningAlgorithm { get; public set; }
    public XmlElement XmlElement { get; }
    public string MessageName { get; }
    public Saml2Id Id { get; }
    public Saml2Id ExpectedInResponseTo { get; private set; }
    public Saml2Id InResponseTo { get; private set; }
    public DateTime IssueInstant { get; }
    public Saml2StatusCode Status { get; }
    public string StatusMessage { get; }
    public string SecondLevelStatus { get; }
    public EntityId Issuer { get; }
    public Uri DestinationUrl { get; }
    public string RelayState { get; }
    public Nullable`1<DateTime> SessionNotOnOrAfter { get; }
    public Saml2Response(XmlElement xml, Saml2Id expectedInResponseTo, IOptions options);
    public Saml2Response(XmlElement xml, Saml2Id expectedInResponseTo);
    public Saml2Response(EntityId issuer, X509Certificate2 signingCertificate, Uri destinationUrl, Saml2Id inResponseTo, ClaimsIdentity[] claimsIdentities);
    public Saml2Response(EntityId issuer, X509Certificate2 signingCertificate, Uri destinationUrl, Saml2Id inResponseTo, string relayState, ClaimsIdentity[] claimsIdentities);
    public Saml2Response(EntityId issuer, X509Certificate2 issuerCertificate, Uri destinationUrl, Saml2Id inResponseTo, string relayState, Uri audience, ClaimsIdentity[] claimsIdentities);
    public static Saml2Response Read(string xml);
    public static Saml2Response Read(string xml, Saml2Id expectedInResponseTo);
    public static Saml2Response Read(string xml, Saml2Id expectedInResponseTo, IOptions options);
    private void ReadInResponseTo(XmlElement xml);
    private void ValidateInResponseTo(IOptions options, IEnumerable`1<ClaimsIdentity> claimsIdentities);
    [CompilerGeneratedAttribute]
public sealed virtual X509Certificate2 get_SigningCertificate();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SigningAlgorithm();
    [CompilerGeneratedAttribute]
public void set_SigningAlgorithm(string value);
    public XmlElement get_XmlElement();
    public sealed virtual XElement ToXElement();
    public sealed virtual string get_MessageName();
    public sealed virtual string ToXml();
    private void CreateXmlElement();
    [CompilerGeneratedAttribute]
public Saml2Id get_Id();
    [CompilerGeneratedAttribute]
public Saml2Id get_ExpectedInResponseTo();
    [CompilerGeneratedAttribute]
private void set_ExpectedInResponseTo(Saml2Id value);
    [CompilerGeneratedAttribute]
public Saml2Id get_InResponseTo();
    [CompilerGeneratedAttribute]
private void set_InResponseTo(Saml2Id value);
    [CompilerGeneratedAttribute]
public DateTime get_IssueInstant();
    [CompilerGeneratedAttribute]
public Saml2StatusCode get_Status();
    [CompilerGeneratedAttribute]
public string get_StatusMessage();
    [CompilerGeneratedAttribute]
public string get_SecondLevelStatus();
    [CompilerGeneratedAttribute]
public sealed virtual EntityId get_Issuer();
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_DestinationUrl();
    private IEnumerable`1<XmlElement> GetAllAssertionElementNodes(IOptions options);
    private IEnumerable`1<XmlElement> RetrieveAssertionElements(IOptions options);
    private static IEnumerable`1<X509Certificate2> GetCertificatesValidForDecryption(IOptions options);
    private void Validate(IOptions options, IdentityProvider idp);
    private void CheckIfUnsolicitedIsAllowed(IOptions options, IdentityProvider idp);
    private void ValidateSignature(IOptions options, IdentityProvider idp);
    public IEnumerable`1<ClaimsIdentity> GetClaims(IOptions options);
    public IEnumerable`1<ClaimsIdentity> GetClaims(IOptions options, IDictionary`2<string, string> relayData);
    [IteratorStateMachineAttribute("Sustainsys.Saml2.Saml2P.Saml2Response/<CreateClaims>d__66")]
private IEnumerable`1<ClaimsIdentity> CreateClaims(IOptions options, IdentityProvider idp);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RelayState();
    public Nullable`1<DateTime> get_SessionNotOnOrAfter();
}
public class Sustainsys.Saml2.Saml2P.Saml2Scoping : object {
    [CompilerGeneratedAttribute]
private IList`1<Saml2IdpEntry> <IdPEntries>k__BackingField;
    private Nullable`1<int> proxyCount;
    [CompilerGeneratedAttribute]
private IList`1<EntityId> <RequesterIds>k__BackingField;
    public IList`1<Saml2IdpEntry> IdPEntries { get; }
    public Nullable`1<int> ProxyCount { get; public set; }
    public IList`1<EntityId> RequesterIds { get; }
    [CompilerGeneratedAttribute]
public IList`1<Saml2IdpEntry> get_IdPEntries();
    public Saml2Scoping With(Saml2IdpEntry idpEntry);
    public Nullable`1<int> get_ProxyCount();
    public void set_ProxyCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<EntityId> get_RequesterIds();
    public Saml2Scoping WithRequesterId(EntityId requesterId);
    public XElement ToXElement();
}
public static class Sustainsys.Saml2.Saml2P.Saml2SoapBinding : object {
    private static string soapFormatString;
    public static string CreateSoapBody(string payload);
    public static XmlElement ExtractBody(string xml);
    public static XmlElement SendSoapRequest(string payload, Uri destination);
    public static XmlElement SendSoapRequest(string payload, Uri destination, IEnumerable`1<X509Certificate2> clientCertificates);
}
public enum Sustainsys.Saml2.Saml2P.Saml2StatusCode : Enum {
    public int value__;
    public static Saml2StatusCode Success;
    public static Saml2StatusCode Requester;
    public static Saml2StatusCode Responder;
    public static Saml2StatusCode VersionMismatch;
    public static Saml2StatusCode AuthnFailed;
    public static Saml2StatusCode InvalidAttrNameOrValue;
    public static Saml2StatusCode InvalidNameIdPolicy;
    public static Saml2StatusCode NoAuthnContext;
    public static Saml2StatusCode NoAvailableIdp;
    public static Saml2StatusCode NoPassive;
    public static Saml2StatusCode NoSupportedIdp;
    public static Saml2StatusCode PartialLogout;
    public static Saml2StatusCode ProxyCountExceeded;
    public static Saml2StatusCode RequestDenied;
    public static Saml2StatusCode RequestUnsupported;
    public static Saml2StatusCode RequestVersionDeprecated;
    public static Saml2StatusCode RequestVersionTooHigh;
    public static Saml2StatusCode RequestVersionTooLow;
    public static Saml2StatusCode ResourceNotRecognized;
    public static Saml2StatusCode TooManyResponses;
    public static Saml2StatusCode UnknownAttrProfile;
    public static Saml2StatusCode UnknownPrincipal;
    public static Saml2StatusCode UnsupportedBinding;
}
public abstract class Sustainsys.Saml2.Saml2P.Saml2StatusResponseType : object {
    [CompilerGeneratedAttribute]
private Uri <DestinationUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private EntityId <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2Id <InResponseTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelayState>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Certificate2 <SigningCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SigningAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2StatusCode <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2Id <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <IssueInstant>k__BackingField;
    public Uri DestinationUrl { get; public set; }
    public EntityId Issuer { get; public set; }
    public Saml2Id InResponseTo { get; public set; }
    public string MessageName { get; }
    public string RelayState { get; public set; }
    public X509Certificate2 SigningCertificate { get; public set; }
    public string SigningAlgorithm { get; public set; }
    public Saml2StatusCode Status { get; }
    public Saml2Id Id { get; public set; }
    public DateTime IssueInstant { get; public set; }
    protected Saml2StatusResponseType(Saml2StatusCode status);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_DestinationUrl();
    [CompilerGeneratedAttribute]
public void set_DestinationUrl(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual EntityId get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(EntityId value);
    [CompilerGeneratedAttribute]
public Saml2Id get_InResponseTo();
    [CompilerGeneratedAttribute]
public void set_InResponseTo(Saml2Id value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MessageName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_RelayState();
    [CompilerGeneratedAttribute]
public void set_RelayState(string value);
    [CompilerGeneratedAttribute]
public sealed virtual X509Certificate2 get_SigningCertificate();
    [CompilerGeneratedAttribute]
public void set_SigningCertificate(X509Certificate2 value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SigningAlgorithm();
    [CompilerGeneratedAttribute]
public void set_SigningAlgorithm(string value);
    [CompilerGeneratedAttribute]
public Saml2StatusCode get_Status();
    [CompilerGeneratedAttribute]
public Saml2Id get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Saml2Id value);
    [CompilerGeneratedAttribute]
public DateTime get_IssueInstant();
    [CompilerGeneratedAttribute]
public void set_IssueInstant(DateTime value);
    public abstract virtual string ToXml();
    public abstract virtual XElement ToXElement();
    protected void ReadBaseProperties(XmlElement xml);
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.Saml2StatementExtension : object {
    [ExtensionAttribute]
public static XElement ToXElement(Saml2Statement statement);
    private static XElement ToXElement(Saml2AuthenticationStatement authnStatement);
    private static XElement ToXElement(Saml2AttributeStatement attributeStatement);
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.Saml2SubjectExtensions : object {
    [ExtensionAttribute]
public static XElement ToXElement(Saml2Subject subject);
    [ExtensionAttribute]
public static XElement ToXElement(Saml2SubjectConfirmation subjectConfirmation);
    [ExtensionAttribute]
public static XElement ToXElement(Saml2SubjectConfirmationData subjectConfirmationData);
}
internal static class Sustainsys.Saml2.SecureKeyGenerator : object {
    private static RNGCryptoServiceProvider random;
    private static SecureKeyGenerator();
    public static string CreateRelayState();
    public static Byte[] CreateArtifactMessageHandle();
}
public class Sustainsys.Saml2.Selectors.NullSecurityTokenResolver : SecurityTokenResolver {
    [CompilerGeneratedAttribute]
private static SecurityTokenResolver <Instance>k__BackingField;
    public static SecurityTokenResolver Instance { get; }
    private static NullSecurityTokenResolver();
    protected virtual bool TryResolveTokenCore(SecurityKeyIdentifier keyIdentifier, SecurityToken& token);
    protected virtual bool TryResolveTokenCore(SecurityKeyIdentifierClause keyIdentifier, SecurityToken& token);
    protected virtual bool TryResolveSecurityKeyCore(SecurityKeyIdentifierClause keyIdentifier, SecurityKey& key);
    [CompilerGeneratedAttribute]
public static SecurityTokenResolver get_Instance();
}
public abstract class Sustainsys.Saml2.Selectors.SecurityTokenResolver : object {
    public SecurityToken ResolveToken(SecurityKeyIdentifier keyIdentifier);
    public bool TryResolveToken(SecurityKeyIdentifier keyIdentifier, SecurityToken& token);
    public SecurityToken ResolveToken(SecurityKeyIdentifierClause keyIdentifierClause);
    public bool TryResolveToken(SecurityKeyIdentifierClause keyIdentifierClause, SecurityToken& token);
    public SecurityKey ResolveSecurityKey(SecurityKeyIdentifierClause keyIdentifierClause);
    public bool TryResolveSecurityKey(SecurityKeyIdentifierClause keyIdentifierClause, SecurityKey& key);
    public virtual void LoadCustomConfiguration(XmlNodeList nodeList);
    protected abstract virtual bool TryResolveTokenCore(SecurityKeyIdentifier keyIdentifier, SecurityToken& token);
    protected abstract virtual bool TryResolveTokenCore(SecurityKeyIdentifierClause keyIdentifier, SecurityToken& token);
    protected abstract virtual bool TryResolveSecurityKeyCore(SecurityKeyIdentifierClause keyIdentifier, SecurityKey& key);
}
public class Sustainsys.Saml2.ServiceCertificate : object {
    [CompilerGeneratedAttribute]
private X509Certificate2 <Certificate>k__BackingField;
    [CompilerGeneratedAttribute]
private CertificateStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private CertificateUse <Use>k__BackingField;
    [CompilerGeneratedAttribute]
private MetadataPublishOverrideType <MetadataPublishOverride>k__BackingField;
    public X509Certificate2 Certificate { get; public set; }
    public CertificateStatus Status { get; public set; }
    public CertificateUse Use { get; public set; }
    public MetadataPublishOverrideType MetadataPublishOverride { get; public set; }
    public ServiceCertificate(ServiceCertificateElement serviceCertElement);
    [CompilerGeneratedAttribute]
public X509Certificate2 get_Certificate();
    [CompilerGeneratedAttribute]
public void set_Certificate(X509Certificate2 value);
    [CompilerGeneratedAttribute]
public CertificateStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(CertificateStatus value);
    [CompilerGeneratedAttribute]
public CertificateUse get_Use();
    [CompilerGeneratedAttribute]
public void set_Use(CertificateUse value);
    [CompilerGeneratedAttribute]
public MetadataPublishOverrideType get_MetadataPublishOverride();
    [CompilerGeneratedAttribute]
public void set_MetadataPublishOverride(MetadataPublishOverrideType value);
}
public class Sustainsys.Saml2.SignedXmlWithIdFix : SignedXml {
    public SignedXmlWithIdFix(XmlElement element);
    public SignedXmlWithIdFix(XmlDocument doc);
    public virtual XmlElement GetIdElement(XmlDocument document, string id);
}
public class Sustainsys.Saml2.StoredRequestState : object {
    public static string CookieNameBase;
    [CompilerGeneratedAttribute]
private EntityId <Idp>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ReturnUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Saml2Id <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <RelayData>k__BackingField;
    public EntityId Idp { get; }
    public Uri ReturnUrl { get; }
    public Saml2Id MessageId { get; }
    public IDictionary`2<string, string> RelayData { get; }
    public StoredRequestState(EntityId idp, Uri returnUrl, Saml2Id messageId, IDictionary`2<string, string> relayData);
    public StoredRequestState(Byte[] data);
    [CompilerGeneratedAttribute]
public EntityId get_Idp();
    [CompilerGeneratedAttribute]
public Uri get_ReturnUrl();
    [CompilerGeneratedAttribute]
public Saml2Id get_MessageId();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_RelayData();
    public Byte[] Serialize();
}
public abstract class Sustainsys.Saml2.Tokens.AsymmetricSecurityKey : SecurityKey {
    public abstract virtual AsymmetricAlgorithm GetAsymmetricAlgorithm(string algorithm, bool privateKey);
    public abstract virtual HashAlgorithm GetHashAlgorithmForSignature(string algorithm);
    public abstract virtual AsymmetricSignatureDeformatter GetSignatureDeformatter(string algorithm);
    public abstract virtual AsymmetricSignatureFormatter GetSignatureFormatter(string algorithm);
    public abstract virtual bool HasPrivateKey();
}
public class Sustainsys.Saml2.Tokens.AudienceRestriction : object {
    [CompilerGeneratedAttribute]
private AudienceUriMode <AudienceMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<Uri> <AllowedAudienceUris>k__BackingField;
    public AudienceUriMode AudienceMode { get; public set; }
    public Collection`1<Uri> AllowedAudienceUris { get; }
    public AudienceRestriction(AudienceUriMode audienceMode);
    [CompilerGeneratedAttribute]
public AudienceUriMode get_AudienceMode();
    [CompilerGeneratedAttribute]
public void set_AudienceMode(AudienceUriMode value);
    [CompilerGeneratedAttribute]
public Collection`1<Uri> get_AllowedAudienceUris();
}
public enum Sustainsys.Saml2.Tokens.AudienceUriMode : Enum {
    public int value__;
    public static AudienceUriMode Always;
    public static AudienceUriMode BearerKeyOnly;
    public static AudienceUriMode Never;
}
public abstract class Sustainsys.Saml2.Tokens.BinaryKeyIdentifierClause : SecurityKeyIdentifierClause {
    private Byte[] identificationData;
    private bool cloneBuffer;
    protected BinaryKeyIdentifierClause(string clauseType, Byte[] identificationData, bool cloneBuffer, Byte[] derivationNonce, int derivationLength);
    protected BinaryKeyIdentifierClause(string clauseType, Byte[] identificationData, bool cloneBuffer);
    public Byte[] GetBuffer();
    public Byte[] GetRawBuffer();
    public bool Matches(Byte[] data, int offset);
    public bool Matches(Byte[] data);
    public virtual bool Matches(SecurityKeyIdentifierClause keyIdentifierClause);
}
public class Sustainsys.Saml2.Tokens.DsaKeyIdentifierClause : SecurityKeyIdentifierClause {
    private DSAParameters parameters;
    private DsaSecurityKey key;
    private DSA dsa;
    public DSA Dsa { get; }
    public bool CanCreateKey { get; }
    public DsaKeyIdentifierClause(DSAParameters parameters);
    public DsaKeyIdentifierClause(DSA dsa);
    public DSA get_Dsa();
    public virtual bool get_CanCreateKey();
    public virtual SecurityKey CreateKey();
    public virtual bool Matches(SecurityKeyIdentifierClause keyIdentifierClause);
    public bool Matches(DSAParameters p2);
}
public class Sustainsys.Saml2.Tokens.DsaSecurityKey : AsymmetricSecurityKey {
    private DSA dsa;
    public int KeySize { get; }
    public DsaSecurityKey(DSA dsa);
    public virtual AsymmetricAlgorithm GetAsymmetricAlgorithm(string algorithm, bool privateKey);
    public virtual HashAlgorithm GetHashAlgorithmForSignature(string algorithm);
    public virtual AsymmetricSignatureDeformatter GetSignatureDeformatter(string algorithm);
    public virtual AsymmetricSignatureFormatter GetSignatureFormatter(string algorithm);
    public virtual int get_KeySize();
    public virtual Byte[] DecryptKey(string algorithm, Byte[] keyData);
    public virtual Byte[] EncryptKey(string algorithm, Byte[] keyData);
    public virtual bool IsAsymmetricAlgorithm(string algorithm);
    public virtual bool IsSupportedAlgorithm(string algorithm);
    public virtual bool IsSymmetricAlgorithm(string algorithm);
    public virtual bool HasPrivateKey();
}
public class Sustainsys.Saml2.Tokens.EcKeyIdentifierClause : SecurityKeyIdentifierClause {
    [CompilerGeneratedAttribute]
private ECParameters <Parameters>k__BackingField;
    public ECParameters Parameters { get; private set; }
    public bool CanCreateKey { get; }
    public EcKeyIdentifierClause(ECParameters parameters);
    [CompilerGeneratedAttribute]
public ECParameters get_Parameters();
    [CompilerGeneratedAttribute]
private void set_Parameters(ECParameters value);
    public virtual bool get_CanCreateKey();
    public virtual SecurityKey CreateKey();
    public virtual bool Matches(SecurityKeyIdentifierClause keyIdentifierClause);
    public bool Matches(ECParameters other);
}
public class Sustainsys.Saml2.Tokens.EcSecurityKey : AsymmetricSecurityKey {
    private ECDsa ecDsa;
    public int KeySize { get; }
    public EcSecurityKey(ECParameters parameters);
    public virtual AsymmetricAlgorithm GetAsymmetricAlgorithm(string algorithm, bool privateKey);
    public virtual HashAlgorithm GetHashAlgorithmForSignature(string algorithm);
    public virtual AsymmetricSignatureDeformatter GetSignatureDeformatter(string algorithm);
    public virtual AsymmetricSignatureFormatter GetSignatureFormatter(string algorithm);
    public virtual int get_KeySize();
    public virtual Byte[] DecryptKey(string algorithm, Byte[] keyData);
    public virtual Byte[] EncryptKey(string algorithm, Byte[] keyData);
    public virtual bool IsAsymmetricAlgorithm(string algorithm);
    public virtual bool IsSupportedAlgorithm(string algorithm);
    public virtual bool IsSymmetricAlgorithm(string algorithm);
    public virtual bool HasPrivateKey();
}
public class Sustainsys.Saml2.Tokens.EcSignatureDeformatter : AsymmetricSignatureDeformatter {
    private ECDsa ecDsa;
    private HashAlgorithmName hashAlgorithmName;
    public EcSignatureDeformatter(ECDsa key, HashAlgorithmName algorithm);
    public virtual void SetHashAlgorithm(string name);
    public virtual void SetKey(AsymmetricAlgorithm key);
    public virtual bool VerifySignature(Byte[] rgbHash, Byte[] rgbSignature);
}
public class Sustainsys.Saml2.Tokens.EcSignatureFormatter : AsymmetricSignatureFormatter {
    private ECDsa ecDsa;
    private HashAlgorithmName hashAlgorithmName;
    public EcSignatureFormatter(ECDsa key, HashAlgorithmName algorithm);
    public virtual Byte[] CreateSignature(Byte[] rgbHash);
    public virtual void SetHashAlgorithm(string name);
    public virtual void SetKey(AsymmetricAlgorithm key);
}
internal static class Sustainsys.Saml2.Tokens.EcUtils : object {
    public static bool ByteArraysEqual(Byte[] a, Byte[] b);
    private static bool PointsEqual(ECPoint a, ECPoint b);
    private static bool CurvesEqual(ECCurve a, ECCurve b);
    public static bool ParametersEqual(ECParameters a, ECParameters b);
    public static HashAlgorithmName GetHashAlgorithmName(string name);
    public static ECDsa ValidateEcDsaKey(AsymmetricAlgorithm key);
}
public class Sustainsys.Saml2.Tokens.KeyNameIdentifierClause : SecurityKeyIdentifierClause {
    [CompilerGeneratedAttribute]
private string <KeyName>k__BackingField;
    public string KeyName { get; private set; }
    public KeyNameIdentifierClause(string keyName);
    [CompilerGeneratedAttribute]
public string get_KeyName();
    [CompilerGeneratedAttribute]
private void set_KeyName(string value);
    public virtual bool Matches(SecurityKeyIdentifierClause keyIdentifierClause);
    public bool Matches(string keyName);
    public virtual string ToString();
}
public class Sustainsys.Saml2.Tokens.RsaKeyIdentifierClause : SecurityKeyIdentifierClause {
    private RSAParameters parameters;
    private RsaSecurityKey key;
    private RSA rsa;
    public RSA Rsa { get; }
    public bool CanCreateKey { get; }
    public RsaKeyIdentifierClause(RSAParameters parameters);
    public RsaKeyIdentifierClause(RSA rsa);
    public RSA get_Rsa();
    public virtual bool get_CanCreateKey();
    public virtual SecurityKey CreateKey();
    public Byte[] GetExponent();
    public Byte[] GetModulus();
    public virtual bool Matches(SecurityKeyIdentifierClause keyIdentifierClause);
    public bool Matches(RSAParameters p2);
}
public class Sustainsys.Saml2.Tokens.RsaSecurityKey : AsymmetricSecurityKey {
    private RSA rsa;
    public int KeySize { get; }
    public RsaSecurityKey(RSA rsa);
    public virtual AsymmetricAlgorithm GetAsymmetricAlgorithm(string algorithm, bool privateKey);
    public virtual HashAlgorithm GetHashAlgorithmForSignature(string algorithm);
    public virtual AsymmetricSignatureDeformatter GetSignatureDeformatter(string algorithm);
    public virtual AsymmetricSignatureFormatter GetSignatureFormatter(string algorithm);
    public virtual int get_KeySize();
    public virtual Byte[] DecryptKey(string algorithm, Byte[] keyData);
    public virtual Byte[] EncryptKey(string algorithm, Byte[] keyData);
    public virtual bool IsAsymmetricAlgorithm(string algorithm);
    public virtual bool IsSupportedAlgorithm(string algorithm);
    public virtual bool IsSymmetricAlgorithm(string algorithm);
    public virtual bool HasPrivateKey();
}
public static class Sustainsys.Saml2.Tokens.SecurityAlgorithms : object {
    public static string Aes128Encryption;
    public static string Aes128KeyWrap;
    public static string Aes192Encryption;
    public static string Aes192KeyWrap;
    public static string Aes256Encryption;
    public static string Aes256KeyWrap;
    public static string DesEncryption;
    public static string DsaSha1Signature;
    public static string ExclusiveC14n;
    public static string ExclusiveC14nWithComments;
    public static string HmacSha1Signature;
    public static string Psha1KeyDerivation;
    public static string Ripemd160Digest;
    public static string RsaOaepKeyWrap;
    public static string RsaSha1Signature;
    public static string RsaV15KeyWrap;
    public static string Sha1Digest;
    public static string Sha256Digest;
    public static string Sha512Digest;
    public static string TripleDesEncryption;
    public static string TripleDesKeyWrap;
    public static string HmacSha256Signature;
    public static string RsaSha256Signature;
    public static string RsaSha384Signature;
    public static string RsaSha512Signature;
    public static string TlsSspiKeyWrap;
    public static string WindowsSspiKeyWrap;
    public static string EcDsaSha1;
    public static string EcDsaSha224;
    public static string EcDsaSha256;
    public static string EcDsaSha384;
    public static string EcDsaSha512;
}
public abstract class Sustainsys.Saml2.Tokens.SecurityKey : object {
    public int KeySize { get; }
    public abstract virtual int get_KeySize();
    public abstract virtual Byte[] DecryptKey(string algorithm, Byte[] keyData);
    public abstract virtual Byte[] EncryptKey(string algorithm, Byte[] keyData);
    public abstract virtual bool IsAsymmetricAlgorithm(string algorithm);
    public abstract virtual bool IsSupportedAlgorithm(string algorithm);
    public abstract virtual bool IsSymmetricAlgorithm(string algorithm);
}
[DefaultMemberAttribute("Item")]
public class Sustainsys.Saml2.Tokens.SecurityKeyIdentifier : object {
    private List`1<SecurityKeyIdentifierClause> clauses;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    public bool CanCreateKey { get; }
    public int Count { get; }
    public SecurityKeyIdentifierClause Item { get; }
    public bool IsReadOnly { get; private set; }
    public SecurityKeyIdentifier(SecurityKeyIdentifierClause[] clauses);
    public void Add(SecurityKeyIdentifierClause clause);
    public bool get_CanCreateKey();
    public int get_Count();
    public SecurityKeyIdentifierClause get_Item(int index);
    public sealed virtual IEnumerator`1<SecurityKeyIdentifierClause> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [CompilerGeneratedAttribute]
public bool get_IsReadOnly();
    [CompilerGeneratedAttribute]
private void set_IsReadOnly(bool value);
    public void MakeReadOnly();
    public SecurityKey CreateKey();
    public bool TryFind(TClause& clause);
    public TClause Find();
    public virtual string ToString();
}
public abstract class Sustainsys.Saml2.Tokens.SecurityKeyIdentifierClause : object {
    [CompilerGeneratedAttribute]
private string <ClauseType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DerivationLength>k__BackingField;
    private Byte[] derivationNonce;
    public string ClauseType { get; private set; }
    public string Id { get; private set; }
    public int DerivationLength { get; private set; }
    public bool CanCreateKey { get; }
    protected SecurityKeyIdentifierClause(string clauseType, Byte[] nonce, int length);
    protected SecurityKeyIdentifierClause(string clauseType);
    [CompilerGeneratedAttribute]
public string get_ClauseType();
    [CompilerGeneratedAttribute]
private void set_ClauseType(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public int get_DerivationLength();
    [CompilerGeneratedAttribute]
private void set_DerivationLength(int value);
    public Byte[] GetDerivationNonce();
    public virtual bool get_CanCreateKey();
    public virtual SecurityKey CreateKey();
    public virtual bool Matches(SecurityKeyIdentifierClause keyIdentifierClause);
}
public abstract class Sustainsys.Saml2.Tokens.SecurityToken : object {
    public DateTime ValidFrom { get; }
    public DateTime ValidTo { get; }
    public string Id { get; }
    public ReadOnlyCollection`1<SecurityKey> SecurityKeys { get; }
    public abstract virtual DateTime get_ValidFrom();
    public abstract virtual DateTime get_ValidTo();
    public abstract virtual string get_Id();
    public abstract virtual ReadOnlyCollection`1<SecurityKey> get_SecurityKeys();
    public virtual bool CanCreateKeyIdentifierClause();
    public virtual T CreateKeyIdentifierClause();
    public virtual bool MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause);
    public virtual SecurityKey ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause);
}
internal class Sustainsys.Saml2.Tokens.TokenReplayCache : object {
    private MemoryCache cache;
    private static object cacheObject;
    private static TokenReplayCache();
    public sealed virtual bool TryAdd(string securityToken, DateTime expiresOn);
    public sealed virtual bool TryFind(string securityToken);
}
public class Sustainsys.Saml2.Tokens.X509AsymmetricSecurityKey : AsymmetricSecurityKey {
    private X509Certificate2 certificate;
    public int KeySize { get; }
    public X509AsymmetricSecurityKey(X509Certificate2 cert);
    public virtual AsymmetricAlgorithm GetAsymmetricAlgorithm(string algorithm, bool privateKey);
    public virtual HashAlgorithm GetHashAlgorithmForSignature(string algorithm);
    public virtual AsymmetricSignatureDeformatter GetSignatureDeformatter(string algorithm);
    public virtual AsymmetricSignatureFormatter GetSignatureFormatter(string algorithm);
    public virtual int get_KeySize();
    public virtual Byte[] DecryptKey(string algorithm, Byte[] keyData);
    public virtual Byte[] EncryptKey(string algorithm, Byte[] keyData);
    public virtual bool IsAsymmetricAlgorithm(string algorithm);
    public virtual bool IsSupportedAlgorithm(string algorithm);
    public virtual bool IsSymmetricAlgorithm(string algorithm);
    public virtual bool HasPrivateKey();
}
public class Sustainsys.Saml2.Tokens.X509IssuerSerialKeyIdentifierClause : SecurityKeyIdentifierClause {
    [CompilerGeneratedAttribute]
private string <IssuerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssuerSerialNumber>k__BackingField;
    public string IssuerName { get; private set; }
    public string IssuerSerialNumber { get; private set; }
    public X509IssuerSerialKeyIdentifierClause(X509Certificate2 certificate);
    public X509IssuerSerialKeyIdentifierClause(string issuerName, string issuerSerialNumber);
    [CompilerGeneratedAttribute]
public string get_IssuerName();
    [CompilerGeneratedAttribute]
private void set_IssuerName(string value);
    [CompilerGeneratedAttribute]
public string get_IssuerSerialNumber();
    [CompilerGeneratedAttribute]
private void set_IssuerSerialNumber(string value);
    private static string AsDecimal(Byte[] number);
    public virtual bool Matches(SecurityKeyIdentifierClause keyIdentifierClause);
    public bool Matches(string issuerName, string issuerSerialNumber);
    public bool Matches(X509Certificate2 certificate);
}
public class Sustainsys.Saml2.Tokens.X509RawDataKeyIdentifierClause : BinaryKeyIdentifierClause {
    private X509Certificate2 certificate;
    public bool CanCreateKey { get; }
    public X509RawDataKeyIdentifierClause(Byte[] certificateRawData);
    public X509RawDataKeyIdentifierClause(X509Certificate2 certificate);
    public virtual bool get_CanCreateKey();
    public virtual SecurityKey CreateKey();
    public Byte[] GetX509RawData();
    public bool Matches(X509Certificate2 otherCert);
}
public class Sustainsys.Saml2.Tokens.X509SecurityToken : SecurityToken {
    private X509Certificate2 certificate;
    private string id;
    private ReadOnlyCollection`1<SecurityKey> keys;
    public X509Certificate2 Certificate { get; }
    public string Id { get; }
    public DateTime ValidFrom { get; }
    public DateTime ValidTo { get; }
    public ReadOnlyCollection`1<SecurityKey> SecurityKeys { get; }
    public X509SecurityToken(X509Certificate2 certificate, string id);
    public X509SecurityToken(X509Certificate2 certificate);
    public X509Certificate2 get_Certificate();
    public virtual string get_Id();
    private void CheckDisposed();
    public virtual DateTime get_ValidFrom();
    public virtual DateTime get_ValidTo();
    public virtual void Dispose();
    public virtual ReadOnlyCollection`1<SecurityKey> get_SecurityKeys();
    public virtual bool CanCreateKeyIdentifierClause();
    public virtual T CreateKeyIdentifierClause();
    public virtual bool MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause);
}
public enum Sustainsys.Saml2.TrustLevel : Enum {
    public int value__;
    public static TrustLevel None;
    public static TrustLevel HttpGet;
    public static TrustLevel TlsTransport;
    public static TrustLevel Signature;
    public static TrustLevel LocalConfiguration;
}
public class Sustainsys.Saml2.WebSso.AcsCommand : object {
    internal static string UnsolicitedMissingReturnUrlMessage;
    internal static string SpInitiatedMissingReturnUrl;
    internal static string RelayStateMissing;
    public sealed virtual CommandResult Run(HttpRequestData request, IOptions options);
    private static IdentityProvider GetIdpContext(XmlElement xml, HttpRequestData request, IOptions options);
    private static Uri GetLocation(StoredRequestState storedRequestState, IdentityProvider identityProvider, string relayState, IOptions options);
    private static CommandResult ProcessResponse(IOptions options, Saml2Response samlResponse, StoredRequestState storedRequestState, IdentityProvider identityProvider, string relayState);
    private static void ValidateIssuer(EntityId idp, Saml2Response samlResponse);
}
public enum Sustainsys.Saml2.WebSso.Cacheability : Enum {
    public int value__;
    public static Cacheability NotSpecified;
    public static Cacheability NoCache;
    public static Cacheability Private;
    public static Cacheability Server;
    public static Cacheability ServerAndNoCache;
    public static Cacheability Public;
    public static Cacheability ServerAndPrivate;
}
public static class Sustainsys.Saml2.WebSso.CommandFactory : object {
    private static ICommand notFoundCommand;
    public static string AcsCommandName;
    public static string SignInCommandName;
    public static string LogoutCommandName;
    public static string MetadataCommand;
    private static IDictionary`2<string, ICommand> commands;
    private static CommandFactory();
    public static ICommand GetCommand(string commandName);
}
public class Sustainsys.Saml2.WebSso.CommandResult : object {
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Cacheability <Cacheability>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Principal>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <SessionNotOnOrAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <RelayData>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TerminateLocalSession>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SetCookieName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetCookieSecureFlag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelayState>k__BackingField;
    [CompilerGeneratedAttribute]
private StoredRequestState <RequestState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClearCookieName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HandledResult>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Headers>k__BackingField;
    public HttpStatusCode HttpStatusCode { get; public set; }
    public Cacheability Cacheability { get; public set; }
    public Uri Location { get; public set; }
    public ClaimsPrincipal Principal { get; public set; }
    public Nullable`1<DateTime> SessionNotOnOrAfter { get; public set; }
    public string Content { get; public set; }
    public string ContentType { get; public set; }
    public IDictionary`2<string, string> RelayData { get; public set; }
    public bool TerminateLocalSession { get; public set; }
    public string SetCookieName { get; public set; }
    public bool SetCookieSecureFlag { get; public set; }
    public string RelayState { get; public set; }
    public StoredRequestState RequestState { get; public set; }
    public string ClearCookieName { get; public set; }
    public bool HandledResult { get; public set; }
    public Dictionary`2<string, string> Headers { get; }
    [CompilerGeneratedAttribute]
public HttpStatusCode get_HttpStatusCode();
    [CompilerGeneratedAttribute]
public void set_HttpStatusCode(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public Cacheability get_Cacheability();
    [CompilerGeneratedAttribute]
public void set_Cacheability(Cacheability value);
    [CompilerGeneratedAttribute]
public Uri get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(Uri value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Principal();
    [CompilerGeneratedAttribute]
public void set_Principal(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_SessionNotOnOrAfter();
    [CompilerGeneratedAttribute]
public void set_SessionNotOnOrAfter(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_RelayData();
    [CompilerGeneratedAttribute]
public void set_RelayData(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public bool get_TerminateLocalSession();
    [CompilerGeneratedAttribute]
public void set_TerminateLocalSession(bool value);
    [CompilerGeneratedAttribute]
public string get_SetCookieName();
    [CompilerGeneratedAttribute]
public void set_SetCookieName(string value);
    [CompilerGeneratedAttribute]
public bool get_SetCookieSecureFlag();
    [CompilerGeneratedAttribute]
public void set_SetCookieSecureFlag(bool value);
    [CompilerGeneratedAttribute]
public string get_RelayState();
    [CompilerGeneratedAttribute]
public void set_RelayState(string value);
    [CompilerGeneratedAttribute]
public StoredRequestState get_RequestState();
    [CompilerGeneratedAttribute]
public void set_RequestState(StoredRequestState value);
    public Byte[] GetSerializedRequestState();
    [CompilerGeneratedAttribute]
public string get_ClearCookieName();
    [CompilerGeneratedAttribute]
public void set_ClearCookieName(string value);
    [CompilerGeneratedAttribute]
public bool get_HandledResult();
    [CompilerGeneratedAttribute]
public void set_HandledResult(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Headers();
}
public class Sustainsys.Saml2.WebSso.HttpRequestData : object {
    [CompilerGeneratedAttribute]
private string <HttpMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Form>k__BackingField;
    [CompilerGeneratedAttribute]
private ILookup`2<string, string> <QueryString>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ApplicationUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelayState>k__BackingField;
    [CompilerGeneratedAttribute]
private StoredRequestState <StoredRequestState>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <User>k__BackingField;
    public string HttpMethod { get; public set; }
    public Uri Url { get; public set; }
    public IReadOnlyDictionary`2<string, string> Form { get; public set; }
    public ILookup`2<string, string> QueryString { get; public set; }
    public Uri ApplicationUrl { get; public set; }
    public string RelayState { get; public set; }
    public StoredRequestState StoredRequestState { get; public set; }
    public ClaimsPrincipal User { get; public set; }
    public HttpRequestData(string httpMethod, Uri url, string applicationPath, IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> formData, IEnumerable`1<KeyValuePair`2<string, string>> cookies, Func`2<Byte[], Byte[]> cookieDecryptor);
    public HttpRequestData(string httpMethod, Uri url, string applicationPath, IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> formData, IEnumerable`1<KeyValuePair`2<string, string>> cookies, Func`2<Byte[], Byte[]> cookieDecryptor, ClaimsPrincipal user);
    public HttpRequestData(string httpMethod, Uri url, string applicationPath, IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> formData, Func`2<string, string> cookieReader, Func`2<Byte[], Byte[]> cookieDecryptor, ClaimsPrincipal user);
    internal HttpRequestData(string httpMethod, Uri url);
    internal HttpRequestData(string httpMethod, Uri url, string applicationPath, IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> formData, StoredRequestState storedRequestState);
    private void Init(string httpMethod, Uri url, string applicationPath, IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> formData, Func`2<string, string> cookieReader, Func`2<Byte[], Byte[]> cookieDecryptor, ClaimsPrincipal user);
    internal static Byte[] GetBinaryData(string cookieData);
    private void InitBasicFields(string httpMethod, Uri url, string applicationPath, IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> formData);
    public static string ConvertBinaryData(Byte[] data);
    [CompilerGeneratedAttribute]
public string get_HttpMethod();
    [CompilerGeneratedAttribute]
public void set_HttpMethod(string value);
    [CompilerGeneratedAttribute]
public Uri get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(Uri value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Form();
    [CompilerGeneratedAttribute]
public void set_Form(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public ILookup`2<string, string> get_QueryString();
    [CompilerGeneratedAttribute]
public void set_QueryString(ILookup`2<string, string> value);
    [CompilerGeneratedAttribute]
public Uri get_ApplicationUrl();
    [CompilerGeneratedAttribute]
public void set_ApplicationUrl(Uri value);
    [CompilerGeneratedAttribute]
public string get_RelayState();
    [CompilerGeneratedAttribute]
public void set_RelayState(string value);
    [CompilerGeneratedAttribute]
public StoredRequestState get_StoredRequestState();
    [CompilerGeneratedAttribute]
public void set_StoredRequestState(StoredRequestState value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_User();
    [CompilerGeneratedAttribute]
public void set_User(ClaimsPrincipal value);
}
public interface Sustainsys.Saml2.WebSso.ICommand {
    public abstract virtual CommandResult Run(HttpRequestData request, IOptions options);
}
public class Sustainsys.Saml2.WebSso.LogoutCommand : object {
    public sealed virtual CommandResult Run(HttpRequestData request, IOptions options);
    public static CommandResult Run(HttpRequestData request, string returnPath, IOptions options);
    private static void VerifyMessageIsSigned(UnbindResult unbindResult, IOptions options);
    public static CommandResult InitiateLogout(HttpRequestData request, Uri returnUrl, IOptions options, bool terminateLocalSession);
    private static Uri GetReturnUrl(HttpRequestData request, string returnPath, IOptions options);
    private static CommandResult HandleRequest(UnbindResult unbindResult, HttpRequestData httpRequest, IOptions options);
    private static CommandResult HandleResponse(UnbindResult unbindResult, StoredRequestState storedRequestState, IOptions options, Uri returnUrl, Saml2Urls urls);
}
public class Sustainsys.Saml2.WebSso.MetadataCommand : object {
    public sealed virtual CommandResult Run(HttpRequestData request, IOptions options);
    private object CreateFileName(string id);
}
public class Sustainsys.Saml2.WebSso.NotFoundCommand : object {
    public sealed virtual CommandResult Run(HttpRequestData request, IOptions options);
}
public class Sustainsys.Saml2.WebSso.Saml2ArtifactBinding : Saml2Binding {
    private static SHA1 sha1;
    [CompilerGeneratedAttribute]
private static ConcurrentDictionary`2<Byte[], ISaml2Message> <PendingMessages>k__BackingField;
    public static ConcurrentDictionary`2<Byte[], ISaml2Message> PendingMessages { get; }
    private static Saml2ArtifactBinding();
    protected internal virtual bool CanUnbind(HttpRequestData request);
    public virtual UnbindResult Unbind(HttpRequestData request, IOptions options);
    private static XmlElement ResolveArtifact(string artifact, StoredRequestState storedRequestState, IOptions options);
    private static IdentityProvider GetIdp(Byte[] binaryArtifact, StoredRequestState storedRequestState, IOptions options);
    public static Byte[] CreateArtifact(EntityId issuer, int endpointIndex);
    public virtual CommandResult Bind(ISaml2Message message, ILoggerAdapter logger);
    [CompilerGeneratedAttribute]
public static ConcurrentDictionary`2<Byte[], ISaml2Message> get_PendingMessages();
}
public abstract class Sustainsys.Saml2.WebSso.Saml2Binding : object {
    public static Uri HttpPostUri;
    public static Uri HttpRedirectUri;
    public static Uri HttpArtifactUri;
    public static Uri DiscoveryResponseUri;
    public static Uri SoapUri;
    private static IDictionary`2<Saml2BindingType, Saml2Binding> bindings;
    private static IDictionary`2<Uri, Saml2BindingType> bindingTypeMap;
    private static IDictionary`2<Saml2BindingType, Uri> bindingUriMap;
    private static Saml2Binding();
    public virtual CommandResult Bind(ISaml2Message message, ILoggerAdapter logger);
    public virtual CommandResult Bind(TMessage message, ILoggerAdapter logger, Action`3<TMessage, XDocument, Saml2BindingType> xmlCreatedNotification);
    public CommandResult Bind(ISaml2Message message);
    public virtual UnbindResult Unbind(HttpRequestData request, IOptions options);
    protected internal abstract virtual bool CanUnbind(HttpRequestData request);
    public static Saml2Binding Get(Saml2BindingType binding);
    public static Saml2Binding Get(HttpRequestData request);
    public static Saml2BindingType UriToSaml2BindingType(Uri uri);
    public static Uri Saml2BindingTypeToUri(Saml2BindingType type);
}
public enum Sustainsys.Saml2.WebSso.Saml2BindingType : Enum {
    public int value__;
    public static Saml2BindingType HttpRedirect;
    public static Saml2BindingType HttpPost;
    public static Saml2BindingType Artifact;
}
internal class Sustainsys.Saml2.WebSso.Saml2PostBinding : Saml2Binding {
    private static string PostHtmlRelayStateFormatString;
    private static string PostHtmlFormatString;
    protected internal virtual bool CanUnbind(HttpRequestData request);
    public virtual UnbindResult Unbind(HttpRequestData request, IOptions options);
    public virtual CommandResult Bind(ISaml2Message message, ILoggerAdapter logger);
    public virtual CommandResult Bind(TMessage message, ILoggerAdapter logger, Action`3<TMessage, XDocument, Saml2BindingType> xmlCreatedNotification);
}
internal class Sustainsys.Saml2.WebSso.Saml2RedirectBinding : Saml2Binding {
    public virtual CommandResult Bind(ISaml2Message message, ILoggerAdapter logger);
    public virtual CommandResult Bind(TMessage message, ILoggerAdapter logger, Action`3<TMessage, XDocument, Saml2BindingType> xmlCreatedNotification);
    private static string AddSignature(string queryString, ISaml2Message message);
    public virtual UnbindResult Unbind(HttpRequestData request, IOptions options);
    private static TrustLevel GetTrustLevel(XmlElement documentElement, HttpRequestData request, IOptions options);
    private static void CheckSignature(HttpRequestData request, IdentityProvider idp, IOptions options);
    private static string Serialize(string payload);
    protected internal virtual bool CanUnbind(HttpRequestData request);
}
public class Sustainsys.Saml2.WebSso.Saml2Urls : object {
    [CompilerGeneratedAttribute]
private Uri <AssertionConsumerServiceUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <SignInUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ApplicationUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <LogoutUrl>k__BackingField;
    public Uri AssertionConsumerServiceUrl { get; private set; }
    public Uri SignInUrl { get; private set; }
    public Uri ApplicationUrl { get; internal set; }
    public Uri LogoutUrl { get; internal set; }
    public Saml2Urls(HttpRequestData request, IOptions options);
    public Saml2Urls(Uri applicationUrl, string modulePath);
    public Saml2Urls(Uri assertionConsumerServiceUrl, Uri signInUrl, Uri applicationUrl);
    private void Init(Uri publicOrigin, string modulePath);
    [CompilerGeneratedAttribute]
public Uri get_AssertionConsumerServiceUrl();
    [CompilerGeneratedAttribute]
private void set_AssertionConsumerServiceUrl(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_SignInUrl();
    [CompilerGeneratedAttribute]
private void set_SignInUrl(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_ApplicationUrl();
    [CompilerGeneratedAttribute]
internal void set_ApplicationUrl(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_LogoutUrl();
    [CompilerGeneratedAttribute]
internal void set_LogoutUrl(Uri value);
}
public class Sustainsys.Saml2.WebSso.SignInCommand : object {
    public sealed virtual CommandResult Run(HttpRequestData request, IOptions options);
    private static string GetReturnUrl(HttpRequestData request, IOptions options);
    public static CommandResult Run(EntityId idpEntityId, string returnPath, HttpRequestData request, IOptions options, IDictionary`2<string, string> relayData);
    private static CommandResult InitiateLoginToIdp(IOptions options, IDictionary`2<string, string> relayData, Saml2Urls urls, IdentityProvider idp, Uri returnUrl, HttpRequestData request);
    private static CommandResult RedirectToDiscoveryService(string returnPath, SPOptions spOptions, Saml2Urls saml2Urls, IDictionary`2<string, string> relayData);
}
public class Sustainsys.Saml2.WebSso.UnbindResult : object {
    [CompilerGeneratedAttribute]
private XmlElement <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelayState>k__BackingField;
    [CompilerGeneratedAttribute]
private TrustLevel <TrustLevel>k__BackingField;
    public XmlElement Data { get; }
    public string RelayState { get; }
    public TrustLevel TrustLevel { get; }
    public UnbindResult(XmlElement data, string relayState, TrustLevel trustLevel);
    [CompilerGeneratedAttribute]
public XmlElement get_Data();
    [CompilerGeneratedAttribute]
public string get_RelayState();
    [CompilerGeneratedAttribute]
public TrustLevel get_TrustLevel();
}
[ExtensionAttribute]
public static class Sustainsys.Saml2.XmlHelpers : object {
    private static PropertyInfo signaturePosition;
    private static String[] allowedTransforms;
    internal static String[] KnownSigningAlgorithms;
    internal static String[] DigestAlgorithms;
    private static XmlHelpers();
    [ExtensionAttribute]
public static void Sign(XmlDocument xmlDocument, X509Certificate2 cert);
    public static XmlDocument XmlDocumentFromString(string source);
    public static XmlDocument CreateSafeXmlDocument();
    [ExtensionAttribute]
public static void Remove(XmlAttributeCollection attributes, string attributeName);
    [ExtensionAttribute]
public static void RemoveChild(XmlElement xmlElement, string name, string ns);
    [ExtensionAttribute]
public static void Sign(XmlDocument xmlDocument, X509Certificate2 cert, bool includeKeyInfo);
    [ExtensionAttribute]
public static void Sign(XmlDocument xmlDocument, X509Certificate2 cert, bool includeKeyInfo, string signingAlgorithm);
    [ExtensionAttribute]
public static void Sign(XmlElement xmlElement, X509Certificate2 cert, bool includeKeyInfo);
    [ExtensionAttribute]
public static void Sign(XmlElement xmlElement, X509Certificate2 cert, bool includeKeyInfo, string signingAlgorithm);
    [ExtensionAttribute]
public static bool IsSignedByAny(XmlElement xmlElement, IEnumerable`1<SecurityKeyIdentifierClause> signingKeys, bool validateCertificate, string minimumSigningAlgorithm);
    private static void VerifySignature(IEnumerable`1<SecurityKeyIdentifierClause> signingKeys, SignedXml signedXml, XmlElement signatureElement, bool validateCertificate);
    [ExcludeFromCodeCoverageAttribute]
private static void ValidateCertificate(bool validateCertificate, SecurityKeyIdentifierClause keyIdentifier);
    private static void FixSignatureIndex(SignedXml signedXml, XmlElement signatureElement);
    private static void ValidateSignedInfo(SignedXml signedXml, XmlElement xmlElement, string minIncomingSignatureAlgorithm);
    public static void ValidateSignatureMethodStrength(string minIncomingSignatureAlgorithm, string signatureMethod);
    private static void ValidateReference(SignedXml signedXml, XmlElement xmlElement, string mininumDigestAlgorithm);
    [ExtensionAttribute]
internal static XElement AddAttributeIfNotNullOrEmpty(XElement xElement, XName attribute, object value);
    [ExtensionAttribute]
internal static string GetValueIfNotNull(XmlAttribute xmlAttribute);
    [ExtensionAttribute]
internal static string GetTrimmedTextIfNotNull(XmlElement xmlElement);
    [ExtensionAttribute]
internal static string GetRequiredAttributeValue(XmlElement node, string attributeName);
    [ExtensionAttribute]
internal static XmlElement GetRequiredElement(XmlElement node, string name, string namespaceValue);
    [ExtensionAttribute]
internal static XmlElement StartElement(XmlNode parent, string name, Uri namespaceUri);
    [ExtensionAttribute]
private static XmlDocument GetOwnerDoc(XmlNode node);
    [ExtensionAttribute]
internal static XmlElement AddAttribute(XmlElement parent, string name, string value);
    [ExtensionAttribute]
internal static XmlElement AddAttributeIfNotNull(XmlElement parent, string name, object value);
    [ExtensionAttribute]
internal static XmlElement If(XmlElement parent, bool condition, Action`1<XmlElement> action);
    [ExtensionAttribute]
internal static XmlElement AddElement(XmlElement parent, string name, Uri namespaceUri, string content);
    [ExtensionAttribute]
internal static XmlElement SetInnerText(XmlElement parent, string content);
    [ExtensionAttribute]
public static string PrettyPrint(XmlElement xml);
    private static String[] GetKnownSigningAlgorithms();
    internal static string GetFullSigningAlgorithmName(string shortName);
    [ExcludeFromCodeCoverageAttribute]
internal static string GetDefaultSigningAlgorithmName();
    private static String[] GetKnownDigestAlgorithms();
    internal static string GetCorrespondingDigestAlgorithm(string signingAlgorithm);
}
public class Sustainsys.Saml2.XsdDuration : ValueType {
    [CompilerGeneratedAttribute]
private int <Years>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Months>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Days>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Hours>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Minutes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Seconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Nanoseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Negative>k__BackingField;
    public int Years { get; private set; }
    public int Months { get; private set; }
    public int Days { get; private set; }
    public int Hours { get; private set; }
    public int Minutes { get; private set; }
    public int Seconds { get; private set; }
    public int Nanoseconds { get; private set; }
    public bool Negative { get; private set; }
    public XsdDuration(bool negative, int years, int months, int days, int hours, int minutes, int seconds, int nanoseconds);
    public XsdDuration(string value);
    public XsdDuration(TimeSpan timeSpan);
    [CompilerGeneratedAttribute]
public int get_Years();
    [CompilerGeneratedAttribute]
private void set_Years(int value);
    [CompilerGeneratedAttribute]
public int get_Months();
    [CompilerGeneratedAttribute]
private void set_Months(int value);
    [CompilerGeneratedAttribute]
public int get_Days();
    [CompilerGeneratedAttribute]
private void set_Days(int value);
    [CompilerGeneratedAttribute]
public int get_Hours();
    [CompilerGeneratedAttribute]
private void set_Hours(int value);
    [CompilerGeneratedAttribute]
public int get_Minutes();
    [CompilerGeneratedAttribute]
private void set_Minutes(int value);
    [CompilerGeneratedAttribute]
public int get_Seconds();
    [CompilerGeneratedAttribute]
private void set_Seconds(int value);
    [CompilerGeneratedAttribute]
public int get_Nanoseconds();
    [CompilerGeneratedAttribute]
private void set_Nanoseconds(int value);
    [CompilerGeneratedAttribute]
public bool get_Negative();
    [CompilerGeneratedAttribute]
private void set_Negative(bool value);
    private static bool IsWhite(char c);
    private static bool IsDigit(char c);
    private static ParseResult ParseNumber(string value, Int32& pos, Nullable`1& result);
    private static ParseResult TryParseInternal(string value, XsdDuration& result);
    public static bool TryParse(string value, XsdDuration& result);
    public static XsdDuration Parse(string value);
    public static string ToString(XsdDuration value);
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public TimeSpan ToTimeSpan();
}
