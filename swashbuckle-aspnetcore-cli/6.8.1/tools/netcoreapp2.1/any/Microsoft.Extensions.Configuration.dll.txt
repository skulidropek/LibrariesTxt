[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.ChainedBuilderExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddConfiguration(IConfigurationBuilder configurationBuilder, IConfiguration config);
}
public class Microsoft.Extensions.Configuration.ChainedConfigurationProvider : object {
    private IConfiguration _config;
    public ChainedConfigurationProvider(ChainedConfigurationSource source);
    public sealed virtual bool TryGet(string key, String& value);
    public sealed virtual void Set(string key, string value);
    public sealed virtual IChangeToken GetReloadToken();
    public sealed virtual void Load();
    public sealed virtual IEnumerable`1<string> GetChildKeys(IEnumerable`1<string> earlierKeys, string parentPath);
}
public class Microsoft.Extensions.Configuration.ChainedConfigurationSource : object {
    [CompilerGeneratedAttribute]
private IConfiguration <Configuration>k__BackingField;
    public IConfiguration Configuration { get; public set; }
    [CompilerGeneratedAttribute]
public IConfiguration get_Configuration();
    [CompilerGeneratedAttribute]
public void set_Configuration(IConfiguration value);
    public sealed virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
public class Microsoft.Extensions.Configuration.ConfigurationBuilder : object {
    [CompilerGeneratedAttribute]
private IList`1<IConfigurationSource> <Sources>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Properties>k__BackingField;
    public IList`1<IConfigurationSource> Sources { get; }
    public IDictionary`2<string, object> Properties { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<IConfigurationSource> get_Sources();
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Properties();
    public sealed virtual IConfigurationBuilder Add(IConfigurationSource source);
    public sealed virtual IConfigurationRoot Build();
}
public class Microsoft.Extensions.Configuration.ConfigurationKeyComparer : object {
    private static String[] _keyDelimiterArray;
    [CompilerGeneratedAttribute]
private static ConfigurationKeyComparer <Instance>k__BackingField;
    public static ConfigurationKeyComparer Instance { get; }
    private static ConfigurationKeyComparer();
    [CompilerGeneratedAttribute]
public static ConfigurationKeyComparer get_Instance();
    public sealed virtual int Compare(string x, string y);
}
public abstract class Microsoft.Extensions.Configuration.ConfigurationProvider : object {
    private ConfigurationReloadToken _reloadToken;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Data>k__BackingField;
    protected IDictionary`2<string, string> Data { get; protected set; }
    [CompilerGeneratedAttribute]
protected IDictionary`2<string, string> get_Data();
    [CompilerGeneratedAttribute]
protected void set_Data(IDictionary`2<string, string> value);
    public virtual bool TryGet(string key, String& value);
    public virtual void Set(string key, string value);
    public virtual void Load();
    public virtual IEnumerable`1<string> GetChildKeys(IEnumerable`1<string> earlierKeys, string parentPath);
    private static string Segment(string key, int prefixLength);
    public sealed virtual IChangeToken GetReloadToken();
    protected void OnReload();
}
public class Microsoft.Extensions.Configuration.ConfigurationReloadToken : object {
    private CancellationTokenSource _cts;
    public bool ActiveChangeCallbacks { get; }
    public bool HasChanged { get; }
    public sealed virtual bool get_ActiveChangeCallbacks();
    public sealed virtual bool get_HasChanged();
    public sealed virtual IDisposable RegisterChangeCallback(Action`1<object> callback, object state);
    public void OnReload();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.Extensions.Configuration.ConfigurationRoot : object {
    private IList`1<IConfigurationProvider> _providers;
    private ConfigurationReloadToken _changeToken;
    public IEnumerable`1<IConfigurationProvider> Providers { get; }
    public string Item { get; public set; }
    public ConfigurationRoot(IList`1<IConfigurationProvider> providers);
    public sealed virtual IEnumerable`1<IConfigurationProvider> get_Providers();
    public sealed virtual string get_Item(string key);
    public sealed virtual void set_Item(string key, string value);
    public sealed virtual IEnumerable`1<IConfigurationSection> GetChildren();
    internal IEnumerable`1<IConfigurationSection> GetChildrenImplementation(string path);
    public sealed virtual IChangeToken GetReloadToken();
    public sealed virtual IConfigurationSection GetSection(string key);
    public sealed virtual void Reload();
    private void RaiseChanged();
    [CompilerGeneratedAttribute]
private void <.ctor>b__2_1();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.Extensions.Configuration.ConfigurationSection : object {
    private ConfigurationRoot _root;
    private string _path;
    private string _key;
    public string Path { get; }
    public string Key { get; }
    public string Value { get; public set; }
    public string Item { get; public set; }
    public ConfigurationSection(ConfigurationRoot root, string path);
    public sealed virtual string get_Path();
    public sealed virtual string get_Key();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    public sealed virtual string get_Item(string key);
    public sealed virtual void set_Item(string key, string value);
    public sealed virtual IConfigurationSection GetSection(string key);
    public sealed virtual IEnumerable`1<IConfigurationSection> GetChildren();
    public sealed virtual IChangeToken GetReloadToken();
}
public class Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider : ConfigurationProvider {
    private MemoryConfigurationSource _source;
    public MemoryConfigurationProvider(MemoryConfigurationSource source);
    public void Add(string key, string value);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, string>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<KeyValuePair`2<string, string>> <InitialData>k__BackingField;
    public IEnumerable`1<KeyValuePair`2<string, string>> InitialData { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<KeyValuePair`2<string, string>> get_InitialData();
    [CompilerGeneratedAttribute]
public void set_InitialData(IEnumerable`1<KeyValuePair`2<string, string>> value);
    public sealed virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.MemoryConfigurationBuilderExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddInMemoryCollection(IConfigurationBuilder configurationBuilder);
    [ExtensionAttribute]
public static IConfigurationBuilder AddInMemoryCollection(IConfigurationBuilder configurationBuilder, IEnumerable`1<KeyValuePair`2<string, string>> initialData);
}
internal static class Microsoft.Extensions.Configuration.Resources : object {
    private static ResourceManager _resourceManager;
    internal static string Error_NoSources { get; }
    private static Resources();
    internal static string get_Error_NoSources();
    internal static string FormatError_NoSources();
    private static string GetString(string name, String[] formatterNames);
}
