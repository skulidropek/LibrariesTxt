[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddOptions(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection Configure(IServiceCollection services, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection Configure(IServiceCollection services, string name, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection ConfigureAll(IServiceCollection services, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection PostConfigure(IServiceCollection services, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection PostConfigure(IServiceCollection services, string name, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection PostConfigureAll(IServiceCollection services, Action`1<TOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection ConfigureOptions(IServiceCollection services);
    private static bool IsAction(Type type);
    private static IEnumerable`1<Type> FindIConfigureOptions(Type type);
    [ExtensionAttribute]
public static IServiceCollection ConfigureOptions(IServiceCollection services, Type configureType);
    [ExtensionAttribute]
public static IServiceCollection ConfigureOptions(IServiceCollection services, object configureInstance);
    [ExtensionAttribute]
public static OptionsBuilder`1<TOptions> AddOptions(IServiceCollection services);
    [ExtensionAttribute]
public static OptionsBuilder`1<TOptions> AddOptions(IServiceCollection services, string name);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`1 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<TOptions> <Action>k__BackingField;
    public string Name { get; }
    public Action`1<TOptions> Action { get; }
    public ConfigureNamedOptions`1(string name, Action`1<TOptions> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`1<TOptions> get_Action();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`2 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<TOptions, TDep> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep <Dependency>k__BackingField;
    public string Name { get; }
    public Action`2<TOptions, TDep> Action { get; }
    public TDep Dependency { get; }
    public ConfigureNamedOptions`2(string name, TDep dependency, Action`2<TOptions, TDep> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`2<TOptions, TDep> get_Action();
    [CompilerGeneratedAttribute]
public TDep get_Dependency();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`3 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`3<TOptions, TDep1, TDep2> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    public string Name { get; }
    public Action`3<TOptions, TDep1, TDep2> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public ConfigureNamedOptions`3(string name, TDep1 dependency, TDep2 dependency2, Action`3<TOptions, TDep1, TDep2> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`3<TOptions, TDep1, TDep2> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`4 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`4<TOptions, TDep1, TDep2, TDep3> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    public string Name { get; }
    public Action`4<TOptions, TDep1, TDep2, TDep3> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public ConfigureNamedOptions`4(string name, TDep1 dependency, TDep2 dependency2, TDep3 dependency3, Action`4<TOptions, TDep1, TDep2, TDep3> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`4<TOptions, TDep1, TDep2, TDep3> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`5 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep4 <Dependency4>k__BackingField;
    public string Name { get; }
    public Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public TDep4 Dependency4 { get; }
    public ConfigureNamedOptions`5(string name, TDep1 dependency1, TDep2 dependency2, TDep3 dependency3, TDep4 dependency4, Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    [CompilerGeneratedAttribute]
public TDep4 get_Dependency4();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureNamedOptions`6 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep4 <Dependency4>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep5 <Dependency5>k__BackingField;
    public string Name { get; }
    public Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public TDep4 Dependency4 { get; }
    public TDep5 Dependency5 { get; }
    public ConfigureNamedOptions`6(string name, TDep1 dependency1, TDep2 dependency2, TDep3 dependency3, TDep4 dependency4, TDep5 dependency5, Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    [CompilerGeneratedAttribute]
public TDep4 get_Dependency4();
    [CompilerGeneratedAttribute]
public TDep5 get_Dependency5();
    public virtual void Configure(string name, TOptions options);
    public sealed virtual void Configure(TOptions options);
}
public class Microsoft.Extensions.Options.ConfigureOptions`1 : object {
    [CompilerGeneratedAttribute]
private Action`1<TOptions> <Action>k__BackingField;
    public Action`1<TOptions> Action { get; }
    public ConfigureOptions`1(Action`1<TOptions> action);
    [CompilerGeneratedAttribute]
public Action`1<TOptions> get_Action();
    public virtual void Configure(TOptions options);
}
public interface Microsoft.Extensions.Options.IConfigureNamedOptions`1 {
    public abstract virtual void Configure(string name, TOptions options);
}
public interface Microsoft.Extensions.Options.IConfigureOptions`1 {
    public abstract virtual void Configure(TOptions options);
}
public interface Microsoft.Extensions.Options.IOptions`1 {
    public TOptions Value { get; }
    public abstract virtual TOptions get_Value();
}
public interface Microsoft.Extensions.Options.IOptionsChangeTokenSource`1 {
    public string Name { get; }
    public abstract virtual IChangeToken GetChangeToken();
    public abstract virtual string get_Name();
}
public interface Microsoft.Extensions.Options.IOptionsFactory`1 {
    public abstract virtual TOptions Create(string name);
}
public interface Microsoft.Extensions.Options.IOptionsMonitor`1 {
    public TOptions CurrentValue { get; }
    public abstract virtual TOptions get_CurrentValue();
    public abstract virtual TOptions Get(string name);
    public abstract virtual IDisposable OnChange(Action`2<TOptions, string> listener);
}
public interface Microsoft.Extensions.Options.IOptionsMonitorCache`1 {
    public abstract virtual TOptions GetOrAdd(string name, Func`1<TOptions> createOptions);
    public abstract virtual bool TryAdd(string name, TOptions options);
    public abstract virtual bool TryRemove(string name);
    public abstract virtual void Clear();
}
public interface Microsoft.Extensions.Options.IOptionsSnapshot`1 {
    public abstract virtual TOptions Get(string name);
}
public interface Microsoft.Extensions.Options.IPostConfigureOptions`1 {
    public abstract virtual void PostConfigure(string name, TOptions options);
}
public static class Microsoft.Extensions.Options.Options : object {
    public static string DefaultName;
    private static Options();
    public static IOptions`1<TOptions> Create(TOptions options);
}
public class Microsoft.Extensions.Options.OptionsBuilder`1 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    public string Name { get; }
    public IServiceCollection Services { get; }
    public OptionsBuilder`1(IServiceCollection services, string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public IServiceCollection get_Services();
    public virtual OptionsBuilder`1<TOptions> Configure(Action`1<TOptions> configureOptions);
    public virtual OptionsBuilder`1<TOptions> Configure(Action`2<TOptions, TDep> configureOptions);
    public virtual OptionsBuilder`1<TOptions> Configure(Action`3<TOptions, TDep1, TDep2> configureOptions);
    public virtual OptionsBuilder`1<TOptions> Configure(Action`4<TOptions, TDep1, TDep2, TDep3> configureOptions);
    public virtual OptionsBuilder`1<TOptions> Configure(Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> configureOptions);
    public virtual OptionsBuilder`1<TOptions> Configure(Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`1<TOptions> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`2<TOptions, TDep> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`3<TOptions, TDep1, TDep2> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`4<TOptions, TDep1, TDep2, TDep3> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> configureOptions);
    public virtual OptionsBuilder`1<TOptions> PostConfigure(Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> configureOptions);
}
public class Microsoft.Extensions.Options.OptionsCache`1 : object {
    private ConcurrentDictionary`2<string, Lazy`1<TOptions>> _cache;
    public sealed virtual void Clear();
    public virtual TOptions GetOrAdd(string name, Func`1<TOptions> createOptions);
    public virtual bool TryAdd(string name, TOptions options);
    public virtual bool TryRemove(string name);
}
public class Microsoft.Extensions.Options.OptionsFactory`1 : object {
    private IEnumerable`1<IConfigureOptions`1<TOptions>> _setups;
    private IEnumerable`1<IPostConfigureOptions`1<TOptions>> _postConfigures;
    public OptionsFactory`1(IEnumerable`1<IConfigureOptions`1<TOptions>> setups, IEnumerable`1<IPostConfigureOptions`1<TOptions>> postConfigures);
    public sealed virtual TOptions Create(string name);
}
public class Microsoft.Extensions.Options.OptionsManager`1 : object {
    private IOptionsFactory`1<TOptions> _factory;
    private OptionsCache`1<TOptions> _cache;
    public TOptions Value { get; }
    public OptionsManager`1(IOptionsFactory`1<TOptions> factory);
    public sealed virtual TOptions get_Value();
    public virtual TOptions Get(string name);
}
public class Microsoft.Extensions.Options.OptionsMonitor`1 : object {
    private IOptionsMonitorCache`1<TOptions> _cache;
    private IOptionsFactory`1<TOptions> _factory;
    private IEnumerable`1<IOptionsChangeTokenSource`1<TOptions>> _sources;
    [CompilerGeneratedAttribute]
private Action`2<TOptions, string> _onChange;
    public TOptions CurrentValue { get; }
    public OptionsMonitor`1(IOptionsFactory`1<TOptions> factory, IEnumerable`1<IOptionsChangeTokenSource`1<TOptions>> sources, IOptionsMonitorCache`1<TOptions> cache);
    [CompilerGeneratedAttribute]
internal void add__onChange(Action`2<TOptions, string> value);
    [CompilerGeneratedAttribute]
internal void remove__onChange(Action`2<TOptions, string> value);
    private void InvokeChanged(string name);
    public sealed virtual TOptions get_CurrentValue();
    public virtual TOptions Get(string name);
    public sealed virtual IDisposable OnChange(Action`2<TOptions, string> listener);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_1(string name);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Options.OptionsMonitorExtensions : object {
    [ExtensionAttribute]
public static IDisposable OnChange(IOptionsMonitor`1<TOptions> monitor, Action`1<TOptions> listener);
}
public class Microsoft.Extensions.Options.OptionsWrapper`1 : object {
    [CompilerGeneratedAttribute]
private TOptions <Value>k__BackingField;
    public TOptions Value { get; }
    public OptionsWrapper`1(TOptions options);
    [CompilerGeneratedAttribute]
public sealed virtual TOptions get_Value();
    [ObsoleteAttribute("This method is obsolete and will be removed in a future version.")]
public void Add(string name, TOptions options);
    [ObsoleteAttribute("This method is obsolete and will be removed in a future version.")]
public TOptions Get(string name);
    [ObsoleteAttribute("This method is obsolete and will be removed in a future version.")]
public bool Remove(string name);
}
public class Microsoft.Extensions.Options.PostConfigureOptions`1 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<TOptions> <Action>k__BackingField;
    public string Name { get; }
    public Action`1<TOptions> Action { get; }
    public PostConfigureOptions`1(string name, Action`1<TOptions> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`1<TOptions> get_Action();
    public virtual void PostConfigure(string name, TOptions options);
}
public class Microsoft.Extensions.Options.PostConfigureOptions`2 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<TOptions, TDep> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep <Dependency>k__BackingField;
    public string Name { get; }
    public Action`2<TOptions, TDep> Action { get; }
    public TDep Dependency { get; }
    public PostConfigureOptions`2(string name, TDep dependency, Action`2<TOptions, TDep> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`2<TOptions, TDep> get_Action();
    [CompilerGeneratedAttribute]
public TDep get_Dependency();
    public virtual void PostConfigure(string name, TOptions options);
    public void PostConfigure(TOptions options);
}
public class Microsoft.Extensions.Options.PostConfigureOptions`3 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`3<TOptions, TDep1, TDep2> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    public string Name { get; }
    public Action`3<TOptions, TDep1, TDep2> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public PostConfigureOptions`3(string name, TDep1 dependency, TDep2 dependency2, Action`3<TOptions, TDep1, TDep2> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`3<TOptions, TDep1, TDep2> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    public virtual void PostConfigure(string name, TOptions options);
    public void PostConfigure(TOptions options);
}
public class Microsoft.Extensions.Options.PostConfigureOptions`4 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`4<TOptions, TDep1, TDep2, TDep3> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    public string Name { get; }
    public Action`4<TOptions, TDep1, TDep2, TDep3> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public PostConfigureOptions`4(string name, TDep1 dependency, TDep2 dependency2, TDep3 dependency3, Action`4<TOptions, TDep1, TDep2, TDep3> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`4<TOptions, TDep1, TDep2, TDep3> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    public virtual void PostConfigure(string name, TOptions options);
    public void PostConfigure(TOptions options);
}
public class Microsoft.Extensions.Options.PostConfigureOptions`5 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep4 <Dependency4>k__BackingField;
    public string Name { get; }
    public Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public TDep4 Dependency4 { get; }
    public PostConfigureOptions`5(string name, TDep1 dependency1, TDep2 dependency2, TDep3 dependency3, TDep4 dependency4, Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`5<TOptions, TDep1, TDep2, TDep3, TDep4> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    [CompilerGeneratedAttribute]
public TDep4 get_Dependency4();
    public virtual void PostConfigure(string name, TOptions options);
    public void PostConfigure(TOptions options);
}
public class Microsoft.Extensions.Options.PostConfigureOptions`6 : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep1 <Dependency1>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep2 <Dependency2>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep3 <Dependency3>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep4 <Dependency4>k__BackingField;
    [CompilerGeneratedAttribute]
private TDep5 <Dependency5>k__BackingField;
    public string Name { get; }
    public Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> Action { get; }
    public TDep1 Dependency1 { get; }
    public TDep2 Dependency2 { get; }
    public TDep3 Dependency3 { get; }
    public TDep4 Dependency4 { get; }
    public TDep5 Dependency5 { get; }
    public PostConfigureOptions`6(string name, TDep1 dependency1, TDep2 dependency2, TDep3 dependency3, TDep4 dependency4, TDep5 dependency5, Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> action);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Action`6<TOptions, TDep1, TDep2, TDep3, TDep4, TDep5> get_Action();
    [CompilerGeneratedAttribute]
public TDep1 get_Dependency1();
    [CompilerGeneratedAttribute]
public TDep2 get_Dependency2();
    [CompilerGeneratedAttribute]
public TDep3 get_Dependency3();
    [CompilerGeneratedAttribute]
public TDep4 get_Dependency4();
    [CompilerGeneratedAttribute]
public TDep5 get_Dependency5();
    public virtual void PostConfigure(string name, TOptions options);
    public void PostConfigure(TOptions options);
}
internal static class Microsoft.Extensions.Options.Resources : object {
    private static ResourceManager _resourceManager;
    internal static string Error_CannotActivateAbstractOrInterface { get; }
    internal static string Error_FailedBinding { get; }
    internal static string Error_FailedToActivate { get; }
    internal static string Error_MissingParameterlessConstructor { get; }
    internal static string Error_NoIConfigureOptions { get; }
    internal static string Error_NoIConfigureOptionsAndAction { get; }
    private static Resources();
    internal static string get_Error_CannotActivateAbstractOrInterface();
    internal static string FormatError_CannotActivateAbstractOrInterface(object p0);
    internal static string get_Error_FailedBinding();
    internal static string FormatError_FailedBinding(object p0, object p1);
    internal static string get_Error_FailedToActivate();
    internal static string FormatError_FailedToActivate(object p0);
    internal static string get_Error_MissingParameterlessConstructor();
    internal static string FormatError_MissingParameterlessConstructor(object p0);
    internal static string get_Error_NoIConfigureOptions();
    internal static string FormatError_NoIConfigureOptions();
    internal static string get_Error_NoIConfigureOptionsAndAction();
    internal static string FormatError_NoIConfigureOptionsAndAction();
    private static string GetString(string name, String[] formatterNames);
}
