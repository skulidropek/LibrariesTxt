[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Swashbuckle.AspNetCore.Filters.AddHeaderOperationFilter : object {
    private string parameterName;
    private string description;
    private bool required;
    public AddHeaderOperationFilter(string parameterName, string description, bool required);
    public sealed virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
}
public class Swashbuckle.AspNetCore.Filters.AddResponseHeadersFilter : object {
    public sealed virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
}
public class Swashbuckle.AspNetCore.Filters.AppendAuthorizeToSummaryOperationFilter : object {
    private AppendAuthorizeToSummaryOperationFilter`1<AuthorizeAttribute> filter;
    public sealed virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
}
public class Swashbuckle.AspNetCore.Filters.AppendAuthorizeToSummaryOperationFilter`1 : object {
    private IEnumerable`1<PolicySelectorWithLabel`1<T>> policySelectors;
    public AppendAuthorizeToSummaryOperationFilter`1(IEnumerable`1<PolicySelectorWithLabel`1<T>> policySelectors);
    public sealed virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
    private void AppendPolicies(IEnumerable`1<T> authorizeAttributes, StringBuilder authorizationDescription, PolicySelectorWithLabel`1<T> policySelector);
}
internal class Swashbuckle.AspNetCore.Filters.ExamplesConverter : object {
    private static MediaTypeHeaderValue ApplicationXml;
    private static MediaTypeHeaderValue ApplicationJson;
    private static MediaTypeHeaderValue TextCsv;
    private MvcOutputFormatter mvcOutputFormatter;
    public ExamplesConverter(MvcOutputFormatter mvcOutputFormatter);
    private static ExamplesConverter();
    public IOpenApiAny SerializeExampleCsv(object value);
    public IOpenApiAny SerializeExampleXml(object value);
    public IOpenApiAny SerializeExampleJson(object value);
    public IDictionary`2<string, OpenApiExample> ToOpenApiExamplesDictionaryXml(IEnumerable`1<ISwaggerExample`1<object>> examples);
    public IDictionary`2<string, OpenApiExample> ToOpenApiExamplesDictionaryCsv(IEnumerable`1<ISwaggerExample`1<object>> examples);
    public IDictionary`2<string, OpenApiExample> ToOpenApiExamplesDictionaryJson(IEnumerable`1<ISwaggerExample`1<object>> examples);
    private static IDictionary`2<string, OpenApiExample> ToOpenApiExamplesDictionary(IEnumerable`1<ISwaggerExample`1<object>> examples, Func`2<object, IOpenApiAny> exampleConverter);
}
internal class Swashbuckle.AspNetCore.Filters.ExamplesOperationFilter : object {
    private IServiceProvider serviceProvider;
    private RequestExample requestExample;
    private ResponseExample responseExample;
    public ExamplesOperationFilter(IServiceProvider serviceProvider, RequestExample requestExample, ResponseExample responseExample);
    public sealed virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
    private void SetRequestExamples(OpenApiOperation operation, OperationFilterContext context);
    private void SetResponseExamples(OpenApiOperation operation, OperationFilterContext context);
}
[ExtensionAttribute]
internal static class Swashbuckle.AspNetCore.Filters.Extensions.ObjectExtensions : object {
    [ExtensionAttribute]
public static string FormatXml(string unformattedXml);
}
[ExtensionAttribute]
internal static class Swashbuckle.AspNetCore.Filters.Extensions.OperationFilterContextExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<T> GetControllerAndActionAttributes(OperationFilterContext context);
}
[ExtensionAttribute]
internal static class Swashbuckle.AspNetCore.Filters.Extensions.ServiceProviderExtensions : object {
    [ExtensionAttribute]
public static object GetExampleWithExamplesProviderType(IServiceProvider serviceProvider, Type examplesProviderType);
    [ExtensionAttribute]
public static object GetExampleForType(IServiceProvider serviceProvider, Type type);
    private static object InvokeGetExamples(Type exampleProviderType, object exampleProviderObject);
    [CompilerGeneratedAttribute]
internal static bool <GetExampleForType>g__IsPrimitiveType|1_0(<>c__DisplayClass1_0& );
}
[ExtensionAttribute]
internal static class Swashbuckle.AspNetCore.Filters.Extensions.TypeExtensions : object {
    [ExtensionAttribute]
public static string SchemaDefinitionName(Type type);
}
internal class Swashbuckle.AspNetCore.Filters.MvcOutputFormatter : object {
    private object initializeLock;
    private bool initializedOutputFormatterSelector;
    private IOptions`1<MvcOptions> options;
    private IServiceProvider serviceProvider;
    private ILoggerFactory loggerFactory;
    private OutputFormatterSelector outputFormatterSelector;
    private OutputFormatterSelector OutputFormatterSelector { get; }
    public MvcOutputFormatter(IOptions`1<MvcOptions> options, IServiceProvider serviceProvider, ILoggerFactory loggerFactory);
    private OutputFormatterSelector get_OutputFormatterSelector();
    public string Serialize(T value, MediaTypeHeaderValue contentType);
    private string SerializeWithoutMvc(T value, MediaTypeHeaderValue contentType);
    private static IOptions`1<MvcOptions> GetSelectorOptions(IOptions`1<MvcOptions> options);
    private static OutputFormatterWriteContext GetOutputFormatterContext(TextWriter writer, object outputValue, Type outputType, MediaTypeHeaderValue contentType, IServiceProvider serviceProvider);
    private static HttpContext GetHttpContext(MediaTypeHeaderValue contentType, IServiceProvider serviceProvider);
}
public class Swashbuckle.AspNetCore.Filters.PolicySelectorWithLabel`1 : object {
    [CompilerGeneratedAttribute]
private Func`2<IEnumerable`1<T>, IEnumerable`1<string>> <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    public Func`2<IEnumerable`1<T>, IEnumerable`1<string>> Selector { get; public set; }
    public string Label { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<IEnumerable`1<T>, IEnumerable`1<string>> get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(Func`2<IEnumerable`1<T>, IEnumerable`1<string>> value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
}
internal class Swashbuckle.AspNetCore.Filters.RequestExample : object {
    private MvcOutputFormatter mvcOutputFormatter;
    private SwaggerOptions swaggerOptions;
    public RequestExample(MvcOutputFormatter mvcOutputFormatter, IOptions`1<SwaggerOptions> options);
    public void SetRequestBodyExampleForOperation(OpenApiOperation operation, SchemaRepository schemaRepository, Type requestType, object example);
    private IOpenApiAny SetSingleRequestExampleForOperation(OpenApiOperation operation, object example, ExamplesConverter examplesConverter);
    private IOpenApiAny SetMultipleRequestExamplesForOperation(OpenApiOperation operation, IEnumerable`1<ISwaggerExample`1<object>> examples, ExamplesConverter examplesConverter);
}
internal class Swashbuckle.AspNetCore.Filters.ResponseExample : object {
    private MvcOutputFormatter mvcOutputFormatter;
    public ResponseExample(MvcOutputFormatter mvcOutputFormatter);
    public void SetResponseExampleForStatusCode(OpenApiOperation operation, int statusCode, object example);
    private void SetSingleResponseExampleForStatusCode(KeyValuePair`2<string, OpenApiResponse> response, object example, ExamplesConverter examplesConverter);
    private void SetMultipleResponseExampleForStatusCode(KeyValuePair`2<string, OpenApiResponse> response, IEnumerable`1<ISwaggerExample`1<object>> examples, ExamplesConverter examplesConverter);
}
public class Swashbuckle.AspNetCore.Filters.SecurityRequirementsOperationFilter : object {
    private SecurityRequirementsOperationFilter`1<AuthorizeAttribute> filter;
    public SecurityRequirementsOperationFilter(bool includeUnauthorizedAndForbiddenResponses, string securitySchemaName);
    public sealed virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
}
public class Swashbuckle.AspNetCore.Filters.SecurityRequirementsOperationFilter`1 : object {
    private bool includeUnauthorizedAndForbiddenResponses;
    private string securitySchemaName;
    private Func`2<IEnumerable`1<T>, IEnumerable`1<string>> policySelector;
    public SecurityRequirementsOperationFilter`1(Func`2<IEnumerable`1<T>, IEnumerable`1<string>> policySelector, bool includeUnauthorizedAndForbiddenResponses, string securitySchemaName);
    public sealed virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
    [CompilerGeneratedAttribute]
private bool <Apply>b__4_0(OpenApiSecurityRequirement requirement);
    [CompilerGeneratedAttribute]
private bool <Apply>b__4_1(KeyValuePair`2<OpenApiSecurityScheme, IList`1<string>> scheme);
}
[ExtensionAttribute]
public static class Swashbuckle.AspNetCore.Filters.ServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddSwaggerExamplesFromAssemblyOf(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddSwaggerExamplesFromAssemblyOf(IServiceCollection services, Type[] types);
    [ExtensionAttribute]
public static IServiceCollection AddSwaggerExamplesFromAssemblies(IServiceCollection services, Assembly[] assemblies);
    [ExtensionAttribute]
public static void AddSwaggerExamples(IServiceCollection services);
}
internal class Swashbuckle.AspNetCore.Filters.ServiceProviderExamplesOperationFilter : object {
    private IServiceProvider serviceProvider;
    private RequestExample requestExample;
    private ResponseExample responseExample;
    public ServiceProviderExamplesOperationFilter(IServiceProvider serviceProvider, RequestExample requestExample, ResponseExample responseExample);
    public sealed virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
    private void SetRequestExamples(OpenApiOperation operation, OperationFilterContext context);
    private void SetResponseExamples(OpenApiOperation operation, OperationFilterContext context);
}
[ExtensionAttribute]
public static class Swashbuckle.AspNetCore.Filters.SwaggerGenOptionsExtensions : object {
    [ExtensionAttribute]
public static void ExampleFilters(SwaggerGenOptions swaggerGenOptions);
    [ExtensionAttribute]
public static void ExampleFilters_PrioritizingExplicitlyDefinedExamples(SwaggerGenOptions swaggerGenOptions);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
