[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class Microsoft.Extensions.ApiDescriptions.DocumentProvider : object {
    private SwaggerGeneratorOptions _generatorOptions;
    private SwaggerOptions _options;
    private IAsyncSwaggerProvider _swaggerProvider;
    public DocumentProvider(IOptions`1<SwaggerGeneratorOptions> generatorOptions, IOptions`1<SwaggerOptions> options, IAsyncSwaggerProvider swaggerProvider);
    public sealed virtual IEnumerable`1<string> GetDocumentNames();
    [AsyncStateMachineAttribute("Microsoft.Extensions.ApiDescriptions.DocumentProvider/<GenerateAsync>d__5")]
public sealed virtual Task GenerateAsync(string documentName, TextWriter writer);
}
internal interface Microsoft.Extensions.ApiDescriptions.IDocumentProvider {
    public abstract virtual IEnumerable`1<string> GetDocumentNames();
    public abstract virtual Task GenerateAsync(string documentName, TextWriter writer);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.SwaggerGenOptionsExtensions : object {
    [ExtensionAttribute]
public static void SwaggerDoc(SwaggerGenOptions swaggerGenOptions, string name, OpenApiInfo info);
    [ExtensionAttribute]
public static void DocInclusionPredicate(SwaggerGenOptions swaggerGenOptions, Func`3<string, ApiDescription, bool> predicate);
    [ExtensionAttribute]
public static void IgnoreObsoleteActions(SwaggerGenOptions swaggerGenOptions);
    [ExtensionAttribute]
public static void ResolveConflictingActions(SwaggerGenOptions swaggerGenOptions, Func`2<IEnumerable`1<ApiDescription>, ApiDescription> resolver);
    [ExtensionAttribute]
public static void CustomOperationIds(SwaggerGenOptions swaggerGenOptions, Func`2<ApiDescription, string> operationIdSelector);
    [ExtensionAttribute]
[ObsoleteAttribute("Deprecated: Use the overload that accepts a Func that returns a list of tags")]
public static void TagActionsBy(SwaggerGenOptions swaggerGenOptions, Func`2<ApiDescription, string> tagSelector);
    [ExtensionAttribute]
public static void TagActionsBy(SwaggerGenOptions swaggerGenOptions, Func`2<ApiDescription, IList`1<string>> tagsSelector);
    [ExtensionAttribute]
public static void OrderActionsBy(SwaggerGenOptions swaggerGenOptions, Func`2<ApiDescription, string> sortKeySelector);
    [ExtensionAttribute]
public static void SortSchemasWith(SwaggerGenOptions swaggerGenOptions, IComparer`1<string> schemaComparer);
    [ExtensionAttribute]
public static void DescribeAllParametersInCamelCase(SwaggerGenOptions swaggerGenOptions);
    [ExtensionAttribute]
public static void AddServer(SwaggerGenOptions swaggerGenOptions, OpenApiServer server);
    [ExtensionAttribute]
public static void AddSecurityDefinition(SwaggerGenOptions swaggerGenOptions, string name, OpenApiSecurityScheme securityScheme);
    [ExtensionAttribute]
public static void AddSecurityRequirement(SwaggerGenOptions swaggerGenOptions, OpenApiSecurityRequirement securityRequirement);
    [ExtensionAttribute]
public static void MapType(SwaggerGenOptions swaggerGenOptions, Type type, Func`1<OpenApiSchema> schemaFactory);
    [ExtensionAttribute]
public static void MapType(SwaggerGenOptions swaggerGenOptions, Func`1<OpenApiSchema> schemaFactory);
    [ExtensionAttribute]
public static void UseInlineDefinitionsForEnums(SwaggerGenOptions swaggerGenOptions);
    [ExtensionAttribute]
public static void CustomSchemaIds(SwaggerGenOptions swaggerGenOptions, Func`2<Type, string> schemaIdSelector);
    [ExtensionAttribute]
public static void IgnoreObsoleteProperties(SwaggerGenOptions swaggerGenOptions);
    [ExtensionAttribute]
public static void UseAllOfForInheritance(SwaggerGenOptions swaggerGenOptions);
    [ExtensionAttribute]
public static void UseOneOfForPolymorphism(SwaggerGenOptions swaggerGenOptions);
    [ExtensionAttribute]
public static void SelectSubTypesUsing(SwaggerGenOptions swaggerGenOptions, Func`2<Type, IEnumerable`1<Type>> customSelector);
    [ExtensionAttribute]
public static void SelectDiscriminatorNameUsing(SwaggerGenOptions swaggerGenOptions, Func`2<Type, string> customSelector);
    [ExtensionAttribute]
public static void SelectDiscriminatorValueUsing(SwaggerGenOptions swaggerGenOptions, Func`2<Type, string> customSelector);
    [ExtensionAttribute]
public static void UseAllOfToExtendReferenceSchemas(SwaggerGenOptions swaggerGenOptions);
    [ExtensionAttribute]
public static void SupportNonNullableReferenceTypes(SwaggerGenOptions swaggerGenOptions);
    [ExtensionAttribute]
public static void NonNullableReferenceTypesAsRequired(SwaggerGenOptions swaggerGenOptions);
    [ExtensionAttribute]
public static void InferSecuritySchemes(SwaggerGenOptions swaggerGenOptions, Func`2<IEnumerable`1<AuthenticationScheme>, IDictionary`2<string, OpenApiSecurityScheme>> securitySchemesSelector);
    [ExtensionAttribute]
public static void SchemaFilter(SwaggerGenOptions swaggerGenOptions, Object[] arguments);
    [ExtensionAttribute]
public static void AddSchemaFilterInstance(SwaggerGenOptions swaggerGenOptions, TFilter filterInstance);
    [ExtensionAttribute]
public static void ParameterFilter(SwaggerGenOptions swaggerGenOptions, Object[] arguments);
    [ExtensionAttribute]
public static void AddParameterFilterInstance(SwaggerGenOptions swaggerGenOptions, TFilter filterInstance);
    [ExtensionAttribute]
public static void RequestBodyFilter(SwaggerGenOptions swaggerGenOptions, Object[] arguments);
    [ExtensionAttribute]
public static void AddRequestBodyFilterInstance(SwaggerGenOptions swaggerGenOptions, TFilter filterInstance);
    [ExtensionAttribute]
public static void OperationFilter(SwaggerGenOptions swaggerGenOptions, Object[] arguments);
    [ExtensionAttribute]
public static void AddOperationFilterInstance(SwaggerGenOptions swaggerGenOptions, TFilter filterInstance);
    [ExtensionAttribute]
public static void DocumentFilter(SwaggerGenOptions swaggerGenOptions, Object[] arguments);
    [ExtensionAttribute]
public static void AddDocumentFilterInstance(SwaggerGenOptions swaggerGenOptions, TFilter filterInstance);
    [ExtensionAttribute]
public static void IncludeXmlComments(SwaggerGenOptions swaggerGenOptions, Func`1<XPathDocument> xmlDocFactory, bool includeControllerXmlComments);
    [ExtensionAttribute]
public static void IncludeXmlComments(SwaggerGenOptions swaggerGenOptions, string filePath, bool includeControllerXmlComments);
    [ExtensionAttribute]
public static void IncludeXmlComments(SwaggerGenOptions swaggerGenOptions, Assembly assembly, bool includeControllerXmlComments);
    [ExtensionAttribute]
[ObsoleteAttribute("You can use "UseOneOfForPolymorphism", "UseAllOfForInheritance" and "SelectSubTypesUsing" to configure equivalent behavior")]
public static void GeneratePolymorphicSchemas(SwaggerGenOptions swaggerGenOptions, Func`2<Type, IEnumerable`1<Type>> subTypesResolver, Func`2<Type, string> discriminatorSelector);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.SwaggerGenServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddSwaggerGen(IServiceCollection services, Action`1<SwaggerGenOptions> setupAction);
    [ExtensionAttribute]
public static void ConfigureSwaggerGen(IServiceCollection services, Action`1<SwaggerGenOptions> setupAction);
}
[AttributeUsageAttribute("2240")]
public class Swashbuckle.AspNetCore.Annotations.SwaggerIgnoreAttribute : Attribute {
}
[ExtensionAttribute]
public static class Swashbuckle.AspNetCore.SwaggerGen.ApiDescriptionExtensions : object {
    [ExtensionAttribute]
public static bool TryGetMethodInfo(ApiDescription apiDescription, MethodInfo& methodInfo);
    [ExtensionAttribute]
public static IEnumerable`1<object> CustomAttributes(ApiDescription apiDescription);
    [ExtensionAttribute]
[ObsoleteAttribute("Use TryGetMethodInfo() and CustomAttributes() instead")]
public static void GetAdditionalMetadata(ApiDescription apiDescription, MethodInfo& methodInfo, IEnumerable`1& customAttributes);
    [ExtensionAttribute]
internal static string RelativePathSansParameterConstraints(ApiDescription apiDescription);
}
[ExtensionAttribute]
public static class Swashbuckle.AspNetCore.SwaggerGen.ApiParameterDescriptionExtensions : object {
    private static Type[] RequiredAttributeTypes;
    private static HashSet`1<string> IllegalHeaderParameters;
    private static ApiParameterDescriptionExtensions();
    [ExtensionAttribute]
public static bool IsRequiredParameter(ApiParameterDescription apiParameter);
    [ExtensionAttribute]
public static ParameterInfo ParameterInfo(ApiParameterDescription apiParameter);
    [ExtensionAttribute]
public static PropertyInfo PropertyInfo(ApiParameterDescription apiParameter);
    [ExtensionAttribute]
public static IEnumerable`1<object> CustomAttributes(ApiParameterDescription apiParameter);
    [ExtensionAttribute]
[ObsoleteAttribute("Use ParameterInfo(), PropertyInfo() and CustomAttributes() extension methods instead")]
internal static void GetAdditionalMetadata(ApiParameterDescription apiParameter, ApiDescription apiDescription, ParameterInfo& parameterInfo, PropertyInfo& propertyInfo, IEnumerable`1& parameterOrPropertyAttributes);
    [ExtensionAttribute]
internal static bool IsFromPath(ApiParameterDescription apiParameter);
    [ExtensionAttribute]
internal static bool IsFromBody(ApiParameterDescription apiParameter);
    [ExtensionAttribute]
internal static bool IsFromForm(ApiParameterDescription apiParameter);
    [ExtensionAttribute]
internal static bool IsIllegalHeaderParameter(ApiParameterDescription apiParameter);
    [CompilerGeneratedAttribute]
internal static bool <IsRequiredParameter>g__IsRequired|2_0(<>c__DisplayClass2_0& );
}
[ExtensionAttribute]
public static class Swashbuckle.AspNetCore.SwaggerGen.ApiResponseTypeExtensions : object {
    [ExtensionAttribute]
internal static bool IsDefaultResponse(ApiResponseType apiResponseType);
}
internal class Swashbuckle.AspNetCore.SwaggerGen.ConfigureSchemaGeneratorOptions : object {
    private SwaggerGenOptions _swaggerGenOptions;
    private IServiceProvider _serviceProvider;
    public ConfigureSchemaGeneratorOptions(IOptions`1<SwaggerGenOptions> swaggerGenOptionsAccessor, IServiceProvider serviceProvider);
    public sealed virtual void Configure(SchemaGeneratorOptions options);
    private void DeepCopy(SchemaGeneratorOptions source, SchemaGeneratorOptions target);
    private TFilter GetOrCreateFilter(FilterDescriptor filterDescriptor);
}
internal class Swashbuckle.AspNetCore.SwaggerGen.ConfigureSwaggerGeneratorOptions : object {
    private SwaggerGenOptions _swaggerGenOptions;
    private IServiceProvider _serviceProvider;
    private IWebHostEnvironment _hostingEnv;
    public ConfigureSwaggerGeneratorOptions(IOptions`1<SwaggerGenOptions> swaggerGenOptionsAccessor, IServiceProvider serviceProvider, IWebHostEnvironment hostingEnv);
    public sealed virtual void Configure(SwaggerGeneratorOptions options);
    public void DeepCopy(SwaggerGeneratorOptions source, SwaggerGeneratorOptions target);
    private TFilter GetOrCreateFilter(FilterDescriptor filterDescriptor);
}
public class Swashbuckle.AspNetCore.SwaggerGen.DataContract : object {
    [CompilerGeneratedAttribute]
private Type <UnderlyingType>k__BackingField;
    [CompilerGeneratedAttribute]
private DataType <DataType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ArrayItemType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DictionaryValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <DictionaryKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<DataProperty> <ObjectProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ObjectExtensionDataType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ObjectTypeNameProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ObjectTypeNameValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<object, string> <JsonConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> <EnumValues>k__BackingField;
    public Type UnderlyingType { get; }
    public DataType DataType { get; }
    public string DataFormat { get; }
    public Type ArrayItemType { get; }
    public Type DictionaryValueType { get; }
    public IEnumerable`1<string> DictionaryKeys { get; }
    public IEnumerable`1<DataProperty> ObjectProperties { get; }
    public Type ObjectExtensionDataType { get; }
    public string ObjectTypeNameProperty { get; }
    public string ObjectTypeNameValue { get; }
    public Func`2<object, string> JsonConverter { get; }
    [ObsoleteAttribute("Use JsonConverter")]
public IEnumerable`1<object> EnumValues { get; }
    private DataContract(Type underlyingType, DataType dataType, string dataFormat, IEnumerable`1<object> enumValues, Type arrayItemType, Type dictionaryValueType, IEnumerable`1<string> dictionaryKeys, IEnumerable`1<DataProperty> objectProperties, Type objectExtensionDataType, string objectTypeNameProperty, string objectTypeNameValue, Func`2<object, string> jsonConverter);
    public static DataContract ForPrimitive(Type underlyingType, DataType dataType, string dataFormat, Func`2<object, string> jsonConverter);
    public static DataContract ForArray(Type underlyingType, Type itemType, Func`2<object, string> jsonConverter);
    public static DataContract ForDictionary(Type underlyingType, Type valueType, IEnumerable`1<string> keys, Func`2<object, string> jsonConverter);
    public static DataContract ForObject(Type underlyingType, IEnumerable`1<DataProperty> properties, Type extensionDataType, string typeNameProperty, string typeNameValue, Func`2<object, string> jsonConverter);
    public static DataContract ForDynamic(Type underlyingType, Func`2<object, string> jsonConverter);
    [ObsoleteAttribute("Provide jsonConverter function instead of enumValues")]
public static DataContract ForPrimitive(Type underlyingType, DataType dataType, string dataFormat, IEnumerable`1<object> enumValues);
    [CompilerGeneratedAttribute]
public Type get_UnderlyingType();
    [CompilerGeneratedAttribute]
public DataType get_DataType();
    [CompilerGeneratedAttribute]
public string get_DataFormat();
    [CompilerGeneratedAttribute]
public Type get_ArrayItemType();
    [CompilerGeneratedAttribute]
public Type get_DictionaryValueType();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_DictionaryKeys();
    [CompilerGeneratedAttribute]
public IEnumerable`1<DataProperty> get_ObjectProperties();
    [CompilerGeneratedAttribute]
public Type get_ObjectExtensionDataType();
    [CompilerGeneratedAttribute]
public string get_ObjectTypeNameProperty();
    [CompilerGeneratedAttribute]
public string get_ObjectTypeNameValue();
    [CompilerGeneratedAttribute]
public Func`2<object, string> get_JsonConverter();
    [CompilerGeneratedAttribute]
public IEnumerable`1<object> get_EnumValues();
}
public class Swashbuckle.AspNetCore.SwaggerGen.DataProperty : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsWriteOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <MemberType>k__BackingField;
    [CompilerGeneratedAttribute]
private MemberInfo <MemberInfo>k__BackingField;
    public string Name { get; }
    public bool IsRequired { get; }
    public bool IsNullable { get; }
    public bool IsReadOnly { get; }
    public bool IsWriteOnly { get; }
    public Type MemberType { get; }
    public MemberInfo MemberInfo { get; }
    public DataProperty(string name, Type memberType, bool isRequired, bool isNullable, bool isReadOnly, bool isWriteOnly, MemberInfo memberInfo);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public bool get_IsRequired();
    [CompilerGeneratedAttribute]
public bool get_IsNullable();
    [CompilerGeneratedAttribute]
public bool get_IsReadOnly();
    [CompilerGeneratedAttribute]
public bool get_IsWriteOnly();
    [CompilerGeneratedAttribute]
public Type get_MemberType();
    [CompilerGeneratedAttribute]
public MemberInfo get_MemberInfo();
}
public enum Swashbuckle.AspNetCore.SwaggerGen.DataType : Enum {
    public int value__;
    public static DataType Boolean;
    public static DataType Integer;
    public static DataType Number;
    public static DataType String;
    public static DataType Array;
    public static DataType Dictionary;
    public static DataType Object;
    public static DataType Unknown;
}
public class Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<ApiDescription> <ApiDescriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchemaGenerator <SchemaGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private SchemaRepository <SchemaRepository>k__BackingField;
    public IEnumerable`1<ApiDescription> ApiDescriptions { get; }
    public ISchemaGenerator SchemaGenerator { get; }
    public SchemaRepository SchemaRepository { get; }
    public string DocumentName { get; }
    public DocumentFilterContext(IEnumerable`1<ApiDescription> apiDescriptions, ISchemaGenerator schemaGenerator, SchemaRepository schemaRepository);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ApiDescription> get_ApiDescriptions();
    [CompilerGeneratedAttribute]
public ISchemaGenerator get_SchemaGenerator();
    [CompilerGeneratedAttribute]
public SchemaRepository get_SchemaRepository();
    public string get_DocumentName();
}
public class Swashbuckle.AspNetCore.SwaggerGen.FilterDescriptor : object {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private object <FilterInstance>k__BackingField;
    public Type Type { get; public set; }
    public Object[] Arguments { get; public set; }
    public object FilterInstance { get; public set; }
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Type value);
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(Object[] value);
    [CompilerGeneratedAttribute]
public object get_FilterInstance();
    [CompilerGeneratedAttribute]
public void set_FilterInstance(object value);
}
public interface Swashbuckle.AspNetCore.SwaggerGen.IDictionary`1 {
}
public interface Swashbuckle.AspNetCore.SwaggerGen.IDocumentAsyncFilter {
    public abstract virtual Task ApplyAsync(OpenApiDocument swaggerDoc, DocumentFilterContext context, CancellationToken cancellationToken);
}
public interface Swashbuckle.AspNetCore.SwaggerGen.IDocumentFilter {
    public abstract virtual void Apply(OpenApiDocument swaggerDoc, DocumentFilterContext context);
}
internal interface Swashbuckle.AspNetCore.SwaggerGen.IFileResult {
}
public interface Swashbuckle.AspNetCore.SwaggerGen.IOperationAsyncFilter {
    public abstract virtual Task ApplyAsync(OpenApiOperation operation, OperationFilterContext context, CancellationToken cancellationToken);
}
public interface Swashbuckle.AspNetCore.SwaggerGen.IOperationFilter {
    public abstract virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
}
public interface Swashbuckle.AspNetCore.SwaggerGen.IParameterAsyncFilter {
    public abstract virtual Task ApplyAsync(OpenApiParameter parameter, ParameterFilterContext context, CancellationToken cancellationToken);
}
public interface Swashbuckle.AspNetCore.SwaggerGen.IParameterFilter {
    public abstract virtual void Apply(OpenApiParameter parameter, ParameterFilterContext context);
}
public interface Swashbuckle.AspNetCore.SwaggerGen.IRequestBodyAsyncFilter {
    public abstract virtual Task ApplyAsync(OpenApiRequestBody requestBody, RequestBodyFilterContext context, CancellationToken cancellationToken);
}
public interface Swashbuckle.AspNetCore.SwaggerGen.IRequestBodyFilter {
    public abstract virtual void Apply(OpenApiRequestBody requestBody, RequestBodyFilterContext context);
}
public interface Swashbuckle.AspNetCore.SwaggerGen.ISchemaFilter {
    public abstract virtual void Apply(OpenApiSchema schema, SchemaFilterContext context);
}
public interface Swashbuckle.AspNetCore.SwaggerGen.ISchemaGenerator {
    public abstract virtual OpenApiSchema GenerateSchema(Type modelType, SchemaRepository schemaRepository, MemberInfo memberInfo, ParameterInfo parameterInfo, ApiParameterRouteInfo routeInfo);
}
public interface Swashbuckle.AspNetCore.SwaggerGen.ISerializerDataContractResolver {
    public abstract virtual DataContract GetDataContractForType(Type type);
}
public class Swashbuckle.AspNetCore.SwaggerGen.JsonSerializerDataContractResolver : object {
    private JsonSerializerOptions _serializerOptions;
    private static Dictionary`2<Type, Tuple`2<DataType, string>> PrimitiveTypesAndFormats;
    public JsonSerializerDataContractResolver(JsonSerializerOptions serializerOptions);
    private static JsonSerializerDataContractResolver();
    public sealed virtual DataContract GetDataContractForType(Type type);
    private string JsonConverterFunc(object value, Type type);
    public bool IsSupportedDictionary(Type type, Type& keyType, Type& valueType);
    public bool IsSupportedCollection(Type type, Type& itemType);
    private List`1<DataProperty> GetDataPropertiesFor(Type objectType, Type& extensionDataType);
    [CompilerGeneratedAttribute]
private bool <GetDataPropertiesFor>b__6_1(PropertyInfo property);
}
[ExtensionAttribute]
public static class Swashbuckle.AspNetCore.SwaggerGen.MemberInfoExtensions : object {
    private static string NullableAttributeFullTypeName;
    private static string NullableFlagsFieldName;
    private static string NullableContextAttributeFullTypeName;
    private static string FlagFieldName;
    private static int NotAnnotated;
    [ExtensionAttribute]
public static IEnumerable`1<object> GetInlineAndMetadataAttributes(MemberInfo memberInfo);
    [ExtensionAttribute]
public static bool IsNonNullableReferenceType(MemberInfo memberInfo);
    [ExtensionAttribute]
public static bool IsDictionaryValueNonNullable(MemberInfo memberInfo);
    [ExtensionAttribute]
private static object GetNullableAttribute(MemberInfo memberInfo);
    [ExtensionAttribute]
private static bool GetNullableFallbackValue(MemberInfo memberInfo);
}
[ExtensionAttribute]
public static class Swashbuckle.AspNetCore.SwaggerGen.MethodInfoExtensions : object {
    [ExtensionAttribute]
public static MethodInfo GetUnderlyingGenericTypeMethod(MethodInfo constructedTypeMethod);
}
public static class Swashbuckle.AspNetCore.SwaggerGen.OpenApiAnyFactory : object {
    public static IOpenApiAny CreateFromJson(string json);
    private static IOpenApiAny CreateOpenApiArray(JsonElement jsonElement);
    private static IOpenApiAny CreateOpenApiObject(JsonElement jsonElement);
    private static IOpenApiAny CreateFromJsonElement(JsonElement jsonElement);
}
[ExtensionAttribute]
public static class Swashbuckle.AspNetCore.SwaggerGen.OpenApiSchemaExtensions : object {
    private static Dictionary`2<DataType, string> DataFormatMappings;
    private static OpenApiSchemaExtensions();
    [ExtensionAttribute]
public static void ApplyValidationAttributes(OpenApiSchema schema, IEnumerable`1<object> customAttributes);
    [ExtensionAttribute]
public static void ApplyRouteConstraints(OpenApiSchema schema, ApiParameterRouteInfo routeInfo);
    [ExtensionAttribute]
public static string ResolveType(OpenApiSchema schema, SchemaRepository schemaRepository);
    private static void ApplyDataTypeAttribute(OpenApiSchema schema, DataTypeAttribute dataTypeAttribute);
    private static void ApplyMinLengthAttribute(OpenApiSchema schema, MinLengthAttribute minLengthAttribute);
    private static void ApplyMinLengthRouteConstraint(OpenApiSchema schema, MinLengthRouteConstraint minLengthRouteConstraint);
    private static void ApplyMaxLengthAttribute(OpenApiSchema schema, MaxLengthAttribute maxLengthAttribute);
    private static void ApplyMaxLengthRouteConstraint(OpenApiSchema schema, MaxLengthRouteConstraint maxLengthRouteConstraint);
    private static void ApplyRangeAttribute(OpenApiSchema schema, RangeAttribute rangeAttribute);
    private static void ApplyRangeRouteConstraint(OpenApiSchema schema, RangeRouteConstraint rangeRouteConstraint);
    private static void ApplyMinRouteConstraint(OpenApiSchema schema, MinRouteConstraint minRouteConstraint);
    private static void ApplyMaxRouteConstraint(OpenApiSchema schema, MaxRouteConstraint maxRouteConstraint);
    private static void ApplyRegularExpressionAttribute(OpenApiSchema schema, RegularExpressionAttribute regularExpressionAttribute);
    private static void ApplyRegexRouteConstraint(OpenApiSchema schema, RegexRouteConstraint regexRouteConstraint);
    private static void ApplyStringLengthAttribute(OpenApiSchema schema, StringLengthAttribute stringLengthAttribute);
    private static void ApplyLengthRouteConstraint(OpenApiSchema schema, LengthRouteConstraint lengthRouteConstraint);
}
public class Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext : object {
    [CompilerGeneratedAttribute]
private ApiDescription <ApiDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchemaGenerator <SchemaGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private SchemaRepository <SchemaRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodInfo <MethodInfo>k__BackingField;
    public ApiDescription ApiDescription { get; }
    public ISchemaGenerator SchemaGenerator { get; }
    public SchemaRepository SchemaRepository { get; }
    public MethodInfo MethodInfo { get; }
    public string DocumentName { get; }
    public OperationFilterContext(ApiDescription apiDescription, ISchemaGenerator schemaRegistry, SchemaRepository schemaRepository, MethodInfo methodInfo);
    [CompilerGeneratedAttribute]
public ApiDescription get_ApiDescription();
    [CompilerGeneratedAttribute]
public ISchemaGenerator get_SchemaGenerator();
    [CompilerGeneratedAttribute]
public SchemaRepository get_SchemaRepository();
    [CompilerGeneratedAttribute]
public MethodInfo get_MethodInfo();
    public string get_DocumentName();
}
public class Swashbuckle.AspNetCore.SwaggerGen.ParameterFilterContext : object {
    [CompilerGeneratedAttribute]
private ApiParameterDescription <ApiParameterDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchemaGenerator <SchemaGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private SchemaRepository <SchemaRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyInfo <PropertyInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterInfo <ParameterInfo>k__BackingField;
    public ApiParameterDescription ApiParameterDescription { get; }
    public ISchemaGenerator SchemaGenerator { get; }
    public SchemaRepository SchemaRepository { get; }
    public PropertyInfo PropertyInfo { get; }
    public ParameterInfo ParameterInfo { get; }
    public string DocumentName { get; }
    public ParameterFilterContext(ApiParameterDescription apiParameterDescription, ISchemaGenerator schemaGenerator, SchemaRepository schemaRepository, PropertyInfo propertyInfo, ParameterInfo parameterInfo);
    [CompilerGeneratedAttribute]
public ApiParameterDescription get_ApiParameterDescription();
    [CompilerGeneratedAttribute]
public ISchemaGenerator get_SchemaGenerator();
    [CompilerGeneratedAttribute]
public SchemaRepository get_SchemaRepository();
    [CompilerGeneratedAttribute]
public PropertyInfo get_PropertyInfo();
    [CompilerGeneratedAttribute]
public ParameterInfo get_ParameterInfo();
    public string get_DocumentName();
}
[ExtensionAttribute]
public static class Swashbuckle.AspNetCore.SwaggerGen.PropertyInfoExtensions : object {
    [ExtensionAttribute]
public static bool HasAttribute(PropertyInfo property);
    [ExtensionAttribute]
public static bool IsPubliclyReadable(PropertyInfo property);
    [ExtensionAttribute]
public static bool IsPubliclyWritable(PropertyInfo property);
}
public class Swashbuckle.AspNetCore.SwaggerGen.RequestBodyFilterContext : object {
    [CompilerGeneratedAttribute]
private ApiParameterDescription <BodyParameterDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ApiParameterDescription> <FormParameterDescriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchemaGenerator <SchemaGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private SchemaRepository <SchemaRepository>k__BackingField;
    public ApiParameterDescription BodyParameterDescription { get; }
    public IEnumerable`1<ApiParameterDescription> FormParameterDescriptions { get; }
    public ISchemaGenerator SchemaGenerator { get; }
    public SchemaRepository SchemaRepository { get; }
    public string DocumentName { get; }
    public RequestBodyFilterContext(ApiParameterDescription bodyParameterDescription, IEnumerable`1<ApiParameterDescription> formParameterDescriptions, ISchemaGenerator schemaGenerator, SchemaRepository schemaRepository);
    [CompilerGeneratedAttribute]
public ApiParameterDescription get_BodyParameterDescription();
    [CompilerGeneratedAttribute]
public IEnumerable`1<ApiParameterDescription> get_FormParameterDescriptions();
    [CompilerGeneratedAttribute]
public ISchemaGenerator get_SchemaGenerator();
    [CompilerGeneratedAttribute]
public SchemaRepository get_SchemaRepository();
    public string get_DocumentName();
}
public class Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext : object {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchemaGenerator <SchemaGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private SchemaRepository <SchemaRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private MemberInfo <MemberInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterInfo <ParameterInfo>k__BackingField;
    public Type Type { get; }
    public ISchemaGenerator SchemaGenerator { get; }
    public SchemaRepository SchemaRepository { get; }
    public MemberInfo MemberInfo { get; }
    public ParameterInfo ParameterInfo { get; }
    public string DocumentName { get; }
    public SchemaFilterContext(Type type, ISchemaGenerator schemaGenerator, SchemaRepository schemaRepository, MemberInfo memberInfo, ParameterInfo parameterInfo);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public ISchemaGenerator get_SchemaGenerator();
    [CompilerGeneratedAttribute]
public SchemaRepository get_SchemaRepository();
    [CompilerGeneratedAttribute]
public MemberInfo get_MemberInfo();
    [CompilerGeneratedAttribute]
public ParameterInfo get_ParameterInfo();
    public string get_DocumentName();
}
public class Swashbuckle.AspNetCore.SwaggerGen.SchemaGenerator : object {
    private SchemaGeneratorOptions _generatorOptions;
    private ISerializerDataContractResolver _serializerDataContractResolver;
    private IOptions`1<MvcOptions> _mvcOptions;
    private static Type[] BinaryStringTypes;
    public SchemaGenerator(SchemaGeneratorOptions generatorOptions, ISerializerDataContractResolver serializerDataContractResolver);
    public SchemaGenerator(SchemaGeneratorOptions generatorOptions, ISerializerDataContractResolver serializerDataContractResolver, IOptions`1<MvcOptions> mvcOptions);
    private static SchemaGenerator();
    public sealed virtual OpenApiSchema GenerateSchema(Type modelType, SchemaRepository schemaRepository, MemberInfo memberInfo, ParameterInfo parameterInfo, ApiParameterRouteInfo routeInfo);
    private OpenApiSchema GenerateSchemaForMember(Type modelType, SchemaRepository schemaRepository, MemberInfo memberInfo, DataProperty dataProperty);
    private OpenApiSchema GenerateSchemaForParameter(Type modelType, SchemaRepository schemaRepository, ParameterInfo parameterInfo, ApiParameterRouteInfo routeInfo);
    private OpenApiSchema GenerateSchemaForType(Type modelType, SchemaRepository schemaRepository);
    private DataContract GetDataContractFor(Type modelType);
    private bool IsBaseTypeWithKnownTypesDefined(DataContract dataContract, IEnumerable`1& knownTypesDataContracts);
    private OpenApiSchema GeneratePolymorphicSchema(SchemaRepository schemaRepository, IEnumerable`1<DataContract> knownTypesDataContracts);
    private OpenApiSchema GenerateConcreteSchema(DataContract dataContract, SchemaRepository schemaRepository);
    private bool TryGetCustomTypeMapping(Type modelType, Func`1& schemaFactory);
    private static OpenApiSchema CreatePrimitiveSchema(DataContract dataContract);
    private OpenApiSchema CreateArraySchema(DataContract dataContract, SchemaRepository schemaRepository);
    private OpenApiSchema CreateDictionarySchema(DataContract dataContract, SchemaRepository schemaRepository);
    private OpenApiSchema CreateObjectSchema(DataContract dataContract, SchemaRepository schemaRepository);
    private bool IsKnownSubType(DataContract dataContract, DataContract& baseTypeDataContract);
    private bool TryGetDiscriminatorFor(DataContract dataContract, SchemaRepository schemaRepository, IEnumerable`1<DataContract> knownTypesDataContracts, OpenApiDiscriminator& discriminator);
    private OpenApiSchema GenerateReferencedSchema(DataContract dataContract, SchemaRepository schemaRepository, Func`1<OpenApiSchema> definitionFactory);
    private void ApplyFilters(OpenApiSchema schema, Type type, SchemaRepository schemaRepository, MemberInfo memberInfo, ParameterInfo parameterInfo);
    private IOpenApiAny GenerateDefaultValue(DataContract dataContract, Type modelType, object defaultValue);
    [CompilerGeneratedAttribute]
private DataContract <IsBaseTypeWithKnownTypesDefined>b__10_0(Type knownType);
}
public class Swashbuckle.AspNetCore.SwaggerGen.SchemaGeneratorOptions : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<Type, Func`1<OpenApiSchema>> <CustomTypeMappings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseInlineDefinitionsForEnums>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<Type, string> <SchemaIdSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreObsoleteProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseAllOfForInheritance>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseOneOfForPolymorphism>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<Type, IEnumerable`1<Type>> <SubTypesSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<Type, string> <DiscriminatorNameSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<Type, string> <DiscriminatorValueSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseAllOfToExtendReferenceSchemas>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportNonNullableReferenceTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NonNullableReferenceTypesAsRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ISchemaFilter> <SchemaFilters>k__BackingField;
    public IDictionary`2<Type, Func`1<OpenApiSchema>> CustomTypeMappings { get; public set; }
    public bool UseInlineDefinitionsForEnums { get; public set; }
    public Func`2<Type, string> SchemaIdSelector { get; public set; }
    public bool IgnoreObsoleteProperties { get; public set; }
    public bool UseAllOfForInheritance { get; public set; }
    public bool UseOneOfForPolymorphism { get; public set; }
    public Func`2<Type, IEnumerable`1<Type>> SubTypesSelector { get; public set; }
    public Func`2<Type, string> DiscriminatorNameSelector { get; public set; }
    public Func`2<Type, string> DiscriminatorValueSelector { get; public set; }
    public bool UseAllOfToExtendReferenceSchemas { get; public set; }
    public bool SupportNonNullableReferenceTypes { get; public set; }
    public bool NonNullableReferenceTypesAsRequired { get; public set; }
    public IList`1<ISchemaFilter> SchemaFilters { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<Type, Func`1<OpenApiSchema>> get_CustomTypeMappings();
    [CompilerGeneratedAttribute]
public void set_CustomTypeMappings(IDictionary`2<Type, Func`1<OpenApiSchema>> value);
    [CompilerGeneratedAttribute]
public bool get_UseInlineDefinitionsForEnums();
    [CompilerGeneratedAttribute]
public void set_UseInlineDefinitionsForEnums(bool value);
    [CompilerGeneratedAttribute]
public Func`2<Type, string> get_SchemaIdSelector();
    [CompilerGeneratedAttribute]
public void set_SchemaIdSelector(Func`2<Type, string> value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreObsoleteProperties();
    [CompilerGeneratedAttribute]
public void set_IgnoreObsoleteProperties(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseAllOfForInheritance();
    [CompilerGeneratedAttribute]
public void set_UseAllOfForInheritance(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseOneOfForPolymorphism();
    [CompilerGeneratedAttribute]
public void set_UseOneOfForPolymorphism(bool value);
    [CompilerGeneratedAttribute]
public Func`2<Type, IEnumerable`1<Type>> get_SubTypesSelector();
    [CompilerGeneratedAttribute]
public void set_SubTypesSelector(Func`2<Type, IEnumerable`1<Type>> value);
    [CompilerGeneratedAttribute]
public Func`2<Type, string> get_DiscriminatorNameSelector();
    [CompilerGeneratedAttribute]
public void set_DiscriminatorNameSelector(Func`2<Type, string> value);
    [CompilerGeneratedAttribute]
public Func`2<Type, string> get_DiscriminatorValueSelector();
    [CompilerGeneratedAttribute]
public void set_DiscriminatorValueSelector(Func`2<Type, string> value);
    [CompilerGeneratedAttribute]
public bool get_UseAllOfToExtendReferenceSchemas();
    [CompilerGeneratedAttribute]
public void set_UseAllOfToExtendReferenceSchemas(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportNonNullableReferenceTypes();
    [CompilerGeneratedAttribute]
public void set_SupportNonNullableReferenceTypes(bool value);
    [CompilerGeneratedAttribute]
public bool get_NonNullableReferenceTypesAsRequired();
    [CompilerGeneratedAttribute]
public void set_NonNullableReferenceTypesAsRequired(bool value);
    [CompilerGeneratedAttribute]
public IList`1<ISchemaFilter> get_SchemaFilters();
    [CompilerGeneratedAttribute]
public void set_SchemaFilters(IList`1<ISchemaFilter> value);
    private string DefaultSchemaIdSelector(Type modelType);
    private IEnumerable`1<Type> DefaultSubTypesSelector(Type baseType);
    private string DefaultDiscriminatorNameSelector(Type baseType);
    private string DefaultDiscriminatorValueSelector(Type subType);
    [CompilerGeneratedAttribute]
private string <DefaultSchemaIdSelector>b__53_0(Type genericArg);
}
public class Swashbuckle.AspNetCore.SwaggerGen.SchemaRepository : object {
    private Dictionary`2<Type, string> _reservedIds;
    [CompilerGeneratedAttribute]
private string <DocumentName>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, OpenApiSchema> <Schemas>k__BackingField;
    public string DocumentName { get; }
    public Dictionary`2<string, OpenApiSchema> Schemas { get; private set; }
    public SchemaRepository(string documentName);
    [CompilerGeneratedAttribute]
public string get_DocumentName();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, OpenApiSchema> get_Schemas();
    [CompilerGeneratedAttribute]
private void set_Schemas(Dictionary`2<string, OpenApiSchema> value);
    public void RegisterType(Type type, string schemaId);
    public bool TryLookupByType(Type type, OpenApiSchema& referenceSchema);
    public OpenApiSchema AddDefinition(string schemaId, OpenApiSchema schema);
}
[ExtensionAttribute]
internal static class Swashbuckle.AspNetCore.SwaggerGen.StringExtensions : object {
    [ExtensionAttribute]
internal static string ToCamelCase(string value);
}
public class Swashbuckle.AspNetCore.SwaggerGen.SwaggerApplicationConvention : object {
    public sealed virtual void Apply(ApplicationModel application);
}
public class Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator : object {
    private IApiDescriptionGroupCollectionProvider _apiDescriptionsProvider;
    private ISchemaGenerator _schemaGenerator;
    private SwaggerGeneratorOptions _options;
    private IAuthenticationSchemeProvider _authenticationSchemeProvider;
    private static Dictionary`2<string, OperationType> OperationTypeMap;
    private static Dictionary`2<BindingSource, ParameterLocation> ParameterLocationMap;
    private static IReadOnlyCollection`1<KeyValuePair`2<string, string>> ResponseDescriptionMap;
    public SwaggerGenerator(SwaggerGeneratorOptions options, IApiDescriptionGroupCollectionProvider apiDescriptionsProvider, ISchemaGenerator schemaGenerator);
    public SwaggerGenerator(SwaggerGeneratorOptions options, IApiDescriptionGroupCollectionProvider apiDescriptionsProvider, ISchemaGenerator schemaGenerator, IAuthenticationSchemeProvider authenticationSchemeProvider);
    private static SwaggerGenerator();
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<GetSwaggerAsync>d__6")]
public sealed virtual Task`1<OpenApiDocument> GetSwaggerAsync(string documentName, string host, string basePath);
    public sealed virtual OpenApiDocument GetSwagger(string documentName, string host, string basePath);
    private void SortSchemas(OpenApiDocument document);
    private ValueTuple`2<DocumentFilterContext, OpenApiDocument> GetSwaggerDocumentWithoutPaths(string documentName, string host, string basePath);
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<GetSecuritySchemesAsync>d__10")]
private Task`1<IDictionary`2<string, OpenApiSecurityScheme>> GetSecuritySchemesAsync();
    private List`1<OpenApiServer> GenerateServers(string host, string basePath);
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<GeneratePathsAsync>d__12")]
private Task`1<OpenApiPaths> GeneratePathsAsync(IEnumerable`1<ApiDescription> apiDescriptions, SchemaRepository schemaRepository, Func`3<IGrouping`2<string, ApiDescription>, SchemaRepository, Task`1<Dictionary`2<OperationType, OpenApiOperation>>> operationsGenerator);
    private OpenApiPaths GeneratePaths(IEnumerable`1<ApiDescription> apiDescriptions, SchemaRepository schemaRepository);
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<GeneratePathsAsync>d__14")]
private Task`1<OpenApiPaths> GeneratePathsAsync(IEnumerable`1<ApiDescription> apiDescriptions, SchemaRepository schemaRepository);
    private IEnumerable`1<ValueTuple`2<OperationType, ApiDescription>> GetOperationsGroupedByMethod(IEnumerable`1<ApiDescription> apiDescriptions);
    private Dictionary`2<OperationType, OpenApiOperation> GenerateOperations(IEnumerable`1<ApiDescription> apiDescriptions, SchemaRepository schemaRepository);
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<GenerateOperationsAsync>d__17")]
private Task`1<Dictionary`2<OperationType, OpenApiOperation>> GenerateOperationsAsync(IEnumerable`1<ApiDescription> apiDescriptions, SchemaRepository schemaRepository);
    private ValueTuple`2<OperationType, ApiDescription> PrepareGenerateOperation(IGrouping`2<string, ApiDescription> group);
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<GenerateOperationAsync>d__19")]
private Task`1<OpenApiOperation> GenerateOperationAsync(ApiDescription apiDescription, SchemaRepository schemaRepository, Func`3<ApiDescription, SchemaRepository, Task`1<List`1<OpenApiParameter>>> parametersGenerator, Func`3<ApiDescription, SchemaRepository, Task`1<OpenApiRequestBody>> bodyGenerator, Func`3<OpenApiOperation, OperationFilterContext, Task> applyFilters);
    private OpenApiOperation GenerateOperation(ApiDescription apiDescription, SchemaRepository schemaRepository);
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<GenerateOperationAsync>d__21")]
private Task`1<OpenApiOperation> GenerateOperationAsync(ApiDescription apiDescription, SchemaRepository schemaRepository);
    private List`1<OpenApiTag> GenerateOperationTags(ApiDescription apiDescription);
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<GenerateParametersAsync>d__23")]
private static Task`1<List`1<OpenApiParameter>> GenerateParametersAsync(ApiDescription apiDescription, SchemaRepository schemaRespository, Func`3<ApiParameterDescription, SchemaRepository, Task`1<OpenApiParameter>> parameterGenerator);
    private List`1<OpenApiParameter> GenerateParameters(ApiDescription apiDescription, SchemaRepository schemaRespository);
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<GenerateParametersAsync>d__25")]
private Task`1<List`1<OpenApiParameter>> GenerateParametersAsync(ApiDescription apiDescription, SchemaRepository schemaRespository);
    private OpenApiParameter GenerateParameterWithoutFilter(ApiParameterDescription apiParameter, SchemaRepository schemaRepository);
    private ValueTuple`2<OpenApiParameter, ParameterFilterContext> GenerateParameterAndContext(ApiParameterDescription apiParameter, SchemaRepository schemaRepository);
    private OpenApiParameter GenerateParameter(ApiParameterDescription apiParameter, SchemaRepository schemaRepository);
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<GenerateParameterAsync>d__29")]
private Task`1<OpenApiParameter> GenerateParameterAsync(ApiParameterDescription apiParameter, SchemaRepository schemaRepository);
    private OpenApiSchema GenerateSchema(Type type, SchemaRepository schemaRepository, PropertyInfo propertyInfo, ParameterInfo parameterInfo, ApiParameterRouteInfo routeInfo);
    private ValueTuple`2<OpenApiRequestBody, RequestBodyFilterContext> GenerateRequestBodyAndFilterContext(ApiDescription apiDescription, SchemaRepository schemaRepository);
    private OpenApiRequestBody GenerateRequestBody(ApiDescription apiDescription, SchemaRepository schemaRepository);
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<GenerateRequestBodyAsync>d__33")]
private Task`1<OpenApiRequestBody> GenerateRequestBodyAsync(ApiDescription apiDescription, SchemaRepository schemaRepository);
    private OpenApiRequestBody GenerateRequestBodyFromBodyParameter(ApiDescription apiDescription, SchemaRepository schemaRepository, ApiParameterDescription bodyParameter);
    private static IEnumerable`1<string> InferRequestContentTypes(ApiDescription apiDescription);
    private OpenApiRequestBody GenerateRequestBodyFromFormParameters(ApiDescription apiDescription, SchemaRepository schemaRepository, IEnumerable`1<ApiParameterDescription> formParameters);
    private OpenApiSchema GenerateSchemaFromFormParameters(IEnumerable`1<ApiParameterDescription> formParameters, SchemaRepository schemaRepository);
    private OpenApiResponses GenerateResponses(ApiDescription apiDescription, SchemaRepository schemaRepository);
    private OpenApiResponse GenerateResponse(ApiDescription apiDescription, SchemaRepository schemaRepository, string statusCode, ApiResponseType apiResponseType);
    private static IEnumerable`1<string> InferResponseContentTypes(ApiDescription apiDescription, ApiResponseType apiResponseType);
    private OpenApiMediaType CreateResponseMediaType(Type modelType, SchemaRepository schemaRespository);
    private static bool IsFromFormAttributeUsedWithIFormFile(ApiParameterDescription apiParameter);
    [CompilerGeneratedAttribute]
private Task`1<Dictionary`2<OperationType, OpenApiOperation>> <GeneratePaths>b__13_0(IGrouping`2<string, ApiDescription> group, SchemaRepository schemaRepository);
    [CompilerGeneratedAttribute]
private Task`1<List`1<OpenApiParameter>> <GenerateOperation>b__20_0(ApiDescription description, SchemaRepository repository);
    [CompilerGeneratedAttribute]
private Task`1<OpenApiRequestBody> <GenerateOperation>b__20_1(ApiDescription description, SchemaRepository repository);
    [CompilerGeneratedAttribute]
private Task <GenerateOperation>b__20_2(OpenApiOperation operation, OperationFilterContext filterContext);
    [AsyncStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator/<<GenerateOperationAsync>b__21_0>d")]
[CompilerGeneratedAttribute]
private Task <GenerateOperationAsync>b__21_0(OpenApiOperation operation, OperationFilterContext filterContext);
    [CompilerGeneratedAttribute]
private Task`1<OpenApiParameter> <GenerateParameters>b__24_0(ApiParameterDescription parameter, SchemaRepository schemaRespository);
}
public class Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException : Exception {
    public SwaggerGeneratorException(string message);
    public SwaggerGeneratorException(string message, Exception innerException);
}
public class Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorOptions : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, OpenApiInfo> <SwaggerDocs>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<string, ApiDescription, bool> <DocInclusionPredicate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreObsoleteActions>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<IEnumerable`1<ApiDescription>, ApiDescription> <ConflictingActionsResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<ApiDescription, string> <OperationIdSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<ApiDescription, IList`1<string>> <TagsSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<ApiDescription, string> <SortKeySelector>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InferSecuritySchemes>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<IEnumerable`1<AuthenticationScheme>, IDictionary`2<string, OpenApiSecurityScheme>> <SecuritySchemesSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DescribeAllParametersInCamelCase>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<OpenApiServer> <Servers>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, OpenApiSecurityScheme> <SecuritySchemes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<OpenApiSecurityRequirement> <SecurityRequirements>k__BackingField;
    [CompilerGeneratedAttribute]
private IComparer`1<string> <SchemaComparer>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IParameterFilter> <ParameterFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IParameterAsyncFilter> <ParameterAsyncFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IRequestBodyFilter> <RequestBodyFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IRequestBodyAsyncFilter> <RequestBodyAsyncFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IOperationFilter> <OperationFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IOperationAsyncFilter> <OperationAsyncFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IDocumentFilter> <DocumentFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IDocumentAsyncFilter> <DocumentAsyncFilters>k__BackingField;
    public IDictionary`2<string, OpenApiInfo> SwaggerDocs { get; public set; }
    public Func`3<string, ApiDescription, bool> DocInclusionPredicate { get; public set; }
    public bool IgnoreObsoleteActions { get; public set; }
    public Func`2<IEnumerable`1<ApiDescription>, ApiDescription> ConflictingActionsResolver { get; public set; }
    public Func`2<ApiDescription, string> OperationIdSelector { get; public set; }
    public Func`2<ApiDescription, IList`1<string>> TagsSelector { get; public set; }
    public Func`2<ApiDescription, string> SortKeySelector { get; public set; }
    public bool InferSecuritySchemes { get; public set; }
    public Func`2<IEnumerable`1<AuthenticationScheme>, IDictionary`2<string, OpenApiSecurityScheme>> SecuritySchemesSelector { get; public set; }
    public bool DescribeAllParametersInCamelCase { get; public set; }
    public List`1<OpenApiServer> Servers { get; public set; }
    public IDictionary`2<string, OpenApiSecurityScheme> SecuritySchemes { get; public set; }
    public IList`1<OpenApiSecurityRequirement> SecurityRequirements { get; public set; }
    public IComparer`1<string> SchemaComparer { get; public set; }
    public IList`1<IParameterFilter> ParameterFilters { get; public set; }
    public IList`1<IParameterAsyncFilter> ParameterAsyncFilters { get; public set; }
    public List`1<IRequestBodyFilter> RequestBodyFilters { get; public set; }
    public IList`1<IRequestBodyAsyncFilter> RequestBodyAsyncFilters { get; public set; }
    public List`1<IOperationFilter> OperationFilters { get; public set; }
    public IList`1<IOperationAsyncFilter> OperationAsyncFilters { get; public set; }
    public IList`1<IDocumentFilter> DocumentFilters { get; public set; }
    public IList`1<IDocumentAsyncFilter> DocumentAsyncFilters { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, OpenApiInfo> get_SwaggerDocs();
    [CompilerGeneratedAttribute]
public void set_SwaggerDocs(IDictionary`2<string, OpenApiInfo> value);
    [CompilerGeneratedAttribute]
public Func`3<string, ApiDescription, bool> get_DocInclusionPredicate();
    [CompilerGeneratedAttribute]
public void set_DocInclusionPredicate(Func`3<string, ApiDescription, bool> value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreObsoleteActions();
    [CompilerGeneratedAttribute]
public void set_IgnoreObsoleteActions(bool value);
    [CompilerGeneratedAttribute]
public Func`2<IEnumerable`1<ApiDescription>, ApiDescription> get_ConflictingActionsResolver();
    [CompilerGeneratedAttribute]
public void set_ConflictingActionsResolver(Func`2<IEnumerable`1<ApiDescription>, ApiDescription> value);
    [CompilerGeneratedAttribute]
public Func`2<ApiDescription, string> get_OperationIdSelector();
    [CompilerGeneratedAttribute]
public void set_OperationIdSelector(Func`2<ApiDescription, string> value);
    [CompilerGeneratedAttribute]
public Func`2<ApiDescription, IList`1<string>> get_TagsSelector();
    [CompilerGeneratedAttribute]
public void set_TagsSelector(Func`2<ApiDescription, IList`1<string>> value);
    [CompilerGeneratedAttribute]
public Func`2<ApiDescription, string> get_SortKeySelector();
    [CompilerGeneratedAttribute]
public void set_SortKeySelector(Func`2<ApiDescription, string> value);
    [CompilerGeneratedAttribute]
public bool get_InferSecuritySchemes();
    [CompilerGeneratedAttribute]
public void set_InferSecuritySchemes(bool value);
    [CompilerGeneratedAttribute]
public Func`2<IEnumerable`1<AuthenticationScheme>, IDictionary`2<string, OpenApiSecurityScheme>> get_SecuritySchemesSelector();
    [CompilerGeneratedAttribute]
public void set_SecuritySchemesSelector(Func`2<IEnumerable`1<AuthenticationScheme>, IDictionary`2<string, OpenApiSecurityScheme>> value);
    [CompilerGeneratedAttribute]
public bool get_DescribeAllParametersInCamelCase();
    [CompilerGeneratedAttribute]
public void set_DescribeAllParametersInCamelCase(bool value);
    [CompilerGeneratedAttribute]
public List`1<OpenApiServer> get_Servers();
    [CompilerGeneratedAttribute]
public void set_Servers(List`1<OpenApiServer> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, OpenApiSecurityScheme> get_SecuritySchemes();
    [CompilerGeneratedAttribute]
public void set_SecuritySchemes(IDictionary`2<string, OpenApiSecurityScheme> value);
    [CompilerGeneratedAttribute]
public IList`1<OpenApiSecurityRequirement> get_SecurityRequirements();
    [CompilerGeneratedAttribute]
public void set_SecurityRequirements(IList`1<OpenApiSecurityRequirement> value);
    [CompilerGeneratedAttribute]
public IComparer`1<string> get_SchemaComparer();
    [CompilerGeneratedAttribute]
public void set_SchemaComparer(IComparer`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<IParameterFilter> get_ParameterFilters();
    [CompilerGeneratedAttribute]
public void set_ParameterFilters(IList`1<IParameterFilter> value);
    [CompilerGeneratedAttribute]
public IList`1<IParameterAsyncFilter> get_ParameterAsyncFilters();
    [CompilerGeneratedAttribute]
public void set_ParameterAsyncFilters(IList`1<IParameterAsyncFilter> value);
    [CompilerGeneratedAttribute]
public List`1<IRequestBodyFilter> get_RequestBodyFilters();
    [CompilerGeneratedAttribute]
public void set_RequestBodyFilters(List`1<IRequestBodyFilter> value);
    [CompilerGeneratedAttribute]
public IList`1<IRequestBodyAsyncFilter> get_RequestBodyAsyncFilters();
    [CompilerGeneratedAttribute]
public void set_RequestBodyAsyncFilters(IList`1<IRequestBodyAsyncFilter> value);
    [CompilerGeneratedAttribute]
public List`1<IOperationFilter> get_OperationFilters();
    [CompilerGeneratedAttribute]
public void set_OperationFilters(List`1<IOperationFilter> value);
    [CompilerGeneratedAttribute]
public IList`1<IOperationAsyncFilter> get_OperationAsyncFilters();
    [CompilerGeneratedAttribute]
public void set_OperationAsyncFilters(IList`1<IOperationAsyncFilter> value);
    [CompilerGeneratedAttribute]
public IList`1<IDocumentFilter> get_DocumentFilters();
    [CompilerGeneratedAttribute]
public void set_DocumentFilters(IList`1<IDocumentFilter> value);
    [CompilerGeneratedAttribute]
public IList`1<IDocumentAsyncFilter> get_DocumentAsyncFilters();
    [CompilerGeneratedAttribute]
public void set_DocumentAsyncFilters(IList`1<IDocumentAsyncFilter> value);
    private bool DefaultDocInclusionPredicate(string documentName, ApiDescription apiDescription);
    private string DefaultOperationIdSelector(ApiDescription apiDescription);
    private IList`1<string> DefaultTagsSelector(ApiDescription apiDescription);
    private string DefaultSortKeySelector(ApiDescription apiDescription);
}
public class Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions : object {
    [CompilerGeneratedAttribute]
private SwaggerGeneratorOptions <SwaggerGeneratorOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private SchemaGeneratorOptions <SchemaGeneratorOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<FilterDescriptor> <ParameterFilterDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<FilterDescriptor> <RequestBodyFilterDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<FilterDescriptor> <OperationFilterDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<FilterDescriptor> <DocumentFilterDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<FilterDescriptor> <SchemaFilterDescriptors>k__BackingField;
    public SwaggerGeneratorOptions SwaggerGeneratorOptions { get; public set; }
    public SchemaGeneratorOptions SchemaGeneratorOptions { get; public set; }
    public List`1<FilterDescriptor> ParameterFilterDescriptors { get; public set; }
    public List`1<FilterDescriptor> RequestBodyFilterDescriptors { get; public set; }
    public List`1<FilterDescriptor> OperationFilterDescriptors { get; public set; }
    public List`1<FilterDescriptor> DocumentFilterDescriptors { get; public set; }
    public List`1<FilterDescriptor> SchemaFilterDescriptors { get; public set; }
    [CompilerGeneratedAttribute]
public SwaggerGeneratorOptions get_SwaggerGeneratorOptions();
    [CompilerGeneratedAttribute]
public void set_SwaggerGeneratorOptions(SwaggerGeneratorOptions value);
    [CompilerGeneratedAttribute]
public SchemaGeneratorOptions get_SchemaGeneratorOptions();
    [CompilerGeneratedAttribute]
public void set_SchemaGeneratorOptions(SchemaGeneratorOptions value);
    [CompilerGeneratedAttribute]
public List`1<FilterDescriptor> get_ParameterFilterDescriptors();
    [CompilerGeneratedAttribute]
public void set_ParameterFilterDescriptors(List`1<FilterDescriptor> value);
    [CompilerGeneratedAttribute]
public List`1<FilterDescriptor> get_RequestBodyFilterDescriptors();
    [CompilerGeneratedAttribute]
public void set_RequestBodyFilterDescriptors(List`1<FilterDescriptor> value);
    [CompilerGeneratedAttribute]
public List`1<FilterDescriptor> get_OperationFilterDescriptors();
    [CompilerGeneratedAttribute]
public void set_OperationFilterDescriptors(List`1<FilterDescriptor> value);
    [CompilerGeneratedAttribute]
public List`1<FilterDescriptor> get_DocumentFilterDescriptors();
    [CompilerGeneratedAttribute]
public void set_DocumentFilterDescriptors(List`1<FilterDescriptor> value);
    [CompilerGeneratedAttribute]
public List`1<FilterDescriptor> get_SchemaFilterDescriptors();
    [CompilerGeneratedAttribute]
public void set_SchemaFilterDescriptors(List`1<FilterDescriptor> value);
}
[ExtensionAttribute]
public static class Swashbuckle.AspNetCore.SwaggerGen.TypeExtensions : object {
    [ExtensionAttribute]
public static bool IsOneOf(Type type, Type[] possibleTypes);
    [ExtensionAttribute]
public static bool IsAssignableTo(Type type, Type baseType);
    [ExtensionAttribute]
public static bool IsAssignableToOneOf(Type type, Type[] possibleBaseTypes);
    [ExtensionAttribute]
public static bool IsConstructedFrom(Type type, Type genericType, Type& constructedType);
    [ExtensionAttribute]
public static bool IsReferenceOrNullableType(Type type);
    [ExtensionAttribute]
public static object GetDefaultValue(Type type);
    [ExtensionAttribute]
public static Type[] GetInheritanceChain(Type type);
}
public class Swashbuckle.AspNetCore.SwaggerGen.XmlCommentsDocumentFilter : object {
    private static string MemberXPath;
    private static string SummaryTag;
    private XPathNavigator _xmlNavigator;
    private SwaggerGeneratorOptions _options;
    public XmlCommentsDocumentFilter(XPathDocument xmlDoc);
    public XmlCommentsDocumentFilter(XPathDocument xmlDoc, SwaggerGeneratorOptions options);
    public sealed virtual void Apply(OpenApiDocument swaggerDoc, DocumentFilterContext context);
    [CompilerGeneratedAttribute]
private string <Apply>b__6_2(<>f__AnonymousType0`2<ApiDescription, ControllerActionDescriptor> x);
}
internal static class Swashbuckle.AspNetCore.SwaggerGen.XmlCommentsExampleHelper : object {
    public static IOpenApiAny Create(SchemaRepository schemaRepository, OpenApiSchema schema, string exampleString);
}
public class Swashbuckle.AspNetCore.SwaggerGen.XmlCommentsNodeNameHelper : object {
    public static string GetMemberNameForMethod(MethodInfo method);
    public static string GetMemberNameForType(Type type);
    public static string GetMemberNameForFieldOrProperty(MemberInfo fieldOrPropertyInfo);
    private static string QualifiedNameFor(Type type, bool expandGenericArgs);
    [IteratorStateMachineAttribute("Swashbuckle.AspNetCore.SwaggerGen.XmlCommentsNodeNameHelper/<GetNestedTypeNames>d__4")]
private static IEnumerable`1<string> GetNestedTypeNames(Type type);
}
public class Swashbuckle.AspNetCore.SwaggerGen.XmlCommentsOperationFilter : object {
    private XPathNavigator _xmlNavigator;
    public XmlCommentsOperationFilter(XPathDocument xmlDoc);
    public sealed virtual void Apply(OpenApiOperation operation, OperationFilterContext context);
    private void ApplyControllerTags(OpenApiOperation operation, Type controllerType);
    private void ApplyMethodTags(OpenApiOperation operation, MethodInfo methodInfo);
    private void ApplyResponseTags(OpenApiOperation operation, XPathNodeIterator responseNodes);
}
public class Swashbuckle.AspNetCore.SwaggerGen.XmlCommentsParameterFilter : object {
    private XPathNavigator _xmlNavigator;
    public XmlCommentsParameterFilter(XPathDocument xmlDoc);
    public sealed virtual void Apply(OpenApiParameter parameter, ParameterFilterContext context);
    private void ApplyPropertyTags(OpenApiParameter parameter, ParameterFilterContext context);
    private void ApplyParamTags(OpenApiParameter parameter, ParameterFilterContext context);
}
public class Swashbuckle.AspNetCore.SwaggerGen.XmlCommentsRequestBodyFilter : object {
    private XPathNavigator _xmlNavigator;
    public XmlCommentsRequestBodyFilter(XPathDocument xmlDoc);
    public sealed virtual void Apply(OpenApiRequestBody requestBody, RequestBodyFilterContext context);
    private void ApplyPropertyTags(OpenApiRequestBody requestBody, RequestBodyFilterContext context, PropertyInfo propertyInfo);
    private void ApplyParamTags(OpenApiRequestBody requestBody, RequestBodyFilterContext context, ParameterInfo parameterInfo);
}
public class Swashbuckle.AspNetCore.SwaggerGen.XmlCommentsSchemaFilter : object {
    private XPathNavigator _xmlNavigator;
    public XmlCommentsSchemaFilter(XPathDocument xmlDoc);
    public sealed virtual void Apply(OpenApiSchema schema, SchemaFilterContext context);
    private void ApplyTypeTags(OpenApiSchema schema, Type type);
    private void ApplyMemberTags(OpenApiSchema schema, SchemaFilterContext context);
    private static void TrySetExample(OpenApiSchema schema, SchemaFilterContext context, string example);
}
[ExtensionAttribute]
public static class Swashbuckle.AspNetCore.SwaggerGen.XmlCommentsTextHelper : object {
    private static string RefTagPattern;
    private static string CodeTagPattern;
    private static string MultilineCodeTagPattern;
    private static string ParaTagPattern;
    private static string HrefPattern;
    private static string BrPattern;
    private static Regex _refTag;
    private static Regex _codeTag;
    private static Regex _multilineCodeTag;
    private static Regex _paraTag;
    private static Regex _hrefTag;
    private static Regex _brTag;
    private static XmlCommentsTextHelper();
    public static string Humanize(string text);
    [ExtensionAttribute]
private static string NormalizeIndentation(string text);
    private static string GetCommonLeadingWhitespace(String[] lines);
    [ExtensionAttribute]
private static string HumanizeRefTags(string text);
    [ExtensionAttribute]
private static string HumanizeHrefTags(string text);
    [ExtensionAttribute]
private static string HumanizeCodeTags(string text);
    [ExtensionAttribute]
private static string HumanizeMultilineCodeTags(string text);
    [ExtensionAttribute]
private static string HumanizeParaTags(string text);
    [ExtensionAttribute]
private static string HumanizeBrTags(string text);
    [ExtensionAttribute]
private static string DecodeXml(string text);
    private static Regex RefTag();
    private static Regex CodeTag();
    private static Regex MultilineCodeTag();
    private static Regex ParaTag();
    private static Regex HrefTag();
    private static Regex BrTag();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
