[DefaultMemberAttribute("Item")]
public class System.Configuration.Abstractions.AppSettingsExtended : NameObjectCollectionBase {
    [CompilerGeneratedAttribute]
private NameValueCollection <Raw>k__BackingField;
    private IEnumerable`1<IConfigurationInterceptor> _interceptors;
    private IEnumerable`1<IConvertType> _typeConverters;
    public NameValueCollection Raw { get; }
    public string Item { get; public set; }
    public string Item { get; }
    public String[] AllKeys { get; }
    public int Count { get; }
    public KeysCollection Keys { get; }
    public AppSettingsExtended(NameValueCollection raw, IEnumerable`1<IConfigurationInterceptor> interceptors, IEnumerable`1<IConvertType> typeConverters);
    [CompilerGeneratedAttribute]
public sealed virtual NameValueCollection get_Raw();
    public sealed virtual TSettingsDto Map();
    public sealed virtual T AppSettingSilent(string key, Func`1<T> insteadOfThrowingDefaultException);
    public sealed virtual T AppSettingConvert(string key, Func`1<T> whenConversionFailsInsteadOfThrowingDefaultException);
    public sealed virtual string AppSetting(string key, Func`1<string> whenKeyNotFoundInsteadOfThrowingDefaultException);
    public sealed virtual T AppSetting(string key, Func`1<T> whenKeyNotFoundInsteadOfThrowingDefaultException, Func`1<T> whenConversionFailsInsteadOfThrowingDefaultException);
    private string Intercept(string key, string rawSetting);
    public sealed virtual void Add(NameValueCollection c);
    public sealed virtual void Clear();
    public sealed virtual void CopyTo(Array dest, int index);
    public sealed virtual bool HasKeys();
    public sealed virtual void Add(string name, string value);
    public sealed virtual string Get(string name);
    public sealed virtual String[] GetValues(string name);
    public sealed virtual void Set(string name, string value);
    public sealed virtual void Remove(string name);
    public sealed virtual string Get(int index);
    public sealed virtual String[] GetValues(int index);
    public sealed virtual string GetKey(int index);
    public sealed virtual string get_Item(string key);
    public sealed virtual void set_Item(string key, string value);
    public sealed virtual string get_Item(int index);
    public sealed virtual String[] get_AllKeys();
    public virtual int get_Count();
    public virtual KeysCollection get_Keys();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual void OnDeserialization(object sender);
    private sealed virtual override IEnumerator System.Configuration.Abstractions.IAppSettings.GetEnumerator();
    private void RecursivelyMapProperties(Type dtoType, TSettingsDto instance, string prefix);
}
public class System.Configuration.Abstractions.ConfigurationManager : object {
    [CompilerGeneratedAttribute]
private IAppSettings <AppSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private IConnectionStrings <ConnectionStrings>k__BackingField;
    [CompilerGeneratedAttribute]
private static List`1<IConvertType> <TypeConverters>k__BackingField;
    [CompilerGeneratedAttribute]
private static List`1<IInterceptor> <Interceptors>k__BackingField;
    public IAppSettings AppSettings { get; public set; }
    public IConnectionStrings ConnectionStrings { get; public set; }
    public static List`1<IConvertType> TypeConverters { get; }
    public static List`1<IInterceptor> Interceptors { get; }
    public static IEnumerable`1<IConfigurationInterceptor> ConfigurationInterceptors { get; }
    public static IEnumerable`1<IConnectionStringInterceptor> ConnectionStringInterceptors { get; }
    public static IConfigurationManager Instance { get; }
    private static ConfigurationManager();
    public ConfigurationManager(NameValueCollection appSettings);
    public ConfigurationManager(NameValueCollection appSettings, ConnectionStringSettingsCollection connectionStringSettings);
    [CompilerGeneratedAttribute]
public sealed virtual IAppSettings get_AppSettings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AppSettings(IAppSettings value);
    [CompilerGeneratedAttribute]
public sealed virtual IConnectionStrings get_ConnectionStrings();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConnectionStrings(IConnectionStrings value);
    [CompilerGeneratedAttribute]
public static List`1<IConvertType> get_TypeConverters();
    [CompilerGeneratedAttribute]
public static List`1<IInterceptor> get_Interceptors();
    public static IEnumerable`1<IConfigurationInterceptor> get_ConfigurationInterceptors();
    public static IEnumerable`1<IConnectionStringInterceptor> get_ConnectionStringInterceptors();
    public static void RegisterInterceptors(IInterceptor[] interceptors);
    public static void RegisterTypeConverters(IConvertType[] converters);
    public sealed virtual object GetSection(string sectionName);
    public sealed virtual T GetSection(string sectionName);
    public sealed virtual void RefreshSection(string sectionName);
    public sealed virtual Configuration OpenExeConfiguration(string exePath);
    public sealed virtual Configuration OpenExeConfiguration(ConfigurationUserLevel userLevel);
    public sealed virtual Configuration OpenMachineConfiguration();
    public sealed virtual Configuration OpenMappedExeConfiguration(ExeConfigurationFileMap fileMap, ConfigurationUserLevel userLevel);
    public sealed virtual Configuration OpenMappedExeConfiguration(ExeConfigurationFileMap fileMap);
    public static IConfigurationManager get_Instance();
    private static IEnumerable`1<IConvertType> ConfigureDefaultTypeConverters();
}
[DefaultMemberAttribute("Item")]
public class System.Configuration.Abstractions.ConnectionStringsExtended : object {
    [CompilerGeneratedAttribute]
private ConnectionStringSettingsCollection <Raw>k__BackingField;
    private IEnumerable`1<IConnectionStringInterceptor> _interceptors;
    private IAppSettings _appSettings;
    public ConnectionStringSettingsCollection Raw { get; }
    public ConnectionStringSettings Item { get; }
    public ConnectionStringSettings Item { get; }
    public ConnectionStringsExtended(ConnectionStringSettingsCollection raw, IAppSettings appSettings, IEnumerable`1<IConnectionStringInterceptor> interceptors);
    [CompilerGeneratedAttribute]
public ConnectionStringSettingsCollection get_Raw();
    public sealed virtual ConnectionStringSettings get_Item(string name);
    public sealed virtual ConnectionStringSettings get_Item(int index);
    public sealed virtual int IndexOf(ConnectionStringSettings settings);
    public sealed virtual void Add(ConnectionStringSettings settings);
    public sealed virtual void Remove(ConnectionStringSettings settings);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual void Remove(string name);
    public sealed virtual void Clear();
    private ConnectionStringSettings Intercept(ConnectionStringSettings rawSetting);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<ConnectionStringSettings> GetEnumerator();
    [CompilerGeneratedAttribute]
private ConnectionStringSettings <Intercept>b__16_0(ConnectionStringSettings current, IConnectionStringInterceptor interceptor);
}
[DefaultMemberAttribute("Item")]
public interface System.Configuration.Abstractions.IAppSettings {
    public string Item { get; public set; }
    public string Item { get; }
    public String[] AllKeys { get; }
    public int Count { get; }
    public KeysCollection Keys { get; }
    public abstract virtual void Add(NameValueCollection c);
    public abstract virtual void Clear();
    public abstract virtual void CopyTo(Array dest, int index);
    public abstract virtual bool HasKeys();
    public abstract virtual void Add(string name, string value);
    public abstract virtual string Get(string name);
    public abstract virtual String[] GetValues(string name);
    public abstract virtual void Set(string name, string value);
    public abstract virtual void Remove(string name);
    public abstract virtual string Get(int index);
    public abstract virtual String[] GetValues(int index);
    public abstract virtual string GetKey(int index);
    public abstract virtual string get_Item(string name);
    public abstract virtual void set_Item(string name, string value);
    public abstract virtual string get_Item(int index);
    public abstract virtual String[] get_AllKeys();
    public abstract virtual int get_Count();
    public abstract virtual KeysCollection get_Keys();
    public abstract virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public abstract virtual void OnDeserialization(object sender);
    public abstract virtual IEnumerator GetEnumerator();
}
public interface System.Configuration.Abstractions.IAppSettingsExtended {
    public NameValueCollection Raw { get; }
    public abstract virtual NameValueCollection get_Raw();
    public abstract virtual T AppSettingSilent(string key, Func`1<T> insteadOfThrowingDefaultException);
    public abstract virtual T AppSettingConvert(string key, Func`1<T> whenConversionFailsInsteadOfThrowingDefaultException);
    public abstract virtual string AppSetting(string key, Func`1<string> whenKeyNotFoundInsteadOfThrowingDefaultException);
    public abstract virtual T AppSetting(string key, Func`1<T> whenKeyNotFoundInsteadOfThrowingDefaultException, Func`1<T> whenConversionFailsInsteadOfThrowingDefaultException);
    public abstract virtual TSettingsDto Map();
}
public interface System.Configuration.Abstractions.IConfigurationInterceptor {
    public abstract virtual string OnSettingRetrieve(IAppSettings appSettings, string key, string originalValue);
}
public interface System.Configuration.Abstractions.IConfigurationManager {
    public IAppSettings AppSettings { get; public set; }
    public IConnectionStrings ConnectionStrings { get; public set; }
    public abstract virtual IAppSettings get_AppSettings();
    public abstract virtual void set_AppSettings(IAppSettings value);
    public abstract virtual IConnectionStrings get_ConnectionStrings();
    public abstract virtual void set_ConnectionStrings(IConnectionStrings value);
    public abstract virtual object GetSection(string sectionName);
    public abstract virtual void RefreshSection(string sectionName);
    public abstract virtual Configuration OpenExeConfiguration(string exePath);
    public abstract virtual Configuration OpenExeConfiguration(ConfigurationUserLevel userLevel);
    public abstract virtual Configuration OpenMachineConfiguration();
    public abstract virtual Configuration OpenMappedExeConfiguration(ExeConfigurationFileMap fileMap, ConfigurationUserLevel userLevel);
    public abstract virtual Configuration OpenMappedExeConfiguration(ExeConfigurationFileMap fileMap);
}
public interface System.Configuration.Abstractions.IConfigurationManagerExtended {
    public abstract virtual T GetSection(string sectionName);
}
public interface System.Configuration.Abstractions.IConnectionStringInterceptor {
    public abstract virtual ConnectionStringSettings OnConnectionStringRetrieve(IAppSettings appSettings, IConnectionStrings connectionStrings, ConnectionStringSettings originalValue);
}
[DefaultMemberAttribute("Item")]
public interface System.Configuration.Abstractions.IConnectionStrings {
    public ConnectionStringSettings Item { get; }
    public ConnectionStringSettings Item { get; }
    public abstract virtual ConnectionStringSettings get_Item(string name);
    public abstract virtual ConnectionStringSettings get_Item(int index);
    public abstract virtual int IndexOf(ConnectionStringSettings settings);
    public abstract virtual void Add(ConnectionStringSettings settings);
    public abstract virtual void Remove(ConnectionStringSettings settings);
    public abstract virtual void RemoveAt(int index);
    public abstract virtual void Remove(string name);
    public abstract virtual void Clear();
}
public interface System.Configuration.Abstractions.IConvertType {
    public Type TargetType { get; }
    public abstract virtual Type get_TargetType();
    public abstract virtual object Convert(string configurationValue);
}
public interface System.Configuration.Abstractions.IInterceptor {
}
public class System.Configuration.Abstractions.Interceptors.ConfigurationSubstitutionInterceptor : object {
    public sealed virtual string OnSettingRetrieve(IAppSettings appSettings, string key, string originalValue);
    public sealed virtual ConnectionStringSettings OnConnectionStringRetrieve(IAppSettings appSettings, IConnectionStrings connectionStrings, ConnectionStringSettings originalValue);
}
public class System.Configuration.Abstractions.TypeConverters.GuidConverter : object {
    public Type TargetType { get; }
    public sealed virtual Type get_TargetType();
    public sealed virtual object Convert(string configurationValue);
}
public class System.Configuration.Abstractions.TypeConverters.PrimitiveConverter : object {
    [CompilerGeneratedAttribute]
private Type <TargetType>k__BackingField;
    public Type TargetType { get; }
    public PrimitiveConverter(Type targetType);
    [CompilerGeneratedAttribute]
public sealed virtual Type get_TargetType();
    public sealed virtual object Convert(string configurationValue);
}
public class System.Configuration.Abstractions.TypeConverters.UriConverter : object {
    public Type TargetType { get; }
    public sealed virtual Type get_TargetType();
    public sealed virtual object Convert(string configurationValue);
}
