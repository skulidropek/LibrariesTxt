public interface System.Data.HashFunction.IHashFunction {
    public int HashSizeInBits { get; }
    public abstract virtual int get_HashSizeInBits();
    public abstract virtual IHashValue ComputeHash(Byte[] data);
    public abstract virtual IHashValue ComputeHash(Byte[] data, CancellationToken cancellationToken);
    public abstract virtual IHashValue ComputeHash(Stream data);
    public abstract virtual IHashValue ComputeHash(Stream data, CancellationToken cancellationToken);
}
public interface System.Data.HashFunction.IHashFunctionAsync {
    public abstract virtual Task`1<IHashValue> ComputeHashAsync(Stream data);
    public abstract virtual Task`1<IHashValue> ComputeHashAsync(Stream data, CancellationToken cancellationToken);
}
public interface System.Data.HashFunction.IHashValue {
    public int BitLength { get; }
    public Byte[] Hash { get; }
    public abstract virtual int get_BitLength();
    public abstract virtual Byte[] get_Hash();
    public abstract virtual BitArray AsBitArray();
    public abstract virtual string AsHexString();
    public abstract virtual string AsHexString(bool uppercase);
    public abstract virtual string AsBase64String();
}
