internal static class FxResources.System.Data.Odbc.SR : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[TypeForwardedFromAttribute("System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
public static class System.Data.Odbc.ODBC32 : object {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DesignerAttribute("Microsoft.VSDesigner.Data.VS.OdbcCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[ToolboxItemAttribute("True")]
public class System.Data.Odbc.OdbcCommand : DbCommand {
    [NullableAttribute("0")]
[EditorAttribute("Microsoft.VSDesigner.Data.Odbc.Design.OdbcCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public string CommandText { get; public set; }
    public int CommandTimeout { get; public set; }
    [DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public CommandType CommandType { get; public set; }
    [EditorAttribute("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public OdbcConnection Connection { get; public set; }
    protected DbConnection DbConnection { get; protected set; }
    [NullableAttribute("0")]
protected DbParameterCollection DbParameterCollection { get; }
    protected DbTransaction DbTransaction { get; protected set; }
    [BrowsableAttribute("False")]
[DefaultValueAttribute("True")]
[DesignOnlyAttribute("True")]
[EditorBrowsableAttribute("1")]
public bool DesignTimeVisible { get; public set; }
    [NullableAttribute("0")]
[DesignerSerializationVisibilityAttribute("2")]
public OdbcParameterCollection Parameters { get; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
public OdbcTransaction Transaction { get; public set; }
    [DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public UpdateRowSource UpdatedRowSource { get; public set; }
    public OdbcCommand(string cmdText);
    public OdbcCommand(string cmdText, OdbcConnection connection);
    public OdbcCommand(string cmdText, OdbcConnection connection, OdbcTransaction transaction);
    [NullableContextAttribute("0")]
public virtual string get_CommandText();
    [NullableContextAttribute("0")]
public virtual void set_CommandText(string value);
    public virtual int get_CommandTimeout();
    public virtual void set_CommandTimeout(int value);
    public virtual CommandType get_CommandType();
    public virtual void set_CommandType(CommandType value);
    public OdbcConnection get_Connection();
    public void set_Connection(OdbcConnection value);
    protected virtual DbConnection get_DbConnection();
    protected virtual void set_DbConnection(DbConnection value);
    [NullableContextAttribute("0")]
protected virtual DbParameterCollection get_DbParameterCollection();
    protected virtual DbTransaction get_DbTransaction();
    protected virtual void set_DbTransaction(DbTransaction value);
    public virtual bool get_DesignTimeVisible();
    public virtual void set_DesignTimeVisible(bool value);
    [NullableContextAttribute("0")]
public OdbcParameterCollection get_Parameters();
    public OdbcTransaction get_Transaction();
    public void set_Transaction(OdbcTransaction value);
    public virtual UpdateRowSource get_UpdatedRowSource();
    public virtual void set_UpdatedRowSource(UpdateRowSource value);
    public virtual void Cancel();
    [NullableContextAttribute("0")]
protected virtual DbParameter CreateDbParameter();
    [NullableContextAttribute("0")]
public OdbcParameter CreateParameter();
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("0")]
protected virtual DbDataReader ExecuteDbDataReader(CommandBehavior behavior);
    public virtual int ExecuteNonQuery();
    [NullableContextAttribute("0")]
public OdbcDataReader ExecuteReader();
    [NullableContextAttribute("0")]
public OdbcDataReader ExecuteReader(CommandBehavior behavior);
    public virtual object ExecuteScalar();
    public virtual void Prepare();
    public void ResetCommandTimeout();
    private sealed virtual override object System.ICloneable.Clone();
}
public class System.Data.Odbc.OdbcCommandBuilder : DbCommandBuilder {
    [NullableAttribute("2")]
public OdbcDataAdapter DataAdapter { get; public set; }
    [NullableContextAttribute("2")]
public OdbcCommandBuilder(OdbcDataAdapter adapter);
    [NullableContextAttribute("2")]
public OdbcDataAdapter get_DataAdapter();
    [NullableContextAttribute("2")]
public void set_DataAdapter(OdbcDataAdapter value);
    protected virtual void ApplyParameterInfo(DbParameter parameter, DataRow datarow, StatementType statementType, bool whereClause);
    public static void DeriveParameters(OdbcCommand command);
    public OdbcCommand GetDeleteCommand();
    public OdbcCommand GetDeleteCommand(bool useColumnsForParameterNames);
    public OdbcCommand GetInsertCommand();
    public OdbcCommand GetInsertCommand(bool useColumnsForParameterNames);
    protected virtual string GetParameterName(int parameterOrdinal);
    protected virtual string GetParameterName(string parameterName);
    protected virtual string GetParameterPlaceholder(int parameterOrdinal);
    public OdbcCommand GetUpdateCommand();
    public OdbcCommand GetUpdateCommand(bool useColumnsForParameterNames);
    public virtual string QuoteIdentifier(string unquotedIdentifier);
    public string QuoteIdentifier(string unquotedIdentifier, OdbcConnection connection);
    protected virtual void SetRowUpdatingHandler(DbDataAdapter adapter);
    public virtual string UnquoteIdentifier(string quotedIdentifier);
    public string UnquoteIdentifier(string quotedIdentifier, OdbcConnection connection);
}
public class System.Data.Odbc.OdbcConnection : DbConnection {
    [EditorAttribute("Microsoft.VSDesigner.Data.Odbc.Design.OdbcConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public string ConnectionString { get; public set; }
    [DefaultValueAttribute("15")]
[DesignerSerializationVisibilityAttribute("0")]
public int ConnectionTimeout { get; public set; }
    [DesignerSerializationVisibilityAttribute("0")]
public string Database { get; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
public string DataSource { get; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
public string Driver { get; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
public string ServerVersion { get; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
public ConnectionState State { get; }
    [NullableContextAttribute("2")]
public OdbcConnection(string connectionString);
    public virtual string get_ConnectionString();
    public virtual void set_ConnectionString(string value);
    public int get_ConnectionTimeout();
    public void set_ConnectionTimeout(int value);
    public virtual string get_Database();
    public virtual string get_DataSource();
    public string get_Driver();
    public virtual string get_ServerVersion();
    public virtual ConnectionState get_State();
    [NullableContextAttribute("2")]
public void add_InfoMessage(OdbcInfoMessageEventHandler value);
    [NullableContextAttribute("2")]
public void remove_InfoMessage(OdbcInfoMessageEventHandler value);
    protected virtual DbTransaction BeginDbTransaction(IsolationLevel isolationLevel);
    public OdbcTransaction BeginTransaction();
    public OdbcTransaction BeginTransaction(IsolationLevel isolevel);
    public virtual void ChangeDatabase(string value);
    public virtual void Close();
    public OdbcCommand CreateCommand();
    protected virtual DbCommand CreateDbCommand();
    protected virtual void Dispose(bool disposing);
    public virtual DataTable GetSchema();
    public virtual DataTable GetSchema(string collectionName);
    public virtual DataTable GetSchema(string collectionName, String[] restrictionValues);
    public virtual void Open();
    public static void ReleaseObjectPool();
    private sealed virtual override object System.ICloneable.Clone();
}
[DefaultMemberAttribute("Item")]
public class System.Data.Odbc.OdbcConnectionStringBuilder : DbConnectionStringBuilder {
    [DisplayNameAttribute("Driver")]
public string Driver { get; public set; }
    [DisplayNameAttribute("Dsn")]
public string Dsn { get; public set; }
    public object Item { get; public set; }
    public ICollection Keys { get; }
    [NullableContextAttribute("2")]
public OdbcConnectionStringBuilder(string connectionString);
    public string get_Driver();
    public void set_Driver(string value);
    public string get_Dsn();
    public void set_Dsn(string value);
    public virtual object get_Item(string keyword);
    public virtual void set_Item(string keyword, object value);
    public virtual ICollection get_Keys();
    public virtual void Clear();
    public virtual bool ContainsKey(string keyword);
    public virtual bool Remove(string keyword);
    public virtual bool TryGetValue(string keyword, Object& value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DesignerAttribute("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[ToolboxItemAttribute("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class System.Data.Odbc.OdbcDataAdapter : DbDataAdapter {
    [EditorAttribute("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public OdbcCommand DeleteCommand { get; public set; }
    [EditorAttribute("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public OdbcCommand InsertCommand { get; public set; }
    [EditorAttribute("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public OdbcCommand SelectCommand { get; public set; }
    private IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; private set; }
    private IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; private set; }
    private IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; private set; }
    private IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; private set; }
    [EditorAttribute("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public OdbcCommand UpdateCommand { get; public set; }
    public OdbcDataAdapter(OdbcCommand selectCommand);
    public OdbcDataAdapter(string selectCommandText, OdbcConnection selectConnection);
    public OdbcDataAdapter(string selectCommandText, string selectConnectionString);
    public OdbcCommand get_DeleteCommand();
    public void set_DeleteCommand(OdbcCommand value);
    public OdbcCommand get_InsertCommand();
    public void set_InsertCommand(OdbcCommand value);
    public OdbcCommand get_SelectCommand();
    public void set_SelectCommand(OdbcCommand value);
    private sealed virtual override IDbCommand System.Data.IDbDataAdapter.get_DeleteCommand();
    private sealed virtual override void System.Data.IDbDataAdapter.set_DeleteCommand(IDbCommand value);
    private sealed virtual override IDbCommand System.Data.IDbDataAdapter.get_InsertCommand();
    private sealed virtual override void System.Data.IDbDataAdapter.set_InsertCommand(IDbCommand value);
    private sealed virtual override IDbCommand System.Data.IDbDataAdapter.get_SelectCommand();
    private sealed virtual override void System.Data.IDbDataAdapter.set_SelectCommand(IDbCommand value);
    private sealed virtual override IDbCommand System.Data.IDbDataAdapter.get_UpdateCommand();
    private sealed virtual override void System.Data.IDbDataAdapter.set_UpdateCommand(IDbCommand value);
    public OdbcCommand get_UpdateCommand();
    public void set_UpdateCommand(OdbcCommand value);
    public void add_RowUpdated(OdbcRowUpdatedEventHandler value);
    public void remove_RowUpdated(OdbcRowUpdatedEventHandler value);
    public void add_RowUpdating(OdbcRowUpdatingEventHandler value);
    public void remove_RowUpdating(OdbcRowUpdatingEventHandler value);
    [NullableContextAttribute("0")]
protected virtual RowUpdatedEventArgs CreateRowUpdatedEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping);
    [NullableContextAttribute("0")]
protected virtual RowUpdatingEventArgs CreateRowUpdatingEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping);
    [NullableContextAttribute("0")]
protected virtual void OnRowUpdated(RowUpdatedEventArgs value);
    [NullableContextAttribute("0")]
protected virtual void OnRowUpdating(RowUpdatingEventArgs value);
    private sealed virtual override object System.ICloneable.Clone();
}
[DefaultMemberAttribute("Item")]
public class System.Data.Odbc.OdbcDataReader : DbDataReader {
    public int Depth { get; }
    public int FieldCount { get; }
    public bool HasRows { get; }
    public bool IsClosed { get; }
    public object Item { get; }
    public object Item { get; }
    public int RecordsAffected { get; }
    public virtual int get_Depth();
    public virtual int get_FieldCount();
    public virtual bool get_HasRows();
    public virtual bool get_IsClosed();
    public virtual object get_Item(int i);
    public virtual object get_Item(string value);
    public virtual int get_RecordsAffected();
    public virtual void Close();
    protected virtual void Dispose(bool disposing);
    public virtual bool GetBoolean(int i);
    public virtual byte GetByte(int i);
    [NullableContextAttribute("2")]
public virtual long GetBytes(int i, long dataIndex, Byte[] buffer, int bufferIndex, int length);
    public virtual char GetChar(int i);
    [NullableContextAttribute("2")]
public virtual long GetChars(int i, long dataIndex, Char[] buffer, int bufferIndex, int length);
    public virtual string GetDataTypeName(int i);
    public DateTime GetDate(int i);
    public virtual DateTime GetDateTime(int i);
    public virtual decimal GetDecimal(int i);
    public virtual double GetDouble(int i);
    public virtual IEnumerator GetEnumerator();
    public virtual Type GetFieldType(int i);
    public virtual float GetFloat(int i);
    public virtual Guid GetGuid(int i);
    public virtual short GetInt16(int i);
    public virtual int GetInt32(int i);
    public virtual long GetInt64(int i);
    public virtual string GetName(int i);
    public virtual int GetOrdinal(string value);
    [NullableContextAttribute("2")]
public virtual DataTable GetSchemaTable();
    public virtual string GetString(int i);
    public TimeSpan GetTime(int i);
    public virtual object GetValue(int i);
    public virtual int GetValues(Object[] values);
    public virtual bool IsDBNull(int i);
    public virtual bool NextResult();
    public virtual bool Read();
}
public class System.Data.Odbc.OdbcError : object {
    public string Message { get; }
    public int NativeError { get; }
    public string Source { get; }
    public string SQLState { get; }
    public string get_Message();
    public int get_NativeError();
    public string get_Source();
    public string get_SQLState();
    public virtual string ToString();
}
[DefaultMemberAttribute("Item")]
public class System.Data.Odbc.OdbcErrorCollection : object {
    public int Count { get; }
    public OdbcError Item { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    public sealed virtual int get_Count();
    public OdbcError get_Item(int i);
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    public sealed virtual void CopyTo(Array array, int i);
    public void CopyTo(OdbcError[] array, int i);
    public sealed virtual IEnumerator GetEnumerator();
}
public class System.Data.Odbc.OdbcException : DbException {
    public OdbcErrorCollection Errors { get; }
    public string Source { get; }
    public OdbcErrorCollection get_Errors();
    public virtual string get_Source();
    public virtual void GetObjectData(SerializationInfo si, StreamingContext context);
}
public class System.Data.Odbc.OdbcFactory : DbProviderFactory {
    public static OdbcFactory Instance;
    public virtual DbCommand CreateCommand();
    public virtual DbCommandBuilder CreateCommandBuilder();
    public virtual DbConnection CreateConnection();
    public virtual DbConnectionStringBuilder CreateConnectionStringBuilder();
    public virtual DbDataAdapter CreateDataAdapter();
    public virtual DbParameter CreateParameter();
}
public class System.Data.Odbc.OdbcInfoMessageEventArgs : EventArgs {
    public OdbcErrorCollection Errors { get; }
    public string Message { get; }
    public OdbcErrorCollection get_Errors();
    public string get_Message();
    public virtual string ToString();
}
public class System.Data.Odbc.OdbcInfoMessageEventHandler : MulticastDelegate {
    public OdbcInfoMessageEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, OdbcInfoMessageEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, OdbcInfoMessageEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public static class System.Data.Odbc.OdbcMetaDataCollectionNames : object {
    public static string Columns;
    public static string Indexes;
    public static string ProcedureColumns;
    public static string ProcedureParameters;
    public static string Procedures;
    public static string Tables;
    public static string Views;
}
public static class System.Data.Odbc.OdbcMetaDataColumnNames : object {
    public static string BooleanFalseLiteral;
    public static string BooleanTrueLiteral;
    public static string SQLType;
}
public class System.Data.Odbc.OdbcParameter : DbParameter {
    public DbType DbType { get; public set; }
    public ParameterDirection Direction { get; public set; }
    public bool IsNullable { get; public set; }
    [DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[DbProviderSpecificTypePropertyAttribute("True")]
public OdbcType OdbcType { get; public set; }
    public string ParameterName { get; public set; }
    public byte Precision { get; public set; }
    public byte Scale { get; public set; }
    public int Size { get; public set; }
    public string SourceColumn { get; public set; }
    public bool SourceColumnNullMapping { get; public set; }
    public DataRowVersion SourceVersion { get; public set; }
    [NullableAttribute("2")]
public object Value { get; public set; }
    [NullableContextAttribute("2")]
public OdbcParameter(string name, OdbcType type);
    [NullableContextAttribute("2")]
public OdbcParameter(string name, OdbcType type, int size);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("2")]
public OdbcParameter(string parameterName, OdbcType odbcType, int size, ParameterDirection parameterDirection, bool isNullable, byte precision, byte scale, string srcColumn, DataRowVersion srcVersion, object value);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("2")]
public OdbcParameter(string parameterName, OdbcType odbcType, int size, ParameterDirection parameterDirection, byte precision, byte scale, string sourceColumn, DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);
    [NullableContextAttribute("2")]
public OdbcParameter(string name, OdbcType type, int size, string sourcecolumn);
    [NullableContextAttribute("2")]
public OdbcParameter(string name, object value);
    public virtual DbType get_DbType();
    public virtual void set_DbType(DbType value);
    public virtual ParameterDirection get_Direction();
    public virtual void set_Direction(ParameterDirection value);
    public virtual bool get_IsNullable();
    public virtual void set_IsNullable(bool value);
    public OdbcType get_OdbcType();
    public void set_OdbcType(OdbcType value);
    public virtual string get_ParameterName();
    public virtual void set_ParameterName(string value);
    public sealed virtual byte get_Precision();
    public sealed virtual void set_Precision(byte value);
    public sealed virtual byte get_Scale();
    public sealed virtual void set_Scale(byte value);
    public virtual int get_Size();
    public virtual void set_Size(int value);
    public virtual string get_SourceColumn();
    public virtual void set_SourceColumn(string value);
    public virtual bool get_SourceColumnNullMapping();
    public virtual void set_SourceColumnNullMapping(bool value);
    public virtual DataRowVersion get_SourceVersion();
    public virtual void set_SourceVersion(DataRowVersion value);
    [NullableContextAttribute("2")]
public virtual object get_Value();
    [NullableContextAttribute("2")]
public virtual void set_Value(object value);
    public virtual void ResetDbType();
    public void ResetOdbcType();
    private sealed virtual override object System.ICloneable.Clone();
    public virtual string ToString();
}
[DefaultMemberAttribute("Item")]
[EditorAttribute("Microsoft.VSDesigner.Data.Design.DBParametersEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class System.Data.Odbc.OdbcParameterCollection : DbParameterCollection {
    public int Count { get; }
    public bool IsFixedSize { get; }
    public bool IsReadOnly { get; }
    public bool IsSynchronized { get; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
public OdbcParameter Item { get; public set; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
public OdbcParameter Item { get; public set; }
    public object SyncRoot { get; }
    public virtual int get_Count();
    public virtual bool get_IsFixedSize();
    public virtual bool get_IsReadOnly();
    public virtual bool get_IsSynchronized();
    public OdbcParameter get_Item(int index);
    public void set_Item(int index, OdbcParameter value);
    public OdbcParameter get_Item(string parameterName);
    public void set_Item(string parameterName, OdbcParameter value);
    public virtual object get_SyncRoot();
    public OdbcParameter Add(OdbcParameter value);
    public virtual int Add(object value);
    public OdbcParameter Add(string parameterName, OdbcType odbcType);
    public OdbcParameter Add(string parameterName, OdbcType odbcType, int size);
    [NullableContextAttribute("2")]
public OdbcParameter Add(string parameterName, OdbcType odbcType, int size, string sourceColumn);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Add(String parameterName, Object value) has been deprecated. Use AddWithValue(String parameterName, Object value) instead.")]
public OdbcParameter Add(string parameterName, object value);
    public virtual void AddRange(Array values);
    public void AddRange(OdbcParameter[] values);
    [NullableContextAttribute("2")]
public OdbcParameter AddWithValue(string parameterName, object value);
    public virtual void Clear();
    public bool Contains(OdbcParameter value);
    public virtual bool Contains(object value);
    public virtual bool Contains(string value);
    public virtual void CopyTo(Array array, int index);
    public void CopyTo(OdbcParameter[] array, int index);
    public virtual IEnumerator GetEnumerator();
    protected virtual DbParameter GetParameter(int index);
    protected virtual DbParameter GetParameter(string parameterName);
    public int IndexOf(OdbcParameter value);
    public virtual int IndexOf(object value);
    public virtual int IndexOf(string parameterName);
    public void Insert(int index, OdbcParameter value);
    public virtual void Insert(int index, object value);
    public void Remove(OdbcParameter value);
    public virtual void Remove(object value);
    public virtual void RemoveAt(int index);
    public virtual void RemoveAt(string parameterName);
    protected virtual void SetParameter(int index, DbParameter value);
    protected virtual void SetParameter(string parameterName, DbParameter value);
}
public class System.Data.Odbc.OdbcRowUpdatedEventArgs : RowUpdatedEventArgs {
    [NullableAttribute("2")]
public OdbcCommand Command { get; }
    public OdbcRowUpdatedEventArgs(DataRow row, IDbCommand command, StatementType statementType, DataTableMapping tableMapping);
    [NullableContextAttribute("2")]
public OdbcCommand get_Command();
}
public class System.Data.Odbc.OdbcRowUpdatedEventHandler : MulticastDelegate {
    public OdbcRowUpdatedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, OdbcRowUpdatedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, OdbcRowUpdatedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.Data.Odbc.OdbcRowUpdatingEventArgs : RowUpdatingEventArgs {
    protected IDbCommand BaseCommand { get; protected set; }
    public OdbcCommand Command { get; public set; }
    [NullableContextAttribute("0")]
public OdbcRowUpdatingEventArgs(DataRow row, IDbCommand command, StatementType statementType, DataTableMapping tableMapping);
    protected virtual IDbCommand get_BaseCommand();
    protected virtual void set_BaseCommand(IDbCommand value);
    public OdbcCommand get_Command();
    public void set_Command(OdbcCommand value);
}
public class System.Data.Odbc.OdbcRowUpdatingEventHandler : MulticastDelegate {
    public OdbcRowUpdatingEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, OdbcRowUpdatingEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, OdbcRowUpdatingEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class System.Data.Odbc.OdbcTransaction : DbTransaction {
    public OdbcConnection Connection { get; }
    protected DbConnection DbConnection { get; }
    public IsolationLevel IsolationLevel { get; }
    public OdbcConnection get_Connection();
    protected virtual DbConnection get_DbConnection();
    public virtual IsolationLevel get_IsolationLevel();
    public virtual void Commit();
    protected virtual void Dispose(bool disposing);
    public virtual void Rollback();
}
public enum System.Data.Odbc.OdbcType : Enum {
    public int value__;
    public static OdbcType BigInt;
    public static OdbcType Binary;
    public static OdbcType Bit;
    public static OdbcType Char;
    public static OdbcType DateTime;
    public static OdbcType Decimal;
    public static OdbcType Numeric;
    public static OdbcType Double;
    public static OdbcType Image;
    public static OdbcType Int;
    public static OdbcType NChar;
    public static OdbcType NText;
    public static OdbcType NVarChar;
    public static OdbcType Real;
    public static OdbcType UniqueIdentifier;
    public static OdbcType SmallDateTime;
    public static OdbcType SmallInt;
    public static OdbcType Text;
    public static OdbcType Timestamp;
    public static OdbcType TinyInt;
    public static OdbcType VarBinary;
    public static OdbcType VarChar;
    public static OdbcType Date;
    public static OdbcType Time;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("64")]
internal class System.Runtime.InteropServices.LibraryImportAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <LibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntryPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private StringMarshalling <StringMarshalling>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <StringMarshallingCustomType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetLastError>k__BackingField;
    public string LibraryName { get; }
    public string EntryPoint { get; public set; }
    public StringMarshalling StringMarshalling { get; public set; }
    public Type StringMarshallingCustomType { get; public set; }
    public bool SetLastError { get; public set; }
    public LibraryImportAttribute(string libraryName);
    [CompilerGeneratedAttribute]
public string get_LibraryName();
    [CompilerGeneratedAttribute]
public string get_EntryPoint();
    [CompilerGeneratedAttribute]
public void set_EntryPoint(string value);
    [CompilerGeneratedAttribute]
public StringMarshalling get_StringMarshalling();
    [CompilerGeneratedAttribute]
public void set_StringMarshalling(StringMarshalling value);
    [CompilerGeneratedAttribute]
public Type get_StringMarshallingCustomType();
    [CompilerGeneratedAttribute]
public void set_StringMarshallingCustomType(Type value);
    [CompilerGeneratedAttribute]
public bool get_SetLastError();
    [CompilerGeneratedAttribute]
public void set_SetLastError(bool value);
}
internal enum System.Runtime.InteropServices.StringMarshalling : Enum {
    public int value__;
    public static StringMarshalling Custom;
    public static StringMarshalling Utf8;
    public static StringMarshalling Utf16;
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string ADP_CollectionIndexInt32 { get; }
    internal static string ADP_CollectionIndexString { get; }
    internal static string ADP_CollectionInvalidType { get; }
    internal static string ADP_CollectionIsNotParent { get; }
    internal static string ADP_CollectionNullValue { get; }
    internal static string ADP_CollectionRemoveInvalidObject { get; }
    internal static string ADP_CollectionUniqueValue { get; }
    internal static string ADP_ConnectionAlreadyOpen { get; }
    internal static string ADP_ConnectionStateMsg_Closed { get; }
    internal static string ADP_ConnectionStateMsg_Connecting { get; }
    internal static string ADP_ConnectionStateMsg_Open { get; }
    internal static string ADP_ConnectionStateMsg_OpenExecuting { get; }
    internal static string ADP_ConnectionStateMsg_OpenFetching { get; }
    internal static string ADP_ConnectionStateMsg { get; }
    internal static string ADP_ConnectionStringSyntax { get; }
    internal static string ADP_DataReaderClosed { get; }
    internal static string ADP_EmptyString { get; }
    internal static string ADP_InternalConnectionError { get; }
    internal static string ADP_InvalidDataDirectory { get; }
    internal static string ADP_InvalidEnumerationValue { get; }
    internal static string ADP_InvalidKey { get; }
    internal static string ADP_InvalidOffsetValue { get; }
    internal static string ADP_InvalidValue { get; }
    internal static string ADP_NoConnectionString { get; }
    internal static string ADP_OpenConnectionPropertySet { get; }
    internal static string ADP_PooledOpenTimeout { get; }
    internal static string ADP_NonPooledOpenTimeout { get; }
    internal static string ADP_QuotePrefixNotSet { get; }
    internal static string MDF_QueryFailed { get; }
    internal static string MDF_TooManyRestrictions { get; }
    internal static string MDF_InvalidRestrictionValue { get; }
    internal static string MDF_UndefinedCollection { get; }
    internal static string MDF_UndefinedPopulationMechanism { get; }
    internal static string MDF_UnsupportedVersion { get; }
    internal static string MDF_MissingDataSourceInformationColumn { get; }
    internal static string MDF_IncorrectNumberOfDataSourceInformationRows { get; }
    internal static string MDF_MissingRestrictionColumn { get; }
    internal static string MDF_MissingRestrictionRow { get; }
    internal static string MDF_NoColumns { get; }
    internal static string MDF_UnableToBuildCollection { get; }
    internal static string MDF_AmbiguousCollectionName { get; }
    internal static string MDF_CollectionNameISNotUnique { get; }
    internal static string MDF_DataTableDoesNotExist { get; }
    internal static string MDF_InvalidXml { get; }
    internal static string MDF_InvalidXmlMissingColumn { get; }
    internal static string MDF_InvalidXmlInvalidValue { get; }
    internal static string SqlConvert_ConvertFailed { get; }
    internal static string ADP_InvalidConnectionOptionValue { get; }
    internal static string ADP_KeywordNotSupported { get; }
    internal static string ADP_InternalProviderError { get; }
    internal static string ADP_InvalidMultipartName { get; }
    internal static string ADP_InvalidMultipartNameQuoteUsage { get; }
    internal static string ADP_InvalidMultipartNameToManyParts { get; }
    internal static string ADP_NotSupportedEnumerationValue { get; }
    internal static string ADP_StreamClosed { get; }
    internal static string ADP_InvalidSourceBufferIndex { get; }
    internal static string ADP_InvalidDestinationBufferIndex { get; }
    internal static string SQL_InvalidBufferSizeOrIndex { get; }
    internal static string SQL_InvalidDataLength { get; }
    internal static string ADP_InvalidSeekOrigin { get; }
    internal static string SQL_WrongType { get; }
    internal static string ODBC_ODBCCommandText { get; }
    internal static string ODBC_NotSupportedEnumerationValue { get; }
    internal static string ADP_CommandTextRequired { get; }
    internal static string ADP_ConnectionRequired { get; }
    internal static string ADP_OpenConnectionRequired { get; }
    internal static string ADP_TransactionConnectionMismatch { get; }
    internal static string ADP_TransactionRequired { get; }
    internal static string ADP_OpenReaderExists { get; }
    internal static string ADP_DeriveParametersNotSupported { get; }
    internal static string ADP_InvalidCommandTimeout { get; }
    internal static string ADP_UninitializedParameterSize { get; }
    internal static string ADP_ClosedConnectionError { get; }
    internal static string ADP_ConnectionIsDisabled { get; }
    internal static string ADP_EmptyDatabaseName { get; }
    internal static string ADP_DatabaseNameTooLong { get; }
    internal static string ADP_DataReaderNoData { get; }
    internal static string ADP_NumericToDecimalOverflow { get; }
    internal static string ADP_InvalidDataType { get; }
    internal static string ADP_UnknownDataType { get; }
    internal static string ADP_UnknownDataTypeCode { get; }
    internal static string ADP_DbTypeNotSupported { get; }
    internal static string ADP_InvalidSizeValue { get; }
    internal static string ADP_ParameterConversionFailed { get; }
    internal static string ADP_ParallelTransactionsNotSupported { get; }
    internal static string ADP_TransactionZombied { get; }
    internal static string ADP_NonSeqByteAccess { get; }
    internal static string ADP_OffsetOutOfRangeException { get; }
    internal static string ODBC_GetSchemaRestrictionRequired { get; }
    internal static string ADP_OdbcNoTypesFromProvider { get; }
    internal static string Odbc_UnknownSQLType { get; }
    internal static string Odbc_NegativeArgument { get; }
    internal static string Odbc_CantSetPropertyOnOpenConnection { get; }
    internal static string Odbc_NoMappingForSqlTransactionLevel { get; }
    internal static string Odbc_CantEnableConnectionpooling { get; }
    internal static string Odbc_CantAllocateEnvironmentHandle { get; }
    internal static string Odbc_FailedToGetDescriptorHandle { get; }
    internal static string Odbc_NotInTransaction { get; }
    internal static string Odbc_ExceptionMessage { get; }
    internal static string Odbc_ConnectionClosed { get; }
    internal static string Odbc_OpenConnectionNoOwner { get; }
    internal static string Odbc_PlatformNotSupported { get; }
    internal static string Odbc_UnixOdbcNotFound { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_ADP_CollectionIndexInt32();
    internal static string get_ADP_CollectionIndexString();
    internal static string get_ADP_CollectionInvalidType();
    internal static string get_ADP_CollectionIsNotParent();
    internal static string get_ADP_CollectionNullValue();
    internal static string get_ADP_CollectionRemoveInvalidObject();
    internal static string get_ADP_CollectionUniqueValue();
    internal static string get_ADP_ConnectionAlreadyOpen();
    internal static string get_ADP_ConnectionStateMsg_Closed();
    internal static string get_ADP_ConnectionStateMsg_Connecting();
    internal static string get_ADP_ConnectionStateMsg_Open();
    internal static string get_ADP_ConnectionStateMsg_OpenExecuting();
    internal static string get_ADP_ConnectionStateMsg_OpenFetching();
    internal static string get_ADP_ConnectionStateMsg();
    internal static string get_ADP_ConnectionStringSyntax();
    internal static string get_ADP_DataReaderClosed();
    internal static string get_ADP_EmptyString();
    internal static string get_ADP_InternalConnectionError();
    internal static string get_ADP_InvalidDataDirectory();
    internal static string get_ADP_InvalidEnumerationValue();
    internal static string get_ADP_InvalidKey();
    internal static string get_ADP_InvalidOffsetValue();
    internal static string get_ADP_InvalidValue();
    internal static string get_ADP_NoConnectionString();
    internal static string get_ADP_OpenConnectionPropertySet();
    internal static string get_ADP_PooledOpenTimeout();
    internal static string get_ADP_NonPooledOpenTimeout();
    internal static string get_ADP_QuotePrefixNotSet();
    internal static string get_MDF_QueryFailed();
    internal static string get_MDF_TooManyRestrictions();
    internal static string get_MDF_InvalidRestrictionValue();
    internal static string get_MDF_UndefinedCollection();
    internal static string get_MDF_UndefinedPopulationMechanism();
    internal static string get_MDF_UnsupportedVersion();
    internal static string get_MDF_MissingDataSourceInformationColumn();
    internal static string get_MDF_IncorrectNumberOfDataSourceInformationRows();
    internal static string get_MDF_MissingRestrictionColumn();
    internal static string get_MDF_MissingRestrictionRow();
    internal static string get_MDF_NoColumns();
    internal static string get_MDF_UnableToBuildCollection();
    internal static string get_MDF_AmbiguousCollectionName();
    internal static string get_MDF_CollectionNameISNotUnique();
    internal static string get_MDF_DataTableDoesNotExist();
    internal static string get_MDF_InvalidXml();
    internal static string get_MDF_InvalidXmlMissingColumn();
    internal static string get_MDF_InvalidXmlInvalidValue();
    internal static string get_SqlConvert_ConvertFailed();
    internal static string get_ADP_InvalidConnectionOptionValue();
    internal static string get_ADP_KeywordNotSupported();
    internal static string get_ADP_InternalProviderError();
    internal static string get_ADP_InvalidMultipartName();
    internal static string get_ADP_InvalidMultipartNameQuoteUsage();
    internal static string get_ADP_InvalidMultipartNameToManyParts();
    internal static string get_ADP_NotSupportedEnumerationValue();
    internal static string get_ADP_StreamClosed();
    internal static string get_ADP_InvalidSourceBufferIndex();
    internal static string get_ADP_InvalidDestinationBufferIndex();
    internal static string get_SQL_InvalidBufferSizeOrIndex();
    internal static string get_SQL_InvalidDataLength();
    internal static string get_ADP_InvalidSeekOrigin();
    internal static string get_SQL_WrongType();
    internal static string get_ODBC_ODBCCommandText();
    internal static string get_ODBC_NotSupportedEnumerationValue();
    internal static string get_ADP_CommandTextRequired();
    internal static string get_ADP_ConnectionRequired();
    internal static string get_ADP_OpenConnectionRequired();
    internal static string get_ADP_TransactionConnectionMismatch();
    internal static string get_ADP_TransactionRequired();
    internal static string get_ADP_OpenReaderExists();
    internal static string get_ADP_DeriveParametersNotSupported();
    internal static string get_ADP_InvalidCommandTimeout();
    internal static string get_ADP_UninitializedParameterSize();
    internal static string get_ADP_ClosedConnectionError();
    internal static string get_ADP_ConnectionIsDisabled();
    internal static string get_ADP_EmptyDatabaseName();
    internal static string get_ADP_DatabaseNameTooLong();
    internal static string get_ADP_DataReaderNoData();
    internal static string get_ADP_NumericToDecimalOverflow();
    internal static string get_ADP_InvalidDataType();
    internal static string get_ADP_UnknownDataType();
    internal static string get_ADP_UnknownDataTypeCode();
    internal static string get_ADP_DbTypeNotSupported();
    internal static string get_ADP_InvalidSizeValue();
    internal static string get_ADP_ParameterConversionFailed();
    internal static string get_ADP_ParallelTransactionsNotSupported();
    internal static string get_ADP_TransactionZombied();
    internal static string get_ADP_NonSeqByteAccess();
    internal static string get_ADP_OffsetOutOfRangeException();
    internal static string get_ODBC_GetSchemaRestrictionRequired();
    internal static string get_ADP_OdbcNoTypesFromProvider();
    internal static string get_Odbc_UnknownSQLType();
    internal static string get_Odbc_NegativeArgument();
    internal static string get_Odbc_CantSetPropertyOnOpenConnection();
    internal static string get_Odbc_NoMappingForSqlTransactionLevel();
    internal static string get_Odbc_CantEnableConnectionpooling();
    internal static string get_Odbc_CantAllocateEnvironmentHandle();
    internal static string get_Odbc_FailedToGetDescriptorHandle();
    internal static string get_Odbc_NotInTransaction();
    internal static string get_Odbc_ExceptionMessage();
    internal static string get_Odbc_ConnectionClosed();
    internal static string get_Odbc_OpenConnectionNoOwner();
    internal static string get_Odbc_PlatformNotSupported();
    internal static string get_Odbc_UnixOdbcNotFound();
}
