internal static class FxResources.System.Diagnostics.EventLog.SR : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    public string Category { get; }
    public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("64")]
internal class System.Runtime.InteropServices.LibraryImportAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <LibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntryPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private StringMarshalling <StringMarshalling>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <StringMarshallingCustomType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetLastError>k__BackingField;
    public string LibraryName { get; }
    public string EntryPoint { get; public set; }
    public StringMarshalling StringMarshalling { get; public set; }
    public Type StringMarshallingCustomType { get; public set; }
    public bool SetLastError { get; public set; }
    public LibraryImportAttribute(string libraryName);
    [CompilerGeneratedAttribute]
public string get_LibraryName();
    [CompilerGeneratedAttribute]
public string get_EntryPoint();
    [CompilerGeneratedAttribute]
public void set_EntryPoint(string value);
    [CompilerGeneratedAttribute]
public StringMarshalling get_StringMarshalling();
    [CompilerGeneratedAttribute]
public void set_StringMarshalling(StringMarshalling value);
    [CompilerGeneratedAttribute]
public Type get_StringMarshallingCustomType();
    [CompilerGeneratedAttribute]
public void set_StringMarshallingCustomType(Type value);
    [CompilerGeneratedAttribute]
public bool get_SetLastError();
    [CompilerGeneratedAttribute]
public void set_SetLastError(bool value);
}
internal enum System.Runtime.InteropServices.StringMarshalling : Enum {
    public int value__;
    public static StringMarshalling Custom;
    public static StringMarshalling Utf8;
    public static StringMarshalling Utf16;
}
[AttributeUsageAttribute("2047")]
internal class System.Runtime.Versioning.ObsoletedOSPlatformAttribute : OSPlatformAttribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public ObsoletedOSPlatformAttribute(string platformName);
    public ObsoletedOSPlatformAttribute(string platformName, string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
internal abstract class System.Runtime.Versioning.OSPlatformAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PlatformName>k__BackingField;
    public string PlatformName { get; }
    private protected OSPlatformAttribute(string platformName);
    [CompilerGeneratedAttribute]
public string get_PlatformName();
}
[AttributeUsageAttribute("2047")]
internal class System.Runtime.Versioning.SupportedOSPlatformAttribute : OSPlatformAttribute {
    public SupportedOSPlatformAttribute(string platformName);
}
[AttributeUsageAttribute("448")]
internal class System.Runtime.Versioning.SupportedOSPlatformGuardAttribute : OSPlatformAttribute {
    public SupportedOSPlatformGuardAttribute(string platformName);
}
[AttributeUsageAttribute("1")]
internal class System.Runtime.Versioning.TargetPlatformAttribute : OSPlatformAttribute {
    public TargetPlatformAttribute(string platformName);
}
[AttributeUsageAttribute("2047")]
internal class System.Runtime.Versioning.UnsupportedOSPlatformAttribute : OSPlatformAttribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Message { get; }
    public UnsupportedOSPlatformAttribute(string platformName);
    public UnsupportedOSPlatformAttribute(string platformName, string message);
    [CompilerGeneratedAttribute]
public string get_Message();
}
[AttributeUsageAttribute("448")]
internal class System.Runtime.Versioning.UnsupportedOSPlatformGuardAttribute : OSPlatformAttribute {
    public UnsupportedOSPlatformGuardAttribute(string platformName);
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string BadLogName { get; }
    internal static string CannotDeleteEqualSource { get; }
    internal static string CantMonitorEventLog { get; }
    internal static string CantOpenLog { get; }
    internal static string CantOpenLogAccess { get; }
    internal static string CantReadLogEntryAt { get; }
    internal static string CantRetrieveEntries { get; }
    internal static string EventID { get; }
    internal static string IndexOutOfBounds { get; }
    internal static string InitTwice { get; }
    internal static string InvalidCustomerLogName { get; }
    internal static string InvalidParameter { get; }
    internal static string InvalidParameterFormat { get; }
    internal static string LocalLogAlreadyExistsAsSource { get; }
    internal static string LocalRegKeyMissing { get; }
    internal static string LocalSourceAlreadyExists { get; }
    internal static string LocalSourceNotRegistered { get; }
    internal static string LogDoesNotExists { get; }
    internal static string LogEntryTooLong { get; }
    internal static string LogSourceMismatch { get; }
    internal static string MaximumKilobytesOutOfRange { get; }
    internal static string MessageNotFormatted { get; }
    internal static string MissingLog { get; }
    internal static string MissingLogProperty { get; }
    internal static string MissingParameter { get; }
    internal static string NeedSourceToOpen { get; }
    internal static string NeedSourceToWrite { get; }
    internal static string NoCurrentEntry { get; }
    internal static string NoLogName { get; }
    internal static string ParameterTooLong { get; }
    internal static string PlatformNotSupported_EventLog { get; }
    internal static string RegKeyMissing { get; }
    internal static string RegKeyMissingShort { get; }
    internal static string RegKeyNoAccess { get; }
    internal static string RentionDaysOutOfRange { get; }
    internal static string SomeLogsInaccessible { get; }
    internal static string SomeLogsInaccessibleToCreate { get; }
    internal static string SourceAlreadyExists { get; }
    internal static string SourceNotRegistered { get; }
    internal static string TooManyReplacementStrings { get; }
    internal static string LogAlreadyExistsAsSource { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_BadLogName();
    internal static string get_CannotDeleteEqualSource();
    internal static string get_CantMonitorEventLog();
    internal static string get_CantOpenLog();
    internal static string get_CantOpenLogAccess();
    internal static string get_CantReadLogEntryAt();
    internal static string get_CantRetrieveEntries();
    internal static string get_EventID();
    internal static string get_IndexOutOfBounds();
    internal static string get_InitTwice();
    internal static string get_InvalidCustomerLogName();
    internal static string get_InvalidParameter();
    internal static string get_InvalidParameterFormat();
    internal static string get_LocalLogAlreadyExistsAsSource();
    internal static string get_LocalRegKeyMissing();
    internal static string get_LocalSourceAlreadyExists();
    internal static string get_LocalSourceNotRegistered();
    internal static string get_LogDoesNotExists();
    internal static string get_LogEntryTooLong();
    internal static string get_LogSourceMismatch();
    internal static string get_MaximumKilobytesOutOfRange();
    internal static string get_MessageNotFormatted();
    internal static string get_MissingLog();
    internal static string get_MissingLogProperty();
    internal static string get_MissingParameter();
    internal static string get_NeedSourceToOpen();
    internal static string get_NeedSourceToWrite();
    internal static string get_NoCurrentEntry();
    internal static string get_NoLogName();
    internal static string get_ParameterTooLong();
    internal static string get_PlatformNotSupported_EventLog();
    internal static string get_RegKeyMissing();
    internal static string get_RegKeyMissingShort();
    internal static string get_RegKeyNoAccess();
    internal static string get_RentionDaysOutOfRange();
    internal static string get_SomeLogsInaccessible();
    internal static string get_SomeLogsInaccessibleToCreate();
    internal static string get_SourceAlreadyExists();
    internal static string get_SourceNotRegistered();
    internal static string get_TooManyReplacementStrings();
    internal static string get_LogAlreadyExistsAsSource();
}
