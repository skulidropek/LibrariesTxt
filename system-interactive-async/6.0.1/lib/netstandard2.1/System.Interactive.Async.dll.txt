[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class System.Error : object {
    public static Exception ArgumentNull(string paramName);
    public static Exception ArgumentOutOfRange(string paramName);
    public static Exception NoElements();
    public static Exception MoreThanOneElement();
    public static Exception NotSupported();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.Linq.AsyncEnumerableEx : object {
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Amb(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second);
    public static IAsyncEnumerable`1<TSource> Amb(IAsyncEnumerable`1[] sources);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Amb(IEnumerable`1<IAsyncEnumerable`1<TSource>> sources);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("System.Linq.AsyncEnumerableEx/<AwaitMoveNextAsyncAndDispose>d__3`1")]
private static Task AwaitMoveNextAsyncAndDispose(Task`1<bool> moveNextAsync, IAsyncEnumerator`1<T> enumerator);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<IList`1<TSource>> Buffer(IAsyncEnumerable`1<TSource> source, int count);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<IList`1<TSource>> Buffer(IAsyncEnumerable`1<TSource> source, int count, int skip);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Catch(IAsyncEnumerable`1<TSource> source, Func`2<TException, IAsyncEnumerable`1<TSource>> handler);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Catch(IAsyncEnumerable`1<TSource> source, Func`2<TException, ValueTask`1<IAsyncEnumerable`1<TSource>>> handler);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Catch(IAsyncEnumerable`1<TSource> source, Func`3<TException, CancellationToken, ValueTask`1<IAsyncEnumerable`1<TSource>>> handler);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Catch(IEnumerable`1<IAsyncEnumerable`1<TSource>> sources);
    public static IAsyncEnumerable`1<TSource> Catch(IAsyncEnumerable`1[] sources);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Catch(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<CatchCore>d__12`1")]
private static IAsyncEnumerable`1<TSource> CatchCore(IEnumerable`1<IAsyncEnumerable`1<TSource>> sources, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Concat(IAsyncEnumerable`1<IAsyncEnumerable`1<TSource>> sources);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Concat(IEnumerable`1<IAsyncEnumerable`1<TSource>> sources);
    public static IAsyncEnumerable`1<TSource> Concat(IAsyncEnumerable`1[] sources);
    public static IAsyncEnumerable`1<TSource> Defer(Func`1<IAsyncEnumerable`1<TSource>> factory);
    public static IAsyncEnumerable`1<TSource> Defer(Func`1<Task`1<IAsyncEnumerable`1<TSource>>> factory);
    public static IAsyncEnumerable`1<TSource> Defer(Func`2<CancellationToken, Task`1<IAsyncEnumerable`1<TSource>>> factory);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Distinct(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Distinct(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Distinct(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Distinct(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Distinct(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Distinct(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer);
    private static IAsyncEnumerable`1<TSource> DistinctCore(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IEqualityComparer`1<TKey> comparer);
    private static IAsyncEnumerable`1<TSource> DistinctCore(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer);
    private static IAsyncEnumerable`1<TSource> DistinctCore(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> DistinctUntilChanged(IAsyncEnumerable`1<TSource> source);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> DistinctUntilChanged(IAsyncEnumerable`1<TSource> source, IEqualityComparer`1<TSource> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> DistinctUntilChanged(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> DistinctUntilChanged(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> DistinctUntilChanged(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> DistinctUntilChanged(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> DistinctUntilChanged(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> DistinctUntilChanged(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer);
    private static IAsyncEnumerable`1<TSource> DistinctUntilChangedCore(IAsyncEnumerable`1<TSource> source, IEqualityComparer`1<TSource> comparer);
    private static IAsyncEnumerable`1<TSource> DistinctUntilChangedCore(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IEqualityComparer`1<TKey> comparer);
    private static IAsyncEnumerable`1<TSource> DistinctUntilChangedCore(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer);
    private static IAsyncEnumerable`1<TSource> DistinctUntilChangedCore(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Action`1<TSource> onNext);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Action`1<TSource> onNext, Action onCompleted);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Action`1<TSource> onNext, Action`1<Exception> onError);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Action`1<TSource> onNext, Action`1<Exception> onError, Action onCompleted);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Task> onNext);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Task> onNext, Func`1<Task> onCompleted);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Task> onNext, Func`2<Exception, Task> onError);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Task> onNext, Func`2<Exception, Task> onError, Func`1<Task> onCompleted);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, Task> onNext);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, Task> onNext, Func`2<CancellationToken, Task> onCompleted);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, Task> onNext, Func`3<Exception, CancellationToken, Task> onError);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, Task> onNext, Func`3<Exception, CancellationToken, Task> onError, Func`2<CancellationToken, Task> onCompleted);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Do(IAsyncEnumerable`1<TSource> source, IObserver`1<TSource> observer);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<DoCore>d__56`1")]
private static IAsyncEnumerable`1<TSource> DoCore(IAsyncEnumerable`1<TSource> source, Action`1<TSource> onNext, Action`1<Exception> onError, Action onCompleted, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<DoCore>d__57`1")]
private static IAsyncEnumerable`1<TSource> DoCore(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Task> onNext, Func`2<Exception, Task> onError, Func`1<Task> onCompleted, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<DoCore>d__58`1")]
private static IAsyncEnumerable`1<TSource> DoCore(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, Task> onNext, Func`3<Exception, CancellationToken, Task> onError, Func`2<CancellationToken, Task> onCompleted, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Expand(IAsyncEnumerable`1<TSource> source, Func`2<TSource, IAsyncEnumerable`1<TSource>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Expand(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<IAsyncEnumerable`1<TSource>>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Expand(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<IAsyncEnumerable`1<TSource>>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Finally(IAsyncEnumerable`1<TSource> source, Action finallyAction);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Finally(IAsyncEnumerable`1<TSource> source, Func`1<Task> finallyAction);
    public static IAsyncEnumerable`1<TResult> Generate(TState initialState, Func`2<TState, bool> condition, Func`2<TState, TState> iterate, Func`2<TState, TResult> resultSelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> IgnoreElements(IAsyncEnumerable`1<TSource> source);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<bool> IsEmptyAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> MaxAsync(IAsyncEnumerable`1<TSource> source, IComparer`1<TSource> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MaxByAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MaxByAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MaxByAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MaxByAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MaxByAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MaxByAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    private static ValueTask`1<IList`1<TSource>> MaxByCore(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private static ValueTask`1<IList`1<TSource>> MaxByCore(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private static ValueTask`1<IList`1<TSource>> MaxByCore(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    public static IAsyncEnumerable`1<TSource> Merge(IAsyncEnumerable`1[] sources);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Merge(IEnumerable`1<IAsyncEnumerable`1<TSource>> sources);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Merge(IAsyncEnumerable`1<IAsyncEnumerable`1<TSource>> sources);
    [ExtensionAttribute]
public static ValueTask`1<TSource> MinAsync(IAsyncEnumerable`1<TSource> source, IComparer`1<TSource> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MinByAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MinByAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MinByAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MinByAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MinByAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<IList`1<TSource>> MinByAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    private static ValueTask`1<IList`1<TSource>> MinByCore(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private static ValueTask`1<IList`1<TSource>> MinByCore(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private static ValueTask`1<IList`1<TSource>> MinByCore(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerableEx/<ExtremaBy>d__90`2")]
private static ValueTask`1<IList`1<TSource>> ExtremaBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, Func`3<TKey, TKey, int> compare, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerableEx/<ExtremaBy>d__91`2")]
private static ValueTask`1<IList`1<TSource>> ExtremaBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, Func`3<TKey, TKey, int> compare, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerableEx/<ExtremaBy>d__92`2")]
private static ValueTask`1<IList`1<TSource>> ExtremaBy(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, Func`3<TKey, TKey, int> compare, CancellationToken cancellationToken);
    public static IAsyncEnumerable`1<TValue> Never();
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> OnErrorResumeNext(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second);
    public static IAsyncEnumerable`1<TSource> OnErrorResumeNext(IAsyncEnumerable`1[] sources);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> OnErrorResumeNext(IEnumerable`1<IAsyncEnumerable`1<TSource>> sources);
    private static IAsyncEnumerable`1<TSource> OnErrorResumeNextCore(IEnumerable`1<IAsyncEnumerable`1<TSource>> sources);
    public static IAsyncEnumerable`1<TResult> Repeat(TResult element);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Repeat(IAsyncEnumerable`1<TSource> source);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Repeat(IAsyncEnumerable`1<TSource> source, int count);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Retry(IAsyncEnumerable`1<TSource> source);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Retry(IAsyncEnumerable`1<TSource> source, int retryCount);
    [IteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<Repeat>d__105`1")]
[ExtensionAttribute]
private static IEnumerable`1<TSource> Repeat(IEnumerable`1<TSource> source);
    [IteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<Repeat>d__106`1")]
[ExtensionAttribute]
private static IEnumerable`1<TSource> Repeat(IEnumerable`1<TSource> source, int count);
    public static IAsyncEnumerable`1<TValue> Return(TValue value);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Scan(IAsyncEnumerable`1<TSource> source, Func`3<TSource, TSource, TSource> accumulator);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TAccumulate> Scan(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`3<TAccumulate, TSource, TAccumulate> accumulator);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Scan(IAsyncEnumerable`1<TSource> source, Func`3<TSource, TSource, ValueTask`1<TSource>> accumulator);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Scan(IAsyncEnumerable`1<TSource> source, Func`4<TSource, TSource, CancellationToken, ValueTask`1<TSource>> accumulator);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TAccumulate> Scan(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`3<TAccumulate, TSource, ValueTask`1<TAccumulate>> accumulator);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TAccumulate> Scan(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`4<TAccumulate, TSource, CancellationToken, ValueTask`1<TAccumulate>> accumulator);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TOther> SelectMany(IAsyncEnumerable`1<TSource> source, IAsyncEnumerable`1<TOther> other);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> StartWith(IAsyncEnumerable`1<TSource> source, TSource[] values);
    public static IAsyncEnumerable`1<TValue> Throw(Exception exception);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Timeout(IAsyncEnumerable`1<TSource> source, TimeSpan timeout);
    public static IAsyncEnumerable`1<TSource> Using(Func`1<TResource> resourceFactory, Func`2<TResource, IAsyncEnumerable`1<TSource>> enumerableFactory);
    public static IAsyncEnumerable`1<TSource> Using(Func`1<Task`1<TResource>> resourceFactory, Func`2<TResource, ValueTask`1<IAsyncEnumerable`1<TSource>>> enumerableFactory);
    public static IAsyncEnumerable`1<TSource> Using(Func`2<CancellationToken, Task`1<TResource>> resourceFactory, Func`3<TResource, CancellationToken, ValueTask`1<IAsyncEnumerable`1<TSource>>> enumerableFactory);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Amb>g__Core|0_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Amb>g__Core|0_0(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Amb>g__Core|1_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Amb>g__Core|1_0(IAsyncEnumerable`1[] sources, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Buffer>g__Core|4_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<IList`1<TSource>> <Buffer>g__Core|4_0(IAsyncEnumerable`1<TSource> source, int count, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Buffer>g__Core|5_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<IList`1<TSource>> <Buffer>g__Core|5_0(IAsyncEnumerable`1<TSource> source, int count, int skip, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Catch>g__Core|6_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Catch>g__Core|6_0(IAsyncEnumerable`1<TSource> source, Func`2<TException, IAsyncEnumerable`1<TSource>> handler, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Catch>g__Core|7_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Catch>g__Core|7_0(IAsyncEnumerable`1<TSource> source, Func`2<TException, ValueTask`1<IAsyncEnumerable`1<TSource>>> handler, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Catch>g__Core|8_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Catch>g__Core|8_0(IAsyncEnumerable`1<TSource> source, Func`3<TException, CancellationToken, ValueTask`1<IAsyncEnumerable`1<TSource>>> handler, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Concat>g__Core|13_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Concat>g__Core|13_0(IAsyncEnumerable`1<IAsyncEnumerable`1<TSource>> sources, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Concat>g__Core|14_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Concat>g__Core|14_0(IEnumerable`1<IAsyncEnumerable`1<TSource>> sources, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Concat>g__Core|15_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Concat>g__Core|15_0(IAsyncEnumerable`1[] sources, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Defer>g__Core|16_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Defer>g__Core|16_0(Func`1<IAsyncEnumerable`1<TSource>> factory, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Defer>g__Core|17_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Defer>g__Core|17_0(Func`1<Task`1<IAsyncEnumerable`1<TSource>>> factory, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Defer>g__Core|18_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Defer>g__Core|18_0(Func`2<CancellationToken, Task`1<IAsyncEnumerable`1<TSource>>> factory, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<DistinctUntilChangedCore>g__Core|39_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <DistinctUntilChangedCore>g__Core|39_0(IAsyncEnumerable`1<TSource> source, IEqualityComparer`1<TSource> comparer, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<DistinctUntilChangedCore>g__Core|40_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <DistinctUntilChangedCore>g__Core|40_0(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<DistinctUntilChangedCore>g__Core|41_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <DistinctUntilChangedCore>g__Core|41_0(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<DistinctUntilChangedCore>g__Core|42_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <DistinctUntilChangedCore>g__Core|42_0(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Expand>g__Core|59_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Expand>g__Core|59_0(IAsyncEnumerable`1<TSource> source, Func`2<TSource, IAsyncEnumerable`1<TSource>> selector, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Expand>g__Core|60_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Expand>g__Core|60_0(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<IAsyncEnumerable`1<TSource>>> selector, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Expand>g__Core|61_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Expand>g__Core|61_0(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<IAsyncEnumerable`1<TSource>>> selector, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Finally>g__Core|62_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Finally>g__Core|62_0(IAsyncEnumerable`1<TSource> source, Action finallyAction, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Finally>g__Core|63_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Finally>g__Core|63_0(IAsyncEnumerable`1<TSource> source, Func`1<Task> finallyAction, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Generate>g__Core|64_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TResult> <Generate>g__Core|64_0(TState initialState, Func`2<TState, bool> condition, Func`2<TState, TState> iterate, Func`2<TState, TResult> resultSelector, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<IgnoreElements>g__Core|65_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <IgnoreElements>g__Core|65_0(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<IsEmptyAsync>g__Core|66_0>d`1")]
[CompilerGeneratedAttribute]
internal static ValueTask`1<bool> <IsEmptyAsync>g__Core|66_0(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<MaxAsync>g__Core|67_0>d`1")]
[CompilerGeneratedAttribute]
internal static ValueTask`1<TSource> <MaxAsync>g__Core|67_0(IAsyncEnumerable`1<TSource> source, IComparer`1<TSource> comparer, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Merge>g__Core|77_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Merge>g__Core|77_0(IAsyncEnumerable`1[] sources, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<MinAsync>g__Core|80_0>d`1")]
[CompilerGeneratedAttribute]
internal static ValueTask`1<TSource> <MinAsync>g__Core|80_0(IAsyncEnumerable`1<TSource> source, IComparer`1<TSource> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Repeat>g__Core|100_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TResult> <Repeat>g__Core|100_0(TResult element, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Repeat>g__Core|101_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Repeat>g__Core|101_0(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Repeat>g__Core|102_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Repeat>g__Core|102_0(IAsyncEnumerable`1<TSource> source, int count, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Scan>g__Core|109_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Scan>g__Core|109_0(IAsyncEnumerable`1<TSource> source, Func`3<TSource, TSource, TSource> accumulator, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Scan>g__Core|110_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TAccumulate> <Scan>g__Core|110_0(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`3<TAccumulate, TSource, TAccumulate> accumulator, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Scan>g__Core|111_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Scan>g__Core|111_0(IAsyncEnumerable`1<TSource> source, Func`3<TSource, TSource, ValueTask`1<TSource>> accumulator, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Scan>g__Core|112_0>d`1")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Scan>g__Core|112_0(IAsyncEnumerable`1<TSource> source, Func`4<TSource, TSource, CancellationToken, ValueTask`1<TSource>> accumulator, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Scan>g__Core|113_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TAccumulate> <Scan>g__Core|113_0(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`3<TAccumulate, TSource, ValueTask`1<TAccumulate>> accumulator, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Scan>g__Core|114_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TAccumulate> <Scan>g__Core|114_0(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`4<TAccumulate, TSource, CancellationToken, ValueTask`1<TAccumulate>> accumulator, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Using>g__Core|121_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Using>g__Core|121_0(Func`1<TResource> resourceFactory, Func`2<TResource, IAsyncEnumerable`1<TSource>> enumerableFactory, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Using>g__Core|122_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Using>g__Core|122_0(Func`1<Task`1<TResource>> resourceFactory, Func`2<TResource, ValueTask`1<IAsyncEnumerable`1<TSource>>> enumerableFactory, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("System.Linq.AsyncEnumerableEx/<<Using>g__Core|123_0>d`2")]
[CompilerGeneratedAttribute]
internal static IAsyncEnumerable`1<TSource> <Using>g__Core|123_0(Func`2<CancellationToken, Task`1<TResource>> resourceFactory, Func`3<TResource, CancellationToken, ValueTask`1<IAsyncEnumerable`1<TSource>>> enumerableFactory, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class System.Linq.AsyncIterator`1 : AsyncIteratorBase`1<TSource> {
    protected TSource _current;
    public TSource Current { get; }
    public virtual TSource get_Current();
    public virtual ValueTask DisposeAsync();
}
internal abstract class System.Linq.AsyncIteratorBase`1 : object {
    private int _threadId;
    protected AsyncIteratorState _state;
    protected CancellationToken _cancellationToken;
    [NullableAttribute("1")]
public TSource Current { get; }
    [NullableContextAttribute("1")]
public sealed virtual IAsyncEnumerator`1<TSource> GetAsyncEnumerator(CancellationToken cancellationToken);
    public virtual ValueTask DisposeAsync();
    [NullableContextAttribute("1")]
public abstract virtual TSource get_Current();
    [AsyncStateMachineAttribute("System.Linq.AsyncIteratorBase`1/<MoveNextAsync>d__8")]
public sealed virtual ValueTask`1<bool> MoveNextAsync();
    [NullableContextAttribute("1")]
public abstract virtual AsyncIteratorBase`1<TSource> Clone();
    protected abstract virtual ValueTask`1<bool> MoveNextCore();
}
internal enum System.Linq.AsyncIteratorState : Enum {
    public int value__;
    public static AsyncIteratorState New;
    public static AsyncIteratorState Allocated;
    public static AsyncIteratorState Iterating;
    public static AsyncIteratorState Disposed;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Linq.Set`1 : object {
    private IEqualityComparer`1<TElement> _comparer;
    private Int32[] _buckets;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Slot[] _slots;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    internal int Count { get; private set; }
    public Set`1(IEqualityComparer`1<TElement> comparer);
    [CompilerGeneratedAttribute]
internal int get_Count();
    [CompilerGeneratedAttribute]
private void set_Count(int value);
    public bool Add(TElement value);
    public bool Remove(TElement value);
    internal int InternalGetHashCode(TElement value);
    internal TElement[] ToArray();
    internal List`1<TElement> ToList();
    private void Resize();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class System.Strings : object {
    public static string NO_ELEMENTS;
    public static string MORE_THAN_ONE_ELEMENT;
    public static string NOT_SUPPORTED;
    private static Strings();
}
[ExtensionAttribute]
internal static class System.Threading.Tasks.AsyncEnumerableExt : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Enumerator<T> GetConfiguredAsyncEnumerator(IAsyncEnumerable`1<T> enumerable, CancellationToken cancellationToken, bool continueOnCapturedContext);
}
internal static class System.Threading.Tasks.TaskExt : object {
    [NullableAttribute("1")]
public static Task`1<bool> Never;
    private static TaskExt();
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.4.255.64262")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
    private static ThisAssembly();
}
