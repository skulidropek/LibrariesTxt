[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class System.Collections.Generic.AsyncEnumerableHelpers : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.Collections.Generic.AsyncEnumerator : object {
    public static IAsyncEnumerator`1<T> Create(Func`1<ValueTask`1<bool>> moveNextAsync, Func`1<T> getCurrent, Func`1<ValueTask> disposeAsync);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<bool> MoveNextAsync(IAsyncEnumerator`1<T> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerator`1<T> WithCancellation(IAsyncEnumerator`1<T> source, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class System.Error : object {
    public static Exception ArgumentNull(string paramName);
    public static Exception ArgumentOutOfRange(string paramName);
    public static Exception NoElements();
    public static Exception MoreThanOneElement();
    public static Exception NotSupported();
}
internal class System.Linq.AnonymousDisposable : object {
    [NullableContextAttribute("1")]
public AnonymousDisposable(Action action);
    public sealed virtual void Dispose();
}
internal abstract class System.Linq.AsyncCachingComparer`1 : object {
    internal abstract virtual ValueTask`1<int> Compare(TElement element, bool cacheLower, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
internal abstract virtual ValueTask SetElement(TElement element, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.AsyncCachingComparer`2 : AsyncCachingComparer`1<TElement> {
    protected Func`2<TElement, TKey> _keySelector;
    protected IComparer`1<TKey> _comparer;
    protected bool _descending;
    protected TKey _lastKey;
    public AsyncCachingComparer`2(Func`2<TElement, TKey> keySelector, IComparer`1<TKey> comparer, bool descending);
    [NullableContextAttribute("0")]
internal virtual ValueTask`1<int> Compare(TElement element, bool cacheLower, CancellationToken cancellationToken);
    internal virtual ValueTask SetElement(TElement element, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.AsyncCachingComparerWithChild`2 : AsyncCachingComparer`2<TElement, TKey> {
    public AsyncCachingComparerWithChild`2(Func`2<TElement, TKey> keySelector, IComparer`1<TKey> comparer, bool descending, AsyncCachingComparer`1<TElement> child);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.AsyncCachingComparerWithChild`2/<Compare>d__2")]
internal virtual ValueTask`1<int> Compare(TElement element, bool cacheLower, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncCachingComparerWithChild`2/<SetElement>d__3")]
internal virtual ValueTask SetElement(TElement element, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.AsyncCachingComparerWithTask`2 : AsyncCachingComparer`1<TElement> {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected Func`2<TElement, ValueTask`1<TKey>> _keySelector;
    protected IComparer`1<TKey> _comparer;
    protected bool _descending;
    protected TKey _lastKey;
    public AsyncCachingComparerWithTask`2(Func`2<TElement, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.AsyncCachingComparerWithTask`2/<Compare>d__5")]
internal virtual ValueTask`1<int> Compare(TElement element, bool cacheLower, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncCachingComparerWithTask`2/<SetElement>d__6")]
internal virtual ValueTask SetElement(TElement element, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.AsyncCachingComparerWithTaskAndCancellation`2 : AsyncCachingComparer`1<TElement> {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected Func`3<TElement, CancellationToken, ValueTask`1<TKey>> _keySelector;
    protected IComparer`1<TKey> _comparer;
    protected bool _descending;
    protected TKey _lastKey;
    public AsyncCachingComparerWithTaskAndCancellation`2(Func`3<TElement, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.AsyncCachingComparerWithTaskAndCancellation`2/<Compare>d__5")]
internal virtual ValueTask`1<int> Compare(TElement element, bool cacheLower, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncCachingComparerWithTaskAndCancellation`2/<SetElement>d__6")]
internal virtual ValueTask SetElement(TElement element, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.AsyncCachingComparerWithTaskAndCancellationAndChild`2 : AsyncCachingComparerWithTaskAndCancellation`2<TElement, TKey> {
    public AsyncCachingComparerWithTaskAndCancellationAndChild`2(Func`3<TElement, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending, AsyncCachingComparer`1<TElement> child);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.AsyncCachingComparerWithTaskAndCancellationAndChild`2/<Compare>d__2")]
internal virtual ValueTask`1<int> Compare(TElement element, bool cacheLower, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncCachingComparerWithTaskAndCancellationAndChild`2/<SetElement>d__3")]
internal virtual ValueTask SetElement(TElement element, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.AsyncCachingComparerWithTaskAndChild`2 : AsyncCachingComparerWithTask`2<TElement, TKey> {
    public AsyncCachingComparerWithTaskAndChild`2(Func`2<TElement, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending, AsyncCachingComparer`1<TElement> child);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.AsyncCachingComparerWithTaskAndChild`2/<Compare>d__2")]
internal virtual ValueTask`1<int> Compare(TElement element, bool cacheLower, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncCachingComparerWithTaskAndChild`2/<SetElement>d__3")]
internal virtual ValueTask SetElement(TElement element, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.Linq.AsyncEnumerable : object {
    public static IAsyncEnumerable`1<T> Create(Func`2<CancellationToken, IAsyncEnumerator`1<T>> getAsyncEnumerator);
    [ExtensionAttribute]
public static ValueTask`1<TSource> AggregateAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, TSource, TSource> accumulator, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TAccumulate> AggregateAsync(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`3<TAccumulate, TSource, TAccumulate> accumulator, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TResult> AggregateAsync(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`3<TAccumulate, TSource, TAccumulate> accumulator, Func`2<TAccumulate, TResult> resultSelector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<bool> AllAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<bool> AnyAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<bool> AnyAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Append(IAsyncEnumerable`1<TSource> source, TSource element);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Prepend(IAsyncEnumerable`1<TSource> source, TSource element);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> AsAsyncEnumerable(IAsyncEnumerable`1<TSource> source);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAsync(IAsyncEnumerable`1<int> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, int> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAsync(IAsyncEnumerable`1<long> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, long> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> AverageAsync(IAsyncEnumerable`1<float> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> AverageAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, float> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAsync(IAsyncEnumerable`1<double> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, double> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> AverageAsync(IAsyncEnumerable`1<decimal> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> AverageAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, decimal> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAsync(IAsyncEnumerable`1<Nullable`1<int>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAsync(IAsyncEnumerable`1<Nullable`1<long>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> AverageAsync(IAsyncEnumerable`1<Nullable`1<float>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> AverageAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAsync(IAsyncEnumerable`1<Nullable`1<double>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> AverageAsync(IAsyncEnumerable`1<Nullable`1<decimal>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> AverageAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<decimal>> selector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> Cast(IAsyncEnumerable`1<object> source);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Concat(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second);
    [ExtensionAttribute]
public static ValueTask`1<bool> ContainsAsync(IAsyncEnumerable`1<TSource> source, TSource value, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<bool> ContainsAsync(IAsyncEnumerable`1<TSource> source, TSource value, IEqualityComparer`1<TSource> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> CountAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<int> CountAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> DefaultIfEmpty(IAsyncEnumerable`1<TSource> source);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> DefaultIfEmpty(IAsyncEnumerable`1<TSource> source, TSource defaultValue);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Distinct(IAsyncEnumerable`1<TSource> source);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Distinct(IAsyncEnumerable`1<TSource> source, IEqualityComparer`1<TSource> comparer);
    [ExtensionAttribute]
public static ValueTask`1<TSource> ElementAtAsync(IAsyncEnumerable`1<TSource> source, int index, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> ElementAtOrDefaultAsync(IAsyncEnumerable`1<TSource> source, int index, CancellationToken cancellationToken);
    public static IAsyncEnumerable`1<TValue> Empty();
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Except(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Except(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second, IEqualityComparer`1<TSource> comparer);
    [ExtensionAttribute]
public static ValueTask`1<TSource> FirstAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> FirstAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> FirstOrDefaultAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> FirstOrDefaultAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task ForEachAsync(IAsyncEnumerable`1<TSource> source, Action`1<TSource> action, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task ForEachAsync(IAsyncEnumerable`1<TSource> source, Action`2<TSource, int> action, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TSource>> GroupBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TSource>> GroupBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TElement>> GroupBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, Func`2<TSource, TElement> elementSelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TElement>> GroupBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, Func`2<TSource, TElement> elementSelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, Func`3<TKey, IAsyncEnumerable`1<TSource>, TResult> resultSelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, Func`3<TKey, IAsyncEnumerable`1<TSource>, TResult> resultSelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, Func`2<TSource, TElement> elementSelector, Func`3<TKey, IAsyncEnumerable`1<TElement>, TResult> resultSelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, Func`2<TSource, TElement> elementSelector, Func`3<TKey, IAsyncEnumerable`1<TElement>, TResult> resultSelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupJoin(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`2<TOuter, TKey> outerKeySelector, Func`2<TInner, TKey> innerKeySelector, Func`3<TOuter, IAsyncEnumerable`1<TInner>, TResult> resultSelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupJoin(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`2<TOuter, TKey> outerKeySelector, Func`2<TInner, TKey> innerKeySelector, Func`3<TOuter, IAsyncEnumerable`1<TInner>, TResult> resultSelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Intersect(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Intersect(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second, IEqualityComparer`1<TSource> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> Join(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`2<TOuter, TKey> outerKeySelector, Func`2<TInner, TKey> innerKeySelector, Func`3<TOuter, TInner, TResult> resultSelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> Join(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`2<TOuter, TKey> outerKeySelector, Func`2<TInner, TKey> innerKeySelector, Func`3<TOuter, TInner, TResult> resultSelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static ValueTask`1<TSource> LastAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> LastAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> LastOrDefaultAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> LastOrDefaultAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> LongCountAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<long> LongCountAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> MaxAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TResult> MaxAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TResult> selector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> MinAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TResult> MinAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TResult> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> MaxAsync(IAsyncEnumerable`1<int> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> MaxAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, int> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> MaxAsync(IAsyncEnumerable`1<Nullable`1<int>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> MaxAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> MaxAsync(IAsyncEnumerable`1<long> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> MaxAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, long> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> MaxAsync(IAsyncEnumerable`1<Nullable`1<long>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> MaxAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> MaxAsync(IAsyncEnumerable`1<float> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> MaxAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, float> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> MaxAsync(IAsyncEnumerable`1<Nullable`1<float>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> MaxAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> MaxAsync(IAsyncEnumerable`1<double> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> MaxAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, double> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> MaxAsync(IAsyncEnumerable`1<Nullable`1<double>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> MaxAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> MaxAsync(IAsyncEnumerable`1<decimal> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> MaxAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, decimal> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> MaxAsync(IAsyncEnumerable`1<Nullable`1<decimal>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> MaxAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<decimal>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> MinAsync(IAsyncEnumerable`1<int> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> MinAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, int> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> MinAsync(IAsyncEnumerable`1<Nullable`1<int>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> MinAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> MinAsync(IAsyncEnumerable`1<long> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> MinAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, long> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> MinAsync(IAsyncEnumerable`1<Nullable`1<long>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> MinAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> MinAsync(IAsyncEnumerable`1<float> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> MinAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, float> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> MinAsync(IAsyncEnumerable`1<Nullable`1<float>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> MinAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> MinAsync(IAsyncEnumerable`1<double> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> MinAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, double> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> MinAsync(IAsyncEnumerable`1<Nullable`1<double>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> MinAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> MinAsync(IAsyncEnumerable`1<decimal> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> MinAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, decimal> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> MinAsync(IAsyncEnumerable`1<Nullable`1<decimal>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> MinAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<decimal>> selector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> OfType(IAsyncEnumerable`1<object> source);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderBy(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderByDescending(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderByDescending(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenBy(IOrderedAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenBy(IOrderedAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenByDescending(IOrderedAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenByDescending(IOrderedAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IComparer`1<TKey> comparer);
    public static IAsyncEnumerable`1<int> Range(int start, int count);
    public static IAsyncEnumerable`1<TResult> Repeat(TResult element, int count);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Reverse(IAsyncEnumerable`1<TSource> source);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> Select(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TResult> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> Select(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, TResult> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectMany(IAsyncEnumerable`1<TSource> source, Func`2<TSource, IAsyncEnumerable`1<TResult>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectMany(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, IAsyncEnumerable`1<TResult>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectMany(IAsyncEnumerable`1<TSource> source, Func`2<TSource, IAsyncEnumerable`1<TCollection>> collectionSelector, Func`3<TSource, TCollection, TResult> resultSelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectMany(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, IAsyncEnumerable`1<TCollection>> collectionSelector, Func`3<TSource, TCollection, TResult> resultSelector);
    [ExtensionAttribute]
public static ValueTask`1<bool> SequenceEqualAsync(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<bool> SequenceEqualAsync(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second, IEqualityComparer`1<TSource> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> SingleAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> SingleAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> SingleOrDefaultAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> SingleOrDefaultAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Skip(IAsyncEnumerable`1<TSource> source, int count);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> SkipLast(IAsyncEnumerable`1<TSource> source, int count);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> SkipWhile(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> SkipWhile(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, bool> predicate);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> SumAsync(IAsyncEnumerable`1<int> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> SumAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, int> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> SumAsync(IAsyncEnumerable`1<long> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> SumAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, long> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> SumAsync(IAsyncEnumerable`1<float> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> SumAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, float> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> SumAsync(IAsyncEnumerable`1<double> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> SumAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, double> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> SumAsync(IAsyncEnumerable`1<decimal> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> SumAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, decimal> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> SumAsync(IAsyncEnumerable`1<Nullable`1<int>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> SumAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> SumAsync(IAsyncEnumerable`1<Nullable`1<long>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> SumAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> SumAsync(IAsyncEnumerable`1<Nullable`1<float>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> SumAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> SumAsync(IAsyncEnumerable`1<Nullable`1<double>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> SumAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> SumAsync(IAsyncEnumerable`1<Nullable`1<decimal>> source, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> SumAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Nullable`1<decimal>> selector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Take(IAsyncEnumerable`1<TSource> source, int count);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> TakeLast(IAsyncEnumerable`1<TSource> source, int count);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> TakeWhile(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> TakeWhile(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, bool> predicate);
    [ExtensionAttribute]
public static ValueTask`1<TSource[]> ToArrayAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> ToAsyncEnumerable(IEnumerable`1<TSource> source);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> ToAsyncEnumerable(IObservable`1<TSource> source);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> ToAsyncEnumerable(Task`1<TSource> task);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TSource>> ToDictionaryAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TSource>> ToDictionaryAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TElement>> ToDictionaryAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, Func`2<TSource, TElement> elementSelector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TElement>> ToDictionaryAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, Func`2<TSource, TElement> elementSelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IEnumerable`1<TSource> ToEnumerable(IAsyncEnumerable`1<TSource> source);
    [ExtensionAttribute]
public static ValueTask`1<HashSet`1<TSource>> ToHashSetAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<HashSet`1<TSource>> ToHashSetAsync(IAsyncEnumerable`1<TSource> source, IEqualityComparer`1<TSource> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<List`1<TSource>> ToListAsync(IAsyncEnumerable`1<TSource> source, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TSource>> ToLookupAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TSource>> ToLookupAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TElement>> ToLookupAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, Func`2<TSource, TElement> elementSelector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TElement>> ToLookupAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, TKey> keySelector, Func`2<TSource, TElement> elementSelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IObservable`1<TSource> ToObservable(IAsyncEnumerable`1<TSource> source);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Union(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Union(IAsyncEnumerable`1<TSource> first, IAsyncEnumerable`1<TSource> second, IEqualityComparer`1<TSource> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Where(IAsyncEnumerable`1<TSource> source, Func`2<TSource, bool> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> Where(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, bool> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<ValueTuple`2<TFirst, TSecond>> Zip(IAsyncEnumerable`1<TFirst> first, IAsyncEnumerable`1<TSecond> second);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> Zip(IAsyncEnumerable`1<TFirst> first, IAsyncEnumerable`1<TSecond> second, Func`3<TFirst, TSecond, TResult> selector);
    [ExtensionAttribute]
public static ValueTask`1<TSource> AggregateAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, TSource, ValueTask`1<TSource>> accumulator, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> AggregateAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`4<TSource, TSource, CancellationToken, ValueTask`1<TSource>> accumulator, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TAccumulate> AggregateAwaitAsync(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`3<TAccumulate, TSource, ValueTask`1<TAccumulate>> accumulator, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TAccumulate> AggregateAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`4<TAccumulate, TSource, CancellationToken, ValueTask`1<TAccumulate>> accumulator, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<TResult> AggregateAwaitAsync(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`3<TAccumulate, TSource, ValueTask`1<TAccumulate>> accumulator, Func`2<TAccumulate, ValueTask`1<TResult>> resultSelector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<TResult> AggregateAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, TAccumulate seed, Func`4<TAccumulate, TSource, CancellationToken, ValueTask`1<TAccumulate>> accumulator, Func`3<TAccumulate, CancellationToken, ValueTask`1<TResult>> resultSelector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<bool> AllAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<bool> AllAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<bool> AnyAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<bool> AnyAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> AverageAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> AverageAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> AverageAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> AverageAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<decimal>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> AverageAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<decimal>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<int>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<int>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<long>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<long>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> AverageAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<float>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> AverageAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<float>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<double>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> AverageAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<double>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> AverageAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<decimal>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> AverageAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<decimal>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> CountAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> CountAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> FirstAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> FirstAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> FirstOrDefaultAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> FirstOrDefaultAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task ForEachAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, Task> action, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task ForEachAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, Task> action, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task ForEachAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, Task> action, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task ForEachAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`4<TSource, int, CancellationToken, Task> action, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TSource>> GroupByAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TSource>> GroupByAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TSource>> GroupByAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TSource>> GroupByAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TElement>> GroupByAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, Func`2<TSource, ValueTask`1<TElement>> elementSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TElement>> GroupByAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, Func`2<TSource, ValueTask`1<TElement>> elementSelector, IEqualityComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TElement>> GroupByAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, Func`3<TSource, CancellationToken, ValueTask`1<TElement>> elementSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<IAsyncGrouping`2<TKey, TElement>> GroupByAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, Func`3<TSource, CancellationToken, ValueTask`1<TElement>> elementSelector, IEqualityComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupByAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, Func`3<TKey, IAsyncEnumerable`1<TSource>, ValueTask`1<TResult>> resultSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupByAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, Func`3<TKey, IAsyncEnumerable`1<TSource>, ValueTask`1<TResult>> resultSelector, IEqualityComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupByAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, Func`4<TKey, IAsyncEnumerable`1<TSource>, CancellationToken, ValueTask`1<TResult>> resultSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupByAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, Func`4<TKey, IAsyncEnumerable`1<TSource>, CancellationToken, ValueTask`1<TResult>> resultSelector, IEqualityComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupByAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, Func`2<TSource, ValueTask`1<TElement>> elementSelector, Func`3<TKey, IAsyncEnumerable`1<TElement>, ValueTask`1<TResult>> resultSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupByAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, Func`2<TSource, ValueTask`1<TElement>> elementSelector, Func`3<TKey, IAsyncEnumerable`1<TElement>, ValueTask`1<TResult>> resultSelector, IEqualityComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupByAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, Func`3<TSource, CancellationToken, ValueTask`1<TElement>> elementSelector, Func`4<TKey, IAsyncEnumerable`1<TElement>, CancellationToken, ValueTask`1<TResult>> resultSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupByAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, Func`3<TSource, CancellationToken, ValueTask`1<TElement>> elementSelector, Func`4<TKey, IAsyncEnumerable`1<TElement>, CancellationToken, ValueTask`1<TResult>> resultSelector, IEqualityComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupJoinAwait(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`2<TOuter, ValueTask`1<TKey>> outerKeySelector, Func`2<TInner, ValueTask`1<TKey>> innerKeySelector, Func`3<TOuter, IAsyncEnumerable`1<TInner>, ValueTask`1<TResult>> resultSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupJoinAwait(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`2<TOuter, ValueTask`1<TKey>> outerKeySelector, Func`2<TInner, ValueTask`1<TKey>> innerKeySelector, Func`3<TOuter, IAsyncEnumerable`1<TInner>, ValueTask`1<TResult>> resultSelector, IEqualityComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupJoinAwaitWithCancellation(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`3<TOuter, CancellationToken, ValueTask`1<TKey>> outerKeySelector, Func`3<TInner, CancellationToken, ValueTask`1<TKey>> innerKeySelector, Func`4<TOuter, IAsyncEnumerable`1<TInner>, CancellationToken, ValueTask`1<TResult>> resultSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> GroupJoinAwaitWithCancellation(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`3<TOuter, CancellationToken, ValueTask`1<TKey>> outerKeySelector, Func`3<TInner, CancellationToken, ValueTask`1<TKey>> innerKeySelector, Func`4<TOuter, IAsyncEnumerable`1<TInner>, CancellationToken, ValueTask`1<TResult>> resultSelector, IEqualityComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> JoinAwait(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`2<TOuter, ValueTask`1<TKey>> outerKeySelector, Func`2<TInner, ValueTask`1<TKey>> innerKeySelector, Func`3<TOuter, TInner, ValueTask`1<TResult>> resultSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> JoinAwait(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`2<TOuter, ValueTask`1<TKey>> outerKeySelector, Func`2<TInner, ValueTask`1<TKey>> innerKeySelector, Func`3<TOuter, TInner, ValueTask`1<TResult>> resultSelector, IEqualityComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> JoinAwaitWithCancellation(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`3<TOuter, CancellationToken, ValueTask`1<TKey>> outerKeySelector, Func`3<TInner, CancellationToken, ValueTask`1<TKey>> innerKeySelector, Func`4<TOuter, TInner, CancellationToken, ValueTask`1<TResult>> resultSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> JoinAwaitWithCancellation(IAsyncEnumerable`1<TOuter> outer, IAsyncEnumerable`1<TInner> inner, Func`3<TOuter, CancellationToken, ValueTask`1<TKey>> outerKeySelector, Func`3<TInner, CancellationToken, ValueTask`1<TKey>> innerKeySelector, Func`4<TOuter, TInner, CancellationToken, ValueTask`1<TResult>> resultSelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static ValueTask`1<TSource> LastAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> LastAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> LastOrDefaultAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> LastOrDefaultAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> LongCountAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> LongCountAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<TResult> MaxAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TResult>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<TResult> MaxAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TResult>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<TResult> MinAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TResult>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<TResult> MinAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TResult>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> MaxAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> MaxAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> MaxAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<int>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> MaxAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<int>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> MaxAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> MaxAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> MaxAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<long>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> MaxAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<long>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> MaxAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> MaxAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> MaxAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<float>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> MaxAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<float>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> MaxAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> MaxAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> MaxAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<double>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> MaxAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<double>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> MaxAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<decimal>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> MaxAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<decimal>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> MaxAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<decimal>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> MaxAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<decimal>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> MinAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> MinAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> MinAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<int>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> MinAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<int>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> MinAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> MinAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> MinAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<long>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> MinAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<long>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> MinAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> MinAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> MinAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<float>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> MinAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<float>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> MinAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> MinAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> MinAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<double>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> MinAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<double>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> MinAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<decimal>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> MinAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<decimal>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> MinAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<decimal>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> MinAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<decimal>>> selector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderByAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderByAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderByAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderByAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderByDescendingAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderByDescendingAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderByDescendingAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> OrderByDescendingAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenByAwait(IOrderedAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenByAwaitWithCancellation(IOrderedAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenByAwait(IOrderedAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenByAwaitWithCancellation(IOrderedAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenByDescendingAwait(IOrderedAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenByDescendingAwaitWithCancellation(IOrderedAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenByDescendingAwait(IOrderedAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IOrderedAsyncEnumerable`1<TSource> ThenByDescendingAwaitWithCancellation(IOrderedAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TResult>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TResult>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectAwait(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, ValueTask`1<TResult>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`4<TSource, int, CancellationToken, ValueTask`1<TResult>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectManyAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<IAsyncEnumerable`1<TResult>>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectManyAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<IAsyncEnumerable`1<TResult>>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectManyAwait(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, ValueTask`1<IAsyncEnumerable`1<TResult>>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectManyAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`4<TSource, int, CancellationToken, ValueTask`1<IAsyncEnumerable`1<TResult>>> selector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectManyAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<IAsyncEnumerable`1<TCollection>>> collectionSelector, Func`3<TSource, TCollection, ValueTask`1<TResult>> resultSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectManyAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<IAsyncEnumerable`1<TCollection>>> collectionSelector, Func`4<TSource, TCollection, CancellationToken, ValueTask`1<TResult>> resultSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectManyAwait(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, ValueTask`1<IAsyncEnumerable`1<TCollection>>> collectionSelector, Func`3<TSource, TCollection, ValueTask`1<TResult>> resultSelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> SelectManyAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`4<TSource, int, CancellationToken, ValueTask`1<IAsyncEnumerable`1<TCollection>>> collectionSelector, Func`4<TSource, TCollection, CancellationToken, ValueTask`1<TResult>> resultSelector);
    [ExtensionAttribute]
public static ValueTask`1<TSource> SingleAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> SingleAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> SingleOrDefaultAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<TSource> SingleOrDefaultAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> SkipWhileAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> SkipWhileAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> SkipWhileAwait(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, ValueTask`1<bool>> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> SkipWhileAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`4<TSource, int, CancellationToken, ValueTask`1<bool>> predicate);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> SumAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<int> SumAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<int>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> SumAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<long> SumAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<long>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> SumAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<float> SumAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<float>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> SumAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<double> SumAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<double>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> SumAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<decimal>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<decimal> SumAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<decimal>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> SumAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<int>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<int>> SumAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<int>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> SumAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<long>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<long>> SumAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<long>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> SumAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<float>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<float>> SumAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<float>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> SumAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<double>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<double>> SumAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<double>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> SumAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<Nullable`1<decimal>>> selector, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ValueTask`1<Nullable`1<decimal>> SumAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<Nullable`1<decimal>>> selector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> TakeWhileAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> TakeWhileAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> TakeWhileAwait(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, ValueTask`1<bool>> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> TakeWhileAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`4<TSource, int, CancellationToken, ValueTask`1<bool>> predicate);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TSource>> ToDictionaryAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TSource>> ToDictionaryAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TSource>> ToDictionaryAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TSource>> ToDictionaryAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TElement>> ToDictionaryAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, Func`2<TSource, ValueTask`1<TElement>> elementSelector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TElement>> ToDictionaryAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, Func`2<TSource, ValueTask`1<TElement>> elementSelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TElement>> ToDictionaryAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, Func`3<TSource, CancellationToken, ValueTask`1<TElement>> elementSelector, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static ValueTask`1<Dictionary`2<TKey, TElement>> ToDictionaryAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, Func`3<TSource, CancellationToken, ValueTask`1<TElement>> elementSelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TSource>> ToLookupAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TSource>> ToLookupAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TSource>> ToLookupAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TSource>> ToLookupAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TElement>> ToLookupAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, Func`2<TSource, ValueTask`1<TElement>> elementSelector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TElement>> ToLookupAwaitAsync(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<TKey>> keySelector, Func`2<TSource, ValueTask`1<TElement>> elementSelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TElement>> ToLookupAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, Func`3<TSource, CancellationToken, ValueTask`1<TElement>> elementSelector, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTask`1<ILookup`2<TKey, TElement>> ToLookupAwaitWithCancellationAsync(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<TKey>> keySelector, Func`3<TSource, CancellationToken, ValueTask`1<TElement>> elementSelector, IEqualityComparer`1<TKey> comparer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> WhereAwait(IAsyncEnumerable`1<TSource> source, Func`2<TSource, ValueTask`1<bool>> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> WhereAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> WhereAwait(IAsyncEnumerable`1<TSource> source, Func`3<TSource, int, ValueTask`1<bool>> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TSource> WhereAwaitWithCancellation(IAsyncEnumerable`1<TSource> source, Func`4<TSource, int, CancellationToken, ValueTask`1<bool>> predicate);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> ZipAwait(IAsyncEnumerable`1<TFirst> first, IAsyncEnumerable`1<TSecond> second, Func`3<TFirst, TSecond, ValueTask`1<TResult>> selector);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TResult> ZipAwaitWithCancellation(IAsyncEnumerable`1<TFirst> first, IAsyncEnumerable`1<TSecond> second, Func`4<TFirst, TSecond, CancellationToken, ValueTask`1<TResult>> selector);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.AsyncEnumerablePartition`1 : AsyncIterator`1<TSource> {
    [NullableContextAttribute("1")]
public virtual AsyncIteratorBase`1<TSource> Clone();
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerablePartition`1/<DisposeAsync>d__10")]
public virtual ValueTask DisposeAsync();
    public sealed virtual ValueTask`1<int> GetCountAsync(bool onlyIfCheap, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerablePartition`1/<MoveNextCore>d__14")]
protected virtual ValueTask`1<bool> MoveNextCore();
    [NullableContextAttribute("1")]
public sealed virtual IAsyncPartition`1<TSource> Skip(int count);
    [NullableContextAttribute("1")]
public sealed virtual IAsyncPartition`1<TSource> Take(int count);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerablePartition`1/<TryGetElementAtAsync>d__17")]
public sealed virtual ValueTask`1<Maybe`1<TSource>> TryGetElementAtAsync(int index, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerablePartition`1/<TryGetFirstAsync>d__18")]
public sealed virtual ValueTask`1<Maybe`1<TSource>> TryGetFirstAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerablePartition`1/<TryGetLastAsync>d__19")]
public sealed virtual ValueTask`1<Maybe`1<TSource>> TryGetLastAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerablePartition`1/<ToArrayAsync>d__20")]
public sealed virtual ValueTask`1<TSource[]> ToArrayAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerablePartition`1/<ToListAsync>d__21")]
public sealed virtual ValueTask`1<List`1<TSource>> ToListAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class System.Linq.AsyncEnumerableSorter`1 : object {
    internal abstract virtual ValueTask ComputeKeys(TElement[] elements, int count);
    internal abstract virtual int CompareAnyKeys(int index1, int index2);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerableSorter`1/<Sort>d__2")]
public ValueTask`1<Int32[]> Sort(TElement[] elements, int count);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerableSorter`1/<Sort>d__3")]
public ValueTask`1<Int32[]> Sort(TElement[] elements, int count, int minIndexInclusive, int maxIndexInclusive);
    [AsyncStateMachineAttribute("System.Linq.AsyncEnumerableSorter`1/<ElementAt>d__4")]
public ValueTask`1<TElement> ElementAt(TElement[] elements, int count, int index);
    protected abstract virtual void QuickSort(Int32[] map, int left, int right);
    protected abstract virtual void PartialQuickSort(Int32[] map, int left, int right, int minIndexInclusive, int maxIndexInclusive);
    protected abstract virtual int QuickSelect(Int32[] map, int right, int idx);
    protected abstract virtual int Min(Int32[] map, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class System.Linq.AsyncEnumerableSorterBase`2 : AsyncEnumerableSorter`1<TElement> {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected AsyncEnumerableSorter`1<TElement> _next;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected TKey[] _keys;
    public AsyncEnumerableSorterBase`2(IComparer`1<TKey> comparer, bool descending, AsyncEnumerableSorter`1<TElement> next);
    internal sealed virtual int CompareAnyKeys(int index1, int index2);
    protected virtual void QuickSort(Int32[] keys, int lo, int hi);
    protected virtual void PartialQuickSort(Int32[] map, int left, int right, int minIndexInclusive, int maxIndexInclusive);
    protected virtual int QuickSelect(Int32[] map, int right, int idx);
    protected virtual int Min(Int32[] map, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class System.Linq.AsyncIterator`1 : AsyncIteratorBase`1<TSource> {
    protected TSource _current;
    public TSource Current { get; }
    public virtual TSource get_Current();
    public virtual ValueTask DisposeAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class System.Linq.AsyncIteratorBase`1 : object {
    protected AsyncIteratorState _state;
    protected CancellationToken _cancellationToken;
    public TSource Current { get; }
    public sealed virtual IAsyncEnumerator`1<TSource> GetAsyncEnumerator(CancellationToken cancellationToken);
    public virtual ValueTask DisposeAsync();
    public abstract virtual TSource get_Current();
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.AsyncIteratorBase`1/<MoveNextAsync>d__8")]
public sealed virtual ValueTask`1<bool> MoveNextAsync();
    public abstract virtual AsyncIteratorBase`1<TSource> Clone();
    [NullableContextAttribute("0")]
protected abstract virtual ValueTask`1<bool> MoveNextCore();
    public virtual IAsyncEnumerable`1<TResult> Select(Func`2<TSource, TResult> selector);
    public virtual IAsyncEnumerable`1<TResult> Select(Func`2<TSource, ValueTask`1<TResult>> selector);
    public virtual IAsyncEnumerable`1<TResult> Select(Func`3<TSource, CancellationToken, ValueTask`1<TResult>> selector);
    public virtual IAsyncEnumerable`1<TSource> Where(Func`2<TSource, bool> predicate);
    public virtual IAsyncEnumerable`1<TSource> Where(Func`2<TSource, ValueTask`1<bool>> predicate);
    public virtual IAsyncEnumerable`1<TSource> Where(Func`3<TSource, CancellationToken, ValueTask`1<bool>> predicate);
}
internal enum System.Linq.AsyncIteratorState : Enum {
    public int value__;
    public static AsyncIteratorState New;
    public static AsyncIteratorState Allocated;
    public static AsyncIteratorState Iterating;
    public static AsyncIteratorState Disposed;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.AsyncKeySelectorAsyncEnumerableSorter`2 : AsyncEnumerableSorterBase`2<TElement, TKey> {
    public AsyncKeySelectorAsyncEnumerableSorter`2(Func`2<TElement, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending, AsyncEnumerableSorter`1<TElement> next);
    [AsyncStateMachineAttribute("System.Linq.AsyncKeySelectorAsyncEnumerableSorter`2/<ComputeKeys>d__2")]
internal virtual ValueTask ComputeKeys(TElement[] elements, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.AsyncKeySelectorAsyncEnumerableSorterWithCancellation`2 : AsyncEnumerableSorterBase`2<TElement, TKey> {
    public AsyncKeySelectorAsyncEnumerableSorterWithCancellation`2(Func`3<TElement, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending, AsyncEnumerableSorter`1<TElement> next, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.AsyncKeySelectorAsyncEnumerableSorterWithCancellation`2/<ComputeKeys>d__3")]
internal virtual ValueTask ComputeKeys(TElement[] elements, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.AsyncListPartition`1 : AsyncIterator`1<TSource> {
    public AsyncListPartition`1(IList`1<TSource> source, int minIndexInclusive, int maxIndexInclusive);
    public virtual AsyncIteratorBase`1<TSource> Clone();
    [NullableContextAttribute("0")]
protected virtual ValueTask`1<bool> MoveNextCore();
    public sealed virtual IAsyncPartition`1<TSource> Skip(int count);
    public sealed virtual IAsyncPartition`1<TSource> Take(int count);
    public sealed virtual ValueTask`1<Maybe`1<TSource>> TryGetElementAtAsync(int index, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<Maybe`1<TSource>> TryGetFirstAsync(CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<Maybe`1<TSource>> TryGetLastAsync(CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<TSource[]> ToArrayAsync(CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<List`1<TSource>> ToListAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public sealed virtual ValueTask`1<int> GetCountAsync(bool onlyIfCheap, CancellationToken cancellationToken);
}
internal class System.Linq.BinaryDisposable : object {
    [NullableContextAttribute("1")]
public BinaryDisposable(IDisposable d1, IDisposable d2);
    public sealed virtual void Dispose();
}
internal class System.Linq.CancellationTokenDisposable : object {
    public CancellationToken Token { get; }
    public CancellationToken get_Token();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class System.Linq.Disposable : object {
    public static IDisposable Create(IDisposable d1, IDisposable d2);
    public static IDisposable Create(Action action);
}
[AttributeUsageAttribute("64")]
[ConditionalAttribute("COMPILE_TIME_ONLY")]
internal class System.Linq.GenerateAsyncOverloadAttribute : Attribute {
}
[NullableContextAttribute("1")]
public interface System.Linq.IAsyncGrouping`2 {
    public TKey Key { get; }
    public abstract virtual TKey get_Key();
}
public interface System.Linq.IAsyncIListProvider`1 {
    public abstract virtual ValueTask`1<TElement[]> ToArrayAsync(CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<List`1<TElement>> ToListAsync(CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<int> GetCountAsync(bool onlyIfCheap, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
internal interface System.Linq.IAsyncPartition`1 {
    public abstract virtual IAsyncPartition`1<TElement> Skip(int count);
    public abstract virtual IAsyncPartition`1<TElement> Take(int count);
    public abstract virtual ValueTask`1<Maybe`1<TElement>> TryGetElementAtAsync(int index, CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<Maybe`1<TElement>> TryGetFirstAsync(CancellationToken cancellationToken);
    public abstract virtual ValueTask`1<Maybe`1<TElement>> TryGetLastAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Linq.Internal.Grouping`2 : object {
    public TKey Key { get; }
    private int System.Collections.Generic.ICollection<TElement>.Count { get; }
    private bool System.Collections.Generic.ICollection<TElement>.IsReadOnly { get; }
    private TElement System.Collections.Generic.IList<TElement>.Item { get; private set; }
    public Grouping`2(TKey key, int hashCode, TElement[] elements, Grouping`2<TKey, TElement> hashNext);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [IteratorStateMachineAttribute("System.Linq.Internal.Grouping`2/<GetEnumerator>d__8")]
public sealed virtual IEnumerator`1<TElement> GetEnumerator();
    public sealed virtual TKey get_Key();
    private sealed virtual override int System.Collections.Generic.ICollection<TElement>.get_Count();
    private sealed virtual override bool System.Collections.Generic.ICollection<TElement>.get_IsReadOnly();
    private sealed virtual override void System.Collections.Generic.ICollection<TElement>.Add(TElement item);
    private sealed virtual override void System.Collections.Generic.ICollection<TElement>.Clear();
    private sealed virtual override bool System.Collections.Generic.ICollection<TElement>.Contains(TElement item);
    private sealed virtual override void System.Collections.Generic.ICollection<TElement>.CopyTo(TElement[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.Generic.ICollection<TElement>.Remove(TElement item);
    private sealed virtual override int System.Collections.Generic.IList<TElement>.IndexOf(TElement item);
    private sealed virtual override void System.Collections.Generic.IList<TElement>.Insert(int index, TElement item);
    private sealed virtual override void System.Collections.Generic.IList<TElement>.RemoveAt(int index);
    private sealed virtual override TElement System.Collections.Generic.IList<TElement>.get_Item(int index);
    private sealed virtual override void System.Collections.Generic.IList<TElement>.set_Item(int index, TElement value);
    private sealed virtual override IAsyncEnumerator`1<TElement> System.Collections.Generic.IAsyncEnumerable<TElement>.GetAsyncEnumerator(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class System.Linq.Internal.Lookup`2 : object {
    public int Count { get; }
    public IEnumerable`1<TElement> Item { get; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Count();
    public sealed virtual IEnumerable`1<TElement> get_Item(TKey key);
    public sealed virtual bool Contains(TKey key);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [IteratorStateMachineAttribute("System.Linq.Internal.Lookup`2/<GetEnumerator>d__12")]
public sealed virtual IEnumerator`1<IGrouping`2<TKey, TElement>> GetEnumerator();
    [IteratorStateMachineAttribute("System.Linq.Internal.Lookup`2/<ApplyResultSelector>d__13`1")]
public IEnumerable`1<TResult> ApplyResultSelector(Func`3<TKey, IAsyncEnumerable`1<TElement>, TResult> resultSelector);
    [NullableContextAttribute("0")]
public sealed virtual ValueTask`1<int> GetCountAsync(bool onlyIfCheap, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerator`1<IAsyncGrouping`2<TKey, TElement>> System.Collections.Generic.IAsyncEnumerable<System.Linq.IAsyncGrouping<TKey,TElement>>.GetAsyncEnumerator(CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<List`1<IAsyncGrouping`2<TKey, TElement>>> System.Linq.IAsyncIListProvider<System.Linq.IAsyncGrouping<TKey,TElement>>.ToListAsync(CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<IAsyncGrouping`2[]> System.Linq.IAsyncIListProvider<System.Linq.IAsyncGrouping<TKey,TElement>>.ToArrayAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class System.Linq.Internal.LookupWithTask`2 : object {
    public int Count { get; }
    public IEnumerable`1<TElement> Item { get; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Count();
    public sealed virtual IEnumerable`1<TElement> get_Item(TKey key);
    public sealed virtual bool Contains(TKey key);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [IteratorStateMachineAttribute("System.Linq.Internal.LookupWithTask`2/<GetEnumerator>d__12")]
public sealed virtual IEnumerator`1<IGrouping`2<TKey, TElement>> GetEnumerator();
    [NullableContextAttribute("0")]
public sealed virtual ValueTask`1<int> GetCountAsync(bool onlyIfCheap, CancellationToken cancellationToken);
    private sealed virtual override IAsyncEnumerator`1<IAsyncGrouping`2<TKey, TElement>> System.Collections.Generic.IAsyncEnumerable<System.Linq.IAsyncGrouping<TKey,TElement>>.GetAsyncEnumerator(CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<List`1<IAsyncGrouping`2<TKey, TElement>>> System.Linq.IAsyncIListProvider<System.Linq.IAsyncGrouping<TKey,TElement>>.ToListAsync(CancellationToken cancellationToken);
    private sealed virtual override ValueTask`1<IAsyncGrouping`2[]> System.Linq.IAsyncIListProvider<System.Linq.IAsyncGrouping<TKey,TElement>>.ToArrayAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface System.Linq.IOrderedAsyncEnumerable`1 {
    public abstract virtual IOrderedAsyncEnumerable`1<TElement> CreateOrderedEnumerable(Func`2<TElement, TKey> keySelector, IComparer`1<TKey> comparer, bool descending);
    public abstract virtual IOrderedAsyncEnumerable`1<TElement> CreateOrderedEnumerable(Func`2<TElement, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending);
    public abstract virtual IOrderedAsyncEnumerable`1<TElement> CreateOrderedEnumerable(Func`3<TElement, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class System.Linq.Maybe`1 : ValueType {
    [CompilerGeneratedAttribute]
private bool <HasValue>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public bool HasValue { get; }
    public T Value { get; }
    public Maybe`1(T value);
    [CompilerGeneratedAttribute]
public bool get_HasValue();
    [CompilerGeneratedAttribute]
public T get_Value();
    public sealed virtual bool Equals(Maybe`1<T> other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object other);
    public virtual int GetHashCode();
    public static bool op_Equality(Maybe`1<T> first, Maybe`1<T> second);
    public static bool op_Inequality(Maybe`1<T> first, Maybe`1<T> second);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class System.Linq.OrderedAsyncEnumerable`1 : AsyncIterator`1<TElement> {
    protected IAsyncEnumerable`1<TElement> _source;
    protected OrderedAsyncEnumerable`1(IAsyncEnumerable`1<TElement> source);
    private sealed virtual override IOrderedAsyncEnumerable`1<TElement> System.Linq.IOrderedAsyncEnumerable<TElement>.CreateOrderedEnumerable(Func`2<TElement, TKey> keySelector, IComparer`1<TKey> comparer, bool descending);
    private sealed virtual override IOrderedAsyncEnumerable`1<TElement> System.Linq.IOrderedAsyncEnumerable<TElement>.CreateOrderedEnumerable(Func`2<TElement, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending);
    private sealed virtual override IOrderedAsyncEnumerable`1<TElement> System.Linq.IOrderedAsyncEnumerable<TElement>.CreateOrderedEnumerable(Func`3<TElement, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.OrderedAsyncEnumerable`1/<MoveNextCore>d__8")]
protected virtual ValueTask`1<bool> MoveNextCore();
    [AsyncStateMachineAttribute("System.Linq.OrderedAsyncEnumerable`1/<DisposeAsync>d__9")]
public virtual ValueTask DisposeAsync();
    internal abstract virtual AsyncEnumerableSorter`1<TElement> GetAsyncEnumerableSorter(AsyncEnumerableSorter`1<TElement> next, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.OrderedAsyncEnumerable`1/<ToArrayAsync>d__12")]
public sealed virtual ValueTask`1<TElement[]> ToArrayAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.OrderedAsyncEnumerable`1/<ToListAsync>d__14")]
public sealed virtual ValueTask`1<List`1<TElement>> ToListAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.OrderedAsyncEnumerable`1/<GetCountAsync>d__16")]
public sealed virtual ValueTask`1<int> GetCountAsync(bool onlyIfCheap, CancellationToken cancellationToken);
    internal abstract virtual AsyncCachingComparer`1<TElement> GetComparer(AsyncCachingComparer`1<TElement> childComparer);
    [AsyncStateMachineAttribute("System.Linq.OrderedAsyncEnumerable`1/<TryGetFirstAsync>d__22")]
public sealed virtual ValueTask`1<Maybe`1<TElement>> TryGetFirstAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Linq.OrderedAsyncEnumerable`1/<TryGetLastAsync>d__23")]
public sealed virtual ValueTask`1<Maybe`1<TElement>> TryGetLastAsync(CancellationToken cancellationToken);
    public sealed virtual IAsyncPartition`1<TElement> Skip(int count);
    public sealed virtual IAsyncPartition`1<TElement> Take(int count);
    public sealed virtual ValueTask`1<Maybe`1<TElement>> TryGetElementAtAsync(int index, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.OrderedAsyncEnumerable`2 : OrderedAsyncEnumerable`1<TElement> {
    public OrderedAsyncEnumerable`2(IAsyncEnumerable`1<TElement> source, Func`2<TElement, TKey> keySelector, IComparer`1<TKey> comparer, bool descending, OrderedAsyncEnumerable`1<TElement> parent);
    public virtual AsyncIteratorBase`1<TElement> Clone();
    internal virtual AsyncEnumerableSorter`1<TElement> GetAsyncEnumerableSorter(AsyncEnumerableSorter`1<TElement> next, CancellationToken cancellationToken);
    internal virtual AsyncCachingComparer`1<TElement> GetComparer(AsyncCachingComparer`1<TElement> childComparer);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.OrderedAsyncEnumerableWithTask`2 : OrderedAsyncEnumerable`1<TElement> {
    public OrderedAsyncEnumerableWithTask`2(IAsyncEnumerable`1<TElement> source, Func`2<TElement, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending, OrderedAsyncEnumerable`1<TElement> parent);
    public virtual AsyncIteratorBase`1<TElement> Clone();
    internal virtual AsyncEnumerableSorter`1<TElement> GetAsyncEnumerableSorter(AsyncEnumerableSorter`1<TElement> next, CancellationToken cancellationToken);
    internal virtual AsyncCachingComparer`1<TElement> GetComparer(AsyncCachingComparer`1<TElement> childComparer);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.OrderedAsyncEnumerableWithTaskAndCancellation`2 : OrderedAsyncEnumerable`1<TElement> {
    public OrderedAsyncEnumerableWithTaskAndCancellation`2(IAsyncEnumerable`1<TElement> source, Func`3<TElement, CancellationToken, ValueTask`1<TKey>> keySelector, IComparer`1<TKey> comparer, bool descending, OrderedAsyncEnumerable`1<TElement> parent);
    public virtual AsyncIteratorBase`1<TElement> Clone();
    internal virtual AsyncEnumerableSorter`1<TElement> GetAsyncEnumerableSorter(AsyncEnumerableSorter`1<TElement> next, CancellationToken cancellationToken);
    internal virtual AsyncCachingComparer`1<TElement> GetComparer(AsyncCachingComparer`1<TElement> childComparer);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.OrderedAsyncPartition`1 : AsyncIterator`1<TElement> {
    public OrderedAsyncPartition`1(OrderedAsyncEnumerable`1<TElement> source, int minIndexInclusive, int maxIndexInclusive);
    public virtual AsyncIteratorBase`1<TElement> Clone();
    [NullableContextAttribute("0")]
public sealed virtual ValueTask`1<int> GetCountAsync(bool onlyIfCheap, CancellationToken cancellationToken);
    public sealed virtual IAsyncPartition`1<TElement> Skip(int count);
    public sealed virtual IAsyncPartition`1<TElement> Take(int count);
    public sealed virtual ValueTask`1<TElement[]> ToArrayAsync(CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<List`1<TElement>> ToListAsync(CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<Maybe`1<TElement>> TryGetElementAtAsync(int index, CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<Maybe`1<TElement>> TryGetFirstAsync(CancellationToken cancellationToken);
    public sealed virtual ValueTask`1<Maybe`1<TElement>> TryGetLastAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("System.Linq.OrderedAsyncPartition`1/<MoveNextCore>d__17")]
protected virtual ValueTask`1<bool> MoveNextCore();
    [AsyncStateMachineAttribute("System.Linq.OrderedAsyncPartition`1/<DisposeAsync>d__18")]
public virtual ValueTask DisposeAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Linq.Set`1 : object {
    public Set`1(IEqualityComparer`1<TElement> comparer);
    public bool Add(TElement value);
    public bool Remove(TElement value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Linq.SingleLinkedNode`1 : object {
    public TSource Item { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public SingleLinkedNode`1<TSource> Linked { get; }
    public SingleLinkedNode`1(TSource item);
    [CompilerGeneratedAttribute]
public TSource get_Item();
    [CompilerGeneratedAttribute]
public SingleLinkedNode`1<TSource> get_Linked();
    public SingleLinkedNode`1<TSource> Add(TSource item);
    public int GetCount();
    public IEnumerator`1<TSource> GetEnumerator(int count);
    public SingleLinkedNode`1<TSource> GetNode(int index);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class System.Linq.SyncKeySelectorAsyncEnumerableSorter`2 : AsyncEnumerableSorterBase`2<TElement, TKey> {
    public SyncKeySelectorAsyncEnumerableSorter`2(Func`2<TElement, TKey> keySelector, IComparer`1<TKey> comparer, bool descending, AsyncEnumerableSorter`1<TElement> next);
    [AsyncStateMachineAttribute("System.Linq.SyncKeySelectorAsyncEnumerableSorter`2/<ComputeKeys>d__2")]
internal virtual ValueTask ComputeKeys(TElement[] elements, int count);
}
[ExtensionAttribute]
internal static class System.Linq.Utilities : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("System.Linq.Utilities/<AddRangeAsync>d__0`1")]
[ExtensionAttribute]
public static ValueTask AddRangeAsync(List`1<T> list, IAsyncEnumerable`1<T> collection, CancellationToken cancellationToken);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class System.Strings : object {
    public static string NO_ELEMENTS;
    public static string MORE_THAN_ONE_ELEMENT;
    public static string NOT_SUPPORTED;
}
[ExtensionAttribute]
internal static class System.Threading.Tasks.AsyncEnumerableExt : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Enumerator<T> GetConfiguredAsyncEnumerator(IAsyncEnumerable`1<T> enumerable, CancellationToken cancellationToken, bool continueOnCapturedContext);
}
internal static class System.Threading.Tasks.TaskExt : object {
    [NullableAttribute("1")]
public static TaskCompletionSource`1<bool> True;
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.4.255.64262")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
}
