internal static class FxResources.System.Resources.Extensions.SR : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[ExtensionAttribute]
internal static class System.IO.BinaryReaderExtensions : object {
    [ExtensionAttribute]
public static int Read7BitEncodedInt(BinaryReader reader);
}
[ExtensionAttribute]
internal static class System.IO.BinaryWriterExtensions : object {
    [ExtensionAttribute]
public static void Write7BitEncodedInt(BinaryWriter writer, int value);
}
internal class System.IO.PinnedBufferMemoryStream : UnmanagedMemoryStream {
    private Byte[] _array;
    private GCHandle _pinningHandle;
    internal PinnedBufferMemoryStream(Byte[] array);
    protected virtual override void Finalize();
    protected virtual void Dispose(bool disposing);
}
internal static class System.Numerics.Hashing.HashHelpers : object {
    public static int Combine(int h1, int h2);
}
internal static class System.Obsoletions : object {
    internal static string SharedUrlFormat;
    internal static string SystemTextEncodingUTF7Message;
    internal static string SystemTextEncodingUTF7DiagId;
    internal static string PrincipalPermissionAttributeMessage;
    internal static string PrincipalPermissionAttributeDiagId;
    internal static string CodeAccessSecurityMessage;
    internal static string CodeAccessSecurityDiagId;
    internal static string ConstrainedExecutionRegionMessage;
    internal static string ConstrainedExecutionRegionDiagId;
    internal static string GlobalAssemblyCacheMessage;
    internal static string GlobalAssemblyCacheDiagId;
    internal static string ThreadAbortMessage;
    internal static string ThreadResetAbortMessage;
    internal static string ThreadAbortDiagId;
    internal static string DefaultCryptoAlgorithmsMessage;
    internal static string DefaultCryptoAlgorithmsDiagId;
    internal static string CreatePdbGeneratorMessage;
    internal static string CreatePdbGeneratorDiagId;
    internal static string AuthenticationManagerMessage;
    internal static string AuthenticationManagerDiagId;
    internal static string RemotingApisMessage;
    internal static string RemotingApisDiagId;
    internal static string BinaryFormatterMessage;
    internal static string BinaryFormatterDiagId;
    internal static string CodeBaseMessage;
    internal static string CodeBaseDiagId;
    internal static string EscapeUriStringMessage;
    internal static string EscapeUriStringDiagId;
    internal static string WebRequestMessage;
    internal static string WebRequestDiagId;
    internal static string DisablePrivateReflectionAttributeMessage;
    internal static string DisablePrivateReflectionAttributeDiagId;
    internal static string GetContextInfoMessage;
    internal static string GetContextInfoDiagId;
    internal static string StrongNameKeyPairMessage;
    internal static string StrongNameKeyPairDiagId;
    internal static string ReflectionOnlyLoadingMessage;
    internal static string ReflectionOnlyLoadingDiagId;
    internal static string RuntimeEnvironmentMessage;
    internal static string RuntimeEnvironmentDiagId;
    internal static string JsonSerializerOptionsIgnoreNullValuesMessage;
    internal static string JsonSerializerOptionsIgnoreNullValuesDiagId;
    internal static string DerivedCryptographicTypesMessage;
    internal static string DerivedCryptographicTypesDiagId;
    internal static string RijndaelMessage;
    internal static string RijndaelDiagId;
    internal static string RNGCryptoServiceProviderMessage;
    internal static string RNGCryptoServiceProviderDiagId;
    internal static string AppDomainCreateUnloadMessage;
    internal static string AppDomainCreateUnloadDiagId;
    internal static string SuppressIldasmAttributeMessage;
    internal static string SuppressIldasmAttributeDiagId;
    internal static string X509CertificateImmutableMessage;
    internal static string X509CertificateImmutableDiagId;
    internal static string PublicKeyPropertyMessage;
    internal static string PublicKeyPropertyDiagId;
    internal static string X509CertificatePrivateKeyMessage;
    internal static string X509CertificatePrivateKeyDiagId;
    internal static string ProduceLegacyHmacValuesMessage;
    internal static string ProduceLegacyHmacValuesDiagId;
    internal static string UseManagedSha1Message;
    internal static string UseManagedSha1DiagId;
    internal static string CryptoConfigEncodeOIDMessage;
    internal static string CryptoConfigEncodeOIDDiagId;
    internal static string CorruptedStateRecoveryMessage;
    internal static string CorruptedStateRecoveryDiagId;
    internal static string Rfc2898CryptDeriveKeyMessage;
    internal static string Rfc2898CryptDeriveKeyDiagId;
    internal static string CmsSignerCspParamsCtorMessage;
    internal static string CmsSignerCspParamsCtorDiagId;
    internal static string SignerInfoCounterSigMessage;
    internal static string SignerInfoCounterSigDiagId;
    internal static string RegexCompileToAssemblyMessage;
    internal static string RegexCompileToAssemblyDiagId;
    internal static string AssemblyNameMembersMessage;
    internal static string AssemblyNameMembersDiagId;
    internal static string SystemDataSerializationFormatBinaryMessage;
    internal static string SystemDataSerializationFormatBinaryDiagId;
    internal static string TlsVersion10and11Message;
    internal static string TlsVersion10and11DiagId;
    internal static string EncryptionPolicyMessage;
    internal static string EncryptionPolicyDiagId;
    internal static string Rfc2898OutdatedCtorMessage;
    internal static string Rfc2898OutdatedCtorDiagId;
    internal static string EccXmlExportImportMessage;
    internal static string EccXmlExportImportDiagId;
    internal static string EcDhPublicKeyBlobMessage;
    internal static string EcDhPublicKeyBlobDiagId;
    internal static string AssemblyNameCodeBaseMessage;
    internal static string AssemblyNameCodeBaseDiagId;
    internal static string CryptoStringFactoryMessage;
    internal static string CryptoStringFactoryDiagId;
    internal static string ControlledExecutionRunMessage;
    internal static string ControlledExecutionRunDiagId;
    internal static string XmlSecureResolverMessage;
    internal static string XmlSecureResolverDiagId;
    internal static string RsaEncryptDecryptValueMessage;
    internal static string RsaEncryptDecryptDiagId;
    internal static string JsonSerializerOptionsAddContextMessage;
    internal static string JsonSerializerOptionsAddContextDiagId;
    internal static string LegacyFormatterMessage;
    internal static string LegacyFormatterDiagId;
    internal static string LegacyFormatterImplMessage;
    internal static string LegacyFormatterImplDiagId;
    internal static string RegexExtensibilityImplMessage;
    internal static string RegexExtensibilityDiagId;
    internal static string AesGcmTagConstructorMessage;
    internal static string AesGcmTagConstructorDiagId;
}
public class System.Resources.Extensions.DeserializingResourceReader : object {
    private static int DefaultFileStreamBufferSize;
    private BinaryReader _store;
    internal Dictionary`2<string, ResourceLocator> _resCache;
    private long _nameSectionOffset;
    private long _dataSectionOffset;
    private Int32[] _nameHashes;
    private Int32* _nameHashesPtr;
    private Int32[] _namePositions;
    private Int32* _namePositionsPtr;
    private Type[] _typeTable;
    private Int32[] _typeNamePositions;
    private int _numResources;
    private UnmanagedMemoryStream _ums;
    private int _version;
    [CompilerGeneratedAttribute]
private static bool <AllowCustomResourceTypes>k__BackingField;
    private bool _assumeBinaryFormatter;
    private BinaryFormatter _formatter;
    internal static bool AllowCustomResourceTypes { get; }
    [NullableContextAttribute("1")]
public DeserializingResourceReader(string fileName);
    [NullableContextAttribute("1")]
public DeserializingResourceReader(Stream stream);
    private static DeserializingResourceReader();
    [CompilerGeneratedAttribute]
internal static bool get_AllowCustomResourceTypes();
    public sealed virtual void Close();
    public sealed virtual void Dispose();
    private void Dispose(bool disposing);
    private static int ReadUnalignedI4(Int32* p);
    private void SkipString();
    private int GetNameHash(int index);
    private int GetNamePosition(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [NullableContextAttribute("1")]
public sealed virtual IDictionaryEnumerator GetEnumerator();
    internal ResourceEnumerator GetEnumeratorInternal();
    internal int FindPosForResource(string name);
    private bool CompareStringEqualsName(string name);
    private string AllocateStringForNameIndex(int index, Int32& dataOffset);
    private object GetValueForNameIndex(int index);
    internal string LoadString(int pos);
    internal object LoadObject(int pos);
    internal object LoadObject(int pos, ResourceTypeCode& typeCode);
    private object LoadObjectV1(int pos);
    private object _LoadObjectV1(int pos);
    private object LoadObjectV2(int pos, ResourceTypeCode& typeCode);
    private object _LoadObjectV2(int pos, ResourceTypeCode& typeCode);
    [MemberNotNullAttribute("_typeTable")]
[MemberNotNullAttribute("_typeNamePositions")]
private void ReadResources();
    [MemberNotNullAttribute("_typeTable")]
[MemberNotNullAttribute("_typeNamePositions")]
private void _ReadResources();
    private Type FindType(int typeIndex);
    [RequiresUnreferencedCodeAttribute("The CustomResourceTypesSupport feature switch has been enabled for this app which is being trimmed. Custom readers as well as custom objects on the resources file are not observable by the trimmer and so required assemblies, types and members may be removed.")]
private Type UseReflectionToGetType(int typeIndex);
    private string TypeNameFromTypeCode(ResourceTypeCode typeCode);
    private bool ValidateReaderType(string readerType);
    private object ReadBinaryFormattedObject();
    private object DeserializeObject(int typeIndex);
    [CompilerGeneratedAttribute]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
private Type <FindType>g__UseReflectionToGetTypeLocal|42_0(int typeIndex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Resources.Extensions.PreserializedResourceWriter : object {
    private static int AverageNameSize;
    internal static string ResourceReaderFullyQualifiedName;
    private static string ResSetTypeName;
    private static int ResSetVersion;
    private SortedDictionary`2<string, object> _resourceList;
    private Stream _output;
    private Dictionary`2<string, object> _caseInsensitiveDups;
    private Dictionary`2<string, PrecannedResource> _preserializedData;
    private bool _requiresDeserializingResourceReader;
    internal static string DeserializingResourceReaderFullyQualifiedName;
    internal static string RuntimeResourceSetFullyQualifiedName;
    private static string UnknownObjectTypeName;
    private static Dictionary`2<string, Type> s_primitiveTypes;
    private string ResourceReaderTypeName { get; }
    private string ResourceSetTypeName { get; }
    public PreserializedResourceWriter(string fileName);
    public PreserializedResourceWriter(Stream stream);
    private static PreserializedResourceWriter();
    public sealed virtual void AddResource(string name, string value);
    public sealed virtual void AddResource(string name, object value);
    public void AddResource(string name, Stream value, bool closeAfterWrite);
    private void AddResourceInternal(string name, Stream value, bool closeAfterWrite);
    public sealed virtual void AddResource(string name, Byte[] value);
    private void AddResourceData(string name, string typeName, object data);
    public sealed virtual void Close();
    private void Dispose(bool disposing);
    public sealed virtual void Dispose();
    public sealed virtual void Generate();
    private static ResourceTypeCode FindTypeCode(object value, List`1<string> types);
    private static void WriteValue(ResourceTypeCode typeCode, object value, BinaryWriter writer);
    private string get_ResourceReaderTypeName();
    private string get_ResourceSetTypeName();
    public void AddResource(string name, string value, string typeName);
    public void AddTypeConverterResource(string name, Byte[] value, string typeName);
    [ObsoleteAttribute("BinaryFormatter serialization is obsolete and should not be used. See https://aka.ms/binaryformatter for more information.")]
public void AddBinaryFormattedResource(string name, Byte[] value, string typeName);
    public void AddActivatorResource(string name, Stream value, string typeName, bool closeAfterWrite);
    private void WriteData(BinaryWriter writer, object dataContext);
}
[IsReadOnlyAttribute]
internal class System.Resources.Extensions.ResourceLocator : ValueType {
    [CompilerGeneratedAttribute]
private int <DataPosition>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    internal int DataPosition { get; }
    internal object Value { get; }
    internal ResourceLocator(int dataPos, object value);
    [CompilerGeneratedAttribute]
internal int get_DataPosition();
    [CompilerGeneratedAttribute]
internal object get_Value();
    internal static bool CanCache(ResourceTypeCode value);
}
internal class System.Resources.Extensions.RuntimeResourceSet : ResourceSet {
    private Dictionary`2<string, ResourceLocator> _resCache;
    private DeserializingResourceReader _defaultReader;
    private Dictionary`2<string, ResourceLocator> _caseInsensitiveTable;
    internal RuntimeResourceSet(IResourceReader reader);
    protected virtual void Dispose(bool disposing);
    public virtual IDictionaryEnumerator GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private IDictionaryEnumerator GetEnumeratorHelper();
    public virtual string GetString(string key);
    public virtual string GetString(string key, bool ignoreCase);
    public virtual object GetObject(string key);
    public virtual object GetObject(string key, bool ignoreCase);
    private object GetObject(string key, bool ignoreCase, bool isString);
    private static object ReadValue(DeserializingResourceReader reader, int dataPos, bool isString, ResourceLocator& locator);
}
internal enum System.Resources.Extensions.SerializationFormat : Enum {
    public int value__;
    public static SerializationFormat BinaryFormatter;
    public static SerializationFormat TypeConverterByteArray;
    public static SerializationFormat TypeConverterString;
    public static SerializationFormat ActivatorStream;
}
internal class System.Resources.Extensions.TypeNameComparer : object {
    [CompilerGeneratedAttribute]
private static TypeNameComparer <Instance>k__BackingField;
    private static Char[] s_whiteSpaceChars;
    public static TypeNameComparer Instance { get; }
    private static TypeNameComparer();
    [CompilerGeneratedAttribute]
public static TypeNameComparer get_Instance();
    private static ReadOnlySpan`1<char> ReadTypeName(ReadOnlySpan`1<char> assemblyQualifiedTypeName);
    private static ReadOnlySpan`1<char> ReadAssemblySimpleName(ReadOnlySpan`1<char> assemblyName);
    private static bool IsMscorlib(ReadOnlySpan`1<char> assemblyName);
    public sealed virtual bool Equals(string assemblyQualifiedTypeName1, string assemblyQualifiedTypeName2);
    public sealed virtual int GetHashCode(string assemblyQualifiedTypeName);
}
internal class System.Resources.Extensions.UnknownType : object {
}
internal class System.Resources.FastResourceComparer : object {
    internal static FastResourceComparer Default;
    private static FastResourceComparer();
    public sealed virtual int GetHashCode(object key);
    public sealed virtual int GetHashCode(string key);
    internal static int HashFunction(string key);
    public sealed virtual int Compare(object a, object b);
    public sealed virtual int Compare(string a, string b);
    public sealed virtual bool Equals(string a, string b);
    public sealed virtual bool Equals(object a, object b);
    public static int CompareOrdinal(string a, Byte[] bytes, int bCharLength);
    public static int CompareOrdinal(Byte[] bytes, int aCharLength, string b);
    internal static int CompareOrdinal(Byte* a, int byteLen, string b);
}
internal enum System.Resources.ResourceTypeCode : Enum {
    public int value__;
    public static ResourceTypeCode Null;
    public static ResourceTypeCode String;
    public static ResourceTypeCode Boolean;
    public static ResourceTypeCode Char;
    public static ResourceTypeCode Byte;
    public static ResourceTypeCode SByte;
    public static ResourceTypeCode Int16;
    public static ResourceTypeCode UInt16;
    public static ResourceTypeCode Int32;
    public static ResourceTypeCode UInt32;
    public static ResourceTypeCode Int64;
    public static ResourceTypeCode UInt64;
    public static ResourceTypeCode Single;
    public static ResourceTypeCode Double;
    public static ResourceTypeCode Decimal;
    public static ResourceTypeCode DateTime;
    public static ResourceTypeCode TimeSpan;
    public static ResourceTypeCode LastPrimitive;
    public static ResourceTypeCode ByteArray;
    public static ResourceTypeCode Stream;
    public static ResourceTypeCode StartOfUserTypes;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string ArgumentOutOfRange_StreamLength { get; }
    internal static string Argument_StreamNotReadable { get; }
    internal static string Argument_StreamNotWritable { get; }
    internal static string Arg_ResourceFileUnsupportedVersion { get; }
    internal static string BadImageFormat_InvalidType { get; }
    internal static string BadImageFormat_NegativeStringLength { get; }
    internal static string BadImageFormat_ResourceDataLengthInvalid { get; }
    internal static string BadImageFormat_ResourceNameCorrupted { get; }
    internal static string BadImageFormat_ResourceNameCorrupted_NameIndex { get; }
    internal static string BadImageFormat_ResourcesDataInvalidOffset { get; }
    internal static string BadImageFormat_ResourcesHeaderCorrupted { get; }
    internal static string BadImageFormat_ResourcesIndexTooLong { get; }
    internal static string BadImageFormat_ResourcesNameInvalidOffset { get; }
    internal static string BadImageFormat_ResourcesNameTooLong { get; }
    internal static string BadImageFormat_ResType_SerBlobMismatch { get; }
    internal static string BadImageFormat_TypeMismatch { get; }
    internal static string Format_Bad7BitInt32 { get; }
    internal static string InvalidOperation_EnumEnded { get; }
    internal static string InvalidOperation_EnumNotStarted { get; }
    internal static string InvalidOperation_ResourceNotString_Type { get; }
    internal static string InvalidOperation_ResourceWriterSaved { get; }
    internal static string NotSupported_BinarySerializedResources { get; }
    internal static string NotSupported_ResourceObjectSerialization { get; }
    internal static string NotSupported_UnseekableStream { get; }
    internal static string NotSupported_WrongResourceReader_Type { get; }
    internal static string ObjectDisposed_ResourceSet { get; }
    internal static string ResourceManager_ReflectionNotAllowed { get; }
    internal static string ResourceReaderIsClosed { get; }
    internal static string Resources_StreamNotValid { get; }
    internal static string TypeLoadException_CannotLoadConverter { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_ArgumentOutOfRange_StreamLength();
    internal static string get_Argument_StreamNotReadable();
    internal static string get_Argument_StreamNotWritable();
    internal static string get_Arg_ResourceFileUnsupportedVersion();
    internal static string get_BadImageFormat_InvalidType();
    internal static string get_BadImageFormat_NegativeStringLength();
    internal static string get_BadImageFormat_ResourceDataLengthInvalid();
    internal static string get_BadImageFormat_ResourceNameCorrupted();
    internal static string get_BadImageFormat_ResourceNameCorrupted_NameIndex();
    internal static string get_BadImageFormat_ResourcesDataInvalidOffset();
    internal static string get_BadImageFormat_ResourcesHeaderCorrupted();
    internal static string get_BadImageFormat_ResourcesIndexTooLong();
    internal static string get_BadImageFormat_ResourcesNameInvalidOffset();
    internal static string get_BadImageFormat_ResourcesNameTooLong();
    internal static string get_BadImageFormat_ResType_SerBlobMismatch();
    internal static string get_BadImageFormat_TypeMismatch();
    internal static string get_Format_Bad7BitInt32();
    internal static string get_InvalidOperation_EnumEnded();
    internal static string get_InvalidOperation_EnumNotStarted();
    internal static string get_InvalidOperation_ResourceNotString_Type();
    internal static string get_InvalidOperation_ResourceWriterSaved();
    internal static string get_NotSupported_BinarySerializedResources();
    internal static string get_NotSupported_ResourceObjectSerialization();
    internal static string get_NotSupported_UnseekableStream();
    internal static string get_NotSupported_WrongResourceReader_Type();
    internal static string get_ObjectDisposed_ResourceSet();
    internal static string get_ResourceManager_ReflectionNotAllowed();
    internal static string get_ResourceReaderIsClosed();
    internal static string get_Resources_StreamNotValid();
    internal static string get_TypeLoadException_CannotLoadConverter();
}
