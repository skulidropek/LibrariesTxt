internal static class FxResources.System.ServiceModel.Syndication.SR : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("64")]
internal class System.Runtime.InteropServices.LibraryImportAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <LibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntryPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private StringMarshalling <StringMarshalling>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <StringMarshallingCustomType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetLastError>k__BackingField;
    public string LibraryName { get; }
    public string EntryPoint { get; public set; }
    public StringMarshalling StringMarshalling { get; public set; }
    public Type StringMarshallingCustomType { get; public set; }
    public bool SetLastError { get; public set; }
    public LibraryImportAttribute(string libraryName);
    [CompilerGeneratedAttribute]
public string get_LibraryName();
    [CompilerGeneratedAttribute]
public string get_EntryPoint();
    [CompilerGeneratedAttribute]
public void set_EntryPoint(string value);
    [CompilerGeneratedAttribute]
public StringMarshalling get_StringMarshalling();
    [CompilerGeneratedAttribute]
public void set_StringMarshalling(StringMarshalling value);
    [CompilerGeneratedAttribute]
public Type get_StringMarshallingCustomType();
    [CompilerGeneratedAttribute]
public void set_StringMarshallingCustomType(Type value);
    [CompilerGeneratedAttribute]
public bool get_SetLastError();
    [CompilerGeneratedAttribute]
public void set_SetLastError(bool value);
}
internal enum System.Runtime.InteropServices.StringMarshalling : Enum {
    public int value__;
    public static StringMarshalling Custom;
    public static StringMarshalling Utf8;
    public static StringMarshalling Utf16;
}
internal class System.ServiceModel.Channels.UriGenerator : object {
    private long _id;
    private string _prefix;
    public string Next();
}
internal static class System.ServiceModel.Syndication.App10Constants : object {
    public static string Accept;
    public static string Categories;
    public static string Collection;
    public static string Fixed;
    public static string Href;
    public static string Namespace;
    public static string Prefix;
    public static string Service;
    public static string Workspace;
}
internal static class System.ServiceModel.Syndication.Atom10Constants : object {
    public static string AlternateTag;
    public static string Atom10Namespace;
    public static string Atom10Prefix;
    public static string AtomMediaType;
    public static string AuthorTag;
    public static string CategoryTag;
    public static string ContentTag;
    public static string ContributorTag;
    public static string EmailTag;
    public static string EntryTag;
    public static string FeedTag;
    public static string GeneratorTag;
    public static string HrefTag;
    public static string HtmlMediaType;
    public static string HtmlType;
    public static string IdTag;
    public static string LabelTag;
    public static string LengthTag;
    public static string LinkTag;
    public static string LogoTag;
    public static string NameTag;
    public static string PlaintextType;
    public static string PublishedTag;
    public static string RelativeTag;
    public static string RightsTag;
    public static string SchemeTag;
    public static string SelfTag;
    public static string SourceFeedTag;
    public static string SourceTag;
    public static string SpecificationLink;
    public static string SubtitleTag;
    public static string SummaryTag;
    public static string TermTag;
    public static string TitleTag;
    public static string TypeTag;
    public static string UpdatedTag;
    public static string UriTag;
    public static string XHtmlMediaType;
    public static string XHtmlType;
    public static string XmlMediaType;
}
[XmlRootAttribute]
public class System.ServiceModel.Syndication.Atom10FeedFormatter : SyndicationFeedFormatter {
    internal static string XmlNs;
    internal static string XmlNsNs;
    private static XmlQualifiedName s_atom10Href;
    private static XmlQualifiedName s_atom10Label;
    private static XmlQualifiedName s_atom10Length;
    private static XmlQualifiedName s_atom10Relative;
    private static XmlQualifiedName s_atom10Scheme;
    private static XmlQualifiedName s_atom10Term;
    private static XmlQualifiedName s_atom10Title;
    private static XmlQualifiedName s_atom10Type;
    private static UriGenerator s_idGenerator;
    private static string Rfc3339LocalDateTimeFormat;
    private static string Rfc3339UTCDateTimeFormat;
    private int _maxExtensionSize;
    [CompilerGeneratedAttribute]
private bool <PreserveAttributeExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreserveElementExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <FeedType>k__BackingField;
    public bool PreserveAttributeExtensions { get; public set; }
    public bool PreserveElementExtensions { get; public set; }
    public string Version { get; }
    protected Type FeedType { get; }
    public Atom10FeedFormatter(Type feedTypeToCreate);
    public Atom10FeedFormatter(SyndicationFeed feedToWrite);
    private static Atom10FeedFormatter();
    internal virtual TryParseDateTimeCallback GetDefaultDateTimeParser();
    [CompilerGeneratedAttribute]
public bool get_PreserveAttributeExtensions();
    [CompilerGeneratedAttribute]
public void set_PreserveAttributeExtensions(bool value);
    [CompilerGeneratedAttribute]
public bool get_PreserveElementExtensions();
    [CompilerGeneratedAttribute]
public void set_PreserveElementExtensions(bool value);
    public virtual string get_Version();
    [CompilerGeneratedAttribute]
protected Type get_FeedType();
    public virtual bool CanRead(XmlReader reader);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
    public virtual void ReadFrom(XmlReader reader);
    public virtual void WriteTo(XmlWriter writer);
    internal static void ReadCategory(XmlReader reader, SyndicationCategory category, string version, bool preserveAttributeExtensions, bool preserveElementExtensions, int maxExtensionSize);
    internal static TextSyndicationContent ReadTextContentFrom(XmlReader reader, string context, bool preserveAttributeExtensions);
    internal static void WriteCategory(XmlWriter writer, SyndicationCategory category, string version);
    internal void ReadItemFrom(XmlReader reader, SyndicationItem result);
    internal bool TryParseFeedElementFrom(XmlReader reader, SyndicationFeed result);
    internal bool TryParseItemElementFrom(XmlReader reader, SyndicationItem result);
    internal static void WriteContentTo(XmlWriter writer, string elementName, SyndicationContent content);
    internal static void WriteElement(XmlWriter writer, string elementName, string value);
    internal void WriteFeedAuthorsTo(XmlWriter writer, Collection`1<SyndicationPerson> authors);
    internal void WriteFeedContributorsTo(XmlWriter writer, Collection`1<SyndicationPerson> contributors);
    internal static void WriteFeedLastUpdatedTimeTo(XmlWriter writer, DateTimeOffset lastUpdatedTime, bool isRequired);
    internal void WriteItemAuthorsTo(XmlWriter writer, Collection`1<SyndicationPerson> authors);
    internal void WriteItemContents(XmlWriter dictWriter, SyndicationItem item);
    internal void WriteItemContributorsTo(XmlWriter writer, Collection`1<SyndicationPerson> contributors);
    internal static void WriteItemLastUpdatedTimeTo(XmlWriter writer, DateTimeOffset lastUpdatedTime);
    internal static void WriteLink(XmlWriter writer, SyndicationLink link, Uri baseUri);
    protected virtual SyndicationFeed CreateFeedInstance();
    protected virtual SyndicationItem ReadItem(XmlReader reader, SyndicationFeed feed);
    protected virtual IEnumerable`1<SyndicationItem> ReadItems(XmlReader reader, SyndicationFeed feed, Boolean& areAllItemsRead);
    protected virtual void WriteItem(XmlWriter writer, SyndicationItem item, Uri feedBaseUri);
    protected virtual void WriteItems(XmlWriter writer, IEnumerable`1<SyndicationItem> items, Uri feedBaseUri);
    private static TextSyndicationContent ReadTextContentFromHelper(XmlReader reader, string type, string context, bool preserveAttributeExtensions);
    private static string AsString(DateTimeOffset dateTime);
    private void ReadCategory(XmlReader reader, SyndicationCategory category);
    private SyndicationCategory ReadCategoryFrom(XmlReader reader, SyndicationFeed feed);
    private SyndicationCategory ReadCategoryFrom(XmlReader reader, SyndicationItem item);
    private SyndicationContent ReadContentFrom(XmlReader reader, SyndicationItem item);
    private void ReadFeed(XmlReader reader);
    private SyndicationFeed ReadFeedFrom(XmlReader reader, SyndicationFeed result, bool isSourceFeed);
    private void ReadItemFrom(XmlReader reader, SyndicationItem result, Uri feedBaseUri);
    private void ReadLink(XmlReader reader, SyndicationLink link, Uri baseUri);
    private SyndicationLink ReadLinkFrom(XmlReader reader, SyndicationFeed feed);
    private SyndicationLink ReadLinkFrom(XmlReader reader, SyndicationItem item);
    private SyndicationPerson ReadPersonFrom(XmlReader reader, SyndicationFeed feed);
    private SyndicationPerson ReadPersonFrom(XmlReader reader, SyndicationItem item);
    private void ReadPersonFrom(XmlReader reader, SyndicationPerson result);
    private TextSyndicationContent ReadTextContentFrom(XmlReader reader, string context);
    private void WriteCategoriesTo(XmlWriter writer, Collection`1<SyndicationCategory> categories);
    private void WriteFeed(XmlWriter writer);
    private void WriteFeedTo(XmlWriter writer, SyndicationFeed feed, bool isSourceFeed);
    private void WriteItemContents(XmlWriter dictWriter, SyndicationItem item, Uri feedBaseUri);
    private void WritePersonTo(XmlWriter writer, SyndicationPerson p, string elementName);
}
[XmlRootAttribute]
public class System.ServiceModel.Syndication.Atom10FeedFormatter`1 : Atom10FeedFormatter {
    public Atom10FeedFormatter`1(TSyndicationFeed feedToWrite);
    protected virtual SyndicationFeed CreateFeedInstance();
}
[XmlRootAttribute]
public class System.ServiceModel.Syndication.Atom10ItemFormatter : SyndicationItemFormatter {
    private Atom10FeedFormatter _feedSerializer;
    private bool _preserveAttributeExtensions;
    private bool _preserveElementExtensions;
    [CompilerGeneratedAttribute]
private Type <ItemType>k__BackingField;
    public bool PreserveAttributeExtensions { get; public set; }
    public bool PreserveElementExtensions { get; public set; }
    public string Version { get; }
    protected Type ItemType { get; }
    public Atom10ItemFormatter(Type itemTypeToCreate);
    public Atom10ItemFormatter(SyndicationItem itemToWrite);
    public bool get_PreserveAttributeExtensions();
    public void set_PreserveAttributeExtensions(bool value);
    public bool get_PreserveElementExtensions();
    public void set_PreserveElementExtensions(bool value);
    public virtual string get_Version();
    [CompilerGeneratedAttribute]
protected Type get_ItemType();
    public virtual bool CanRead(XmlReader reader);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
    public virtual void ReadFrom(XmlReader reader);
    public virtual void WriteTo(XmlWriter writer);
    protected virtual SyndicationItem CreateItemInstance();
    private void ReadItem(XmlReader reader);
    private void WriteItem(XmlWriter writer);
}
[XmlRootAttribute]
public class System.ServiceModel.Syndication.Atom10ItemFormatter`1 : Atom10ItemFormatter {
    public Atom10ItemFormatter`1(TSyndicationItem itemToWrite);
    protected virtual SyndicationItem CreateItemInstance();
}
[XmlRootAttribute]
public class System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter : CategoriesDocumentFormatter {
    private Type _inlineDocumentType;
    private int _maxExtensionSize;
    private Type _referencedDocumentType;
    public string Version { get; }
    public AtomPub10CategoriesDocumentFormatter(Type inlineDocumentType, Type referencedDocumentType);
    public AtomPub10CategoriesDocumentFormatter(CategoriesDocument documentToWrite);
    public virtual string get_Version();
    public virtual bool CanRead(XmlReader reader);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
    public virtual void ReadFrom(XmlReader reader);
    public virtual void WriteTo(XmlWriter writer);
    protected virtual InlineCategoriesDocument CreateInlineCategoriesDocument();
    protected virtual ReferencedCategoriesDocument CreateReferencedCategoriesDocument();
    private void ReadDocument(XmlReader reader);
    private void WriteDocument(XmlWriter writer);
}
[XmlRootAttribute]
public class System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter : ServiceDocumentFormatter {
    private Type _documentType;
    private int _maxExtensionSize;
    public string Version { get; }
    public AtomPub10ServiceDocumentFormatter(Type documentTypeToCreate);
    public AtomPub10ServiceDocumentFormatter(ServiceDocument documentToWrite);
    public virtual string get_Version();
    public virtual bool CanRead(XmlReader reader);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
    public virtual void ReadFrom(XmlReader reader);
    public virtual void WriteTo(XmlWriter writer);
    internal static CategoriesDocument ReadCategories(XmlReader reader, Uri baseUri, CreateInlineCategoriesDelegate inlineCategoriesFactory, CreateReferencedCategoriesDelegate referencedCategoriesFactory, string version, int maxExtensionSize);
    internal static void WriteCategoriesInnerXml(XmlWriter writer, CategoriesDocument categories, Uri baseUri, string version);
    protected virtual ServiceDocument CreateDocumentInstance();
    private static void ReadInlineCategories(XmlReader reader, InlineCategoriesDocument inlineCategories, Uri baseUri, string version, int maxExtensionSize);
    private static void ReadReferencedCategories(XmlReader reader, ReferencedCategoriesDocument referencedCategories, Uri baseUri, Uri link, string version, int maxExtensionSize);
    private static void WriteCategories(XmlWriter writer, CategoriesDocument categories, Uri baseUri, string version);
    private static void WriteInlineCategoriesContent(XmlWriter writer, InlineCategoriesDocument categories, string version);
    private static void WriteReferencedCategoriesContent(XmlWriter writer, ReferencedCategoriesDocument categories, string version);
    private static void WriteXmlBase(XmlWriter writer, Uri baseUri);
    private static void WriteXmlLang(XmlWriter writer, string lang);
    private ResourceCollectionInfo ReadCollection(XmlReader reader, Workspace workspace);
    private void ReadDocument(XmlReader reader);
    private Workspace ReadWorkspace(XmlReader reader, ServiceDocument document);
    private void WriteCollection(XmlWriter writer, ResourceCollectionInfo collection, Uri baseUri);
    private void WriteDocument(XmlWriter writer);
    private void WriteWorkspace(XmlWriter writer, Workspace workspace, Uri baseUri);
}
[XmlRootAttribute]
public class System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter`1 : AtomPub10ServiceDocumentFormatter {
    public AtomPub10ServiceDocumentFormatter`1(TServiceDocument documentToWrite);
    protected virtual ServiceDocument CreateDocumentInstance();
}
public abstract class System.ServiceModel.Syndication.CategoriesDocument : object {
    private ExtensibleSyndicationObject _extensions;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public Uri BaseUri { get; public set; }
    public SyndicationElementExtensionCollection ElementExtensions { get; }
    public string Language { get; public set; }
    internal bool IsInline { get; }
    public sealed virtual Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public void set_BaseUri(Uri value);
    public sealed virtual SyndicationElementExtensionCollection get_ElementExtensions();
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    internal abstract virtual bool get_IsInline();
    public static InlineCategoriesDocument Create(Collection`1<SyndicationCategory> categories);
    public static InlineCategoriesDocument Create(Collection`1<SyndicationCategory> categories, bool isFixed, string scheme);
    public static ReferencedCategoriesDocument Create(Uri linkToCategoriesDocument);
    public static CategoriesDocument Load(XmlReader reader);
    public CategoriesDocumentFormatter GetFormatter();
    public void Save(XmlWriter writer);
    protected internal virtual bool TryParseAttribute(string name, string ns, string value, string version);
    protected internal virtual bool TryParseElement(XmlReader reader, string version);
    protected internal virtual void WriteAttributeExtensions(XmlWriter writer, string version);
    protected internal virtual void WriteElementExtensions(XmlWriter writer, string version);
    internal void LoadElementExtensions(XmlReader readerOverUnparsedExtensions, int maxExtensionSize);
    internal void LoadElementExtensions(XmlBuffer buffer);
}
[DataContractAttribute]
public abstract class System.ServiceModel.Syndication.CategoriesDocumentFormatter : object {
    private CategoriesDocument _document;
    public CategoriesDocument Document { get; }
    public string Version { get; }
    protected CategoriesDocumentFormatter(CategoriesDocument documentToWrite);
    public CategoriesDocument get_Document();
    public abstract virtual string get_Version();
    public abstract virtual bool CanRead(XmlReader reader);
    public abstract virtual void ReadFrom(XmlReader reader);
    public abstract virtual void WriteTo(XmlWriter writer);
    protected virtual InlineCategoriesDocument CreateInlineCategoriesDocument();
    protected virtual ReferencedCategoriesDocument CreateReferencedCategoriesDocument();
    protected virtual void SetDocument(CategoriesDocument document);
}
internal class System.ServiceModel.Syndication.CreateInlineCategoriesDelegate : MulticastDelegate {
    public CreateInlineCategoriesDelegate(object object, IntPtr method);
    public virtual InlineCategoriesDocument Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual InlineCategoriesDocument EndInvoke(IAsyncResult result);
}
internal class System.ServiceModel.Syndication.CreateReferencedCategoriesDelegate : MulticastDelegate {
    public CreateReferencedCategoriesDelegate(object object, IntPtr method);
    public virtual ReferencedCategoriesDocument Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual ReferencedCategoriesDocument EndInvoke(IAsyncResult result);
}
internal static class System.ServiceModel.Syndication.DateTimeHelper : object {
    private static string Rfc3339DateTimeFormat;
    public static bool DefaultRss20DateTimeParser(XmlDateTimeData XmlDateTimeData, DateTimeOffset& dateTimeOffset);
    public static bool DefaultAtom10DateTimeParser(XmlDateTimeData XmlDateTimeData, DateTimeOffset& dateTimeOffset);
    private static bool Rfc3339DateTimeParser(string dateTimeString, DateTimeOffset& dto);
    private static bool Rfc822DateTimeParser(string dateTimeString, DateTimeOffset& dto);
    private static string NormalizeTimeZone(string rfc822TimeZone, Boolean& isUtc);
}
internal class System.ServiceModel.Syndication.ExtensibleSyndicationObject : ValueType {
    private Dictionary`2<XmlQualifiedName, string> _attributeExtensions;
    private SyndicationElementExtensionCollection _elementExtensions;
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public SyndicationElementExtensionCollection ElementExtensions { get; }
    private ExtensibleSyndicationObject(ExtensibleSyndicationObject source);
    public sealed virtual Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    public sealed virtual SyndicationElementExtensionCollection get_ElementExtensions();
    private static XmlBuffer CreateXmlBuffer(XmlDictionaryReader unparsedExtensionsReader, int maxExtensionSize);
    internal void LoadElementExtensions(XmlReader readerOverUnparsedExtensions, int maxExtensionSize);
    internal void LoadElementExtensions(XmlBuffer buffer);
    internal void WriteAttributeExtensions(XmlWriter writer);
    internal void WriteElementExtensions(XmlWriter writer, Func`3<string, string, bool> shouldSkipElement);
    public ExtensibleSyndicationObject Clone();
}
internal static class System.ServiceModel.Syndication.FeedUtils : object {
    public static string AddLineInfo(XmlReader reader, string error);
    internal static Collection`1<SyndicationCategory> CloneCategories(Collection`1<SyndicationCategory> categories);
    internal static Collection`1<SyndicationLink> CloneLinks(Collection`1<SyndicationLink> links);
    internal static Collection`1<SyndicationPerson> ClonePersons(Collection`1<SyndicationPerson> persons);
    internal static TextSyndicationContent CloneTextContent(TextSyndicationContent content);
    internal static Uri CombineXmlBase(Uri rootBase, string newBase);
    internal static Uri GetBaseUriToWrite(Uri rootBase, Uri currentBase);
    internal static string GetUriString(Uri uri);
    internal static bool IsXmlns(string name, string ns);
    internal static bool IsXmlSchemaType(string name, string ns);
}
internal interface System.ServiceModel.Syndication.IExtensibleSyndicationObject {
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public SyndicationElementExtensionCollection ElementExtensions { get; }
    public abstract virtual Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    public abstract virtual SyndicationElementExtensionCollection get_ElementExtensions();
}
public class System.ServiceModel.Syndication.InlineCategoriesDocument : CategoriesDocument {
    private Collection`1<SyndicationCategory> _categories;
    [CompilerGeneratedAttribute]
private bool <IsFixed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    public Collection`1<SyndicationCategory> Categories { get; }
    public bool IsFixed { get; public set; }
    public string Scheme { get; public set; }
    internal bool IsInline { get; }
    public InlineCategoriesDocument(IEnumerable`1<SyndicationCategory> categories);
    public InlineCategoriesDocument(IEnumerable`1<SyndicationCategory> categories, bool isFixed, string scheme);
    public Collection`1<SyndicationCategory> get_Categories();
    [CompilerGeneratedAttribute]
public bool get_IsFixed();
    [CompilerGeneratedAttribute]
public void set_IsFixed(bool value);
    [CompilerGeneratedAttribute]
public string get_Scheme();
    [CompilerGeneratedAttribute]
public void set_Scheme(string value);
    internal virtual bool get_IsInline();
    protected internal virtual SyndicationCategory CreateCategory();
}
internal class System.ServiceModel.Syndication.NullNotAllowedCollection`1 : Collection`1<TCollectionItem> {
    protected virtual void InsertItem(int index, TCollectionItem item);
    protected virtual void SetItem(int index, TCollectionItem item);
}
public class System.ServiceModel.Syndication.ReferencedCategoriesDocument : CategoriesDocument {
    [CompilerGeneratedAttribute]
private Uri <Link>k__BackingField;
    public Uri Link { get; public set; }
    internal bool IsInline { get; }
    public ReferencedCategoriesDocument(Uri link);
    [CompilerGeneratedAttribute]
public Uri get_Link();
    [CompilerGeneratedAttribute]
public void set_Link(Uri value);
    internal virtual bool get_IsInline();
}
public class System.ServiceModel.Syndication.ResourceCollectionInfo : object {
    private static IEnumerable`1<string> s_singleEmptyAccept;
    private Collection`1<string> _accepts;
    private Collection`1<CategoriesDocument> _categories;
    private ExtensibleSyndicationObject _extensions;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Link>k__BackingField;
    [CompilerGeneratedAttribute]
private TextSyndicationContent <Title>k__BackingField;
    public Collection`1<string> Accepts { get; }
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public Uri BaseUri { get; public set; }
    public Collection`1<CategoriesDocument> Categories { get; }
    public SyndicationElementExtensionCollection ElementExtensions { get; }
    public Uri Link { get; public set; }
    public TextSyndicationContent Title { get; public set; }
    public ResourceCollectionInfo(string title, Uri link);
    public ResourceCollectionInfo(TextSyndicationContent title, Uri link);
    public ResourceCollectionInfo(TextSyndicationContent title, Uri link, IEnumerable`1<CategoriesDocument> categories, bool allowsNewEntries);
    public ResourceCollectionInfo(TextSyndicationContent title, Uri link, IEnumerable`1<CategoriesDocument> categories, IEnumerable`1<string> accepts);
    public Collection`1<string> get_Accepts();
    public sealed virtual Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public void set_BaseUri(Uri value);
    public Collection`1<CategoriesDocument> get_Categories();
    public sealed virtual SyndicationElementExtensionCollection get_ElementExtensions();
    [CompilerGeneratedAttribute]
public Uri get_Link();
    [CompilerGeneratedAttribute]
public void set_Link(Uri value);
    [CompilerGeneratedAttribute]
public TextSyndicationContent get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(TextSyndicationContent value);
    protected internal virtual InlineCategoriesDocument CreateInlineCategoriesDocument();
    protected internal virtual ReferencedCategoriesDocument CreateReferencedCategoriesDocument();
    protected internal virtual bool TryParseAttribute(string name, string ns, string value, string version);
    protected internal virtual bool TryParseElement(XmlReader reader, string version);
    protected internal virtual void WriteAttributeExtensions(XmlWriter writer, string version);
    protected internal virtual void WriteElementExtensions(XmlWriter writer, string version);
    internal void LoadElementExtensions(XmlReader readerOverUnparsedExtensions, int maxExtensionSize);
    internal void LoadElementExtensions(XmlBuffer buffer);
    private static IEnumerable`1<string> CreateSingleEmptyAccept();
}
internal static class System.ServiceModel.Syndication.Rss20Constants : object {
    public static string AuthorTag;
    public static string CategoryTag;
    public static string ChannelTag;
    public static string CopyrightTag;
    public static string DescriptionTag;
    public static string DomainTag;
    public static string EnclosureTag;
    public static string ExtensionWrapperTag;
    public static string GeneratorTag;
    public static string GuidTag;
    public static string ImageTag;
    public static string IsPermaLinkTag;
    public static string ItemTag;
    public static string LanguageTag;
    public static string LastBuildDateTag;
    public static string LengthTag;
    public static string LinkTag;
    public static string ManagingEditorTag;
    public static string PubDateTag;
    public static string Rss20Namespace;
    public static string RssTag;
    public static string SourceTag;
    public static string SpecificationLink;
    public static string TitleTag;
    public static string TypeTag;
    public static string UrlTag;
    public static string Version;
    public static string VersionTag;
    public static string DocumentationTag;
    public static string TimeToLiveTag;
    public static string TextInputTag;
    public static string SkipHoursTag;
    public static string SkipDaysTag;
    public static string HourTag;
    public static string DayTag;
    public static string NameTag;
}
[XmlRootAttribute]
public class System.ServiceModel.Syndication.Rss20FeedFormatter : SyndicationFeedFormatter {
    private static XmlQualifiedName s_rss20Domain;
    private static XmlQualifiedName s_rss20Length;
    private static XmlQualifiedName s_rss20Type;
    private static XmlQualifiedName s_rss20Url;
    private static string Rfc822OutputLocalDateTimeFormat;
    private static string Rfc822OutputUtcDateTimeFormat;
    private Atom10FeedFormatter _atomSerializer;
    private int _maxExtensionSize;
    [CompilerGeneratedAttribute]
private bool <PreserveAttributeExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreserveElementExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SerializeExtensionsAsAtom>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <FeedType>k__BackingField;
    public bool PreserveAttributeExtensions { get; public set; }
    public bool PreserveElementExtensions { get; public set; }
    public bool SerializeExtensionsAsAtom { get; public set; }
    public string Version { get; }
    protected Type FeedType { get; }
    public Rss20FeedFormatter(Type feedTypeToCreate);
    public Rss20FeedFormatter(SyndicationFeed feedToWrite);
    public Rss20FeedFormatter(SyndicationFeed feedToWrite, bool serializeExtensionsAsAtom);
    private static Rss20FeedFormatter();
    internal virtual TryParseDateTimeCallback GetDefaultDateTimeParser();
    [CompilerGeneratedAttribute]
public bool get_PreserveAttributeExtensions();
    [CompilerGeneratedAttribute]
public void set_PreserveAttributeExtensions(bool value);
    [CompilerGeneratedAttribute]
public bool get_PreserveElementExtensions();
    [CompilerGeneratedAttribute]
public void set_PreserveElementExtensions(bool value);
    [CompilerGeneratedAttribute]
public bool get_SerializeExtensionsAsAtom();
    [CompilerGeneratedAttribute]
public void set_SerializeExtensionsAsAtom(bool value);
    public virtual string get_Version();
    [CompilerGeneratedAttribute]
protected Type get_FeedType();
    public virtual bool CanRead(XmlReader reader);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
    public virtual void ReadFrom(XmlReader reader);
    public virtual void WriteTo(XmlWriter writer);
    protected internal virtual void SetFeed(SyndicationFeed feed);
    internal void ReadItemFrom(XmlReader reader, SyndicationItem result);
    internal void WriteItemContents(XmlWriter writer, SyndicationItem item);
    protected virtual SyndicationFeed CreateFeedInstance();
    protected virtual SyndicationItem ReadItem(XmlReader reader, SyndicationFeed feed);
    protected virtual IEnumerable`1<SyndicationItem> ReadItems(XmlReader reader, SyndicationFeed feed, Boolean& areAllItemsRead);
    protected virtual void WriteItem(XmlWriter writer, SyndicationItem item, Uri feedBaseUri);
    protected virtual void WriteItems(XmlWriter writer, IEnumerable`1<SyndicationItem> items, Uri feedBaseUri);
    private static string AsString(DateTimeOffset dateTime);
    internal static SyndicationLink ReadAlternateLink(XmlReader reader, Uri baseUri, TryParseUriCallback uriParser, bool preserveAttributeExtensions);
    private SyndicationCategory ReadCategory(XmlReader reader, SyndicationFeed feed);
    private SyndicationCategory ReadCategory(XmlReader reader, SyndicationItem item);
    private void ReadCategory(XmlReader reader, SyndicationCategory category);
    private void ReadFeed(XmlReader reader);
    private void ReadItemFrom(XmlReader reader, SyndicationItem result, Uri feedBaseUri);
    private SyndicationLink ReadMediaEnclosure(XmlReader reader, Uri baseUri);
    private SyndicationPerson ReadPerson(XmlReader reader, SyndicationFeed feed);
    private SyndicationPerson ReadPerson(XmlReader reader, SyndicationItem item);
    private void ReadPerson(XmlReader reader, SyndicationPerson person);
    private void ReadXml(XmlReader reader, SyndicationFeed result);
    private static void WriteAlternateLink(XmlWriter writer, SyndicationLink link, Uri baseUri);
    private void WriteCategory(XmlWriter writer, SyndicationCategory category);
    private void WriteFeed(XmlWriter writer);
    private void WriteItemContents(XmlWriter writer, SyndicationItem item, Uri feedBaseUri);
    private static void WriteMediaEnclosure(XmlWriter writer, SyndicationLink link, Uri baseUri);
    private void WritePerson(XmlWriter writer, string elementTag, SyndicationPerson person);
}
[XmlRootAttribute]
public class System.ServiceModel.Syndication.Rss20FeedFormatter`1 : Rss20FeedFormatter {
    public Rss20FeedFormatter`1(TSyndicationFeed feedToWrite);
    public Rss20FeedFormatter`1(TSyndicationFeed feedToWrite, bool serializeExtensionsAsAtom);
    protected virtual SyndicationFeed CreateFeedInstance();
}
[XmlRootAttribute]
public class System.ServiceModel.Syndication.Rss20ItemFormatter : SyndicationItemFormatter {
    private Rss20FeedFormatter _feedSerializer;
    private bool _preserveAttributeExtensions;
    private bool _preserveElementExtensions;
    private bool _serializeExtensionsAsAtom;
    [CompilerGeneratedAttribute]
private Type <ItemType>k__BackingField;
    public bool PreserveAttributeExtensions { get; public set; }
    public bool PreserveElementExtensions { get; public set; }
    public bool SerializeExtensionsAsAtom { get; public set; }
    public string Version { get; }
    protected Type ItemType { get; }
    public Rss20ItemFormatter(Type itemTypeToCreate);
    public Rss20ItemFormatter(SyndicationItem itemToWrite);
    public Rss20ItemFormatter(SyndicationItem itemToWrite, bool serializeExtensionsAsAtom);
    public bool get_PreserveAttributeExtensions();
    public void set_PreserveAttributeExtensions(bool value);
    public bool get_PreserveElementExtensions();
    public void set_PreserveElementExtensions(bool value);
    public bool get_SerializeExtensionsAsAtom();
    public void set_SerializeExtensionsAsAtom(bool value);
    public virtual string get_Version();
    [CompilerGeneratedAttribute]
protected Type get_ItemType();
    public virtual bool CanRead(XmlReader reader);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
    public virtual void ReadFrom(XmlReader reader);
    public virtual void WriteTo(XmlWriter writer);
    protected virtual SyndicationItem CreateItemInstance();
    private void ReadItem(XmlReader reader);
    private void WriteItem(XmlWriter writer);
}
[XmlRootAttribute]
public class System.ServiceModel.Syndication.Rss20ItemFormatter`1 : Rss20ItemFormatter {
    public Rss20ItemFormatter`1(TSyndicationItem itemToWrite);
    public Rss20ItemFormatter`1(TSyndicationItem itemToWrite, bool serializeExtensionsAsAtom);
    protected virtual SyndicationItem CreateItemInstance();
}
public class System.ServiceModel.Syndication.ServiceDocument : object {
    private ExtensibleSyndicationObject _extensions;
    private Collection`1<Workspace> _workspaces;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public Uri BaseUri { get; public set; }
    public SyndicationElementExtensionCollection ElementExtensions { get; }
    public string Language { get; public set; }
    public Collection`1<Workspace> Workspaces { get; }
    public ServiceDocument(IEnumerable`1<Workspace> workspaces);
    public sealed virtual Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public void set_BaseUri(Uri value);
    public sealed virtual SyndicationElementExtensionCollection get_ElementExtensions();
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    public Collection`1<Workspace> get_Workspaces();
    public static ServiceDocument Load(XmlReader reader);
    public static TServiceDocument Load(XmlReader reader);
    public ServiceDocumentFormatter GetFormatter();
    public void Save(XmlWriter writer);
    protected internal virtual Workspace CreateWorkspace();
    protected internal virtual bool TryParseAttribute(string name, string ns, string value, string version);
    protected internal virtual bool TryParseElement(XmlReader reader, string version);
    protected internal virtual void WriteAttributeExtensions(XmlWriter writer, string version);
    protected internal virtual void WriteElementExtensions(XmlWriter writer, string version);
    internal void LoadElementExtensions(XmlReader readerOverUnparsedExtensions, int maxExtensionSize);
    internal void LoadElementExtensions(XmlBuffer buffer);
}
[DataContractAttribute]
public abstract class System.ServiceModel.Syndication.ServiceDocumentFormatter : object {
    private ServiceDocument _document;
    public ServiceDocument Document { get; }
    public string Version { get; }
    protected ServiceDocumentFormatter(ServiceDocument documentToWrite);
    public ServiceDocument get_Document();
    public abstract virtual string get_Version();
    public abstract virtual bool CanRead(XmlReader reader);
    public abstract virtual void ReadFrom(XmlReader reader);
    public abstract virtual void WriteTo(XmlWriter writer);
    internal static void LoadElementExtensions(XmlBuffer buffer, XmlDictionaryWriter writer, CategoriesDocument categories);
    internal static void LoadElementExtensions(XmlBuffer buffer, XmlDictionaryWriter writer, ResourceCollectionInfo collection);
    internal static void LoadElementExtensions(XmlBuffer buffer, XmlDictionaryWriter writer, Workspace workspace);
    internal static void LoadElementExtensions(XmlBuffer buffer, XmlDictionaryWriter writer, ServiceDocument document);
    protected static SyndicationCategory CreateCategory(InlineCategoriesDocument inlineCategories);
    protected static ResourceCollectionInfo CreateCollection(Workspace workspace);
    protected static InlineCategoriesDocument CreateInlineCategories(ResourceCollectionInfo collection);
    protected static ReferencedCategoriesDocument CreateReferencedCategories(ResourceCollectionInfo collection);
    protected static Workspace CreateWorkspace(ServiceDocument document);
    protected static void LoadElementExtensions(XmlReader reader, CategoriesDocument categories, int maxExtensionSize);
    protected static void LoadElementExtensions(XmlReader reader, ResourceCollectionInfo collection, int maxExtensionSize);
    protected static void LoadElementExtensions(XmlReader reader, Workspace workspace, int maxExtensionSize);
    protected static void LoadElementExtensions(XmlReader reader, ServiceDocument document, int maxExtensionSize);
    protected static bool TryParseAttribute(string name, string ns, string value, ServiceDocument document, string version);
    protected static bool TryParseAttribute(string name, string ns, string value, ResourceCollectionInfo collection, string version);
    protected static bool TryParseAttribute(string name, string ns, string value, CategoriesDocument categories, string version);
    protected static bool TryParseAttribute(string name, string ns, string value, Workspace workspace, string version);
    protected static bool TryParseElement(XmlReader reader, ResourceCollectionInfo collection, string version);
    protected static bool TryParseElement(XmlReader reader, ServiceDocument document, string version);
    protected static bool TryParseElement(XmlReader reader, Workspace workspace, string version);
    protected static bool TryParseElement(XmlReader reader, CategoriesDocument categories, string version);
    protected static void WriteAttributeExtensions(XmlWriter writer, ServiceDocument document, string version);
    protected static void WriteAttributeExtensions(XmlWriter writer, Workspace workspace, string version);
    protected static void WriteAttributeExtensions(XmlWriter writer, ResourceCollectionInfo collection, string version);
    protected static void WriteAttributeExtensions(XmlWriter writer, CategoriesDocument categories, string version);
    protected static void WriteElementExtensions(XmlWriter writer, ServiceDocument document, string version);
    protected static void WriteElementExtensions(XmlWriter writer, Workspace workspace, string version);
    protected static void WriteElementExtensions(XmlWriter writer, ResourceCollectionInfo collection, string version);
    protected static void WriteElementExtensions(XmlWriter writer, CategoriesDocument categories, string version);
    protected virtual ServiceDocument CreateDocumentInstance();
    protected virtual void SetDocument(ServiceDocument document);
}
public class System.ServiceModel.Syndication.SyndicationCategory : object {
    private ExtensibleSyndicationObject _extensions;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public SyndicationElementExtensionCollection ElementExtensions { get; }
    public string Label { get; public set; }
    public string Name { get; public set; }
    public string Scheme { get; public set; }
    public SyndicationCategory(string name);
    public SyndicationCategory(string name, string scheme, string label);
    protected SyndicationCategory(SyndicationCategory source);
    public sealed virtual Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    public sealed virtual SyndicationElementExtensionCollection get_ElementExtensions();
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Scheme();
    [CompilerGeneratedAttribute]
public void set_Scheme(string value);
    public virtual SyndicationCategory Clone();
    protected internal virtual bool TryParseAttribute(string name, string ns, string value, string version);
    protected internal virtual bool TryParseElement(XmlReader reader, string version);
    protected internal virtual void WriteAttributeExtensions(XmlWriter writer, string version);
    protected internal virtual void WriteElementExtensions(XmlWriter writer, string version);
    internal void LoadElementExtensions(XmlReader readerOverUnparsedExtensions, int maxExtensionSize);
    internal void LoadElementExtensions(XmlBuffer buffer);
}
public abstract class System.ServiceModel.Syndication.SyndicationContent : object {
    private Dictionary`2<XmlQualifiedName, string> _attributeExtensions;
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public string Type { get; }
    protected SyndicationContent(SyndicationContent source);
    public Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    public abstract virtual string get_Type();
    public static TextSyndicationContent CreateHtmlContent(string content);
    public static TextSyndicationContent CreatePlaintextContent(string content);
    public static UrlSyndicationContent CreateUrlContent(Uri url, string mediaType);
    public static TextSyndicationContent CreateXhtmlContent(string content);
    public static XmlSyndicationContent CreateXmlContent(object dataContractObject);
    public static XmlSyndicationContent CreateXmlContent(object dataContractObject, XmlObjectSerializer dataContractSerializer);
    public static XmlSyndicationContent CreateXmlContent(XmlReader xmlReader);
    public static XmlSyndicationContent CreateXmlContent(object xmlSerializerObject, XmlSerializer serializer);
    public abstract virtual SyndicationContent Clone();
    public void WriteTo(XmlWriter writer, string outerElementName, string outerElementNamespace);
    internal void CopyAttributeExtensions(SyndicationContent source);
    protected abstract virtual void WriteContentsTo(XmlWriter writer);
}
public class System.ServiceModel.Syndication.SyndicationElementExtension : object {
    private XmlBuffer _buffer;
    private int _bufferElementIndex;
    private object _extensionData;
    private ExtensionDataWriter _extensionDataWriter;
    private string _outerName;
    private string _outerNamespace;
    public string OuterName { get; }
    public string OuterNamespace { get; }
    public SyndicationElementExtension(XmlReader xmlReader);
    public SyndicationElementExtension(object dataContractExtension);
    public SyndicationElementExtension(object dataContractExtension, XmlObjectSerializer dataContractSerializer);
    public SyndicationElementExtension(string outerName, string outerNamespace, object dataContractExtension);
    public SyndicationElementExtension(string outerName, string outerNamespace, object dataContractExtension, XmlObjectSerializer dataContractSerializer);
    public SyndicationElementExtension(object xmlSerializerExtension, XmlSerializer serializer);
    internal SyndicationElementExtension(XmlBuffer buffer, int bufferElementIndex, string outerName, string outerNamespace);
    public string get_OuterName();
    public string get_OuterNamespace();
    public TExtension GetObject();
    public TExtension GetObject(XmlObjectSerializer serializer);
    public TExtension GetObject(XmlSerializer serializer);
    public XmlReader GetReader();
    public void WriteTo(XmlWriter writer);
    private void EnsureBuffer();
    private void EnsureOuterNameAndNs();
}
public class System.ServiceModel.Syndication.SyndicationElementExtensionCollection : Collection`1<SyndicationElementExtension> {
    private XmlBuffer _buffer;
    private bool _initialized;
    internal SyndicationElementExtensionCollection(XmlBuffer buffer);
    internal SyndicationElementExtensionCollection(SyndicationElementExtensionCollection source);
    public void Add(object extension);
    public void Add(string outerName, string outerNamespace, object dataContractExtension);
    public void Add(object dataContractExtension, DataContractSerializer serializer);
    public void Add(string outerName, string outerNamespace, object dataContractExtension, XmlObjectSerializer dataContractSerializer);
    public void Add(object xmlSerializerExtension, XmlSerializer serializer);
    public void Add(XmlReader xmlReader);
    public XmlReader GetReaderAtElementExtensions();
    public Collection`1<TExtension> ReadElementExtensions(string extensionName, string extensionNamespace);
    public Collection`1<TExtension> ReadElementExtensions(string extensionName, string extensionNamespace, XmlObjectSerializer serializer);
    public Collection`1<TExtension> ReadElementExtensions(string extensionName, string extensionNamespace, XmlSerializer serializer);
    internal void WriteTo(XmlWriter writer, Func`3<string, string, bool> shouldSkipElement);
    protected virtual void ClearItems();
    protected virtual void InsertItem(int index, SyndicationElementExtension item);
    protected virtual void RemoveItem(int index);
    protected virtual void SetItem(int index, SyndicationElementExtension item);
    private XmlBuffer GetOrCreateBufferOverExtensions();
    private void PopulateElements();
    private Collection`1<TExtension> ReadExtensions(string extensionName, string extensionNamespace, XmlObjectSerializer dcSerializer, XmlSerializer xmlSerializer);
}
public class System.ServiceModel.Syndication.SyndicationFeed : object {
    private static HashSet`1<string> s_acceptedDays;
    private Collection`1<SyndicationPerson> _authors;
    private Collection`1<SyndicationCategory> _categories;
    private Collection`1<SyndicationPerson> _contributors;
    private ExtensibleSyndicationObject _extensions;
    private IEnumerable`1<SyndicationItem> _items;
    private DateTimeOffset _lastUpdatedTime;
    private Collection`1<SyndicationLink> _links;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private TextSyndicationContent <Copyright>k__BackingField;
    [CompilerGeneratedAttribute]
private TextSyndicationContent <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Generator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ImageUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <LastUpdatedTimeException>k__BackingField;
    [CompilerGeneratedAttribute]
private TextSyndicationContent <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private SyndicationLink <InternalDocumentation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <InternalTimeToLive>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<int> <InternalSkipHours>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection`1<string> <InternalSkipDays>k__BackingField;
    [CompilerGeneratedAttribute]
private SyndicationTextInput <InternalTextInput>k__BackingField;
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public Collection`1<SyndicationPerson> Authors { get; }
    public Uri BaseUri { get; public set; }
    public Collection`1<SyndicationCategory> Categories { get; }
    public Collection`1<SyndicationPerson> Contributors { get; }
    public TextSyndicationContent Copyright { get; public set; }
    public TextSyndicationContent Description { get; public set; }
    public SyndicationElementExtensionCollection ElementExtensions { get; }
    public string Generator { get; public set; }
    public string Id { get; public set; }
    public Uri ImageUrl { get; public set; }
    public IEnumerable`1<SyndicationItem> Items { get; public set; }
    public string Language { get; public set; }
    internal Exception LastUpdatedTimeException { get; internal set; }
    public DateTimeOffset LastUpdatedTime { get; public set; }
    public Collection`1<SyndicationLink> Links { get; }
    public TextSyndicationContent Title { get; public set; }
    internal SyndicationLink InternalDocumentation { get; private set; }
    public SyndicationLink Documentation { get; public set; }
    internal Nullable`1<TimeSpan> InternalTimeToLive { get; private set; }
    public Nullable`1<TimeSpan> TimeToLive { get; public set; }
    internal Collection`1<int> InternalSkipHours { get; private set; }
    public Collection`1<int> SkipHours { get; }
    internal Collection`1<string> InternalSkipDays { get; private set; }
    public Collection`1<string> SkipDays { get; }
    internal SyndicationTextInput InternalTextInput { get; private set; }
    public SyndicationTextInput TextInput { get; public set; }
    public SyndicationFeed(IEnumerable`1<SyndicationItem> items);
    public SyndicationFeed(string title, string description, Uri feedAlternateLink);
    public SyndicationFeed(string title, string description, Uri feedAlternateLink, IEnumerable`1<SyndicationItem> items);
    public SyndicationFeed(string title, string description, Uri feedAlternateLink, string id, DateTimeOffset lastUpdatedTime);
    public SyndicationFeed(string title, string description, Uri feedAlternateLink, string id, DateTimeOffset lastUpdatedTime, IEnumerable`1<SyndicationItem> items);
    protected SyndicationFeed(SyndicationFeed source, bool cloneItems);
    private static SyndicationFeed();
    public sealed virtual Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    public Collection`1<SyndicationPerson> get_Authors();
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public void set_BaseUri(Uri value);
    public Collection`1<SyndicationCategory> get_Categories();
    public Collection`1<SyndicationPerson> get_Contributors();
    [CompilerGeneratedAttribute]
public TextSyndicationContent get_Copyright();
    [CompilerGeneratedAttribute]
public void set_Copyright(TextSyndicationContent value);
    [CompilerGeneratedAttribute]
public TextSyndicationContent get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(TextSyndicationContent value);
    public sealed virtual SyndicationElementExtensionCollection get_ElementExtensions();
    [CompilerGeneratedAttribute]
public string get_Generator();
    [CompilerGeneratedAttribute]
public void set_Generator(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public Uri get_ImageUrl();
    [CompilerGeneratedAttribute]
public void set_ImageUrl(Uri value);
    public IEnumerable`1<SyndicationItem> get_Items();
    public void set_Items(IEnumerable`1<SyndicationItem> value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
internal Exception get_LastUpdatedTimeException();
    [CompilerGeneratedAttribute]
internal void set_LastUpdatedTimeException(Exception value);
    public DateTimeOffset get_LastUpdatedTime();
    public void set_LastUpdatedTime(DateTimeOffset value);
    public Collection`1<SyndicationLink> get_Links();
    [CompilerGeneratedAttribute]
public TextSyndicationContent get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(TextSyndicationContent value);
    [CompilerGeneratedAttribute]
internal SyndicationLink get_InternalDocumentation();
    [CompilerGeneratedAttribute]
private void set_InternalDocumentation(SyndicationLink value);
    public SyndicationLink get_Documentation();
    public void set_Documentation(SyndicationLink value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_InternalTimeToLive();
    [CompilerGeneratedAttribute]
private void set_InternalTimeToLive(Nullable`1<TimeSpan> value);
    public Nullable`1<TimeSpan> get_TimeToLive();
    public void set_TimeToLive(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
internal Collection`1<int> get_InternalSkipHours();
    [CompilerGeneratedAttribute]
private void set_InternalSkipHours(Collection`1<int> value);
    public Collection`1<int> get_SkipHours();
    [CompilerGeneratedAttribute]
internal Collection`1<string> get_InternalSkipDays();
    [CompilerGeneratedAttribute]
private void set_InternalSkipDays(Collection`1<string> value);
    public Collection`1<string> get_SkipDays();
    [CompilerGeneratedAttribute]
internal SyndicationTextInput get_InternalTextInput();
    [CompilerGeneratedAttribute]
private void set_InternalTextInput(SyndicationTextInput value);
    public SyndicationTextInput get_TextInput();
    public void set_TextInput(SyndicationTextInput value);
    private SyndicationLink TryReadDocumentationFromExtension(SyndicationElementExtensionCollection elementExtensions);
    private static Nullable`1<TimeSpan> TryReadTimeToLiveFromExtension(SyndicationElementExtensionCollection elementExtensions);
    private static void TryReadSkipHoursFromExtension(SyndicationElementExtensionCollection elementExtensions, Collection`1<int> skipHours);
    private static void TryReadSkipDaysFromExtension(SyndicationElementExtensionCollection elementExtensions, Collection`1<string> skipDays);
    private static bool IsValidDay(string day);
    private static SyndicationTextInput TryReadTextInputFromExtension(SyndicationElementExtensionCollection elementExtensions);
    private static bool IsValidTextInput(SyndicationTextInput textInput);
    public static SyndicationFeed Load(XmlReader reader);
    public static TSyndicationFeed Load(XmlReader reader);
    public virtual SyndicationFeed Clone(bool cloneItems);
    public Atom10FeedFormatter GetAtom10Formatter();
    public Rss20FeedFormatter GetRss20Formatter();
    public Rss20FeedFormatter GetRss20Formatter(bool serializeExtensionsAsAtom);
    public void SaveAsAtom10(XmlWriter writer);
    public void SaveAsRss20(XmlWriter writer);
    protected internal virtual SyndicationCategory CreateCategory();
    protected internal virtual SyndicationItem CreateItem();
    protected internal virtual SyndicationLink CreateLink();
    protected internal virtual SyndicationPerson CreatePerson();
    protected internal virtual bool TryParseAttribute(string name, string ns, string value, string version);
    protected internal virtual bool TryParseElement(XmlReader reader, string version);
    protected internal virtual void WriteAttributeExtensions(XmlWriter writer, string version);
    protected internal virtual void WriteElementExtensions(XmlWriter writer, string version);
    private bool ShouldSkipWritingElements(string localName, string ns);
    internal void LoadElementExtensions(XmlReader readerOverUnparsedExtensions, int maxExtensionSize);
    internal void LoadElementExtensions(XmlBuffer buffer);
}
[DataContractAttribute]
public abstract class System.ServiceModel.Syndication.SyndicationFeedFormatter : object {
    private SyndicationFeed _feed;
    [CompilerGeneratedAttribute]
private TryParseUriCallback <UriParser>k__BackingField;
    [CompilerGeneratedAttribute]
private TryParseDateTimeCallback <DateTimeParser>k__BackingField;
    public SyndicationFeed Feed { get; }
    public TryParseUriCallback UriParser { get; public set; }
    public TryParseDateTimeCallback DateTimeParser { get; public set; }
    public string Version { get; }
    protected SyndicationFeedFormatter(SyndicationFeed feedToWrite);
    public SyndicationFeed get_Feed();
    [CompilerGeneratedAttribute]
public TryParseUriCallback get_UriParser();
    [CompilerGeneratedAttribute]
public void set_UriParser(TryParseUriCallback value);
    [CompilerGeneratedAttribute]
public TryParseDateTimeCallback get_DateTimeParser();
    [CompilerGeneratedAttribute]
public void set_DateTimeParser(TryParseDateTimeCallback value);
    internal virtual TryParseDateTimeCallback GetDefaultDateTimeParser();
    private bool NotImplementedDateTimeParser(XmlDateTimeData XmlDateTimeData, DateTimeOffset& dateTimeOffset);
    public abstract virtual string get_Version();
    public abstract virtual bool CanRead(XmlReader reader);
    public abstract virtual void ReadFrom(XmlReader reader);
    public virtual string ToString();
    public abstract virtual void WriteTo(XmlWriter writer);
    protected internal static SyndicationCategory CreateCategory(SyndicationFeed feed);
    protected internal static SyndicationCategory CreateCategory(SyndicationItem item);
    protected internal static SyndicationItem CreateItem(SyndicationFeed feed);
    protected internal static SyndicationLink CreateLink(SyndicationFeed feed);
    protected internal static SyndicationLink CreateLink(SyndicationItem item);
    protected internal static SyndicationPerson CreatePerson(SyndicationFeed feed);
    protected internal static SyndicationPerson CreatePerson(SyndicationItem item);
    protected internal static void LoadElementExtensions(XmlReader reader, SyndicationFeed feed, int maxExtensionSize);
    protected internal static void LoadElementExtensions(XmlReader reader, SyndicationItem item, int maxExtensionSize);
    protected internal static void LoadElementExtensions(XmlReader reader, SyndicationCategory category, int maxExtensionSize);
    protected internal static void LoadElementExtensions(XmlReader reader, SyndicationLink link, int maxExtensionSize);
    protected internal static void LoadElementExtensions(XmlReader reader, SyndicationPerson person, int maxExtensionSize);
    protected internal static bool TryParseAttribute(string name, string ns, string value, SyndicationFeed feed, string version);
    protected internal static bool TryParseAttribute(string name, string ns, string value, SyndicationItem item, string version);
    protected internal static bool TryParseAttribute(string name, string ns, string value, SyndicationCategory category, string version);
    protected internal static bool TryParseAttribute(string name, string ns, string value, SyndicationLink link, string version);
    protected internal static bool TryParseAttribute(string name, string ns, string value, SyndicationPerson person, string version);
    protected internal static bool TryParseContent(XmlReader reader, SyndicationItem item, string contentType, string version, SyndicationContent& content);
    protected internal static bool TryParseElement(XmlReader reader, SyndicationFeed feed, string version);
    protected internal static bool TryParseElement(XmlReader reader, SyndicationItem item, string version);
    protected internal static bool TryParseElement(XmlReader reader, SyndicationCategory category, string version);
    protected internal static bool TryParseElement(XmlReader reader, SyndicationLink link, string version);
    protected internal static bool TryParseElement(XmlReader reader, SyndicationPerson person, string version);
    protected internal static void WriteAttributeExtensions(XmlWriter writer, SyndicationFeed feed, string version);
    protected internal static void WriteAttributeExtensions(XmlWriter writer, SyndicationItem item, string version);
    protected internal static void WriteAttributeExtensions(XmlWriter writer, SyndicationCategory category, string version);
    protected internal static void WriteAttributeExtensions(XmlWriter writer, SyndicationLink link, string version);
    protected internal static void WriteAttributeExtensions(XmlWriter writer, SyndicationPerson person, string version);
    protected internal static void WriteElementExtensions(XmlWriter writer, SyndicationFeed feed, string version);
    protected internal static void WriteElementExtensions(XmlWriter writer, SyndicationItem item, string version);
    protected internal static void WriteElementExtensions(XmlWriter writer, SyndicationCategory category, string version);
    protected internal static void WriteElementExtensions(XmlWriter writer, SyndicationLink link, string version);
    protected internal static void WriteElementExtensions(XmlWriter writer, SyndicationPerson person, string version);
    protected internal virtual void SetFeed(SyndicationFeed feed);
    internal Uri UriFromString(string uriString, UriKind uriKind, string localName, string namespaceURI, XmlReader reader);
    internal static Uri UriFromString(TryParseUriCallback uriParser, string uriString, UriKind uriKind, string localName, string namespaceURI, XmlReader reader);
    internal DateTimeOffset DateFromString(string dateTimeString, XmlReader reader);
    internal static bool DefaultUriParser(XmlUriData XmlUriData, Uri& uri);
    internal static void CloseBuffer(XmlBuffer buffer, XmlDictionaryWriter extWriter);
    internal static void CreateBufferIfRequiredAndWriteNode(XmlBuffer& buffer, XmlDictionaryWriter& extWriter, XmlReader reader, int maxExtensionSize);
    internal static SyndicationFeed CreateFeedInstance(Type feedType);
    internal static void LoadElementExtensions(XmlBuffer buffer, XmlDictionaryWriter writer, SyndicationFeed feed);
    internal static void LoadElementExtensions(XmlBuffer buffer, XmlDictionaryWriter writer, SyndicationItem item);
    internal static void LoadElementExtensions(XmlBuffer buffer, XmlDictionaryWriter writer, SyndicationCategory category);
    internal static void LoadElementExtensions(XmlBuffer buffer, XmlDictionaryWriter writer, SyndicationLink link);
    internal static void LoadElementExtensions(XmlBuffer buffer, XmlDictionaryWriter writer, SyndicationPerson person);
    internal static void MoveToStartElement(XmlReader reader);
    protected abstract virtual SyndicationFeed CreateFeedInstance();
    private static T GetNonNullValue(T value, string errorMsg);
}
public class System.ServiceModel.Syndication.SyndicationItem : object {
    private Collection`1<SyndicationPerson> _authors;
    private Collection`1<SyndicationCategory> _categories;
    private Collection`1<SyndicationPerson> _contributors;
    private ExtensibleSyndicationObject _extensions;
    private DateTimeOffset _lastUpdatedTime;
    private Collection`1<SyndicationLink> _links;
    private DateTimeOffset _publishDate;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private SyndicationContent <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private TextSyndicationContent <Copyright>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <LastUpdatedTimeException>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <PublishDateException>k__BackingField;
    [CompilerGeneratedAttribute]
private SyndicationFeed <SourceFeed>k__BackingField;
    [CompilerGeneratedAttribute]
private TextSyndicationContent <Summary>k__BackingField;
    [CompilerGeneratedAttribute]
private TextSyndicationContent <Title>k__BackingField;
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public Collection`1<SyndicationPerson> Authors { get; }
    public Uri BaseUri { get; public set; }
    public Collection`1<SyndicationCategory> Categories { get; }
    public SyndicationContent Content { get; public set; }
    public Collection`1<SyndicationPerson> Contributors { get; }
    public TextSyndicationContent Copyright { get; public set; }
    public SyndicationElementExtensionCollection ElementExtensions { get; }
    public string Id { get; public set; }
    internal Exception LastUpdatedTimeException { get; internal set; }
    public DateTimeOffset LastUpdatedTime { get; public set; }
    public Collection`1<SyndicationLink> Links { get; }
    internal Exception PublishDateException { get; internal set; }
    public DateTimeOffset PublishDate { get; public set; }
    public SyndicationFeed SourceFeed { get; public set; }
    public TextSyndicationContent Summary { get; public set; }
    public TextSyndicationContent Title { get; public set; }
    public SyndicationItem(string title, string content, Uri itemAlternateLink);
    public SyndicationItem(string title, string content, Uri itemAlternateLink, string id, DateTimeOffset lastUpdatedTime);
    public SyndicationItem(string title, SyndicationContent content, Uri itemAlternateLink, string id, DateTimeOffset lastUpdatedTime);
    protected SyndicationItem(SyndicationItem source);
    public sealed virtual Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    public Collection`1<SyndicationPerson> get_Authors();
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public void set_BaseUri(Uri value);
    public Collection`1<SyndicationCategory> get_Categories();
    [CompilerGeneratedAttribute]
public SyndicationContent get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(SyndicationContent value);
    public Collection`1<SyndicationPerson> get_Contributors();
    [CompilerGeneratedAttribute]
public TextSyndicationContent get_Copyright();
    [CompilerGeneratedAttribute]
public void set_Copyright(TextSyndicationContent value);
    public sealed virtual SyndicationElementExtensionCollection get_ElementExtensions();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
internal Exception get_LastUpdatedTimeException();
    [CompilerGeneratedAttribute]
internal void set_LastUpdatedTimeException(Exception value);
    public DateTimeOffset get_LastUpdatedTime();
    public void set_LastUpdatedTime(DateTimeOffset value);
    public Collection`1<SyndicationLink> get_Links();
    [CompilerGeneratedAttribute]
internal Exception get_PublishDateException();
    [CompilerGeneratedAttribute]
internal void set_PublishDateException(Exception value);
    public DateTimeOffset get_PublishDate();
    public void set_PublishDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public SyndicationFeed get_SourceFeed();
    [CompilerGeneratedAttribute]
public void set_SourceFeed(SyndicationFeed value);
    [CompilerGeneratedAttribute]
public TextSyndicationContent get_Summary();
    [CompilerGeneratedAttribute]
public void set_Summary(TextSyndicationContent value);
    [CompilerGeneratedAttribute]
public TextSyndicationContent get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(TextSyndicationContent value);
    public static SyndicationItem Load(XmlReader reader);
    public static TSyndicationItem Load(XmlReader reader);
    public void AddPermalink(Uri permalink);
    public virtual SyndicationItem Clone();
    public Atom10ItemFormatter GetAtom10Formatter();
    public Rss20ItemFormatter GetRss20Formatter();
    public Rss20ItemFormatter GetRss20Formatter(bool serializeExtensionsAsAtom);
    public void SaveAsAtom10(XmlWriter writer);
    public void SaveAsRss20(XmlWriter writer);
    protected internal virtual SyndicationCategory CreateCategory();
    protected internal virtual SyndicationLink CreateLink();
    protected internal virtual SyndicationPerson CreatePerson();
    protected internal virtual bool TryParseAttribute(string name, string ns, string value, string version);
    protected internal virtual bool TryParseContent(XmlReader reader, string contentType, string version, SyndicationContent& content);
    protected internal virtual bool TryParseElement(XmlReader reader, string version);
    protected internal virtual void WriteAttributeExtensions(XmlWriter writer, string version);
    protected internal virtual void WriteElementExtensions(XmlWriter writer, string version);
    internal void LoadElementExtensions(XmlReader readerOverUnparsedExtensions, int maxExtensionSize);
    internal void LoadElementExtensions(XmlBuffer buffer);
}
[DataContractAttribute]
public abstract class System.ServiceModel.Syndication.SyndicationItemFormatter : object {
    private SyndicationItem _item;
    public SyndicationItem Item { get; }
    public string Version { get; }
    protected SyndicationItemFormatter(SyndicationItem itemToWrite);
    public SyndicationItem get_Item();
    public abstract virtual string get_Version();
    public abstract virtual bool CanRead(XmlReader reader);
    public abstract virtual void ReadFrom(XmlReader reader);
    public virtual string ToString();
    public abstract virtual void WriteTo(XmlWriter writer);
    protected internal virtual void SetItem(SyndicationItem item);
    internal static SyndicationItem CreateItemInstance(Type itemType);
    protected static SyndicationCategory CreateCategory(SyndicationItem item);
    protected static SyndicationLink CreateLink(SyndicationItem item);
    protected static SyndicationPerson CreatePerson(SyndicationItem item);
    protected static void LoadElementExtensions(XmlReader reader, SyndicationItem item, int maxExtensionSize);
    protected static void LoadElementExtensions(XmlReader reader, SyndicationCategory category, int maxExtensionSize);
    protected static void LoadElementExtensions(XmlReader reader, SyndicationLink link, int maxExtensionSize);
    protected static void LoadElementExtensions(XmlReader reader, SyndicationPerson person, int maxExtensionSize);
    protected static bool TryParseAttribute(string name, string ns, string value, SyndicationItem item, string version);
    protected static bool TryParseAttribute(string name, string ns, string value, SyndicationCategory category, string version);
    protected static bool TryParseAttribute(string name, string ns, string value, SyndicationLink link, string version);
    protected static bool TryParseAttribute(string name, string ns, string value, SyndicationPerson person, string version);
    protected static bool TryParseContent(XmlReader reader, SyndicationItem item, string contentType, string version, SyndicationContent& content);
    protected static bool TryParseElement(XmlReader reader, SyndicationItem item, string version);
    protected static bool TryParseElement(XmlReader reader, SyndicationCategory category, string version);
    protected static bool TryParseElement(XmlReader reader, SyndicationLink link, string version);
    protected static bool TryParseElement(XmlReader reader, SyndicationPerson person, string version);
    protected static void WriteAttributeExtensions(XmlWriter writer, SyndicationItem item, string version);
    protected static void WriteAttributeExtensions(XmlWriter writer, SyndicationCategory category, string version);
    protected static void WriteAttributeExtensions(XmlWriter writer, SyndicationLink link, string version);
    protected static void WriteAttributeExtensions(XmlWriter writer, SyndicationPerson person, string version);
    protected static void WriteElementExtensions(XmlWriter writer, SyndicationItem item, string version);
    protected abstract virtual SyndicationItem CreateItemInstance();
    protected void WriteElementExtensions(XmlWriter writer, SyndicationCategory category, string version);
    protected void WriteElementExtensions(XmlWriter writer, SyndicationLink link, string version);
    protected void WriteElementExtensions(XmlWriter writer, SyndicationPerson person, string version);
}
public class System.ServiceModel.Syndication.SyndicationLink : object {
    private ExtensibleSyndicationObject _extensions;
    private long _length;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelationshipType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Uri>k__BackingField;
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public Uri BaseUri { get; public set; }
    public SyndicationElementExtensionCollection ElementExtensions { get; }
    public long Length { get; public set; }
    public string MediaType { get; public set; }
    public string RelationshipType { get; public set; }
    public string Title { get; public set; }
    public Uri Uri { get; public set; }
    public SyndicationLink(Uri uri);
    public SyndicationLink(Uri uri, string relationshipType, string title, string mediaType, long length);
    protected SyndicationLink(SyndicationLink source);
    public sealed virtual Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public void set_BaseUri(Uri value);
    public sealed virtual SyndicationElementExtensionCollection get_ElementExtensions();
    public long get_Length();
    public void set_Length(long value);
    [CompilerGeneratedAttribute]
public string get_MediaType();
    [CompilerGeneratedAttribute]
public void set_MediaType(string value);
    [CompilerGeneratedAttribute]
public string get_RelationshipType();
    [CompilerGeneratedAttribute]
public void set_RelationshipType(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(Uri value);
    public static SyndicationLink CreateAlternateLink(Uri uri);
    public static SyndicationLink CreateAlternateLink(Uri uri, string mediaType);
    public static SyndicationLink CreateMediaEnclosureLink(Uri uri, string mediaType, long length);
    public static SyndicationLink CreateSelfLink(Uri uri);
    public static SyndicationLink CreateSelfLink(Uri uri, string mediaType);
    public virtual SyndicationLink Clone();
    public Uri GetAbsoluteUri();
    protected internal virtual bool TryParseAttribute(string name, string ns, string value, string version);
    protected internal virtual bool TryParseElement(XmlReader reader, string version);
    protected internal virtual void WriteAttributeExtensions(XmlWriter writer, string version);
    protected internal virtual void WriteElementExtensions(XmlWriter writer, string version);
    internal void LoadElementExtensions(XmlReader readerOverUnparsedExtensions, int maxExtensionSize);
    internal void LoadElementExtensions(XmlBuffer buffer);
}
public class System.ServiceModel.Syndication.SyndicationPerson : object {
    private ExtensibleSyndicationObject _extensions;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public SyndicationElementExtensionCollection ElementExtensions { get; }
    public string Email { get; public set; }
    public string Name { get; public set; }
    public string Uri { get; public set; }
    public SyndicationPerson(string email);
    public SyndicationPerson(string email, string name, string uri);
    protected SyndicationPerson(SyndicationPerson source);
    public sealed virtual Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    public sealed virtual SyndicationElementExtensionCollection get_ElementExtensions();
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
    public virtual SyndicationPerson Clone();
    protected internal virtual bool TryParseAttribute(string name, string ns, string value, string version);
    protected internal virtual bool TryParseElement(XmlReader reader, string version);
    protected internal virtual void WriteAttributeExtensions(XmlWriter writer, string version);
    protected internal virtual void WriteElementExtensions(XmlWriter writer, string version);
    internal void LoadElementExtensions(XmlReader readerOverUnparsedExtensions, int maxExtensionSize);
    internal void LoadElementExtensions(XmlBuffer buffer);
}
public class System.ServiceModel.Syndication.SyndicationTextInput : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private SyndicationLink <Link>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Description { get; public set; }
    public string Title { get; public set; }
    public SyndicationLink Link { get; public set; }
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public SyndicationLink get_Link();
    [CompilerGeneratedAttribute]
public void set_Link(SyndicationLink value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public static class System.ServiceModel.Syndication.SyndicationVersions : object {
    public static string Atom10;
    public static string Rss20;
}
public class System.ServiceModel.Syndication.TextSyndicationContent : SyndicationContent {
    private TextSyndicationContentKind _textKind;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public string Text { get; }
    public string Type { get; }
    public TextSyndicationContent(string text);
    public TextSyndicationContent(string text, TextSyndicationContentKind textKind);
    protected TextSyndicationContent(TextSyndicationContent source);
    [CompilerGeneratedAttribute]
public string get_Text();
    public virtual string get_Type();
    public virtual SyndicationContent Clone();
    protected virtual void WriteContentsTo(XmlWriter writer);
}
public enum System.ServiceModel.Syndication.TextSyndicationContentKind : Enum {
    public int value__;
    public static TextSyndicationContentKind Plaintext;
    public static TextSyndicationContentKind Html;
    public static TextSyndicationContentKind XHtml;
}
public class System.ServiceModel.Syndication.TryParseDateTimeCallback : MulticastDelegate {
    public TryParseDateTimeCallback(object object, IntPtr method);
    public virtual bool Invoke(XmlDateTimeData data, DateTimeOffset& dateTimeOffset);
    public virtual IAsyncResult BeginInvoke(XmlDateTimeData data, DateTimeOffset& dateTimeOffset, AsyncCallback callback, object object);
    public virtual bool EndInvoke(DateTimeOffset& dateTimeOffset, IAsyncResult result);
}
public class System.ServiceModel.Syndication.TryParseUriCallback : MulticastDelegate {
    public TryParseUriCallback(object object, IntPtr method);
    public virtual bool Invoke(XmlUriData data, Uri& uri);
    public virtual IAsyncResult BeginInvoke(XmlUriData data, Uri& uri, AsyncCallback callback, object object);
    public virtual bool EndInvoke(Uri& uri, IAsyncResult result);
}
public class System.ServiceModel.Syndication.UrlSyndicationContent : SyndicationContent {
    private string _mediaType;
    [CompilerGeneratedAttribute]
private Uri <Url>k__BackingField;
    public string Type { get; }
    public Uri Url { get; }
    public UrlSyndicationContent(Uri url, string mediaType);
    protected UrlSyndicationContent(UrlSyndicationContent source);
    public virtual string get_Type();
    [CompilerGeneratedAttribute]
public Uri get_Url();
    public virtual SyndicationContent Clone();
    protected virtual void WriteContentsTo(XmlWriter writer);
}
public class System.ServiceModel.Syndication.Workspace : object {
    private Collection`1<ResourceCollectionInfo> _collections;
    private ExtensibleSyndicationObject _extensions;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private TextSyndicationContent <Title>k__BackingField;
    public Dictionary`2<XmlQualifiedName, string> AttributeExtensions { get; }
    public Uri BaseUri { get; public set; }
    public Collection`1<ResourceCollectionInfo> Collections { get; }
    public SyndicationElementExtensionCollection ElementExtensions { get; }
    public TextSyndicationContent Title { get; public set; }
    public Workspace(string title, IEnumerable`1<ResourceCollectionInfo> collections);
    public Workspace(TextSyndicationContent title, IEnumerable`1<ResourceCollectionInfo> collections);
    public sealed virtual Dictionary`2<XmlQualifiedName, string> get_AttributeExtensions();
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public void set_BaseUri(Uri value);
    public Collection`1<ResourceCollectionInfo> get_Collections();
    public sealed virtual SyndicationElementExtensionCollection get_ElementExtensions();
    [CompilerGeneratedAttribute]
public TextSyndicationContent get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(TextSyndicationContent value);
    protected internal virtual ResourceCollectionInfo CreateResourceCollection();
    protected internal virtual bool TryParseAttribute(string name, string ns, string value, string version);
    protected internal virtual bool TryParseElement(XmlReader reader, string version);
    protected internal virtual void WriteAttributeExtensions(XmlWriter writer, string version);
    protected internal virtual void WriteElementExtensions(XmlWriter writer, string version);
    internal void LoadElementExtensions(XmlReader readerOverUnparsedExtensions, int maxExtensionSize);
    internal void LoadElementExtensions(XmlBuffer buffer);
}
public class System.ServiceModel.Syndication.XmlDateTimeData : ValueType {
    [CompilerGeneratedAttribute]
private string <DateTimeString>k__BackingField;
    [CompilerGeneratedAttribute]
private XmlQualifiedName <ElementQualifiedName>k__BackingField;
    public string DateTimeString { get; }
    public XmlQualifiedName ElementQualifiedName { get; }
    public XmlDateTimeData(string dateTimeString, XmlQualifiedName elementQualifiedName);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_DateTimeString();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public XmlQualifiedName get_ElementQualifiedName();
}
public class System.ServiceModel.Syndication.XmlSyndicationContent : SyndicationContent {
    private XmlBuffer _contentBuffer;
    private string _type;
    [CompilerGeneratedAttribute]
private SyndicationElementExtension <Extension>k__BackingField;
    public SyndicationElementExtension Extension { get; }
    public string Type { get; }
    public XmlSyndicationContent(XmlReader reader);
    public XmlSyndicationContent(string type, object dataContractExtension, XmlObjectSerializer dataContractSerializer);
    public XmlSyndicationContent(string type, object xmlSerializerExtension, XmlSerializer serializer);
    public XmlSyndicationContent(string type, SyndicationElementExtension extension);
    protected XmlSyndicationContent(XmlSyndicationContent source);
    [CompilerGeneratedAttribute]
public SyndicationElementExtension get_Extension();
    public virtual string get_Type();
    public virtual SyndicationContent Clone();
    public XmlDictionaryReader GetReaderAtContent();
    public TContent ReadContent();
    public TContent ReadContent(XmlObjectSerializer dataContractSerializer);
    public TContent ReadContent(XmlSerializer serializer);
    protected virtual void WriteContentsTo(XmlWriter writer);
    private void EnsureContentBuffer();
}
public class System.ServiceModel.Syndication.XmlUriData : ValueType {
    [CompilerGeneratedAttribute]
private XmlQualifiedName <ElementQualifiedName>k__BackingField;
    [CompilerGeneratedAttribute]
private UriKind <UriKind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UriString>k__BackingField;
    public XmlQualifiedName ElementQualifiedName { get; }
    public UriKind UriKind { get; }
    public string UriString { get; }
    public XmlUriData(string uriString, UriKind uriKind, XmlQualifiedName elementQualifiedName);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public XmlQualifiedName get_ElementQualifiedName();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public UriKind get_UriKind();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_UriString();
}
internal class System.ServiceModel.XmlBuffer : object {
    private List`1<Section> _sections;
    private Byte[] _buffer;
    private int _offset;
    private BufferedStream _stream;
    private BufferState _bufferState;
    private XmlDictionaryWriter _writer;
    private XmlDictionaryReaderQuotas _quotas;
    public int BufferSize { get; }
    public int SectionCount { get; }
    public XmlBuffer(int maxBufferSize);
    public int get_BufferSize();
    public int get_SectionCount();
    public XmlDictionaryWriter OpenSection(XmlDictionaryReaderQuotas quotas);
    public void CloseSection();
    public void Close();
    private static InvalidOperationException CreateInvalidStateException();
    public XmlDictionaryReader GetReader(int sectionIndex);
    public void WriteTo(int sectionIndex, XmlWriter writer);
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string Atom10SpecRequiresTextConstruct { get; }
    internal static string DocumentFormatterDoesNotHaveDocument { get; }
    internal static string ErrorInLine { get; }
    internal static string ErrorParsingDateTime { get; }
    internal static string ErrorParsingDocument { get; }
    internal static string ErrorParsingFeed { get; }
    internal static string ErrorParsingItem { get; }
    internal static string ErrorParsingUri { get; }
    internal static string ExtensionNameNotSpecified { get; }
    internal static string FeedCreatedNullCategory { get; }
    internal static string FeedCreatedNullItem { get; }
    internal static string FeedCreatedNullPerson { get; }
    internal static string FeedFormatterDoesNotHaveFeed { get; }
    internal static string InvalidObjectTypePassed { get; }
    internal static string ItemCreatedNullCategory { get; }
    internal static string ItemCreatedNullPerson { get; }
    internal static string ItemFormatterDoesNotHaveItem { get; }
    internal static string OuterElementNameNotSpecified { get; }
    internal static string OuterNameOfElementExtensionEmpty { get; }
    internal static string UnbufferedItemsCannotBeCloned { get; }
    internal static string UnknownDocumentXml { get; }
    internal static string UnknownFeedXml { get; }
    internal static string UnknownItemXml { get; }
    internal static string UnsupportedRssVersion { get; }
    internal static string ValueMustBeNonNegative { get; }
    internal static string XmlBufferInInvalidState { get; }
    internal static string XmlFoundCData { get; }
    internal static string XmlFoundComment { get; }
    internal static string XmlFoundElement { get; }
    internal static string XmlFoundEndElement { get; }
    internal static string XmlFoundEndOfFile { get; }
    internal static string XmlFoundNodeType { get; }
    internal static string XmlFoundText { get; }
    internal static string XmlLineInfo { get; }
    internal static string XmlStartElementExpected { get; }
    internal static string InvalidSkipHourValue { get; }
    internal static string InvalidTimeToLiveValue { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_Atom10SpecRequiresTextConstruct();
    internal static string get_DocumentFormatterDoesNotHaveDocument();
    internal static string get_ErrorInLine();
    internal static string get_ErrorParsingDateTime();
    internal static string get_ErrorParsingDocument();
    internal static string get_ErrorParsingFeed();
    internal static string get_ErrorParsingItem();
    internal static string get_ErrorParsingUri();
    internal static string get_ExtensionNameNotSpecified();
    internal static string get_FeedCreatedNullCategory();
    internal static string get_FeedCreatedNullItem();
    internal static string get_FeedCreatedNullPerson();
    internal static string get_FeedFormatterDoesNotHaveFeed();
    internal static string get_InvalidObjectTypePassed();
    internal static string get_ItemCreatedNullCategory();
    internal static string get_ItemCreatedNullPerson();
    internal static string get_ItemFormatterDoesNotHaveItem();
    internal static string get_OuterElementNameNotSpecified();
    internal static string get_OuterNameOfElementExtensionEmpty();
    internal static string get_UnbufferedItemsCannotBeCloned();
    internal static string get_UnknownDocumentXml();
    internal static string get_UnknownFeedXml();
    internal static string get_UnknownItemXml();
    internal static string get_UnsupportedRssVersion();
    internal static string get_ValueMustBeNonNegative();
    internal static string get_XmlBufferInInvalidState();
    internal static string get_XmlFoundCData();
    internal static string get_XmlFoundComment();
    internal static string get_XmlFoundElement();
    internal static string get_XmlFoundEndElement();
    internal static string get_XmlFoundEndOfFile();
    internal static string get_XmlFoundNodeType();
    internal static string get_XmlFoundText();
    internal static string get_XmlLineInfo();
    internal static string get_XmlStartElementExpected();
    internal static string get_InvalidSkipHourValue();
    internal static string get_InvalidTimeToLiveValue();
}
