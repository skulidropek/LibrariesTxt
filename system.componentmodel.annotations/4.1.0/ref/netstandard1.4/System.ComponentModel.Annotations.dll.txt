[AttributeUsageAttribute("384")]
[ObsoleteAttribute("This attribute is no longer in use and will be ignored if applied.")]
public class System.ComponentModel.DataAnnotations.AssociationAttribute : Attribute {
    public bool IsForeignKey { get; public set; }
    public string Name { get; }
    public string OtherKey { get; }
    public IEnumerable`1<string> OtherKeyMembers { get; }
    public string ThisKey { get; }
    public IEnumerable`1<string> ThisKeyMembers { get; }
    public AssociationAttribute(string name, string thisKey, string otherKey);
    public bool get_IsForeignKey();
    public void set_IsForeignKey(bool value);
    public string get_Name();
    public string get_OtherKey();
    public IEnumerable`1<string> get_OtherKeyMembers();
    public string get_ThisKey();
    public IEnumerable`1<string> get_ThisKeyMembers();
}
[AttributeUsageAttribute("128")]
public class System.ComponentModel.DataAnnotations.CompareAttribute : ValidationAttribute {
    public string OtherProperty { get; }
    public string OtherPropertyDisplayName { get; }
    public bool RequiresValidationContext { get; }
    public CompareAttribute(string otherProperty);
    public string get_OtherProperty();
    public string get_OtherPropertyDisplayName();
    public virtual bool get_RequiresValidationContext();
    public virtual string FormatErrorMessage(string name);
    protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
[AttributeUsageAttribute("384")]
public class System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
public class System.ComponentModel.DataAnnotations.CreditCardAttribute : DataTypeAttribute {
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("2500")]
public class System.ComponentModel.DataAnnotations.CustomValidationAttribute : ValidationAttribute {
    public string Method { get; }
    public Type ValidatorType { get; }
    public CustomValidationAttribute(Type validatorType, string method);
    public string get_Method();
    public Type get_ValidatorType();
    public virtual string FormatErrorMessage(string name);
    protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
public enum System.ComponentModel.DataAnnotations.DataType : Enum {
    public int value__;
    public static DataType CreditCard;
    public static DataType Currency;
    public static DataType Custom;
    public static DataType Date;
    public static DataType DateTime;
    public static DataType Duration;
    public static DataType EmailAddress;
    public static DataType Html;
    public static DataType ImageUrl;
    public static DataType MultilineText;
    public static DataType Password;
    public static DataType PhoneNumber;
    public static DataType PostalCode;
    public static DataType Text;
    public static DataType Time;
    public static DataType Upload;
    public static DataType Url;
}
[AttributeUsageAttribute("2496")]
public class System.ComponentModel.DataAnnotations.DataTypeAttribute : ValidationAttribute {
    public string CustomDataType { get; }
    public DataType DataType { get; }
    public DisplayFormatAttribute DisplayFormat { get; protected set; }
    public DataTypeAttribute(DataType dataType);
    public DataTypeAttribute(string customDataType);
    public string get_CustomDataType();
    public DataType get_DataType();
    public DisplayFormatAttribute get_DisplayFormat();
    protected void set_DisplayFormat(DisplayFormatAttribute value);
    public virtual string GetDataTypeName();
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("2496")]
public class System.ComponentModel.DataAnnotations.DisplayAttribute : Attribute {
    public bool AutoGenerateField { get; public set; }
    public bool AutoGenerateFilter { get; public set; }
    public string Description { get; public set; }
    public string GroupName { get; public set; }
    public string Name { get; public set; }
    public int Order { get; public set; }
    public string Prompt { get; public set; }
    public Type ResourceType { get; public set; }
    public string ShortName { get; public set; }
    public bool get_AutoGenerateField();
    public void set_AutoGenerateField(bool value);
    public bool get_AutoGenerateFilter();
    public void set_AutoGenerateFilter(bool value);
    public string get_Description();
    public void set_Description(string value);
    public string get_GroupName();
    public void set_GroupName(string value);
    public string get_Name();
    public void set_Name(string value);
    public int get_Order();
    public void set_Order(int value);
    public string get_Prompt();
    public void set_Prompt(string value);
    public Type get_ResourceType();
    public void set_ResourceType(Type value);
    public string get_ShortName();
    public void set_ShortName(string value);
    public Nullable`1<bool> GetAutoGenerateField();
    public Nullable`1<bool> GetAutoGenerateFilter();
    public string GetDescription();
    public string GetGroupName();
    public string GetName();
    public Nullable`1<int> GetOrder();
    public string GetPrompt();
    public string GetShortName();
}
[AttributeUsageAttribute("4")]
public class System.ComponentModel.DataAnnotations.DisplayColumnAttribute : Attribute {
    public string DisplayColumn { get; }
    public string SortColumn { get; }
    public bool SortDescending { get; }
    public DisplayColumnAttribute(string displayColumn);
    public DisplayColumnAttribute(string displayColumn, string sortColumn);
    public DisplayColumnAttribute(string displayColumn, string sortColumn, bool sortDescending);
    public string get_DisplayColumn();
    public string get_SortColumn();
    public bool get_SortDescending();
}
[AttributeUsageAttribute("384")]
public class System.ComponentModel.DataAnnotations.DisplayFormatAttribute : Attribute {
    public bool ApplyFormatInEditMode { get; public set; }
    public bool ConvertEmptyStringToNull { get; public set; }
    public string DataFormatString { get; public set; }
    public bool HtmlEncode { get; public set; }
    public string NullDisplayText { get; public set; }
    public bool get_ApplyFormatInEditMode();
    public void set_ApplyFormatInEditMode(bool value);
    public bool get_ConvertEmptyStringToNull();
    public void set_ConvertEmptyStringToNull(bool value);
    public string get_DataFormatString();
    public void set_DataFormatString(string value);
    public bool get_HtmlEncode();
    public void set_HtmlEncode(bool value);
    public string get_NullDisplayText();
    public void set_NullDisplayText(string value);
}
[AttributeUsageAttribute("384")]
public class System.ComponentModel.DataAnnotations.EditableAttribute : Attribute {
    public bool AllowEdit { get; }
    public bool AllowInitialValue { get; public set; }
    public EditableAttribute(bool allowEdit);
    public bool get_AllowEdit();
    public bool get_AllowInitialValue();
    public void set_AllowInitialValue(bool value);
}
[AttributeUsageAttribute("2432")]
public class System.ComponentModel.DataAnnotations.EmailAddressAttribute : DataTypeAttribute {
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("2496")]
public class System.ComponentModel.DataAnnotations.EnumDataTypeAttribute : DataTypeAttribute {
    public Type EnumType { get; }
    public EnumDataTypeAttribute(Type enumType);
    public Type get_EnumType();
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("2432")]
public class System.ComponentModel.DataAnnotations.FileExtensionsAttribute : DataTypeAttribute {
    public string Extensions { get; public set; }
    public string get_Extensions();
    public void set_Extensions(string value);
    public virtual string FormatErrorMessage(string name);
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("384")]
[ObsoleteAttribute("This attribute is no longer in use and will be ignored if applied.")]
public class System.ComponentModel.DataAnnotations.FilterUIHintAttribute : Attribute {
    public IDictionary`2<string, object> ControlParameters { get; }
    public string FilterUIHint { get; }
    public string PresentationLayer { get; }
    public FilterUIHintAttribute(string filterUIHint);
    public FilterUIHintAttribute(string filterUIHint, string presentationLayer);
    public FilterUIHintAttribute(string filterUIHint, string presentationLayer, Object[] controlParameters);
    public IDictionary`2<string, object> get_ControlParameters();
    public string get_FilterUIHint();
    public string get_PresentationLayer();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public interface System.ComponentModel.DataAnnotations.IValidatableObject {
    public abstract virtual IEnumerable`1<ValidationResult> Validate(ValidationContext validationContext);
}
[AttributeUsageAttribute("384")]
public class System.ComponentModel.DataAnnotations.KeyAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
public class System.ComponentModel.DataAnnotations.MaxLengthAttribute : ValidationAttribute {
    public int Length { get; }
    public MaxLengthAttribute(int length);
    public int get_Length();
    public virtual string FormatErrorMessage(string name);
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("2432")]
public class System.ComponentModel.DataAnnotations.MinLengthAttribute : ValidationAttribute {
    public int Length { get; }
    public MinLengthAttribute(int length);
    public int get_Length();
    public virtual string FormatErrorMessage(string name);
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("2432")]
public class System.ComponentModel.DataAnnotations.PhoneAttribute : DataTypeAttribute {
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("2432")]
public class System.ComponentModel.DataAnnotations.RangeAttribute : ValidationAttribute {
    public object Maximum { get; }
    public object Minimum { get; }
    public Type OperandType { get; }
    public RangeAttribute(double minimum, double maximum);
    public RangeAttribute(int minimum, int maximum);
    public RangeAttribute(Type type, string minimum, string maximum);
    public object get_Maximum();
    public object get_Minimum();
    public Type get_OperandType();
    public virtual string FormatErrorMessage(string name);
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("2432")]
public class System.ComponentModel.DataAnnotations.RegularExpressionAttribute : ValidationAttribute {
    public int MatchTimeoutInMilliseconds { get; public set; }
    public string Pattern { get; }
    public RegularExpressionAttribute(string pattern);
    public int get_MatchTimeoutInMilliseconds();
    public void set_MatchTimeoutInMilliseconds(int value);
    public string get_Pattern();
    public virtual string FormatErrorMessage(string name);
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("2432")]
public class System.ComponentModel.DataAnnotations.RequiredAttribute : ValidationAttribute {
    public bool AllowEmptyStrings { get; public set; }
    public bool get_AllowEmptyStrings();
    public void set_AllowEmptyStrings(bool value);
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("384")]
public class System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute : Attribute {
    public bool Scaffold { get; }
    public ScaffoldColumnAttribute(bool scaffold);
    public bool get_Scaffold();
}
[AttributeUsageAttribute("384")]
public class System.ComponentModel.DataAnnotations.Schema.ColumnAttribute : Attribute {
    public string Name { get; }
    public int Order { get; public set; }
    public string TypeName { get; public set; }
    public ColumnAttribute(string name);
    public string get_Name();
    public int get_Order();
    public void set_Order(int value);
    public string get_TypeName();
    public void set_TypeName(string value);
}
[AttributeUsageAttribute("4")]
public class System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute : Attribute {
}
[AttributeUsageAttribute("384")]
public class System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute : Attribute {
    public DatabaseGeneratedOption DatabaseGeneratedOption { get; }
    public DatabaseGeneratedAttribute(DatabaseGeneratedOption databaseGeneratedOption);
    public DatabaseGeneratedOption get_DatabaseGeneratedOption();
}
public enum System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption : Enum {
    public int value__;
    public static DatabaseGeneratedOption Computed;
    public static DatabaseGeneratedOption Identity;
    public static DatabaseGeneratedOption None;
}
[AttributeUsageAttribute("384")]
public class System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute : Attribute {
    public string Name { get; }
    public ForeignKeyAttribute(string name);
    public string get_Name();
}
[AttributeUsageAttribute("384")]
public class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute : Attribute {
    public string Property { get; }
    public InversePropertyAttribute(string property);
    public string get_Property();
}
[AttributeUsageAttribute("388")]
public class System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute : Attribute {
}
[AttributeUsageAttribute("4")]
public class System.ComponentModel.DataAnnotations.Schema.TableAttribute : Attribute {
    public string Name { get; }
    public string Schema { get; public set; }
    public TableAttribute(string name);
    public string get_Name();
    public string get_Schema();
    public void set_Schema(string value);
}
[AttributeUsageAttribute("2432")]
public class System.ComponentModel.DataAnnotations.StringLengthAttribute : ValidationAttribute {
    public int MaximumLength { get; }
    public int MinimumLength { get; public set; }
    public StringLengthAttribute(int maximumLength);
    public int get_MaximumLength();
    public int get_MinimumLength();
    public void set_MinimumLength(int value);
    public virtual string FormatErrorMessage(string name);
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("384")]
public class System.ComponentModel.DataAnnotations.TimestampAttribute : Attribute {
}
[AttributeUsageAttribute("384")]
public class System.ComponentModel.DataAnnotations.UIHintAttribute : Attribute {
    public IDictionary`2<string, object> ControlParameters { get; }
    public string PresentationLayer { get; }
    public string UIHint { get; }
    public UIHintAttribute(string uiHint);
    public UIHintAttribute(string uiHint, string presentationLayer);
    public UIHintAttribute(string uiHint, string presentationLayer, Object[] controlParameters);
    public IDictionary`2<string, object> get_ControlParameters();
    public string get_PresentationLayer();
    public string get_UIHint();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[AttributeUsageAttribute("2432")]
public class System.ComponentModel.DataAnnotations.UrlAttribute : DataTypeAttribute {
    public virtual bool IsValid(object value);
}
public abstract class System.ComponentModel.DataAnnotations.ValidationAttribute : Attribute {
    public string ErrorMessage { get; public set; }
    public string ErrorMessageResourceName { get; public set; }
    public Type ErrorMessageResourceType { get; public set; }
    protected string ErrorMessageString { get; }
    public bool RequiresValidationContext { get; }
    protected ValidationAttribute(Func`1<string> errorMessageAccessor);
    protected ValidationAttribute(string errorMessage);
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    public string get_ErrorMessageResourceName();
    public void set_ErrorMessageResourceName(string value);
    public Type get_ErrorMessageResourceType();
    public void set_ErrorMessageResourceType(Type value);
    protected string get_ErrorMessageString();
    public virtual bool get_RequiresValidationContext();
    public virtual string FormatErrorMessage(string name);
    public ValidationResult GetValidationResult(object value, ValidationContext validationContext);
    public virtual bool IsValid(object value);
    protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
    public void Validate(object value, ValidationContext validationContext);
    public void Validate(object value, string name);
}
public class System.ComponentModel.DataAnnotations.ValidationContext : object {
    public string DisplayName { get; public set; }
    public IDictionary`2<object, object> Items { get; }
    public string MemberName { get; public set; }
    public object ObjectInstance { get; }
    public Type ObjectType { get; }
    public ValidationContext(object instance);
    public ValidationContext(object instance, IDictionary`2<object, object> items);
    public ValidationContext(object instance, IServiceProvider serviceProvider, IDictionary`2<object, object> items);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public IDictionary`2<object, object> get_Items();
    public string get_MemberName();
    public void set_MemberName(string value);
    public object get_ObjectInstance();
    public Type get_ObjectType();
    public sealed virtual object GetService(Type serviceType);
    public void InitializeServiceProvider(Func`2<Type, object> serviceProvider);
}
public class System.ComponentModel.DataAnnotations.ValidationException : Exception {
    public ValidationAttribute ValidationAttribute { get; }
    public ValidationResult ValidationResult { get; }
    public object Value { get; }
    public ValidationException(ValidationResult validationResult, ValidationAttribute validatingAttribute, object value);
    public ValidationException(string message);
    public ValidationException(string errorMessage, ValidationAttribute validatingAttribute, object value);
    public ValidationException(string message, Exception innerException);
    public ValidationAttribute get_ValidationAttribute();
    public ValidationResult get_ValidationResult();
    public object get_Value();
}
public class System.ComponentModel.DataAnnotations.ValidationResult : object {
    public static ValidationResult Success;
    public string ErrorMessage { get; public set; }
    public IEnumerable`1<string> MemberNames { get; }
    protected ValidationResult(ValidationResult validationResult);
    public ValidationResult(string errorMessage);
    public ValidationResult(string errorMessage, IEnumerable`1<string> memberNames);
    public string get_ErrorMessage();
    public void set_ErrorMessage(string value);
    public IEnumerable`1<string> get_MemberNames();
    public virtual string ToString();
}
public static class System.ComponentModel.DataAnnotations.Validator : object {
    public static bool TryValidateObject(object instance, ValidationContext validationContext, ICollection`1<ValidationResult> validationResults);
    public static bool TryValidateObject(object instance, ValidationContext validationContext, ICollection`1<ValidationResult> validationResults, bool validateAllProperties);
    public static bool TryValidateProperty(object value, ValidationContext validationContext, ICollection`1<ValidationResult> validationResults);
    public static bool TryValidateValue(object value, ValidationContext validationContext, ICollection`1<ValidationResult> validationResults, IEnumerable`1<ValidationAttribute> validationAttributes);
    public static void ValidateObject(object instance, ValidationContext validationContext);
    public static void ValidateObject(object instance, ValidationContext validationContext, bool validateAllProperties);
    public static void ValidateProperty(object value, ValidationContext validationContext);
    public static void ValidateValue(object value, ValidationContext validationContext, IEnumerable`1<ValidationAttribute> validationAttributes);
}
