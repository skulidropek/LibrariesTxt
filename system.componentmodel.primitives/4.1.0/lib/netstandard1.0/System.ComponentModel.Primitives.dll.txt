internal static class FxResources.System.ComponentModel.Primitives.SR : object {
}
[AttributeUsageAttribute("32767")]
public class System.ComponentModel.BrowsableAttribute : Attribute {
    public static BrowsableAttribute Yes;
    public static BrowsableAttribute No;
    public static BrowsableAttribute Default;
    private bool _browsable;
    public bool Browsable { get; }
    public BrowsableAttribute(bool browsable);
    private static BrowsableAttribute();
    public bool get_Browsable();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[AttributeUsageAttribute("32767")]
public class System.ComponentModel.CategoryAttribute : Attribute {
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_action;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_appearance;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_asynchronous;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_behavior;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_data;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_design;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_dragDrop;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_defAttr;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_focus;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_format;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_key;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_layout;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_mouse;
    private static CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) s_windowStyle;
    private bool _localized;
    private string _categoryValue;
    public static CategoryAttribute Action { get; }
    public static CategoryAttribute Appearance { get; }
    public static CategoryAttribute Asynchronous { get; }
    public static CategoryAttribute Behavior { get; }
    public static CategoryAttribute Data { get; }
    public static CategoryAttribute Default { get; }
    public static CategoryAttribute Design { get; }
    public static CategoryAttribute DragDrop { get; }
    public static CategoryAttribute Focus { get; }
    public static CategoryAttribute Format { get; }
    public static CategoryAttribute Key { get; }
    public static CategoryAttribute Layout { get; }
    public static CategoryAttribute Mouse { get; }
    public static CategoryAttribute WindowStyle { get; }
    public string Category { get; }
    public CategoryAttribute(string category);
    public static CategoryAttribute get_Action();
    public static CategoryAttribute get_Appearance();
    public static CategoryAttribute get_Asynchronous();
    public static CategoryAttribute get_Behavior();
    public static CategoryAttribute get_Data();
    public static CategoryAttribute get_Default();
    public static CategoryAttribute get_Design();
    public static CategoryAttribute get_DragDrop();
    public static CategoryAttribute get_Focus();
    public static CategoryAttribute get_Format();
    public static CategoryAttribute get_Key();
    public static CategoryAttribute get_Layout();
    public static CategoryAttribute get_Mouse();
    public static CategoryAttribute get_WindowStyle();
    public string get_Category();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    protected virtual string GetLocalizedString(string value);
}
public class System.ComponentModel.ComponentCollection : object {
}
[AttributeUsageAttribute("32767")]
public class System.ComponentModel.DescriptionAttribute : Attribute {
    public static DescriptionAttribute Default;
    [CompilerGeneratedAttribute]
private string <DescriptionValue>k__BackingField;
    public string Description { get; }
    protected string DescriptionValue { get; protected set; }
    public DescriptionAttribute(string description);
    private static DescriptionAttribute();
    public virtual string get_Description();
    [CompilerGeneratedAttribute]
protected string get_DescriptionValue();
    [CompilerGeneratedAttribute]
protected void set_DescriptionValue(string value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[AttributeUsageAttribute("4")]
public class System.ComponentModel.DesignerCategoryAttribute : Attribute {
    public static DesignerCategoryAttribute Component;
    public static DesignerCategoryAttribute Default;
    public static DesignerCategoryAttribute Form;
    public static DesignerCategoryAttribute Generic;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    public string Category { get; }
    public DesignerCategoryAttribute(string category);
    private static DesignerCategoryAttribute();
    [CompilerGeneratedAttribute]
public string get_Category();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public enum System.ComponentModel.DesignerSerializationVisibility : Enum {
    public int value__;
    public static DesignerSerializationVisibility Hidden;
    public static DesignerSerializationVisibility Visible;
    public static DesignerSerializationVisibility Content;
}
[AttributeUsageAttribute("960")]
public class System.ComponentModel.DesignerSerializationVisibilityAttribute : Attribute {
    public static DesignerSerializationVisibilityAttribute Content;
    public static DesignerSerializationVisibilityAttribute Hidden;
    public static DesignerSerializationVisibilityAttribute Visible;
    public static DesignerSerializationVisibilityAttribute Default;
    private DesignerSerializationVisibility _visibility;
    public DesignerSerializationVisibility Visibility { get; }
    public DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility visibility);
    private static DesignerSerializationVisibilityAttribute();
    public DesignerSerializationVisibility get_Visibility();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[AttributeUsageAttribute("32767")]
public class System.ComponentModel.DesignOnlyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <IsDesignOnly>k__BackingField;
    public static DesignOnlyAttribute Yes;
    public static DesignOnlyAttribute No;
    public static DesignOnlyAttribute Default;
    public bool IsDesignOnly { get; }
    public DesignOnlyAttribute(bool isDesignOnly);
    private static DesignOnlyAttribute();
    [CompilerGeneratedAttribute]
public bool get_IsDesignOnly();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[AttributeUsageAttribute("708")]
public class System.ComponentModel.DisplayNameAttribute : Attribute {
    public static DisplayNameAttribute Default;
    [CompilerGeneratedAttribute]
private string <DisplayNameValue>k__BackingField;
    public string DisplayName { get; }
    protected string DisplayNameValue { get; protected set; }
    public DisplayNameAttribute(string displayName);
    private static DisplayNameAttribute();
    public virtual string get_DisplayName();
    [CompilerGeneratedAttribute]
protected string get_DisplayNameValue();
    [CompilerGeneratedAttribute]
protected void set_DisplayNameValue(string value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[DefaultMemberAttribute("Item")]
public class System.ComponentModel.EventHandlerList : object {
    private ListEntry _head;
    public Delegate Item { get; public set; }
    public Delegate get_Item(object key);
    public void set_Item(object key, Delegate value);
    public void AddHandler(object key, Delegate value);
    public void AddHandlers(EventHandlerList listToAddFrom);
    public sealed virtual void Dispose();
    private ListEntry Find(object key);
    public void RemoveHandler(object key, Delegate value);
}
public interface System.ComponentModel.IComponent {
    public ISite Site { get; public set; }
    public abstract virtual ISite get_Site();
    public abstract virtual void set_Site(ISite value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_Disposed(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Disposed(EventHandler value);
}
public interface System.ComponentModel.IContainer {
    public ComponentCollection Components { get; }
    public abstract virtual void Add(IComponent component);
    public abstract virtual void Add(IComponent component, string name);
    public abstract virtual ComponentCollection get_Components();
    public abstract virtual void Remove(IComponent component);
}
[AttributeUsageAttribute("32767")]
public class System.ComponentModel.ImmutableObjectAttribute : Attribute {
    public static ImmutableObjectAttribute Yes;
    public static ImmutableObjectAttribute No;
    public static ImmutableObjectAttribute Default;
    [CompilerGeneratedAttribute]
private bool <Immutable>k__BackingField;
    public bool Immutable { get; }
    public ImmutableObjectAttribute(bool immutable);
    private static ImmutableObjectAttribute();
    [CompilerGeneratedAttribute]
public bool get_Immutable();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[AttributeUsageAttribute("4")]
public class System.ComponentModel.InitializationEventAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <EventName>k__BackingField;
    public string EventName { get; }
    public InitializationEventAttribute(string eventName);
    [CompilerGeneratedAttribute]
public string get_EventName();
}
public interface System.ComponentModel.ISite {
    public IComponent Component { get; }
    public IContainer Container { get; }
    public bool DesignMode { get; }
    public string Name { get; public set; }
    public abstract virtual IComponent get_Component();
    public abstract virtual IContainer get_Container();
    public abstract virtual bool get_DesignMode();
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
}
[AttributeUsageAttribute("32767")]
public class System.ComponentModel.LocalizableAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <IsLocalizable>k__BackingField;
    public static LocalizableAttribute Yes;
    public static LocalizableAttribute No;
    public static LocalizableAttribute Default;
    public bool IsLocalizable { get; }
    public LocalizableAttribute(bool isLocalizable);
    private static LocalizableAttribute();
    [CompilerGeneratedAttribute]
public bool get_IsLocalizable();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[AttributeUsageAttribute("32767")]
public class System.ComponentModel.MergablePropertyAttribute : Attribute {
    public static MergablePropertyAttribute Yes;
    public static MergablePropertyAttribute No;
    public static MergablePropertyAttribute Default;
    [CompilerGeneratedAttribute]
private bool <AllowMerge>k__BackingField;
    public bool AllowMerge { get; }
    public MergablePropertyAttribute(bool allowMerge);
    private static MergablePropertyAttribute();
    [CompilerGeneratedAttribute]
public bool get_AllowMerge();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[AttributeUsageAttribute("128")]
public class System.ComponentModel.NotifyParentPropertyAttribute : Attribute {
    public static NotifyParentPropertyAttribute Yes;
    public static NotifyParentPropertyAttribute No;
    public static NotifyParentPropertyAttribute Default;
    [CompilerGeneratedAttribute]
private bool <NotifyParent>k__BackingField;
    public bool NotifyParent { get; }
    public NotifyParentPropertyAttribute(bool notifyParent);
    private static NotifyParentPropertyAttribute();
    [CompilerGeneratedAttribute]
public bool get_NotifyParent();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[AttributeUsageAttribute("32767")]
public class System.ComponentModel.ParenthesizePropertyNameAttribute : Attribute {
    public static ParenthesizePropertyNameAttribute Default;
    [CompilerGeneratedAttribute]
private bool <NeedParenthesis>k__BackingField;
    public bool NeedParenthesis { get; }
    public ParenthesizePropertyNameAttribute(bool needParenthesis);
    private static ParenthesizePropertyNameAttribute();
    [CompilerGeneratedAttribute]
public bool get_NeedParenthesis();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[AttributeUsageAttribute("32767")]
public class System.ComponentModel.ReadOnlyAttribute : Attribute {
    public static ReadOnlyAttribute Yes;
    public static ReadOnlyAttribute No;
    public static ReadOnlyAttribute Default;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    public bool IsReadOnly { get; }
    public ReadOnlyAttribute(bool isReadOnly);
    private static ReadOnlyAttribute();
    [CompilerGeneratedAttribute]
public bool get_IsReadOnly();
    public virtual bool Equals(object value);
    public virtual int GetHashCode();
}
public enum System.ComponentModel.RefreshProperties : Enum {
    public int value__;
    public static RefreshProperties None;
    public static RefreshProperties All;
    public static RefreshProperties Repaint;
}
[AttributeUsageAttribute("32767")]
public class System.ComponentModel.RefreshPropertiesAttribute : Attribute {
    public static RefreshPropertiesAttribute All;
    public static RefreshPropertiesAttribute Repaint;
    public static RefreshPropertiesAttribute Default;
    [CompilerGeneratedAttribute]
private RefreshProperties <RefreshProperties>k__BackingField;
    public RefreshProperties RefreshProperties { get; }
    public RefreshPropertiesAttribute(RefreshProperties refresh);
    private static RefreshPropertiesAttribute();
    [CompilerGeneratedAttribute]
public RefreshProperties get_RefreshProperties();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string PropertyCategoryAction { get; }
    internal static string PropertyCategoryAppearance { get; }
    internal static string PropertyCategoryAsynchronous { get; }
    internal static string PropertyCategoryBehavior { get; }
    internal static string PropertyCategoryConfig { get; }
    internal static string PropertyCategoryData { get; }
    internal static string PropertyCategoryDDE { get; }
    internal static string PropertyCategoryDefault { get; }
    internal static string PropertyCategoryDesign { get; }
    internal static string PropertyCategoryDragDrop { get; }
    internal static string PropertyCategoryFocus { get; }
    internal static string PropertyCategoryFont { get; }
    internal static string PropertyCategoryFormat { get; }
    internal static string PropertyCategoryKey { get; }
    internal static string PropertyCategoryLayout { get; }
    internal static string PropertyCategoryList { get; }
    internal static string PropertyCategoryMouse { get; }
    internal static string PropertyCategoryPosition { get; }
    internal static string PropertyCategoryScale { get; }
    internal static string PropertyCategoryText { get; }
    internal static string PropertyCategoryWindowStyle { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_PropertyCategoryAction();
    internal static string get_PropertyCategoryAppearance();
    internal static string get_PropertyCategoryAsynchronous();
    internal static string get_PropertyCategoryBehavior();
    internal static string get_PropertyCategoryConfig();
    internal static string get_PropertyCategoryData();
    internal static string get_PropertyCategoryDDE();
    internal static string get_PropertyCategoryDefault();
    internal static string get_PropertyCategoryDesign();
    internal static string get_PropertyCategoryDragDrop();
    internal static string get_PropertyCategoryFocus();
    internal static string get_PropertyCategoryFont();
    internal static string get_PropertyCategoryFormat();
    internal static string get_PropertyCategoryKey();
    internal static string get_PropertyCategoryLayout();
    internal static string get_PropertyCategoryList();
    internal static string get_PropertyCategoryMouse();
    internal static string get_PropertyCategoryPosition();
    internal static string get_PropertyCategoryScale();
    internal static string get_PropertyCategoryText();
    internal static string get_PropertyCategoryWindowStyle();
    internal static Type get_ResourceType();
}
