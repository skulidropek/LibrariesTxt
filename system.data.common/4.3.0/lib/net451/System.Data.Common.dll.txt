internal static class FxResources.System.Data.Common.SR : object {
}
internal class System.Data.Common.DataRowDbColumn : DbColumn {
    private DataColumnCollection schemaColumns;
    private DataRow schemaRow;
    public DataRowDbColumn(DataRow readerSchemaRow, DataColumnCollection readerSchemaColumns);
    private void populateFields();
    private T GetDbColumnValue(string columnName);
}
[DefaultMemberAttribute("Item")]
public abstract class System.Data.Common.DbColumn : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowDBNull>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseCatalogName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseSchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseServerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseTableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ColumnOrdinal>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ColumnSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsAliased>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsAutoIncrement>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsHidden>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsLong>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsUnique>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumericPrecision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumericScale>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UdtAssemblyQualifiedName>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DataType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataTypeName>k__BackingField;
    public Nullable`1<bool> AllowDBNull { get; protected set; }
    public string BaseCatalogName { get; protected set; }
    public string BaseColumnName { get; protected set; }
    public string BaseSchemaName { get; protected set; }
    public string BaseServerName { get; protected set; }
    public string BaseTableName { get; protected set; }
    public string ColumnName { get; protected set; }
    public Nullable`1<int> ColumnOrdinal { get; protected set; }
    public Nullable`1<int> ColumnSize { get; protected set; }
    public Nullable`1<bool> IsAliased { get; protected set; }
    public Nullable`1<bool> IsAutoIncrement { get; protected set; }
    public Nullable`1<bool> IsExpression { get; protected set; }
    public Nullable`1<bool> IsHidden { get; protected set; }
    public Nullable`1<bool> IsIdentity { get; protected set; }
    public Nullable`1<bool> IsKey { get; protected set; }
    public Nullable`1<bool> IsLong { get; protected set; }
    public Nullable`1<bool> IsReadOnly { get; protected set; }
    public Nullable`1<bool> IsUnique { get; protected set; }
    public Nullable`1<int> NumericPrecision { get; protected set; }
    public Nullable`1<int> NumericScale { get; protected set; }
    public string UdtAssemblyQualifiedName { get; protected set; }
    public Type DataType { get; protected set; }
    public string DataTypeName { get; protected set; }
    public object Item { get; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowDBNull();
    [CompilerGeneratedAttribute]
protected void set_AllowDBNull(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_BaseCatalogName();
    [CompilerGeneratedAttribute]
protected void set_BaseCatalogName(string value);
    [CompilerGeneratedAttribute]
public string get_BaseColumnName();
    [CompilerGeneratedAttribute]
protected void set_BaseColumnName(string value);
    [CompilerGeneratedAttribute]
public string get_BaseSchemaName();
    [CompilerGeneratedAttribute]
protected void set_BaseSchemaName(string value);
    [CompilerGeneratedAttribute]
public string get_BaseServerName();
    [CompilerGeneratedAttribute]
protected void set_BaseServerName(string value);
    [CompilerGeneratedAttribute]
public string get_BaseTableName();
    [CompilerGeneratedAttribute]
protected void set_BaseTableName(string value);
    [CompilerGeneratedAttribute]
public string get_ColumnName();
    [CompilerGeneratedAttribute]
protected void set_ColumnName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ColumnOrdinal();
    [CompilerGeneratedAttribute]
protected void set_ColumnOrdinal(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ColumnSize();
    [CompilerGeneratedAttribute]
protected void set_ColumnSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsAliased();
    [CompilerGeneratedAttribute]
protected void set_IsAliased(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsAutoIncrement();
    [CompilerGeneratedAttribute]
protected void set_IsAutoIncrement(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsExpression();
    [CompilerGeneratedAttribute]
protected void set_IsExpression(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsHidden();
    [CompilerGeneratedAttribute]
protected void set_IsHidden(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsIdentity();
    [CompilerGeneratedAttribute]
protected void set_IsIdentity(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsKey();
    [CompilerGeneratedAttribute]
protected void set_IsKey(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsLong();
    [CompilerGeneratedAttribute]
protected void set_IsLong(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsReadOnly();
    [CompilerGeneratedAttribute]
protected void set_IsReadOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsUnique();
    [CompilerGeneratedAttribute]
protected void set_IsUnique(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NumericPrecision();
    [CompilerGeneratedAttribute]
protected void set_NumericPrecision(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NumericScale();
    [CompilerGeneratedAttribute]
protected void set_NumericScale(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_UdtAssemblyQualifiedName();
    [CompilerGeneratedAttribute]
protected void set_UdtAssemblyQualifiedName(string value);
    [CompilerGeneratedAttribute]
public Type get_DataType();
    [CompilerGeneratedAttribute]
protected void set_DataType(Type value);
    [CompilerGeneratedAttribute]
public string get_DataTypeName();
    [CompilerGeneratedAttribute]
protected void set_DataTypeName(string value);
    public virtual object get_Item(string property);
}
[ExtensionAttribute]
public static class System.Data.Common.DbDataReaderExtensions : object {
    [ExtensionAttribute]
public static ReadOnlyCollection`1<DbColumn> GetColumnSchema(DbDataReader reader);
    [ExtensionAttribute]
public static bool CanGetColumnSchema(DbDataReader reader);
}
public interface System.Data.Common.IDbColumnSchemaGenerator {
    public abstract virtual ReadOnlyCollection`1<DbColumn> GetColumnSchema();
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string ADP_ConnectionStringSyntax { get; }
    internal static string ADP_EmptyString { get; }
    internal static string ADP_InternalProviderError { get; }
    internal static string ADP_InvalidKey { get; }
    internal static string ADP_InvalidValue { get; }
    internal static string ADP_KeywordNotSupported { get; }
    internal static string SqlConvert_ConvertFailed { get; }
    internal static string ADP_InvalidSourceBufferIndex { get; }
    internal static string SQL_InvalidDataLength { get; }
    internal static string SQL_InvalidBufferSizeOrIndex { get; }
    internal static string ADP_InvalidDestinationBufferIndex { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_ADP_ConnectionStringSyntax();
    internal static string get_ADP_EmptyString();
    internal static string get_ADP_InternalProviderError();
    internal static string get_ADP_InvalidKey();
    internal static string get_ADP_InvalidValue();
    internal static string get_ADP_KeywordNotSupported();
    internal static string get_SqlConvert_ConvertFailed();
    internal static string get_ADP_InvalidSourceBufferIndex();
    internal static string get_SQL_InvalidDataLength();
    internal static string get_SQL_InvalidBufferSizeOrIndex();
    internal static string get_ADP_InvalidDestinationBufferIndex();
    internal static Type get_ResourceType();
}
