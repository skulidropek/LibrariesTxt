internal static class FxResources.System.Diagnostics.DiagnosticSource.SR : object {
}
internal class System.Diagnostics.Activity : object {
    internal static DateTime GetUtcNow();
}
public class System.Diagnostics.DiagnosticListener : DiagnosticSource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    private DiagnosticSubscription modreq(System.Runtime.CompilerServices.IsVolatile) _subscriptions;
    private DiagnosticListener _next;
    private bool _disposed;
    private static DiagnosticListener s_allListeners;
    private static AllListenerObservable s_allListenerObservable;
    private static object s_allListenersLock;
    public static IObservable`1<DiagnosticListener> AllListeners { get; }
    public string Name { get; private set; }
    public DiagnosticListener(string name);
    private static DiagnosticListener();
    public static IObservable`1<DiagnosticListener> get_AllListeners();
    public virtual IDisposable Subscribe(IObserver`1<KeyValuePair`2<string, object>> observer, Predicate`1<string> isEnabled);
    public virtual IDisposable Subscribe(IObserver`1<KeyValuePair`2<string, object>> observer, Func`4<string, object, object, bool> isEnabled);
    public virtual IDisposable Subscribe(IObserver`1<KeyValuePair`2<string, object>> observer);
    public virtual void Dispose();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    public virtual string ToString();
    public bool IsEnabled();
    public virtual bool IsEnabled(string name);
    public virtual bool IsEnabled(string name, object arg1, object arg2);
    public virtual void Write(string name, object value);
    private IDisposable SubscribeInternal(IObserver`1<KeyValuePair`2<string, object>> observer, Predicate`1<string> isEnabled1Arg, Func`4<string, object, object, bool> isEnabled3Arg, Action`2<Activity, object> onActivityImport, Action`2<Activity, object> onActivityExport);
    [CompilerGeneratedAttribute]
private bool <Subscribe>b__3_0(string name);
}
public abstract class System.Diagnostics.DiagnosticSource : object {
    public abstract virtual void Write(string name, object value);
    public abstract virtual bool IsEnabled(string name);
    public virtual bool IsEnabled(string name, object arg1, object arg2);
}
[EventSourceAttribute]
internal class System.Diagnostics.DiagnosticSourceEventSource : EventSource {
    public static DiagnosticSourceEventSource Logger;
    private string AspNetCoreHostingKeywordValue;
    private string EntityFrameworkCoreCommandsKeywordValue;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _false;
    private FilterAndTransform _specs;
    private static DiagnosticSourceEventSource();
    [EventAttribute("1")]
public void Message(string Message);
    [EventAttribute("3")]
private void EventJson(string SourceName, string EventName, string ArgmentsJson);
    [EventAttribute("10")]
private void NewDiagnosticListener(string SourceName);
    private static string ToJson(IEnumerable`1<KeyValuePair`2<string, string>> keyValues);
    [NonEventAttribute]
protected virtual void OnEventCommand(EventCommandEventArgs command);
    private static string NewLineSeparate(string str1, string str2);
    [NonEventAttribute]
private void BreakPointWithDebuggerFuncEval();
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string ActivityIdFormatInvalid { get; }
    internal static string ActivityNotStarted { get; }
    internal static string ActivityStartAlreadyStarted { get; }
    internal static string EndTimeNotUtc { get; }
    internal static string OperationNameInvalid { get; }
    internal static string ParentIdAlreadySet { get; }
    internal static string ParentIdInvalid { get; }
    internal static string SetFormatOnStartedActivity { get; }
    internal static string SetParentIdOnActivityWithParent { get; }
    internal static string StartTimeNotUtc { get; }
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_ActivityIdFormatInvalid();
    internal static string get_ActivityNotStarted();
    internal static string get_ActivityStartAlreadyStarted();
    internal static string get_EndTimeNotUtc();
    internal static string get_OperationNameInvalid();
    internal static string get_ParentIdAlreadySet();
    internal static string get_ParentIdInvalid();
    internal static string get_SetFormatOnStartedActivity();
    internal static string get_SetParentIdOnActivityWithParent();
    internal static string get_StartTimeNotUtc();
}
