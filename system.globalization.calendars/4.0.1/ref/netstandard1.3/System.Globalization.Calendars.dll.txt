public class System.Globalization.ChineseLunisolarCalendar : EastAsianLunisolarCalendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int GetEra(DateTime time);
}
public abstract class System.Globalization.EastAsianLunisolarCalendar : Calendar {
    public int TwoDigitYearMax { get; public set; }
    public virtual int get_TwoDigitYearMax();
    public virtual void set_TwoDigitYearMax(int value);
    public virtual DateTime AddMonths(DateTime time, int months);
    public virtual DateTime AddYears(DateTime time, int years);
    public int GetCelestialStem(int sexagenaryYear);
    public virtual int GetDayOfMonth(DateTime time);
    public virtual DayOfWeek GetDayOfWeek(DateTime time);
    public virtual int GetDayOfYear(DateTime time);
    public virtual int GetDaysInMonth(int year, int month, int era);
    public virtual int GetDaysInYear(int year, int era);
    public virtual int GetLeapMonth(int year, int era);
    public virtual int GetMonth(DateTime time);
    public virtual int GetMonthsInYear(int year, int era);
    public virtual int GetSexagenaryYear(DateTime time);
    public int GetTerrestrialBranch(int sexagenaryYear);
    public virtual int GetYear(DateTime time);
    public virtual bool IsLeapDay(int year, int month, int day, int era);
    public virtual bool IsLeapMonth(int year, int month, int era);
    public virtual bool IsLeapYear(int year, int era);
    public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    public virtual int ToFourDigitYear(int year);
}
public class System.Globalization.GregorianCalendar : Calendar {
    public GregorianCalendarTypes CalendarType { get; public set; }
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public int TwoDigitYearMax { get; public set; }
    public GregorianCalendar(GregorianCalendarTypes type);
    public virtual GregorianCalendarTypes get_CalendarType();
    public virtual void set_CalendarType(GregorianCalendarTypes value);
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int get_TwoDigitYearMax();
    public virtual void set_TwoDigitYearMax(int value);
    public virtual DateTime AddMonths(DateTime time, int months);
    public virtual DateTime AddYears(DateTime time, int years);
    public virtual int GetDayOfMonth(DateTime time);
    public virtual DayOfWeek GetDayOfWeek(DateTime time);
    public virtual int GetDayOfYear(DateTime time);
    public virtual int GetDaysInMonth(int year, int month, int era);
    public virtual int GetDaysInYear(int year, int era);
    public virtual int GetEra(DateTime time);
    public virtual int GetLeapMonth(int year, int era);
    public virtual int GetMonth(DateTime time);
    public virtual int GetMonthsInYear(int year, int era);
    public virtual int GetYear(DateTime time);
    public virtual bool IsLeapDay(int year, int month, int day, int era);
    public virtual bool IsLeapMonth(int year, int month, int era);
    public virtual bool IsLeapYear(int year, int era);
    public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    public virtual int ToFourDigitYear(int year);
}
public enum System.Globalization.GregorianCalendarTypes : Enum {
    public int value__;
    public static GregorianCalendarTypes Arabic;
    public static GregorianCalendarTypes Localized;
    public static GregorianCalendarTypes MiddleEastFrench;
    public static GregorianCalendarTypes TransliteratedEnglish;
    public static GregorianCalendarTypes TransliteratedFrench;
    public static GregorianCalendarTypes USEnglish;
}
public class System.Globalization.HebrewCalendar : Calendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public int TwoDigitYearMax { get; public set; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int get_TwoDigitYearMax();
    public virtual void set_TwoDigitYearMax(int value);
    public virtual DateTime AddMonths(DateTime time, int months);
    public virtual DateTime AddYears(DateTime time, int years);
    public virtual int GetDayOfMonth(DateTime time);
    public virtual DayOfWeek GetDayOfWeek(DateTime time);
    public virtual int GetDayOfYear(DateTime time);
    public virtual int GetDaysInMonth(int year, int month, int era);
    public virtual int GetDaysInYear(int year, int era);
    public virtual int GetEra(DateTime time);
    public virtual int GetLeapMonth(int year, int era);
    public virtual int GetMonth(DateTime time);
    public virtual int GetMonthsInYear(int year, int era);
    public virtual int GetYear(DateTime time);
    public virtual bool IsLeapDay(int year, int month, int day, int era);
    public virtual bool IsLeapMonth(int year, int month, int era);
    public virtual bool IsLeapYear(int year, int era);
    public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    public virtual int ToFourDigitYear(int year);
}
public class System.Globalization.HijriCalendar : Calendar {
    public Int32[] Eras { get; }
    public int HijriAdjustment { get; public set; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public int TwoDigitYearMax { get; public set; }
    public virtual Int32[] get_Eras();
    public int get_HijriAdjustment();
    public void set_HijriAdjustment(int value);
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int get_TwoDigitYearMax();
    public virtual void set_TwoDigitYearMax(int value);
    public virtual DateTime AddMonths(DateTime time, int months);
    public virtual DateTime AddYears(DateTime time, int years);
    public virtual int GetDayOfMonth(DateTime time);
    public virtual DayOfWeek GetDayOfWeek(DateTime time);
    public virtual int GetDayOfYear(DateTime time);
    public virtual int GetDaysInMonth(int year, int month, int era);
    public virtual int GetDaysInYear(int year, int era);
    public virtual int GetEra(DateTime time);
    public virtual int GetLeapMonth(int year, int era);
    public virtual int GetMonth(DateTime time);
    public virtual int GetMonthsInYear(int year, int era);
    public virtual int GetYear(DateTime time);
    public virtual bool IsLeapDay(int year, int month, int day, int era);
    public virtual bool IsLeapMonth(int year, int month, int era);
    public virtual bool IsLeapYear(int year, int era);
    public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    public virtual int ToFourDigitYear(int year);
}
public class System.Globalization.JapaneseCalendar : Calendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public int TwoDigitYearMax { get; public set; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int get_TwoDigitYearMax();
    public virtual void set_TwoDigitYearMax(int value);
    public virtual DateTime AddMonths(DateTime time, int months);
    public virtual DateTime AddYears(DateTime time, int years);
    public virtual int GetDayOfMonth(DateTime time);
    public virtual DayOfWeek GetDayOfWeek(DateTime time);
    public virtual int GetDayOfYear(DateTime time);
    public virtual int GetDaysInMonth(int year, int month, int era);
    public virtual int GetDaysInYear(int year, int era);
    public virtual int GetEra(DateTime time);
    public virtual int GetLeapMonth(int year, int era);
    public virtual int GetMonth(DateTime time);
    public virtual int GetMonthsInYear(int year, int era);
    public virtual int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    public virtual int GetYear(DateTime time);
    public virtual bool IsLeapDay(int year, int month, int day, int era);
    public virtual bool IsLeapMonth(int year, int month, int era);
    public virtual bool IsLeapYear(int year, int era);
    public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    public virtual int ToFourDigitYear(int year);
}
public class System.Globalization.JapaneseLunisolarCalendar : EastAsianLunisolarCalendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int GetEra(DateTime time);
}
public class System.Globalization.JulianCalendar : Calendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public int TwoDigitYearMax { get; public set; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int get_TwoDigitYearMax();
    public virtual void set_TwoDigitYearMax(int value);
    public virtual DateTime AddMonths(DateTime time, int months);
    public virtual DateTime AddYears(DateTime time, int years);
    public virtual int GetDayOfMonth(DateTime time);
    public virtual DayOfWeek GetDayOfWeek(DateTime time);
    public virtual int GetDayOfYear(DateTime time);
    public virtual int GetDaysInMonth(int year, int month, int era);
    public virtual int GetDaysInYear(int year, int era);
    public virtual int GetEra(DateTime time);
    public virtual int GetLeapMonth(int year, int era);
    public virtual int GetMonth(DateTime time);
    public virtual int GetMonthsInYear(int year, int era);
    public virtual int GetYear(DateTime time);
    public virtual bool IsLeapDay(int year, int month, int day, int era);
    public virtual bool IsLeapMonth(int year, int month, int era);
    public virtual bool IsLeapYear(int year, int era);
    public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    public virtual int ToFourDigitYear(int year);
}
public class System.Globalization.KoreanCalendar : Calendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public int TwoDigitYearMax { get; public set; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int get_TwoDigitYearMax();
    public virtual void set_TwoDigitYearMax(int value);
    public virtual DateTime AddMonths(DateTime time, int months);
    public virtual DateTime AddYears(DateTime time, int years);
    public virtual int GetDayOfMonth(DateTime time);
    public virtual DayOfWeek GetDayOfWeek(DateTime time);
    public virtual int GetDayOfYear(DateTime time);
    public virtual int GetDaysInMonth(int year, int month, int era);
    public virtual int GetDaysInYear(int year, int era);
    public virtual int GetEra(DateTime time);
    public virtual int GetLeapMonth(int year, int era);
    public virtual int GetMonth(DateTime time);
    public virtual int GetMonthsInYear(int year, int era);
    public virtual int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    public virtual int GetYear(DateTime time);
    public virtual bool IsLeapDay(int year, int month, int day, int era);
    public virtual bool IsLeapMonth(int year, int month, int era);
    public virtual bool IsLeapYear(int year, int era);
    public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    public virtual int ToFourDigitYear(int year);
}
public class System.Globalization.KoreanLunisolarCalendar : EastAsianLunisolarCalendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int GetEra(DateTime time);
}
public class System.Globalization.PersianCalendar : Calendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public int TwoDigitYearMax { get; public set; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int get_TwoDigitYearMax();
    public virtual void set_TwoDigitYearMax(int value);
    public virtual DateTime AddMonths(DateTime time, int months);
    public virtual DateTime AddYears(DateTime time, int years);
    public virtual int GetDayOfMonth(DateTime time);
    public virtual DayOfWeek GetDayOfWeek(DateTime time);
    public virtual int GetDayOfYear(DateTime time);
    public virtual int GetDaysInMonth(int year, int month, int era);
    public virtual int GetDaysInYear(int year, int era);
    public virtual int GetEra(DateTime time);
    public virtual int GetLeapMonth(int year, int era);
    public virtual int GetMonth(DateTime time);
    public virtual int GetMonthsInYear(int year, int era);
    public virtual int GetYear(DateTime time);
    public virtual bool IsLeapDay(int year, int month, int day, int era);
    public virtual bool IsLeapMonth(int year, int month, int era);
    public virtual bool IsLeapYear(int year, int era);
    public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    public virtual int ToFourDigitYear(int year);
}
public class System.Globalization.TaiwanCalendar : Calendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public int TwoDigitYearMax { get; public set; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int get_TwoDigitYearMax();
    public virtual void set_TwoDigitYearMax(int value);
    public virtual DateTime AddMonths(DateTime time, int months);
    public virtual DateTime AddYears(DateTime time, int years);
    public virtual int GetDayOfMonth(DateTime time);
    public virtual DayOfWeek GetDayOfWeek(DateTime time);
    public virtual int GetDayOfYear(DateTime time);
    public virtual int GetDaysInMonth(int year, int month, int era);
    public virtual int GetDaysInYear(int year, int era);
    public virtual int GetEra(DateTime time);
    public virtual int GetLeapMonth(int year, int era);
    public virtual int GetMonth(DateTime time);
    public virtual int GetMonthsInYear(int year, int era);
    public virtual int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    public virtual int GetYear(DateTime time);
    public virtual bool IsLeapDay(int year, int month, int day, int era);
    public virtual bool IsLeapMonth(int year, int month, int era);
    public virtual bool IsLeapYear(int year, int era);
    public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    public virtual int ToFourDigitYear(int year);
}
public class System.Globalization.TaiwanLunisolarCalendar : EastAsianLunisolarCalendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int GetEra(DateTime time);
}
public class System.Globalization.ThaiBuddhistCalendar : Calendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public int TwoDigitYearMax { get; public set; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int get_TwoDigitYearMax();
    public virtual void set_TwoDigitYearMax(int value);
    public virtual DateTime AddMonths(DateTime time, int months);
    public virtual DateTime AddYears(DateTime time, int years);
    public virtual int GetDayOfMonth(DateTime time);
    public virtual DayOfWeek GetDayOfWeek(DateTime time);
    public virtual int GetDayOfYear(DateTime time);
    public virtual int GetDaysInMonth(int year, int month, int era);
    public virtual int GetDaysInYear(int year, int era);
    public virtual int GetEra(DateTime time);
    public virtual int GetLeapMonth(int year, int era);
    public virtual int GetMonth(DateTime time);
    public virtual int GetMonthsInYear(int year, int era);
    public virtual int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    public virtual int GetYear(DateTime time);
    public virtual bool IsLeapDay(int year, int month, int day, int era);
    public virtual bool IsLeapMonth(int year, int month, int era);
    public virtual bool IsLeapYear(int year, int era);
    public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    public virtual int ToFourDigitYear(int year);
}
public class System.Globalization.UmAlQuraCalendar : Calendar {
    public Int32[] Eras { get; }
    public DateTime MaxSupportedDateTime { get; }
    public DateTime MinSupportedDateTime { get; }
    public int TwoDigitYearMax { get; public set; }
    public virtual Int32[] get_Eras();
    public virtual DateTime get_MaxSupportedDateTime();
    public virtual DateTime get_MinSupportedDateTime();
    public virtual int get_TwoDigitYearMax();
    public virtual void set_TwoDigitYearMax(int value);
    public virtual DateTime AddMonths(DateTime time, int months);
    public virtual DateTime AddYears(DateTime time, int years);
    public virtual int GetDayOfMonth(DateTime time);
    public virtual DayOfWeek GetDayOfWeek(DateTime time);
    public virtual int GetDayOfYear(DateTime time);
    public virtual int GetDaysInMonth(int year, int month, int era);
    public virtual int GetDaysInYear(int year, int era);
    public virtual int GetEra(DateTime time);
    public virtual int GetLeapMonth(int year, int era);
    public virtual int GetMonth(DateTime time);
    public virtual int GetMonthsInYear(int year, int era);
    public virtual int GetYear(DateTime time);
    public virtual bool IsLeapDay(int year, int month, int day, int era);
    public virtual bool IsLeapMonth(int year, int month, int era);
    public virtual bool IsLeapYear(int year, int era);
    public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    public virtual int ToFourDigitYear(int year);
}
