internal static class FxResources.System.IO.FileSystem.Watcher.SR : object {
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string ObjectDisposed_FileClosed { get; }
    internal static string BufferSizeTooLarge { get; }
    internal static string FSW_IOError { get; }
    internal static string FSW_BufferOverflow { get; }
    internal static string InvalidDirName { get; }
    internal static string InvalidEnumArgument { get; }
    internal static string IO_FileExists_Name { get; }
    internal static string ArgumentOutOfRange_FileLengthTooBig { get; }
    internal static string IO_PathTooLong { get; }
    internal static string IO_PathNotFound_NoPathName { get; }
    internal static string IO_PathNotFound_Path { get; }
    internal static string IO_FileNotFound { get; }
    internal static string IO_FileNotFound_FileName { get; }
    internal static string UnauthorizedAccess_IODenied_NoPathName { get; }
    internal static string UnauthorizedAccess_IODenied_Path { get; }
    internal static string IO_SharingViolation_File { get; }
    internal static string IO_SharingViolation_NoFileName { get; }
    internal static string EventStream_FailedToStart { get; }
    internal static string Argument_InvalidPathChars { get; }
    internal static string IOException_INotifyInstanceSystemLimitExceeded { get; }
    internal static string IOException_INotifyInstanceUserLimitExceeded_Value { get; }
    internal static string IOException_INotifyWatchesUserLimitExceeded_Value { get; }
    internal static string IOException_INotifyInstanceUserLimitExceeded { get; }
    internal static string IOException_INotifyWatchesUserLimitExceeded { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_ObjectDisposed_FileClosed();
    internal static string get_BufferSizeTooLarge();
    internal static string get_FSW_IOError();
    internal static string get_FSW_BufferOverflow();
    internal static string get_InvalidDirName();
    internal static string get_InvalidEnumArgument();
    internal static string get_IO_FileExists_Name();
    internal static string get_ArgumentOutOfRange_FileLengthTooBig();
    internal static string get_IO_PathTooLong();
    internal static string get_IO_PathNotFound_NoPathName();
    internal static string get_IO_PathNotFound_Path();
    internal static string get_IO_FileNotFound();
    internal static string get_IO_FileNotFound_FileName();
    internal static string get_UnauthorizedAccess_IODenied_NoPathName();
    internal static string get_UnauthorizedAccess_IODenied_Path();
    internal static string get_IO_SharingViolation_File();
    internal static string get_IO_SharingViolation_NoFileName();
    internal static string get_EventStream_FailedToStart();
    internal static string get_Argument_InvalidPathChars();
    internal static string get_IOException_INotifyInstanceSystemLimitExceeded();
    internal static string get_IOException_INotifyInstanceUserLimitExceeded_Value();
    internal static string get_IOException_INotifyWatchesUserLimitExceeded_Value();
    internal static string get_IOException_INotifyInstanceUserLimitExceeded();
    internal static string get_IOException_INotifyWatchesUserLimitExceeded();
    internal static Type get_ResourceType();
}
