internal static class FxResources.System.Net.WebHeaderCollection.SR : object {
}
public enum System.Net.HttpRequestHeader : Enum {
    public int value__;
    public static HttpRequestHeader CacheControl;
    public static HttpRequestHeader Connection;
    public static HttpRequestHeader Date;
    public static HttpRequestHeader KeepAlive;
    public static HttpRequestHeader Pragma;
    public static HttpRequestHeader Trailer;
    public static HttpRequestHeader TransferEncoding;
    public static HttpRequestHeader Upgrade;
    public static HttpRequestHeader Via;
    public static HttpRequestHeader Warning;
    public static HttpRequestHeader Allow;
    public static HttpRequestHeader ContentLength;
    public static HttpRequestHeader ContentType;
    public static HttpRequestHeader ContentEncoding;
    public static HttpRequestHeader ContentLanguage;
    public static HttpRequestHeader ContentLocation;
    public static HttpRequestHeader ContentMd5;
    public static HttpRequestHeader ContentRange;
    public static HttpRequestHeader Expires;
    public static HttpRequestHeader LastModified;
    public static HttpRequestHeader Accept;
    public static HttpRequestHeader AcceptCharset;
    public static HttpRequestHeader AcceptEncoding;
    public static HttpRequestHeader AcceptLanguage;
    public static HttpRequestHeader Authorization;
    public static HttpRequestHeader Cookie;
    public static HttpRequestHeader Expect;
    public static HttpRequestHeader From;
    public static HttpRequestHeader Host;
    public static HttpRequestHeader IfMatch;
    public static HttpRequestHeader IfModifiedSince;
    public static HttpRequestHeader IfNoneMatch;
    public static HttpRequestHeader IfRange;
    public static HttpRequestHeader IfUnmodifiedSince;
    public static HttpRequestHeader MaxForwards;
    public static HttpRequestHeader ProxyAuthorization;
    public static HttpRequestHeader Referer;
    public static HttpRequestHeader Range;
    public static HttpRequestHeader Te;
    public static HttpRequestHeader Translate;
    public static HttpRequestHeader UserAgent;
}
[ExtensionAttribute]
internal static class System.Net.HttpRequestHeaderExtensions : object {
    private static String[] s_names;
    private static HttpRequestHeaderExtensions();
    [ExtensionAttribute]
public static string GetName(HttpRequestHeader header);
}
public enum System.Net.HttpResponseHeader : Enum {
    public int value__;
    public static HttpResponseHeader CacheControl;
    public static HttpResponseHeader Connection;
    public static HttpResponseHeader Date;
    public static HttpResponseHeader KeepAlive;
    public static HttpResponseHeader Pragma;
    public static HttpResponseHeader Trailer;
    public static HttpResponseHeader TransferEncoding;
    public static HttpResponseHeader Upgrade;
    public static HttpResponseHeader Via;
    public static HttpResponseHeader Warning;
    public static HttpResponseHeader Allow;
    public static HttpResponseHeader ContentLength;
    public static HttpResponseHeader ContentType;
    public static HttpResponseHeader ContentEncoding;
    public static HttpResponseHeader ContentLanguage;
    public static HttpResponseHeader ContentLocation;
    public static HttpResponseHeader ContentMd5;
    public static HttpResponseHeader ContentRange;
    public static HttpResponseHeader Expires;
    public static HttpResponseHeader LastModified;
    public static HttpResponseHeader AcceptRanges;
    public static HttpResponseHeader Age;
    public static HttpResponseHeader ETag;
    public static HttpResponseHeader Location;
    public static HttpResponseHeader ProxyAuthenticate;
    public static HttpResponseHeader RetryAfter;
    public static HttpResponseHeader Server;
    public static HttpResponseHeader SetCookie;
    public static HttpResponseHeader Vary;
    public static HttpResponseHeader WwwAuthenticate;
}
[ExtensionAttribute]
internal static class System.Net.HttpResponseHeaderExtensions : object {
    private static String[] s_names;
    private static HttpResponseHeaderExtensions();
    [ExtensionAttribute]
public static string GetName(HttpResponseHeader header);
}
internal static class System.Net.HttpValidationHelpers : object {
    public static bool IsInvalidMethodOrHeaderString(string stringValue);
}
[DefaultMemberAttribute("Item")]
public class System.Net.WebHeaderCollection : object {
    private static int ApproxAveHeaderLineSize;
    private static int ApproxHighAvgNumHeaders;
    private List`1<string> _entriesList;
    private Dictionary`2<string, string> _entriesDictionary;
    private String[] _allKeys;
    private WebHeaderCollectionType _type;
    private static Char[] s_httpTrimCharacters;
    private bool AllowHttpRequestHeader { get; }
    private bool AllowHttpResponseHeader { get; }
    public string Item { get; public set; }
    public string Item { get; public set; }
    public string Item { get; public set; }
    public int Count { get; }
    public String[] AllKeys { get; }
    private bool IsInitialized { get; }
    private static WebHeaderCollection();
    private bool get_AllowHttpRequestHeader();
    private bool get_AllowHttpResponseHeader();
    public string get_Item(HttpRequestHeader header);
    public void set_Item(HttpRequestHeader header, string value);
    public string get_Item(HttpResponseHeader header);
    public void set_Item(HttpResponseHeader header, string value);
    public string get_Item(string name);
    public void set_Item(string name, string value);
    private static string CheckBadHeaderValueChars(string value);
    private static string CheckBadHeaderNameChars(string name);
    private static bool ContainsNonAsciiChars(string token);
    public void Remove(string name);
    public virtual string ToString();
    public int get_Count();
    public String[] get_AllKeys();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private bool get_IsInitialized();
    private void EnsureInitialized();
    private void InvalidateCachedArray();
    private static String[] ToArray(List`1<string> list);
}
internal enum System.Net.WebHeaderCollectionType : Enum {
    public byte value__;
    public static WebHeaderCollectionType Unknown;
    public static WebHeaderCollectionType WebRequest;
    public static WebHeaderCollectionType WebResponse;
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string net_headers_req { get; }
    internal static string net_headers_rsp { get; }
    internal static string net_WebHeaderInvalidControlChars { get; }
    internal static string net_WebHeaderInvalidCRLFChars { get; }
    internal static string net_WebHeaderInvalidHeaderChars { get; }
    internal static string net_WebHeaderInvalidNonAsciiChars { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_net_headers_req();
    internal static string get_net_headers_rsp();
    internal static string get_net_WebHeaderInvalidControlChars();
    internal static string get_net_WebHeaderInvalidCRLFChars();
    internal static string get_net_WebHeaderInvalidHeaderChars();
    internal static string get_net_WebHeaderInvalidNonAsciiChars();
    internal static Type get_ResourceType();
}
[ExtensionAttribute]
internal static class System.StringExtensions : object {
    [ExtensionAttribute]
internal static string SubstringTrim(string value, int startIndex);
    [ExtensionAttribute]
internal static string SubstringTrim(string value, int startIndex, int length);
}
