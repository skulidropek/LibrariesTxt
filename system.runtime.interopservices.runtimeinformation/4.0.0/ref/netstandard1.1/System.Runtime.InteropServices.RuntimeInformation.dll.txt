public enum System.Runtime.InteropServices.Architecture : Enum {
    public int value__;
    public static Architecture X86;
    public static Architecture X64;
    public static Architecture Arm;
    public static Architecture Arm64;
}
public class System.Runtime.InteropServices.OSPlatform : ValueType {
    public static OSPlatform Linux { get; }
    public static OSPlatform OSX { get; }
    public static OSPlatform Windows { get; }
    public static OSPlatform get_Linux();
    public static OSPlatform get_OSX();
    public static OSPlatform get_Windows();
    public static OSPlatform Create(string osPlatform);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(OSPlatform other);
    public virtual int GetHashCode();
    public static bool op_Equality(OSPlatform left, OSPlatform right);
    public static bool op_Inequality(OSPlatform left, OSPlatform right);
    public virtual string ToString();
}
public static class System.Runtime.InteropServices.RuntimeInformation : object {
    public static Architecture ProcessArchitecture { get; }
    public static Architecture OSArchitecture { get; }
    public static string OSDescription { get; }
    public static string FrameworkDescription { get; }
    public static Architecture get_ProcessArchitecture();
    public static Architecture get_OSArchitecture();
    public static string get_OSDescription();
    public static string get_FrameworkDescription();
    public static bool IsOSPlatform(OSPlatform osPlatform);
}
