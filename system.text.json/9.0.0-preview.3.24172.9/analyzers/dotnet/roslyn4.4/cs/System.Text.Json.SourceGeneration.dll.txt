internal static class FxResources.System.Text.Json.SourceGeneration.SR : object {
}
internal static class Microsoft.CodeAnalysis.DotnetRuntime.Extensions.DiagnosticDescriptorHelper : object {
    public static DiagnosticDescriptor Create(string id, LocalizableString title, LocalizableString messageFormat, string category, DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, LocalizableString description, String[] customTags);
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.DotnetRuntime.Extensions.RoslynExtensions : object {
    [ExtensionAttribute]
public static INamedTypeSymbol GetBestTypeByMetadataName(Compilation compilation, string fullyQualifiedMetadataName);
    [ExtensionAttribute]
public static INamedTypeSymbol GetBestTypeByMetadataName(Compilation compilation, Type type);
    [ExtensionAttribute]
private static SymbolVisibility GetResultantVisibility(ISymbol symbol);
    [ExtensionAttribute]
internal static bool HasAttributeSuffix(string name, bool isCaseSensitive);
    [ExtensionAttribute]
public static ImmutableArray`1<T> ToImmutableArray(ReadOnlySpan`1<T> span);
    [ExtensionAttribute]
public static SimpleNameSyntax GetUnqualifiedName(NameSyntax name);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal static class SourceGenerators.CSharpSyntaxUtilities : object {
    public static string DoubleFormatString;
    public static string SingleFormatString;
    public static string FormatLiteral(object value, TypeRef type);
    [CompilerGeneratedAttribute]
internal static string <FormatLiteral>g__FormatNumber|2_0(<>c__DisplayClass2_0& );
}
[IsReadOnlyAttribute]
internal class SourceGenerators.DiagnosticInfo : ValueType {
    [CompilerGeneratedAttribute]
private DiagnosticDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <MessageArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    public DiagnosticDescriptor Descriptor { get; private set; }
    public Object[] MessageArgs { get; private set; }
    public Location Location { get; private set; }
    [CompilerGeneratedAttribute]
public DiagnosticDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
private Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Descriptor(DiagnosticDescriptor value);
    [CompilerGeneratedAttribute]
public Object[] get_MessageArgs();
    [CompilerGeneratedAttribute]
private Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MessageArgs(Object[] value);
    [CompilerGeneratedAttribute]
public Location get_Location();
    [CompilerGeneratedAttribute]
private Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Location(Location value);
    public static DiagnosticInfo Create(DiagnosticDescriptor descriptor, Location location, Object[] messageArgs);
    public Diagnostic CreateDiagnostic();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(DiagnosticInfo other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
internal static Location <Create>g__GetTrimmedLocation|12_0(Location location);
}
[ExtensionAttribute]
internal static class SourceGenerators.ImmutableEquatableArray : object {
    [ExtensionAttribute]
public static ImmutableEquatableArray`1<T> ToImmutableEquatableArray(IEnumerable`1<T> values);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class SourceGenerators.ImmutableEquatableArray`1 : object {
    [CompilerGeneratedAttribute]
private static ImmutableEquatableArray`1<T> <Empty>k__BackingField;
    private T[] _values;
    public static ImmutableEquatableArray`1<T> Empty { get; }
    public T Item { get; }
    public int Count { get; }
    public ImmutableEquatableArray`1(IEnumerable`1<T> values);
    private static ImmutableEquatableArray`1();
    [CompilerGeneratedAttribute]
public static ImmutableEquatableArray`1<T> get_Empty();
    public sealed virtual T get_Item(int index);
    public sealed virtual int get_Count();
    public sealed virtual bool Equals(ImmutableEquatableArray`1<T> other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("0")]
public Enumerator<T> GetEnumerator();
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class SourceGenerators.SourceWriter : object {
    private static char IndentationChar;
    private static int CharsPerIndentation;
    private StringBuilder _sb;
    private int _indentation;
    public int Indentation { get; public set; }
    public int get_Indentation();
    public void set_Indentation(int value);
    public void WriteLine(char value);
    public void WriteLine(string text);
    public void WriteLine();
    public SourceText ToSourceText();
    public void Reset();
    private void AddIndentation();
    private static ReadOnlySpan`1<char> GetNextLine(ReadOnlySpan`1& remainingText, Boolean& isFinalLine);
    private static void AppendSpan(StringBuilder builder, ReadOnlySpan`1<char> span);
    [CompilerGeneratedAttribute]
internal static void <set_Indentation>g__Throw|6_0();
}
[ExtensionAttribute]
internal static class SourceGenerators.TypeModelHelper : object {
    [ExtensionAttribute]
public static List`1<ITypeSymbol> GetAllTypeArgumentsInScope(INamedTypeSymbol type);
    [ExtensionAttribute]
public static string GetFullyQualifiedName(ITypeSymbol type);
    [CompilerGeneratedAttribute]
internal static void <GetAllTypeArgumentsInScope>g__TraverseContainingTypes|0_0(INamedTypeSymbol current, <>c__DisplayClass0_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("Name = {Name}")]
public class SourceGenerators.TypeRef : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullyQualifiedName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeKind <TypeKind>k__BackingField;
    [CompilerGeneratedAttribute]
private SpecialType <SpecialType>k__BackingField;
    public string Name { get; }
    public string FullyQualifiedName { get; }
    public bool IsValueType { get; }
    public TypeKind TypeKind { get; }
    public SpecialType SpecialType { get; }
    public bool CanBeNull { get; }
    public TypeRef(ITypeSymbol type);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_FullyQualifiedName();
    [CompilerGeneratedAttribute]
public bool get_IsValueType();
    [CompilerGeneratedAttribute]
public TypeKind get_TypeKind();
    [CompilerGeneratedAttribute]
public SpecialType get_SpecialType();
    public bool get_CanBeNull();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(TypeRef other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[IsByRefLikeAttribute]
[ObsoleteAttribute("Types with embedded references are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RefStructs")]
[DefaultMemberAttribute("Item")]
internal class System.Collections.Generic.ValueListBuilder`1 : ValueType {
    private Span`1<T> _span;
    private T[] _arrayFromPool;
    private int _pos;
    public int Length { get; public set; }
    public T& Item { get; }
    public ValueListBuilder`1(Span`1<T> initialSpan);
    public int get_Length();
    public void set_Length(int value);
    public T& get_Item(int index);
    public void Append(T item);
    public void Append(ReadOnlySpan`1<T> source);
    private void AppendMultiChar(ReadOnlySpan`1<T> source);
    public void Insert(int index, ReadOnlySpan`1<T> source);
    public Span`1<T> AppendSpan(int length);
    private Span`1<T> AppendSpanWithGrow(int length);
    private void AddWithResize(T item);
    public ReadOnlySpan`1<T> AsSpan();
    public bool TryCopyTo(Span`1<T> destination, Int32& itemsWritten);
    public void Dispose();
    private void Grow(int additionalCapacityRequired);
    public T Pop();
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("32")]
internal class System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute : Attribute {
}
internal static class System.Numerics.Hashing.HashHelpers : object {
    public static int Combine(int h1, int h2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
public class System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FeatureName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    public static string RefStructs;
    public static string RequiredMembers;
    public string FeatureName { get; }
    public bool IsOptional { get; public set; }
    public CompilerFeatureRequiredAttribute(string featureName);
    [CompilerGeneratedAttribute]
public string get_FeatureName();
    [CompilerGeneratedAttribute]
public bool get_IsOptional();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsOptional(bool value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsByRefLikeAttribute : Attribute {
}
[EditorBrowsableAttribute("1")]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsUnmanagedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("396")]
[EditorBrowsableAttribute("1")]
internal class System.Runtime.CompilerServices.RequiredMemberAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.ScopedRefAttribute : Attribute {
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string DuplicateTypeNameMessageFormat { get; }
    internal static string DuplicateTypeNameTitle { get; }
    internal static string TypeNotSupportedMessageFormat { get; }
    internal static string TypeNotSupportedTitle { get; }
    internal static string ContextClassesMustBePartialMessageFormat { get; }
    internal static string ContextClassesMustBePartialTitle { get; }
    internal static string MultipleJsonConstructorAttributeFormat { get; }
    internal static string MultipleJsonConstructorAttributeTitle { get; }
    internal static string MultipleJsonExtensionDataAttributeFormat { get; }
    internal static string MultipleJsonExtensionDataAttributeTitle { get; }
    internal static string DataExtensionPropertyInvalidFormat { get; }
    internal static string DataExtensionPropertyInvalidTitle { get; }
    internal static string InitOnlyPropertyDeserializationNotSupportedTitle { get; }
    internal static string InitOnlyPropertyDeserializationNotSupportedFormat { get; }
    internal static string InaccessibleJsonIncludePropertiesNotSupportedTitle { get; }
    internal static string InaccessibleJsonIncludePropertiesNotSupportedFormat { get; }
    internal static string FastPathPolymorphismNotSupportedTitle { get; }
    internal static string FastPathPolymorphismNotSupportedMessageFormat { get; }
    internal static string JsonStringEnumConverterNotSupportedTitle { get; }
    internal static string JsonStringEnumConverterNotSupportedMessageFormat { get; }
    internal static string JsonConverterAttributeInvalidTypeTitle { get; }
    internal static string JsonConverterAttributeInvalidTypeMessageFormat { get; }
    internal static string DerivedJsonConverterAttributesNotSupportedTitle { get; }
    internal static string DerivedJsonConverterAttributesNotSupportedMessageFormat { get; }
    internal static string JsonUnsupportedLanguageVersionTitle { get; }
    internal static string JsonUnsupportedLanguageVersionMessageFormat { get; }
    internal static string JsonConstructorInaccessibleTitle { get; }
    internal static string JsonConstructorInaccessibleMessageFormat { get; }
    internal static string JsonSerializableAttributeOnNonContextTypeTitle { get; }
    internal static string JsonSerializableAttributeOnNonContextTypeMessageFormat { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_DuplicateTypeNameMessageFormat();
    internal static string get_DuplicateTypeNameTitle();
    internal static string get_TypeNotSupportedMessageFormat();
    internal static string get_TypeNotSupportedTitle();
    internal static string get_ContextClassesMustBePartialMessageFormat();
    internal static string get_ContextClassesMustBePartialTitle();
    internal static string get_MultipleJsonConstructorAttributeFormat();
    internal static string get_MultipleJsonConstructorAttributeTitle();
    internal static string get_MultipleJsonExtensionDataAttributeFormat();
    internal static string get_MultipleJsonExtensionDataAttributeTitle();
    internal static string get_DataExtensionPropertyInvalidFormat();
    internal static string get_DataExtensionPropertyInvalidTitle();
    internal static string get_InitOnlyPropertyDeserializationNotSupportedTitle();
    internal static string get_InitOnlyPropertyDeserializationNotSupportedFormat();
    internal static string get_InaccessibleJsonIncludePropertiesNotSupportedTitle();
    internal static string get_InaccessibleJsonIncludePropertiesNotSupportedFormat();
    internal static string get_FastPathPolymorphismNotSupportedTitle();
    internal static string get_FastPathPolymorphismNotSupportedMessageFormat();
    internal static string get_JsonStringEnumConverterNotSupportedTitle();
    internal static string get_JsonStringEnumConverterNotSupportedMessageFormat();
    internal static string get_JsonConverterAttributeInvalidTypeTitle();
    internal static string get_JsonConverterAttributeInvalidTypeMessageFormat();
    internal static string get_DerivedJsonConverterAttributesNotSupportedTitle();
    internal static string get_DerivedJsonConverterAttributesNotSupportedMessageFormat();
    internal static string get_JsonUnsupportedLanguageVersionTitle();
    internal static string get_JsonUnsupportedLanguageVersionMessageFormat();
    internal static string get_JsonConstructorInaccessibleTitle();
    internal static string get_JsonConstructorInaccessibleMessageFormat();
    internal static string get_JsonSerializableAttributeOnNonContextTypeTitle();
    internal static string get_JsonSerializableAttributeOnNonContextTypeMessageFormat();
}
internal class System.Text.Json.JsonCamelCaseNamingPolicy : JsonNamingPolicy {
    public virtual string ConvertName(string name);
    private static void FixCasing(Span`1<char> chars);
}
public enum System.Text.Json.JsonCommentHandling : Enum {
    public byte value__;
    public static JsonCommentHandling Disallow;
    public static JsonCommentHandling Skip;
    public static JsonCommentHandling Allow;
}
internal static class System.Text.Json.JsonConstants : object {
    public static string DoubleFormatString;
    public static string SingleFormatString;
    public static int StackallocByteThreshold;
    public static int StackallocCharThreshold;
    public static string SystemTextJsonSourceGenerationName;
    public static string IJsonOnSerializedFullName;
    public static string IJsonOnSerializingFullName;
}
[ExtensionAttribute]
internal static class System.Text.Json.JsonHelpers : object {
    [ExtensionAttribute]
public static bool TryAdd(Dictionary`2<TKey, TValue> dictionary, TKey key, TValue value);
    [ExtensionAttribute]
public static bool TryDequeue(Queue`1<T> queue, T& result);
    internal static bool RequiresSpecialNumberHandlingOnWrite(Nullable`1<JsonNumberHandling> handling);
    [ExtensionAttribute]
internal static void StableSortByKey(List`1<T> items, Func`2<T, TKey> keySelector);
    public static T[] TraverseGraphWithTopologicalSort(T entryNode, Func`2<T, ICollection`1<T>> getChildren, IEqualityComparer`1<T> comparer);
}
internal class System.Text.Json.JsonKebabCaseLowerNamingPolicy : JsonSeparatorNamingPolicy {
}
internal class System.Text.Json.JsonKebabCaseUpperNamingPolicy : JsonSeparatorNamingPolicy {
}
internal abstract class System.Text.Json.JsonNamingPolicy : object {
    [CompilerGeneratedAttribute]
private static JsonNamingPolicy <CamelCase>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonNamingPolicy <SnakeCaseLower>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonNamingPolicy <SnakeCaseUpper>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonNamingPolicy <KebabCaseLower>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonNamingPolicy <KebabCaseUpper>k__BackingField;
    public static JsonNamingPolicy CamelCase { get; }
    public static JsonNamingPolicy SnakeCaseLower { get; }
    public static JsonNamingPolicy SnakeCaseUpper { get; }
    public static JsonNamingPolicy KebabCaseLower { get; }
    public static JsonNamingPolicy KebabCaseUpper { get; }
    private static JsonNamingPolicy();
    [CompilerGeneratedAttribute]
public static JsonNamingPolicy get_CamelCase();
    [CompilerGeneratedAttribute]
public static JsonNamingPolicy get_SnakeCaseLower();
    [CompilerGeneratedAttribute]
public static JsonNamingPolicy get_SnakeCaseUpper();
    [CompilerGeneratedAttribute]
public static JsonNamingPolicy get_KebabCaseLower();
    [CompilerGeneratedAttribute]
public static JsonNamingPolicy get_KebabCaseUpper();
    public abstract virtual string ConvertName(string name);
}
internal abstract class System.Text.Json.JsonSeparatorNamingPolicy : JsonNamingPolicy {
    private bool _lowercase;
    private char _separator;
    internal JsonSeparatorNamingPolicy(bool lowercase, char separator);
    public sealed virtual string ConvertName(string name);
    private static string ConvertNameCore(char separator, bool lowercase, ReadOnlySpan`1<char> chars);
    [CompilerGeneratedAttribute]
internal static void <ConvertNameCore>g__WriteChar|4_0(char value, Span`1& destination, <>c__DisplayClass4_0& );
    [CompilerGeneratedAttribute]
internal static void <ConvertNameCore>g__ExpandBuffer|4_1(Span`1& destination, <>c__DisplayClass4_0& );
}
public enum System.Text.Json.JsonSerializerDefaults : Enum {
    public int value__;
    public static JsonSerializerDefaults General;
    public static JsonSerializerDefaults Web;
}
internal class System.Text.Json.JsonSnakeCaseLowerNamingPolicy : JsonSeparatorNamingPolicy {
}
internal class System.Text.Json.JsonSnakeCaseUpperNamingPolicy : JsonSeparatorNamingPolicy {
}
internal abstract class System.Text.Json.Serialization.JsonAttribute : Attribute {
}
public enum System.Text.Json.Serialization.JsonIgnoreCondition : Enum {
    public int value__;
    public static JsonIgnoreCondition Never;
    public static JsonIgnoreCondition Always;
    public static JsonIgnoreCondition WhenWritingDefault;
    public static JsonIgnoreCondition WhenWritingNull;
}
public enum System.Text.Json.Serialization.JsonKnownNamingPolicy : Enum {
    public int value__;
    public static JsonKnownNamingPolicy Unspecified;
    public static JsonKnownNamingPolicy CamelCase;
    public static JsonKnownNamingPolicy SnakeCaseLower;
    public static JsonKnownNamingPolicy SnakeCaseUpper;
    public static JsonKnownNamingPolicy KebabCaseLower;
    public static JsonKnownNamingPolicy KebabCaseUpper;
}
[FlagsAttribute]
public enum System.Text.Json.Serialization.JsonNumberHandling : Enum {
    public int value__;
    public static JsonNumberHandling Strict;
    public static JsonNumberHandling AllowReadingFromString;
    public static JsonNumberHandling WriteAsString;
    public static JsonNumberHandling AllowNamedFloatingPointLiterals;
}
public enum System.Text.Json.Serialization.JsonObjectCreationHandling : Enum {
    public int value__;
    public static JsonObjectCreationHandling Replace;
    public static JsonObjectCreationHandling Populate;
}
[AttributeUsageAttribute("4")]
internal class System.Text.Json.Serialization.JsonSerializableAttribute : JsonAttribute {
    [CompilerGeneratedAttribute]
private string <TypeInfoPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSourceGenerationMode <GenerationMode>k__BackingField;
    public string TypeInfoPropertyName { get; public set; }
    public JsonSourceGenerationMode GenerationMode { get; public set; }
    public JsonSerializableAttribute(Type type);
    [CompilerGeneratedAttribute]
public string get_TypeInfoPropertyName();
    [CompilerGeneratedAttribute]
public void set_TypeInfoPropertyName(string value);
    [CompilerGeneratedAttribute]
public JsonSourceGenerationMode get_GenerationMode();
    [CompilerGeneratedAttribute]
public void set_GenerationMode(JsonSourceGenerationMode value);
}
[FlagsAttribute]
public enum System.Text.Json.Serialization.JsonSourceGenerationMode : Enum {
    public int value__;
    public static JsonSourceGenerationMode Default;
    public static JsonSourceGenerationMode Metadata;
    public static JsonSourceGenerationMode Serialization;
}
[AttributeUsageAttribute("4")]
internal class System.Text.Json.Serialization.JsonSourceGenerationOptionsAttribute : JsonAttribute {
    [CompilerGeneratedAttribute]
private bool <AllowOutOfOrderMetadataProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowTrailingCommas>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <Converters>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DefaultBufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonIgnoreCondition <DefaultIgnoreCondition>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonKnownNamingPolicy <DictionaryKeyPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreReadOnlyFields>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreReadOnlyProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeFields>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonNumberHandling <NumberHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonObjectCreationHandling <PreferredObjectCreationHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PropertyNameCaseInsensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonKnownNamingPolicy <PropertyNamingPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonCommentHandling <ReadCommentHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonUnknownTypeHandling <UnknownTypeHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonUnmappedMemberHandling <UnmappedMemberHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WriteIndented>k__BackingField;
    [CompilerGeneratedAttribute]
private char <IndentCharacter>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IndentSize>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSourceGenerationMode <GenerationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseStringEnumConverter>k__BackingField;
    public bool AllowOutOfOrderMetadataProperties { get; public set; }
    public bool AllowTrailingCommas { get; public set; }
    public Type[] Converters { get; public set; }
    public int DefaultBufferSize { get; public set; }
    public JsonIgnoreCondition DefaultIgnoreCondition { get; public set; }
    public JsonKnownNamingPolicy DictionaryKeyPolicy { get; public set; }
    public bool IgnoreReadOnlyFields { get; public set; }
    public bool IgnoreReadOnlyProperties { get; public set; }
    public bool IncludeFields { get; public set; }
    public int MaxDepth { get; public set; }
    public JsonNumberHandling NumberHandling { get; public set; }
    public JsonObjectCreationHandling PreferredObjectCreationHandling { get; public set; }
    public bool PropertyNameCaseInsensitive { get; public set; }
    public JsonKnownNamingPolicy PropertyNamingPolicy { get; public set; }
    public JsonCommentHandling ReadCommentHandling { get; public set; }
    public JsonUnknownTypeHandling UnknownTypeHandling { get; public set; }
    public JsonUnmappedMemberHandling UnmappedMemberHandling { get; public set; }
    public bool WriteIndented { get; public set; }
    public char IndentCharacter { get; public set; }
    public int IndentSize { get; public set; }
    public JsonSourceGenerationMode GenerationMode { get; public set; }
    public bool UseStringEnumConverter { get; public set; }
    public JsonSourceGenerationOptionsAttribute(JsonSerializerDefaults defaults);
    [CompilerGeneratedAttribute]
public bool get_AllowOutOfOrderMetadataProperties();
    [CompilerGeneratedAttribute]
public void set_AllowOutOfOrderMetadataProperties(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowTrailingCommas();
    [CompilerGeneratedAttribute]
public void set_AllowTrailingCommas(bool value);
    [CompilerGeneratedAttribute]
public Type[] get_Converters();
    [CompilerGeneratedAttribute]
public void set_Converters(Type[] value);
    [CompilerGeneratedAttribute]
public int get_DefaultBufferSize();
    [CompilerGeneratedAttribute]
public void set_DefaultBufferSize(int value);
    [CompilerGeneratedAttribute]
public JsonIgnoreCondition get_DefaultIgnoreCondition();
    [CompilerGeneratedAttribute]
public void set_DefaultIgnoreCondition(JsonIgnoreCondition value);
    [CompilerGeneratedAttribute]
public JsonKnownNamingPolicy get_DictionaryKeyPolicy();
    [CompilerGeneratedAttribute]
public void set_DictionaryKeyPolicy(JsonKnownNamingPolicy value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreReadOnlyFields();
    [CompilerGeneratedAttribute]
public void set_IgnoreReadOnlyFields(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreReadOnlyProperties();
    [CompilerGeneratedAttribute]
public void set_IgnoreReadOnlyProperties(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeFields();
    [CompilerGeneratedAttribute]
public void set_IncludeFields(bool value);
    [CompilerGeneratedAttribute]
public int get_MaxDepth();
    [CompilerGeneratedAttribute]
public void set_MaxDepth(int value);
    [CompilerGeneratedAttribute]
public JsonNumberHandling get_NumberHandling();
    [CompilerGeneratedAttribute]
public void set_NumberHandling(JsonNumberHandling value);
    [CompilerGeneratedAttribute]
public JsonObjectCreationHandling get_PreferredObjectCreationHandling();
    [CompilerGeneratedAttribute]
public void set_PreferredObjectCreationHandling(JsonObjectCreationHandling value);
    [CompilerGeneratedAttribute]
public bool get_PropertyNameCaseInsensitive();
    [CompilerGeneratedAttribute]
public void set_PropertyNameCaseInsensitive(bool value);
    [CompilerGeneratedAttribute]
public JsonKnownNamingPolicy get_PropertyNamingPolicy();
    [CompilerGeneratedAttribute]
public void set_PropertyNamingPolicy(JsonKnownNamingPolicy value);
    [CompilerGeneratedAttribute]
public JsonCommentHandling get_ReadCommentHandling();
    [CompilerGeneratedAttribute]
public void set_ReadCommentHandling(JsonCommentHandling value);
    [CompilerGeneratedAttribute]
public JsonUnknownTypeHandling get_UnknownTypeHandling();
    [CompilerGeneratedAttribute]
public void set_UnknownTypeHandling(JsonUnknownTypeHandling value);
    [CompilerGeneratedAttribute]
public JsonUnmappedMemberHandling get_UnmappedMemberHandling();
    [CompilerGeneratedAttribute]
public void set_UnmappedMemberHandling(JsonUnmappedMemberHandling value);
    [CompilerGeneratedAttribute]
public bool get_WriteIndented();
    [CompilerGeneratedAttribute]
public void set_WriteIndented(bool value);
    [CompilerGeneratedAttribute]
public char get_IndentCharacter();
    [CompilerGeneratedAttribute]
public void set_IndentCharacter(char value);
    [CompilerGeneratedAttribute]
public int get_IndentSize();
    [CompilerGeneratedAttribute]
public void set_IndentSize(int value);
    [CompilerGeneratedAttribute]
public JsonSourceGenerationMode get_GenerationMode();
    [CompilerGeneratedAttribute]
public void set_GenerationMode(JsonSourceGenerationMode value);
    [CompilerGeneratedAttribute]
public bool get_UseStringEnumConverter();
    [CompilerGeneratedAttribute]
public void set_UseStringEnumConverter(bool value);
}
public enum System.Text.Json.Serialization.JsonUnknownTypeHandling : Enum {
    public int value__;
    public static JsonUnknownTypeHandling JsonElement;
    public static JsonUnknownTypeHandling JsonNode;
}
public enum System.Text.Json.Serialization.JsonUnmappedMemberHandling : Enum {
    public int value__;
    public static JsonUnmappedMemberHandling Skip;
    public static JsonUnmappedMemberHandling Disallow;
}
public enum System.Text.Json.SourceGeneration.ClassType : Enum {
    public int value__;
    public static ClassType TypeUnsupportedBySourceGen;
    public static ClassType Object;
    public static ClassType BuiltInSupportType;
    public static ClassType UnsupportedType;
    public static ClassType TypeWithDesignTimeProvidedCustomConverter;
    public static ClassType Enumerable;
    public static ClassType Dictionary;
    public static ClassType Nullable;
    public static ClassType Enum;
}
public enum System.Text.Json.SourceGeneration.CollectionType : Enum {
    public int value__;
    public static CollectionType NotApplicable;
    public static CollectionType IDictionary;
    public static CollectionType Dictionary;
    public static CollectionType ImmutableDictionary;
    public static CollectionType IDictionaryOfTKeyTValue;
    public static CollectionType IReadOnlyDictionary;
    public static CollectionType Array;
    public static CollectionType List;
    public static CollectionType IEnumerable;
    public static CollectionType IList;
    public static CollectionType IListOfT;
    public static CollectionType ISet;
    public static CollectionType ICollectionOfT;
    public static CollectionType StackOfT;
    public static CollectionType QueueOfT;
    public static CollectionType ConcurrentStack;
    public static CollectionType ConcurrentQueue;
    public static CollectionType IAsyncEnumerableOfT;
    public static CollectionType IEnumerableOfT;
    public static CollectionType Stack;
    public static CollectionType Queue;
    public static CollectionType ImmutableEnumerable;
    public static CollectionType MemoryOfT;
    public static CollectionType ReadOnlyMemoryOfT;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[DebuggerDisplayAttribute("ContextType = {ContextType.Name}")]
public class System.Text.Json.SourceGeneration.ContextGenerationSpec : object {
    [CompilerGeneratedAttribute]
private TypeRef <ContextType>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<TypeGenerationSpec> <GeneratedTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<string> <ContextClassDeclarations>k__BackingField;
    [CompilerGeneratedAttribute]
private SourceGenerationOptionsSpec <GeneratedOptionsSpec>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [RequiredMemberAttribute]
public TypeRef ContextType { get; public set; }
    [RequiredMemberAttribute]
public ImmutableEquatableArray`1<TypeGenerationSpec> GeneratedTypes { get; public set; }
    [NullableAttribute("2")]
[RequiredMemberAttribute]
public string Namespace { get; public set; }
    [RequiredMemberAttribute]
public ImmutableEquatableArray`1<string> ContextClassDeclarations { get; public set; }
    [NullableAttribute("2")]
[RequiredMemberAttribute]
public SourceGenerationOptionsSpec GeneratedOptionsSpec { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private ContextGenerationSpec(ContextGenerationSpec original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public TypeRef get_ContextType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ContextType(TypeRef value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<TypeGenerationSpec> get_GeneratedTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GeneratedTypes(ImmutableEquatableArray`1<TypeGenerationSpec> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Namespace();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Namespace(string value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<string> get_ContextClassDeclarations();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ContextClassDeclarations(ImmutableEquatableArray`1<string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public SourceGenerationOptionsSpec get_GeneratedOptionsSpec();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GeneratedOptionsSpec(SourceGenerationOptionsSpec value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ContextGenerationSpec left, ContextGenerationSpec right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ContextGenerationSpec left, ContextGenerationSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ContextGenerationSpec other);
    [CompilerGeneratedAttribute]
public ContextGenerationSpec <Clone>$();
}
public enum System.Text.Json.SourceGeneration.JsonPrimitiveTypeKind : Enum {
    public int value__;
    public static JsonPrimitiveTypeKind String;
    public static JsonPrimitiveTypeKind Boolean;
    public static JsonPrimitiveTypeKind ByteArray;
    public static JsonPrimitiveTypeKind Char;
    public static JsonPrimitiveTypeKind Number;
}
[GeneratorAttribute]
public class System.Text.Json.SourceGeneration.JsonSourceGenerator : object {
    private static LanguageVersion MinimumSupportedLanguageVersion;
    [NullableAttribute("1")]
public static string SourceGenerationSpecTrackingName;
    [CompilerGeneratedAttribute]
private Action`1<ImmutableArray`1<ContextGenerationSpec>> <OnSourceEmitting>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<ImmutableArray`1<ContextGenerationSpec>> OnSourceEmitting { get; public set; }
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    private void ReportDiagnosticsAndEmitSource(SourceProductionContext sourceProductionContext, ValueTuple`2<ContextGenerationSpec, ImmutableEquatableArray`1<DiagnosticInfo>> input);
    [CompilerGeneratedAttribute]
public Action`1<ImmutableArray`1<ContextGenerationSpec>> get_OnSourceEmitting();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OnSourceEmitting(Action`1<ImmutableArray`1<ContextGenerationSpec>> value);
}
internal class System.Text.Json.SourceGeneration.KnownTypeSymbols : object {
    [CompilerGeneratedAttribute]
private Compilation <Compilation>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<ITypeSymbol> <BuiltInSupportTypes>k__BackingField;
    private Option`1<INamedTypeSymbol> _IListOfTType;
    private Option`1<INamedTypeSymbol> _ICollectionOfTType;
    private Option`1<INamedTypeSymbol> _IEnumerableType;
    private Option`1<INamedTypeSymbol> _IEnumerableOfTType;
    private Option`1<INamedTypeSymbol> _ListOfTType;
    private Option`1<INamedTypeSymbol> _DictionaryOfTKeyTValueType;
    private Option`1<INamedTypeSymbol> _AsyncEnumerableOfTType;
    private Option`1<INamedTypeSymbol> _IDictionaryOfTKeyTValueType;
    private Option`1<INamedTypeSymbol> _IReadonlyDictionaryOfTKeyTValueType;
    private Option`1<INamedTypeSymbol> _ISetOfTType;
    private Option`1<INamedTypeSymbol> _StackOfTType;
    private Option`1<INamedTypeSymbol> _QueueOfTType;
    private Option`1<INamedTypeSymbol> _ConcurrentStackType;
    private Option`1<INamedTypeSymbol> _ConcurrentQueueType;
    private Option`1<INamedTypeSymbol> _IDictionaryType;
    private Option`1<INamedTypeSymbol> _IListType;
    private Option`1<INamedTypeSymbol> _StackType;
    private Option`1<INamedTypeSymbol> _QueueType;
    private Option`1<INamedTypeSymbol> _KeyValuePair;
    private Option`1<INamedTypeSymbol> _ImmutableArrayType;
    private Option`1<INamedTypeSymbol> _ImmutableListType;
    private Option`1<INamedTypeSymbol> _IImmutableListType;
    private Option`1<INamedTypeSymbol> _ImmutableStackType;
    private Option`1<INamedTypeSymbol> _IImmutableStackType;
    private Option`1<INamedTypeSymbol> _ImmutableQueueType;
    private Option`1<INamedTypeSymbol> _IImmutableQueueType;
    private Option`1<INamedTypeSymbol> _ImmutableSortedType;
    private Option`1<INamedTypeSymbol> _ImmutableHashSetType;
    private Option`1<INamedTypeSymbol> _IImmutableSetType;
    private Option`1<INamedTypeSymbol> _ImmutableDictionaryType;
    private Option`1<INamedTypeSymbol> _ImmutableSortedDictionaryType;
    private Option`1<INamedTypeSymbol> _IImmutableDictionaryType;
    private Option`1<INamedTypeSymbol> _KeyedCollectionType;
    private INamedTypeSymbol _ObjectType;
    private INamedTypeSymbol _StringType;
    private Option`1<INamedTypeSymbol> _DateTimeOffsetType;
    private Option`1<INamedTypeSymbol> _TimeSpanType;
    private Option`1<INamedTypeSymbol> _DateOnlyType;
    private Option`1<INamedTypeSymbol> _TimeOnlyType;
    private Option`1<INamedTypeSymbol> _Int128Type;
    private Option`1<INamedTypeSymbol> _UInt128Type;
    private Option`1<INamedTypeSymbol> _HalfType;
    private Option`1<IArrayTypeSymbol> _ByteArrayType;
    private Option`1<INamedTypeSymbol> _MemoryByteType;
    private Option`1<INamedTypeSymbol> _ReadOnlyMemoryByteType;
    private Option`1<INamedTypeSymbol> _GuidType;
    private Option`1<INamedTypeSymbol> _UriType;
    private Option`1<INamedTypeSymbol> _VersionType;
    private Option`1<INamedTypeSymbol> _JsonConverterType;
    private Option`1<INamedTypeSymbol> _JsonSerializerContextType;
    private Option`1<INamedTypeSymbol> _JsonSerializableAttributeType;
    private Option`1<INamedTypeSymbol> _JsonDocumentType;
    private Option`1<INamedTypeSymbol> _JsonElementType;
    private Option`1<INamedTypeSymbol> _JsonNodeType;
    private Option`1<INamedTypeSymbol> _JsonValueType;
    private Option`1<INamedTypeSymbol> _JsonObjectType;
    private Option`1<INamedTypeSymbol> _JsonArrayType;
    private Option`1<INamedTypeSymbol> _JsonConverterAttributeType;
    private Option`1<INamedTypeSymbol> _JsonDerivedTypeAttributeType;
    private Option`1<INamedTypeSymbol> _JsonNumberHandlingAttributeType;
    private Option`1<INamedTypeSymbol> _JsonObjectCreationHandlingAttributeType;
    private Option`1<INamedTypeSymbol> _JsonSourceGenerationOptionsAttributeType;
    private Option`1<INamedTypeSymbol> _JsonUnmappedMemberHandlingAttributeType;
    private Option`1<INamedTypeSymbol> _JsonConstructorAttributeType;
    private Option`1<INamedTypeSymbol> _SetsRequiredMembersAttributeType;
    private Option`1<INamedTypeSymbol> _JsonStringEnumConverterType;
    private Option`1<INamedTypeSymbol> _JsonStringEnumConverterOfTType;
    private Option`1<INamedTypeSymbol> _IJsonOnSerializingType;
    private Option`1<INamedTypeSymbol> _IJsonOnSerializedType;
    private INamedTypeSymbol _DelegateType;
    private Option`1<INamedTypeSymbol> _MemberInfoType;
    private Option`1<INamedTypeSymbol> _SerializationInfoType;
    private Option`1<INamedTypeSymbol> _IntPtrType;
    private Option`1<INamedTypeSymbol> _UIntPtrType;
    private Option`1<INamedTypeSymbol> _MemoryType;
    private Option`1<INamedTypeSymbol> _ReadOnlyMemoryType;
    public Compilation Compilation { get; }
    public HashSet`1<ITypeSymbol> BuiltInSupportTypes { get; public set; }
    public INamedTypeSymbol IListOfTType { get; }
    public INamedTypeSymbol ICollectionOfTType { get; }
    public INamedTypeSymbol IEnumerableType { get; }
    public INamedTypeSymbol IEnumerableOfTType { get; }
    public INamedTypeSymbol ListOfTType { get; }
    public INamedTypeSymbol DictionaryOfTKeyTValueType { get; }
    public INamedTypeSymbol IAsyncEnumerableOfTType { get; }
    public INamedTypeSymbol IDictionaryOfTKeyTValueType { get; }
    public INamedTypeSymbol IReadonlyDictionaryOfTKeyTValueType { get; }
    public INamedTypeSymbol ISetOfTType { get; }
    public INamedTypeSymbol StackOfTType { get; }
    public INamedTypeSymbol QueueOfTType { get; }
    public INamedTypeSymbol ConcurrentStackType { get; }
    public INamedTypeSymbol ConcurrentQueueType { get; }
    public INamedTypeSymbol IDictionaryType { get; }
    public INamedTypeSymbol IListType { get; }
    public INamedTypeSymbol StackType { get; }
    public INamedTypeSymbol QueueType { get; }
    public INamedTypeSymbol KeyValuePair { get; }
    public INamedTypeSymbol ImmutableArrayType { get; }
    public INamedTypeSymbol ImmutableListType { get; }
    public INamedTypeSymbol IImmutableListType { get; }
    public INamedTypeSymbol ImmutableStackType { get; }
    public INamedTypeSymbol IImmutableStackType { get; }
    public INamedTypeSymbol ImmutableQueueType { get; }
    public INamedTypeSymbol IImmutableQueueType { get; }
    public INamedTypeSymbol ImmutableSortedType { get; }
    public INamedTypeSymbol ImmutableHashSetType { get; }
    public INamedTypeSymbol IImmutableSetType { get; }
    public INamedTypeSymbol ImmutableDictionaryType { get; }
    public INamedTypeSymbol ImmutableSortedDictionaryType { get; }
    public INamedTypeSymbol IImmutableDictionaryType { get; }
    public INamedTypeSymbol KeyedCollectionType { get; }
    public INamedTypeSymbol ObjectType { get; }
    public INamedTypeSymbol StringType { get; }
    public INamedTypeSymbol DateTimeOffsetType { get; }
    public INamedTypeSymbol TimeSpanType { get; }
    public INamedTypeSymbol DateOnlyType { get; }
    public INamedTypeSymbol TimeOnlyType { get; }
    public INamedTypeSymbol Int128Type { get; }
    public INamedTypeSymbol UInt128Type { get; }
    public INamedTypeSymbol HalfType { get; }
    public IArrayTypeSymbol ByteArrayType { get; }
    public INamedTypeSymbol MemoryByteType { get; }
    public INamedTypeSymbol ReadOnlyMemoryByteType { get; }
    public INamedTypeSymbol GuidType { get; }
    public INamedTypeSymbol UriType { get; }
    public INamedTypeSymbol VersionType { get; }
    public INamedTypeSymbol JsonConverterType { get; }
    public INamedTypeSymbol JsonSerializerContextType { get; }
    public INamedTypeSymbol JsonSerializableAttributeType { get; }
    public INamedTypeSymbol JsonDocumentType { get; }
    public INamedTypeSymbol JsonElementType { get; }
    public INamedTypeSymbol JsonNodeType { get; }
    public INamedTypeSymbol JsonValueType { get; }
    public INamedTypeSymbol JsonObjectType { get; }
    public INamedTypeSymbol JsonArrayType { get; }
    public INamedTypeSymbol JsonConverterAttributeType { get; }
    public INamedTypeSymbol JsonDerivedTypeAttributeType { get; }
    public INamedTypeSymbol JsonNumberHandlingAttributeType { get; }
    public INamedTypeSymbol JsonObjectCreationHandlingAttributeType { get; }
    public INamedTypeSymbol JsonSourceGenerationOptionsAttributeType { get; }
    public INamedTypeSymbol JsonUnmappedMemberHandlingAttributeType { get; }
    public INamedTypeSymbol JsonConstructorAttributeType { get; }
    public INamedTypeSymbol SetsRequiredMembersAttributeType { get; }
    public INamedTypeSymbol JsonStringEnumConverterType { get; }
    public INamedTypeSymbol JsonStringEnumConverterOfTType { get; }
    public INamedTypeSymbol IJsonOnSerializingType { get; }
    public INamedTypeSymbol IJsonOnSerializedType { get; }
    public INamedTypeSymbol DelegateType { get; }
    public INamedTypeSymbol MemberInfoType { get; }
    public INamedTypeSymbol SerializationInfoType { get; }
    public INamedTypeSymbol IntPtrType { get; }
    public INamedTypeSymbol UIntPtrType { get; }
    public INamedTypeSymbol MemoryType { get; }
    public INamedTypeSymbol ReadOnlyMemoryType { get; }
    public KnownTypeSymbols(Compilation compilation);
    [CompilerGeneratedAttribute]
public Compilation get_Compilation();
    [CompilerGeneratedAttribute]
public HashSet`1<ITypeSymbol> get_BuiltInSupportTypes();
    [CompilerGeneratedAttribute]
public void set_BuiltInSupportTypes(HashSet`1<ITypeSymbol> value);
    public INamedTypeSymbol get_IListOfTType();
    public INamedTypeSymbol get_ICollectionOfTType();
    public INamedTypeSymbol get_IEnumerableType();
    public INamedTypeSymbol get_IEnumerableOfTType();
    public INamedTypeSymbol get_ListOfTType();
    public INamedTypeSymbol get_DictionaryOfTKeyTValueType();
    public INamedTypeSymbol get_IAsyncEnumerableOfTType();
    public INamedTypeSymbol get_IDictionaryOfTKeyTValueType();
    public INamedTypeSymbol get_IReadonlyDictionaryOfTKeyTValueType();
    public INamedTypeSymbol get_ISetOfTType();
    public INamedTypeSymbol get_StackOfTType();
    public INamedTypeSymbol get_QueueOfTType();
    public INamedTypeSymbol get_ConcurrentStackType();
    public INamedTypeSymbol get_ConcurrentQueueType();
    public INamedTypeSymbol get_IDictionaryType();
    public INamedTypeSymbol get_IListType();
    public INamedTypeSymbol get_StackType();
    public INamedTypeSymbol get_QueueType();
    public INamedTypeSymbol get_KeyValuePair();
    public INamedTypeSymbol get_ImmutableArrayType();
    public INamedTypeSymbol get_ImmutableListType();
    public INamedTypeSymbol get_IImmutableListType();
    public INamedTypeSymbol get_ImmutableStackType();
    public INamedTypeSymbol get_IImmutableStackType();
    public INamedTypeSymbol get_ImmutableQueueType();
    public INamedTypeSymbol get_IImmutableQueueType();
    public INamedTypeSymbol get_ImmutableSortedType();
    public INamedTypeSymbol get_ImmutableHashSetType();
    public INamedTypeSymbol get_IImmutableSetType();
    public INamedTypeSymbol get_ImmutableDictionaryType();
    public INamedTypeSymbol get_ImmutableSortedDictionaryType();
    public INamedTypeSymbol get_IImmutableDictionaryType();
    public INamedTypeSymbol get_KeyedCollectionType();
    public INamedTypeSymbol get_ObjectType();
    public INamedTypeSymbol get_StringType();
    public INamedTypeSymbol get_DateTimeOffsetType();
    public INamedTypeSymbol get_TimeSpanType();
    public INamedTypeSymbol get_DateOnlyType();
    public INamedTypeSymbol get_TimeOnlyType();
    public INamedTypeSymbol get_Int128Type();
    public INamedTypeSymbol get_UInt128Type();
    public INamedTypeSymbol get_HalfType();
    public IArrayTypeSymbol get_ByteArrayType();
    public INamedTypeSymbol get_MemoryByteType();
    public INamedTypeSymbol get_ReadOnlyMemoryByteType();
    public INamedTypeSymbol get_GuidType();
    public INamedTypeSymbol get_UriType();
    public INamedTypeSymbol get_VersionType();
    public INamedTypeSymbol get_JsonConverterType();
    public INamedTypeSymbol get_JsonSerializerContextType();
    public INamedTypeSymbol get_JsonSerializableAttributeType();
    public INamedTypeSymbol get_JsonDocumentType();
    public INamedTypeSymbol get_JsonElementType();
    public INamedTypeSymbol get_JsonNodeType();
    public INamedTypeSymbol get_JsonValueType();
    public INamedTypeSymbol get_JsonObjectType();
    public INamedTypeSymbol get_JsonArrayType();
    public INamedTypeSymbol get_JsonConverterAttributeType();
    public INamedTypeSymbol get_JsonDerivedTypeAttributeType();
    public INamedTypeSymbol get_JsonNumberHandlingAttributeType();
    public INamedTypeSymbol get_JsonObjectCreationHandlingAttributeType();
    public INamedTypeSymbol get_JsonSourceGenerationOptionsAttributeType();
    public INamedTypeSymbol get_JsonUnmappedMemberHandlingAttributeType();
    public INamedTypeSymbol get_JsonConstructorAttributeType();
    public INamedTypeSymbol get_SetsRequiredMembersAttributeType();
    public INamedTypeSymbol get_JsonStringEnumConverterType();
    public INamedTypeSymbol get_JsonStringEnumConverterOfTType();
    public INamedTypeSymbol get_IJsonOnSerializingType();
    public INamedTypeSymbol get_IJsonOnSerializedType();
    public INamedTypeSymbol get_DelegateType();
    public INamedTypeSymbol get_MemberInfoType();
    public INamedTypeSymbol get_SerializationInfoType();
    public INamedTypeSymbol get_IntPtrType();
    public INamedTypeSymbol get_UIntPtrType();
    public INamedTypeSymbol get_MemoryType();
    public INamedTypeSymbol get_ReadOnlyMemoryType();
    public bool IsImmutableEnumerableType(ITypeSymbol type, String& factoryTypeFullName);
    public bool IsImmutableDictionaryType(ITypeSymbol type, String& factoryTypeFullName);
    private INamedTypeSymbol GetOrResolveType(Type type, Option`1& field);
    private INamedTypeSymbol GetOrResolveType(string fullyQualifiedName, Option`1& field);
}
public enum System.Text.Json.SourceGeneration.ObjectConstructionStrategy : Enum {
    public int value__;
    public static ObjectConstructionStrategy NotApplicable;
    public static ObjectConstructionStrategy ParameterlessConstructor;
    public static ObjectConstructionStrategy ParameterizedConstructor;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class System.Text.Json.SourceGeneration.ParameterGenerationSpec : object {
    [CompilerGeneratedAttribute]
private TypeRef <ParameterType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasDefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private object <DefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ParameterIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [RequiredMemberAttribute]
public TypeRef ParameterType { get; public set; }
    [RequiredMemberAttribute]
public string Name { get; public set; }
    [RequiredMemberAttribute]
public bool HasDefaultValue { get; public set; }
    [NullableAttribute("2")]
[RequiredMemberAttribute]
public object DefaultValue { get; public set; }
    [RequiredMemberAttribute]
public int ParameterIndex { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private ParameterGenerationSpec(ParameterGenerationSpec original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public TypeRef get_ParameterType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ParameterType(TypeRef value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_HasDefaultValue();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasDefaultValue(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_DefaultValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DefaultValue(object value);
    [CompilerGeneratedAttribute]
public int get_ParameterIndex();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ParameterIndex(int value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ParameterGenerationSpec left, ParameterGenerationSpec right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ParameterGenerationSpec left, ParameterGenerationSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(ParameterGenerationSpec other);
    [CompilerGeneratedAttribute]
public ParameterGenerationSpec <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[DebuggerDisplayAttribute("Name = {MemberName}, Type = {PropertyType.Name}")]
public class System.Text.Json.SourceGeneration.PropertyGenerationSpec : object {
    [CompilerGeneratedAttribute]
private string <NameSpecifiedInSourceCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MemberName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPublic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVirtual>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JsonPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EffectiveJsonPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyNameFieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasJsonRequiredAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInitOnlySetter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanUseGetter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanUseSetter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonIgnoreCondition> <DefaultIgnoreCondition>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonNumberHandling> <NumberHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonObjectCreationHandling> <ObjectCreationHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasJsonInclude>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsExtensionData>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeRef <PropertyType>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeRef <DeclaringType>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeRef <ConverterType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [RequiredMemberAttribute]
public string NameSpecifiedInSourceCode { get; public set; }
    [RequiredMemberAttribute]
public string MemberName { get; public set; }
    [RequiredMemberAttribute]
public bool IsProperty { get; public set; }
    [RequiredMemberAttribute]
public bool IsPublic { get; public set; }
    [RequiredMemberAttribute]
public bool IsVirtual { get; public set; }
    [NullableAttribute("2")]
[RequiredMemberAttribute]
public string JsonPropertyName { get; public set; }
    [RequiredMemberAttribute]
public string EffectiveJsonPropertyName { get; public set; }
    [RequiredMemberAttribute]
public string PropertyNameFieldName { get; public set; }
    [RequiredMemberAttribute]
public bool IsReadOnly { get; public set; }
    [RequiredMemberAttribute]
public bool IsRequired { get; public set; }
    [RequiredMemberAttribute]
public bool HasJsonRequiredAttribute { get; public set; }
    [RequiredMemberAttribute]
public bool IsInitOnlySetter { get; public set; }
    [RequiredMemberAttribute]
public bool CanUseGetter { get; public set; }
    [RequiredMemberAttribute]
public bool CanUseSetter { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonIgnoreCondition> DefaultIgnoreCondition { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonNumberHandling> NumberHandling { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonObjectCreationHandling> ObjectCreationHandling { get; public set; }
    [RequiredMemberAttribute]
public int Order { get; public set; }
    [RequiredMemberAttribute]
public bool HasJsonInclude { get; public set; }
    [RequiredMemberAttribute]
public bool IsExtensionData { get; public set; }
    [RequiredMemberAttribute]
public TypeRef PropertyType { get; public set; }
    [RequiredMemberAttribute]
public TypeRef DeclaringType { get; public set; }
    [NullableAttribute("2")]
[RequiredMemberAttribute]
public TypeRef ConverterType { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private PropertyGenerationSpec(PropertyGenerationSpec original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_NameSpecifiedInSourceCode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NameSpecifiedInSourceCode(string value);
    [CompilerGeneratedAttribute]
public string get_MemberName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MemberName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsProperty();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsProperty(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPublic();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsVirtual();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsVirtual(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_JsonPropertyName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_JsonPropertyName(string value);
    [CompilerGeneratedAttribute]
public string get_EffectiveJsonPropertyName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EffectiveJsonPropertyName(string value);
    [CompilerGeneratedAttribute]
public string get_PropertyNameFieldName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyNameFieldName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsReadOnly();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsReadOnly(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsRequired();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsRequired(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasJsonRequiredAttribute();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasJsonRequiredAttribute(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsInitOnlySetter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsInitOnlySetter(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanUseGetter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CanUseGetter(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanUseSetter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CanUseSetter(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonIgnoreCondition> get_DefaultIgnoreCondition();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DefaultIgnoreCondition(Nullable`1<JsonIgnoreCondition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonNumberHandling> get_NumberHandling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NumberHandling(Nullable`1<JsonNumberHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonObjectCreationHandling> get_ObjectCreationHandling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ObjectCreationHandling(Nullable`1<JsonObjectCreationHandling> value);
    [CompilerGeneratedAttribute]
public int get_Order();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Order(int value);
    [CompilerGeneratedAttribute]
public bool get_HasJsonInclude();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasJsonInclude(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsExtensionData();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsExtensionData(bool value);
    [CompilerGeneratedAttribute]
public TypeRef get_PropertyType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyType(TypeRef value);
    [CompilerGeneratedAttribute]
public TypeRef get_DeclaringType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DeclaringType(TypeRef value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public TypeRef get_ConverterType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConverterType(TypeRef value);
    public bool ShouldIncludePropertyForFastPath(ContextGenerationSpec contextSpec);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(PropertyGenerationSpec left, PropertyGenerationSpec right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(PropertyGenerationSpec left, PropertyGenerationSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(PropertyGenerationSpec other);
    [CompilerGeneratedAttribute]
public PropertyGenerationSpec <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class System.Text.Json.SourceGeneration.PropertyInitializerGenerationSpec : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeRef <ParameterType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ParameterIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MatchesConstructorParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [RequiredMemberAttribute]
public string Name { get; public set; }
    [RequiredMemberAttribute]
public TypeRef ParameterType { get; public set; }
    [RequiredMemberAttribute]
public int ParameterIndex { get; public set; }
    [RequiredMemberAttribute]
public bool MatchesConstructorParameter { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private PropertyInitializerGenerationSpec(PropertyInitializerGenerationSpec original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public TypeRef get_ParameterType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ParameterType(TypeRef value);
    [CompilerGeneratedAttribute]
public int get_ParameterIndex();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ParameterIndex(int value);
    [CompilerGeneratedAttribute]
public bool get_MatchesConstructorParameter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MatchesConstructorParameter(bool value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(PropertyInitializerGenerationSpec left, PropertyInitializerGenerationSpec right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(PropertyInitializerGenerationSpec left, PropertyInitializerGenerationSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(PropertyInitializerGenerationSpec other);
    [CompilerGeneratedAttribute]
public PropertyInitializerGenerationSpec <Clone>$();
}
[ExtensionAttribute]
internal static class System.Text.Json.SourceGeneration.RoslynExtensions : object {
    [ExtensionAttribute]
public static Nullable`1<LanguageVersion> GetLanguageVersion(Compilation compilation);
    [ExtensionAttribute]
public static INamedTypeSymbol GetBestTypeByMetadataName(Compilation compilation, Type type);
    [ExtensionAttribute]
public static Location GetLocation(ISymbol typeSymbol);
    [ExtensionAttribute]
public static Location GetLocation(AttributeData attributeData);
    [ExtensionAttribute]
public static bool ContainsLocation(Compilation compilation, Location location);
    [ExtensionAttribute]
public static ITypeSymbol EraseCompileTimeMetadata(Compilation compilation, ITypeSymbol type);
    [ExtensionAttribute]
public static bool CanUseDefaultConstructorForDeserialization(ITypeSymbol type, IMethodSymbol& constructorInfo);
    [ExtensionAttribute]
public static IEnumerable`1<IMethodSymbol> GetExplicitlyDeclaredInstanceConstructors(INamedTypeSymbol type);
    [ExtensionAttribute]
public static bool ContainsAttribute(ISymbol memberInfo, INamedTypeSymbol attributeType);
    [ExtensionAttribute]
public static bool IsVirtual(ISymbol symbol);
    [ExtensionAttribute]
public static bool IsAssignableFrom(ITypeSymbol baseType, ITypeSymbol type);
    [ExtensionAttribute]
public static INamedTypeSymbol GetCompatibleGenericBaseType(ITypeSymbol type, INamedTypeSymbol baseType);
    [ExtensionAttribute]
public static bool IsGenericTypeDefinition(ITypeSymbol type);
    [ExtensionAttribute]
public static bool IsNumberType(ITypeSymbol type);
    [ExtensionAttribute]
public static bool IsNullableValueType(ITypeSymbol type, ITypeSymbol& elementType);
    [ExtensionAttribute]
public static ITypeSymbol GetMemberType(ISymbol member);
    [ExtensionAttribute]
public static bool IsOverriddenOrShadowedBy(ISymbol member, ISymbol otherMember);
    [ExtensionAttribute]
public static bool MemberNameNeedsAtSign(ISymbol symbol);
    [ExtensionAttribute]
public static INamedTypeSymbol[] GetSortedTypeHierarchy(ITypeSymbol type);
    [ExtensionAttribute]
public static string GetTypeKindKeyword(TypeDeclarationSyntax typeDeclaration);
    [CompilerGeneratedAttribute]
internal static bool <GetCompatibleGenericBaseType>g__IsMatchingGenericType|11_0(INamedTypeSymbol candidate, INamedTypeSymbol baseType);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class System.Text.Json.SourceGeneration.SourceGenerationOptionsSpec : object {
    [CompilerGeneratedAttribute]
private Nullable`1<JsonSourceGenerationMode> <GenerationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonSerializerDefaults> <Defaults>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowOutOfOrderMetadataProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowTrailingCommas>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<TypeRef> <Converters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DefaultBufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonIgnoreCondition> <DefaultIgnoreCondition>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonKnownNamingPolicy> <DictionaryKeyPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreReadOnlyFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreReadOnlyProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonNumberHandling> <NumberHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonObjectCreationHandling> <PreferredObjectCreationHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PropertyNameCaseInsensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonKnownNamingPolicy> <PropertyNamingPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonCommentHandling> <ReadCommentHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonUnknownTypeHandling> <UnknownTypeHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonUnmappedMemberHandling> <UnmappedMemberHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseStringEnumConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <WriteIndented>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<char> <IndentCharacter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <IndentSize>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [RequiredMemberAttribute]
public Nullable`1<JsonSourceGenerationMode> GenerationMode { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonSerializerDefaults> Defaults { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<bool> AllowOutOfOrderMetadataProperties { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<bool> AllowTrailingCommas { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<TypeRef> Converters { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<int> DefaultBufferSize { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonIgnoreCondition> DefaultIgnoreCondition { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonKnownNamingPolicy> DictionaryKeyPolicy { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<bool> IgnoreReadOnlyFields { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<bool> IgnoreReadOnlyProperties { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<bool> IncludeFields { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<int> MaxDepth { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonNumberHandling> NumberHandling { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonObjectCreationHandling> PreferredObjectCreationHandling { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<bool> PropertyNameCaseInsensitive { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonKnownNamingPolicy> PropertyNamingPolicy { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonCommentHandling> ReadCommentHandling { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonUnknownTypeHandling> UnknownTypeHandling { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonUnmappedMemberHandling> UnmappedMemberHandling { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<bool> UseStringEnumConverter { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<bool> WriteIndented { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<char> IndentCharacter { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<int> IndentSize { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private SourceGenerationOptionsSpec(SourceGenerationOptionsSpec original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<JsonSourceGenerationMode> get_GenerationMode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GenerationMode(Nullable`1<JsonSourceGenerationMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonSerializerDefaults> get_Defaults();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Defaults(Nullable`1<JsonSerializerDefaults> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowOutOfOrderMetadataProperties();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AllowOutOfOrderMetadataProperties(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowTrailingCommas();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AllowTrailingCommas(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<TypeRef> get_Converters();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Converters(ImmutableEquatableArray`1<TypeRef> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DefaultBufferSize();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DefaultBufferSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonIgnoreCondition> get_DefaultIgnoreCondition();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DefaultIgnoreCondition(Nullable`1<JsonIgnoreCondition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonKnownNamingPolicy> get_DictionaryKeyPolicy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DictionaryKeyPolicy(Nullable`1<JsonKnownNamingPolicy> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreReadOnlyFields();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IgnoreReadOnlyFields(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreReadOnlyProperties();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IgnoreReadOnlyProperties(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeFields();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IncludeFields(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxDepth();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MaxDepth(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonNumberHandling> get_NumberHandling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NumberHandling(Nullable`1<JsonNumberHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonObjectCreationHandling> get_PreferredObjectCreationHandling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PreferredObjectCreationHandling(Nullable`1<JsonObjectCreationHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_PropertyNameCaseInsensitive();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyNameCaseInsensitive(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonKnownNamingPolicy> get_PropertyNamingPolicy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyNamingPolicy(Nullable`1<JsonKnownNamingPolicy> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonCommentHandling> get_ReadCommentHandling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ReadCommentHandling(Nullable`1<JsonCommentHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonUnknownTypeHandling> get_UnknownTypeHandling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UnknownTypeHandling(Nullable`1<JsonUnknownTypeHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonUnmappedMemberHandling> get_UnmappedMemberHandling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UnmappedMemberHandling(Nullable`1<JsonUnmappedMemberHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseStringEnumConverter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UseStringEnumConverter(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_WriteIndented();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WriteIndented(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<char> get_IndentCharacter();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IndentCharacter(Nullable`1<char> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_IndentSize();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IndentSize(Nullable`1<int> value);
    public Nullable`1<JsonKnownNamingPolicy> GetEffectivePropertyNamingPolicy();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(SourceGenerationOptionsSpec left, SourceGenerationOptionsSpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(SourceGenerationOptionsSpec left, SourceGenerationOptionsSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(SourceGenerationOptionsSpec other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public SourceGenerationOptionsSpec <Clone>$();
}
internal static class System.Text.Json.SourceGeneration.SourceGeneratorHelpers : object {
    private static Char[] s_enumSeparator;
    private static SourceGeneratorHelpers();
    public static string FormatEnumLiteral(string fullyQualifiedName, TEnum value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[DebuggerDisplayAttribute("Type = {TypeRef.Name}, ClassType = {ClassType}")]
public class System.Text.Json.SourceGeneration.TypeGenerationSpec : object {
    [CompilerGeneratedAttribute]
private TypeRef <TypeRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeInfoPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSourceGenerationMode <GenerationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonPrimitiveTypeKind> <PrimitiveTypeKind>k__BackingField;
    [CompilerGeneratedAttribute]
private ClassType <ClassType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ImplementsIJsonOnSerialized>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ImplementsIJsonOnSerializing>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPolymorphic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValueTuple>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonNumberHandling> <NumberHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonUnmappedMemberHandling> <UnmappedMemberHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonObjectCreationHandling> <PreferredPropertyObjectCreationHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<PropertyGenerationSpec> <PropertyGenSpecs>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<int> <FastPathPropertyIndices>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<ParameterGenerationSpec> <CtorParamGenSpecs>k__BackingField;
    [CompilerGeneratedAttribute]
private ImmutableEquatableArray`1<PropertyInitializerGenerationSpec> <PropertyInitializerSpecs>k__BackingField;
    [CompilerGeneratedAttribute]
private CollectionType <CollectionType>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeRef <CollectionKeyType>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeRef <CollectionValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private ObjectConstructionStrategy <ConstructionStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConstructorSetsRequiredParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeRef <NullableUnderlyingType>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeRef <RuntimeTypeRef>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasExtensionDataPropertyType>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeRef <ConverterType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImmutableCollectionFactoryMethod>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [NullableAttribute("1")]
[RequiredMemberAttribute]
public TypeRef TypeRef { get; public set; }
    [NullableAttribute("1")]
[RequiredMemberAttribute]
public string TypeInfoPropertyName { get; public set; }
    [RequiredMemberAttribute]
public JsonSourceGenerationMode GenerationMode { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonPrimitiveTypeKind> PrimitiveTypeKind { get; public set; }
    [RequiredMemberAttribute]
public ClassType ClassType { get; public set; }
    [RequiredMemberAttribute]
public bool ImplementsIJsonOnSerialized { get; public set; }
    [RequiredMemberAttribute]
public bool ImplementsIJsonOnSerializing { get; public set; }
    [RequiredMemberAttribute]
public bool IsPolymorphic { get; public set; }
    [RequiredMemberAttribute]
public bool IsValueTuple { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonNumberHandling> NumberHandling { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonUnmappedMemberHandling> UnmappedMemberHandling { get; public set; }
    [RequiredMemberAttribute]
public Nullable`1<JsonObjectCreationHandling> PreferredPropertyObjectCreationHandling { get; public set; }
    [NullableAttribute("1")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<PropertyGenerationSpec> PropertyGenSpecs { get; public set; }
    [RequiredMemberAttribute]
public ImmutableEquatableArray`1<int> FastPathPropertyIndices { get; public set; }
    [NullableAttribute("1")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<ParameterGenerationSpec> CtorParamGenSpecs { get; public set; }
    [NullableAttribute("1")]
[RequiredMemberAttribute]
public ImmutableEquatableArray`1<PropertyInitializerGenerationSpec> PropertyInitializerSpecs { get; public set; }
    [RequiredMemberAttribute]
public CollectionType CollectionType { get; public set; }
    [RequiredMemberAttribute]
public TypeRef CollectionKeyType { get; public set; }
    [RequiredMemberAttribute]
public TypeRef CollectionValueType { get; public set; }
    [RequiredMemberAttribute]
public ObjectConstructionStrategy ConstructionStrategy { get; public set; }
    [RequiredMemberAttribute]
public bool ConstructorSetsRequiredParameters { get; public set; }
    [RequiredMemberAttribute]
public TypeRef NullableUnderlyingType { get; public set; }
    [RequiredMemberAttribute]
public TypeRef RuntimeTypeRef { get; public set; }
    [RequiredMemberAttribute]
public bool HasExtensionDataPropertyType { get; public set; }
    [RequiredMemberAttribute]
public TypeRef ConverterType { get; public set; }
    [RequiredMemberAttribute]
public string ImmutableCollectionFactoryMethod { get; public set; }
    [CompilerGeneratedAttribute]
[SetsRequiredMembersAttribute]
private TypeGenerationSpec(TypeGenerationSpec original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public TypeRef get_TypeRef();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeRef(TypeRef value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_TypeInfoPropertyName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeInfoPropertyName(string value);
    [CompilerGeneratedAttribute]
public JsonSourceGenerationMode get_GenerationMode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GenerationMode(JsonSourceGenerationMode value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonPrimitiveTypeKind> get_PrimitiveTypeKind();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PrimitiveTypeKind(Nullable`1<JsonPrimitiveTypeKind> value);
    [CompilerGeneratedAttribute]
public ClassType get_ClassType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ClassType(ClassType value);
    [CompilerGeneratedAttribute]
public bool get_ImplementsIJsonOnSerialized();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ImplementsIJsonOnSerialized(bool value);
    [CompilerGeneratedAttribute]
public bool get_ImplementsIJsonOnSerializing();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ImplementsIJsonOnSerializing(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPolymorphic();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsPolymorphic(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsValueTuple();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsValueTuple(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonNumberHandling> get_NumberHandling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NumberHandling(Nullable`1<JsonNumberHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonUnmappedMemberHandling> get_UnmappedMemberHandling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UnmappedMemberHandling(Nullable`1<JsonUnmappedMemberHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonObjectCreationHandling> get_PreferredPropertyObjectCreationHandling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PreferredPropertyObjectCreationHandling(Nullable`1<JsonObjectCreationHandling> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<PropertyGenerationSpec> get_PropertyGenSpecs();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyGenSpecs(ImmutableEquatableArray`1<PropertyGenerationSpec> value);
    [CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<int> get_FastPathPropertyIndices();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FastPathPropertyIndices(ImmutableEquatableArray`1<int> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<ParameterGenerationSpec> get_CtorParamGenSpecs();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CtorParamGenSpecs(ImmutableEquatableArray`1<ParameterGenerationSpec> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ImmutableEquatableArray`1<PropertyInitializerGenerationSpec> get_PropertyInitializerSpecs();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PropertyInitializerSpecs(ImmutableEquatableArray`1<PropertyInitializerGenerationSpec> value);
    [CompilerGeneratedAttribute]
public CollectionType get_CollectionType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CollectionType(CollectionType value);
    [CompilerGeneratedAttribute]
public TypeRef get_CollectionKeyType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CollectionKeyType(TypeRef value);
    [CompilerGeneratedAttribute]
public TypeRef get_CollectionValueType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CollectionValueType(TypeRef value);
    [CompilerGeneratedAttribute]
public ObjectConstructionStrategy get_ConstructionStrategy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConstructionStrategy(ObjectConstructionStrategy value);
    [CompilerGeneratedAttribute]
public bool get_ConstructorSetsRequiredParameters();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConstructorSetsRequiredParameters(bool value);
    [CompilerGeneratedAttribute]
public TypeRef get_NullableUnderlyingType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NullableUnderlyingType(TypeRef value);
    [CompilerGeneratedAttribute]
public TypeRef get_RuntimeTypeRef();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RuntimeTypeRef(TypeRef value);
    [CompilerGeneratedAttribute]
public bool get_HasExtensionDataPropertyType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HasExtensionDataPropertyType(bool value);
    [CompilerGeneratedAttribute]
public TypeRef get_ConverterType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ConverterType(TypeRef value);
    [CompilerGeneratedAttribute]
public string get_ImmutableCollectionFactoryMethod();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ImmutableCollectionFactoryMethod(string value);
    public bool IsFastPathSupported();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(TypeGenerationSpec left, TypeGenerationSpec right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(TypeGenerationSpec left, TypeGenerationSpec right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(TypeGenerationSpec other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public TypeGenerationSpec <Clone>$();
}
internal static class System.Text.Json.ThrowHelper : object {
    [DoesNotReturnAttribute]
public static void ThrowArgumentNullException(string parameterName);
}
